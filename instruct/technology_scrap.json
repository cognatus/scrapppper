[{"category": "", "description": "After buying a new car I realised that it didn't come with a CD player and my phone doesn't have the space for most of my music.\nThe car does have a USB slot to play music stored on a USB drive so I set about trying to find a cool one.\nI had the idea I wanted one that looked like a Cassette Tape, to bring back the memories of cassette tapes of road trips from my younger days.\nI set about google , amazon and ebay and all I could find were ones that didn't look right or wouldn't work with my cars setup. (pictures 3-5 show the ones that weren't right for me.)\nso I decided to make my own.\nThis Instructable is how I made my own USB Cassette.\nIf you Like this idea and this instructable please vote for me in the Pocket Sized contest. (button at the bottom of the instructable.)\nThank you for looking.", "title": "Micro Cassette USB Music Drive.", "url": "https://www.instructables.com/id/Micro-Cassette-USB-Music-Drive/", "section": "technology", "steps": [{"step": 1, "steps_text": "Tools.\n3D printer.\nBlade, scalpel, craft knife.\nMeasuring device, (I used some calipers, but a ruler will work too.)\nFiles, emery sticks, sand paper.\nPliers and snips\nComputer. (with graphics design software, its not essential though)\nMaterials.\nUSB Stick. ( I used a metal Kingston one with the hole in one end)\nMicro cassette. (MC-60 type are the ones I used.)\nSelf adhesive printable material. (you can use paper and double sided tape)\nThe list here is what i can remember I used, I may have left some out. Please read the whole instructable first incase ive missed out a important tool.\nThanks for reading.", "step_imgs": ["https://cdn.instructables.com/FO4/Z68V/JOIXXD01/FO4Z68VJOIXXD01.LARGE.jpg", "https://cdn.instructables.com/FFT/R4IG/H461OZJG/FFTR4IGH461OZJG.LARGE.jpg", "https://cdn.instructables.com/FMC/ESGX/H4AGJCD0/FMCESGXH4AGJCD0.LARGE.jpg", "https://cdn.instructables.com/FRX/YTBZ/H8RVC3A9/FRXYTBZH8RVC3A9.LARGE.jpg", "https://cdn.instructables.com/F3Z/9CVL/JTYNH2WP/F3Z9CVLJTYNH2WP.LARGE.jpg", "https://cdn.instructables.com/FNT/PFZX/JTYNH2VF/FNTPFZXJTYNH2VF.LARGE.jpg", "https://cdn.instructables.com/FVU/PA9F/JTYNH32Y/FVUPA9FJTYNH32Y.LARGE.jpg"], "step_title": "Step 1: Tools and Materials."}, {"step": 2, "steps_text": "Now is time to pop open your cassette tape.\nI used a fine bladed craft knife to slide in between the two halves of the tape cassette and pry them apart.\ngo slowly and bit by bit. the cassette should only be held together on the corners (mine were anyway) you will feel a little pop or snap when you have separated the glue or weld points.\nOnce you have it open remove all the insides.\nThere should be a thin 'packing' sheet on both sides of the tape reels. It could be clear or coloured, mine were coloured black. (see photo 4) you will need to keep them.", "step_imgs": ["https://cdn.instructables.com/F3Z/9CVL/JTYNH2WP/F3Z9CVLJTYNH2WP.LARGE.jpg", "https://cdn.instructables.com/FNL/I7YC/JTYNH1C7/FNLI7YCJTYNH1C7.LARGE.jpg", "https://cdn.instructables.com/F3M/GL7V/JTYNH13N/F3MGL7VJTYNH13N.LARGE.jpg", "https://cdn.instructables.com/F9D/HBRF/JTYNGXOI/F9DHBRFJTYNGXOI.LARGE.jpg"], "step_title": "Step 2: Opening the Cassette."}, {"step": 3, "steps_text": "Measure the size of the hole for the spools, the size of your USB drive and the height of your cassette.\nI did some sketches on how i thought the design for the spinning feature would work.\nall my measurements might be different to yours as you may have different brands of USB drives or tape cassettes.\n\nThe spool holes for my tape cassettes were 10.9mm and the height of the cassette was 8mm, the internal hole of my USB drive was 8.5mm and its thickness was 4.5mm\n\nI drew up a little two part design so i could push it into the hole in the USB drive and then close the cassette around the drive and it would be held in place by the cassette.", "step_imgs": ["https://cdn.instructables.com/F4U/23AQ/JTYNH2IL/F4U23AQJTYNH2IL.LARGE.jpg", "https://cdn.instructables.com/FRE/G6CS/JTYNGXZL/FREG6CSJTYNGXZL.LARGE.jpg", "https://cdn.instructables.com/FDE/QZOR/JTYNH2M5/FDEQZORJTYNH2M5.LARGE.jpg"], "step_title": "Step 3: Measuring the Space You Have Inside."}, {"step": 4, "steps_text": "Using the measurements of the USB and the cassette shell use a 3D modelling program (I used sketchup) to design the spool USB holder and the spool hole blank.\nexport these models ready for 3D printing.", "step_imgs": ["https://cdn.instructables.com/FLC/2VZH/JTYNCZRW/FLC2VZHJTYNCZRW.LARGE.jpg", "https://cdn.instructables.com/FGP/G8CI/JTYNCZQ0/FGPG8CIJTYNCZQ0.LARGE.jpg"], "step_title": "Step 4: 3D Model Your Spools and Supports."}, {"step": 5, "steps_text": "Once you have the designs done its time to print.\nI printed them at the finest quality and 100% infill. to get the best quality and strongest print i could.\nThese are only small prints and only took 20mins or so.\nOnce the printing had finished push the two parts together inside the USB drive. You can use a tiny dab of glue to hole it all together and stop the spool spinning inside the USB drive.\nThen Place it inside the cassette to make sure the USB drive fits inside.", "step_imgs": ["https://cdn.instructables.com/FOG/9ELR/JTYNH1GO/FOG9ELRJTYNH1GO.LARGE.jpg", "https://cdn.instructables.com/FNK/M8CW/JTYNGW32/FNKM8CWJTYNGW32.LARGE.jpg", "https://cdn.instructables.com/FQ8/AALC/JTYNGW3A/FQ8AALCJTYNGW3A.LARGE.jpg", "https://cdn.instructables.com/FHL/2IMW/JTYNH256/FHL2IMWJTYNH256.LARGE.jpg", "https://cdn.instructables.com/F0I/KW0O/JTYNH29Z/F0IKW0OJTYNH29Z.LARGE.jpg", "https://cdn.instructables.com/F0G/YS2S/JTYNH2BO/F0GYS2SJTYNH2BO.LARGE.jpg", "https://cdn.instructables.com/FED/6PT1/JTYNGWCL/FED6PT1JTYNGWCL.LARGE.jpg", "https://cdn.instructables.com/FN4/ZG1I/JTYNH3M6/FN4ZG1IJTYNH3M6.LARGE.jpg"], "step_title": "Step 5: 3D Print Your Parts."}, {"step": 6, "steps_text": "Now to trim the cassette tape shell so the USB drive can swivel out and be used in a computer or stereo (a car stereo in my case.)\nDo some test fits and see which parts the USB drive is/will hit when swiveled from its concealed position to its extended position.\nI did a little sketch (Left hand side of the pad in photo 3)\nUsing the pliers and snips remove all the up stands, pegs and other little bits. File or sand the bits left over to make sure its all smooth.\nFile the side walls down carefully, you dont want to snap the cassette shell. (I left a little too much on the side deliberately, this was so i could check that the USB swiveled out and looked correct, fine tune it to get the USB drive to flip out to the correct spot by test fitting all parts to see how far round it goes.)\nGlue the spool cover that goes in the second hole of the cassette shell. (make sure the glue is dry before putting the USB drive in, you dont want it to get glued inside.\nPlace the two 'packing sheets inside the halves and then glue the two halves of the cassette shell together with the USB drive inside the shell.\nA tiny dab on the three intact corners of the cassette and along the remaining walls.\nLet it all set. but make sure the USB drive moves freely inside the shell before the glue dries.", "step_imgs": ["https://cdn.instructables.com/FEG/IF1M/JTYNH2FP/FEGIF1MJTYNH2FP.LARGE.jpg", "https://cdn.instructables.com/FYY/KKHF/JTYNHLQN/FYYKKHFJTYNHLQN.LARGE.jpg", "https://cdn.instructables.com/F4U/23AQ/JTYNH2IL/F4U23AQJTYNH2IL.LARGE.jpg", "https://cdn.instructables.com/F2H/XM7S/JTYNH2R5/F2HXM7SJTYNH2R5.LARGE.jpg", "https://cdn.instructables.com/FTM/NEMC/JTYNGXSO/FTMNEMCJTYNGXSO.LARGE.jpg", "https://cdn.instructables.com/FEQ/FK8D/JTYNH364/FEQFK8DJTYNH364.LARGE.jpg"], "step_title": "Step 6: Trimming the Cassette"}, {"step": 7, "steps_text": "The cassette may have come with a nice little case.\nIm going to use it to store the USB cassette in when not in use.\nTo make it work you will need to trim and sand the spool pegs down, They normally go inside the tape spool holes to hold everything secure in the case, They will not be able to do that as you have blocked the holes with the USB drive.\nSee the photo of the trimmed case next to the original case.", "step_imgs": ["https://cdn.instructables.com/FBQ/FV9M/JTYNH3E6/FBQFV9MJTYNH3E6.LARGE.jpg", "https://cdn.instructables.com/FZO/9NVC/JTYNH399/FZO9NVCJTYNH399.LARGE.jpg"], "step_title": "Step 7: Trim the Cassette Case Spool Pegs."}, {"step": 8, "steps_text": "If you want to, you can just use the ones the tapes came with. If not you can make some new ones/\nTo do this you need to scan one of the existing labels or the space the label will go into.\nDraw a template or cutline for the label and this will be what you use to make your designs.\nI looked at designs of tapes from when I was a kid and tried to replicate them on a smaller scale. you can make them however you want.\nAdd little fun details like the size of the USB stick or a USB logo. Make as many as you like and choose the ones you like best or just make one and put it on both sides, its totally up to you.", "step_imgs": ["https://cdn.instructables.com/FZW/MEGZ/JTYNCZQY/FZWMEGZJTYNCZQY.LARGE.jpg", "https://cdn.instructables.com/F2Z/NFEC/JTYNCZSU/F2ZNFECJTYNCZSU.LARGE.jpg", "https://cdn.instructables.com/FDK/6XV5/JTYNCZJN/FDK6XV5JTYNCZJN.LARGE.jpg"], "step_title": "Step 8: Design the Label (optional)"}, {"step": 9, "steps_text": "Print the retro designs on to some printable adhesive material. I have use of a vinyl printer/plotter.\nI printed a few designs and cut them out using the plotter. (these were laminated to protect the designs, this is not necessary as the wear and tear of the labels will add to the retro vibes)", "step_imgs": ["https://cdn.instructables.com/F1V/7P9J/JU31QUPJ/F1V7P9JJU31QUPJ.LARGE.jpg", "https://cdn.instructables.com/FK0/HX8B/JTYNH3IW/FK0HX8BJTYNH3IW.LARGE.jpg", "https://cdn.instructables.com/F5X/X3K3/JTYNH3NP/F5XX3K3JTYNH3NP.LARGE.jpg", "https://cdn.instructables.com/FE1/WO4X/JTYNH3QV/FE1WO4XJTYNH3QV.LARGE.jpg", "https://cdn.instructables.com/FHT/D9E2/JTYNH3PA/FHTD9E2JTYNH3PA.LARGE.jpg", "https://cdn.instructables.com/FQG/ANFI/JTYNH3UB/FQGANFIJTYNH3UB.LARGE.jpg", "https://cdn.instructables.com/F58/Z63U/JTYNH3SJ/F58Z63UJTYNH3SJ.LARGE.jpg"], "step_title": "Step 9: Print the Labels. (optional)"}, {"step": 10, "steps_text": "Once you have your USB tape cassette its time to use it.\nI put some music onto it to use in my car.\nI transferred a selection of music onto the USB cassette and popped it into my car.\nI made a couple of USB cassettes so i could give one to my wife to put her music on so we can have a choice when we are in the car. It also brings back the memories or rifling through tape cassettes when on road trips of my youth.\nUsing the case the Micro Cassettes came in will do a couple of things. One) protect the one you are not using at any one time. Two) allows you to put labels on them so you know whats on the cassettes or who owns it. Three)it looks cool. :)\nif you have any questions please ask and I will do my best to answer them.\nIf you make one post a 'I made this' thing. I would love to see them.\nThank you for looking at my instructable.", "step_imgs": ["https://cdn.instructables.com/FIQ/BM3C/JTYNHCYY/FIQBM3CJTYNHCYY.LARGE.jpg", "https://cdn.instructables.com/F0E/N5GK/JTYNHD79/F0EN5GKJTYNHD79.LARGE.jpg", "https://cdn.instructables.com/F2T/F049/JTYNHDHE/F2TF049JTYNHDHE.LARGE.jpg", "https://cdn.instructables.com/FM3/US8H/JTYNHDX9/FM3US8HJTYNHDX9.LARGE.jpg", "https://cdn.instructables.com/F5Y/ZLVN/JTYNHIZD/F5YZLVNJTYNHIZD.LARGE.jpg", "https://cdn.instructables.com/FW5/O8ZC/JTYNHIQH/FW5O8ZCJTYNHIQH.LARGE.jpg"], "step_title": "Step 10: Final Item."}], "channel": ""}, {"category": "", "description": "This DIY sensor will take the form of a conductive knitted stretch sensor. It will wrap around your chest/stomach, and when your chest/stomach expands and contracts so will the sensor, and consequently the input data that is fed to the Arduino. So keep in mind this isn't a totally accurate way to track every breath, and sometimes the movements of the body can influence the sensor to since it is all about how it stretches. Also, in terms of stability, I've found the range of numbers can jump around quite a bit if the sensor doesn't remain a consistent tightness around the body, but if you are just standing and breathing it is pretty accurate/sensitive at picking up the slight expansion of the chest for each breath.\nThere are quite a few DIY breath sensors I've found while researching on the internet, but they do not have all the specific information needed to get one made and connected to the Arduino yourself. Here are some of those sources I've pieced together to give you the full story in this tutorial:\nhttp://www.kobakant.at/DIY/?p=1762\nhttp://cargocollective.com/nelramon/i-Breathe\nhttps://hackingthebody.wordpress.com/2014/01/03/bluetooth-stretch-breath-sensor/\nhttp://itp.nyu.edu/~ek1669/blog/?p=769\nPlease Note: I am only a novice of electricity/circuits/arduino/coding, so I welcome any suggestions or corrections if you find any!", "title": "DIY Breath Sensor With Arduino (Conductive Knitted Stretch Sensor)", "url": "https://www.instructables.com/id/DIY-Breath-Sensor-with-Arduino-Conductive-Knitted-/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials/Tools:\nA spool of conductive yarn (I bought this kind from Sparkfun: https://www.sparkfun.com/products/12806) (UPDATE: Looks like they retired it, so this should work from Adafruit: https://www.adafruit.com/product/603 )\nA spool of elastic yarn, I used the brand HiKoo CoBaSi (I found that yarn with some stretch is better because this sensor relies on being able to expand and contract. If you use stiff yarn, the sensor won't expand and contract as well)\nVelcro ( about 6 inches... can be multiple smaller parts, it is used for securing the sensor around yourself)\nNormal sewing thread (~1 yard)\nKnitting needles (I used size: 5)\nSewing needle\nResistor Kit (x1) (A range of different resistors is needed, the one you need depends on how long your band is, and the tightness of the stitches. I don't think you'll need one smaller than 10k though. Changing the levels of resistance changes the output numbers found in the serial monitor)\nAlligator clips (x2)\nJumper Cables (x7)\nArduino Uno\nComputer (PC or MAC)\nUSB A to B cable\nVolt meter\nBread board", "step_imgs": ["https://cdn.instructables.com/F01/CHVW/IAGMK5RY/F01CHVWIAGMK5RY.LARGE.jpg", "https://cdn.instructables.com/FF8/18BV/IAI1PV1I/FF818BVIAI1PV1I.LARGE.jpg", "https://cdn.instructables.com/F1B/NH8Z/IAGMK5U2/F1BNH8ZIAGMK5U2.LARGE.jpg"], "step_title": "Step 1: Materials and Tools"}, {"step": 2, "steps_text": "Begin by knitting a 2\" wide band combining both the conductive yarn and elastic yarn.\nKnit with the conductive and elastic yarn as if it was one piece of yarn!\nYou can use a standard stitch. My band was 10 stitches across and about 30 inches long.\nIf you don't know how to knit, Youtube is your friend. :) **Tip: Find videos that are specific to your dominant hand. This one helped me: https://www.youtube.com/watch?v=b21msW3cS34", "step_imgs": ["https://cdn.instructables.com/FGG/I4HI/IAGMK5V6/FGGI4HIIAGMK5V6.LARGE.jpg", "https://cdn.instructables.com/FM1/V5RH/IAGMK5WQ/FM1V5RHIAGMK5WQ.LARGE.jpg"], "step_title": "Step 2: Knit"}, {"step": 3, "steps_text": "On one end of your knitted band sew a few inches of Velcro (I recommend using the hard/pokey Velcro half).", "step_imgs": ["https://cdn.instructables.com/FGA/JB79/IAGMK5Z5/FGAJB79IAGMK5Z5.LARGE.jpg", "https://cdn.instructables.com/F3D/NM1Z/IAGMK5ZQ/F3DNM1ZIAGMK5ZQ.LARGE.jpg"], "step_title": "Step 3: Sew Velcro to Your Knitted Band"}, {"step": 4, "steps_text": "Flip over your band and sew the other matching velcro (the soft half, if you used the hard half on the other side) onto the other end of your knitted band. You'll want the length of this velcro to be a bit longer, approx. 7 inches.\n*** Before you sew make sure when you wrap the band around yourself the velcro halves match up!", "step_imgs": ["https://cdn.instructables.com/FV0/5A9B/IAGMK60K/FV05A9BIAGMK60K.LARGE.jpg", "https://cdn.instructables.com/FFA/6OIS/IAGMK62C/FFA6OISIAGMK62C.LARGE.jpg", "https://cdn.instructables.com/FW2/HE7U/IAGMK63T/FW2HE7UIAGMK63T.LARGE.jpg"], "step_title": "Step 4: Sew More Velcro"}, {"step": 5, "steps_text": "Use the photos on this step to wire up your Arduino to the sensor.\nAttach 2 alligator clips to the knitted band, one on each end. The amount of stretch will only be measured between these 2 points. ** Be sure to clip the band securely and choose a spot where a lot of the conductive yarn is exposed, it is essential for the conductive yarn and metal clip to make contact (I've tried to check this connection with the Volt Meter, but I've found even if it is working it doesn't necessarily show that it is on the Volt Meter, I recommend wiring up the whole circuit and then seeing what the numbers look like in your serial monitor to see if it is working) **\nUse this Analog Input Tutorial provided by Arduino to help wire up your circuit. (Just substitute the photosensitive resistor with the knitted band + alligator clips, and it's the exact diagram/schematic you need).", "step_imgs": ["https://cdn.instructables.com/FBH/PAL5/IAHPD36P/FBHPAL5IAHPD36P.LARGE.jpg", "https://cdn.instructables.com/FR6/MEC0/IAHPD36Q/FR6MEC0IAHPD36Q.LARGE.jpg", "https://cdn.instructables.com/FQF/8DGB/IAI1PVD3/FQF8DGBIAI1PVD3.LARGE.jpg", "https://cdn.instructables.com/FLH/CXHA/IAI1PVDX/FLHCXHAIAI1PVDX.LARGE.jpg", "https://cdn.instructables.com/FBP/CLG8/IAI1PVE0/FBPCLG8IAI1PVE0.LARGE.jpg"], "step_title": "Step 5: Build the Circuit"}, {"step": 6, "steps_text": "If you've never used Arduino before please refer to this \"getting started\" page and download the Arduino Software (it's free!).\nOnce you have the software downloaded on your computer, open up the program and follow these steps:\nOpen up the \"AnalogReadSerial\" sketch. (File>Examples>Basics>ReadAnalogSerial).\nConnect the Arduino Uno (and attached circuit) to your computer via the USB A to B cable.\nClick \"Upload\" icon (looks like an arrow) in the sketch box (Make sure the correct board (Arduino Uno) and Serial port are selected under \"Tools\").\nKeep the Arduino connected to the computer and then click the \"Serial Monitor\" icon (Looks like a magnifying glass)\nThis should open a box called the serial monitor, and you should see a stream of numbers. Stretch the sensor and watch the numbers change!\nTROUBLE SHOOTING TIPS IF YOU DON'T SEE A STREAM OF NUMBERS:\nIf you don't see any numbers or see a series of weird characters make sure that the baud rate is set to 9600 within the serial monitor drop down menu\nMake sure all your connections are secure\nTry a different level of resistor\nTry clipping the alligator clips to a smaller section of your knitted band. If the conductive yarn is broken at some point between the alligator clips it won't work.", "step_imgs": ["https://cdn.instructables.com/FOB/6MMF/IAHPD36H/FOB6MMFIAHPD36H.LARGE.jpg", "https://cdn.instructables.com/FIE/PB8H/IAHPD36K/FIEPB8HIAHPD36K.LARGE.jpg", "https://cdn.instructables.com/FVA/4D0K/IAHPD36L/FVA4D0KIAHPD36L.LARGE.jpg", "https://cdn.instructables.com/F9G/BERQ/IAHPD3XL/F9GBERQIAHPD3XL.LARGE.jpg"], "step_title": "Step 6: Upload the Arduino Code to the Arduino"}, {"step": 7, "steps_text": "Wrap it around yourself and monitor the numbers while you breath! You may need to try different resistors to get the right range of numbers that work for your specific project.\nExperiment putting the band round different areas of your chest/stomach. You'll probablly need longer wires than the alligator clips once it is around yourself. I think it works best under your clothes, or on top of unbaggy clothes.\nNow you can take this code and sensor and modify it however you want, and apply it in a lot of different ways!\nExample idea: Make an LED change brightness with each breath.", "step_imgs": ["https://cdn.instructables.com/FN5/FVS5/IAHPD9VQ/FN5FVS5IAHPD9VQ.LARGE.jpg"], "step_title": "Step 7: Test It Out!"}], "channel": ""}, {"category": "", "description": "Fused-Filament Fabrication (FFF) or Fused-Deposition Modeling (FDM) -\"3D Printing\"- create amazing parts, but generally with visible layers. There are two main methods for smoothing those layers to obtain an injection-molded plastic look: chemical-smoothing or sanding. Chemical-smoothing is dangerous as it involves toxic and highly flammable chemicals, and sanding takes patience and well-toned hand muscles or skill with a Dremel.\nAs an alternative to these two methods, I looked to polymer clay as another form of smoothing.\n\nMy conclusion:\nApplying the clay takes patience and a little skill (with the help of \"tools\"). Depending on your level of sanding skill, applying the clay can take longer or shorter than sanding. With regards to toxicity, I'd say it's safer than chemical smoothing, but I still suggest using ventilation and a non-food-used oven when baking it.\nA major downside is the tendency for the part to shrink during the baking process. This has to be taken into consideration when creating fitted parts. The upside, is that this process can aid in attaching separate parts together permanently and can fix defects that the other two process cannot.\nFor me, this is my preferred method for smoothing, as I can apply the clay while watching TV and not have to worry about concentrating too hard (whereas with a Dremel, you need to pay close attention to what you are doing). If I get better at sanding, I may decide that applying clay is too long of a process.\nCredit:\nThe files used to illustrate the process can be found here:\nGolbat Wall Sconce by WeeksB (me) https://www.thingiverse.com/thing:3381571\nPumpkisaur Pokemon by chicagolandgeeks https://www.thingiverse.com/thing:1845663\nBulbasaur Pumpkin Tealight Remix by Blackhartfilms https://www.thingiverse.com/thing:3169901", "title": "3D Print Smoothing - Polymer Clay", "url": "https://www.instructables.com/id/3D-Print-Smoothing-Polymer-Clay/", "section": "technology", "steps": [{"step": 1, "steps_text": "Print out your desired model. This can be done on your own printer, a friend's printer, or you could use one of the many services to get files printed for you. Assemble the parts, if necessary, using your preferred form of bonding.\nDepending on the file, and the skill of the printer operator, you may find defects in your print.\nCertain defects and unwanted appearances can be solved by the polymer clay smoothing method:\nLayer lines (shown on the printed wing and assembled Golbat)\nSagging (shown on the jack-o-lantern)\nPitting\nSeam lines\nAssembly gaps\nSome incomplete or broken parts (this depends on your skills at molding clay)\nNote: Warped, distorted, or severely incomplete parts might be able to be \"fixed\" with the clay, but will likely require strong clay modeling skills and rely on sections made of solid clay.", "step_imgs": ["https://cdn.instructables.com/F6X/I5D8/JTYNH2X2/F6XI5D8JTYNH2X2.LARGE.jpg", "https://cdn.instructables.com/F0D/GSCU/JTYNGU9D/F0DGSCUJTYNGU9D.LARGE.jpg", "https://cdn.instructables.com/F9Y/ZLH9/JTYNGU76/F9YZLH9JTYNGU76.LARGE.jpg"], "step_title": "Step 1: 3D Print the Model"}, {"step": 2, "steps_text": "Tools:\nPolymer Modeling Clay\nClay Sculpting Tools\nI personally used white Craft smart Polymer Clay and just a metal spoon and a toothpick as my sculpting tools. The spoon helped me smooth and spread out the layer of clay and the toothpick allowed me to get small details, both by putting clay into tight spots and removing excess. With proper sculpting tools, like dental picks, a faster, better job can likely be performed, but are not necessary.\n\nWhen applying the clay, aim to get only enough clay onto the part to feel smooth to the touch when you brush your fingers over the part. The images are shown with the thin layer of clay they were baked with - you don't need a thick layer. I did not cover the bottom of any my parts with clay nor the inside of the jack-o-lantern so you do not need to completely cover the object in clay, just the areas you want smoothed.\nYou can also use the clay to build up missing sections, cover unwanted defects like seams or gaps in joined parts, or you add your own creative touches and features to the part. Be sure to remove any excess material that might soften or eliminate features.\nWork under the assumption that \"what you see is what you get.\" Meaning, that any non-visible features will remain not-visible, and any rough surfaces (or fingerprints!) will remain after baking. So, get the part as smooth and well defined as you can.\nTip: I found the clay to be rather crumbly at a \"room temp\" of 60\u02daF. A little heat, helps softens and makes the clay more malleable.", "step_imgs": ["https://cdn.instructables.com/FAA/E4PC/JTYNGUDQ/FAAE4PCJTYNGUDQ.LARGE.jpg", "https://cdn.instructables.com/F0Y/RU3I/JTYNGUJG/F0YRU3IJTYNGUJG.LARGE.jpg", "https://cdn.instructables.com/FQJ/58IF/JTYNGUJN/FQJ58IFJTYNGUJN.LARGE.jpg", "https://cdn.instructables.com/F5V/7Q3O/JTYNGUK1/F5V7Q3OJTYNGUK1.LARGE.jpg", "https://cdn.instructables.com/FJ8/BI8D/JTYNGUGI/FJ8BI8DJTYNGUGI.LARGE.jpg"], "step_title": "Step 2: Apply a Layer of Polymer Modeling Clay"}, {"step": 3, "steps_text": "Tools:\nOven (PLA: <170\u02daF / 77\u02daC ~ ABS: <190\u02daF / 87\u02daC)\nBaking sheet or aluminum foil\nPlace your part on a baking sheet/aluminum foil and, if you have multiple parts, spread them out so that they are not touching. Start with 30 minutes and check the parts often. Leave the parts in until they feel slightly hard.\nNote: Your parts will shrink slightly, especially if they were printed with a low infill. Adjust accordingly.\nLearn from My Mistake: Craft smart recommends baking at 275\u02daF (135\u02daC) but I found that this was much too hot for PLA. 275\u02daF is above the glass temperature and the PLA quickly becomes soft at this temperature. The top of my Golbat (shown) was baked at 275\u02daF for a fraction of their recommended time (10 minutes), and resulted in very noticeable dips in the surface. I had to re-coat the entire model in clay and re-bake at the lower temperature.\nBake Temps: Bake the parts at no more than 170\u02daF (77\u02daC) for PLA-based parts. - If you have an oven that can be set lower, PLA glass temperature is about 140\u02daF (60\u02daC) so I recommend trying 135\u02daF (57\u02daC). ABS's glass temperature is about 212\u02daF (100\u02daC), so 190\u02daF (87\u02daC) should work well.\nSafety: Polymer clay is stated as being safe, but I noticed a distasteful off-gassing smell when baking. I highly recommend using good ventilation and an oven that is not used to cook food. I also used single-use aluminum foil instead of a reusable cooking sheet for this reason.", "step_imgs": ["https://cdn.instructables.com/FYN/QONA/JTYNGUJW/FYNQONAJTYNGUJW.LARGE.jpg"], "step_title": "Step 3: Bake"}, {"step": 4, "steps_text": "Tools:\nPaints\nPaint brushes\nPallet\nYou might find you like the stone-appearance of the clay if you applied it thickly, but most likely, you wanted to smooth your part so that you could paint it. I've found that the clay works fairly well as a base layer for painting, but if you want to be certain, add a base coat of Primer first. I used acrylic paints very successfully for my models and sealed the paints with a top coat of clear satin spray paint.\nNote: The image with the Golbats, shows the difference between a painted part that had been smoothed first (bottom - grey) and a part that was not smoothed first (blue - top)", "step_imgs": ["https://cdn.instructables.com/F2M/42GM/JTYNGUKW/F2M42GMJTYNGUKW.LARGE.jpg", "https://cdn.instructables.com/FC9/J1OI/JTYNGUL2/FC9J1OIJTYNGUL2.LARGE.jpg", "https://cdn.instructables.com/FKG/JNE1/JTYNGULA/FKGJNE1JTYNGULA.LARGE.jpg", "https://cdn.instructables.com/F1M/VUYE/JTYNGULE/F1MVUYEJTYNGULE.LARGE.jpg", "https://cdn.instructables.com/FHN/M95H/JTYNGUZI/FHNM95HJTYNGUZI.LARGE.jpg"], "step_title": "Step 4: Paint"}], "channel": ""}, {"category": "", "description": "Hi, in this Instructable we will learn how to make a Musical Painting Canvas, that is, a different song sounds every time we color with a brush of each color. This is very fun and works to encourage painting in young children or also to give a special character to each tone of the work.", "title": "Musical Painting Canvas With Makey Makey", "url": "https://www.instructables.com/id/Musical-Painting-Canvas-With-Makey-Makey/", "section": "technology", "steps": [{"step": 1, "steps_text": "Tape of any kind, I used electrical tape\nFour brushes\nFour paintings of different color\nFive thin and long cables (1.5 m)\nSix cayman-type cables - alligator\nPaper sheet\nSmall towel\nA Makey Makey\nScissors", "step_imgs": ["https://cdn.instructables.com/F5X/Y14E/JTYNCORX/F5XY14EJTYNCORX.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "Peel the ends of the 5 thin cables, for this an alligator-alligator cable is used as shown in the photos.", "step_imgs": ["https://cdn.instructables.com/F7E/N1GQ/JTYNCKG9/F7EN1GQJTYNCKG9.LARGE.jpg", "https://cdn.instructables.com/FEM/XV2Q/JTYNCKHJ/FEMXV2QJTYNCKHJ.LARGE.jpg", "https://cdn.instructables.com/F5F/DAMG/JTYNCKHX/F5FDAMGJTYNCKHX.LARGE.jpg"], "step_title": "Step 2: Strip Cables"}, {"step": 3, "steps_text": "In order for the brushes to work with the Makey Makey, we must connect them to one end of each thin wire. Insert one end of the cable into the tip of the brush and then secure it with tape. We repeat the process with the 4 brushes.", "step_imgs": ["https://cdn.instructables.com/FJN/UBS4/JTYNCKHZ/FJNUBS4JTYNCKHZ.LARGE.jpg", "https://cdn.instructables.com/FTJ/MERR/JTYNCKJ9/FTJMERRJTYNCKJ9.LARGE.jpg", "https://cdn.instructables.com/F4G/9BB7/JTYNCKJL/F4G9BB7JTYNCKJL.LARGE.jpg", "https://cdn.instructables.com/FC9/F9BC/JTYNCKNQ/FC9F9BCJTYNCKNQ.LARGE.jpg"], "step_title": "Step 3: Wiring the Brushes"}, {"step": 4, "steps_text": "At the other ends of the thin wires, connect the 6 alligator - alligator cables and secure them with tape.", "step_imgs": ["https://cdn.instructables.com/FNO/697Q/JTYNCKO2/FNO697QJTYNCKO2.LARGE.jpg", "https://cdn.instructables.com/FW4/8P2S/JTYNCKTR/FW48P2SJTYNCKTR.LARGE.jpg", "https://cdn.instructables.com/FRX/BCBF/JTYNCKU7/FRXBCBFJTYNCKU7.LARGE.jpg", "https://cdn.instructables.com/F3V/ZV49/JTYNCKWH/F3VZV49JTYNCKWH.LARGE.jpg"], "step_title": "Step 4: Connect the Alligator -alligator Cables"}, {"step": 5, "steps_text": "Connect the 4 alligator - alligator cables of the brushes to the 4 arrows of the Makey Makey. Connect the remaining cable to the ground of the Makey Makey.", "step_imgs": ["https://cdn.instructables.com/FKM/9GOH/JTYNCKYQ/FKM9GOHJTYNCKYQ.LARGE.jpg", "https://cdn.instructables.com/FY9/WHMW/JTYNCL6Z/FY9WHMWJTYNCL6Z.LARGE.jpg"], "step_title": "Step 5: Connections to the Makey Makey"}, {"step": 6, "steps_text": "First, locate the sheet of paper on which you are going to paint, you can attach it with tape to the surface.\nThen, locate the screen where you will see the videos and listen to the music (Tablet, cell phone, PC or TV) close to the canvas to paint.\nFinally, connect the ground Makey Makey to the sheet of paper and connect the Makey Makey to the tablet, phone or PC.", "step_imgs": ["https://cdn.instructables.com/F2W/QBY5/JTYNCLNH/F2WQBY5JTYNCLNH.LARGE.jpg", "https://cdn.instructables.com/F52/DZN1/JTYNCM1X/F52DZN1JTYNCM1X.LARGE.jpg", "https://cdn.instructables.com/FXW/GKSH/JTYNCLFD/FXWGKSHJTYNCLFD.LARGE.jpg", "https://cdn.instructables.com/FC1/SGAX/JTYNCLUG/FC1SGAXJTYNCLUG.LARGE.jpg", "https://cdn.instructables.com/FJX/PUHM/JTYNCLGI/FJXPUHMJTYNCLGI.LARGE.jpg"], "step_title": "Step 6: Set Up the Workspace (for Children and Adults)"}, {"step": 7, "steps_text": "For the project to work, you must wet the sheet of paper with water, for this we use a small towel.", "step_imgs": ["https://cdn.instructables.com/F0C/AJOK/JTYNCLD3/F0CAJOKJTYNCLD3.LARGE.jpg", "https://cdn.instructables.com/FGZ/HF9X/JTYNCLXN/FGZHF9XJTYNCLXN.LARGE.jpg"], "step_title": "Step 7: Wet the Sheet of Paper"}, {"step": 8, "steps_text": "I made an app in Unity for PC or Android, you must download and install the application on your device for the project to work.", "step_imgs": ["https://cdn.instructables.com/FQ1/B609/JTYNCULG/FQ1B609JTYNCULG.LARGE.jpg"], "step_title": "Step 8: Install the App"}, {"step": 9, "steps_text": "When we get to this step we can already paint on our canvas!\nEvery time we paint with a different brush it will change the song that sounds.\nNote:\nThe brush connected to the arrow pointing upwards should be yellow.\nThe brush connected to the arrow pointing down must be blue.\nThe brush connected to the arrow pointing to the left should be red.\nThe brush connected to the arrow pointing to the right should be green.\nI hope that you all enjoyed this Instructable! Thanks for reading and watching.\nIv\u00e1n.", "step_imgs": ["https://cdn.instructables.com/FZJ/GOVN/JTYNCLQM/FZJGOVNJTYNCLQM.LARGE.jpg", "https://cdn.instructables.com/F4Y/MV4H/JTYNCM9N/F4YMV4HJTYNCM9N.LARGE.jpg", "https://cdn.instructables.com/F5K/2F0L/JTYNCME3/F5K2F0LJTYNCME3.LARGE.jpg"], "step_title": "Step 9: Paint and Enjoy"}], "channel": ""}, {"category": "", "description": "I have been working on converting my bicycle to an electric one using a DC motor for automatic door mechanism and for that I have also made a battery pack thats rated at 84v DC.\nNow we need a speed controller that can limit the amounbt of energy delivered to the motor from the battery pack. Most of the speed controller avliable online are not rated for that much high voltage so I decided to built one for myself. So thats whats this project is going to be, to design and built a customized PWM speed controller to controll the speed of large scale DC motors.", "title": "DIY 2000 Watts PWM Speed Controller", "url": "https://www.instructables.com/id/DIY-PWM-SPEED-CONTROLLER/", "section": "technology", "steps": [{"step": 1, "steps_text": "For this project you need basic soldering tools such as:\nA soldering iron\nSucker\nPliers and twizzers\nThe schematic, Gerber files and the list of comonents is avliable here.", "step_imgs": ["https://cdn.instructables.com/FAS/0BEG/JTENF9A8/FAS0BEGJTENF9A8.LARGE.jpg", "https://cdn.instructables.com/FOC/VJ8R/JTENEKA7/FOCVJ8RJTENEKA7.LARGE.jpg", "https://cdn.instructables.com/FGT/AA5E/JTENEKBF/FGTAA5EJTENEKBF.LARGE.jpg", "https://cdn.instructables.com/F1C/HKUR/JTENEKD8/F1CHKURJTENEKD8.LARGE.jpg", "https://cdn.instructables.com/FRL/O94B/JTENEKDI/FRLO94BJTENEKDI.LARGE.jpg"], "step_title": "Step 1: Tools Materials and Skills"}, {"step": 2, "steps_text": "Since we are aiming to con trol the speed of a DC motor for which we can use two techinquies, A buck converter which will stepdown the input voltage buts its a rather complicated one so what we have decided to go with is PWM Control (Pulse Width Modulation). The approach is simple, to control the speed the battery power is switched on and off at a high frequency. To change the speed the duty cycle or the on off time period of the switch is changed.\nNow mechanical switches are not expected to undergo such high stress so an appropriate choice for such application is an N-Channel Mosfet that are specifically made to handle moderate amount of current at high frequency.\nTo switch the mosfets we need a PWM signal which is produced by a 555 timer IC and the duty cycle of the switching signal is varied using a 100k potentiometer.\nSince we cant operate 555 timer above 15v so we incorporated a lm5008 Buck converter IC which steps down the input voltage from 84VDC to 10VDC which is used to power the timer IC and the cooling fan.\nNow to handle the large amount of current, I have used four N-Channel Mosfets that are connected in parallel.\nBesided that I have added all the complimentary components as described in the datasheets.", "step_imgs": ["https://cdn.instructables.com/FQS/FPXQ/JTYNG70F/FQSFPXQJTYNG70F.LARGE.jpg", "https://cdn.instructables.com/FCQ/XR2G/JTYNG7H8/FCQXR2GJTYNG7H8.LARGE.jpg", "https://cdn.instructables.com/FZ1/ZCMY/JTYNG7HD/FZ1ZCMYJTYNG7HD.LARGE.jpg", "https://cdn.instructables.com/FS0/CBSS/JTYNG7HI/FS0CBSSJTYNG7HI.LARGE.jpg"], "step_title": "Step 2: Designing the Speed Controller"}, {"step": 3, "steps_text": "As I finished the schematic I have decided to go with designing a dedicated PCB for the speed controller as it will not only help us to keep everything neat but I intended to design this unit so thats its capable of further modifications for my other DIY projects that uses large DC motors.\nThe idea of designing a PCB might seems to take a whole lot of efforts but believe me it worth that all when you get your hands on customized boards. So with that in mind I designed the PCB for the speed controller unit. Always try to define particular regions such as the control circuitry and the power on the other side so that when you are connecting everything together you are good to go with appropriate track width specially on the power side.\nI have also added four mounting holes which will be helpful to mount the controller and also hold the colling fan along with the heat sink above the MOSFETs.", "step_imgs": ["https://cdn.instructables.com/FHV/0IEA/JTYNG71I/FHV0IEAJTYNG71I.LARGE.jpg", "https://cdn.instructables.com/FJ2/71QY/JTYNG70I/FJ271QYJTYNG70I.LARGE.jpg", "https://cdn.instructables.com/FYK/8157/JTYNG71E/FYK8157JTYNG71E.LARGE.jpg"], "step_title": "Step 3: Designing the Printed Circuit Boards"}, {"step": 4, "steps_text": "Unlike any other customized part for your DIY Project, PCBs are surely the easiest one to get. Yes Now once we generated gerber files of our finilized PCB layout we are jjust a few clicks away from ordering our customized PCBs.\nWhat all I did is to head upto PCBWAY and after going through a bunch of options there I uploaded my gerber files. Once the deisgn is checked for any errors by their techinical team your design is forwarded to the manufacturing line. The whole process will take two days to completa and hopefully you will get your PCBs within ust a week.\nPCBWAY have made this project possible by their support so take your time and have a look at their website. They are offering Standard PCB, Quick-turn PCB, SMD etc so for discounts of upto 30% on your PCBs visit this link.\nGerber files,schematic and the BOM(Bill Of Material) for the speed controller PCB is avliable here.", "step_imgs": ["https://cdn.instructables.com/F44/9XOB/JTYNGD55/F449XOBJTYNGD55.LARGE.jpg", "https://cdn.instructables.com/F6F/CRNA/JTYNGD6Q/F6FCRNAJTYNGD6Q.LARGE.jpg", "https://cdn.instructables.com/FSY/EMAM/JTYNGD9S/FSYEMAMJTYNGD9S.LARGE.jpg", "https://cdn.instructables.com/FVC/P9AR/JTENEKAL/FVCP9ARJTENEKAL.LARGE.jpg", "https://cdn.instructables.com/FYV/IPR8/JTENEKAA/FYVIPR8JTENEKAA.LARGE.jpg"], "step_title": "Step 4: Ordering the PCBs"}, {"step": 5, "steps_text": "As expected the PCBs arrived within a week and the finish is just too good. The quality of the PCBs is absolutely flawless. Now time to gather all the components as mentioned in the BOM(Bill of Material) and drop them in place.\nTo keep things flowing we need to start with the smallest component on the PCB which in our case is LM5008 Buck converter, an SMP component. Once we sottered it using soldering braid as we dont have a hot gun to deal with SMD component, we than sottered the inductor next to it and moved towards larger components.\nOnce we are done assembling the boards, Its time to drop the 555 timer in place with the notch in correct direction.", "step_imgs": ["https://cdn.instructables.com/FXF/N8AM/JTENEKAH/FXFN8AMJTENEKAH.LARGE.jpg", "https://cdn.instructables.com/FWM/BEVM/JTENEKDE/FWMBEVMJTENEKDE.LARGE.jpg", "https://cdn.instructables.com/FMD/TXEO/JTENEKEB/FMDTXEOJTENEKEB.LARGE.jpg", "https://cdn.instructables.com/F7C/9K0T/JTENEKEF/F7C9K0TJTENEKEF.LARGE.jpg", "https://cdn.instructables.com/FRS/JL3R/JTENEKEM/FRSJL3RJTENEKEM.LARGE.jpg", "https://cdn.instructables.com/FEV/31T3/JTENEKET/FEV31T3JTENEKET.LARGE.jpg", "https://cdn.instructables.com/F1K/UWTU/JTENEKF0/F1KUWTUJTENEKF0.LARGE.jpg", "https://cdn.instructables.com/F3W/X65E/JTENEKF1/F3WX65EJTENEKF1.LARGE.jpg", "https://cdn.instructables.com/F0I/DWNR/JTENEKF5/F0IDWNRJTENEKF5.LARGE.jpg", "https://cdn.instructables.com/F0S/3TDL/JTENEKF8/F0S3TDLJTENEKF8.LARGE.jpg", "https://cdn.instructables.com/F6S/8VUW/JTENEKFE/F6S8VUWJTENEKFE.LARGE.jpg", "https://cdn.instructables.com/FCA/OMDX/JTENEKFG/FCAOMDXJTENEKFG.LARGE.jpg", "https://cdn.instructables.com/FBR/EQNZ/JTENEKFJ/FBREQNZJTENEKFJ.LARGE.jpg", "https://cdn.instructables.com/F35/DGZ9/JTENEKFK/F35DGZ9JTENEKFK.LARGE.jpg", "https://cdn.instructables.com/F4A/UQGV/JTENEKR1/F4AUQGVJTENEKR1.LARGE.jpg", "https://cdn.instructables.com/FTX/0PBH/JTENEKQO/FTX0PBHJTENEKQO.LARGE.jpg", "https://cdn.instructables.com/FJF/SHJY/JTENEKR3/FJFSHJYJTENEKR3.LARGE.jpg", "https://cdn.instructables.com/FZI/IWKH/JTENEKRC/FZIIWKHJTENEKRC.LARGE.jpg", "https://cdn.instructables.com/FWW/YA00/JTENEKRF/FWWYA00JTENEKRF.LARGE.jpg"], "step_title": "Step 5: Assembling the PCBs"}, {"step": 6, "steps_text": "With this much amount of power that we are going to deal with, obviously things are expected to heat up. So to deal with that we are going to bend the MOSFETs and mounted a 12v fan with the heat sink sandwitched inbetween.\nWith that being done, the beast of a PWM speed controller is ready to roll.", "step_imgs": ["https://cdn.instructables.com/FDO/VIN7/JTENEKRM/FDOVIN7JTENEKRM.LARGE.jpg", "https://cdn.instructables.com/FQG/JO64/JTENF6V7/FQGJO64JTENF6V7.LARGE.jpg", "https://cdn.instructables.com/FHQ/QONO/JTENEKSV/FHQQONOJTENEKSV.LARGE.jpg", "https://cdn.instructables.com/FO9/Z0ER/JTENEKRN/FO9Z0ERJTENEKRN.LARGE.jpg", "https://cdn.instructables.com/FFH/F0C5/JTENEKTO/FFHF0C5JTENEKTO.LARGE.jpg", "https://cdn.instructables.com/FM9/4T6I/JTENEKUJ/FM94T6IJTENEKUJ.LARGE.jpg"], "step_title": "Step 6: Cooling Things Up"}, {"step": 7, "steps_text": "To test the controller we are goint to use an 84v customized battery pack that we have built for our electric bicycle. The controller is temporarily connected to the battery pack and the motor that is attached to the bicycle to drive the rear wheel.\nAs I toggled the switch, the controller is powered on with the fan blowing air over the MOSFETs. As I turned the potentiometer clockwise, the motor started to rotated and gradually increasing the speed proportional to the rotation of knob.", "step_imgs": ["https://cdn.instructables.com/FBN/N1MV/JTENESAU/FBNN1MVJTENESAU.LARGE.jpg", "https://cdn.instructables.com/FC6/5N7O/JTENEKY2/FC65N7OJTENEKY2.LARGE.jpg", "https://cdn.instructables.com/FSK/UB4Q/JTENERZD/FSKUB4QJTENERZD.LARGE.jpg", "https://cdn.instructables.com/FEB/0VWV/JTENF6HH/FEB0VWVJTENF6HH.LARGE.jpg", "https://cdn.instructables.com/FEA/KTBE/JTENF6L5/FEAKTBEJTENF6L5.LARGE.jpg", "https://cdn.instructables.com/FFW/PA9X/JTENF6K7/FFWPA9XJTENF6K7.LARGE.jpg", "https://cdn.instructables.com/FI6/972P/JTENESIB/FI6972PJTENESIB.LARGE.jpg"], "step_title": "Step 7: Testing the Controller"}, {"step": 8, "steps_text": "At this stage the speed controller is ready and it went way beyound my expectations as far as the finish is concerned. The controller seems to operate easily on 84v battery pack and controlls the speed of the motor smoothly.\nBut to test this speed controller on load we need to finish our bicycle project and mount everything in place. So guys for on load performance stay tuned for the upcoming project video which is a DIY electric bicycle conversion project.\nSubscribe and stay tuned for upcoming project video.\nRegards.\nDIY King", "step_imgs": ["https://cdn.instructables.com/F3P/01D6/JTENEKV9/F3P01D6JTENEKV9.LARGE.jpg", "https://cdn.instructables.com/FJ7/41RO/JTENEKWB/FJ741ROJTENEKWB.LARGE.jpg", "https://cdn.instructables.com/F1L/7STI/JTENEKXL/F1L7STIJTENEKXL.LARGE.jpg", "https://cdn.instructables.com/FMT/OJ4M/JTENES55/FMTOJ4MJTENES55.LARGE.jpg", "https://cdn.instructables.com/F6S/DE7D/JTENES7F/F6SDE7DJTENES7F.LARGE.jpg", "https://cdn.instructables.com/FP6/BFEG/JTENF6NG/FP6BFEGJTENF6NG.LARGE.jpg", "https://cdn.instructables.com/FGY/02C6/JTENF6RI/FGY02C6JTENF6RI.LARGE.jpg"], "step_title": "Step 8: Final Results"}], "channel": ""}, {"category": "", "description": "After getting a bunch of promotional buttons, I decided to spend countless hours to design and build a machine to give them out for me.", "title": "Automatic Promotional Button Dispenser", "url": "https://www.instructables.com/id/Automatic-Promotional-Button-Dispenser/", "section": "technology", "steps": [{"step": 1, "steps_text": "The build process is outlined in this video, including how I tried to use a magnetic escapement instead of the 3D-printed \"blades\" that I eventually settled on.\nThe concept of the device is known as an escapement, and the top servo holds most of the buttons back, while the bottom servo drops one at a time.", "step_imgs": [], "step_title": "Step 1: Video"}, {"step": 2, "steps_text": "Parts list is pretty simple:\n2 standard hobby servos (Amazon 4-pack)\nCapacitive touch sensor (Amazon)\nArduino Uno\nArduino sensor shield\nCapacitor for sensor shield\n3D-printed slide\nScrews for servo attachment\nBase\nNote strange initial sketch. Also considered a linkage-driven pusher mechanism.\nAmazon links are affiliate.", "step_imgs": ["https://cdn.instructables.com/FWJ/33UF/JS0OPEMP/FWJ33UFJS0OPEMP.LARGE.jpg", "https://cdn.instructables.com/FHR/LMBI/JS0OPGRV/FHRLMBIJS0OPGRV.LARGE.jpg"], "step_title": "Step 2: Parts Needed"}, {"step": 3, "steps_text": "Files for the slide can be found on GitHub here. Note that you'll need to file things down to get things to slide smoothly. The three sections are attached together with CNA glue (AKA super glue), and the holes for servo attachment will need to be tapped (best done before gluing everything together).\nButtons used were 1.25\" diameter from Sticker Mule. This code/link will get you and I a $10 discount on an order if you so desire.", "step_imgs": ["https://cdn.instructables.com/FBM/XPW2/JS0OPI3D/FBMXPW2JS0OPI3D.ANIMATED.LARGE.gif"], "step_title": "Step 3: Print Slide"}, {"step": 4, "steps_text": "I won't outline the base making process exactly, as it could be done many different ways. The one thing you'll need to watch out for is that there's not too much space for the capacitive sensor to act through. I made a cavity with a router to take the spacing down to about 1/8 of an inch.", "step_imgs": ["https://cdn.instructables.com/FB9/2G89/JS0OPS70/FB92G89JS0OPS70.LARGE.jpg", "https://cdn.instructables.com/FGM/ZQQ2/JS0OPRXB/FGMZQQ2JS0OPRXB.LARGE.jpg", "https://cdn.instructables.com/FLT/URIZ/JS0OPRXC/FLTURIZJS0OPRXC.LARGE.jpg", "https://cdn.instructables.com/F6K/VRB5/JS0OPS26/F6KVRB5JS0OPS26.LARGE.jpg"], "step_title": "Step 4: Make Base and Assemble"}, {"step": 5, "steps_text": "The electrical setup and code is very simple. Just two outputs for each servo and an input for the capacitive touch sensor. Code is found here.\nNote capacitor hooked into sensor shield to help with power spikes. Not sure if this is necessary, and transistors would be a better solution anyway. Feel free to improvise/improve.", "step_imgs": ["https://cdn.instructables.com/FK4/XQJP/JS0OPRSH/FK4XQJPJS0OPRSH.LARGE.jpg"], "step_title": "Step 5: Wire and Program"}, {"step": 6, "steps_text": "So far, the device has survived one Mini Maker Faire, and hopefully it'll make it's way to many others!", "step_imgs": ["https://cdn.instructables.com/FLT/WZX1/JS0OPV8C/FLTWZX1JS0OPV8C.ANIMATED.LARGE.gif"], "step_title": "Step 6: Enjoy!"}], "channel": ""}, {"category": "", "description": "In this DIY guide I will show you how to make your own wireless weather station!\nMy communication protocol will allow you to have up to 10 sensor stations in your wireless network, but you can change and extend it up to 254 stations! The RF technology and the module that we used will allow you to have a long range distance between your sensors and master station that will have in your room. You can power on your sensor stations with 5V battery (or even with 3.7V) or a solar panel system!\nEvery \"Sensor Station\" can have a:\nPhotocell / photoresistor Light sensor\nDHT-22/DHT11 Temperature/Humidity Sensor\nDS12B20 Waterproof Temp Sensor\nIn this project I decided to make my own PCB that is based on Arduino UNO microcontroller - Atmega328p.\nBellow you will find the electronic schematic with PCB layout so you can easily produce it!\nLet's get started!\n~Projects can be found here:\nhttps://www.ardumotive.com/arduino-wireless-weathe...\n\nVideo presentation:", "title": "Arduino Based Wireless (RF) Weather Station Network", "url": "https://www.instructables.com/id/Arduino-Based-Wireless-RF-Weather-Station-Network/", "section": "technology", "steps": [{"step": 1, "steps_text": "For Master Station you will need:\nOur custom PCB circuit *\nAtmega328 (with Arduino UNO bootloader)\n28 dip socket\n16 MHz crystal oscillator\n2x22 pF capacitors\n1x100nF ceramic capacitor\n1x10uF Electrolytic Capacitor\n1x10K resistor\nScrew terminal 2P 2.54mm\n2xPin Header\n1x5 Female 2.54mm\n----> Or use an Arduino board with breadboard\nBasic 8x2 Character LCD - Black on Green 5V\nWireless Serial Transceiver Module HC12\nTrimmer 20kOhm\nDHT-22 sensor (or any other DHT family sensor)\nPush Button Latching - 12.5mm\nDC Power\nJackOn/Off SW (lcd back light)\n~Power by 5V power adapter or USB powerbank~\nFor every Slave - Sensor Station you will need:\nOur custom PCB circuit *\nAtmega328 (with Arduino UNO bootloader)\n28 dip socket\n16 MHz crystal oscillator\n2x22 pF capacitors\n1x100nF ceramic capacitor\n1x10uF Electrolytic Capacitor\n1x10K resistor\nScrew terminal 2P 2.54mm\n2xPin Header\n1x5 Female 2.54mm\n----> Or use an Arduino board with breadboard\nWireless Serial Transceiver Module HC12\nOne of the following sensors:\nDHT-22 sensor (or any other DHT)\nDS18B20 (Waterproof) and 1x4.7K Resistor\nPhotocell and 1x 10K Resistor\n~Power by 5V power adapter or USB powerbank or battery pack~\n*You will also need a TTL to USB module or an Arduino UNO board for the programming procedure.", "step_imgs": ["https://cdn.instructables.com/FWH/V7S7/JTYNCW7A/FWHV7S7JTYNCW7A.LARGE.jpg"], "step_title": "Step 1: What You Will Need - Hardware Part List"}, {"step": 2, "steps_text": "Find the electronic and pcb schematic at link below:\nMaster Station:\nhttps://easyeda.com/mi.vasilakis/Wireless-Weather-...\n\nSlave/Sensor Station:\nhttps://easyeda.com/mi.vasilakis/slave\nYou can make any changes you want!", "step_imgs": ["https://cdn.instructables.com/F09/L5Q9/JTYNCW81/F09L5Q9JTYNCW81.LARGE.jpg", "https://cdn.instructables.com/FA5/32EZ/JTYNCW7B/FA532EZJTYNCW7B.LARGE.jpg", "https://cdn.instructables.com/FFP/FOFY/JTYNCW7D/FFPFOFYJTYNCW7D.LARGE.jpg", "https://cdn.instructables.com/FE1/QGW4/JTYNCW7Q/FE1QGW4JTYNCW7Q.LARGE.jpg"], "step_title": "Step 2: The Circuit - Electronic and PCB Schematic"}, {"step": 3, "steps_text": "--> For Master Station\nLCD\nRS pin to Arduino Pin 3\nEN pin to Arduino Pin 4\nD4 pin to Arduino Pin 5\nD5 pin to Arduino Pin 6\nD6 pin to Arduino Pin 7\nD7 pin to Arduino Pin 11\nDHT Sensor\nData pin to Arduino Pin 2\nHC-12\nTX pin to Arduino Pin 8\nRX pin to Arduino Pin 9\n--> For Slave/Sensor Station\nDHT Sensor\nData pin to Arduino Pin 8\nDS18B20 Sensor\nData pin to Arduino Pin 2\nPhotocell\nto Arduino A0", "step_imgs": ["https://cdn.instructables.com/FSY/A2I6/JTYNCW7R/FSYA2I6JTYNCW7R.LARGE.jpg", "https://cdn.instructables.com/FNY/8HDB/JTYNCW7V/FNY8HDBJTYNCW7V.LARGE.jpg", "https://cdn.instructables.com/FEU/VZ0B/JTYNCW80/FEUVZ0BJTYNCW80.LARGE.jpg", "https://cdn.instructables.com/F9J/G9GP/JTYNCW82/F9JG9GPJTYNCW82.LARGE.jpg", "https://cdn.instructables.com/FE1/BGSZ/JTYNCW7S/FE1BGSZJTYNCW7S.LARGE.jpg"], "step_title": "Step 3: Arduino Connection Pins"}, {"step": 4, "steps_text": "How to program our PCBs:\nConnect your circuit with TTL to USB module with 5 cables to the programming header. The pins RX and TX must be cross-connected.\nNOTE: If you are using the Arduino UNO board make sure to remove the ATmega328 IC from it first and connect the headers RX to RX and TX to TX pins of the board. The RS pin must be connected to Arduino UNO reset pin.\n-------------CONFIGURATION-----------------\nMaster\n/***CONFIGURATION ****/\nconst long interval = 5000; // ms\nconst int slaves = 1; //Number of slaves (max 16) (go to line 95 and complete the if statement for every sensor) /*********************/\nSlave\n/***CONFIGURATION ****/\nconst long interval = 5000; // ms\nString ADDR = \"0\"; //Device address from 0 to f #define SENSOR_TYPE 1 // Type of sensor in slave unit. Can be 1 for DHT, 2 for DS18B20 or 3 for PHOTOCELL\n/*********************/\nDownload the code from here and open it with Arduino IDE. Inside you will also find the libraries for this project.", "step_imgs": [], "step_title": "Step 4: The Code"}, {"step": 5, "steps_text": "Download and print the case of the master and slave stations with your 3D printer!", "step_imgs": ["https://cdn.instructables.com/FND/1RNV/JTYNCW88/FND1RNVJTYNCW88.LARGE.jpg", "https://cdn.instructables.com/FOF/4UTM/JTYNCW87/FOF4UTMJTYNCW87.LARGE.jpg", "https://cdn.instructables.com/FJX/WL3F/JTYNCW7E/FJXWL3FJTYNCW7E.LARGE.jpg", "https://cdn.instructables.com/FSZ/7KAR/JTYNCW7Y/FSZ7KARJTYNCW7Y.LARGE.jpg", "https://cdn.instructables.com/F18/GHTO/JTYNCW7X/F18GHTOJTYNCW7X.LARGE.jpg", "https://cdn.instructables.com/FTQ/M9HI/JTYNCW7H/FTQM9HIJTYNCW7H.LARGE.jpg"], "step_title": "Step 5: 3D Parts"}, {"step": 6, "steps_text": "I hope you liked this, let me know in the comments !!!", "step_imgs": ["https://cdn.instructables.com/FPB/51XY/JTYNCW7W/FPB51XYJTYNCW7W.LARGE.jpg", "https://cdn.instructables.com/F83/ITNZ/JTYNCW7Z/F83ITNZJTYNCW7Z.LARGE.jpg", "https://cdn.instructables.com/FAP/O4DE/JTYNCW7F/FAPO4DEJTYNCW7F.LARGE.jpg", "https://cdn.instructables.com/FW8/5K80/JTYNCW7C/FW85K80JTYNCW7C.LARGE.jpg"], "step_title": "Step 6: Well Done!"}], "channel": ""}, {"category": "", "description": "Time for a fun-filled, easy-peasy Japan-easy to make a project! Today, we\u2019re going to show you how to make an LED POV Display. POV, an acronym for the persistence of vision, is a kind of optical illusion in which a visual image seems to persist even when the light from it ceases to enter our eyes and this makes it super cool! You can display any text or image that you want to in the display.\nSounds awesome, right? So, why are you still here?! Let\u2019s begin right away!", "title": "Persistence of Vision (PoV) Display Using Arduino", "url": "https://www.instructables.com/id/Persistence-of-Vision-PoV-Display-Using-Arduino/", "section": "technology", "steps": [{"step": 1, "steps_text": "Hardware\nevive\nArduino Nano\nIR Sensor\nGeneral Purpose Board\nLEDs\nResistors\nDC Motor\nBattery\nWires\nGlue Gun\nSoldering Iron\nWhite Paper\nSome 3D Printed Parts\nSoftware\nArduino IDE", "step_imgs": ["https://cdn.instructables.com/FRK/RBQW/JTYND13O/FRKRBQWJTYND13O.LARGE.jpg"], "step_title": "Step 1: List of Components Needed"}, {"step": 2, "steps_text": "What is Persistence of Vision?\nPersistence of Vision, or POV, occurs when a visual image seems to persist continuously when a stream of light is repeatedly interrupted for very brief instances and does not enter our eyes during those durations.\nHow does the Persistence of Vision works?\nThe human eye cannot process more than 10-12 images per second. When a series of images more is presented in quick succession, it gives us the illusion that the images are in motion.\nThis is the basic principle behind the making of the animated movies.", "step_imgs": [], "step_title": "Step 2: Understanding Some Basic Concepts"}, {"step": 3, "steps_text": "Here we are going to 3D Print the holder to which we will be fixing our complete assembly. Download the .STL given below.\nThe Holder consists of two parts.\nThe Rotating Part\nThe Stable Part", "step_imgs": ["https://cdn.instructables.com/FTU/KEH5/JTYND13J/FTUKEH5JTYND13J.LARGE.jpg"], "step_title": "Step 3: Printing the 3D Printed Part"}, {"step": 4, "steps_text": "Once you have the 3D Printed parts with you, its time to start the making.\nTake the General Purpose Board and cut it in the size that fits the Rotating part.\nOnce done, its time to add the LEDs.\nIn this project, I have used 8 red LEDs, you can use as many and of any color you want.\nOnce done, short (common) the cathode terminal of all the LEDs by soldering them on the GPB.\nAdd resistors to protect the LEDs from blowing up due to high voltage supply (5V). I have used the 220ohm resistors. Solder one end of each resistor to the anode terminal or positive leg of each LED.\nSolder jumper cables to the second leg of each resistor.", "step_imgs": ["https://cdn.instructables.com/FGI/CG24/JTYND14H/FGICG24JTYND14H.LARGE.jpg", "https://cdn.instructables.com/FLA/VYW6/JTYND14Q/FLAVYW6JTYND14Q.LARGE.jpg", "https://cdn.instructables.com/FZD/AQ4Z/JTYND14M/FZDAQ4ZJTYND14M.LARGE.jpg"], "step_title": "Step 4: Assembling the LEDs"}, {"step": 5, "steps_text": "Connect all the LEDs to Arduino Nano as given below:\nLED0: D2 of nano\nLED1: D3 of nano\nLED2: D4 of nano\nLED3: D5 of nano\nLED4: D6 of nano\nLED5: D7 of nano\nLED6: D8 of nano\nLED7: D9 of nano\nCommon cathode: Ground of nano", "step_imgs": ["https://cdn.instructables.com/F52/RDLV/JTYND14O/F52RDLVJTYND14O.LARGE.jpg"], "step_title": "Step 5: Connection With Arduino Nano"}, {"step": 6, "steps_text": "Attach the DC Motor to the given space in the holder.\nPower the DC Motor using evive.", "step_imgs": ["https://cdn.instructables.com/FQV/SPB2/JTYND14D/FQVSPB2JTYND14D.LARGE.jpg"], "step_title": "Step 6: Attaching the DC Motor"}, {"step": 7, "steps_text": "It's time to add the IR Sensor.\nAs we need to indicate the beginning from where the text should be written. Attach a small piece of white paper to the steady assembly, which will be detected by the IR Sensor.\nVarying the place of the paper leads to a change in the position of the text displayed.\nConnect it to Nano:\nGND: GND of nano\nVin: 5v of nano\nOut: D10 of nano", "step_imgs": ["https://cdn.instructables.com/FZR/0VJU/JTYND14I/FZR0VJUJTYND14I.LARGE.jpg", "https://cdn.instructables.com/FB0/F1JR/JTYND152/FB0F1JRJTYND152.LARGE.jpg", "https://cdn.instructables.com/F70/ET8N/JTYNG7EH/F70ET8NJTYNG7EH.LARGE.jpg"], "step_title": "Step 7: Adding IR Sensor"}, {"step": 8, "steps_text": "We need to power up the Nano. For that, connect the battery to it.\nOnce done, fix the Nano into the Rotating Part.\nFasten the Rotating Part to the holder.", "step_imgs": ["https://cdn.instructables.com/FY0/XPF2/JTYND14Y/FY0XPF2JTYND14Y.LARGE.jpg", "https://cdn.instructables.com/FHI/MQJG/JTYND13K/FHIMQJGJTYND13K.LARGE.jpg", "https://cdn.instructables.com/FDL/I7Y8/JTYND6J9/FDLI7Y8JTYND6J9.LARGE.jpg"], "step_title": "Step 8: Completing the Assembly."}, {"step": 9, "steps_text": "Upload the following code to Arduino Nano:", "step_imgs": [], "step_title": "Step 9: Arduino Code"}, {"step": 10, "steps_text": "When the IR sensor detects the white paper, the LEDs start glowing and create the illusion that something is displayed by the LED. This is due to the persistence of vision, where the LEDs turn on and off in such a way that the different images overlap each other forming letters.", "step_imgs": [], "step_title": "Step 10: Working"}, {"step": 11, "steps_text": "With this, your very own LED POV Display is all set to display the message of your choice!", "step_imgs": [], "step_title": "Step 11: Conclusion"}], "channel": ""}, {"category": "", "description": "This project shows how to upcycle a pallet and make a loom of its wooden planks, using some additional parts (the weaving comb and the ratchet gears) from a 3D-printer.\nBy using two somewhat contradictionary materials like wood, which is often seen as \"good\" material because its a natural stuff and secondly Plastics (ABS) as a synthetic material which is often seen as \"evil\", i wanted to show, that good or evil is never an attribute of a material itself, but merely, that it depends on what the humans will do with it.\nIf you use it in a creative or productive manner (like here with weaving), where it can be used over and over for eternities, then even the plastic is ok. But it is not ok, when we use it as one-way packaging material and it ends up swimming in the pacific ocean and there building an floating island of one third the size of Europe. So its all about our responsibility how we deal with the things.\n\nFurthermore i wanted to demonstrate by this project how we can reuse and upcycle wood materials from old paletts and that \"up-cycling\" is even better than \"re-cycling\" (eg. burning the palett wood).\nBut that are just my personal ambitions which motivated me for doing this project. If you have no pallet available you can also use regular softwoods like spruce, fir or pine (or even hartwoods) with a thickness of 20mm. If only 18mm is available it will also work.", "title": "OHLOOM - an Open Hardware Loom", "url": "https://www.instructables.com/id/OHLOOM-an-Open-Hardware-Loom/", "section": "technology", "steps": [{"step": 1, "steps_text": "Any pallet with measurements conform to the standardized \"euro-pallet\"-format should be appropriate. Here i use a pallet which is no standard-format, but fullfills the most importantant points, like having up to 14.5cm wide planks, with a thickness of 22mm, that will give us 20mm when planed.\nAt first you have to dissassemble the pallet by the help of a crowbar (or two). Remove any nails from the woodplanks by using a hammer and pliers. Then the planks should be planed onto a thickness of 20mm. This can be done by a jointer machine or manually by a carpenter's plane. If neither of this tools is available to you, then you can of course also buy some appropriate planks (2cm thick, 15cm width, 60cm long) from a hardware store. But the upcycling-process is part of the fun ;)\nCut the planks to length and width, according to the plans in step 3. At the picture are also shown two wooden rounded bars from beechwood, which i bought initially. But then later i decided to make each single wooden part from the pallet and i replaced the rounded bars by two more octagonal bars wich i made from two glued-together wood-stripes. The octogonal profile is even more better for the weaving.", "step_imgs": ["https://cdn.instructables.com/FPZ/O2C5/INUJO2LA/FPZO2C5INUJO2LA.LARGE.jpg", "https://cdn.instructables.com/FGB/YHCI/INUJO2LE/FGBYHCIINUJO2LE.LARGE.jpg", "https://cdn.instructables.com/F96/UDG6/INUJO2LT/F96UDG6INUJO2LT.LARGE.jpg", "https://cdn.instructables.com/FAS/ZJAF/INUJO2LX/FASZJAFINUJO2LX.LARGE.jpg"], "step_title": "Step 1: Upcycling a Pallet"}, {"step": 2, "steps_text": "Glue together two small planks of XXmm length, 40mm width and 20mm thickness. You get a square profile with 40x40mm. Cut this to 35x35mm on a table-saw.\nThen remove the edges with a hand-planer in a manner that you get an octogonal profile.\nAfterwards round each last 10cm of each end of the rod with the planner or a sanding machine to a diameter of 35 mm.\nAlternatively you can also use a cylindrical wooden shaft with 35mm diameter and 710 mm length.", "step_imgs": ["https://cdn.instructables.com/FOO/36M4/INUJO4N6/FOO36M4INUJO4N6.LARGE.jpg", "https://cdn.instructables.com/FDL/BJ5K/INUJO4N7/FDLBJ5KINUJO4N7.LARGE.jpg"], "step_title": "Step 2: Make a Warp- and a Cloth-Beam"}, {"step": 3, "steps_text": "The frame-side is made from a 20 mm plank with 58x14cm and has some drilling-holes, according to the plan. This part is also available as fcstd-file (FreeCAD).\nThe comb-holder is a small peace of 118x60mm and can easily be cuttet from the planks. It will be mounted to the frame-side and has coded the up and down moves into its gaps-sizes.", "step_imgs": ["https://cdn.instructables.com/FZ9/MX19/INUJODTE/FZ9MX19INUJODTE.LARGE.jpg", "https://cdn.instructables.com/F1W/U8DR/INUJOFAL/F1WU8DRINUJOFAL.LARGE.jpg", "https://cdn.instructables.com/F91/WTYN/INUJOFFW/F91WTYNINUJOFFW.LARGE.jpg", "https://cdn.instructables.com/F8U/NAYB/INUJOG0S/F8UNAYBINUJOG0S.LARGE.jpg", "https://cdn.instructables.com/F7X/AVB4/INUJODTI/F7XAVB4INUJODTI.LARGE.jpg", "https://cdn.instructables.com/FS1/2CBT/INUJOFKB/FS12CBTINUJOFKB.LARGE.jpg"], "step_title": "Step 3: The Frame-side"}, {"step": 4, "steps_text": "The Weaving Comb and the Ratchet-Gear and the end-rings are made from a 3D-printer. I was too lazy to make these parts from wood ;) The ABS-material is stable and strong enough for this task of weaving. You can find the needed construction filess as .stl-files for printing and as .fcstd FreeCAD-files in the source-package.", "step_imgs": ["https://cdn.instructables.com/FLR/8IDD/INUJOS4J/FLR8IDDINUJOS4J.LARGE.jpg", "https://cdn.instructables.com/FOL/O7H3/INUJOS7A/FOLO7H3INUJOS7A.LARGE.jpg", "https://cdn.instructables.com/FGF/ZYMO/INUJOSAV/FGFZYMOINUJOSAV.LARGE.jpg", "https://cdn.instructables.com/F8G/HTWE/INUJOTWB/F8GHTWEINUJOTWB.LARGE.jpg", "https://cdn.instructables.com/FBJ/2CJ2/INUJOTZ3/FBJ2CJ2INUJOTZ3.LARGE.jpg"], "step_title": "Step 4: The Weaving Comb and the Ratchet-Gear"}, {"step": 5, "steps_text": "Start with mounting the combholder to the frame sides with two 35mm woodscrews. Then place the two crosslink parts between the sides and put the Warpbeam and the clothbeam shafts into the holes. Connect the sideparts to the crosslinks with two 60mm woodscrews on each side.\nThen move the ratchetwheels and the clamprings onto the shaftends and fix it with a M6x70 cylinderscrew and two nuts.\n\nNow bind the Stringstick (for connecting the warp strings) on the clothbeam like in the above photo.", "step_imgs": ["https://cdn.instructables.com/FT9/MASJ/JTWSWV2D/FT9MASJJTWSWV2D.LARGE.jpg", "https://cdn.instructables.com/F6A/HOSC/JTWSWV29/F6AHOSCJTWSWV29.LARGE.jpg", "https://cdn.instructables.com/FM3/WIDY/JTWSWW8T/FM3WIDYJTWSWW8T.LARGE.jpg"], "step_title": "Step 5: Assembly of the Frame"}, {"step": 6, "steps_text": "For assembling the comb hold the two slotbeams in parallel but facing the slot towards each other. Then put the 4 3D-printed comb-modules into the slot so that they build a homogenious comb of about 400mm length.\nConnect the beams with two threaded rods at each end, which you fix with the help of two M8 nuts. The theraded rods act here also as a distance holder for the slotbeams and build a kind of frame with them together.", "step_imgs": ["https://cdn.instructables.com/FMZ/CB98/JTWSWV0R/FMZCB98JTWSWV0R.LARGE.jpg", "https://cdn.instructables.com/FZ9/S7VP/JTWSWUZA/FZ9S7VPJTWSWUZA.LARGE.jpg", "https://cdn.instructables.com/FUU/NDP7/JTWSWUWI/FUUNDP7JTWSWUWI.LARGE.jpg"], "step_title": "Step 6: Assembly of the Weaving Comb"}, {"step": 7, "steps_text": "Next mount the OHLOOM to a table with a clamp and heddle the warp.\nIts important to note, that the length of the warp can be far longer like the looms length, like 2 or 3 m. This is because the yarn on one side and the fresh woven cloth on the other side can be wrapped around the warpbeam and the clothbeam by simply turning it after loosening the ratchet pawl. Then you have to bring some tension into the warp before putting it back into place.", "step_imgs": ["https://cdn.instructables.com/F70/VJDE/JTWSWUUU/F70VJDEJTWSWUUU.LARGE.jpg", "https://cdn.instructables.com/F6H/07KG/JTWSWUSI/F6H07KGJTWSWUSI.LARGE.jpg", "https://cdn.instructables.com/FBW/0VI3/JTWSWUOU/FBW0VI3JTWSWUOU.LARGE.jpg"], "step_title": "Step 7: Heddle the Warp"}, {"step": 8, "steps_text": "Prepare the ends of the shuttle like in the photo above. It is important to smooth the edges by rounding them with a file or sandpaper. Sharp edges could otherwise damage the yarn.\n\nThen wind some yarn onto the shuttle and start weaving.", "step_imgs": ["https://cdn.instructables.com/FJY/9879/JTWSWUNW/FJY9879JTWSWUNW.LARGE.jpg", "https://cdn.instructables.com/FEL/16LN/JTWSWUMV/FEL16LNJTWSWUMV.LARGE.jpg", "https://cdn.instructables.com/FJQ/1GOG/JTYNA8RX/FJQ1GOGJTYNA8RX.LARGE.jpg", "https://cdn.instructables.com/FZT/6LVG/JTYNA8UD/FZT6LVGJTYNA8UD.LARGE.jpg"], "step_title": "Step 8: The Shuttle for Weaving"}, {"step": 9, "steps_text": "An OHLOOM project page in german language can be found at:\nhttps://wiki.opensourceecology.de/Open_Hardware-We...", "step_imgs": ["https://cdn.instructables.com/F6C/E94V/JTYN7KST/F6CE94VJTYN7KST.LARGE.jpg"], "step_title": "Step 9: BOM and Sources"}], "channel": ""}, {"category": "", "description": "What is one of the first pieces of advice on the internet for when your brand new, (maybe) shiny K40 laser cutter shows up? Install interlock switches!\nWhat is an interlock switch? Basically just a switch (in our case, a microswitch), that is mounted near the lids of the machine. If the machine is running and you lift up any of the lids, the switch will disengage and cut power to the machine. The functional concept is extremely similar to an emergency stop button, except you don't, need to press anything.\nSo as I patiently researched which machine I would buy, I also was building up a list of upgrades that were going to happened before the laser ever turned on. Safety first! The main problem I discovered about installing interlock switches is that there isn't too many good guides that are (1) simple; (2) written for non-electrical engineers; (3) have good documentation.\nSo this guide is for all the people out there that want a 100% effective, quick, and safe way to wire up interlock switches for your K40 laser.\nRequired Parts:\n(3) End-Stop Style Microswitches \u2014 Commonly found on 3D printers, especially Prusa kits. You can in theory just use plain jane microswitches, but I decided to spend the 5-6 bucks to get these that are mounted on the boards and come wired ready to go. Also, Don from Don's Laser Cutter Things, has a schematic for an end-stop switch that has some more components on it. Honestly, not sure why, but I'm rolling with Don.\nSmall, Blank PCB \u2014 I happened to have one of these Adafruit ones laying around that I used\nJumper Wire \u2014 I like getting solid core wire for these\nMale Header Pins\n2 Pin Screw Terminal Mount \u2013 In general, when I get to the making the PCB section, you can substitute these things for whatever you prefer or have on hand.\n3M Mounting Tape (you can always drill holes and bolt the switches on)\nHeat Shrink Tubing (optional, but do yourself a favor and get some)\nRequired Tools:\nSoldering Iron (you could probably pull this off without one, but come on, you will need one soon enough if you bought yourself a K40)\nWire Strippers, Wire Cutters, Needle Nose Pliers (when don't you need these things??)\nScrew driver\nONE IMPORTANT FINAL NOTE!\nMy machine came with an emergency stop switch, which I am going to be tapping into for our wiring, which also makes it very easy. If you don't have an e-stop, you'll have to proceed at your own risk in terms of slicing the positive wire that runs into the power switch. Easy enough, but I won't be showing that.", "title": "How to Make Interlock Safety Switches for K40 Laser Cutter", "url": "https://www.instructables.com/id/How-to-Make-Interlock-Safety-Switches-for-K40-Lase/", "section": "technology", "steps": [{"step": 1, "steps_text": "Alright, so let's get going with the electrical.\nOur methods for installing interlock switches will be to tap into the emergency stop button on the machine. My crude post-it note drawings explain.\nWe are going to...\nTake off the wire going into the e-stop from the PSU\nRun that wire into one of our interlock switches\nRun wire between each switch (parallel) so each switch, including the e-stop, will need to be closed in order for the machine to work.\nThere were so many other methods people proposed, using magnetic reed switches, and all sorts of stuff. This seems to be pretty foolproof.", "step_imgs": ["https://cdn.instructables.com/FSH/SQ41/JTYNCG6B/FSHSQ41JTYNCG6B.LARGE.jpg", "https://cdn.instructables.com/FLW/NJYC/JTYNCG06/FLWNJYCJTYNCG06.LARGE.jpg", "https://cdn.instructables.com/FE4/GBM3/JTYNCFZB/FE4GBM3JTYNCFZB.LARGE.jpg", "https://cdn.instructables.com/F21/EGCF/JTYNCFZ5/F21EGCFJTYNCFZ5.LARGE.jpg"], "step_title": "Step 1: Step 1: Understanding How the Interlocks Will Be Wired"}, {"step": 2, "steps_text": "So the first two pictures you can almost imagine that being our e-stop. Even though you press in an e-stop button to engage it, when it is not pressed down, it is actually allowing current to flow right through it.\nTo make sure what I wanted to do was truly the right way to go, I did a quick experiment using a breadboard and a few more microswitches I had around.\nFirst I wired up 1 microswitch (call this our e-stop switch), and it worked. Then I added 3 more microswitches to represent each of the 3 switches we will be adding. They are wired just like my post-it note schematic in the first part. Everything worked and I was confident everything would work fine.\nThe final test I did, was grabbing one of my end-stops and some alligator clips and actually hooking it up to the e-stop and turning on the machine with one interlock switch to see if it worked as planned. Yep, all good.\nNow let's make our little break out board.", "step_imgs": ["https://cdn.instructables.com/FS8/UQMV/JTYNBTEQ/FS8UQMVJTYNBTEQ.LARGE.jpg", "https://cdn.instructables.com/F5K/0FL5/JTYNBTJ0/F5K0FL5JTYNBTJ0.LARGE.jpg", "https://cdn.instructables.com/FK2/VYYL/JTYNBTP7/FK2VYYLJTYNBTP7.LARGE.jpg", "https://cdn.instructables.com/FLQ/4P5M/JTYNBTP8/FLQ4P5MJTYNBTP8.LARGE.jpg", "https://cdn.instructables.com/FAE/AM4I/JTYNBTPT/FAEAM4IJTYNBTPT.LARGE.jpg", "https://cdn.instructables.com/FAW/0UVH/JTYNBU6F/FAW0UVHJTYNBU6F.LARGE.jpg", "https://cdn.instructables.com/FA9/7JVO/JTYNBU8D/FA97JVOJTYNBU8D.LARGE.jpg", "https://cdn.instructables.com/FD6/TGLP/JTYNBU9W/FD6TGLPJTYNBU9W.LARGE.jpg"], "step_title": "Step 2: Step 2: Demonstration of How the System Works"}, {"step": 3, "steps_text": "This part does assume you have some basic electronic skills and know how to solder and make simple, hand-made PCBs.\nThe board I made was super simple. I wired up 4 sets of 3 male header pins on the PCB and soldered them down.\nI then ran jumper wired in between each switches connection, once again, similar to my post-it note schematic, and how we wired the switches together on the breadboard.\nI put 4 sets on there, you only need to do 3 though. I put a 4th on there as in the future I want to add a water flow sensor to my system and I can plug it right in there. I put a little homebrewed jumper those pins.\nSolder on your 2-Pin Screw Terminal Connector and wire each end to the start and end of the interlock switch header pins.\nIf this isn't self-explanatory, please leave a comment.\nI think just added some 3M mounting tape to the back of it. I like using this stuff because its crazy strong, and it acts as a good insulator when mounting to metal stuff like the case of this (poorly) wired laser cutter.\nAs you can see in the last pics, I just took the wire going into the e-stop, cut it in half, took the side with the wire crimp and added a length of wire to that and also added a length of wire to the other end of the cut wire.\nAlmost done!", "step_imgs": ["https://cdn.instructables.com/FJA/CLA4/JTYNBUBM/FJACLA4JTYNBUBM.LARGE.jpg", "https://cdn.instructables.com/FRB/SG3S/JTYNBUCV/FRBSG3SJTYNBUCV.LARGE.jpg", "https://cdn.instructables.com/FIG/FEPU/JTYNBUEA/FIGFEPUJTYNBUEA.LARGE.jpg", "https://cdn.instructables.com/F73/CNL8/JTYNBULX/F73CNL8JTYNBULX.LARGE.jpg", "https://cdn.instructables.com/FZD/7S1P/JTYNBUN6/FZD7S1PJTYNBUN6.LARGE.jpg", "https://cdn.instructables.com/FA8/XFUC/JTYNBUR7/FA8XFUCJTYNBUR7.LARGE.jpg", "https://cdn.instructables.com/F74/W0PO/JTYNBUVA/F74W0POJTYNBUVA.LARGE.jpg"], "step_title": "Step 3: Step 3: Making a Breakout Board for Your Switches"}, {"step": 4, "steps_text": "And that's about it!\nPlug the e-stop wires into the appropriate side of the screw terminal.\nPlug in the interlocks (make sure the orientation is correct.\nAnd this is where I will let your ingenuity and inventiveness take over. You can see where I decided to mount two of mine for the front lids. I need to add something to make them engage when the lid is closed still. If you have gottten this far, I'm sure you can figure out how to mount them. If you have a 3D printer, go over to thingiverse, there are lots of models out there as well.\nHope this was helpful and happy Chinese laser cuttin'!", "step_imgs": ["https://cdn.instructables.com/FBC/B3U8/JTYNBUVT/FBCB3U8JTYNBUVT.LARGE.jpg", "https://cdn.instructables.com/FHY/DV94/JTYNBUVW/FHYDV94JTYNBUVW.LARGE.jpg", "https://cdn.instructables.com/FAK/TUK2/JTYNBUVV/FAKTUK2JTYNBUVV.LARGE.jpg", "https://cdn.instructables.com/F6X/G1I8/JTYNBUW7/F6XG1I8JTYNBUW7.LARGE.jpg", "https://cdn.instructables.com/FAK/BCMI/JTYNBUX8/FAKBCMIJTYNBUX8.LARGE.jpg", "https://cdn.instructables.com/F61/SXD0/JTYNBUYE/F61SXD0JTYNBUYE.LARGE.jpg"], "step_title": "Step 4: Step 4: Mount Your Board and Plug Everything In!"}], "channel": ""}, {"category": "", "description": "As any maker can attest, over the years, one collects a lot of parts. Perhaps it all started with a few resistors and LEDs, a breadboard, and an Arduino. But soon there were motors and motor drivers, IR rangefinders and tactile switches. Accelerometers, microphones, heatshrink tubes, potentiometers, relays, hookup wire, all those things salvaged from that printer you took apart... and the list goes on.\nNow, organizing such a collection of goodies is no easy task. Some may have turned to baggies, for others, boxes. And then there were those who filled shelves with boxes, filled with baggies, filled with parts. All intricately labelled, yet still so cumbersome to manage.\nThis Instructable takes a stab at solving the age-old problem of organizing a bunch of things. So without further ado, FindyBot3000.", "title": "FindyBot3000 - a Voice Controlled Organizer", "url": "https://www.instructables.com/id/FindyBot3000-a-Voice-Controlled-Organizer/", "section": "technology", "steps": [{"step": 1, "steps_text": "'nuff said.", "step_imgs": ["https://cdn.instructables.com/FNV/JCBT/JTON2686/FNVJCBTJTON2686.LARGE.jpg"], "step_title": "Step 1: The Problem"}, {"step": 2, "steps_text": "This project is an Internet-of-Things organizer, designed for hands-free searching and intuitive voice-controlled management of parts.\nThis Instructable is organized as follows:\nOverview - Describing how the tech is all linked\nPrerequisites - Required Tools, Software, Electronics, and Parts Lists\nConstruction\nMechanical - Building the organizer\nElectrical - Wiring it all up\nBasic Testing\nSoftware\nDownload and setup necessary accounts\nVoice-Control - Linking Google Home to Particle Photon\nThe Cloud - Deploying an Azure Function and SQL Database on Microsoft Azure\nFuture Plans - New features, animations, debugging techniques, etc.", "step_imgs": [], "step_title": "Step 2: Table of Contents"}, {"step": 3, "steps_text": "A broad tech stack is used, ranging from lower-level C++ programming (Arduino-style!) to higher-level C# programming for the (Microsoft) Cloud!\nTechnologies and Languages\nWhile many makers will be familiar with Google Home/Google Assistant, the other technologies may be unknown. Here's a quick summary:\nHuman - That's you!\nGoogle Home- This is what you talk to, and turns voice into text. Behind the scenes, Google Home uses Google Assistant, which is really doing all the work. This project can actually work with any device that supports Google Assistant, like an Android phone or tablet.\nIFTTT - If-this-then-that, a free online service which allows different apps to communicate. In this project, IFTTT is used to connect Google Home with Particle Photon.\nParticle Photon - A cheap WiFi capable microcontroller, programmable Arduino-style! This chip drives the LED display on the organizer. Development with this microcontroller has us working with:\nC++ (Arduino style)\nWebhooks - Send/receive real-time data between applications (like Particle Photon to an Azure Function)\nParticle Dev - The integrated development environment (IDE) which is used to code for the Photon.\nAzure Function- A piece of code that runs in the cloud. No virtual machines or web apps to worry about. This does all the heavy lifting in terms of processing text, building SQL queries, and any other work that would be much more difficult or (computationally) expensive to do on a microcontroller like the Photon.\nSQL Database - Keeps track of all the parts: names, quantities, locations, search tags, dates, etc. The database is queried to insert, remove, find, or update parts.\nIn the next step, a sequence diagram shows how all these pieces fit together.", "step_imgs": [], "step_title": "Step 3: Overview"}, {"step": 4, "steps_text": "In the UML sequence diagram shown, the flow of each component is laid out. There's a ton of technology behind it all, so it's pretty incredible that FindyBot3000 can find parts within a second. This Instructable won't go into the nitty-gritty technical details of how each step is implemented. Instead, we will focus on building the physical assembly, deploying the necessary software components, and configuring everything to work together.\nNow this is a pretty complicated drawing, showing how all the software components talk to each other, and in which order. Follow the arrows, noting which lifelines (vertical lines) they are pointing to, to get a sense of what is happening and when.\nYou may be wondering -- why don't we send the data from Google Home directly to the Azure Function, instead of first the the Photon? The reason is to provide a single source of debugging information. By logging all commands which are incoming and outgoing from the Photon, we can easily identify where data loss or a bug may have occurred.\nWe will come back to this diagram in later steps, but for now, on to construction!", "step_imgs": [], "step_title": "Step 4: The Ebb and Flow"}, {"step": 5, "steps_text": "Tools:\nJigsaw w/ fine wood blade\nDrill with 1/16th bit, 1/4\" bit, and countersink bit\nScrewdriver\nDremel w/ mutipurpose cutting bit\nSoldering Iron\nSolder\nScissors\nRetractable utility knife\nDuct tape\nDouble-sided foam tape\nClamps\nSuper glue\nSand paper\nMeasuring tape\nCarpenter/rafter/combination square\nHardware:\nItem Quantity Cost Total Cost Notes\n8'x7\"x3/4\" pine board 3 $8.00 $24 Hardware Store\nAcroMils 64-compartment organizer 2 $28.65 $57.30\nAcroMils 24-compartment organizer 2 $34.95 $69.90\n1-3/4\" Wood screws 18 $0.10 $1.80 Hardware Store\n3/4\" Pan-head sheet metal screws 8 $0.10 $0.80 Hardware Store\nSquare foam exercise pads 1 $20.99 $20.99 0.5\", grey\n2'x2' 1/4\" plywood 1 $15 $15 Hardware Store\nTotal Cost: $189.79\nElectronics:\nItem Quantity Cost Total Cost Note\nLED strip 7 $15.76 $110.32 5V, 2 meter, 60 pixels/meter, 4mm wide, black PCB\nHeatshrink tubing 1 $6.99 $6.99 An assortment of tubes will last you a while\nServo extention cable, 10cm 7 $7.99 $7.99 Pack of 10. Only 7 needed.\n16ft 2-wire cable 1 $8.77 $8.77 Check hardware store for by-the-foot pricing\nParticle Photon 1 $19 $19 The microcontroller. Can be bought on Amazon here.\nHalf-size breadboard 1 $7.99 $7.99 Because I didn't want to design a PCB\nJumper wires 1 $5.99 $5.99 Hook everything up\n25A Solid state relay 1 $9.46 $9.46 Turn on/off the power supply to the LEDs\n14 Gauge Hookup wire 3 $0.25 $0.75 Your local hardware store will sell this by the foot\n5V 60A Power supply 1 $27.77 $27.77 Powers all 840 RGB LEDs\n5V 2A Power supply 1 $4.77 $4.77 Powers the Particle Photon\nPower cord 1 $10 $10 Price fluctuates a lot, any grounded 3-wire cord will do\n3.3V - 5V Logic level converter 1 $2.95 $2.95 Particle Photon (3.3V) > Converter > LED strip (5V)\nTotal: $222.75\n\nAccounts needed: You'll need to create an account with each of these services\nGoogle Account\nIFTTT\nGithub\nMicrosoft Azure\nParticle\n\nSoftware:\n(Necessary)Particle Dev - Write Arduino-style code to run on the Particle Photon\n(Optional) Visual studio, community edition - Modify the Azure Function and manually manipulate the SQL database\nExtensions: Azure Development, .NET desktop development, Desktop development with C++, Data storage and processing\n(Optional) Postman - For unit testing. Sends HTTP Post requests to the Azure Function.", "step_imgs": ["https://cdn.instructables.com/F4N/US1G/JTWT3KTL/F4NUS1GJTWT3KTL.LARGE.jpg"], "step_title": "Step 5: Parts Lists"}, {"step": 6, "steps_text": "The short animation demonstrates how FindyBot3000 was assembled.\nFusion 360 was used to design the CAD model, animation, and drawings for FindyBot3000.\nBy the way, you can use Fusion 360 for FREE as a hobbyist, like I am doing for this project!\nI couldn't find an easy way to upload the parts, so the table below provides links to them in the Fusion 360 cloud:\nImage Part\nAssembly\nFoam Pad\nVertical Board\nHorizontal Board\nMiddle Board\nLower Cabinet\nUpper Cabinet\nDrawings:\nHorizontal board drawing\nVertical board drawing\nMiddle board drawing\nFoam pad drawing", "step_imgs": [], "step_title": "Step 6: Construction - Design Files and Animation"}, {"step": 7, "steps_text": "FindyBot3000 bundles the four individual organizer boxes in a slim wooden frame, sandwiched between slices of foam pad. The foam pads offer an aesthetically pleasing way of concealing all the wiring for the LED strips, as you'll see in later steps.\nThe first order of business is cutting the foam pads to size, from which the board dimensions are measured. Just lay the foam on a markable surface, then the board on top of the foam, and use a utility knife to cut the foam to the width of the board. With the foam cut out, measure the height needed by propping it up against the organizer box. Use a carpenter square or end of a board to make a square cut.\nGreat, first step done!", "step_imgs": ["https://cdn.instructables.com/FJ5/VUKG/JTON2C9B/FJ5VUKGJTON2C9B.LARGE.jpg", "https://cdn.instructables.com/FPI/SZ2G/JTWT4Q4S/FPISZ2GJTWT4Q4S.LARGE.jpg", "https://cdn.instructables.com/F5W/62A2/JTON2CBA/F5W62A2JTON2CBA.LARGE.jpg", "https://cdn.instructables.com/FOO/NAXV/JTON2CBB/FOONAXVJTON2CBB.LARGE.jpg", "https://cdn.instructables.com/FST/DLGF/JTON2CBD/FSTDLGFJTON2CBD.LARGE.jpg", "https://cdn.instructables.com/FG7/9YXY/JTON2CBE/FG79YXYJTON2CBE.LARGE.jpg", "https://cdn.instructables.com/FZ7/YZ9K/JTON2CC4/FZ7YZ9KJTON2CC4.LARGE.jpg", "https://cdn.instructables.com/F3H/SF47/JTON2CC3/F3HSF47JTON2CC3.LARGE.jpg"], "step_title": "Step 7: Construction - Foam Pads"}, {"step": 8, "steps_text": "Cut the bottom, middle and top boards to length. Layering the cabinets as shown in the first picture produces the results. Stack the horizontal boards and the cabinets to find the total height of the assembly, and use that to mark the length the vertical boards need to be.\nAlternatively, you can use the technical drawings. I've put images of them in this step for convenience.", "step_imgs": ["https://cdn.instructables.com/FCL/0MPU/JU31RJVI/FCL0MPUJU31RJVI.LARGE.jpg", "https://cdn.instructables.com/FMY/YRXF/JTON2CC5/FMYYRXFJTON2CC5.LARGE.jpg", "https://cdn.instructables.com/FFH/9OIG/JTON2CB3/FFH9OIGJTON2CB3.LARGE.jpg", "https://cdn.instructables.com/FAO/IV87/JU31RJUG/FAOIV87JU31RJUG.LARGE.jpg", "https://cdn.instructables.com/FLD/5BTH/JU31RJV8/FLD5BTHJU31RJV8.LARGE.jpg", "https://cdn.instructables.com/F10/N6QY/JU31RJVB/F10N6QYJU31RJVB.LARGE.jpg", "https://cdn.instructables.com/FCF/WOHU/JTON2CBC/FCFWOHUJTON2CBC.LARGE.jpg", "https://cdn.instructables.com/FOV/MZRF/JTWT4Q3U/FOVMZRFJTWT4Q3U.LARGE.jpg", "https://cdn.instructables.com/FW5/G76F/JTWT4Q4R/FW5G76FJTWT4Q4R.LARGE.jpg", "https://cdn.instructables.com/FTP/AJNZ/JTWT4Q56/FTPAJNZJTWT4Q56.LARGE.jpg"], "step_title": "Step 8: Construction - Cutting the Boards"}, {"step": 9, "steps_text": "Begin by assembling the horizontal boards with the right vertical board. Remember to drill pilot and countersink holes to relieve strain on the end of the boards.", "step_imgs": ["https://cdn.instructables.com/FFC/PBOB/JTON2CC8/FFCPBOBJTON2CC8.LARGE.jpg", "https://cdn.instructables.com/FQD/DNU4/JTWT53LC/FQDDNU4JTWT53LC.LARGE.jpg", "https://cdn.instructables.com/F20/8ISE/JTWT53LG/F208ISEJTWT53LG.LARGE.jpg", "https://cdn.instructables.com/FBH/DK2T/JTON2CC7/FBHDK2TJTON2CC7.LARGE.jpg", "https://cdn.instructables.com/FCM/5OI0/JTON2CCA/FCM5OI0JTON2CCA.LARGE.jpg", "https://cdn.instructables.com/F35/05N3/JTON2CGN/F3505N3JTON2CGN.LARGE.jpg", "https://cdn.instructables.com/FHA/F7XL/JTWT53LE/FHAF7XLJTWT53LE.LARGE.jpg", "https://cdn.instructables.com/F2D/KFGB/JTWT53LF/F2DKFGBJTWT53LF.LARGE.jpg"], "step_title": "Step 9: Construction - Frame Assembly"}, {"step": 10, "steps_text": "The horizontal supports for all the containers in the cabinet are recessed about a half inch behind the bezel. To route the LED strips along these horizontal supports, a drill is used to make holes in the bezel to thread the LED strips through. I used sandpaper and a dremel to tidy up the holes.", "step_imgs": ["https://cdn.instructables.com/FKM/8TY8/JTON2CB5/FKM8TY8JTON2CB5.LARGE.jpg", "https://cdn.instructables.com/FAP/WLQI/JU31RJVJ/FAPWLQIJU31RJVJ.LARGE.jpg"], "step_title": "Step 10: Construction - Prepare the Cabinets"}, {"step": 11, "steps_text": "1. Take each of the 7 2-meter long LED strips, and find the middle. The contact terminals in the middle will have solder on them, making them different from all the rest. (There is solder on the terminals every 50cm on these LED strips). Use a pair of scissors to cut the solder pads in half. Do this for all LED strips, leaving you with 14 1-meter long lengths. Leave the paper backing on for now.\n2. Critical Step: Find a LED strip length with a male-end connector, as shown. Note: the direction of the little arrows on the LED strip should point away from the connector.\n\n3. From the top-left of the four-cabinet assembly, feed the led strips in as shown. This will produce a zig-zag pattern when connecting all the LEDs. Note: starting from the top, for every odd row the arrows should point to the right. For every even row, the arrows should point to the left.", "step_imgs": ["https://cdn.instructables.com/FU6/R73I/JU31RJUA/FU6R73IJU31RJUA.LARGE.jpg", "https://cdn.instructables.com/FCD/GCCR/JTYN51TG/FCDGCCRJTYN51TG.LARGE.jpg", "https://cdn.instructables.com/F1V/FUMI/JTYN51TH/F1VFUMIJTYN51TH.LARGE.jpg", "https://cdn.instructables.com/FEV/ZTO8/JTT5VFI6/FEVZTO8JTT5VFI6.LARGE.jpg", "https://cdn.instructables.com/F4Y/0UTI/JTON2CE7/F4Y0UTIJTON2CE7.LARGE.jpg", "https://cdn.instructables.com/FGG/R7ZX/JTON2CCC/FGGR7ZXJTON2CCC.LARGE.jpg", "https://cdn.instructables.com/FXZ/WQQT/JTON2CD1/FXZWQQTJTON2CD1.LARGE.jpg", "https://cdn.instructables.com/FP1/47AS/JTON2CD2/FP147ASJTON2CD2.LARGE.jpg", "https://cdn.instructables.com/FA4/JE2K/JTON2CD3/FA4JE2KJTON2CD3.LARGE.jpg", "https://cdn.instructables.com/FEW/LB99/JTON2CD6/FEWLB99JTON2CD6.LARGE.jpg", "https://cdn.instructables.com/FAO/HMHQ/JTWT53LI/FAOHMHQJTWT53LI.LARGE.jpg", "https://cdn.instructables.com/FIQ/XVVF/JTWT5482/FIQXVVFJTWT5482.LARGE.jpg", "https://cdn.instructables.com/F0K/199T/JTWT53ME/F0K199TJTWT53ME.LARGE.jpg", "https://cdn.instructables.com/F0U/A0YP/JTON2CEC/F0UA0YPJTON2CEC.LARGE.jpg", "https://cdn.instructables.com/F4F/AH2H/JTON2CDS/F4FAH2HJTON2CDS.LARGE.jpg", "https://cdn.instructables.com/FY0/PQGN/JTON2CEF/FY0PQGNJTON2CEF.LARGE.jpg", "https://cdn.instructables.com/F3S/Z77B/JTON2CEI/F3SZ77BJTON2CEI.LARGE.jpg", "https://cdn.instructables.com/F57/BD24/JTON2CDZ/F57BD24JTON2CDZ.LARGE.jpg", "https://cdn.instructables.com/F18/4HR1/JTON2CFF/F184HR1JTON2CFF.LARGE.jpg", "https://cdn.instructables.com/FRU/2P0C/JTWT53M2/FRU2P0CJTWT53M2.LARGE.jpg", "https://cdn.instructables.com/FV4/BKHI/JTT5VFN4/FV4BKHIJTT5VFN4.LARGE.jpg"], "step_title": "Step 11: Construction - Install the LED Strips"}, {"step": 12, "steps_text": "Before we finish up the assembly, it's a good idea to make sure all the wiring is correct and the LEDs are working.\n1. Setup the circuit as shown in the Fritzing diagram.\n2. Open up Particle Dev, or use the Particle Web IDE, to upload HelloWorld.ino to your photon.\nThis test lights up four LEDs along the length of some of the strip, to test that it's working.\nWARNING: Do NOT turn on more than 4 LEDs at once. You risk consuming more power than the USB connection can supply. We will address this in the next step.", "step_imgs": ["https://cdn.instructables.com/FE3/GXIE/JTT5JOSC/FE3GXIEJTT5JOSC.LARGE.jpg", "https://cdn.instructables.com/F2K/OA25/JTON2CHS/F2KOA25JTON2CHS.LARGE.jpg", "https://cdn.instructables.com/FHG/8DQD/JTON2CHT/FHG8DQDJTON2CHT.LARGE.jpg", "https://cdn.instructables.com/FKF/XRA8/JTYN5QOU/FKFXRA8JTYN5QOU.LARGE.jpg"], "step_title": "Step 12: Quick Testing"}, {"step": 13, "steps_text": "You may be wondering, why have all those power wires? Do I really need them? Yes, for two reasons:\n1. To support turning on several LEDs at once, in case the search result turns up multiple items\n2. To provide consistent 5V to all LEDs, as there is a small voltage drop across each LED.\nTo see what happens if you don't apply power at regular intervals, watch this video:\nWhy have such a large power supply? Do we really need 60A?\nTechnically, no. But if you want to run the LEDs at full brightness, then yes. So why limit your options?\nPower Calculations\nHow do we arrive at 60A?\nThe manufacturer mentions 18W/meter @ 60 pixels/meter in the datasheet, and by datasheet, I mean a bunch of text hastily scribbled down on the product page:\nEach row on the organizer is exactly 1 meter, and there are 14 rows, so we have 14 meters of LED goodness.\n14 meters at 100% brightness, means the total wattage of the strip is 18W/m*14m = 252W.\nWe can use the power equation: P = IV, to give us a rough estimate of current (Amps) needed. Rearranging:\nPower, P, is measured in Watts; I = Amperes; V = Volts\nI = P/V = 252Watts/5V = 50.4A.\nThe next smallest power supply down from 60A was 40A - too small to power all LEDs at full brightness. So 60A it is. It's a good idea to get a power supply that exceeds the power requirements of your system by some margin, a ~12% safety margin (60/50.4 - 1) in this case is sufficient.\nBut what happens if you don't know how many watts are used per meter of your LED strip? Well, you can estimate it using rough estimates for other LEDs you may have. Most standard 5mm LEDs, like the red ones shown in the demo video, draw around 20mA of current when running off of 5V. Using that information, we can extrapolate power requirements for an LED strip:\n\n1. 20mA (milliamperes) is drawn per LED, that's 0.020A (1000mA = 1A)\n2. RGB LEDs have three LEDs each: one red, blue, and green\n3. Find the number of pixels per meter, in this case, there are 60 pixels per meter.\nAt 14 rows, with each row being 1 meter long, that leaves us with:\n14 meters * 60 pixels/meter * 3 LEDs/pixel * 0.020A / LED = 50.4A\n\nHey great, that's the same Amp requirements as calculated in our previous equation!", "step_imgs": ["https://cdn.instructables.com/F30/08V3/JTON2CD9/F3008V3JTON2CD9.LARGE.jpg", "https://cdn.instructables.com/FE4/VKVV/JTON2CGM/FE4VKVVJTON2CGM.LARGE.jpg", "https://cdn.instructables.com/FMH/EKGN/JTON2CDF/FMHEKGNJTON2CDF.LARGE.jpg", "https://cdn.instructables.com/F6P/9B48/JTON2CFU/F6P9B48JTON2CFU.LARGE.jpg", "https://cdn.instructables.com/F7L/VNKE/JTON2CFK/F7LVNKEJTON2CFK.LARGE.jpg", "https://cdn.instructables.com/FP5/F650/JTON2CFR/FP5F650JTON2CFR.LARGE.jpg", "https://cdn.instructables.com/FBL/XZSJ/JTON2CGR/FBLXZSJJTON2CGR.LARGE.jpg", "https://cdn.instructables.com/FKD/H1B9/JTON2CGU/FKDH1B9JTON2CGU.LARGE.jpg", "https://cdn.instructables.com/FXU/8K8W/JTON2CGV/FXU8K8WJTON2CGV.LARGE.jpg", "https://cdn.instructables.com/FAZ/KQA3/JTON2CHR/FAZKQA3JTON2CHR.LARGE.jpg", "https://cdn.instructables.com/F3X/L11H/JTON2CFV/F3XL11HJTON2CFV.LARGE.jpg", "https://cdn.instructables.com/F2O/I0UL/JTON2CJH/F2OI0ULJTON2CJH.LARGE.jpg"], "step_title": "Step 13: Construction - Install the LED Strip Power Wires"}, {"step": 14, "steps_text": "We're not done with those foam pads just yet. In the first step, we cut them to size. Now we'll route cutouts and channels for all the wiring to run through. Align the pad to the wooden frame, and use a marker to mark the routes the wires take along the foam pads, then use a dremel to cut holes and channels for said wire to run through. Since we haven't fastened the cabinets to the wood yet, you can just slide them length wise along the frame to access both sides.\nAs you can see, I did a pretty quick and dirty job of this. But no matter, it never sees the light of day once everything is put together.", "step_imgs": ["https://cdn.instructables.com/FG2/2MV8/JTON2CDL/FG22MV8JTON2CDL.LARGE.jpg", "https://cdn.instructables.com/FY2/QDHX/JTON2CDO/FY2QDHXJTON2CDO.LARGE.jpg", "https://cdn.instructables.com/FZO/A56T/JTON2CDI/FZOA56TJTON2CDI.LARGE.jpg", "https://cdn.instructables.com/F8U/D108/JTON2CKV/F8UD108JTON2CKV.LARGE.jpg", "https://cdn.instructables.com/F1A/8XN6/JTON2CJI/F1A8XN6JTON2CJI.LARGE.jpg", "https://cdn.instructables.com/FQ3/9F6S/JTON2CKX/FQ39F6SJTON2CKX.LARGE.jpg"], "step_title": "Step 14: Construction - Foam Pads V2"}, {"step": 15, "steps_text": "To aid with wiring, the cabinets were never fastened in place.\nWith the wiring done, and the foam pads in place, finally install the vertical board on the left.\nNudge the cabinets so they are flush with the front of the frame assembly, and then drill two holes on the bottom of each cabinet into the supporting wood plank below. Fasten the cabinets to the assembly with the 3/4\" machine pan-head screws.", "step_imgs": ["https://cdn.instructables.com/FBG/OVVK/JTWT5BFX/FBGOVVKJTWT5BFX.LARGE.jpg", "https://cdn.instructables.com/F7F/G5MG/JTON2CKY/F7FG5MGJTON2CKY.LARGE.jpg", "https://cdn.instructables.com/FIH/5C9R/JTWT53MQ/FIH5C9RJTWT53MQ.LARGE.jpg", "https://cdn.instructables.com/F7K/B2U2/JTON2CF9/F7KB2U2JTON2CF9.LARGE.jpg", "https://cdn.instructables.com/FSQ/XHEY/JTT5VFML/FSQXHEYJTT5VFML.LARGE.jpg", "https://cdn.instructables.com/F04/VEBS/JTON2CLM/F04VEBSJTON2CLM.LARGE.jpg"], "step_title": "Step 15: Construction - Final Touches to the Assembly"}, {"step": 16, "steps_text": "I found that over time, the foam pads applied a little too much lateral pressure to the cabinets. This resulted in the LED strips buckling off of the cabinet rows. To fix that, I used some wooden wedges to push the cabinets apart and pull the LED strips taught.", "step_imgs": ["https://cdn.instructables.com/F56/QALJ/JTON2CL1/F56QALJJTON2CL1.LARGE.jpg", "https://cdn.instructables.com/FPO/CM0A/JTON2CL3/FPOCM0AJTON2CL3.LARGE.jpg", "https://cdn.instructables.com/FY0/MFVF/JTON2CL5/FY0MFVFJTON2CL5.LARGE.jpg", "https://cdn.instructables.com/FTH/BZ3Z/JTON2CL4/FTHBZ3ZJTON2CL4.LARGE.jpg", "https://cdn.instructables.com/F3N/PP9W/JTON2CL6/F3NPP9WJTON2CL6.LARGE.jpg"], "step_title": "Step 16: Construction - Adjusting the Boards"}, {"step": 17, "steps_text": "WARNING: HIGH VOLTAGE - In this step, we attach the beefy power supply up to all the LED strip power lines.\nDo not, under any circumstances, wire up the power supply with the power cable plugged in.\n1. Begin with testing that the power supply turns on. See the first photo. Then unplug the power supply cable.\n2. Wire up only the first row of LEDs to the power supply\n3. Disconnect the second and third row of LEDs\n4. Repeat the test on Step 12: Quick Testing. If the LEDs work as expected, great! If not, make sure the 5V and GND power supply lines are wired correctly.\n5. When the first row of LEDs is tested and working with the power supply, go on and wire up the remaining LED strip power lines. Repeat Step 12: Quick Testing, but make the following modification:\nBefore After\nThis time, the four-led pewpew that zig-zags across the display should maintain the same brightness the entire way through. Like so:\n6. Once all the LEDs are working as intended, go on and cleanup the wiring. Use some double-sided foam tape to secure the power supply.", "step_imgs": ["https://cdn.instructables.com/F4L/IT5B/JTON2CJK/F4LIT5BJTON2CJK.LARGE.jpg", "https://cdn.instructables.com/FVQ/YEU8/JTON2CJJ/FVQYEU8JTON2CJJ.LARGE.jpg", "https://cdn.instructables.com/FMX/UHT6/JTON2CJQ/FMXUHT6JTON2CJQ.LARGE.jpg", "https://cdn.instructables.com/FQJ/WQDS/JTON2CJS/FQJWQDSJTON2CJS.LARGE.jpg", "https://cdn.instructables.com/FLI/ZG3B/JTON2CJV/FLIZG3BJTON2CJV.LARGE.jpg", "https://cdn.instructables.com/FSL/N6HX/JTON2CJW/FSLN6HXJTON2CJW.LARGE.jpg", "https://cdn.instructables.com/FZ4/DTPZ/JTON2CKT/FZ4DTPZJTON2CKT.LARGE.jpg", "https://cdn.instructables.com/FBV/HAG3/JTON2CJX/FBVHAG3JTON2CJX.LARGE.jpg", "https://cdn.instructables.com/F4B/JNE3/JTON2CKS/F4BJNE3JTON2CKS.LARGE.jpg", "https://cdn.instructables.com/FH9/K892/JTON2CL0/FH9K892JTON2CL0.LARGE.jpg"], "step_title": "Step 17: Electrical - Hooking Up the Power Supply and Testing"}, {"step": 18, "steps_text": "The particle photon drives two important pieces of FindyBot3000:\n1. The Relay - this allows FindyBot3000 to operate in low-power mode, by turning on the LED power supply only when needed.\n2. The LEDs - the Photon drives the LEDs through the voltage step-up converter.", "step_imgs": ["https://cdn.instructables.com/FF9/M8AF/JTYN8D6M/FF9M8AFJTYN8D6M.LARGE.jpg", "https://cdn.instructables.com/FSK/EOYN/JTON2CLE/FSKEOYNJTON2CLE.LARGE.jpg", "https://cdn.instructables.com/FE2/Z9V4/JTWT53NT/FE2Z9V4JTWT53NT.LARGE.jpg", "https://cdn.instructables.com/F7I/ZMMZ/JTT5VFMX/F7IZMMZJTT5VFMX.LARGE.jpg", "https://cdn.instructables.com/FLS/HPK4/JTON2CLG/FLSHPK4JTON2CLG.LARGE.jpg", "https://cdn.instructables.com/F6B/6PUV/JTON2CLH/F6B6PUVJTON2CLH.LARGE.jpg", "https://cdn.instructables.com/FF4/64RL/JTON2CLI/FF464RLJTON2CLI.LARGE.jpg", "https://cdn.instructables.com/FCD/K0SL/JTON2CLJ/FCDK0SLJTON2CLJ.LARGE.jpg"], "step_title": "Step 18: Electrical - Wiring Up the Particle Photon"}, {"step": 19, "steps_text": "In this step, we link together the Google Home and Particle Photon.\nPrerequisites:\n- Log into your Github account\n- Download and install Particle Dev\n- Download and install Github Desktop\nSteps:\n1. Navigate to the FindyBot3000 repo on Github: https://github.com/Inventor22/FindyBot3000\n2. Clone the repo to your computer\n3. Open Particle Dev, and load the project folder: FindyBot3000\\Photon\\FindyBot\n3. Plug in the Photon to your computer via USB cable, and select your photon from the devices menu in Particle Dev\n4. Flash the particle photon with the firmware\nBefore we can test to see if the photon is working with the flashed firmware, we need to setup Google Home to talk to the Particle Photon, through IFTTT.", "step_imgs": ["https://cdn.instructables.com/FR9/HZ3I/JTYNCCWX/FR9HZ3IJTYNCCWX.LARGE.jpg", "https://cdn.instructables.com/FAT/8Z57/JTYN9I0H/FAT8Z57JTYN9I0H.LARGE.jpg", "https://cdn.instructables.com/F6V/I4UG/JTYN9HW4/F6VI4UGJTYN9HW4.LARGE.jpg", "https://cdn.instructables.com/FKR/CXJ3/JTYN9HUN/FKRCXJ3JTYN9HUN.LARGE.jpg", "https://cdn.instructables.com/FJ9/K6F5/JTYN9JMQ/FJ9K6F5JTYN9JMQ.LARGE.jpg", "https://cdn.instructables.com/F4U/8M0W/JTYN96LO/F4U8M0WJTYN96LO.LARGE.jpg", "https://cdn.instructables.com/FSU/SE6P/JTYN96TN/FSUSE6PJTYN96TN.LARGE.jpg", "https://cdn.instructables.com/FRO/4FBM/JTYN974F/FRO4FBMJTYN974F.LARGE.jpg", "https://cdn.instructables.com/F6J/I9N4/JTYN977J/F6JI9N4JTYN977J.LARGE.jpg", "https://cdn.instructables.com/F0U/X8P9/JTYN977P/F0UX8P9JTYN977P.LARGE.jpg", "https://cdn.instructables.com/FIW/XD71/JTYN9BOY/FIWXD71JTYN9BOY.LARGE.jpg", "https://cdn.instructables.com/FM5/UWYA/JTYN97G7/FM5UWYAJTYN97G7.LARGE.jpg", "https://cdn.instructables.com/FI1/53W2/JTYN97JK/FI153W2JTYN97JK.LARGE.jpg", "https://cdn.instructables.com/F53/8QJU/JTYN97MW/F538QJUJTYN97MW.LARGE.jpg"], "step_title": "Step 19: Software - Download and Install"}, {"step": 20, "steps_text": "To test the firmware we just uploaded to the Particle Photon, there are a few simple commands we can trigger on the Google Home.\nFirst, we make an IFTTT applet that is triggered when we say \"Ok Google, Welcome $\", where $ is the name of the individual you would like to welcome.\nAs soon as the applet has deployed, you can begin testing your FindyBot3000!", "step_imgs": ["https://cdn.instructables.com/F6Z/ZV2N/JTYN9X69/F6ZZV2NJTYN9X69.LARGE.jpg", "https://cdn.instructables.com/FFH/5OYJ/JTYN9Z3T/FFH5OYJJTYN9Z3T.LARGE.jpg", "https://cdn.instructables.com/FSX/131W/JTYNA6XL/FSX131WJTYNA6XL.LARGE.jpg", "https://cdn.instructables.com/FVC/MR30/JTYNA6R6/FVCMR30JTYNA6R6.LARGE.jpg", "https://cdn.instructables.com/FAV/2HCL/JTYNA6PF/FAV2HCLJTYNA6PF.LARGE.jpg", "https://cdn.instructables.com/F1P/CU4B/JTYNA6NU/F1PCU4BJTYNA6NU.LARGE.jpg", "https://cdn.instructables.com/FCW/U35Z/JTYNA7X3/FCWU35ZJTYNA7X3.LARGE.jpg", "https://cdn.instructables.com/F57/4OV6/JTYNA6NI/F574OV6JTYNA6NI.LARGE.jpg", "https://cdn.instructables.com/FZ1/TN48/JTYNA6LM/FZ1TN48JTYNA6LM.LARGE.jpg", "https://cdn.instructables.com/FNZ/IQN1/JTYNA6SX/FNZIQN1JTYNA6SX.LARGE.jpg", "https://cdn.instructables.com/FY2/EB6E/JTYNA720/FY2EB6EJTYNA720.LARGE.jpg", "https://cdn.instructables.com/FWQ/WJ9D/JTYNA6Z3/FWQWJ9DJTYNA6Z3.LARGE.jpg"], "step_title": "Step 20: Software - Linking in IFTTT"}, {"step": 21, "steps_text": "Use the table above to create the remaining IFTTT applets.\nCurrently FindyBot3000 supports 10 commands which require a SQL database, and another 4 commands which run locally on the Photon.\nRequires SQL Database:\nFindItem - Find an item\nFindTags - Find items matching provided tags, colored on a gradient according to number of tags matched\nInsertItem - Insert a new item into the organizer\nRemoveItem - Remove an existing item from the organizer\nAddTags - Add tags to an existing object. Ex: \"Add tags diode light emitting to green LEDs\"\nSetQuantity - Set the quantity of an existing item\nUpdateQuantity - Update the quantity of an existing item\nShowAllBoxes - Light up all the boxes which have items in them with random colors\nBundleWith - Bundle a new item with an existing item. Ex: \"Bundle 8 blue LEDs with red LEDs\"\nHowMany - Show, in ASCII text on the display, the remaining quantity of an item.\nLocal Commands:\nWelcome - Scroll text across the display, welcoming the specified individual\nSetBrightness - Change the brightness of the LEDs\nSetDisplay - Turn on and off the display\nChangeColors - Change the color gradient used by the FindTags command", "step_imgs": ["https://cdn.instructables.com/FFJ/AVZG/JTYNACY9/FFJAVZGJTYNACY9.LARGE.jpg", "https://cdn.instructables.com/F79/O0MW/JTYNAF08/F79O0MWJTYNAF08.LARGE.jpg"], "step_title": "Step 21: Software - Remaining IFTTT Commands"}, {"step": 22, "steps_text": "A picture speaks a thousand words...\nNavigate to the Microsoft Azure Portal and log in.\nHere we deploy the Azure Function, and set up continuous integration through Github. In this way, when new changes are pushed to the forked repository you created, they will automatically update the Azure Function with the new bits.", "step_imgs": ["https://cdn.instructables.com/FWF/W2IC/JTYNAPR3/FWFW2ICJTYNAPR3.LARGE.jpg", "https://cdn.instructables.com/FF6/HIJD/JTYNAN1O/FF6HIJDJTYNAN1O.LARGE.jpg", "https://cdn.instructables.com/F30/QGZC/JTYNAN1Q/F30QGZCJTYNAN1Q.LARGE.jpg", "https://cdn.instructables.com/FM4/DGHE/JTYNAN21/FM4DGHEJTYNAN21.LARGE.jpg", "https://cdn.instructables.com/FBG/QL86/JTYNAO24/FBGQL86JTYNAO24.LARGE.jpg", "https://cdn.instructables.com/F9I/KL64/JTYNAOO7/F9IKL64JTYNAOO7.LARGE.jpg", "https://cdn.instructables.com/FM8/X241/JTYNAOTS/FM8X241JTYNAOTS.LARGE.jpg", "https://cdn.instructables.com/F34/6GLX/JTYNAOUJ/F346GLXJTYNAOUJ.LARGE.jpg", "https://cdn.instructables.com/FRL/UV8A/JTYNAOUO/FRLUV8AJTYNAOUO.LARGE.jpg", "https://cdn.instructables.com/F4Z/L73T/JTYNAOUP/F4ZL73TJTYNAOUP.LARGE.jpg", "https://cdn.instructables.com/FYF/C8VB/JTYNAOUR/FYFC8VBJTYNAOUR.LARGE.jpg", "https://cdn.instructables.com/FQY/FJEE/JTYNAOV3/FQYFJEEJTYNAOV3.LARGE.jpg", "https://cdn.instructables.com/FQC/VSTB/JTYNAOUU/FQCVSTBJTYNAOUU.LARGE.jpg", "https://cdn.instructables.com/FI6/1ROS/JTYNAOUV/FI61ROSJTYNAOUV.LARGE.jpg"], "step_title": "Step 22: Software - Deploy the Azure Function"}, {"step": 23, "steps_text": "In order for the Particle Photon to successfully send data to the Azure Function, it needs to know where to send the message. In this step, we setup a Webhook between the Photon and our Azure Function.", "step_imgs": ["https://cdn.instructables.com/FH5/FOR0/JTYNAPJ3/FH5FOR0JTYNAPJ3.LARGE.jpg", "https://cdn.instructables.com/F5W/EL4Z/JTYNAPJ9/F5WEL4ZJTYNAPJ9.LARGE.jpg", "https://cdn.instructables.com/FNN/6EKA/JTYNBAA0/FNN6EKAJTYNBAA0.LARGE.jpg", "https://cdn.instructables.com/FEE/JMIG/JTYNBAAB/FEEJMIGJTYNBAAB.LARGE.jpg", "https://cdn.instructables.com/F0W/QZYJ/JTYNAPKW/F0WQZYJJTYNAPKW.LARGE.jpg", "https://cdn.instructables.com/FYG/TWP3/JTYNBBMK/FYGTWP3JTYNBBMK.LARGE.jpg"], "step_title": "Step 23: Software - Link Particle Photon to Azure Function"}, {"step": 24, "steps_text": "In this step we deploy the SQL Database, and provide access to the Azure Function via the sql_connection string.", "step_imgs": ["https://cdn.instructables.com/FSX/K9G8/JTYNAONJ/FSXK9G8JTYNAONJ.LARGE.jpg", "https://cdn.instructables.com/FMX/3WAV/JTYNAONK/FMX3WAVJTYNAONK.LARGE.jpg", "https://cdn.instructables.com/F0W/CEXU/JTYNAONL/F0WCEXUJTYNAONL.LARGE.jpg", "https://cdn.instructables.com/F0W/O4AR/JTYNAOOA/F0WO4ARJTYNAOOA.LARGE.jpg", "https://cdn.instructables.com/F7Q/RDYF/JTYNAOOB/F7QRDYFJTYNAOOB.LARGE.jpg", "https://cdn.instructables.com/FR5/FLEE/JTYNAOOE/FR5FLEEJTYNAOOE.LARGE.jpg", "https://cdn.instructables.com/FP5/HR4O/JTYNAOOF/FP5HR4OJTYNAOOF.LARGE.jpg", "https://cdn.instructables.com/FQU/GMM9/JTYNAOP8/FQUGMM9JTYNAOP8.LARGE.jpg", "https://cdn.instructables.com/FZX/I408/JTYNAOQQ/FZXI408JTYNAOQQ.LARGE.jpg", "https://cdn.instructables.com/F5A/O04J/JTYNAOQS/F5AO04JJTYNAOQS.LARGE.jpg", "https://cdn.instructables.com/FS3/KLJN/JTYNAOSA/FS3KLJNJTYNAOSA.LARGE.jpg", "https://cdn.instructables.com/F1I/HWDE/JTYNAOV5/F1IHWDEJTYNAOV5.LARGE.jpg", "https://cdn.instructables.com/FZO/RLB1/JTYNAOV6/FZORLB1JTYNAOV6.LARGE.jpg", "https://cdn.instructables.com/FMP/ABJ8/JTYNAOV7/FMPABJ8JTYNAOV7.LARGE.jpg", "https://cdn.instructables.com/FBM/2P1A/JTYNAOV8/FBM2P1AJTYNAOV8.LARGE.jpg", "https://cdn.instructables.com/FS6/YZ8Q/JTYNAOV9/FS6YZ8QJTYNAOV9.LARGE.jpg"], "step_title": "Step 24: Software - Deploy the SQL Database"}, {"step": 25, "steps_text": "So we've got the Photon talking to the Azure Function, and the Azure Function talking to the SQL Database. But We're not out of the woods just yet. In order for the SQL queries in the Azure Function to work correctly, they need to query SQL Tables. In this step, we create the necessary tables in the SQL Database.", "step_imgs": ["https://cdn.instructables.com/FDG/L6WS/JU31TA04/FDGL6WSJU31TA04.LARGE.jpg", "https://cdn.instructables.com/FIZ/ET1J/JTYNBEXH/FIZET1JJTYNBEXH.LARGE.jpg", "https://cdn.instructables.com/FCC/49RE/JTYNBFT7/FCC49REJTYNBFT7.LARGE.jpg", "https://cdn.instructables.com/FHI/CP3J/JTYNBFUG/FHICP3JJTYNBFUG.LARGE.jpg"], "step_title": "Step 25: Software - Create the SQL Tables"}, {"step": 26, "steps_text": "There's a lot more that can be done!\nIn the future, there will be room for an LCD to display debug information, or animating the lights, beyond just text scrolling.", "step_imgs": [], "step_title": "Step 26: Final Thoughts"}], "channel": ""}, {"category": "", "description": "This instructable is for the making of a moving origami kinetic sculpture/machine. This will also show you the basics of how to use servo motors with an arduino type micro-controller. I have been wanting to figure out how to use motors with the arduino for a while since they are one of the main ways to go from electrical to mechanical. The way I make the origami swan move is by using two strands of fishing line that are connected to the servo motor which swings back and forth to pull the wings down. The paper's natural springiness then brings the wings back up and the process repeats.", "title": "Automaton Origami", "url": "https://www.instructables.com/id/Automaton-Origami/", "section": "technology", "steps": [{"step": 1, "steps_text": "Itsy Bitsy\nFishing line\nWire\nWire stripper\nSmall screwdriver\nSmall computer screws\nServo Motor\nServo motor arm (this will come in the package for the servo motor)\nPaper\n3d Printer (or an online 3d printing service)\nComputer that is compatible with the arduino software", "step_imgs": ["https://cdn.instructables.com/FK3/WNE7/JT91KV0I/FK3WNE7JT91KV0I.LARGE.jpg"], "step_title": "Step 1: Materials/Tools"}, {"step": 2, "steps_text": "For this step you can either download the STL files from below or go to my thingiverse page here: https://www.thingiverse.com/thing:3534613. If you got the same parts that I mentioned above everything should fit just fine however, depending on your printer settings, you may need to use different sized screws.", "step_imgs": ["https://cdn.instructables.com/FI4/XHAF/JTYNBDZ1/FI4XHAFJTYNBDZ1.LARGE.jpg"], "step_title": "Step 2: 3D Printing the Case"}, {"step": 3, "steps_text": "First of all, you are going to want to go get the Arduino IDE software that we will be using to program the board from here: https://www.arduino.cc/en/Main/Software. Next, go ahead and plug in the Itsy Bitsy to your computer and follow the directions here: https://learn.adafruit.com/introducting-itsy-bitsy-32u4/arduino-ide-setup under \"Arduino IDE Setup\" and \"Using With Arduino IDE.\" I would have explained this in the instructable however the people at adafruit.com do a great job explaining how to use their products.", "step_imgs": ["https://cdn.instructables.com/FAP/KAZ9/JTWS25OV/FAPKAZ9JTWS25OV.LARGE.jpg"], "step_title": "Step 3: Setting Up the Itsy Bitsy"}, {"step": 4, "steps_text": "The wiring of the electronics was fairly straight forward just take a look at the diagram above. I started off with cutting the servo wire down to a shorter size, you won't be needing the adapter on the end for this project. Next I soldered the wires up to their appropriate spots on the Itsy Bitsy. Soldering should probably be done outside of the case however you may need to check the fit so that you ensure you have enough slack in the wires. The red wires went to the 5v pin. The black and brown wires went to the ground pin. Finally, the two different colored wires from the servo and the switch go to a numbered pin of your choosing, just make sure you remember them.", "step_imgs": ["https://cdn.instructables.com/F7J/5513/JTYNC1NK/F7J5513JTYNC1NK.LARGE.jpg", "https://cdn.instructables.com/FWS/GA70/JTYNB4ZO/FWSGA70JTYNB4ZO.LARGE.jpg", "https://cdn.instructables.com/FMT/BCF6/JTYNBDUB/FMTBCF6JTYNBDUB.LARGE.jpg"], "step_title": "Step 4: Wiring the Electronics"}, {"step": 5, "steps_text": "The programming is fairly straightforward as well. It tells the Itsy Bitsy to have the motor spin back and forth 180 degrees while the switch is on. You may need to change the inputs and outputs in the code if you soldered them to different spots than I did. I originally learned the code for the spinning of servos from https://www.arduino.cc/en/Tutorial/sweep and used the same concept for this project. Once you complete the wiring and programming, attach the one-sided, small, servo arm (see picture above) to the servo and activate the program. Take it off and put it back on until it is changing direction while it is parallel to the length of the servo.\n#include Servo myservo;\n\nint pos = 0;\n\nvoid setup() {\n  myservo.attach(1);\n  pinMode(7, INPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {  if (digitalRead(7)== HIGH) {\n  for (pos = 0; pos <= 180; pos += 5) {\n    myservo.write(pos);\n    delay(15);\n  }\n  for (pos = 180; pos >= 0; pos -= 5) {\n    myservo.write(pos);\n    delay(15);\n  }\n}\n\n}", "step_imgs": ["https://cdn.instructables.com/FWN/3I6O/JTYNHVOB/FWN3I6OJTYNHVOB.LARGE.jpg"], "step_title": "Step 5: Programming and Calibration of the Servo"}, {"step": 6, "steps_text": "Start with a 8\" by 8\" piece of paper\nFold sideways and diagonally to make the next step easier.\nTake one of the corners and fold it inwards with the corners on either side of it.\nFold the sides to the middle and the top corner downwards.\nFlip over and repeat step 4.\nTake the bottom corner and bring it up (make sure you look at the picture).\nFlip over and repeat step 6.\nFold the sides to the middle. repeat on opposite side\nTurn each of the sides inside out and to the side.\nFold down a small bit of one side for the head.\nFold down wings\nPoke two small holes in each wing for the fishing line. I used a special tool for this, however a toothpick should work the same way.", "step_imgs": ["https://cdn.instructables.com/FAB/EYJL/JTYNBSQU/FABEYJLJTYNBSQU.LARGE.jpg", "https://cdn.instructables.com/FAN/F0LL/JTYNBSWR/FANF0LLJTYNBSWR.LARGE.jpg", "https://cdn.instructables.com/FOE/N8Y5/JTYNBSYZ/FOEN8Y5JTYNBSYZ.LARGE.jpg", "https://cdn.instructables.com/FT6/X5J7/JTYNBT05/FT6X5J7JTYNBT05.LARGE.jpg", "https://cdn.instructables.com/F5J/0JIY/JTYNBT2E/F5J0JIYJTYNBT2E.LARGE.jpg", "https://cdn.instructables.com/FDO/WCNQ/JTYNBT6J/FDOWCNQJTYNBT6J.LARGE.jpg", "https://cdn.instructables.com/FGI/3ADG/JTYNBT9F/FGI3ADGJTYNBT9F.LARGE.jpg", "https://cdn.instructables.com/F7N/LK68/JTYNBTAR/F7NLK68JTYNBTAR.LARGE.jpg", "https://cdn.instructables.com/FAJ/X4CS/JTYNBTC6/FAJX4CSJTYNBTC6.LARGE.jpg", "https://cdn.instructables.com/FJR/GX5D/JTYNBTFS/FJRGX5DJTYNBTFS.LARGE.jpg", "https://cdn.instructables.com/F53/HIKH/JTYNBTFV/F53HIKHJTYNBTFV.LARGE.jpg", "https://cdn.instructables.com/FJY/5TEJ/JTYNBTFZ/FJY5TEJJTYNBTFZ.LARGE.jpg", "https://cdn.instructables.com/F4O/M4GE/JTYNBTG4/F4OM4GEJTYNBTG4.LARGE.jpg", "https://cdn.instructables.com/FEC/WLFX/JTYNBTG8/FECWLFXJTYNBTG8.LARGE.jpg", "https://cdn.instructables.com/FB5/UTK3/JTYNBTG9/FB5UTK3JTYNBTG9.LARGE.jpg"], "step_title": "Step 6: Folding the Origami Swan"}, {"step": 7, "steps_text": "Make sure you have all of the electronics in the correct places (see picture).\nTie two strands of fishing line to the end of the servo arm. There will be excess that can be cut off later, it just makes handling easier for the time being.\nFeed the strands through the small hole in the middle top of the case. (this may need to be enlarged a bit with something like a toothpick depending on the quality of your print)\nPlace the top of the case on the base and screw in the corners making sure that the fishing line is still coming through.\nFit the origami swan in the slits on the top of the case.\nTie one of the two strands to each of the wings of the swan using the holes that were punched in step 7. Make sure that there is minimal slack when the wings are at their natural resting position.\nCut off the excess of the fishing line.\nFYI, the fishing line was a bit difficult to photograph so if you are confused by anything feel free to message me or put something in the comments. :D", "step_imgs": ["https://cdn.instructables.com/FLW/PXLL/JTYNB58U/FLWPXLLJTYNB58U.LARGE.jpg", "https://cdn.instructables.com/FSY/LJPM/JTYNHTDW/FSYLJPMJTYNHTDW.LARGE.jpg", "https://cdn.instructables.com/FKI/CNY1/JTYNHTF7/FKICNY1JTYNHTF7.LARGE.jpg", "https://cdn.instructables.com/F8L/KJQB/JTYNHTBB/F8LKJQBJTYNHTBB.LARGE.jpg"], "step_title": "Step 7: Attaching Everything"}, {"step": 8, "steps_text": "This project was very fun and helpful for getting into adding motion to my projects. The applications for this project and the concept are basically limitless by using the same design for other origami models like a dragon or other flying animals. If you make this project or some variation please feel free to share it below.", "step_imgs": ["https://cdn.instructables.com/FVC/9B35/JTYNBUUO/FVC9B35JTYNBUUO.ANIMATED.LARGE.gif"], "step_title": "Step 8: Conclusion"}], "channel": ""}, {"category": "", "description": "I wrote a web program, called Polygonia Design Suite, to make it easy to create symmetrical designs. These designs can be used for laser cutters, CNC machines, 3D printers, printed on paper, used to make fabric, used for \"manufacture on demand\", even to make tattoos -- although I have not tried the last one yet! You can see what I have made so far on my Instagram.\nThis project is about how to make cube with a design you have created in Polygonia. I used a laser-cutter at my local makerspace, Nova Labs. You can use a service, like Ponoko, or a paper cutter, like the Cameo or Cricut, or even just print the design on paper and fold it up.\nFull disclosure: Polygonia Design Suite is my start-up. All accounts are free. You can create as many designs as you like. (It is my go-to place for doodling!) You can download three free designs a month. If you want to download more there is a small monthly fee.\nBut wait, there's more: I am in the process of figuring out how to add \"promotion codes\". Once I do, you will be able to enter \"INSTRUCTABLES-EPILOG\" and get two months of complementary \"Hobbyist\" subscription, so you can download more designs for free.\nOkay, so let's get started...", "title": "Polygonia Cube", "url": "https://www.instructables.com/id/Polygonia-Cube/", "section": "technology", "steps": [{"step": 1, "steps_text": "I decided that I wanted a cube that was 3\" on each side. Actually, I found piece of MDF in the scrap pile at Nova Labs that was 6\" wide, and that's why I made the cube 3\".\nRight now Polygonia only works in millimeters and pixels, so I tend to work in millimeters for things like this. (I am adding inches soon. It's on my to do list.) 3\" is very close to 75mm.\nA quick google search led me to MakerCase. This site lets you easily design a cube for laser cutting. I changed the units to millimeters and entered 75 for the Width, Height, and Depth fields. I also clicked \"Outside Dimensions\".\nThe MDF I found was 1/4\" thick, or about 6.5mm. I entered that for the \"Material Thickness\", by clicking \"Custom Thickness\". I also wanted a top, so I selected \"Closed box\". And I wanted the finger or tab connections, so for \"Edge Joints\" I clicked \"Finger\".\nI was ready to download the file as an SVG. I clicked the \"Download Box Plans\" and then clicked \"Download SVG\".\nThis gave me an SVG file that I could open in Inkscape (a free vector editor software -- it's my favorite). Here is a link to the file I downloaded: MakerCase 75mm box.", "step_imgs": ["https://cdn.instructables.com/FPJ/MFS3/JTYN4ZYY/FPJMFS3JTYN4ZYY.LARGE.jpg", "https://cdn.instructables.com/FF6/0VTE/JTYN4ZZN/FF60VTEJTYN4ZZN.LARGE.jpg", "https://cdn.instructables.com/FT7/43G1/JTYN500C/FT743G1JTYN500C.LARGE.jpg", "https://cdn.instructables.com/F40/O8CN/JTYN5013/F40O8CNJTYN5013.LARGE.jpg"], "step_title": "Step 1: It Starts With a Cube..."}, {"step": 2, "steps_text": "It is easy to create symmetrical patterns in Polygonia. You draw a line and Polygonia will copy it for you and connect it to other lines. You can use your Google account to login or create an account.\nI'll go over what to do in Polygonia in the next few steps.", "step_imgs": ["https://cdn.instructables.com/FK0/HCVG/JTYN546K/FK0HCVGJTYN546K.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FLK/97AG/JTYN4S94/FLK97AGJTYN4S94.LARGE.jpg", "https://cdn.instructables.com/F0I/BWKL/JTYN4SFY/F0IBWKLJTYN4SFY.LARGE.jpg"], "step_title": "Step 2: Explore Polygonia"}, {"step": 3, "steps_text": "Click on the Frame tab, the second from the left, to access the frame settings.\nSince my cube is 3\", or 75mm, I want a design that is a rectangle that is 75mm wide and 75mm high.\nIn the \"Shape\" popup, pick \"Rectangle\"\nEnter 75 in \"Width\"\nEnter \"75\" in \"Height\"\nEnter \"11\" or \"12\" in \"Border Width\"\nFor \"Render\" select \"Inside Edge Only\"\nWhen you are done you should have a white square in a blue field.\nThe \"Border Width\" has to be large enough to account for both the tabs created by \"MakerCase\" and still leave some space so the side will not fall apart when you cut it with the laser.\nYou want \"Inside Edge Only\" because we get the outside edge from the MakerCase SVG file.", "step_imgs": ["https://cdn.instructables.com/FQB/ZLXK/JTYN56JH/FQBZLXKJTYN56JH.LARGE.jpg"], "step_title": "Step 3: Set the Frame Size in Polygonia"}, {"step": 4, "steps_text": "Click on the \"Tile\" tab, to the left of the \"Frame\" tab.\nDraw a few lines.\nYou might want to reduce the tile size to fit more of the tile onto the frame, since the default tile size is 55mm, or about 2\".", "step_imgs": ["https://cdn.instructables.com/FY7/S1GQ/JTYN571W/FY7S1GQJTYN571W.LARGE.jpg"], "step_title": "Step 4: Create a Design"}, {"step": 5, "steps_text": "For the laser cutter, we don't need a fill color, so we can remove it in the \"Lines\" tab.\nClick on the \"Lines\" tab, which is the third from the left.\nUnclick the \"Fill\" checkbox. Your design should now be only gray lines.\nThis is also the tab where you can add curves to your design.\nWait a second... You might notice that a few steps ago that the sketches I posted had a frame and had a fill color. That was because I made the mistake of not following my own advice. So I had to do more work in Inkscape.", "step_imgs": ["https://cdn.instructables.com/FTA/J0SD/JTYN57IX/FTAJ0SDJTYN57IX.LARGE.jpg"], "step_title": "Step 5: Remove the Fill Color"}, {"step": 6, "steps_text": "Your design files are automatically saved in the cloud.\nTo download a local copy...\nClick on the \"Files\" tab.\nClick on the \"Download...\" label\nEnter a file name\nClick the \"Save as SVG\" checkbox.\nI also usually click the \"Save as PNG\" checkbox, just so I have a reference picture.\nClick the \"Download Design in Selected Formats\"\nYou get one (or two) files downloaded.", "step_imgs": ["https://cdn.instructables.com/F0H/QLBW/JTYN5BLZ/F0HQLBWJTYN5BLZ.LARGE.jpg"], "step_title": "Step 6: Save Your Design File"}, {"step": 7, "steps_text": "Make a copy of the SVG file you saved from MakerCase.\nOpen the copy.\nIt should look similar to the file above.\nUngroup everything:\nClick once on anything in the document\nFrom the Object menu, select \"Ungroup\"\nDelete the text\nClick on each label\nHit delete\nSave your work", "step_imgs": ["https://cdn.instructables.com/FXF/3JMY/JTYN59II/FXF3JMYJTYN59II.LARGE.jpg", "https://cdn.instructables.com/FAF/5F1E/JTYN5A4O/FAF5F1EJTYN5A4O.LARGE.jpg"], "step_title": "Step 7: Prepare the MakerCase File"}, {"step": 8, "steps_text": "Open the SVG file you saved from Polygonia.\nClick on the contents to select them.\nSelect \"Copy\" from the edit menu or use \"Ctrl-C\"\nGo back to the Inkscape window with the MakerCase file\nSelect \"Paste\" or use \"Ctrl-V\"\nYou can see that the Polygonia design is not aligned with anything. You can move it manually, but I like to use the \"Align\" feature of Inkscape to do that for me.\nIn the \"Objects\" menu, click on the \"Align and Distribute...\" item. (It is near the bottom.)\nClick once on one of the sides created by MakerCase and then click on the Polygonia design.\nThen click on the \"Vertical Align\" and \"Horizontal Align\" buttons.\nRepeat the \"Paste\" and align steps for the remaining sides.\nSave your file.", "step_imgs": ["https://cdn.instructables.com/FUF/P3BP/JTYN5AEP/FUFP3BPJTYN5AEP.LARGE.jpg", "https://cdn.instructables.com/FWM/A41L/JTYN5AFR/FWMA41LJTYN5AFR.LARGE.jpg", "https://cdn.instructables.com/F9I/QJCE/JTYN5B4P/F9IQJCEJTYN5B4P.LARGE.jpg", "https://cdn.instructables.com/FSH/MZVX/JTYN5B38/FSHMZVXJTYN5B38.LARGE.jpg"], "step_title": "Step 8: Combine the Files"}, {"step": 9, "steps_text": "If you are going to use Ponoko, you will need to follow their specific requirements for line wide and line color.\nI was using RDWorks, the laser cutter software we use at NovaLabs. RDWorks can import DXF files, so I selected \"Save As...\" from Inkscape and selected DXF.\nIn RDWorks, I imported the file and modified the settings to cut through the 1/4\" MDF I was using.", "step_imgs": [], "step_title": "Step 9: Prepare for the Laser Cutter"}, {"step": 10, "steps_text": "Cutting the MDF.\nI used two different designs for the cube.", "step_imgs": ["https://cdn.instructables.com/FDN/8459/JTYN5ML2/FDN8459JTYN5ML2.LARGE.jpg", "https://cdn.instructables.com/F39/BZJK/JTYN5MKZ/F39BZJKJTYN5MKZ.LARGE.jpg"], "step_title": "Step 10: Pew-pew: Lasers!"}, {"step": 11, "steps_text": "The cube assembles quite easily. I did not account for the kerf, the part of the wood that is vaporized by the laser, so the parts slip together easily. They also slip apart easily, so this needs to be glued.", "step_imgs": ["https://cdn.instructables.com/FMW/JS43/JTYN4Q88/FMWJS43JTYN4Q88.LARGE.jpg", "https://cdn.instructables.com/FL0/15MH/JTYN4QBH/FL015MHJTYN4QBH.LARGE.jpg"], "step_title": "Step 11: Assembling the Cube"}, {"step": 12, "steps_text": "I really like how the cube came out. It has a nice solid feel and would look great with an LED tea light.\nThe cube could be made with no top, to hold a votive candle. Also the bottom could be solid.\nIt doesn't have to be a cube. You would have a quite nice pencil box if it was taller.\nIf you have a Cricut or Silhouette, you can follow the same steps in Polygonia, but start with a cube designed for paper. (I don't have a link handy, but I would be happy to create an SVG file for anyone to use.)", "step_imgs": [], "step_title": "Step 12: Final Thoughts"}], "channel": ""}, {"category": "", "description": "A little while ago, I had a print fail. The extruder dragged a pile of molten plastic around and tore the insulator around the hotend of my printer. After suffering through a few prints, it was time to repair it. This is how I replaced the insulator on my Monoprice Select Mini 3D printer.", "title": "3D Printer Insulator Replacement Monoprice Select Mini", "url": "https://www.instructables.com/id/3D-Printer-Insulator-Replacement-Monoprice-Select-/", "section": "technology", "steps": [{"step": 1, "steps_text": "The first step is to gather the tools required for this repair. The list of tools is pretty minimal:\nPhillips Head Screwdriver\nSmall Pliers\nScissors\nUtility Knife\nAlso required are a few materials: the new ceramic insulator and some high-temperature electrical Kapton tape. These links are what I ordered:\nhttps://www.amazon.com/gp/product/B01LAYCRAA\nhttps://www.amazon.com/gp/product/B00W3FAFP0", "step_imgs": ["https://cdn.instructables.com/F9V/N3I0/JTIYIAZ0/F9VN3I0JTIYIAZ0.LARGE.jpg"], "step_title": "Step 1: Tools Required"}, {"step": 2, "steps_text": "The next step is to remove the fan and shroud. Just unhook the spring clips from the sides and the plastic cover will come right off, just hook it up and behind the printer arm to keep it out of the way.", "step_imgs": ["https://cdn.instructables.com/FN6/NASN/JTIYIAZZ/FN6NASNJTIYIAZZ.LARGE.jpg", "https://cdn.instructables.com/FPL/VURQ/JTIYIB0W/FPLVURQJTIYIB0W.LARGE.jpg"], "step_title": "Step 2: Remove the Fan"}, {"step": 3, "steps_text": "With the fan shroud out of the way, I can remove the two Phillips head screws from the plastic clamp that secures the hotend. Once the clamp is removed, the entire hotend assembly can be easily pulled from its enclosure.", "step_imgs": ["https://cdn.instructables.com/F4G/2WE5/JTIYIB1T/F4G2WE5JTIYIB1T.LARGE.jpg", "https://cdn.instructables.com/FH7/TSBW/JTIYIB2Q/FH7TSBWJTIYIB2Q.LARGE.jpg", "https://cdn.instructables.com/FFN/MOL6/JTIYIB3N/FFNMOL6JTIYIB3N.LARGE.jpg"], "step_title": "Step 3: Remove the Extruder"}, {"step": 4, "steps_text": "After exposing the hotend, I removed the old, torn, ceramic insulation using a utility knife. Then, I could mark and layout the new insulator and cut around the nozzle and cooling fins to make a tight fit around the hot end. I secured the new insulator in place with a small spring clamp.", "step_imgs": ["https://cdn.instructables.com/FIP/SZ2D/JTIYIB4C/FIPSZ2DJTIYIB4C.LARGE.jpg", "https://cdn.instructables.com/FBU/MNL5/JTIYIB59/FBUMNL5JTIYIB59.LARGE.jpg"], "step_title": "Step 4: Cut the New Insulator"}, {"step": 5, "steps_text": "This was the most difficult part. I cut small strips of the Kapton tape and secured the insulation in place. Take your time and make sure to not cover the nozzle. The tape is pretty durable, but it does not stretch at all. Be careful to work it around and be careful not to get the tape stuck to itself.", "step_imgs": ["https://cdn.instructables.com/FOD/MY6A/JTIYIB6U/FODMY6AJTIYIB6U.LARGE.jpg", "https://cdn.instructables.com/FZS/DUPD/JTIYIB7S/FZSDUPDJTIYIB7S.LARGE.jpg"], "step_title": "Step 5: Secure the Insulator"}, {"step": 6, "steps_text": "Press the hotend assembly back into the arm of the printer and reinstall the plastic cover. Tighten the screws evenly, moving back and forth between the two to draw the clamp into place evenly.", "step_imgs": ["https://cdn.instructables.com/FVZ/I7AK/JTIYIB8P/FVZI7AKJTIYIB8P.LARGE.jpg", "https://cdn.instructables.com/FLT/T44P/JTIYIB9M/FLTT44PJTIYIB9M.LARGE.jpg"], "step_title": "Step 6: Reinstall the Extruder"}, {"step": 7, "steps_text": "Reinstall the fan, using pliers to manipulate the clips. I found it easiest to work each clip on halfway, and then press them all the way into place. I like to wipe down the build plate with rubbing alcohol after any repair to make sure any fibers, dust or other debris is removed. Check that the nozzle is clear after the insulation replacement and that's it!", "step_imgs": ["https://cdn.instructables.com/FM7/NCNU/JTIYIB9R/FM7NCNUJTIYIB9R.LARGE.jpg"], "step_title": "Step 7: Reinstall the Fan"}], "channel": ""}, {"category": "", "description": "Hello Guys Whatsup, In this instructable, I am making an Awesome mini laser engraver from old DVD writers. It's an amazing machine. You can use this laser engraver machine to make any kind of design, logo, art on the surface like WOOD, MDF, PLYWOOD, VNYL Paper. It's little difficult to make a high-resolution laser engraver from DVD writer. But I tried my best to make a pretty close one. In this instructable, I am going to show you the entire procedure of how I made this DIY Laser Engraver. So let's get started :)\nIF YOU LIKE THIS PROJECT THEN DON'T FORGET TO VOTE FOR ME, I AM PARTICIPATING IN REMIX CONTEST\nPROJECT INSPIRATION\nI got this Laser engraver's idea from Maggie Shah. Here's the version of his laser engraver https://www.instructables.com/id/Mini-CNC-Laser-Wood-Engraver-and-Paper-Cutter/ . I remixed his project with my own touch.\n\nHere's the full video tutorial Video", "title": "DIY Arduino Mini Laser Engraver", "url": "https://www.instructables.com/id/DIY-Arduino-Mini-Laser-Engraver/", "section": "technology", "steps": [{"step": 1, "steps_text": "We need these following parts to make this project.\nArduino Nano\n250mW 650nm Laser Module\nA4988 Motor Driver\nIRFZ44N Mosfet\nLM7805 Voltage Regulator.\nLaser Heatsink\nIC Heatsink\n1000uF Capacitor\n10k & 47R Resistor\nMale And Female Header Pin\nScrew Terminal\nJST 2.0 Connector\n2.5mm Jumper Cap\nShrink Tube\nDVD Writer\nCustom PCB Board\n5mm Acrylic Sheet\nTools List:\nSoldering Iron\nDrill Machine\nMetal File\nSandpaper\nWire Cutter\nSuperglue", "step_imgs": ["https://cdn.instructables.com/FUS/7A59/JPLJRCYN/FUS7A59JPLJRCYN.LARGE.jpg", "https://cdn.instructables.com/FEE/3FSH/JPLJREAO/FEE3FSHJPLJREAO.LARGE.jpg", "https://cdn.instructables.com/F5Y/MI8L/JPLJRE0E/F5YMI8LJPLJRE0E.LARGE.jpg", "https://cdn.instructables.com/FRO/KM9O/JPLJRCX8/FROKM9OJPLJRCX8.LARGE.jpg", "https://cdn.instructables.com/F3W/H2FZ/JPLJRCXX/F3WH2FZJPLJRCXX.LARGE.jpg", "https://cdn.instructables.com/FXX/PQO0/JPLJRD8T/FXXPQO0JPLJRD8T.LARGE.jpg"], "step_title": "Step 1: Parts List"}, {"step": 2, "steps_text": "We need two DVD writers mechanism for this project. One for X-Axis and another one for Y-Axis. You can find this DVD writer from broken CPU or local hardware shop. I also got from the local hardware shop at very cheap prices. Now its time to disassemble the DVD writers.\nUse Philips head screwdriver to remove all the screws.\nUnplugged all the connectors and cables.\nOpen the disk holder and unscrew the sliding mechanism.\nDetached the Sliding mechanism.", "step_imgs": ["https://cdn.instructables.com/F4L/JIOB/JPINYL6U/F4LJIOBJPINYL6U.LARGE.jpg", "https://cdn.instructables.com/FSU/33HQ/JPINYL70/FSU33HQJPINYL70.LARGE.jpg", "https://cdn.instructables.com/FFI/CJ8E/JPINYL71/FFICJ8EJPINYL71.LARGE.jpg", "https://cdn.instructables.com/F8Z/HV1H/JPINYL8T/F8ZHV1HJPINYL8T.LARGE.jpg", "https://cdn.instructables.com/F6X/V4Y4/JPINYL9C/F6XV4Y4JPINYL9C.LARGE.jpg", "https://cdn.instructables.com/FM8/FCB4/JPINYL8Q/FM8FCB4JPINYL8Q.LARGE.jpg", "https://cdn.instructables.com/F9W/SIYE/JPINYL8S/F9WSIYEJPINYL8S.LARGE.jpg", "https://cdn.instructables.com/FPZ/2C09/JPINYL7B/FPZ2C09JPINYL7B.LARGE.jpg", "https://cdn.instructables.com/F4C/KNIO/JPINYL9Q/F4CKNIOJPINYL9Q.LARGE.jpg", "https://cdn.instructables.com/FEY/L58J/JPINYL6J/FEYL58JJPINYL6J.LARGE.jpg", "https://cdn.instructables.com/F77/9NZS/JPINYL9K/F779NZSJPINYL9K.LARGE.jpg"], "step_title": "Step 2: Remove the Stepper Sliding Mechanism"}, {"step": 3, "steps_text": "Here I've used 5mm acrylic to make the frame. It is a very good choice for making the enclosure for every DIY Project. Personally, I frequently use this sheet to make the enclosure for my DIY Projects. It is easy to cut, bend and sand. I made the printable templates to make the laser engraver more stable.\nFirst, print the templates then attach the templates to the acrylic sheet using the glue stick.\nCarefully cut the acrylic sheet according to the template's design using a jigsaw or mini handsaw.\nRemove the plastic cover from acrylic and sand all the pieces to get the smooth matte finish.\nUse super glue to attach all the pieces together.", "step_imgs": ["https://cdn.instructables.com/FZ8/9C9O/JTWS73AF/FZ89C9OJTWS73AF.LARGE.jpg", "https://cdn.instructables.com/FKB/7XIQ/JTWS73AP/FKB7XIQJTWS73AP.LARGE.jpg", "https://cdn.instructables.com/FVP/JWZF/JPINYL9U/FVPJWZFJPINYL9U.LARGE.jpg", "https://cdn.instructables.com/FGA/DTVE/JPINYL9X/FGADTVEJPINYL9X.LARGE.jpg", "https://cdn.instructables.com/FYX/XZ0N/JPINYLA0/FYXXZ0NJPINYLA0.LARGE.jpg", "https://cdn.instructables.com/F10/TE4U/JPINYLA1/F10TE4UJPINYLA1.LARGE.jpg", "https://cdn.instructables.com/FS4/ZE6X/JPINYLA5/FS4ZE6XJPINYLA5.LARGE.jpg", "https://cdn.instructables.com/F7T/CS25/JPINYLAU/F7TCS25JPINYLAU.LARGE.jpg", "https://cdn.instructables.com/FZB/4XAX/JPINYLB0/FZB4XAXJPINYLB0.LARGE.jpg", "https://cdn.instructables.com/FTC/UHVV/JPINYLB4/FTCUHVVJPINYLB4.LARGE.jpg", "https://cdn.instructables.com/FCO/JEUB/JPINYLCE/FCOJEUBJPINYLCE.LARGE.jpg", "https://cdn.instructables.com/F1N/EGVY/JPINYLB8/F1NEGVYJPINYLB8.LARGE.jpg"], "step_title": "Step 3: Assemble the Frames"}, {"step": 4, "steps_text": "In this step, I'll solder wires to the stepper motors. Follow the steps below to properly solder wires.\nFirst, determine the 2 coils A and B using multimeter's continuity mode.\nCut the flexible PCB of stepper motors.\nSolder wires to stepper motors\nConnect 1*4 Female header pin at the end of wires and secure them using shrink tube.", "step_imgs": ["https://cdn.instructables.com/F4A/CVWY/JPINYLD0/F4ACVWYJPINYLD0.LARGE.jpg", "https://cdn.instructables.com/F6L/2BTM/JPINYLG0/F6L2BTMJPINYLG0.LARGE.jpg", "https://cdn.instructables.com/F9Q/2YBD/JPINYLFF/F9Q2YBDJPINYLFF.LARGE.jpg", "https://cdn.instructables.com/FWL/EHKZ/JPINYLG4/FWLEHKZJPINYLG4.LARGE.jpg", "https://cdn.instructables.com/FZY/HKEA/JPINYLEU/FZYHKEAJPINYLEU.LARGE.jpg", "https://cdn.instructables.com/F6S/L3AX/JPINYLG1/F6SL3AXJPINYLG1.LARGE.jpg", "https://cdn.instructables.com/FQ6/ZIMZ/JPINYLIY/FQ6ZIMZJPINYLIY.LARGE.jpg", "https://cdn.instructables.com/FUA/R4WH/JPINYLG9/FUAR4WHJPINYLG9.LARGE.jpg", "https://cdn.instructables.com/FV4/U9SR/JPINYLGD/FV4U9SRJPINYLGD.LARGE.jpg", "https://cdn.instructables.com/FVX/D4ZM/JPINYLJ5/FVXD4ZMJPINYLJ5.LARGE.jpg"], "step_title": "Step 4: Wiring of Stepper Motor"}, {"step": 5, "steps_text": "In this, I'll make the holes to mount the sliding mechanism.\nFirst properly position the sliding mechanism on the engraver frame.\nMark the holes using a screwdriver.\nUse 3mm drill bit to make the holes.", "step_imgs": ["https://cdn.instructables.com/FWX/2K2J/JPINYLJA/FWX2K2JJPINYLJA.LARGE.jpg", "https://cdn.instructables.com/FHW/GIVR/JPINYLJZ/FHWGIVRJPINYLJZ.LARGE.jpg", "https://cdn.instructables.com/F18/PYAI/JPINYLJ6/F18PYAIJPINYLJ6.LARGE.jpg", "https://cdn.instructables.com/FVM/8S3Y/JPLJRHYQ/FVM8S3YJPLJRHYQ.LARGE.jpg", "https://cdn.instructables.com/F78/POL2/JPLJRHZY/F78POL2JPLJRHZY.LARGE.jpg", "https://cdn.instructables.com/FVE/U9BJ/JPLJRIKT/FVEU9BJJPLJRIKT.LARGE.jpg", "https://cdn.instructables.com/FQQ/DE3I/JPLJRIJI/FQQDE3IJPLJRIJI.LARGE.jpg"], "step_title": "Step 5: Making Holes for Sliding Mechanism"}, {"step": 6, "steps_text": "Here, I am attaching 6mm standoff spacer with the sliding mechanism before mounting it on the engraver frame. It will help to reduce the vibration to get high precision engraving.", "step_imgs": ["https://cdn.instructables.com/F6K/K4O2/JPLJRIL2/F6KK4O2JPLJRIL2.LARGE.jpg", "https://cdn.instructables.com/F00/TBCU/JPLJRIL7/F00TBCUJPLJRIL7.LARGE.jpg", "https://cdn.instructables.com/FCE/87PP/JPLJRIL9/FCE87PPJPLJRIL9.LARGE.jpg", "https://cdn.instructables.com/FU5/T982/JPLJRIM2/FU5T982JPLJRIM2.LARGE.jpg", "https://cdn.instructables.com/FOF/3FBT/JPLJRIMA/FOF3FBTJPLJRIMA.LARGE.jpg", "https://cdn.instructables.com/FO7/IK3I/JPLJRIMB/FO7IK3IJPLJRIMB.LARGE.jpg"], "step_title": "Step 6: Attach Spacer"}, {"step": 7, "steps_text": "Now I'll mount the sliding mechanism.\nAttach 5mm hex nylon PCB spacer before mounting the slider.\nUse 4xM3x12 screw to attach the sliding mechanism.\nAttach bolt with the screw to tighten more securely.", "step_imgs": ["https://cdn.instructables.com/FI3/ED3W/JPLJRIMD/FI3ED3WJPLJRIMD.LARGE.jpg", "https://cdn.instructables.com/FWK/RLB0/JPLJRIKU/FWKRLB0JPLJRIKU.LARGE.jpg", "https://cdn.instructables.com/FB7/GSXZ/JPLJRIW3/FB7GSXZJPLJRIW3.LARGE.jpg", "https://cdn.instructables.com/FJ7/Z2MB/JPLJRIME/FJ7Z2MBJPLJRIME.LARGE.jpg", "https://cdn.instructables.com/FLC/YMMS/JPLJRIMG/FLCYMMSJPLJRIMG.LARGE.jpg", "https://cdn.instructables.com/FDK/942Q/JPLJRITP/FDK942QJPLJRITP.LARGE.jpg", "https://cdn.instructables.com/FT8/S3AG/JPLJRIW4/FT8S3AGJPLJRIW4.LARGE.jpg", "https://cdn.instructables.com/FJ9/O0IL/JPLJRIW1/FJ9O0ILJPLJRIW1.LARGE.jpg", "https://cdn.instructables.com/FXD/YOJJ/JPLJRIP7/FXDYOJJJPLJRIP7.LARGE.jpg", "https://cdn.instructables.com/F8G/8G3A/JPLJRIPC/F8G8G3AJPLJRIPC.LARGE.jpg"], "step_title": "Step 7: Mount the Sliding Mechanism"}, {"step": 8, "steps_text": "Now we need to attach the engraving platform. I started off by attaching 3cm square acrylic using superglue. after that i attached the main engraving platform. which dimention is 9x9cm. It would be better you use a metel grill for the engraving platform.", "step_imgs": ["https://cdn.instructables.com/F5E/MAJR/JPINYLPP/F5EMAJRJPINYLPP.LARGE.jpg", "https://cdn.instructables.com/F5D/5LDH/JPINYL6R/F5D5LDHJPINYL6R.LARGE.jpg", "https://cdn.instructables.com/FK8/O1H1/JPINYLPF/FK8O1H1JPINYLPF.LARGE.jpg", "https://cdn.instructables.com/F78/I5BK/JPINYLPO/F78I5BKJPINYLPO.LARGE.jpg", "https://cdn.instructables.com/FYB/3FXV/JPINYLPG/FYB3FXVJPINYLPG.LARGE.jpg", "https://cdn.instructables.com/FMH/PXZ1/JPINYLPL/FMHPXZ1JPINYLPL.LARGE.jpg", "https://cdn.instructables.com/F1O/VEDU/JPINYLPN/F1OVEDUJPINYLPN.LARGE.jpg", "https://cdn.instructables.com/F6A/O2ZG/JPINYLPM/F6AO2ZGJPINYLPM.LARGE.jpg"], "step_title": "Step 8: Mount the Engraving Platform"}, {"step": 9, "steps_text": "In this project, i am using custom designed circuit board to give more profesional touch. So i chose JLCPCB to design and order the custom designed PCB for this project.\nCircuit Schematic link\nGerber File link\nAbout JLCPCB\nJLCPCB (Shenzhen JIALICHUANG Electronic Technology Development Co., Ltd.), is the largest PCB prototype enterprise in China and a high-tech manufacturer specializing in quick PCB prototype and small-batch PCB production. With over 10 years of experience in PCB manufacturing, JLCPCB has more than 200,000 customers at home and abroad, with over 8,000 online orders of PCB prototyping and small quantity PCB production per day. The annual production capacity is 200,000 sq.m. for various of 1-layer, 2-layer or multi-layer PCBs. JLC is a professional PCB manufacturer featured of large scale, well equipment, strict management and superior quality.\nRelated download files\nYou can get the Circuit (PDF) file from here. As you can see in the pictures above the PCB is very well manufactured and I\u2019ve got the same PCB design that we\u2019ve made for our main board and all the labels and logos are there to guide me during the soldering steps. You can also download the Gerber file for this circuit from here in the case you want to place an order for the same circuit design. If you want to design your own version of PCB you can design it on JLCPCB family site which called EasEDA. It's so simple and easy to design pcb for DIY projects.", "step_imgs": ["https://cdn.instructables.com/F13/QDOW/JTWSUN8P/F13QDOWJTWSUN8P.LARGE.jpg", "https://cdn.instructables.com/FOB/CN8S/JTWSUN9G/FOBCN8SJTWSUN9G.LARGE.jpg", "https://cdn.instructables.com/FVL/1AJH/JTWSUSGF/FVL1AJHJTWSUSGF.LARGE.jpg", "https://cdn.instructables.com/FXC/6JW9/JTWSUSCO/FXC6JW9JTWSUSCO.LARGE.jpg", "https://cdn.instructables.com/FF3/0025/JTWSUS8T/FF30025JTWSUS8T.LARGE.jpg", "https://cdn.instructables.com/FHS/2G1C/JTWS60SH/FHS2G1CJTWS60SH.LARGE.jpg"], "step_title": "Step 9: The PCB Making"}, {"step": 10, "steps_text": "Now its soldering time. use clean fine soldering tip. first I started off by soldering all the small components like header pins then solder other components according to the circuit diagram.\nYou can make this circuit on a perf board. It's very simple and easy. just follow the circuit schematic which I mentioned above. But first, make it on a beard board to check everything works perfectly then you can go for the pref board", "step_imgs": ["https://cdn.instructables.com/FEY/5N4C/JPINYLKF/FEY5N4CJPINYLKF.LARGE.jpg", "https://cdn.instructables.com/FMY/9YLB/JPINYLL1/FMY9YLBJPINYLL1.LARGE.jpg", "https://cdn.instructables.com/F4R/7Z5D/JPINYLKV/F4R7Z5DJPINYLKV.LARGE.jpg", "https://cdn.instructables.com/FLF/HKQR/JPINYLND/FLFHKQRJPINYLND.LARGE.jpg", "https://cdn.instructables.com/FTC/2ZNJ/JPINYLMM/FTC2ZNJJPINYLMM.LARGE.jpg", "https://cdn.instructables.com/FEY/GGHH/JPINYLM6/FEYGGHHJPINYLM6.LARGE.jpg", "https://cdn.instructables.com/FFE/VG5Y/JPINYLML/FFEVG5YJPINYLML.LARGE.jpg", "https://cdn.instructables.com/F7U/SB07/JPINYLMN/F7USB07JPINYLMN.LARGE.jpg", "https://cdn.instructables.com/F8Y/Y72Q/JPINYLMO/F8YY72QJPINYLMO.LARGE.jpg", "https://cdn.instructables.com/FDU/E21M/JPINYLNF/FDUE21MJPINYLNF.LARGE.jpg", "https://cdn.instructables.com/F93/0LKI/JPINYLNN/F930LKIJPINYLNN.LARGE.jpg", "https://cdn.instructables.com/F48/NFF3/JPINYLOJ/F48NFF3JPINYLOJ.LARGE.jpg"], "step_title": "Step 10: Soldering All the Components"}, {"step": 11, "steps_text": "Now mount the Arduino and A4988 motor drivers.\nIn GRBL the digital and analog Pins of Arduino are reserved. The 'Step' pin for the X and Y axes is attached to digital pins 2,and 3 respectively. The 'Dir' pin for the X and Y axes is attached to digital pins 5 and 6 respectively. D11 is for laser Enable. The Arduino gets power through the USB Cable. The A4988 Drivers through external power source. All ground share common connections. VDD of A4988 are connected to 5V of Arduino. The laser I've used runs on 5V and has built in constant current circuit. For the constant 5V source from the external power supply LM7805 voltage regulator is used. Heatsink is compulsory. The IRFZ44N N-CHANNEL MOSFET works as an elelctronic switch when receives digital high signal from pin D11 of Arduino. NOTE: 5V from Arduino nano can't be used beause the laser draws more than 250mA and the Arduino Nano is not capable of delivering that much of current.\n\nConfiguring Micro Stepping for Each Axis.\nMS0 MS1 MS2 Microstep Resolution.\nLow Low Low Full step.\nHigh Low Low Half step.\nLow High Low Quarter step.\nHigh High Low Eighth step.\nHigh High High Sixteenth step.\nThe 3 pins (MS1, MS2 and MS3) are for selecting one of the five step resolutions according to the above truth table. These pins have internal pull-down resistors so if we leave them disconnected, the board will operate in full step mode. I've used the 16th step configuration for smooth and noise free. Most (but certainly not all) stepper motors do 200 full steps per revolution. By appropriately managing the current in the coils it is possible to make the motor move in smaller steps. The Pololu A4988 can make the motor move in 1/16th steps - or 3,200 steps per revolution.The main advantage of microstepping is to reduce the roughness of the motion. The only fully accurate positions are the full-step positions. The motor will not be able to hold a stationary position at one of the intermediate positions with the same position accuracy or with the same holding torque as at the full step positions.Generally speaking when high speeds are required full steps should be used.", "step_imgs": ["https://cdn.instructables.com/F7J/1USP/JPINYLPE/F7J1USPJPINYLPE.LARGE.jpg", "https://cdn.instructables.com/F2C/3OPD/JPINYLPB/F2C3OPDJPINYLPB.LARGE.jpg", "https://cdn.instructables.com/FUX/KMCW/JPINYLPC/FUXKMCWJPINYLPC.LARGE.jpg", "https://cdn.instructables.com/FE8/0V8O/JPINYLPD/FE80V8OJPINYLPD.LARGE.jpg"], "step_title": "Step 11: Mount the Arduino and Motor Drivers"}, {"step": 12, "steps_text": "Now it's time to attach the laser module. I am using here 250mW 650nm focusable laser module. You have to attach the required heatsink for longtime performance. You can buy the heatsink from the online store or you can use the old motherboard's heatsink which I did here. Just broke some pins of the heatsink then mount the laser module. Use superglue to attach the heatsink with the X-Axis slider.", "step_imgs": ["https://cdn.instructables.com/FPS/JOWZ/JTWS7EEH/FPSJOWZJTWS7EEH.LARGE.jpg", "https://cdn.instructables.com/FY7/K6SR/JTWS7E67/FY7K6SRJTWS7E67.LARGE.jpg", "https://cdn.instructables.com/FOT/UGIN/JTWS7E15/FOTUGINJTWS7E15.LARGE.jpg", "https://cdn.instructables.com/FQR/WN51/JTWS7D2H/FQRWN51JTWS7D2H.LARGE.jpg"], "step_title": "Step 12: Attach the Laser Module"}, {"step": 13, "steps_text": "Now mount the circuit with engraver frame using 4xM3 hex nylon screw. After mounting the circuit board plugged in the stepper motor and laser module connectors.", "step_imgs": ["https://cdn.instructables.com/F0U/ILSO/JTWS7CGG/F0UILSOJTWS7CGG.LARGE.jpg", "https://cdn.instructables.com/F8L/OMI4/JTWS7C7L/F8LOMI4JTWS7C7L.LARGE.jpg", "https://cdn.instructables.com/FUM/VPOH/JTWS7C08/FUMVPOHJTWS7C08.LARGE.jpg"], "step_title": "Step 13: Mount the Circuit Board"}, {"step": 14, "steps_text": "What is GRBL firmware?\nGRBL is a firmware for Arduino boards(uno,nano,Duemillanove) that controls stepper motors and spindles/lasers. GRBL uses gcode as input and outputs signals via the Arduino pins.\nFirst, Download the GRBL firmware.\nOpen the Arduino IDE.\nThen Choose Sketch>>Include Library>>Add.Zip Library>>Select the grbl-master.zip file\nThe library is installed now we have to upload the grbl sketch.\nSelect the sketch from the File>>Examples>>grbl>> select the grblUpload\nSelect the Correct board and port, then click on the upload button to upload the sketch in Arduino.", "step_imgs": ["https://cdn.instructables.com/F3K/ORBH/JTWS58FP/F3KORBHJTWS58FP.LARGE.jpg", "https://cdn.instructables.com/F52/3REP/JTWS58FQ/F523REPJTWS58FQ.LARGE.jpg", "https://cdn.instructables.com/F0O/W95L/JTWS4XZT/F0OW95LJTWS4XZT.LARGE.jpg", "https://cdn.instructables.com/F00/AAPZ/JTWS58FT/F00AAPZJTWS58FT.LARGE.jpg", "https://cdn.instructables.com/F0T/I1YY/JTWS58FU/F0TI1YYJTWS58FU.LARGE.jpg", "https://cdn.instructables.com/FJ8/OHPK/JTWS58FY/FJ8OHPKJTWS58FY.LARGE.jpg", "https://cdn.instructables.com/FDP/JGXE/JTWS4Y0N/FDPJGXEJTWS4Y0N.LARGE.jpg", "https://cdn.instructables.com/FF5/VMBE/JTWS4Y2R/FF5VMBEJTWS4Y2R.LARGE.jpg", "https://cdn.instructables.com/FY0/L8ZJ/JTWS4Y2S/FY0L8ZJJTWS4Y2S.LARGE.jpg"], "step_title": "Step 14: GRBL Firmware"}, {"step": 15, "steps_text": "LaserGRBL is one of the best Windows GCode streamer for DIY Laser Engraver. LaserGRBL is able to load and stream GCode path to arduino, as well engrave images, pictures and logo with internal conversion tool.\nDownload the LaserGRBL and install it on your PC.\nOpen the LaserGRBL.Then select the correct COM port and proper baud rate for the connection. (default 115200)\nClick on the file icon to load the image which you want to engrave. LaserGRBL supports any kind of image format.\nSelect proper dimension(40x40mm) and engraving speed\nClick on the green play button to start the engraving.", "step_imgs": ["https://cdn.instructables.com/F41/UNK0/JTWSUN8N/F41UNK0JTWSUN8N.LARGE.jpg", "https://cdn.instructables.com/FG4/5O8P/JTWS5F46/FG45O8PJTWS5F46.LARGE.jpg", "https://cdn.instructables.com/FAY/5NU5/JTWS4XYL/FAY5NU5JTWS4XYL.LARGE.jpg", "https://cdn.instructables.com/FVZ/OAQU/JTWS4Y3J/FVZOAQUJTWS4Y3J.LARGE.jpg", "https://cdn.instructables.com/FE1/3NHS/JTWS4Y3N/FE13NHSJTWS4Y3N.LARGE.jpg", "https://cdn.instructables.com/FO9/FHJ2/JTWS4Y3P/FO9FHJ2JTWS4Y3P.LARGE.jpg"], "step_title": "Step 15: The LaserGRBL Software"}, {"step": 16, "steps_text": "First, adjust the laser dot the smallest as possible. Then choose the picture which you to engrave. Remember engraving setting is different for different kind of surface.", "step_imgs": ["https://cdn.instructables.com/FSB/ZLJ3/JTWS8RVR/FSBZLJ3JTWS8RVR.LARGE.jpg", "https://cdn.instructables.com/FA0/ZWUO/JTWS9AE4/FA0ZWUOJTWS9AE4.LARGE.jpg", "https://cdn.instructables.com/F5O/IJ84/JTWS8Q9K/F5OIJ84JTWS8Q9K.LARGE.jpg", "https://cdn.instructables.com/F6G/L6Z2/JTWS8RPF/F6GL6Z2JTWS8RPF.LARGE.jpg", "https://cdn.instructables.com/FEV/2FKH/JTWS8SFK/FEV2FKHJTWS8SFK.LARGE.jpg"], "step_title": "Step 16: It's Engraving Time"}, {"step": 17, "steps_text": "I hope this tutorial helps you to build your own Arduino Laser Engraver machine. If you make your own Laser Engraver then please send a photo in the comment section. I am very excited to see your own creation.\nI'll keep updating this instructable.\nThanks for watching project, I hope you liked this project, if you did then please follow me I'll keep posting awesome new projects. Also, don't forget to SUBSCRIBE my YouTube channel.", "step_imgs": [], "step_title": "Step 17: We're Done Now"}], "channel": ""}, {"category": "", "description": "This Instructable / Design Concept, is meant to assist the translation between 2D images and 3D modeling algorithms by upgrading a turntable into more of a HID (Human Interface Device) scanning tool.\nMy motivation to design a tool that will increase a modeling algorithm\u2019s ability of translating images with a high degree of accuracy, is to decrease the amount of human image alignment. Accurate models of non-geometric shapes are hard to achieve by pushing and pulling polygons. With the right tools, DIY Photogrammetry allows the import of accurately modeled, complex organic meshes into my CAD program.\nTable Features\n- A graduated rotating scale around the turntable\u2019s perimeter has been incorporated to assist with uniform manual rotation.\n- The turntable\u2019s deck plates and bearing, are made to accommodate heavy model loads.\n- Three aluminum legs radiate from the lower deck plate to stabilize bulky scan models. Each leg is equipped with a leveling foot bolt.\n- The top deck plate features a column and large transition coupling to support heavy models.\n- The transition coupling permits attachment of custom built, user defined, mechanical devices to support different types of modeling subjects.\n- A model support column is 11.5\u201d tall is included to permit photography from beneath without re-positioning the model.\nThe graduated scale is a Tailor\u2019s Soft Measurement Tape glued to the 36\u201d circumference of the top deck plate. Using the 1/8\u201d marks, 288 revolve graduations of 1.25-degrees each are achievable.\nWeight capacity is dramatically increased using \u00be\u201d (23/32\u201d) BC plywood turntable decks, sandwiching a 12\u201d diameter turntable bearing rated at several hundred pounds.\nThe \u00bd\u201d coupling nut attached to the top deck plate can transfer significant weight and side loads to the hefty supporting structure beneath.\nBulky and offset center of gravity stability is achieved using three out-rigger legs of 1\u201d aluminum square tubing. On the end of each leg is a \u00bc\u201d rivet nut and \u00bc\u201d bolt used to level the turntable assembly. For very heavy loads, a round PVC cap fits between the three legs. Load force is transmitted to the cap through direct contact with the lower plywood plate. The leg bolts are adjusted to level the suspended load.\nRubber feet have also been attached to the aluminum legs, under the deck plate, to provide skid protection.\nThe threaded coupling nut serves as a mechanical transition for attachment of specialized hardware (designed by user) to secure different types of scan models. Examples would include a metal spike, alligator clip, a metal crossbeam, a flat plate, glue stub or whatever type of securing device is needed by a modeling practitioner.\nI\u2019m going to assume that people interested in 3D printing and CAD might not have a router table or drill press. For their sake, I\u2019m going to present an Instructable using techniques that require only an electric hand drill, jig saw and basic hand tools. For those of you that are equipped to construct the next generation of a Mar's Lander, just gloss over the features and concept. You already know how to do this.\nI\u2019ve included many features with this turntable design, for the purpose of letting you choose what features you need. So, leave off anything you don\u2019t need and add feature ideas of your own. For the first time in my life, I\u2019ve broken \"Big Al\u2019s\" number one rule of design, by making this Instructable an excessive conglomeration of possible features.\n\u201cAny intelligent fool can make things bigger or more complex\u2026It takes a touch of genius and a lot of courage to move in the opposite direction.\u201d \u2013 Albert Einstein\nMaterials and Hardware\n12\u201d x 24\u201d x \u00be\u201d (23/32\u201d) BC or Lauan Plywood (lowes.com item# 6654)\n12\u201d Diameter Turntable Bearing (lowes.com \u2013 item# 383405).\nThree = 1\u201d x 1\u201d x 16\u201d x .125\u201d wall thickness, Aluminum Square Tubing (onlinemetals.com \u2013 48\u201d of item# 18014).\nThree = \u00bc\u201d \u2013 20 Steel Rivet Nuts (I would suggest an assortment pack (for future projects) from ebay.com. Grip range isn\u2019t important since the nuts won\u2019t have pull out forces applied).\nSoft Tape Measure (amazon.com)\nThree = \u00bc\u201d \u2013 20 x 2.5\u201d Zinc Plated, Carriage Bolts (lowes.com item# 63334)\nOne = 12\u201d length of \u00bd\u201d-13 All-Thread\nOne = \u00bd\u201d-13 Coupling Nut (lowes.com item# 142075))\nOne = \u00bd\u201d-13 Hex Nut (lowes.com item# 63304)\nOne = \u00bd\u201d-13 Nylon Insert Locking Hex Nut (lowes.com item#63406)\nTwo = \u00bd\u201d Flat Washers (lowes.com item# 63309)\nOne = \u00bd\u201d Fender Washer 1/8\u201d thick or two \u00bd\u201d fender Washers 1/16\u201d thick.\nSix = \u00bc\u201d-20 x 1.5\u201d Long Hex Head Bolts (lowes.com item# 63312)\nSix = \u00bc\u201d-20 Hex Head Nuts (lowes.com)\nSix = \u00bc\u201d Flat Washers (lowes.com)\nSix = \u00bc\u201d Flat Washers (lowes.com item# 63306)\nThree = \u00bc\u201d \u2013 20 x 2.5\u201d Grade 8, Hex Head Bolts (lowes.com)\nThree = \u00bc\u201d \u2013 20 Grade 8, Hex Head Nuts (lowes.com)\nFive = 2 \u00bd\u201d Long Deck Screws Hex Head Bolts (lowes.com)\nEight = #8 x 5/8\u201d Phillips Pan Head Sheet Metal Screws (lowes.com)\nEight = #8 Flat Washers (lowes.com)\nOne = 9.5\u201d length of \u00bd\u201d PVC Pipe (lowes.com)\nOne = 2\u201d PVC Cap (lowes.com item# 23920)\nNew Paper Envelope\nCard Board or Heavy Paper 7\u201d x 1\u201d\nSpray Can of Grey Primer (lowes.com item# 1026826)\nSpray Can of Matte White Paint and Primer (lowes.com item# 1026724)\n3/4\u201d x 4\u201d x 12\u201d Any Scrap Wooden Board or Plywood Section (for sanding only)\nCan of Spray -or- Brush On, Contact Adhesive (lowes.com item# 275900)\nThree = Self Adhesive Rubber Feet\nCoarse Sand Paper (lowes.com item# 470333)\nFine Sand Paper (lowes.com)\nMasking Tape (lowes.com)\nTools\nWork Table\nElectric Drill\n1/8\u201d Drill Bit\n\u00bc\u201d Drill Bit\n\u00bd\u201d Paddle Bit\n\u00bd\u201d drill Bit (optional)\nJig Saw\nSanding Block\nYard Stick\nPencil\nBlack Marker\nSharp Nail or Awl\nHammer\n7/16\u201d Wrench\n7/16\u201d Socket Wrench\n\u00be\u201d Wrench\n\u00be\u201d Socket Wrench\nAdjustable Crescent Wrench\nRazor Knife\nVise\nMetal File\nStaple Gun (optional)\nCarpenter Square\n#2 Phillips Screwdriver\n1\u201d Wide Putty Knife\nLarge Flat Tip Common Screwdriver", "title": "Photogrammetry HID Tool", "url": "https://www.instructables.com/id/Photogrammetry-HID-Tool/", "section": "technology", "steps": [{"step": 1, "steps_text": "Using the yard stick and pencil, draw a single line across the exact middle of the 12\u201d x 24\u201d piece of BC Plywood. This will create two 6\u201d x 24\u201d segments (1).", "step_imgs": ["https://cdn.instructables.com/FOG/4JD0/JTYN8C6Z/FOG4JD0JTYN8C6Z.LARGE.jpg"], "step_title": "Step 1:"}, {"step": 2, "steps_text": "Use a black marker to label your bearing as I have, so there is no confusion during layout or assembly (2 and 3). These areas of the bearing will not be seen after the top and bottom decks are attached.", "step_imgs": ["https://cdn.instructables.com/F9Q/I9JL/JTYN8C7K/F9QI9JLJTYN8C7K.LARGE.jpg", "https://cdn.instructables.com/FCM/OL1D/JTYN8C85/FCMOL1DJTYN8C85.LARGE.jpg"], "step_title": "Step 2:"}, {"step": 3, "steps_text": "Lay the Bearing so the \u201cTop of Bearing\u201d label is up. Position the two holes marked with an Arrow so they are centered across the centerline of the plywood, drawn in Step 1. Keeping everything aligned, slide the bearing to within 1/8\u201d of the plywood\u2019s edge (4). Use the pencil to write \u201cBottom Plate\u201d on the plywood offset from the center of the opening.", "step_imgs": ["https://cdn.instructables.com/F57/M9ND/JTYN8C8P/F57M9NDJTYN8C8P.LARGE.jpg"], "step_title": "Step 3:"}, {"step": 4, "steps_text": "I\u2019ve added two more Arrows to the bearing of Step 3. Use the pencil to trace the four holes marked with Arrows, onto the plywood (5).", "step_imgs": ["https://cdn.instructables.com/FO7/DS9L/JTYN8C8R/FO7DS9LJTYN8C8R.LARGE.jpg"], "step_title": "Step 4:"}, {"step": 5, "steps_text": "Trace a line, with the pencil, around the outside of the bearing onto the plywood. Angle the pencil slightly inward and keep the same angle as you trace (6).", "step_imgs": ["https://cdn.instructables.com/F1F/CGGM/JTYN8C9C/F1FCGGMJTYN8C9C.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "The larger hole near the perimeter of the bearing is the access hole. Trace the outline of the access hole with the pencil (7).", "step_imgs": ["https://cdn.instructables.com/FSL/PTP6/JTYN8C9Z/FSLPTP6JTYN8C9Z.LARGE.jpg"], "step_title": "Step 6:"}, {"step": 7, "steps_text": "Set the bearing to the side and use a sharp nail with a hammer to mark the center of each of the traced mounting holes. Then use the yard stick and pencil to draw a line between the two mounting holes without a centerline between them (8). The two intersecting lines mark the center of the bottom plate.", "step_imgs": ["https://cdn.instructables.com/F7X/4PZ3/JTYN8CAK/F7X4PZ3JTYN8CAK.LARGE.jpg"], "step_title": "Step 7:"}, {"step": 8, "steps_text": "Use a new envelope as a right angle (90\u00b0) and draw a line from the two marked holes with the new centerline (Step 7). Use the yard stick to measure 1-3/8\u201d from each hole and mark these two locations with a pencil (9).", "step_imgs": ["https://cdn.instructables.com/FDA/1ZD0/JTYN8CAM/FDA1ZD0JTYN8CAM.LARGE.jpg"], "step_title": "Step 8:"}, {"step": 9, "steps_text": "Draw a line between the two 1 3/8\u201d marks of Step 8. Then measure 2 3/8\u201d from the original centerline of Step 1, both above and below the original centerline and mark these two locations, on the 1 3/8\u201d line (10).", "step_imgs": ["https://cdn.instructables.com/FBP/VLXJ/JTYN8CAN/FBPVLXJJTYN8CAN.LARGE.jpg"], "step_title": "Step 9:"}, {"step": 10, "steps_text": "Using the yard stick carefully pencil two lines radiating from the center of the Bottom Plate, through the two marks of Step 9 and continue the lines past the perimeter trace of the bottom plate (11). Note that this creates three 120-degree angles between the two lines and the original centerline. These angled lines will be used to mount the turntable\u2019s legs.", "step_imgs": ["https://cdn.instructables.com/FXW/8486/JTYN8CB8/FXW8486JTYN8CB8.LARGE.jpg"], "step_title": "Step 10:"}, {"step": 11, "steps_text": "Measure 1 7/8\u201d from center of the Bottom Plate, up each 120-degree line and make a pencil mark. Use the hammer and nail to mark each location (12). These are the future locations of the inside \u00bc\u201d bolts which will secure the aluminum legs.", "step_imgs": ["https://cdn.instructables.com/F1Y/ILJ5/JTYN8CCP/F1YILJ5JTYN8CCP.LARGE.jpg"], "step_title": "Step 11:"}, {"step": 12, "steps_text": "I used a vitamin bottle cap that was 2\u201d in diameter to create a circle for the future center cut-out. I centered the cap by measuring the radius of the cap, 1\u201d up each 120-degree line and marking the location with a pencil. Then I centered the cap using the pencil marks and drew a line around it (13). Don\u2019t make the circle larger than 2\u201d or the structural integrity of the leg mounting bolts (at 1 7/8\u201d marks) can be compromised.", "step_imgs": ["https://cdn.instructables.com/F4H/QYIY/JTYN8CDM/F4HQYIYJTYN8CDM.LARGE.jpg"], "step_title": "Step 12:"}, {"step": 13, "steps_text": "Lay the turntable bearing so the side marked \u201cBottom of Bearing\u201d is up. Rotate the bearing to line up the Access Hole with the large mounting hole on the opposite side of the bearing. Now look inside the two holes marked with Arrows. They should have a corresponding smaller mounting hole on the back of the bearing aligned with them. You can lift and rotate the bearing over to see that the mounting holes are marked with asterisks on the \u201cTop of Bearing\u201d, match the two arrow marked holes on the \u201cBottom of Bearing\u201d.\nPosition the two arrowed mounting holes across the original centerline with the edge of the bearing on the edge of the Plywood. Don\u2019t worry that the bearing overlaps the \u201cBottom Plate\u201d plywood outline trace (14).", "step_imgs": ["https://cdn.instructables.com/F9R/A4I6/JTYN8CH8/F9RA4I6JTYN8CH8.LARGE.jpg"], "step_title": "Step 13:"}, {"step": 14, "steps_text": "I\u2019ve marked the two remaining mounting holes on this side with a couple of Arrows. Use a pencil to trace the outline of all four mounting holes (15).", "step_imgs": ["https://cdn.instructables.com/FRH/2BD6/JTYN8CLQ/FRH2BD6JTYN8CLQ.LARGE.jpg"], "step_title": "Step 14:"}, {"step": 15, "steps_text": "Lay the bearing to the side and mark each mounting hole\u2019s center with the hammer and nail. Use the yard stick to pencil a line between the two holes without a centerline between them and mark the crossing of the two centerlines with the nail and hammer (16).", "step_imgs": ["https://cdn.instructables.com/FPD/8NAH/JTYN8CN6/FPD8NAHJTYN8CN6.LARGE.jpg"], "step_title": "Step 15:"}, {"step": 16, "steps_text": "Use a piece of Cardboard or in my case a piece of 94-pound paper and draw a line across it. Using the yard stick and a very sharp pencil, make two marks on the line 5.75\u201d apart (17).", "step_imgs": ["https://cdn.instructables.com/FRV/21BR/JTYN8CRZ/FRV21BRJTYN8CRZ.LARGE.jpg"], "step_title": "Step 16:"}, {"step": 17, "steps_text": "Cut away excess paper around the line and marks, creating a swath about 1\u201d across. Then use the sharp nail or Awl to barely penetrate both of the marks (18).", "step_imgs": ["https://cdn.instructables.com/F01/N93Y/JTYN8CTL/F01N93YJTYN8CTL.LARGE.jpg"], "step_title": "Step 17:"}, {"step": 18, "steps_text": "Position one marked paper hole over the intersection of the two cross centerlines of Step 15, then gently push the nail or awl straight down into the crossed centerlines about \u00bc\u201d. Using a very sharp pencil placed in the remaining hole, gently rotate the paper or cardboard around the nail, tracing a 5.75\u201d radius cut line (19). Remove the nail / awl and paper.", "step_imgs": ["https://cdn.instructables.com/FZ6/VD3Q/JTYN8CYK/FZ6VD3QJTYN8CYK.LARGE.jpg"], "step_title": "Step 18:"}, {"step": 19, "steps_text": "It\u2019s time to fire-up the jig saw. Cut out the plates and access holes. Note: The jig saw blade is slightly wider than the pencil lines of the two plate\u2019s perimeter cut lines. For this reason, keep the jig saw blade just to the outside of the pencil lines. We will sneak up on the pencil lines with a sanding block and coarse sand paper.\nThe \u201cBottom Plate\u201d has both the 2\u201d center hole and the 1\u201d access hole that need to be cut out. If you don\u2019t have hole saws or paddle bits for the drill, simply drill a \u00bd\u201d hole inside both the traced cut out holes and insert the jig saw to cut them out. The 1\u201d access hole can be larger. I cut mine at 1 \u00bd\u201d.\nFor clarity, I\u2019ve noted the two cut-out lines and the two cut-outs (20).\nNote: Before starting this Instructable I had already cut and drilled the two turntable plates, so I\u2019m going to switch to them now and save my layout illustration piece of plywood for another project.", "step_imgs": ["https://cdn.instructables.com/FTX/ZH8M/JTYN8CZ7/FTXZH8MJTYN8CZ7.LARGE.jpg"], "step_title": "Step 19:"}, {"step": 20, "steps_text": "Once the plates are cut out, use coarse sand paper and a sanding block to clean up the perimeter cuts with some hand sanding. Make all the peaks match the valleys while creating a smooth circular edge. Start with short strokes focused on the peaks while rotating each plate. Then do long strokes to create an even gentle curve. While sanding, do your best to keep the sanding block perpendicular to the edge of the plate.\nCaution: Don\u2019t sand into the penciled perimeter cut lines (especially with the \u201cTop Plate\u201d). Let the outside pencil edge be the smooth circular boundary (21).", "step_imgs": ["https://cdn.instructables.com/FMM/OS18/JTYN8D3P/FMMOS18JTYN8D3P.LARGE.jpg"], "step_title": "Step 20:"}, {"step": 21, "steps_text": "Spray the edge of each plate with grey primer (22).", "step_imgs": ["https://cdn.instructables.com/FM1/7KOR/JTYN8D55/FM17KORJTYN8D55.LARGE.jpg"], "step_title": "Step 21:"}, {"step": 22, "steps_text": "If you don\u2019t have a staple gun use some spray adhesive and glue a coarse piece of sand paper to a smooth flat face on a 1\u201d x 4\u201d x 18\u201d board (23). Use five 2 \u00bd\u201d deck screws and attach the sand paper board to the end of your work table. The board needs to be screwed tight so it is at a 90-degree angle perpendicular to the work table\u2019s surface (24).", "step_imgs": ["https://cdn.instructables.com/FXC/Z59E/JTYN8D6N/FXCZ59EJTYN8D6N.LARGE.jpg", "https://cdn.instructables.com/F3H/IZTC/JTYN8DC5/F3HIZTCJTYN8DC5.LARGE.jpg"], "step_title": "Step 22:"}, {"step": 23, "steps_text": "Lay the \u201cBottom Plate\u201d on top of the work table and slide the edge of the plate down the length of the sanding board while rotating the Plate. This will make the Plate\u2019s edge perpendicular to the Plate\u2019s surface. Flip the plate over a few times while sanding, just in case the sanding board\u2019s not exactly perpendicular. When all of the primer is sanded off you will know that all irregularities have been removed and the plate is ready to be mounted (25).", "step_imgs": ["https://cdn.instructables.com/FQF/S2R7/JTYN8DEP/FQFS2R7JTYN8DEP.LARGE.jpg"], "step_title": "Step 23:"}, {"step": 24, "steps_text": "Drill a 1/8\u201d hole through the center of the \u201cTop Plate\u201d. Turn the plate over so the smooth \u201cB\u201d side is on top. Use a \u00bd\u201d paddle bit to drill completely through the plate, using the 1/8\u201d hole as a guide.\nIf you don\u2019t have a paddle bit, use a pencil and the shank of a regular \u00bd\u201d drill bit and draw a \u00bd\u201d diameter circle, centered around the 1/8\u201d pilot hole. Use a razor knife to cut out the \u00bd\u201d circle. Cut down to a depth of the top veneer. Now you can use the regular \u00bd\u201d drill bit to drill the hole without severely splintering the plywood\u2019s veneer (26).", "step_imgs": ["https://cdn.instructables.com/FS7/Y8E0/JTYN8DF7/FS7Y8E0JTYN8DF7.LARGE.jpg"], "step_title": "Step 24:"}, {"step": 25, "steps_text": "Use the tailor\u2019s tape and measure the circumference of the \u201cTop Plate\u201d. My circumference was 36 7/16\u201c(27). Place the \u00bd\u201d x 4 \u00bd\u201d bolt in the center hole of the Plate, to use as a hand grip and sand down the edge (28).\nRotate and sand until the edge is perpendicular and the circumference of the \u201cTop Plate\u201d is exactly 36\u201d. Then remove the bolt hand grip.\nCaution: measure the circumference frequently so you don\u2019t go below 36\u201d of circumference. 7/16\u201d of extra circumference equals a little more than 1/16\u201d (0.0625\u201d) of radius.\n7/16\u201d (0.4375\u201d) / pi (3.1416) / 2 = 0.0696\u201d of radius.\nNote: This step took a lot of sanding but the result was worth it. I switched back and forth between using my sanding block to remove a lot of material and the sanding board to reestablish my perpendicular edge.", "step_imgs": ["https://cdn.instructables.com/F9S/AAIR/JTYN8DKW/F9SAAIRJTYN8DKW.LARGE.jpg", "https://cdn.instructables.com/FEZ/8MT6/JTYN8DLH/FEZ8MT6JTYN8DLH.LARGE.jpg"], "step_title": "Step 25:"}, {"step": 26, "steps_text": "Use a razor knife to cut the tailor\u2019s tape at the \u00bd\u201d mark and the 36 \u00bd\u201d mark. Wrap the top of tape around the Top Plate one more time to make sure the two ends touch. If they touch, spray contact adhesive onto the edge of the \u201cTop Plate\u201d and the back of the tailor\u2019s tape. I sprayed the Top Plate upside down so the bearing side of the plate would receive the over-spray adhesive.\nCaution: When applying the tape to the plate, make sure the \u201cTop\u201d face of the Top Plate is up, have the plate on a flat surface and wrap the tape (numbers up) around the Plate using the flat surface to guide the bottom edge of the tape.\nAfter letting adhesive dry slightly but while still tacky, position and adhere the tailor\u2019s tape around the edge of the plate. (29).", "step_imgs": ["https://cdn.instructables.com/FJ2/GE9Q/JTYN8DYQ/FJ2GE9QJTYN8DYQ.LARGE.jpg"], "step_title": "Step 26:"}, {"step": 27, "steps_text": "Use the yard stick, masking tape and pencil to mark both ends of each 16\u201d aluminum leg. Place the two marks centered along the length of the leg, \u00bd\u201d from each end of the square tube (30).", "step_imgs": ["https://cdn.instructables.com/F60/7A10/JTYN8E7M/F607A10JTYN8E7M.LARGE.jpg"], "step_title": "Step 27:"}, {"step": 28, "steps_text": "Drill a \u00bc\u201d hole through only one face, at one mark, on one end of each square tube. At the remaining mark, on each square tube, Drill a 0.332\u201d (Q bit size) or 0.3281\u201d (21/64\u201d bit size) hole completely through the square tube (31).", "step_imgs": ["https://cdn.instructables.com/FL9/2KFU/JTYN8ECO/FL92KFUJTYN8ECO.LARGE.jpg"], "step_title": "Step 28:"}, {"step": 29, "steps_text": "Insert a \u00bc\u201d\u201320 aluminum rivet nut into the \u201cQ\u201d hole face of each tube that doesn\u2019t have a \u00bc\u201d hole in the opposite end of the tube on the same face (32). Seat the rivet nut with a hammer.", "step_imgs": ["https://cdn.instructables.com/FW4/12IN/JTYN8ELS/FW412INJTYN8ELS.LARGE.jpg"], "step_title": "Step 29:"}, {"step": 30, "steps_text": "Place each piece of tubing into a vice to set it's rivet. Thread a \u00bc\u201d\u201320 x 1 \u00bd\u201d hex bolt into a \u00bc\u201d\u201320 hex nut and then screw the nut and bolt into the river nut. Use two 7/16\u201d wrenches to seat the rivet nut (33). Then remove the bolt, nut and the tubing from the vise. Repeat the process for the other two aluminum legs.", "step_imgs": ["https://cdn.instructables.com/FLO/K8PP/JTYN8EU4/FLOK8PPJTYN8EU4.LARGE.jpg"], "step_title": "Step 30:"}, {"step": 31, "steps_text": "Using a carpenter\u2019s square and a pencil continue the 120-degree lines created in step 10 over the edge of the \u201cBottom Plate\u201d (34).", "step_imgs": ["https://cdn.instructables.com/F81/U4EF/JTYN8F1T/F81U4EFJTYN8F1T.LARGE.jpg"], "step_title": "Step 31:"}, {"step": 32, "steps_text": "Use four #8 x 5/8\u201d Phillips Pan Head Sheet Metal Screws and a #2 Phillips Screw driver to attach the Turn Table Bearing to the Bottom Plate, at the locations marked in Step 7 (35). Note: Make sure you match the Access Hole locations of the Bottom Plate and Bearing.", "step_imgs": ["https://cdn.instructables.com/F2W/8MSH/JTYN8F1V/F2W8MSHJTYN8F1V.LARGE.jpg"], "step_title": "Step 32:"}, {"step": 33, "steps_text": "Drill three \u00bc\u201d holes through the Bottom Plate, at the leg bolt locations marked in Step 11 (36).", "step_imgs": ["https://cdn.instructables.com/F6W/KBAD/JTYN8FKU/F6WKBADJTYN8FKU.LARGE.jpg"], "step_title": "Step 33:"}, {"step": 34, "steps_text": "Insert three \u00bc\u201d-20 x 1\u00bd\u201d Hex Head Bolts through the Bottom Plate \u00bc\u201d holes and into the \u00bc\u201d holes of the three, square tubing legs. Temporarily, secure them with \u00bc\u201d\u201320 Hex Nuts only.", "step_imgs": [], "step_title": "Step 34:"}, {"step": 35, "steps_text": "Position the assembly with the legs down, on top of the work table and align the 120-degree edge marks made in Step 31 with the centers of the square tubes (37).", "step_imgs": ["https://cdn.instructables.com/F19/6QTY/JTYN8FQD/F196QTYJTYN8FQD.LARGE.jpg"], "step_title": "Step 35:"}, {"step": 36, "steps_text": "Place masking tape on the inside of the bearing above the radiating 120-degree lines. Use a narrow putty knife as a straight edge and mark the three lines on the tape. With the yard stick, measure \u00bd\u201d up each line, from the inside of the bearing and make a pencil mark (38).", "step_imgs": ["https://cdn.instructables.com/F5I/6GI2/JTYN8FZJ/F5I6GI2JTYN8FZJ.LARGE.jpg"], "step_title": "Step 36:"}, {"step": 37, "steps_text": "Double check that the square tubes are still centered on the edge lines. At the marks made in the last step, use a \u00bc\u201d Drill Bit and drill through the bearing plate, the Bottom Plate and the square tubes (39).", "step_imgs": ["https://cdn.instructables.com/FMI/1K8L/JTYN8G8H/FMI1K8LJTYN8G8H.LARGE.jpg"], "step_title": "Step 37:"}, {"step": 38, "steps_text": "Remove the three \u00bc\u201d hex bolts installed in Step 34. Re-install them into the \u00bc\u201d holes drilled in Step 37, but this time use a \u00bc\u201d lock washer inside each square tube to keep the hex nut tight. Small fingers and patience are a plus when getting the washers and nuts on the bolts, inside the tube. I was able to do it despite my big fingers and lack of patience. When you tighten the nut, wedge a large flat tip screw driver between the nut and the inside wall of the tube, to keep the nut from spinning.", "step_imgs": [], "step_title": "Step 38:"}, {"step": 39, "steps_text": "Repeat Step 34 using new nuts and bolts along with flat washers under the bolts and lock washers under the nuts.", "step_imgs": [], "step_title": "Step 39:"}, {"step": 40, "steps_text": "Position the \u201cTop Plate\u201d upside down on the work table. Rotate the bearing so one of the Top Plate mounting holes is centered in the Access Hole of the Bottom Plate. Refer to photos 40 and 41 for clarification. Position and align the Bearing Top Plate mounting hole (in the Access Hole) to a mounting hole in the Top Plate.\nUse four #8 x 5/8\u201d Phillips Pan Head, Sheet Metal Screws and a #2 Phillips screw driver to attach the Turn Table Bearing to the Top Plate, through the access hole, at the locations marked in Step 15 (42). Note: Don\u2019t tighten the screws completely until all four are inserted in the Top Plate. Just screw them in enough so the bearing\u2019s access hole can be rotated to the next screw location.", "step_imgs": ["https://cdn.instructables.com/F4X/WQWM/JTYN8G9E/F4XWQWMJTYN8G9E.LARGE.jpg", "https://cdn.instructables.com/FK0/GVUF/JTYN8GGT/FK0GVUFJTYN8GGT.LARGE.jpg", "https://cdn.instructables.com/FIH/W08X/JTYN8GM0/FIHW08XJTYN8GM0.LARGE.jpg"], "step_title": "Step 40:"}, {"step": 41, "steps_text": "Use a couple of wrenches to tighten the \u00bd\u201d coupling nut snug against a \u00bd\u201d hex nut, on the \u00bd\u201d all-thread. Then thread the \u00bd\u201d self-locking, nylon insert hex nut onto the opposite end of the all-thread, until 1/8\u201d thread protrudes (43). Loosen and remove the hex nut and coupling nut.", "step_imgs": ["https://cdn.instructables.com/FOA/8X61/JTYN8GR1/FOA8X61JTYN8GR1.LARGE.jpg"], "step_title": "Step 41:"}, {"step": 42, "steps_text": "Place the \u00bd\u201d ID x 1/8\u201d thick fender washer on the all-thread (44) and thread it through the Top Plate, from beneath the assembly.", "step_imgs": ["https://cdn.instructables.com/F30/MWDC/JTYN8GT6/F30MWDCJTYN8GT6.LARGE.jpg"], "step_title": "Step 42:"}, {"step": 43, "steps_text": "Place a \u00bd\u201d washer onto the all-thread and then wrap masking tape around the all-thread, just above the washer and 9\u201d above the washer. Wrap the tape at both locations until it\u2019s thick enough to act as bushings to keep the PVC centered around the all-thread (45).", "step_imgs": ["https://cdn.instructables.com/FO7/SF3G/JTYN8GY5/FO7SF3GJTYN8GY5.LARGE.jpg"], "step_title": "Step 43:"}, {"step": 44, "steps_text": "Place the PVC over the tape bushings, add the \u00bd\u201d washer, \u00bd\u201d lock washer and \u00bd\u201d coupling. Tighten the assembly using two wrenches (46). Sand the surfaces of the \u00bd\u201d washers, \u00bd\u201d lock washer, \u00bd\u201d coupling nut and PVC Tube.", "step_imgs": ["https://cdn.instructables.com/FMQ/GR7K/JTYN8H6Q/FMQGR7KJTYN8H6Q.LARGE.jpg"], "step_title": "Step 44:"}, {"step": 45, "steps_text": "Mask the adhered tailor\u2019s tape with masking tape and trim of the excess tape with a razor knife.", "step_imgs": [], "step_title": "Step 45:"}, {"step": 46, "steps_text": "Sand and clean the assembly, install a \u00bd\u201d bolt in the top of the coupling (no spray on threads), then coat it thoroughly with spray primer / paint (47).", "step_imgs": ["https://cdn.instructables.com/FAK/SAYF/JTYN8H7H/FAKSAYFJTYN8H7H.LARGE.jpg"], "step_title": "Step 46:"}, {"step": 47, "steps_text": "After drying, remove the masking tape and thread cover bolt, from the assembly. Then attach the self-adhesive rubber feet to the bottom of the aluminum legs (48).", "step_imgs": ["https://cdn.instructables.com/FHR/Q6PF/JTYN8HCZ/FHRQ6PFJTYN8HCZ.LARGE.jpg"], "step_title": "Step 47:"}, {"step": 48, "steps_text": "Note: The round PVC cap is normally not secured to the base plate. The three aluminum legs keep it confined during application of heavy loads (49). Normally it\u2019s treated as a loose accessory. If you decide to attach it, I would suggest using double sided tape applied to the deck plate and cap edge. This will give you easy access to the column nut if you ever need it.", "step_imgs": ["https://cdn.instructables.com/F22/1P2K/JTYN8HQ6/F221P2KJTYN8HQ6.LARGE.jpg"], "step_title": "Step 48:"}, {"step": 49, "steps_text": "The base assembly can be adjusted to what you want to model. Here we see the removable cap pivot, rubber feet and adjustable bolt feet (50).\nIf your modeling is confined to smaller subjects, you might decide not to install turntable legs and just use rubber feet attached directly to the lower deck.\nIf you are prone to modeling large bulky models with an off center, CG (center of gravity), weighing less than 20 lbs, the legs and bolt feet will do nicely.\nThere is a variety of choices for the discriminating photogramist.", "step_imgs": ["https://cdn.instructables.com/FW4/YPAM/JTYN8I5T/FW4YPAMJTYN8I5T.LARGE.jpg"], "step_title": "Step 49:"}, {"step": 50, "steps_text": "Specialized model mounting hardware flexibility is accomplished with the \u00bd\u201d-13 transition coupling. To kick start your creativity, I\u2019ve included a few securing devices that I will use soon.\nThe first is a spike, made from an old screwdriver nested in a hole drilled into the head of a \u00bd\u201d-13 bolt (51).", "step_imgs": ["https://cdn.instructables.com/F9F/3YM0/JTYN8ICD/F9F3YM0JTYN8ICD.LARGE.jpg"], "step_title": "Step 50:"}, {"step": 51, "steps_text": "Second is a glob of hot glue seated on a \u00bd\u201d-13 carriage bolt (52). I call it the \u201cGlubber\u201d. Heat the glue to re-use it on the base of models.", "step_imgs": ["https://cdn.instructables.com/FAD/RVCI/JTYN8ICF/FADRVCIJTYN8ICF.LARGE.jpg"], "step_title": "Step 51:"}, {"step": 52, "steps_text": "Next is the offset plate. Very handy for keeping the model centered during rotation while utilizing a screw hole in the base of the model (53).", "step_imgs": ["https://cdn.instructables.com/FG9/FVUH/JTYN8IGH/FG9FVUHJTYN8IGH.LARGE.jpg"], "step_title": "Step 52:"}, {"step": 53, "steps_text": "My last example is a carriage bolt wrapped with masking tape to support a model that can be clamped around it (54).\nI hope that this Instructable has inspired your creativity and that you will share your re-mix of this project.\nHappy Modeling.", "step_imgs": ["https://cdn.instructables.com/FWJ/EZUO/JTYN8IKW/FWJEZUOJTYN8IKW.LARGE.jpg"], "step_title": "Step 53:"}], "channel": ""}, {"category": "", "description": "ENTRY IN THE REMIX CONTEST - VOTE NOW HERE OR AT THE BOTTOM OF THE PAGE!!!\nThis is a remix I just had to do ever since I saw two awesome instructables and couldn't stop thinking about combining the two! This mashup basically combines the interface of the Light Switch Box with simple games (Simon, Whack-a-Mole, etc...) on the Arduino. Like the original author of the Light Switch Box mentions, I have no idea why toddlers love to play with light switches so much, but this project gives them their fix! I adapted the simple electronics to add the Simon Arduino game and then multiple game modes so my older kids can play too! I also made one major enhancement for the LEDs and used ping pong balls to diffuse the LEDs because it looks so much cooler than the original!\nIt should be an easy way to get into electronics and take it one notch further to simple Arduino'ing. Check out the original inspiration - here are the links!\nChild's Toy Light Switch Box\nArduino Simon Says Game\n\nAside - My Motivation:\nMy 4 kids mean everything to me.\nAt their young ages right now (7,5,3,and 1) it takes a lot of attention and work to keep everyone sane! That doesn't leave much time for tinkering, Arduino'ing, writing Instructables, etc. But oddly enough it's those types of projects and hobbies that keep me sane. Anyone else feel similarly? For whatever sad, strange reason that my wife tries really hard to comprehend (bless her heart), I absolutely love getting sucked into a good project for hours on end that gets my creative thinking going, makes me problem-solve, and gives me the opportunity for hand's-on engineering.\nAnd that's what I love about Instructables!!!\nI get to see the passion in other's projects - so many great ideas and my mind starts racing! So at least when I gear the project towards my kids right now and involve them in the process I feel like I'm giving them a taste of the hobbies that I love. And who knows? Maybe one day they'll turn out to be some famous inventor, designer, entrepreneur, hacker, etc. But as long as they can be creative, finding passion in their work, it will all be worth it.\nLet's get started!!!", "title": "Kid's Toy Light Switch Box + Games Remix", "url": "https://www.instructables.com/id/Childs-Toy-Light-Switch-Box-Remix/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials List:\n--- Hardware Store ---\n(1) 1\"x10\" board (Need about 12\"-18\")\n(4) single pole light switches\n(4) light switch wall plates\n(4) plastic \"old work\" electric boxes\n--- Walmart or Amazon---\n(2) white ping pong balls\n(4) AA batteries\n--- Electronic Components Online ---\n(4) RGB 10mm LEDs\n(1) Push button switch\n(1) Piezo buzzer (or speaker)\n(5) 100 ohm resistors\n(1) 220 ohm resistor\n(1) 4xAA battery holder\n(1) Slide switch\n(1) Arduino Uno\nTools List:\n--- Workshop ---\nJigsaw\nDrill with bits (1 1/2\" flat boring bit, 1/2\" flat boring bit, then standard 1/2\", 1/4\", 1/16\")\nScrewdrivers (phillips and flat head)\nTape measure\nUtility knife\nSandpaper and paint (optional)\n--- Home and Electronics ---\nSoldering iron and solder\nWire strippers\nHot glue gun\nRuler\nPencil\nScissors", "step_imgs": ["https://cdn.instructables.com/F9L/CRKQ/JTOMY7ET/F9LCRKQJTOMY7ET.LARGE.jpg", "https://cdn.instructables.com/F7I/6A39/JTOMY86D/F7I6A39JTOMY86D.LARGE.jpg"], "step_title": "Step 1: Materials and Tools"}, {"step": 2, "steps_text": "To create the panel you'll need a board or a box that at least has room on the main panel for 4 light switches and 4 ping pong balls. About 14\" by 8\" is the smallest you'd want to go to fit this. In the original Child's Toy Light Switch Box instructable Ben recommends buying a wooden box for this project, but I made do with a 1\" x 10\" board for now.\nTake the board (or box lid) and layout the switches and ping pong balls (18\" by 9 1/4\" in my design)\nMeasure from the bottom of the board and mark how far up you want the switches set (1 1/2\" in my design)\nUsing a ruler draw in pencil a straight line across those markings\nDo the same for the top line where you want to center the ping pong balls (2\" in my design)\nNext find the center of the board by measuring across the length and mark the center line\nUse symmetrical distances from the middle on each side with equal spacing between electric boxes and ping pong balls\nSketch out the switch boxes and mark on the top line equal to the center of each switch where the ping pong ball will go\n(Note: Don't worry about the pencil lines assuming you will paint or sand the completed board.)", "step_imgs": ["https://cdn.instructables.com/F78/HZ76/JTON4LT2/F78HZ76JTON4LT2.LARGE.jpg", "https://cdn.instructables.com/F9R/JTVX/JTOMY7KA/F9RJTVXJTOMY7KA.LARGE.jpg", "https://cdn.instructables.com/FCT/DWLX/JTOMY7AW/FCTDWLXJTOMY7AW.LARGE.jpg"], "step_title": "Step 2: Draft Main Panel Layout"}, {"step": 3, "steps_text": "Cutting out the electric box rectangles:\nDrill 1/4\" holes in each corner of each rectangle as shown\nCut out each rectangle using a jigsaw to connect the holes along the sides, top and botto\nPreparing the Ping Pong Ball holes:\nOn each of the 4 ping pong marks, first use the 1 1/2\" drill bit to start the hole where the cover will go\nWarning: Here you only drill about 1/8\" down into the wood!!! Just enough for a lip.\nAfter prepping the 1 1/2\" hole, drill through the center of each hole with 1/4\" bit", "step_imgs": ["https://cdn.instructables.com/FFV/H1GR/JTOMY7BV/FFVH1GRJTOMY7BV.LARGE.jpg", "https://cdn.instructables.com/FS8/W5AV/JTOMY7BI/FS8W5AVJTOMY7BI.LARGE.jpg", "https://cdn.instructables.com/F7I/7R0I/JTOMY7B8/F7I7R0IJTOMY7B8.LARGE.jpg", "https://cdn.instructables.com/FUD/75M1/JTOMY7B6/FUD75M1JTOMY7B6.LARGE.jpg"], "step_title": "Step 3: Drill and Cut Panel Holes"}, {"step": 4, "steps_text": "Next mount each electrical box by sliding them into the hole making sure the tabs on top and bottom are tucked in next to the box.\nAfter making sure the electric box is completely in (flush with the front face), screw in the top and bottom.\nMake sure the tabs for these \"old work\" boxes end up out and grab the back of the board, making it snug.\nWarning: Don't over-tighten or you may break the plastic!!", "step_imgs": ["https://cdn.instructables.com/FT0/4Z6D/JTOMY7R9/FT04Z6DJTOMY7R9.LARGE.jpg", "https://cdn.instructables.com/FXF/2ZEM/JTOMY7B7/FXF2ZEMJTOMY7B7.LARGE.jpg", "https://cdn.instructables.com/F88/PH4K/JTOMY7Y6/F88PH4KJTOMY7Y6.LARGE.jpg"], "step_title": "Step 4: Mount Electric Boxes on Panel"}, {"step": 5, "steps_text": "Cut and strip about 1/2\" off the edges of 2 wires for each light switch.\n(About 12\" - 14\" is the most you'll need so it can reach across the panel).\nConnect a wire to each side screw of the light switch.", "step_imgs": ["https://cdn.instructables.com/FMJ/YCH6/JTOMY7BU/FMJYCH6JTOMY7BU.LARGE.jpg", "https://cdn.instructables.com/FT0/BKWQ/JTOMY7EA/FT0BKWQJTOMY7EA.LARGE.jpg", "https://cdn.instructables.com/F85/7ECA/JTOMY7D8/F857ECAJTOMY7D8.LARGE.jpg"], "step_title": "Step 5: Wire the Switches"}, {"step": 6, "steps_text": "Flipping the panel over to the backside, use a screwdriver or pliers to pop out one of the top wire tabs on each of the 4 electrical boxes.\nTurning the panel back over to the front, thread the wire ends through the open tab and screw in each switch.", "step_imgs": ["https://cdn.instructables.com/F1P/GQEG/JTOMY7OT/F1PGQEGJTOMY7OT.LARGE.jpg", "https://cdn.instructables.com/FKM/V9ZX/JTOMY86T/FKMV9ZXJTOMY86T.LARGE.jpg"], "step_title": "Step 6: Attach Switches to Electric Boxes"}, {"step": 7, "steps_text": "I find it simplest (and maybe even cheapest) to just buy a bulk amount of RGB LEDs and then I can pick whatever color(s) I want for a project. If you already have red, blue, green, and yellow LEDs, ignore this step. For everyone else, clipping off the leads we won't be using from each LED will help us not get confused.\nOn each common cathode RGB LED the longest lead is GND and will always be used\nFor each LED use wire cutters/snippers to cut off the unneeded leads shown in the diagram\nAs you can see in the diagram yellow is made using the red and green leads\nNote: Try not to mix up the LEDs after snipping the leads, but if you do, just refer back to diagram to tell them apart.", "step_imgs": ["https://cdn.instructables.com/FXZ/TMBF/JTT5H94D/FXZTMBFJTT5H94D.LARGE.jpg", "https://cdn.instructables.com/FKO/OW85/JTOMY7CN/FKOOW85JTOMY7CN.LARGE.jpg", "https://cdn.instructables.com/FW1/REOG/JTOMY7FE/FW1REOGJTOMY7FE.LARGE.jpg"], "step_title": "Step 7: Cut RGB LED Leads"}, {"step": 8, "steps_text": "Using a hot glue gun, add glue to the underside of each LED and stick the leads through the hole, gluing it to the front of the panel. (Here you will want to make sure you are putting the LED colors in the order you choose).", "step_imgs": ["https://cdn.instructables.com/FUC/WOUR/JTOMY7CL/FUCWOURJTOMY7CL.LARGE.jpg"], "step_title": "Step 8: Mount LEDs to Panel"}, {"step": 9, "steps_text": "At this point I decided to add a push button switch (latching kind) to the front of the panel to assist with changing modes. If you only want to do one mode on the Arduino, you can ignore this switch.\nDrill 1/2\" hole for push button switch where desired (for mine it was in line with the LEDs and center of the panel)\nNext, flip the panel over and using a 1/2\" flat boring bit, drill most of the way through the wood until just the tip of the bit breaks through to the front side. (This hole is for the piezo - without a small hole the sound will be muffled.)", "step_imgs": ["https://cdn.instructables.com/FCP/DSPU/JTOMY7JE/FCPDSPUJTOMY7JE.LARGE.jpg", "https://cdn.instructables.com/F6Z/6KIL/JTOMY7WY/F6Z6KILJTOMY7WY.LARGE.jpg"], "step_title": "Step 9: Drill Holes for Push Button and Piezo"}, {"step": 10, "steps_text": "Next, paint or spray paint the panel. If like me, you don't want to remove the switches, just cover them with tape. (Or if I had thought about it earlier I suppose I would have painted before mounting LEDs and Switches)", "step_imgs": ["https://cdn.instructables.com/FBO/AO8I/JTOMY7BA/FBOAO8IJTOMY7BA.LARGE.jpg"], "step_title": "Step 10: Paint the Panel"}, {"step": 11, "steps_text": "Used ping pong balls will work just fine here, but should be cleaned first. For dirty ping pong balls use a little dish soap and wash with your fingers and then dry. (The ping pong balls in these pictures were very used and looked much different before I washed them!)\nTake each ping pong ball and carefully use a utility or exacto knife to cut the ball down the middle seam. (Holding the ball up to the light you should be able to see the seam).\nNext, use scissors to cut around the edge, trimming about another 1/8\" - 1/4\" further until the cover is able to fit into the 1 1/2\" round slot.\nTo mount each ping pong ball gently press one side into the slot, then ease in around the ball the edges into the slot.\nMine fit so snugly that no glue was needed. If needed add a dab of hot glue on the back when putting them in the slot.\nNote: If the ball cover doesn't fit, keep trimming a bit off the bottom edge until you can get it in the slot. It may be good to practice mounting one of the balls to get the right size, then trim the others similarly.", "step_imgs": ["https://cdn.instructables.com/FKA/KEVM/JTOMY7E0/FKAKEVMJTOMY7E0.LARGE.jpg", "https://cdn.instructables.com/FRC/NXS1/JTOMY7BJ/FRCNXS1JTOMY7BJ.LARGE.jpg", "https://cdn.instructables.com/FGX/YSOT/JTOMY7A4/FGXYSOTJTOMY7A4.LARGE.jpg", "https://cdn.instructables.com/FJH/NTNC/JTOMY7F4/FJHNTNCJTOMY7F4.LARGE.jpg"], "step_title": "Step 11: Cut and Mount Ping Pong Ball LED Covers"}, {"step": 12, "steps_text": "Mount the switch plate covers using a flat-head screwdriver.", "step_imgs": ["https://cdn.instructables.com/F6O/W2L8/JTOMY7MA/F6OW2L8JTOMY7MA.LARGE.jpg"], "step_title": "Step 12: Mount the Switch Plate Covers"}, {"step": 13, "steps_text": "Put the push button through the front hole and hold in place to add hot glue to the back until dry.\nRemove any cover from the piezo and slide into the slot. Use hot glue to hold in place.", "step_imgs": ["https://cdn.instructables.com/FLK/V74J/JTOMY7PN/FLKV74JJTOMY7PN.LARGE.jpg", "https://cdn.instructables.com/FQS/KSGK/JTOMY7BN/FQSKSGKJTOMY7BN.LARGE.jpg"], "step_title": "Step 13: Attach Push Button and Piezo"}, {"step": 14, "steps_text": "So for simple electronics projects like this with a minimal number of components, I prefer a simple method of connecting resistors and wires directly to the wood board. Drilling small holes in board for the component leads allows them to hold in place easily while soldering!\nFirst, on the back of the board label the colors of the LEDS, and the leads with a + and - (remember the neg- side is the longest)\nAlso, for the yellow LED label both positive terminals with R (red) and G (green) since it will have two leads\nDrill a 1/8\" or 1/16\" small hole in the wood right next to each LED lead coming out of the hole in the board\nWarning: Make sure to not drill all the way through the board to the front! Just a 1/4\" - 1/2\" hole where you can feed in wires.\nGently bend over the LED leads and insert into the hole\nNext, drill a 1/8\" or 1/16\" small hole about an inch away from the positive+ terminal(s) on each LED\nWrite the resistor size that will span this gap based on the diagram\nNext, fold or trim the resistor leads and span each gap with the appropriate resistor\nUsing a soldering iron and solder, the component leads should be touching and you can now simply solder at each hole\nLast, put a dab of hot glue on each connection to better hold the components and leads to the board.", "step_imgs": ["https://cdn.instructables.com/F1U/8CEG/JTOMY81J/F1U8CEGJTOMY81J.LARGE.jpg", "https://cdn.instructables.com/F5F/70YI/JTT5HGA7/F5F70YIJTT5HGA7.LARGE.jpg", "https://cdn.instructables.com/FLI/V41J/JTOMY7A2/FLIV41JJTOMY7A2.LARGE.jpg", "https://cdn.instructables.com/F5A/6R28/JTOMY7AY/F5A6R28JTOMY7AY.LARGE.jpg"], "step_title": "Step 14: Mount and Solder Resistors"}, {"step": 15, "steps_text": "Follow the diagram to make connections between the LEDs, resistors, push button, piezo, light switches and Arduino. Each line that is black in the diagram is connected to ground (GND) on the Arduino. Similar to the resistors, it is easiest to drill a hole in the wood, feed all the ground wires into the hole to solder together with a single wire that will lead from the bunch to the arduino. Again, use hot glue to pin the wires to where you want on the board.", "step_imgs": ["https://cdn.instructables.com/F9R/VLQK/JTT5HL82/F9RVLQKJTT5HL82.LARGE.jpg", "https://cdn.instructables.com/FSI/MFYJ/JTOMY7JQ/FSIMFYJJTOMY7JQ.LARGE.jpg"], "step_title": "Step 15: Wire the Circuit"}, {"step": 16, "steps_text": "Position the Arduino on the back of the panel and attach to the board using screws through the small holes in the sides or strong tape.", "step_imgs": ["https://cdn.instructables.com/FTH/54SF/JTOMY7JC/FTH54SFJTOMY7JC.LARGE.jpg"], "step_title": "Step 16: Mount the Arduino"}, {"step": 17, "steps_text": "If you don't want to run the board off USB power, add 4AA batteries to the circuit using a battery pack. Adding a small slide switch between the positive terminal and the Arduino will allow you to turn on and off power since a regular Arduino Uno and the LEDs will quickly run down batteries.", "step_imgs": ["https://cdn.instructables.com/FRC/ABSV/JTYN8QRN/FRCABSVJTYN8QRN.LARGE.jpg"], "step_title": "Step 17: Add Batteries and Power Switch"}, {"step": 18, "steps_text": "The original code for Simon Says worked great for this project, but I needed to make some modifications to include a simple pass the switch through to the LEDs as well as other modes. The video shows the functionality and below is the code for the completed games.", "step_imgs": [], "step_title": "Step 18: Code the Arduino"}, {"step": 19, "steps_text": "With everything connected, test the circuit and functionality. I haven't yet added a back (the box) part for mine, but the kids love it! I'll end up just enclosing it with a few pieces of wood or putting the panel in a play area. Happy kid gaming! Feel free to add your own logic and games to this simple setup!", "step_imgs": ["https://cdn.instructables.com/FVR/5CB9/JTYN97UD/FVR5CB9JTYN97UD.LARGE.jpg", "https://cdn.instructables.com/FXV/W5GU/JTYN8STF/FXVW5GUJTYN8STF.LARGE.jpg"], "step_title": "Step 19: Test, Enjoy, and Even Customize!"}], "channel": ""}, {"category": "", "description": "Hey guys,\nIn this instructables I want to show you how to build your own automated mixed-drink maker to satisfy all your liquid (and alcohol ;) )needs.\nFor a while now, I have been satisfying my thirst and taste-buds with pre-made concentrates from sodastream. The unit allows you to easily carbonate water and add flavoring to it. However, where it exceeds in easy of use, it lacks in quality. After nearly 4 months of research and planning, I can finally say that i have built my own solution that goes above and beyond anything currently on the market. Having gone through all the steps, this project is great for those who want to build a full-tier product, involving both software and hardware. This project has been a great starting point for the exploration of arduino and manufacturing.\nWith that being said, Follow along to build your own Automated Mixed-Drink Machine..\n\nTake a look at the 3D model below, this is an outline of what the final product should like once your done.\n(If you can't see the interactive 3D model below, its probably because you're not using a WebGL - enabled browser, or your using the instructables app))\nHowever, Before we get any further, its a good idea for you to know what you are going to build, so take a look at these wonderful beauty shots. (yes there is a top, but the internals look cool for the photos :D )\nBelow are GIFs of each station. As the drink is being constructed, it is transported to each station on the a motorized sliding rail. Depending on the recipe, the drink may or may not need to move in different patterns.\nStations Include:\nAutomated Mint, Sugar, and Lime Muddle for releasing all the flavors\nAutomated Lime Slicer and Dispenser\nAutomated Mint and Sugar Dispenser\nAutomated Liquid Dispenser\nAdditionally all these processes are controlled by multiples Arduinos and 10.1\" tablet via a Serial Connection. (Refer to coding steps)\nWOW!!!!\n(This looks even better in real life. If you guys want more photos, please don't hesitate to ask in the comments - i will be happy to upload more :D)", "title": "Automated Cocktail Drink Machine", "url": "https://www.instructables.com/id/Automated-Cocktail-Drink-Machine/", "section": "technology", "steps": [{"step": 1, "steps_text": "The entire machine was modeled and designed in Fusion 360. Below you can find all the required technical parts and files for the machine.\nStandard Hardware Parts:\nMost of these parts you can buy at a local hardware store or online from Amazon/Aliexpress:\nQuantity Description Link Price\n4x 32-35 mm (1\") pipe mounting brackets Bauhaus 3,50\u20ac\n4x\n32-35 mm (1\") pipe mounting brackets\nBauhaus 3,50\u20ac\n2x\n74-80 mm (21/2\") pipe mounting brackets\nBauhaus 4,50\u20ac\n10x Square mounting brackets Bauhaus 15,00\u20ac\n1x 500mmx1500mmx60mm Styrofoam Panel Bauhaus 3,00\u20ac\nNails, Screws, Nuts, Bolts, and Washers:\nQuantity Description Where to buy\nPrice\n8x M5x20mm DIN912 cylinderhead screw\nlocal hardware store\n-\n4x M5x10mm DIN912 cylinderhead screw\nlocal hardware store\n-\n6x M4x20mm DIN912 cylinderhead screw\nlocal hardware store\n-\n4x 1.2mmx20mm Steel Nails local hardware store -\n20x M3x30mm DIN912 cylinderhead screw\nlocal hardware store\n-\n10x M3x25mm DIN912 cylinderhead screw\nlocal hardware store\n-\n30x 5mmx15mm Wood Screws local hardware store -\n20x 5mmx30mm Wood Screws local hardware store -\n2x 30mmx50mm Brass Hinges local hardware store -\n20x M3 Nut\nlocal hardware store\n-\n15x M5 washer\nlocal hardware store\n-\n6x M4 washer\nlocal hardware store\n-\n30x M3 washer\nlocal hardware store\n-\nPipes & Rails:\nQuantity Description Link Price\n1x 20x1000mm round aluminium extrusion\nlocal hardware store\n3,50\u20ac\n1x 15x15x1000 square stainless steel extrusion local hardware store 8,80\u20ac\n1x\n12x1000mm round aluminium extrusion\nlocal hardware store 5,80\u20ac\n1x 75mm Y PVC Pipe Fitting local hardware store 0,50\u20ac\n1x 75mm T PVC Pipe Fitting\nlocal hardware store 0,50\u20ac\n1x 75mmx500mm round PVC pipe\nlocal hardware store 0,75\u20ac\nCNC-Laser-Cut Parts:\nAll laser cut parts were cut on a BOSS LS-1630 laser cutter. I was able to get access to a laser cutter from a nearby school, but there are more and more maker-shops poping up, and those often have similar equipment. For 3mm Acrylic, power was set to 90 and speed 25. For 5mm Acrylic parts the power was set to 95 and speed 10. These settings seemed to work well - it always cut through the plastic and protective covering without any problems, however depending on your machine these settings will likely need to be changed.\nThese are the \"must-have\" laser cut parts - additional laser cut parts from 3mm&5mm acrylic sheets are included in the files, however these only for atheistic purposes.\nDXF Files can be found at the bottom of this step\nQuantity Description How the part looks like\n1x\nTop Bracket\n2x\nSide Bracket\n1x\nBottom Slider\n1x\nCopper Backing\n1x\nWood Bracket\n1x\nLeft Panel\n2x Top & Bottom Electronic Structure\n2x\nSide Panel Electronic Structure\n8x\nBraces\n3D-Printed Parts:\nThe 3D-Printed parts are made out of PLA with a resolution of 0.1mm. I used a Prusa I3 Mk3 3D printer to print the parts. Total Print time was around 48 hours and used almost 500g of filament at 20% infill.\nAll the required STL files are available at the end of this step in addition to GrabCAD and Fusion360 Gallery.\nQuantity Description How the part looks like\n1x\nMint Container\n1x\nSugar Container\n1x\nMint Auger\n1x\nSugar Auger", "step_imgs": [], "step_title": "Step 1: Mechanical Parts List"}, {"step": 2, "steps_text": "Below you can find a list of all the electrical and technical parts (and links to the purchased parts). Many of these can be found in pre-made kits from elegoo, such as:\nELEGOO Mega 2560 Project The Most Complete Starter Kit\nELEGOO EL-KIT-012 UNO Project Smart Robot Car Kit V 3.0 with UNO R3\nI Highly recommend these as they also come with tutorials and other projects for future DIYing! :)\nQuantity Description Name on PCB\nLink Price\n1x Arduino Uno R3\nElegoo Kit -\n1x Arduino Mega 2560\n\nElegoo Kit -\n8x 1k Resistor\nElegoo Kit -\n1x 500N, 100mm, Linear Actuator 20mm/s\nBangood\n38$\n1x 200N, 200mm, Linear Actuator 50mm/s\nBangood\n45$\n3x 5x 60w Peltier Modules\n\nAmazon\n12$\n1x 9g Servo Motor\nGlass Slider Elegoo Kit -\n1x 10.1\" Samsung Tablet\n-\n1x LN298 Motor Driver\nElegoo Kit -\n50x M-M BreadBoard Wires\nElegoo Kit -\n1x Bread Board\nElegoo Kit -\n2x 8 Channel Relay\n\nAmazon\n7$\n2x 120mm Fans\n-\n7x Pumps\n-", "step_imgs": ["https://cdn.instructables.com/FFM/93CE/JTYN898V/FFM93CEJTYN898V.LARGE.jpg"], "step_title": "Step 2: Electronics Part List"}, {"step": 3, "steps_text": "Here comes the most important part, build the structural frame for all the technical parts. The goal here was to make the entire product look and feel as professional as possible. Using materials such as shiny acrylic, hard PVC sheets and thick dark wood did just that. They provided a feed that resembled the strength and functionality of an industrial appliance, but also emitted a sense of homeliness and luxury.\nAfter all, this is just that, a luxury machine. I mean... Its a cocktail maker with copper sheets just for looks! WOW!\nThe Process:\nFirst things first, we need to cut each material to its required size. A list of hand drawn dimensions and diagrams can be seen below, but also obtained via the 3D model above and DXF files for each part. (I'll Include those at the end of this step)", "step_imgs": ["https://cdn.instructables.com/FL4/3081/JTYN686Z/FL43081JTYN686Z.LARGE.jpg", "https://cdn.instructables.com/F1G/3LL5/JTYN893M/F1G3LL5JTYN893M.LARGE.jpg", "https://cdn.instructables.com/F9V/ARU2/JTYN69A0/F9VARU2JTYN69A0.LARGE.jpg", "https://cdn.instructables.com/F5E/RO3Y/JTYN62YU/F5ERO3YJTYN62YU.LARGE.jpg", "https://cdn.instructables.com/FYX/ELWN/JTYN67BP/FYXELWNJTYN67BP.LARGE.jpg", "https://cdn.instructables.com/F6K/XMX1/JTT5RLOO/F6KXMX1JTT5RLOO.LARGE.jpg", "https://cdn.instructables.com/FNL/4CEQ/JTT5RLIU/FNL4CEQJTT5RLIU.LARGE.jpg", "https://cdn.instructables.com/F79/0DW9/JTT5RL5C/F790DW9JTT5RL5C.LARGE.jpg", "https://cdn.instructables.com/F2J/DONZ/JTT5RLE6/F2JDONZJTT5RLE6.LARGE.jpg", "https://cdn.instructables.com/FHT/Z041/JTT5RL0P/FHTZ041JTT5RL0P.LARGE.jpg", "https://cdn.instructables.com/FL5/ZICG/JTYN668O/FL5ZICGJTYN668O.LARGE.jpg", "https://cdn.instructables.com/F2Y/MI9W/JTYN685T/F2YMI9WJTYN685T.LARGE.jpg", "https://cdn.instructables.com/F8W/BS7P/JTYN66H4/F8WBS7PJTYN66H4.LARGE.jpg", "https://cdn.instructables.com/FYP/PV2H/JTYN65WE/FYPPV2HJTYN65WE.LARGE.jpg", "https://cdn.instructables.com/FO7/KLL8/JTYN8YOJ/FO7KLL8JTYN8YOJ.LARGE.jpg", "https://cdn.instructables.com/FLI/2M1I/JTYN660E/FLI2M1IJTYN660E.LARGE.jpg", "https://cdn.instructables.com/FCT/CPMV/JTYN66WJ/FCTCPMVJTYN66WJ.LARGE.jpg", "https://cdn.instructables.com/FE3/AKS4/JTYN65P9/FE3AKS4JTYN65P9.LARGE.jpg", "https://cdn.instructables.com/FDG/R5PZ/JTYN65HZ/FDGR5PZJTYN65HZ.LARGE.jpg", "https://cdn.instructables.com/FBE/WMAS/JTYN66OB/FBEWMASJTYN66OB.LARGE.jpg", "https://cdn.instructables.com/FD1/02U1/JTYN68I1/FD102U1JTYN68I1.LARGE.jpg"], "step_title": "Step 3: Build the Base and Drink Cabinet"}, {"step": 4, "steps_text": "First things first - Print the parts. The 3D-Printed parts are made out of PLA with a resolution of 0.1mm. I used a Prusa I3 Mk3 3D printer to print the parts. I found 20% infill to be the best compromise between strength and filament used.\nBelow is a cross section of a failed print. Here you can see the internal grid structure that provides the 3D object its strength. I even took this piece and ran over it with a car, it still looks the same. :)\nOnce you have all your 3D printed parts, its time to clean them up. I used a chisel and pliers to remove all the support structure, and then sanded every surface with 100,200, and 400, grit sand paper. It is important that these parts have a smooth surface as they will be rubbing against each other.\nNext, you want to insert your motor into the square cavity (you can see this clearly above). Make sure the shaft lines up with the hollowed out circular hole. the tab of the motor should also fit in the tiny square hole perpendicular to the shaft. Once the motor is in place, use hotglue to secure to the 3D printed structure.\nAfter the glue is dry, take the matching auger and slide it into the container. there is a D shaped mounting bracket at the end of the auger shaft which matches that of the motor, use super glue to attach the two for a strong fit.\nOnce the product is complete, mint and sugar will fill the large and small containers respectively. The rotating auger/Archimedes screw will transport the material to the T-shaped pipe, where they both fall down the same shaft into the glass.\nUsing a screw to dose materials allows us to be very accurate (to the gram in my experiments). With this accuracy, we can make the perfect drink!", "step_imgs": ["https://cdn.instructables.com/FGN/HSOK/JTT5RJLY/FGNHSOKJTT5RJLY.LARGE.jpg", "https://cdn.instructables.com/F65/5T2D/JTYN695H/F655T2DJTYN695H.LARGE.jpg", "https://cdn.instructables.com/FV2/OJUE/JTYN63YM/FV2OJUEJTYN63YM.LARGE.jpg", "https://cdn.instructables.com/FHS/1L5Y/JTT5RJDG/FHS1L5YJTT5RJDG.LARGE.jpg", "https://cdn.instructables.com/FUM/FMT3/JTT5RJ7H/FUMFMT3JTT5RJ7H.LARGE.jpg", "https://cdn.instructables.com/FDI/PYDD/JTT5RJ8V/FDIPYDDJTT5RJ8V.LARGE.jpg", "https://cdn.instructables.com/F7R/40DO/JTT5RJHP/F7R40DOJTT5RJHP.LARGE.jpg", "https://cdn.instructables.com/FY8/2WDA/JTT5S4RR/FY82WDAJTT5S4RR.LARGE.jpg", "https://cdn.instructables.com/FD5/KK5G/JTYN88RS/FD5KK5GJTYN88RS.LARGE.jpg", "https://cdn.instructables.com/FSL/PINA/JTT5RJ8H/FSLPINAJTT5RJ8H.LARGE.jpg", "https://cdn.instructables.com/FCG/GMU2/JTYN64X5/FCGGMU2JTYN64X5.LARGE.jpg", "https://cdn.instructables.com/F12/R5BR/JTYN64N8/F12R5BRJTYN64N8.LARGE.jpg", "https://cdn.instructables.com/F3H/KY1L/JTYN64AW/F3HKY1LJTYN64AW.LARGE.jpg", "https://cdn.instructables.com/F4N/3YL1/JTYN68VF/F4N3YL1JTYN68VF.LARGE.jpg"], "step_title": "Step 4: Construct the Mint & Sugar Dispensers"}, {"step": 5, "steps_text": "As you can see in the 3D model above, this is the sliding mechanism used to transport the glass between stations (Liquid Fill, Lime Fill, Sugar/Mint Fill, & Linear Actuator Muddle Station)\nParts Needed:\n15x15mm Square Chrome Pipe\n12mm Diameter Chrome Pipe\n9g Continuous Servo Motor\n70mmx100mmx18mm Dark Wood\nCut the Pipes:\nYou will need to make adjustments to the side of the Pipe Stock. Below you can find the dimensions and quantity required for each part.\n430mmx12mm Diameter Chrome Pipe (2x)\n100x15x15mm Square Chrome Pipe (2x)\n70x100x18mm Stained Wooden Block (1x)\nAdjusting the wooden block:\nAs shown in the interactive 3D model, underneath you will need to house the 9g servo motor. Using a chisel remove 12(d)x34(w)x40(l) of material. I also found that using a 30-35mm circular drill bit was a fast and easy method to remove the majority of material.\nOnce the square is removed, using hot-glue, mount the 9g servo motor underneath. The orientation isn't important, but i found it is better to have the side with the cable on it closer to the wall so it doesn't get stuck.\nNext, using the mounting brackets that come with the servo, attach them to a circular (20mm Diameter) disk (Laser cut DXF Files). This will be the wheel that provides traction to move the slider.\nOnce the servo is mounted, Hot glue the wooden block to the two square chrome pipes. Attach the pipes on the two longer sides of the block. Once attached, the entire piece should make a 100x100mm square.\nNext slide the two longer 12mm round chrome pipes though the 15x15mm square pipes.\nThe Slider Is now complete, and can be mounted in a future step!", "step_imgs": ["https://cdn.instructables.com/FA4/8H1Q/JTYN898W/FA48H1QJTYN898W.LARGE.jpg", "https://cdn.instructables.com/FY9/VM8K/JTYN6976/FY9VM8KJTYN6976.LARGE.jpg", "https://cdn.instructables.com/FW7/U9Q2/JTYN698B/FW7U9Q2JTYN698B.LARGE.jpg"], "step_title": "Step 5: Slider Module (Moves the Glass)"}, {"step": 6, "steps_text": "Common thermal management solutions used in electronics applications address cooling objects with heat exchangers and fluid flow. The heat exchanger is typically either the electronic package itself or an extruded or stamped heat sink attached to the package. Air is the most common fluid used in thermal solutions, either with natural convection or propelled by a fan. In most of these solutions the temperature of the object being cooled remains above the ambient temperature. Peltier modules are electronic devices designed for cooling objects to below the ambient temperature or maintaining objects at a specific temperature by controlled heating or cooling. Selecting or specifying a Peltier module is not difficult but a basic understanding of module characteristics can be helpful to ensure the process flows smoothly.\nPeltier Module Basics\nPeltier modules contain two external ceramic plates separated by semiconductor pellets. One of the plates absorbs heat (becomes cooler) and the other plate dissipates heat (becomes hotter) when a current is passed through the semiconductor pellets. More details regarding the construction and operation of Peltier modules can be found in this technical paper.\nThe following constraints should be understood when selecting or specifying a Peltier module:\nHeat transfer through the module\nTemperature difference across the module\nTemperature of hot side of the module\nSurface area of module\nRequired operating current\nRequired driving voltage\nHeat Transfer Through Peltier Modules\nThe amount of heat to be transferred through a Peltier module from the cold side to the hot side is denoted Q and is specified in Watts. This parameter may be the heat generated by an object to be cooled or it may be the heat conducted to the ambient environment from the object being cooled. It should be understood that Peltier modules do not possess the ability to absorb thermal energy. Peltier modules only transfer thermal energy and the energy being transferred will need to be dissipated on the hot side of the module.\nTemperature Difference Across Peltier Modules\nThe temperature difference specified in a Peltier module datasheet (\u0394T) is measured on the outside surfaces of the two ceramic plates of the module. Care must be taken to understand if there is any temperature difference between the Peltier module plates and the external system temperatures of interest. The following diagram indicates five potentially different temperature regions of a Peltier module system.\nTemperature of the Hot Side of Peltier Modules\nThe characteristics of Peltier modules also change with operating temperature. Some vendors, such as CUI, provide specification data for more than one operating temperature. Specification data will probably not be available for the specific operating temperatures of the application and thus the closest available data should be used.\nSurface Area of Peltier Modules\nThe surface area of Peltier modules is typically specified based upon either the area of the object to be cooled or the area available for heat dissipation. An area mismatch between the area available and the area of the Peltier module can be compensated for by the use of a low thermal impedance heat spreader. A simple heat spreader can be manufactured from aluminum or copper.\nRequired Operating Current\nPeltier modules are current-driven devices similar to LEDs. The desired operating parameters are most conveniently achieved by driving the module with a controlled current source and allowing the current source to provide the required load voltage (the voltage compliance of the current source). This is analogous to providing a specific voltage to a voltage driven device and then letting the voltage source provide the required current (i.e. providing a voltage to a microprocessor and ensuring the voltage source can provide the required load current). Peltier modules can be driven with voltage sources but doing so will make it more difficult to accurately control the heat flow and temperature difference across the module.\nRequired Operating Voltage\nThe required voltage compliance of the current source will be determined from the Peltier module datasheet and operating constraints.\nThe Peltier Module I Chose:\nI Chose a 40mmx40mm Standard 60w Peltier Module. The Module Peaks at 12v, however i found that it seems to work better at around 8, where 12 just makes both sides hot.", "step_imgs": ["https://cdn.instructables.com/FLN/3CYQ/JTWRXXDV/FLN3CYQJTWRXXDV.LARGE.jpg"], "step_title": "Step 6: How to Select a Peltier Module"}, {"step": 7, "steps_text": "For many drink additives (Juices & Tonic Water), it is imperative that they are kept cool. In order to achieve this, an insulated temperature controlled chamber was designed using peltier technology and temperature sensors.\nAt a local hardware store i was able to purchase a large sheet of 60mm thick insulation foam. so far this has done a great job keeping the insides of the container cool.\nUsing a handsaw saw, cut the sheet to the dimensions listed below:\n426mmx226mm (1x) (base)\n470mmx426mm (2x) (side wall)\n470mmx226mm (2x) (side wall)\nUsing hotglue or super glue, construct the 5 sided container. I recommend building it vertically ontop of the base. Sometimes hotglue guns can melt the stryrofoam, but if you hold the glue about 30cm away from the surface you are applying it too, it has enough time to cool down to the point where it does melt. I found that this worked best, even better than superglue.\nOnce the foam frame is constructed, Gather the acrylic parts cut on the laser cutter. In case you don't have access to a laser cutter, they have also been designed to be able to be cut on a table saw or with a circular saw. Remember, these parts are not required, but they do make the product feel complete.\n306mmx106mm (1x) (Cooler Bottom)\n300mmx467mm (2x) (Cooler Sides)\n106mmx467mm (2x) (Cooler Sides)\nIn this case, the smaller walls sandwich the larger ones, with all the walls ontop of the bottom place.\nOnce the cooler's structure is complete, You will need 3 peltier modules and 3 heat sinks. I was able to find extra heatsinks at an electronics recycling bin. It is important to note that your heat sinks should be able to disperse the energy transferred from the peltier modules. (In my case, the larger one is rated to handle 250w, and the smaller ones 100w. More than enough for the 60w peltier modules)\nUsing a steaknife, cuttout the foot print of your coolers on one of the larger foam sides. Then using a drill and 40-50mm diameter bit, cut three holes in the acrylic sheet where the heatsinks will go.\nOn the inside of the cooler, glue a sheet of copper to the wall with the holes in it. I used super glue, but make sure to only glue along the outer edge and away from the holes.\nNext, Using thermal paste (Common at any computer store like fryes or radioshack), stick the peltier modules too the copper from the outside. I tend to use an X shape when applying thermal paste, and then let the force of application spread the rest. This seemed to work well.\nOn the other side of the peltier module, apply more thermal paste, and mount the heat sink to it. If necessary, you may have to drill through the wall and mount the heatsink with nuts and bolts if it is too heavy. Make sure to then attach a fan to the heat sink if it doesn't already have one.\nIn order to accurately control the temperature of the cooled container, I used a Bluetooth-Temperature Module. The temperature of the container can also be viewed via an app on you android or IOS device. Remotely, you can review the temperature and humidity levels as well as set the desired temp.", "step_imgs": ["https://cdn.instructables.com/FQE/HUMU/JTYN88YD/FQEHUMUJTYN88YD.LARGE.jpg", "https://cdn.instructables.com/FVG/4H1A/JTT5RJQK/FVG4H1AJTT5RJQK.LARGE.jpg", "https://cdn.instructables.com/FYN/HOTE/JTYN68DX/FYNHOTEJTYN68DX.LARGE.jpg", "https://cdn.instructables.com/FMV/E3LR/JTYN68GB/FMVE3LRJTYN68GB.LARGE.jpg", "https://cdn.instructables.com/FXA/A6SV/JTT5RJV5/FXAA6SVJTT5RJV5.LARGE.jpg", "https://cdn.instructables.com/FFG/BYEM/JTT5RJZQ/FFGBYEMJTT5RJZQ.LARGE.jpg", "https://cdn.instructables.com/FIQ/13DF/JTT5RKI9/FIQ13DFJTT5RKI9.LARGE.jpg", "https://cdn.instructables.com/FNL/2LIS/JTT5RK91/FNL2LISJTT5RK91.LARGE.jpg", "https://cdn.instructables.com/FKB/HRA4/JTT5RK4D/FKBHRA4JTT5RK4D.LARGE.jpg", "https://cdn.instructables.com/FXS/ECA7/JTT5RKMX/FXSECA7JTT5RKMX.LARGE.jpg", "https://cdn.instructables.com/F1G/FQ1A/JTT5RKRI/F1GFQ1AJTT5RKRI.LARGE.jpg", "https://cdn.instructables.com/FNJ/8DZQ/JTT5RKW4/FNJ8DZQJTT5RKW4.LARGE.jpg", "https://cdn.instructables.com/FL3/V9AP/JTT5RKDO/FL3V9APJTT5RKDO.LARGE.jpg", "https://cdn.instructables.com/FH6/OECJ/JTYN68C7/FH6OECJJTYN68C7.LARGE.jpg", "https://cdn.instructables.com/FQO/14KW/JTYN688Q/FQO14KWJTYN688Q.LARGE.jpg", "https://cdn.instructables.com/FKJ/FPQG/JTYN68AG/FKJFPQGJTYN68AG.LARGE.jpg", "https://cdn.instructables.com/FR6/D208/JTYNDOSG/FR6D208JTYNDOSG.LARGE.jpg", "https://cdn.instructables.com/FPR/U1QH/JTYNDP00/FPRU1QHJTYNDP00.LARGE.jpg", "https://cdn.instructables.com/F2G/JMOU/JTYNDP4A/F2GJMOUJTYNDP4A.LARGE.jpg"], "step_title": "Step 7: Temperature Controlled Chamber"}, {"step": 8, "steps_text": "One of the stations on the automated drink maker is an automated Lime dispenser and slicer. A lime drops down a Y-shaped pipe, where it is then forced against a sharp metal grid by a 500N 12v Linear actuator. The grid slices the lime into 4 equal parts, and then drops into the glass. This step is followed by others such muddling and filling the glass with liquid.\nIn order to mount the linear actuator to the frame and keep all the moving parts stable, I used 32-34mm Pipe claims with Bolt holes on either side. These provided a simple way to mount the actuators and pipes in the upper compartment while keeping everything sturdy. (This actuator provides 500N of force - that\"s a lot!)", "step_imgs": [], "step_title": "Step 8: Lime Slicer"}, {"step": 9, "steps_text": "In order to create a slick user interface to accompany the final product, i decided to use a an android tablet. The tablet has a screen side of 10.1\" which makes it perfect for viewing and easily selecting the desired drink. The app's main purpose is to send commands to the arduino over a USB serial connection.\nIn order to do this, drinks have been put into scrollable horizontal carousels based on their type (Rum, Whisky, Gin.. etc). Each item has an image and name associated with it to make the drink easily identifiable. Once the user clicks on the desired drink, we will make a popup where the user can then change the size (the amount of liquid) they want in addition to inputting personal tweaks (e.g. more ice, more alcohol, more sugar, etc..). Once the drink's characteristics are chosen, the drink can be ordered. A long chain of numbers, each representing a different variable (e.g. quantity of ice), is then generated and sent to the arduino. The arduino interprets this unique drink ID and makes the desired drink as requested.\nThe Code:\nThe app consists of three main sections:\nMainActivity.java (this is where all the java and code will go to provide functionality to the app)\nactivity_main.xml (This is where the list of drinks are located)\ncustompopup.xml (This is the layout page for the custom ordering popup)\nCreating the template:\nOpen up android studio or your IDE of choice and create a new blank app template. This process should automatically create MainActivity.java and activity_main.xml for you. I Also chose to develop my app on android 4.4 (Kit Kat) as this supports almost 90% of devices. Once this is done, we can move on to designing our first page.\nActivity_Main.xml:\nActivity_main.xml is the primary android layout. For us it will house our list of drinks, an order button, and a custom edit-text forum to insert your own drinkIDs and testing the serial connection.\nStart off by creating a linear layout. This will allow us to stack our elements on top of each other for a nice and tidy look.\n<linearlayout xmlns:android=\"http://schemas.android.com/apk/res/android\" <br=\"\"><p><LinearLayout</p><p><linearlayout <br=\"\">xmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nxmlns:tools=\"http://schemas.android.com/tools\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:background=\"@color/colorPrimaryDark\"\nandroid:gravity=\"center|top\"\nandroid:orientation=\"vertical\"\ntools:context=\"MainActivity\"></linearlayout></p><p><linearlayout <br=\"\"><br></linearlayout></p><p><linearlayout <br=\"\"><br></linearlayout></p></LinearLayout></linearlayout>\nTake a look at the steps below and the code that follows for each step.\nNext, we want to add specific elements inside this linear layout. For the custom edit-text bar and controls for the serial connection, create a relative layout and put it inside of the linear layout.\nNow we want to create a carousel for each drink type (Gin, Rum, etc..). This consists of a Text box labeling it, and the carousel itself. I will have three drink types.\nThis is what your file should look like", "step_imgs": ["https://cdn.instructables.com/F9N/VSUC/JTWRXXEU/F9NVSUCJTWRXXEU.LARGE.jpg"], "step_title": "Step 9: Programming the User Interface (Android Studio)"}, {"step": 10, "steps_text": "This one is a little more complicated. Here we will have to make all the functions,classes, and variables that allow the app to run. We will also need to include a method to make a serial connection with the arduino. Yikes!\nPlease Look at this Gist file for what the entire file should look like or the GitHub Repository for all the files(sorry instructables wouldn't let me embed it.. too big i guess.) I also included all the files in addition to the apk at the end of this step so you can easily install the application on your android deice.", "step_imgs": [], "step_title": "Step 10: Editing MainActivy.java"}, {"step": 11, "steps_text": "For the majority of drink icons and the images used throughout the android application, the came from depositphotos.\nThe specific icon set i used can be found here: Drink Images For purchase, however i have also included the free versions below (with water marks) if you would like to use those instead. In the files i have included, the images has already been split up into a 3x3 grid to isolate each icon and renamed to make coding easier.", "step_imgs": ["https://cdn.instructables.com/F1U/YJ3C/JTWRY0PE/F1UYJ3CJTWRY0PE.LARGE.jpg"], "step_title": "Step 11: Drink Images"}, {"step": 12, "steps_text": "As mentioned above, the arduino interprets the chain of numbers and assigns a variable to each digit. Based on these variables, the drink machine then constructs your drink through a series of steps as shown below.\nThe arduino file can be downloaded below:", "step_imgs": [], "step_title": "Step 12: Programming the Machine (Arduino)"}, {"step": 13, "steps_text": "Here are all the files in one place, for easy access so you don't have to scroll through the instructables:", "step_imgs": [], "step_title": "Step 13: All the Files"}], "channel": ""}, {"category": "", "description": "In this instructable, I will show you how to repair planetary gear of Li-ion screwdriver model IXO manufactured by Bosch. My search at WWW found only repair instructions on how to change the battery. This was not my case.\nThe problem of my screwdriver was lack of exit force. The motor was audible, but there is no chuck rotation. After an easy disassembly procedure, I found that second planetary gear tooths are destroyed.\nI will describe step by step the process as tightly as possible with lots of pictures.", "title": "How to Repair/resurrect Li-ion Screwdriver IXO Bosch Planetary Gear", "url": "https://www.instructables.com/id/How-to-Repairresurrect-Li-ion-Screwdriver-IXO-Bosc/", "section": "technology", "steps": [{"step": 1, "steps_text": "1. 1-hour free time :)\n2. Appropriate screwdriver, only size matters.\n3. Sandpaper (hard P80 and soft P800).\n4. Acrylic/Plexiglass 4 mm thickness (PMMA)\n5. Access to a laser cutter or local dealer of this kind of service (I used service).\n6. Tweezers with the appropriate size for small details.\n7. Pliers small ones.\n8. Glue (a few drops of fast drying glue).\n9. High-speed grease. Gears should be well lubricated.", "step_imgs": ["https://cdn.instructables.com/F8W/MGPM/JTWT5QC4/F8WMGPMJTWT5QC4.LARGE.jpg", "https://cdn.instructables.com/FJ6/9395/JTWT5SM4/FJ69395JTWT5SM4.LARGE.jpg", "https://cdn.instructables.com/F8T/VQGM/JTWT5TTE/F8TVQGMJTWT5TTE.LARGE.jpg"], "step_title": "Step 1: Step 1: Tools and Fabrication Techniques"}, {"step": 2, "steps_text": "I will spare you unsuccessful experiments to build the gear by handy 3D Pen or moulding clay. :)\nLaser cutting machines are very precise as I learned trying to make gear as thin as possible, so it can fit in the chuck. Measurements are visible in the first picture. The main problem was to make a gear that has the exact number of teeth and a very thin wall to hold them. The PLT file format is usable on many laser cutting software directly. The SVG file format is the original source and commonly editable.\nThere is a square figure in both files with exact dimensions - 10 x 10 millimetres. It is used for a calibration checkup. The first cut should be the square. If it is not exactly 10 x 10 millimetres then a change in a global parameter for cutting software or loaded file is needed.\nCut few gears, they are fragile and could be broken at the fitting process.", "step_imgs": ["https://cdn.instructables.com/FZW/VA4J/JTWT65H4/FZWVA4JJTWT65H4.LARGE.jpg", "https://cdn.instructables.com/FB0/4CM1/JTWT5ZT5/FB04CM1JTWT5ZT5.LARGE.jpg", "https://cdn.instructables.com/F6I/8OTT/JTWT60SY/F6I8OTTJTWT60SY.LARGE.jpg"], "step_title": "Step 2: Step 2: Laser Cut Part Files"}, {"step": 3, "steps_text": "The disassembly process is very easy just follow the step by step pictures.\n1. Unscrew.\n2. Open the plastic cover.\n3. Remove the chuck.\n4. Open the chuck. Be very careful there are small parts.", "step_imgs": ["https://cdn.instructables.com/FZR/TETE/JTYN6MT0/FZRTETEJTYN6MT0.LARGE.jpg", "https://cdn.instructables.com/F0B/9TCH/JTYN6MWG/F0B9TCHJTYN6MWG.LARGE.jpg", "https://cdn.instructables.com/FCJ/DTZ8/JTYN6N0V/FCJDTZ8JTYN6N0V.LARGE.jpg", "https://cdn.instructables.com/FX3/63KV/JTYN6N92/FX363KVJTYN6N92.LARGE.jpg", "https://cdn.instructables.com/FUO/HTQG/JTYN6NCP/FUOHTQGJTYN6NCP.LARGE.jpg", "https://cdn.instructables.com/F75/9RSK/JTYN6NG9/F759RSKJTYN6NG9.LARGE.jpg", "https://cdn.instructables.com/FZB/CBPJ/JTYN6NJ4/FZBCBPJJTYN6NJ4.LARGE.jpg", "https://cdn.instructables.com/FPV/7JAD/JTYN6NN2/FPV7JADJTYN6NN2.LARGE.jpg", "https://cdn.instructables.com/FYD/C5IL/JTYN6NUZ/FYDC5ILJTYN6NUZ.LARGE.jpg", "https://cdn.instructables.com/FHT/C2NX/JTYN6NW4/FHTC2NXJTYN6NW4.LARGE.jpg", "https://cdn.instructables.com/FTR/GPQB/JTYN6NX9/FTRGPQBJTYN6NX9.LARGE.jpg", "https://cdn.instructables.com/FSB/ZQE9/JTYN6O3X/FSBZQE9JTYN6O3X.LARGE.jpg", "https://cdn.instructables.com/FTK/B7Y2/JTYN6O78/FTKB7Y2JTYN6O78.LARGE.jpg", "https://cdn.instructables.com/FLW/HDQK/JTYN6OD2/FLWHDQKJTYN6OD2.LARGE.jpg", "https://cdn.instructables.com/FWF/PBIX/JTYN6OJE/FWFPBIXJTYN6OJE.LARGE.jpg", "https://cdn.instructables.com/F5N/MIOQ/JTYN6OLV/F5NMIOQJTYN6OLV.LARGE.jpg", "https://cdn.instructables.com/F72/HEV3/JTYN6OR6/F72HEV3JTYN6OR6.LARGE.jpg", "https://cdn.instructables.com/F9R/HB84/JTYN6PVC/F9RHB84JTYN6PVC.LARGE.jpg"], "step_title": "Step 3: Step 3: Dissasembly"}, {"step": 4, "steps_text": "1. Remove the grease and clean chuck inside.\n2. Sand the damaged teeth with sandpaper by hand.\n3. Sand gently by hand the bed for new gear ring. For referral border, I assumed the line marked with red colour.\n4. Regularly check if sanding is enough and gear ring fits tight.\n5. Position the new gear ring aligned in line with remaining undamaged old teeth\n6. Use a few drops of glue to fasten the gear ring. Wait appropriate time.", "step_imgs": ["https://cdn.instructables.com/FSK/3TMJ/JTYN73FT/FSK3TMJJTYN73FT.LARGE.jpg", "https://cdn.instructables.com/FNB/UAY9/JTYN6VQF/FNBUAY9JTYN6VQF.LARGE.jpg", "https://cdn.instructables.com/FL9/BKCD/JTYN6VZX/FL9BKCDJTYN6VZX.LARGE.jpg", "https://cdn.instructables.com/FLR/RWAX/JTYN6W7C/FLRRWAXJTYN6W7C.LARGE.jpg", "https://cdn.instructables.com/FHR/8NGC/JTYN6WC4/FHR8NGCJTYN6WC4.LARGE.jpg", "https://cdn.instructables.com/FO0/HD9V/JTYN6WGV/FO0HD9VJTYN6WGV.LARGE.jpg", "https://cdn.instructables.com/FNC/FGGG/JTYN6WML/FNCFGGGJTYN6WML.LARGE.jpg", "https://cdn.instructables.com/FO9/WZFC/JTYN7DJP/FO9WZFCJTYN7DJP.LARGE.jpg"], "step_title": "Step 4: Step 4: Fitting the Planetary Gear Ring"}, {"step": 5, "steps_text": "The assembly process is very easy just follow the step by step pictures.\n\n1. Put enough grease at every moving or stationary chuck parts.\n2. After closing the chuck remove any overflow grease.\nRemember grease reduces friction.\nCongratulations a screwdriver is alive. ;)", "step_imgs": ["https://cdn.instructables.com/FHN/N1D9/JTYN7A3B/FHNN1D9JTYN7A3B.LARGE.jpg", "https://cdn.instructables.com/F7F/C20N/JTYN7A62/F7FC20NJTYN7A62.LARGE.jpg", "https://cdn.instructables.com/FOY/WT9J/JTYN7A8T/FOYWT9JJTYN7A8T.LARGE.jpg", "https://cdn.instructables.com/FGN/N5PQ/JTYN7AFE/FGNN5PQJTYN7AFE.LARGE.jpg", "https://cdn.instructables.com/FGA/SFHD/JTYN7AI5/FGASFHDJTYN7AI5.LARGE.jpg", "https://cdn.instructables.com/F36/3ABC/JTYN7AKW/F363ABCJTYN7AKW.LARGE.jpg", "https://cdn.instructables.com/F34/SG7D/JTYN7ANN/F34SG7DJTYN7ANN.LARGE.jpg", "https://cdn.instructables.com/F94/02M6/JTYN7AVM/F9402M6JTYN7AVM.LARGE.jpg", "https://cdn.instructables.com/FXT/7W2H/JTYN7B3L/FXT7W2HJTYN7B3L.LARGE.jpg", "https://cdn.instructables.com/FUT/U3AH/JTYN7B6C/FUTU3AHJTYN7B6C.LARGE.jpg", "https://cdn.instructables.com/FDA/WHQZ/JTYN7B93/FDAWHQZJTYN7B93.LARGE.jpg", "https://cdn.instructables.com/FMV/NMJA/JTYN7BBU/FMVNMJAJTYN7BBU.LARGE.jpg", "https://cdn.instructables.com/F2Y/O4S8/JTYN7BEL/F2YO4S8JTYN7BEL.LARGE.jpg", "https://cdn.instructables.com/FY2/JY7C/JTYN7BFO/FY2JY7CJTYN7BFO.LARGE.jpg", "https://cdn.instructables.com/FKU/91LA/JTYN7BGR/FKU91LAJTYN7BGR.LARGE.jpg", "https://cdn.instructables.com/FXO/795E/JTYN7BN2/FXO795EJTYN7BN2.LARGE.jpg", "https://cdn.instructables.com/F29/GTUB/JTYN7BV1/F29GTUBJTYN7BV1.LARGE.jpg", "https://cdn.instructables.com/FH5/3I3D/JTYN7C30/FH53I3DJTYN7C30.LARGE.jpg", "https://cdn.instructables.com/F20/TH3K/JTYN7CB0/F20TH3KJTYN7CB0.LARGE.jpg"], "step_title": "Step 5: Step 5: Assembly"}], "channel": ""}, {"category": "", "description": "I have been using a bigger version of this voltmeter for quite some time and it was always very helpful\nso when I saw Pocket Sized Contest I said to my self why didn't use this opportunity and share this with you\nI made a few design improvements during this process so I am very happy with results", "title": "Pocket Volt Meter", "url": "https://www.instructables.com/id/Pocket-Volt-Meter/", "section": "technology", "steps": [{"step": 1, "steps_text": "parts:\nsmall voltmeter eBay link I recommend 0.36\" version\nsmall switch eBay link\nprobes alligator clips or hook probes\n9V battery\nholder for 9V battery eBay link (i recommend plastic one as on my picture)\nheat shrink foil 50mm \u00f835mm eBay link\ntools:\nsoldering iron\nhot glue gun\nhot air gun or flame from hob (if you using heat shrink foil)", "step_imgs": ["https://cdn.instructables.com/FDH/IIJ1/JTT5NK6Z/FDHIIJ1JTT5NK6Z.LARGE.jpg", "https://cdn.instructables.com/F3H/0CM6/JTWSHB2D/F3H0CM6JTWSHB2D.LARGE.jpg", "https://cdn.instructables.com/FMB/DKI0/JTT5NK7A/FMBDKI0JTT5NK7A.LARGE.jpg", "https://cdn.instructables.com/FRW/U4E3/JTT5NK74/FRWU4E3JTT5NK74.LARGE.jpg"], "step_title": "Step 1: Materials and Tools"}, {"step": 2, "steps_text": "disconnect all wires and find the best position for the switch\nif you have a good position you can glue switch on the place\nthen connect (+) power to middle pin on the switch", "step_imgs": ["https://cdn.instructables.com/F2L/LKI4/JTYN3DCJ/F2LLKI4JTYN3DCJ.LARGE.jpg", "https://cdn.instructables.com/FZB/KVPW/JTYN3D6D/FZBKVPWJTYN3D6D.LARGE.jpg", "https://cdn.instructables.com/FTP/C7IG/JTYN3CX6/FTPC7IGJTYN3CX6.LARGE.jpg", "https://cdn.instructables.com/FKI/WU3Z/JTYN3D08/FKIWU3ZJTYN3D08.LARGE.jpg", "https://cdn.instructables.com/F7T/N24J/JTYN3DFM/F7TN24JJTYN3DFM.LARGE.jpg", "https://cdn.instructables.com/FG0/RBFH/JTYN3DHL/FG0RBFHJTYN3DHL.LARGE.jpg"], "step_title": "Step 2: Switch"}, {"step": 3, "steps_text": "connect a wire to crocodile clips and secure it with hot glue\nthen connect black (-) probe to common ground and red (+) probe to pin where was orriginaly yellow or white wire", "step_imgs": ["https://cdn.instructables.com/F7Z/PUGQ/JTYN3E6C/F7ZPUGQJTYN3E6C.LARGE.jpg", "https://cdn.instructables.com/FC7/QG2A/JTYN3DHN/FC7QG2AJTYN3DHN.LARGE.jpg", "https://cdn.instructables.com/FI1/C6M3/JTYN3DNU/FI1C6M3JTYN3DNU.LARGE.jpg", "https://cdn.instructables.com/FVT/SOHT/JTYN3DRA/FVTSOHTJTYN3DRA.LARGE.jpg", "https://cdn.instructables.com/FJ0/GZF8/JTYN3DUD/FJ0GZF8JTYN3DUD.LARGE.jpg", "https://cdn.instructables.com/F0A/RROH/JTYN3DX4/F0ARROHJTYN3DX4.LARGE.jpg", "https://cdn.instructables.com/FGG/FLZY/JTYN3E1O/FGGFLZYJTYN3E1O.LARGE.jpg", "https://cdn.instructables.com/F1U/R2RR/JTYN3E40/F1UR2RRJTYN3E40.LARGE.jpg", "https://cdn.instructables.com/F8Y/5VAG/JTYN3E8Z/F8Y5VAGJTYN3E8Z.LARGE.jpg"], "step_title": "Step 3: Probes"}, {"step": 4, "steps_text": "pick a place where you want your voltmeter and cut them to the needed length\n(I made this second to sit on the connector so they were werry short)\nconnect the red wire to switch pin and black to common ground", "step_imgs": ["https://cdn.instructables.com/F3Q/Q8EW/JTYN3EBB/F3QQ8EWJTYN3EBB.LARGE.jpg", "https://cdn.instructables.com/FU3/9XO3/JTYN3EES/FU39XO3JTYN3EES.LARGE.jpg", "https://cdn.instructables.com/FU6/6JG0/JTYN3EH5/FU66JG0JTYN3EH5.LARGE.jpg"], "step_title": "Step 4: Battery Connector"}, {"step": 5, "steps_text": "test it and if everything works you can adjust accuracy if needed with little potentiometer (not every voltmeter have this option)\nif you are done glue every wire to secure long life and glue the whole potentiometer on its place\nyou can wrap finished voltmeter in heat-shrink foil if you want for better-looking finish", "step_imgs": ["https://cdn.instructables.com/F32/IO1G/JTYN3EN6/F32IO1GJTYN3EN6.LARGE.jpg", "https://cdn.instructables.com/F39/PDAA/JTYN3EPV/F39PDAAJTYN3EPV.LARGE.jpg", "https://cdn.instructables.com/FQX/QITM/JTYN3ESX/FQXQITMJTYN3ESX.LARGE.jpg", "https://cdn.instructables.com/F5J/GFOO/JTYN3EY8/F5JGFOOJTYN3EY8.LARGE.jpg", "https://cdn.instructables.com/FKR/FNY0/JTYN3F3Z/FKRFNY0JTYN3F3Z.LARGE.jpg", "https://cdn.instructables.com/FDL/YS9G/JTYN3F8M/FDLYS9GJTYN3F8M.LARGE.jpg", "https://cdn.instructables.com/FOT/U2XQ/JTYN44GB/FOTU2XQJTYN44GB.LARGE.jpg"], "step_title": "Step 5: Test"}, {"step": 6, "steps_text": "and you are done you can now put your mini voltmeter into your pocket and have it wherever you go ready to use\nenjoy :)", "step_imgs": ["https://cdn.instructables.com/F8V/4QJ1/JTYN44EC/F8V4QJ1JTYN44EC.LARGE.jpg", "https://cdn.instructables.com/FZD/SVZ0/JTYN48I6/FZDSVZ0JTYN48I6.LARGE.jpg"], "step_title": "Step 6:"}], "channel": ""}, {"category": "", "description": "CREATOR(S): Anya Timchenko, Diane Brancazio\nBalloon Cars Grades K-8, Engineering, Science\nLesson Overview\nIn this activity, students design and build a balloon-powered car for play or to compete in a performance challenge. The car design includes a custom 3D printed base, inexpensive toy wheels, and common hardware. Our Balloon Car challenge is an engaging way to practice the Engineering Design Process while learning 3D modeling on Tinkercad. The challenge can also be structured for learning physics principles such as velocity, acceleration, and traction.\nThis project is structured to follow the Engineering Design Process (EDP), a process that helps designers in any discipline create solutions to problems. While there are many ways that people solve problems, designers often use the EDP because it offers a clear roadmap for them to follow as they work towards a solution.\nFirst, designers Define the challenge they are facing, then Learn more about the problem and Explore existing solutions. It\u2019s tempting to skip these first few steps and head straight into brainstorming, but don\u2019t! When designers take the time to understand the problem clearly, they come up with much better solutions.\nThe Design phase is where brainstorming happens. Designers brainstorm multiple possible solutions, then develop a few of them into more detailed plans. Encourage your students to plan at least 3 of their potential ideas before choosing a design direction and starting to Create a product based on their design. If they hit any roadblocks trying to create their first design choice, they\u2019ll be able to revisit their alternate design plans and choose a new direction - without starting from scratch.\nDesigners then take time to Observe their design and see how they can Improve it. We strongly recommend that students have an opportunity for at least 2 Create-Observe-Improve cycles. When students feel they have to \u201cget it right the first time,\u201d they are less willing to take risks and be creative. By repeating the cycle, they have a chance to fix flaws and adopt successful ideas from classmates, and in fact, they\u2019re practicing what professional designers really do.\nA good design cycle builds in time for the designer to Reflect on their product and the process of making it, looking for learning habits and insights that will help in future challenges.\nWhen the work is complete, designers are ready to Share. They bring their work into the real world, by posting, publishing, presenting, or exhibiting - or giving or selling if appropriate! - what they\u2019ve made. For students working through a design process, a real audience helps students connect their learning and work experiences to the world outside the classroom. For Makerspaces and Maker projects, in particular, this is hugely important for building confidence in every student and a sense of community among Makers.\nTo help students work through this process, be sure to build in planned \u201cstops\u201d at each step for students to record their thoughts and progress as they work through product iteration cycles.\nEssential Question(s)\nHow can the Engineering Design Process be used to efficiently and effectively create a vehicle to meet a specified challenge?\nHow can a toy balloon car be used to experimentation and understanding of physical principles?\nSkills Taught:\nEngineering Design Process\nUse of simple hand tools and fasteners\nBasic physics\nBasic Prototyping Skills\nTime Required: 2 - 3 Hours\nMaterials Needed:\nBalloons\nFlexible PVC Tubing, 3/8\u201d Outside diameter, \u00bc\u201d Inside diameter, commonly available at hardware stores\nRubberbands\nPlastic Wheels, ~1.5\u201d diameter, with \u215b\u201d diameter hole for the axle, such as http://kelvin.com/front-wheel-blue-yellow/\nScrews #4 self-tapping screws, pan head, Phillips. 5/8\u201d long\nWashers, #4 flat\nScrewdriver, Phillips\nBalloon inflator\nTinkercad\n3D printer filament\nMisc. Arts+Crafts materials (cardstock, plastic sheets, hot glue, markers, etc.)\nLightweight objects to carry on the car", "title": "Balloon Cars", "url": "https://www.instructables.com/id/Balloon-Cars/", "section": "technology", "steps": [{"step": 1, "steps_text": "Context\nThe Engineering Design Process (EDP) is a respected process for solving engineering and other critical thinking challenges. Students will learn and practice transferable skills involving creativity, communication, collaboration, critical thinking. In this activity, students work individually or in small groups to design and construct a balloon-powered vehicle that meets design criteria designated by the teacher. They use Tinkercad 3D modeling software to create a custom body that includes a base, balloon stem holder, wheel mounts and other optional features for steering, holding items, etc.\nThis lesson gives students an opportunity to learn about common hardware items as well as technical design and construction techniques. This car is designed to use pre-fab wheels, that are inexpensive and readily available from Technical Education supply companies such as Kelvin.com. This feature reduces 3D printer time and gives the designer a real-world product to coordinate their design. The wheels are mounted to the car base with self-tapping screws which are not tightened down completely, creating a gap for the wheel hubs to roll freely. The flexible PVC tubing used as a balloon stem is another real-world product that students can incorporate in their design.\nChallenge\nDesign a balloon-powered car to complete performance challenges.\nStudent teams may consider scoring options and plan a strategy to earn points.\nSample Challenge 1 - Targets\nCreate a target area on the floor either in a linear or bullseye fashion as shown. Cars that reach the outer limits have met the challenge while those that make it to the precise center earn extra recognition. Target features can include point zones or obstacles.\nSample Challenge 2 - Deliver objects\nCars carry and deliver objects such as foam blocks or action figures to a designated target area in a specified amount of time. Cars that carry basic objects have met the challenge while those that carry more complex objects or get there faster earn extra recognition.\nThe Challenges are set up so there is not 1 winner, but levels which students can try to attain, as they might in sports or martial arts. Student designers can create balloon cars that earn points in different ways, features that enhance their performance and repeatability.\nCriteria:\nStudents must build a balloon-powered car that reaches the target (any zone)\nThe car must roll freely, hold a balloon stem securely, and be propelled forward by the deflating balloon\nThe car is assembled correctly using the materials provided/specified by the teacher\nThe car must carry a small item and hold onto it until the car stops (optional, but fun)\nThe car has a logo or text engraved in the bottom (optional, but also fun)\nConstraints:\nThe car footprint is less than 10 square inches\nThe car can be printed on the 3D printer in 30 minutes or less\nNo other power source is used to propel the car during the competitions trials\nPoints:\nIn the example scoring, Solid zone = 10 points, Super Zone = 12 point, Bullseye = 15 points\nStudents may be given several trials to reach the target and accumulate points.\nStudent Product / Learning Goals\nProduct: Students design, build, and test a balloon-powered car.\nGoal: practice an iterative design process to build a vehicle that reliably carries cargo (optional) and reaches the target. Aspects of the car that will need to be designed and redesigned: car body design, wheel assembly, balloon diameter when inflated, angle to the intended path of travel when they first release the car, etc.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research: Play around with balloons. Attach stems made from PVC tubing and figure out the optimal length for a slow steady release of air from the balloon. Attach the balloon to premade cars or other objects and see how well they are propelled and how the balloon behaves during travel. Choose items to carry as cargo.\n2. Collect: Instruct students on how/where to keep notes on their experiments and other things they learned. They may create an \u201cinspiration page\u201d such as a blog, Google Docs, a notebook, poster, etc.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "1. Design:\nStudents work together to brainstorm ideas on how to hold cargo and manage the balloon during travel. The design process is most effective when designers create at least 3 different ideas.\nOption A: draw designs on how the balloon car will look and/or function. Use paper, whiteboard, drawing apps.\nOption B: Build simple models using crafting materials (paper, glue, clay, pipe cleaners, etc.) to show look and/or function\nOption C: Let the students play around in Tinkercad to get familiar with the program and make practice models.\n2. Direction: Help the students choose a design that fills the criteria of the project, as well as the \u201cThing\u201d Checklist (this checklist can be found in the Resource section of the Lesson).", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "Build the Balloon Car base:\nSummary of steps described in the video:\nCreate the Car body using a box sized to: 4\u201d x 2\u201d x \u215b\u201d\nCreate the Wheel Mounts using a Round Roof and size to 0.30\u201d wide \u201c x 0.125 high x 0.30\u201d long\nCopy the wheel mount and align to the 4 corners.\nMake the pilot hole for the screw through the wheel mounts, 0.11\u201d diameter\nCreate the Balloon Stem holder using a cube and a cylinder hole, making sure to measure the tubing to confirm the outside diameter\nAdd a name or decoration on the bottom\nAdd holes or other features to hold the cargo or support the balloon\nBalloon Car Assembly video:\nAssemble the wheels to the base\n3D print the base and collect these materials to assemble: 4 wheels, 4 screws, 8 washers (optional), 3\u201d piece of tubing, rubberband, balloon, screwdriver, balloon inflator, craft materials (optional)\nUse washers on either side of the wheel hub. Tighten the screw so that the wheel rolls freely yet doesn\u2019t wobble.\nConnect the balloon to the stem with a rubber band\nBalloon Car Race:\nExperiment with balloon cars and make your own race!", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "1. Play with balloon cars and have a race! Student teams earn points for reaching zones on the target. Encourage students to help each other solve problems so that all teams make it at least to the outer edge of the target.\n2. It is recommended that students have an opportunity for at least 2 design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\n3. Provide stopping points for the class where students can observe, evaluate, and document their design.\n4. Give students a chance to record their thoughts and progress as they work through product iteration cycles.\n5. Follow instructions in the Create Step as needed for the next iteration.\nDownload pdf with possible prompts for Steps 5 and Step 6:", "step_imgs": [], "step_title": "Step 5: Observe and Test"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.\nDownload pdf with possible prompts for Steps 5 and Step 6:", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "\u201cTHING\u201d Checklist: To ensure you get a quality print, go through the list before tinkering and printing.\nMeets overall size requirements as specified in the course packet.\nHeight, Width, Depth, Weight, Volume as specified in the challenge description.\nEmbossed features stick out no more than 1 mm (.04 in).\nEngraved features go in no more than 2 mm (.08 in).\nUnsupported features (overhangs) are angled up at least 15\u2070 (more is better).\nBridge features have an unsupported span no greater than 12 mm (.5 in).\nWall thicknesses are typically 2 mm (.08 in).\nThin features such as details are no smaller than 1 mm (.08 inch).\nRound holes can be at any angle and are greater than 2 mm (.08 in).", "step_imgs": [], "step_title": "Step 7: Resources"}, {"step": 8, "steps_text": "Possible content explorations\nClass competition - debrief afterward\nIf students have designed according to the specs of \u201ccustomer(s),\u201d have them rate vehicles according to customer request, or match the best vehicle to the best customer\nELA/Social Studies - if students are reading material about racing, or about characters\u2019 or peoples\u2019 transportation needs, have them create an advertisement about the benefits of their balloon vehicle - e.g. get Ralph Mouse to give up his motorcycle for your balloon car\nModifications\nCreate a balloon-powered sand/snow sled or boat\nCouple with kinetic sculpture load that moves as the car\u2019s wheels turn\nWe hope you had fun designing and sharing your Balloon Cars. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in?\nSend us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nLists of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 8: Project Extensions"}], "channel": ""}, {"category": "", "description": "TFT touchscreens are the amazing graphical interface which can be used with microcontrollers such as Atmel, PIC, STM, as it has a wide color range, and good graphical ability and a good mapping of pixels.\nToday, we are going to Interface 2.4 inch TFT LCD Shield with Arduino.\nThis shield is for Arduino UNO, but I'll teach how to use it with Arduino Mega for a very logical reason, the \"Program Memory\".\nBy using this color TFT LCD shield we can show characters, strings, button interfacing, bitmap images, etc on the color TFT LCD.", "title": "Arduino TFT Interfacing Basics", "url": "https://www.instructables.com/id/Arduino-TFT-Interfacing-Basics/", "section": "technology", "steps": [{"step": 1, "steps_text": "To make the shield interface with the Arduino mega, we need the following.\n\nHARDWARE :\n\u2022 Arduino mega\n\u2022 TFT 2.4/2.8/3.2 inch LCD\n\u2022 USB Cable\nSOFTWARE :\n\u2022 Arduino IDE\n\u2022 UTFT Library / spfd5408 Library\nThe Shield is originally made for the Arduino UNO boards, which can be used with Arduino mega.\nThere are two main issues while using it with the Arduino UNO: \"Storage memory\" and pins usage.\nIt is difficult to use the unused pins which are available on UNO, whereas it is better with Arduino MEGA since we have more I/O pins left.\nIn the next step, I'll show how to edit the UTFT library to use the TFT shield", "step_imgs": ["https://cdn.instructables.com/FHW/N1AY/JTYN5K5S/FHWN1AYJTYN5K5S.LARGE.jpg", "https://cdn.instructables.com/FVZ/TTS2/JTYN5K70/FVZTTS2JTYN5K70.LARGE.jpg"], "step_title": "Step 1: Hardware and Software Requirements"}, {"step": 2, "steps_text": "This library is the continuation of my ITDB02_Graph, ITDB02_Graph16 and RGB_GLCD libraries for Arduino and chipKit. As the number of supported display modules and controllers started to increase I felt it was time to make a single, universal library as it will be much easier to maintain in the future.\nArduino MEGA has 256kb of program memory. In addition, there are 54 pins.\nMost of them are free to use, and the analog just 5 are taken from 16.\nThis library supports a number of 8bit,16bit, and serial graphics displays, and will work with both Arduino, chipKit boards and select TI LaunchPads.\nNOTE: Due to the size of the library I do not recommend using it on ATmega328 (Arduino Uno) and ATmega32U4 (Arduino Leonardo) as they only have 32KB of flash memory. It will work, but you will be severely limited in available flash memory for your application.\nSteps:\nDownload the UTFT Library\nUnzip the Library\nOpen UTFT\\hardware\\avr in case of Arduino or depending on the microcontroller used\nOpen HW_AVR_defines using Notepad\nUncomment Line 7 to enable UNO shield for MEGA\nSave the file and Add this Library to Arduino IDE\nNow we are done with this step! In the next step, I'll show to use the library and define the pins for Arduino Mega.", "step_imgs": ["https://cdn.instructables.com/F5L/7VLH/JTYN5KMG/F5L7VLHJTYN5KMG.LARGE.jpg"], "step_title": "Step 2: Tweaking UTFT Lib"}, {"step": 3, "steps_text": "After editing the library, Add it to the Arduino directory.\nNext, I'm gonna show you how to define the right TFT module that you have\nwe should find its module name in the library.\nopen the library file\ngo to the documentation\nYou can see these files in the Documentation\n\u2022 UTFT:\nThis file shows all the functions and commands included in this library.\n\u2022 UTFT_Requirement\nThis file has information about the modules and how it's related to the library, like pins configurations\n\u2022UTFT_Supported_display_modules_&_controller\nThis is our target, this file has the names of the modules and shields that are supported by this library, you can see in it a list of module names and module names for the UTFT which you should use to define your module.\nSteps to Define the TFT:\nOpen UTFT_Supported_display_modules_&_controller file from the library\nOpen UTFT_Supported_display_modules_&_controller file from the library\nFind the Models for UTFT for the Modules (shield) which you have.\nNow to define a UTFT function on the Arduino IDE, we use the command :\nUTFT name(module,Rs,Wr,Cs,Rst);\nOpen UTFT_Requirement file from the library\nFrom the document, we know that the pins are located on the A5, A4, A3, and A2 pins.\nwe use the command:\nUTFT myGLCD(ITDB28,19,18,17,16); # note that pins 19,18,17,16 in the Arduino Mega\nUTFT myGLCD(ITDB28,A5,A4,A3,A2); # note that pins A5,A4,A3,A2 in the Arduino UNO\nAnd done! Now you can use the library examples on the Arduino IDE with the Following changes.", "step_imgs": ["https://cdn.instructables.com/F82/JCPD/JTYN5MTF/F82JCPDJTYN5MTF.LARGE.jpg"], "step_title": "Step 3: Initializing the TFT Shield"}, {"step": 4, "steps_text": "#include <utft.h>// Declare which fonts we will be using\nextern uint8_t BigFont[];\nextern uint8_t SevenSegNumFont[];\n// Remember to change the model parameter to suit your display module!\nUTFT myGLCD(ITDB28, A5, A4, A3, A2);\nvoid setup()\n{\nmyGLCD.InitLCD();\nmyGLCD.clrScr();\nmyGLCD.setFont(BigFont);\n}\nvoid loop()\n{\nmyGLCD.setColor(0, 255, 0); //green\nmyGLCD.print(\"HELLO WORLD\", 45, 100);\nwhile (true) {};\n}", "step_imgs": ["https://cdn.instructables.com/FNA/Y24F/JTYN5NFY/FNAY24FJTYN5NFY.LARGE.jpg"], "step_title": "Step 4: Basic Hello World"}, {"step": 5, "steps_text": "#include <utft.h> // Declare which fonts we will be using\nextern uint8_t SmallFont[];\nextern uint8_t BigFont[];\nextern uint8_t SevenSegNumFont[]; // Set the pins to the correct ones for your development shield\n// ------------------------------------------------------------\n// Arduino Uno / 2009:\n// -------------------\n// Standard Arduino Uno/2009 shield            : <display model=\"\">,A5,A4,A3,A2\n// DisplayModule Arduino Uno TFT shield        : <display model=\"\">,A5,A4,A3,A2\n//\n// Arduino Mega:\n// -------------------\n// Standard Arduino Mega/Due shield            : <display model=\"\">,38,39,40,41\n// CTE TFT LCD/SD Shield for Arduino Mega      : <display model=\"\">,38,39,40,41\n//\n// Remember to change the model parameter to suit your display module!\nUTFT myGLCD(ITDB32S,38,39,40,41);\nvoid setup()\n{\n  myGLCD.InitLCD()\n  myGLCD.clrScr();\n}\nvoid loop()\n{\n  myGLCD.setColor(0, 255, 0);\n  myGLCD.setBackColor(0, 0, 0);\n  myGLCD.setFont(BigFont);\n  myGLCD.print(\" !\\\"#$%&'()*+,-./\", CENTER, 0);\n  myGLCD.print(\"0123456789:;<=>?\", CENTER, 16);\n  myGLCD.print(\"@ABCDEFGHIJKLMNO\", CENTER, 32);\n  myGLCD.print(\"PQRSTUVWXYZ[\\\\]^_\", CENTER, 48);\n  myGLCD.print(\"`abcdefghijklmno\", CENTER, 64);\n  myGLCD.print(\"pqrstuvwxyz{|}~ \", CENTER, 80);\n  myGLCD.setFont(SmallFont);\n  myGLCD.print(\" !\\\"#$%&'()*+,-./0123456789:;<=>?\", CENTER, 120);\n  myGLCD.print(\"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\", CENTER, 132);\n  myGLCD.print(\"`abcdefghijklmnopqrstuvwxyz{|}~ \", CENTER, 144);\n  myGLCD.setFont(SevenSegNumFont);\n  myGLCD.print(\"0123456789\", CENTER, 190);\n  while(1) {};\n}", "step_imgs": ["https://cdn.instructables.com/FUI/7J6V/JTYN5NM4/FUI7J6VJTYN5NM4.LARGE.jpg"], "step_title": "Step 5: UTFT Fonts"}, {"step": 6, "steps_text": "<p>#include \"UTFT.h\"<br>// Declare which fonts we will be using<br>extern uint8_t SmallFont[];// Set the pins to the correct ones for your development shield\n// ------------------------------------------------------------\n// Arduino Uno / 2009:\n// -------------------\n// Standard Arduino Uno/2009 shield            : ,A5,A4,A3,A2\n// DisplayModule Arduino Uno TFT shield        : ,A5,A4,A3,A2\n//\n// Arduino Mega:\n// -------------------\n// Standard Arduino Mega/Due shield            : ,38,39,40,41\n// CTE TFT LCD/SD Shield for Arduino Mega      : ,38,39,40,41\n//\n// Remember to change the model parameter to suit your display module!\nUTFT myGLCD(ITDB32S,38,39,40,41);void setup()\n{\n  randomSeed(analogRead(0));\n  \n// Setup the LCD\n  myGLCD.InitLCD();\n  myGLCD.setFont(SmallFont);\n}</p><p>void loop()\n{\n  int buf[318];\n  int x, x2;\n  int y, y2;\n  int r;// Clear the screen and draw the frame\n  myGLCD.clrScr();  myGLCD.setColor(255, 0, 0);\n  myGLCD.fillRect(0, 0, 319, 13);\n  myGLCD.setColor(64, 64, 64);\n  myGLCD.fillRect(0, 226, 319, 239);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.setBackColor(255, 0, 0);\n  myGLCD.print(\"* Universal Color TFT Display Library *\", CENTER, 1);\n  myGLCD.setBackColor(64, 64, 64);\n  myGLCD.setColor(255,255,0);\n  myGLCD.print(\"\", CENTER, 227);  myGLCD.setColor(0, 0, 255);\n  myGLCD.drawRect(0, 14, 319, 225);// Draw crosshairs\n  myGLCD.setColor(0, 0, 255);\n  myGLCD.setBackColor(0, 0, 0);\n  myGLCD.drawLine(159, 15, 159, 224);\n  myGLCD.drawLine(1, 119, 318, 119);\n  for (int i=9; i<310; i+=10)\n    myGLCD.drawLine(i, 117, i, 121);\n  for (int i=19; i<220; i+=10)\n    myGLCD.drawLine(157, i, 161, i);// Draw sin-, cos- and tan-lines  \n  myGLCD.setColor(0,255,255);\n  myGLCD.print(\"Sin\", 5, 15);\n  for (int i=1; i<318; i++)\n  {\n    myGLCD.drawPixel(i,119+(sin(((i*1.13)*3.14)/180)*95));\n  }\n  \n  myGLCD.setColor(255,0,0);\n  myGLCD.print(\"Cos\", 5, 27);\n  for (int i=1; i<318; i++)\n  {\n    myGLCD.drawPixel(i,119+(cos(((i*1.13)*3.14)/180)*95));\n  }  myGLCD.setColor(255,255,0);\n  myGLCD.print(\"Tan\", 5, 39);\n  for (int i=1; i<318; i++)\n  {\n    myGLCD.drawPixel(i,119+(tan(((i*1.13)*3.14)/180)));\n  }  delay(2000);  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);\n  myGLCD.setColor(0, 0, 255);\n  myGLCD.setBackColor(0, 0, 0);\n  myGLCD.drawLine(159, 15, 159, 224);\n  myGLCD.drawLine(1, 119, 318, 119);// Draw a moving sinewave\n  x=1;\n  for (int i=1; i<(318*20); i++) \n  {\n    x++;\n    if (x==319)\n      x=1;\n    if (i>319)\n    {\n      if ((x==159)||(buf[x-1]==119))\n        myGLCD.setColor(0,0,255);\n      else\n        myGLCD.setColor(0,0,0);\n      myGLCD.drawPixel(x,buf[x-1]);\n    }\n    myGLCD.setColor(0,255,255);\n    y=119+(sin(((i*1.1)*3.14)/180)*(90-(i / 100)));\n    myGLCD.drawPixel(x,y);\n    buf[x-1]=y;\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some filled rectangles\n  for (int i=1; i<6; i++)\n  {\n    switch (i)\n    {\n      case 1:\n        myGLCD.setColor(255,0,255);\n        break;\n      case 2:\n        myGLCD.setColor(255,0,0);\n        break;\n      case 3:\n        myGLCD.setColor(0,255,0);\n        break;\n      case 4:\n        myGLCD.setColor(0,0,255);\n        break;\n      case 5:\n        myGLCD.setColor(255,255,0);\n        break;\n    }\n    myGLCD.fillRect(70+(i*20), 30+(i*20), 130+(i*20), 90+(i*20));\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some filled, rounded rectangles\n  for (int i=1; i<6; i++)\n  {\n    switch (i)\n    {\n      case 1:\n        myGLCD.setColor(255,0,255);\n        break;\n      case 2:\n        myGLCD.setColor(255,0,0);\n        break;\n      case 3:\n        myGLCD.setColor(0,255,0);\n        break;\n      case 4:\n        myGLCD.setColor(0,0,255);\n        break;\n      case 5:\n        myGLCD.setColor(255,255,0);\n        break;\n    }\n    myGLCD.fillRoundRect(190-(i*20), 30+(i*20), 250-(i*20), 90+(i*20));\n  }\n  \n  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some filled circles\n  for (int i=1; i<6; i++)\n  {\n    switch (i)\n    {\n      case 1:\n        myGLCD.setColor(255,0,255);\n        break;\n      case 2:\n        myGLCD.setColor(255,0,0);\n        break;\n      case 3:\n        myGLCD.setColor(0,255,0);\n        break;\n      case 4:\n        myGLCD.setColor(0,0,255);\n        break;\n      case 5:\n        myGLCD.setColor(255,255,0);\n        break;\n    }\n    myGLCD.fillCircle(100+(i*20),60+(i*20), 30);\n  }\n  \n  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some lines in a pattern\n  myGLCD.setColor (255,0,0);\n  for (int i=15; i<224; i+=5)\n  {\n    myGLCD.drawLine(1, i, (i*1.44)-10, 224);\n  }\n  myGLCD.setColor (255,0,0);\n  for (int i=224; i>15; i-=5)\n  {\n    myGLCD.drawLine(318, i, (i*1.44)-11, 15);\n  }\n  myGLCD.setColor (0,255,255);\n  for (int i=224; i>15; i-=5)\n  {\n    myGLCD.drawLine(1, i, 331-(i*1.44), 15);\n  }\n  myGLCD.setColor (0,255,255);\n  for (int i=15; i<224; i+=5)\n  {\n    myGLCD.drawLine(318, i, 330-(i*1.44), 224);\n  }\n  \n  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some random circles\n  for (int i=0; i<100; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    x=32+random(256);\n    y=45+random(146);\n    r=random(30);\n    myGLCD.drawCircle(x, y, r);\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some random rectangles\n  for (int i=0; i<100; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    x=2+random(316);\n    y=16+random(207);\n    x2=2+random(316);\n    y2=16+random(207);\n    myGLCD.drawRect(x, y, x2, y2);\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some random rounded rectangles\n  for (int i=0; i<100; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    x=2+random(316);\n    y=16+random(207);\n    x2=2+random(316);\n    y2=16+random(207);\n    myGLCD.drawRoundRect(x, y, x2, y2);\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);  for (int i=0; i<100; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    x=2+random(316);\n    y=16+random(209);\n    x2=2+random(316);\n    y2=16+random(209);\n    myGLCD.drawLine(x, y, x2, y2);\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);  for (int i=0; i<10000; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    myGLCD.drawPixel(2+random(316), 16+random(209));\n  }  delay(2000);  myGLCD.fillScr(0, 0, 255);\n  myGLCD.setColor(255, 0, 0);\n  myGLCD.fillRoundRect(80, 70, 239, 169);\n  \n  myGLCD.setColor(255, 255, 255);\n  myGLCD.setBackColor(255, 0, 0);\n  myGLCD.print(\"That's it!\", CENTER, 93);\n  myGLCD.print(\"Restarting in a\", CENTER, 119);\n  myGLCD.print(\"few seconds...\", CENTER, 132);\n  \n  myGLCD.setColor(0, 255, 0);\n  myGLCD.setBackColor(0, 0, 255);\n  myGLCD.print(\"Runtime: (msecs)\", CENTER, 210);\n  myGLCD.printNumI(millis(), CENTER, 225);\n  \n  delay (10000);\n}</p>", "step_imgs": ["https://cdn.instructables.com/FIW/ALI3/JTYN5PGB/FIWALI3JTYN5PGB.LARGE.jpg"], "step_title": "Step 6: UTFT Shapes, Lines and Pattern"}, {"step": 7, "steps_text": "#include <UTFT.h>\n\n#include  <avr/pgmspace.h>// Declare which fonts we will be using\n\nextern uint8_t SmallFont[];// Set the pins to the correct ones for your development shield\n// ------------------------------------------------------------\n// Arduino Uno / 2009:\n// -------------------\n// Standard Arduino Uno/2009 shield            : ,A5,A4,A3,A2\n// DisplayModule Arduino Uno TFT shield        : ,A5,A4,A3,A2\n//\n// Arduino Mega:\n// -------------------\n// Standard Arduino Mega/Due shield            : ,38,39,40,41\n// CTE TFT LCD/SD Shield for Arduino Mega      : ,38,39,40,41\n//\n// Remember to change the model parameter to suit your display module!\nUTFT myGLCD(ITDB32S,A5,A4,A3,A2);extern unsigned int info[0x400];\nextern unsigned int icon[0x400];\nextern unsigned int tux[0x400];void setup()\n{\n  myGLCD.InitLCD();\n  myGLCD.setFont(SmallFont);\n}void loop()\n{\n  myGLCD.fillScr(255, 255, 255);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.print(\" *** A 10 by 7 grid of a 32x32 icon *** \", CENTER, 228);\n  for (int x=0; x<10; x++)\n    for (int y=0; y<7; y++)\n      myGLCD.drawBitmap (x*32, y*32, 32, 32, info);  delay(5000);\n  \n  myGLCD.fillScr(255, 255, 255);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.print(\"   Two different icons in scale 1 to 4  \", CENTER, 228);\n  int x=0;\n  for (int s=0; s<4; s++)\n  {\n    x+=(s*32);\n    myGLCD.drawBitmap (x, 0, 32, 32, tux, s+1);\n  }\n  x=0;\n  for (int s=4; s>0; s--)\n  {\n    myGLCD.drawBitmap (x, 224-(s*32), 32, 32, icon, s);\n    x+=(s*32);\n  }  delay(5000);\n}", "step_imgs": ["https://cdn.instructables.com/FKM/OJIH/JTYN5R2Y/FKMOJIHJTYN5R2Y.LARGE.jpg"], "step_title": "Step 7: UTFT Bitmap"}, {"step": 8, "steps_text": "#include <UTFT.h>\n#include  <URTOUCH.h>// Initialize display\n// ------------------\n// Set the pins to the correct ones for your development board\n// -----------------------------------------------------------\n// Standard Arduino Uno/2009 Shield            : ,19,18,17,16\n// Standard Arduino Mega/Due shield            : ,38,39,40,41\n// CTE TFT LCD/SD Shield for Arduino Due       : ,25,26,27,28\n// Teensy 3.x TFT Test Board                   : ,23,22, 3, 4\n// ElecHouse TFT LCD/SD Shield for Arduino Due : ,22,23,31,33\n//\n// Remember to change the model parameter to suit your display module!\nUTFT    myGLCD(ITDB32S,38,39,40,41);// Initialize touchscreen\n// ----------------------\n// Set the pins to the correct ones for your development board\n// -----------------------------------------------------------\n// Standard Arduino Uno/2009 Shield            : 15,10,14, 9, 8\n// Standard Arduino Mega/Due shield            :  6, 5, 4, 3, 2\n// CTE TFT LCD/SD Shield for Arduino Due       :  6, 5, 4, 3, 2\n// Teensy 3.x TFT Test Board                   : 26,31,27,28,29\n// ElecHouse TFT LCD/SD Shield for Arduino Due : 25,26,27,29,30\n//\nURTouch  myTouch( 6, 5, 4, 3, 2);// Declare which fonts we will be using\nextern uint8_t BigFont[];int x, y;\nchar stCurrent[20]=\"\";\nint stCurrentLen=0;\nchar stLast[20]=\"\";/*************************\n**   Custom functions   **\n*************************/void drawButtons()\n{\n// Draw the upper row of buttons\n  for (x=0; x<5; x++)\n  {\n    myGLCD.setColor(0, 0, 255);\n    myGLCD.fillRoundRect (10+(x*60), 10, 60+(x*60), 60);\n    myGLCD.setColor(255, 255, 255);\n    myGLCD.drawRoundRect (10+(x*60), 10, 60+(x*60), 60);\n    myGLCD.printNumI(x+1, 27+(x*60), 27);\n  }\n// Draw the center row of buttons\n  for (x=0; x<5; x++)\n  {\n    myGLCD.setColor(0, 0, 255);\n    myGLCD.fillRoundRect (10+(x*60), 70, 60+(x*60), 120);\n    myGLCD.setColor(255, 255, 255);\n    myGLCD.drawRoundRect (10+(x*60), 70, 60+(x*60), 120);\n    if (x<4)\n      myGLCD.printNumI(x+6, 27+(x*60), 87);\n  }\n  myGLCD.print(\"0\", 267, 87);\n// Draw the lower row of buttons\n  myGLCD.setColor(0, 0, 255);\n  myGLCD.fillRoundRect (10, 130, 150, 180);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.drawRoundRect (10, 130, 150, 180);\n  myGLCD.print(\"Clear\", 40, 147);\n  myGLCD.setColor(0, 0, 255);\n  myGLCD.fillRoundRect (160, 130, 300, 180);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.drawRoundRect (160, 130, 300, 180);\n  myGLCD.print(\"Enter\", 190, 147);\n  myGLCD.setBackColor (0, 0, 0);\n}void updateStr(int val)\n{\n  if (stCurrentLen<20)\n  {\n    stCurrent[stCurrentLen]=val;\n    stCurrent[stCurrentLen+1]='\\0';\n    stCurrentLen++;\n    myGLCD.setColor(0, 255, 0);\n    myGLCD.print(stCurrent, LEFT, 224);\n  }\n  else\n  {\n    myGLCD.setColor(255, 0, 0);\n    myGLCD.print(\"BUFFER FULL!\", CENTER, 192);\n    delay(500);\n    myGLCD.print(\"            \", CENTER, 192);\n    delay(500);\n    myGLCD.print(\"BUFFER FULL!\", CENTER, 192);\n    delay(500);\n    myGLCD.print(\"            \", CENTER, 192);\n    myGLCD.setColor(0, 255, 0);\n  }\n}// Draw a red frame while a button is touched\nvoid waitForIt(int x1, int y1, int x2, int y2)\n{\n  myGLCD.setColor(255, 0, 0);\n  myGLCD.drawRoundRect (x1, y1, x2, y2);\n  while (myTouch.dataAvailable())\n    myTouch.read();\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.drawRoundRect (x1, y1, x2, y2);\n}/*************************\n**  Required functions  **\n*************************/void setup()\n{\n// Initial setup\n  myGLCD.InitLCD();\n  myGLCD.clrScr();  myTouch.InitTouch();\n  myTouch.setPrecision(PREC_MEDIUM);  myGLCD.setFont(BigFont);\n  myGLCD.setBackColor(0, 0, 255);\n  drawButtons();  \n}void loop()\n{\n  while (true)\n  {\n    if (myTouch.dataAvailable())\n    {\n      myTouch.read();\n      x=myTouch.getX();\n      y=myTouch.getY();\n      \n      if ((y>=10) && (y<=60))  // Upper row\n      {\n        if ((x>=10) && (x<=60))  // Button: 1\n        {\n          waitForIt(10, 10, 60, 60);\n          updateStr('1');\n        }\n        if ((x>=70) && (x<=120))  // Button: 2\n        {\n          waitForIt(70, 10, 120, 60);\n          updateStr('2');\n        }\n        if ((x>=130) && (x<=180))  // Button: 3\n        {\n          waitForIt(130, 10, 180, 60);\n          updateStr('3');\n        }\n        if ((x>=190) && (x<=240))  // Button: 4\n        {\n          waitForIt(190, 10, 240, 60);\n          updateStr('4');\n        }\n        if ((x>=250) && (x<=300))  // Button: 5\n        {\n          waitForIt(250, 10, 300, 60);\n          updateStr('5');\n        }\n      }      if ((y>=70) && (y<=120))  // Center row\n      {\n        if ((x>=10) && (x<=60))  // Button: 6\n        {\n          waitForIt(10, 70, 60, 120);\n          updateStr('6');\n        }\n        if ((x>=70) && (x<=120))  // Button: 7\n        {\n          waitForIt(70, 70, 120, 120);\n          updateStr('7');\n        }\n        if ((x>=130) && (x<=180))  // Button: 8\n        {\n          waitForIt(130, 70, 180, 120);\n          updateStr('8');\n        }\n        if ((x>=190) && (x<=240))  // Button: 9\n        {\n          waitForIt(190, 70, 240, 120);\n          updateStr('9');\n        }\n        if ((x>=250) && (x<=300))  // Button: 0\n        {\n          waitForIt(250, 70, 300, 120);\n          updateStr('0');\n        }\n      }      if ((y>=130) && (y<=180))  // Upper row\n      {\n        if ((x>=10) && (x<=150))  // Button: Clear\n        {\n          waitForIt(10, 130, 150, 180);\n          stCurrent[0]='\\0';\n          stCurrentLen=0;\n          myGLCD.setColor(0, 0, 0);\n          myGLCD.fillRect(0, 224, 319, 239);\n        }\n        if ((x>=160) && (x<=300))  // Button: Enter\n        {\n          waitForIt(160, 130, 300, 180);\n          if (stCurrentLen>0)\n          {\n            for (x=0; x", "step_imgs": ["https://cdn.instructables.com/F08/S52P/JTYN5SGF/F08S52PJTYN5SGF.LARGE.jpg"], "step_title": "Step 8: Button Interfacing"}, {"step": 9, "steps_text": "#include  <UTFT.h>\n#include  <URTOUCH.h>\n#include  <EEPROM.h>//==== Creating Objects\nUTFT    myGLCD(SSD1289,38,39,40,41); //Parameters should be adjusted to your Display/Schield model\nUTouch  myTouch( 6, 5, 4, 3, 2);//==== Defining Fonts\nextern uint8_t SmallFont[];\nextern uint8_t BigFont[];\nextern uint8_t SevenSegNumFont[];extern unsigned int bird01[0x41A]; // Bird Bitmapint x, y; // Variables for the coordinates where the display has been pressed// Floppy Bird\nint xP = 319;\nint yP = 100;\nint yB = 50;\nint movingRate = 3;\nint fallRateInt = 0;\nfloat fallRate = 0;\nint score = 0;\nint lastSpeedUpScore = 0;\nint highestScore;\nboolean screenPressed = false;\nboolean gameStarted = false;void setup() {\n  // Initiate display\n  myGLCD.InitLCD();\n  myGLCD.clrScr();\n  myTouch.InitTouch();\n  myTouch.setPrecision(PREC_MEDIUM);\n  \n  highestScore = EEPROM.read(0); // Read the highest score from the EEPROM\n  \n  initiateGame(); // Initiate the game\n}void loop() {\n    xP=xP-movingRate; // xP - x coordinate of the pilars; range: 319 - (-51)   \n    drawPilars(xP, yP); // Draws the pillars \n    \n    // yB - y coordinate of the bird which depends on value of the fallingRate variable\n    yB+=fallRateInt; \n    fallRate=fallRate+0.4; // Each inetration the fall rate increase so that we can the effect of acceleration/ gravity\n    fallRateInt= int(fallRate);\n    \n    // Checks for collision\n    if(yB>=180 || yB<=0){ // top and bottom\n      gameOver();\n    }\n    if((xP<=85) && (xP>=5) && (yB<=yP-2)){ // upper pillar\n      gameOver();\n    }\n    if((xP<=85) && (xP>=5) && (yB>=yP+60)){ // lower pillar\n      gameOver();\n    }\n    \n    // Draws the bird\n    drawBird(yB);    // After the pillar has passed through the screen\n    if (xP<=-51){\n      xP=319; // Resets xP to 319\n      yP = rand() % 100+20; // Random number for the pillars height\n      score++; // Increase score by one\n    }\n    //==== Controlling the bird\n    if (myTouch.dataAvailable()&& !screenPressed) {\n       fallRate=-6; // Setting the fallRate negative will make the bird jump\n       screenPressed = true;\n    }\n    // Doesn't allow holding the screen / you must tap it\n    else if ( !myTouch.dataAvailable() && screenPressed){\n      screenPressed = false;\n    }\n    \n    // After each five points, increases the moving rate of the pillars\n    if ((score - lastSpeedUpScore) == 5) {\n      lastSpeedUpScore = score;\n      movingRate++;\n    }\n}\n// ===== initiateGame - Custom Function\nvoid initiateGame() {\n  myGLCD.clrScr();\n  // Blue background\n  myGLCD.setColor(114, 198, 206);\n  myGLCD.fillRect(0,0,319,239);\n  // Ground\n  myGLCD.setColor(221,216,148);\n  myGLCD.fillRect(0, 215, 319, 239);\n  myGLCD.setColor(47,175,68);\n  myGLCD.fillRect(0, 205, 319, 214);\n  // Text\n  myGLCD.setColor(0, 0, 0);\n  myGLCD.setBackColor(221, 216, 148);\n  myGLCD.setFont(BigFont);\n  myGLCD.print(\"Score:\",5,220);\n  myGLCD.setFont(SmallFont);\n  myGLCD.print(\"HowToMechatronics.com\", 140, 220); \n  myGLCD.setColor(0, 0, 0);\n  myGLCD.setBackColor(114, 198, 206);\n  myGLCD.print(\"Highest Score: \",5,5);\n  myGLCD.printNumI(highestScore, 120, 6);\n  myGLCD.print(\">RESET<\",255,5);\n  myGLCD.drawLine(0,23,319,23);\n  myGLCD.print(\"TAP TO START\",CENTER,100);\n  \n  drawBird(yB); // Draws the bird\n  \n  // Wait until we tap the sreen\n  while (!gameStarted) {\n    if (myTouch.dataAvailable()) {\n    myTouch.read();\n    x=myTouch.getX();\n    y=myTouch.getY();        \n    // Reset higest score\n    if ((x>=250) && (x<=319) &&(y>=0) && (y<=28)) {\n    highestScore = 0;\n    myGLCD.setColor(114, 198, 206);\n    myGLCD.fillRect(120, 0, 150, 22);\n    myGLCD.setColor(0, 0, 0);\n    myGLCD.printNumI(highestScore, 120, 5);\n    } \n    if ((x>=0) && (x<=319) &&(y>=30) && (y<=239)) {\n    gameStarted = true;\n    myGLCD.setColor(114, 198, 206);\n    myGLCD.fillRect(0, 0, 319, 32);\n    }   \n  }\n  }\n  // Clears the text \"TAP TO START\" before the game start\n  myGLCD.setColor(114, 198, 206);\n  myGLCD.fillRect(85, 100, 235, 116);\n  \n}\n// ===== drawPlillars - Custom Function\nvoid drawPilars(int x, int y) {\n    if (x>=270){\n      myGLCD.setColor(0, 200, 20);\n      myGLCD.fillRect(318, 0, x, y-1);\n      myGLCD.setColor(0, 0, 0);\n      myGLCD.drawRect(319, 0, x-1, y);      myGLCD.setColor(0, 200, 20);\n      myGLCD.fillRect(318, y+81, x, 203);\n      myGLCD.setColor(0, 0, 0);\n      myGLCD.drawRect(319, y+80, x-1, 204); \n    }\n    else if( x<=268) {\n      // Draws blue rectangle right of the pillar\n      myGLCD.setColor(114, 198, 206);\n      myGLCD.fillRect(x+51, 0, x+60, y);\n      // Draws the pillar\n      myGLCD.setColor(0, 200, 20);\n      myGLCD.fillRect(x+49, 1, x+1, y-1);\n      // Draws the black frame of the pillar\n      myGLCD.setColor(0, 0, 0);\n      myGLCD.drawRect(x+50, 0, x, y);\n      // Draws the blue rectangle left of the pillar\n      myGLCD.setColor(114, 198, 206);\n      myGLCD.fillRect(x-1, 0, x-3, y);      // The bottom pillar\n      myGLCD.setColor(114, 198, 206);\n      myGLCD.fillRect(x+51, y+80, x+60, 204);\n      myGLCD.setColor(0, 200, 20);\n      myGLCD.fillRect(x+49, y+81, x+1, 203);\n      myGLCD.setColor(0, 0, 0);\n      myGLCD.drawRect(x+50, y+80, x, 204);\n      myGLCD.setColor(114, 198, 206);\n      myGLCD.fillRect(x-1, y+80, x-3, 204);\n  }\n  // Draws the score\n  myGLCD.setColor(0, 0, 0);\n  myGLCD.setBackColor(221, 216, 148);\n  myGLCD.setFont(BigFont);\n  myGLCD.printNumI(score, 100, 220);\n}//====== drawBird() - Custom Function\nvoid drawBird(int y) {\n  // Draws the bird - bitmap\n  myGLCD.drawBitmap (50, y, 35, 30, bird01);\n  // Draws blue rectangles above and below the bird in order to clear its previus state\n  myGLCD.setColor(114, 198, 206);\n  myGLCD.fillRoundRect(50,y,85,y-6);\n  myGLCD.fillRoundRect(50,y+30,85,y+36);\n}\n//======== gameOver() - Custom Function\nvoid gameOver() {\n  delay(3000); // 1 second\n  // Clears the screen and prints the text\n  myGLCD.clrScr();\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.setBackColor(0, 0, 0);\n  myGLCD.setFont(BigFont);\n  myGLCD.print(\"GAME OVER\", CENTER, 40);\n  myGLCD.print(\"Score:\", 100, 80);\n  myGLCD.printNumI(score,200, 80);\n  myGLCD.print(\"Restarting...\", CENTER, 120);\n  myGLCD.setFont(SevenSegNumFont);\n  myGLCD.printNumI(2,CENTER, 150);\n  delay(1000);\n  myGLCD.printNumI(1,CENTER, 150);\n  delay(1000);\n  \n  // Writes the highest score in the EEPROM\n  if (score > highestScore) {\n    highestScore = score;\n    EEPROM.write(0,highestScore);\n  }\n  // Resets the variables to start position values\n  xP=319;\n  yB=50;\n  fallRate=0;\n  score = 0;\n  lastSpeedUpScore = 0;\n  movingRate = 3;  \n  gameStarted = false;\n  // Restart game\n  initiateGame();\n}", "step_imgs": ["https://cdn.instructables.com/F4B/1F67/JTYN5SZ3/F4B1F67JTYN5SZ3.LARGE.jpg"], "step_title": "Step 9: Flappy Bird"}, {"step": 10, "steps_text": "You can find the source code in my Github repository.\nLink: https://github.com/Rahul24-06/Arduino-TFT-Interfacing-Basics\nGive a thumbs up if it really helped you and do follow my channel for interesting projects :)\nShare this video if you like.\nHappy to have you subscribed: https://www.youtube.com/channel/UCks-9JSnVb22dlqtMgPjrlg/videos\nThanks for reading!", "step_imgs": [], "step_title": "Step 10: Working of the Project"}], "channel": ""}, {"category": "", "description": "This project shows how to make an interactive picture of a dandelion. It starts as a yellow flower with LED's for petals then changes into a white dandelion clock, which can be blown on to make the seeds disperse.\nIt is based on a beautiful artwork by Qi Jie, whose picture was inspired by a single flower design by Jessie Thompson and Zachory Berta. I made mine on fabric and framed it in a tapestry hoop to go on the wall of the Tech and Textiles makerspace in Devon, England, as an example of a beginners project that combines sewing with Arduino.\nVideo of light painting by Qi Jie\nVideo of single flower design by Jessie Thompson and Zachory Berta\nThe code for both existing projects is available and I thought it would be easy to make, but the instructions were minimal and it took several attempts before I found a method that worked. So here are the full instructions and time saving tips for a remix that combines elements of both designs and tweaks of my own.\nDetails of what didn\u2019t work for me are at the end for anyone who's interested in why I chose this way.\nCode for light painting by Qi Jie\nCode for small flower picture by Jessie Thompson and Zachory Berta\nMaterials\nArduino UNO\nAdafruit Ring of 12 Neopixels\n5V Strip of 11 RGB LEDs\nSound Microphone Sensor\nJumper Wires\n5V Rechargeable Battery with USB A connection\nPrinter Cable (USB A to B cable)\nGlue Dots or Hot Glue\nA4 Card\n30cm x 30cm Cream Cotton Fabric, such as an old pillowcase\nGreen Fabric Paint\nBrown Cotton Thread\n70cm x 50cm Corrugated Cardboard, such as pizza boxes\nMasking Tape\n9 inch Embroidery Hoop to frame the picture\n9 Self-Adhesive Velcro Tabs\nTools\nA computer with Arduino IDE downloaded\nSoldering Iron and Lead-Free Solder\nBreadboard for testing circuit\nWire Stripper/Cutters\nSewing Needle\nPen\nScissors", "title": "Interactive Dandelion", "url": "https://www.instructables.com/id/Interactive-Dandelion/", "section": "technology", "steps": [{"step": 1, "steps_text": "Solder different color wires to each of the power, ground and data pads on the back of the NeoPixel ring.\nIf you have a different version of the ring, your wires may not be in the same position as the photo of mine.\nMake a note of which wires are for input and output as well as positive, data and ground because the markings for these are on the underside of the ring and won\u2019t be visible when the ring is in position.", "step_imgs": ["https://cdn.instructables.com/FEH/3UXW/JTIYMDIS/FEH3UXWJTIYMDIS.LARGE.jpg"], "step_title": "Step 1: Prepare the NeoPixel Ring"}, {"step": 2, "steps_text": "Cut 11 individual LEDs from a strip of RGB LEDs, taking care to cut along the centre line to leave solder pads on both sides of the cut. Dab a blob of solder on the top side of each pad.", "step_imgs": ["https://cdn.instructables.com/F75/QDAK/JTIYMD0L/F75QDAKJTIYMD0L.LARGE.jpg", "https://cdn.instructables.com/FU6/ZN67/JTIYMD0M/FU6ZN67JTIYMD0M.LARGE.jpg"], "step_title": "Step 2: Cut the Strips of LEDs"}, {"step": 3, "steps_text": "Make a hole in the middle of the card to fit the microphone. Using glue dots, stick the ring of neo pixels and individual LEDs in position as shown, making sure all the arrows on the LEDs will line up the same way when daisy chained together.\nSolder the output wires from the ring to the first individual LED, matching the positive, ground and data wires to the same pads on both LEDs.\nThe quickest and easiest way I found to join the LEDs together is to strip a jumper wire into separate copper strands. Attach one strand to link each of the soldered pads on the LEDs to the next one, matching positive, data and ground. It just takes a quick touch of a hot soldering iron because the pads have been pre-soldered in the previous step. Instead of cutting the wires at this stage, take them across the top of the LED to reach the soldered pads on the other side. Making sure no wires cross or touch each other, solder to those pads and continue round to the input side of the last LED.\nDon\u2019t attach a wire to the output side of the last LED. Unlike some LEDs you may be familiar with, you don\u2019t need to complete a round circuit that takes power back to ground as you\u2019ve been wiring separate ground and positive lines all the way along. Cut all the wires that go across the top of the LEDs so that you only have wires linking between them.\nTip: To prevent wires touching when going round corners, thread each one back into a small strip of plastic insulation that was previously removed.", "step_imgs": ["https://cdn.instructables.com/F4L/N4OI/JTIYMCX0/F4LN4OIJTIYMCX0.LARGE.jpg", "https://cdn.instructables.com/FTS/N9UY/JTIYMD0N/FTSN9UYJTIYMD0N.LARGE.jpg", "https://cdn.instructables.com/F0K/906C/JTIYMCWZ/F0K906CJTIYMCWZ.LARGE.jpg"], "step_title": "Step 3: Solder the LEDs"}, {"step": 4, "steps_text": "Make another hole in the white card for the input wires and push them through.\nSeparate the two rings of the tapestry hoop. Draw round the outside of the smallest ring on 5 pieces of corrugated card and cut out. Cut holes in the middle of 3 of the circles approximately 2cm in from the edge to make rings and cut a 5mm slit in each one. Glue the rings on top of each other, lining up the slits, and stick this to one of the remaining circles of card.", "step_imgs": ["https://cdn.instructables.com/FNK/0DJN/JTIYMDIR/FNK0DJNJTIYMDIR.LARGE.jpg", "https://cdn.instructables.com/FBW/B84S/JTWT8U00/FBWB84SJTWT8U00.LARGE.jpg"], "step_title": "Step 4: Preparing the Back"}, {"step": 5, "steps_text": "Wire your Arduino to the microphone sensor and the LED ring as shown. I used TinkerCad to create the circuit diagram, which doesn\u2019t have a microphone picture so I\u2019ve substituted another sensor that uses the same pins and works the same way in the simulation.\nTo view the simulation, go to https://www.tinkercad.com/things/5cgI2wluA0c. Drag the circle attached to the sensor onto the active area to simulate blowing into the microphone. The LEDs are in strips on 6, so the last LED in the simulation isn\u2019t part of the design and doesn\u2019t light up.", "step_imgs": ["https://cdn.instructables.com/FKW/PYTG/JTEMVU2W/FKWPYTGJTEMVU2W.LARGE.jpg", "https://cdn.instructables.com/FUX/FQRI/JTIYMDLO/FUXFQRIJTIYMDLO.LARGE.jpg"], "step_title": "Step 5: Wiring the Microphone and Arduino"}, {"step": 6, "steps_text": "Open Arduino IDE on your computer and start a new Sketch\nDelete everything inside the sketch and copy and paste this code into it instead\n// Adapted using NeoPixel Ring simple sketch (c) 2013 Shae Erisson<br>//and sensor code from <a href=\"https://www.hackster.io/ingo-lohs/first-test-37-sensor-kit-v2-0-from-elegoo-7-37-ba2d7d\" rel=\"nofollow\"> https://www.hackster.io/ingo-lohs/first-test-37-s...</a>\n\n#include <Adafruit_NeoPixel.h>\n\n// Which pin on the Arduino is connected to the NeoPixels?\n#define PIN            6\n\n// How many NeoPixels are attached to the Arduino?\n#define NUMPIXELS      23\n\n// When we setup the NeoPixel library, we tell it how many pixels, and which pin to use to send signals.\n// Note that for older NeoPixel strips you might need to change the third parameter--see the strandtest\n// example for more information on possible values.\nAdafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);\n\nint delayval = 500; // delay for half second\nint sensorPin  =  A0;     // select the input pin for the sensor\nint sensorValue =  0;     // variable to  store  the value  coming  from  the sensor\n\nconst int threshold = 200;   // an arbitrary threshold level that's in the range of the analog input\n\nvoid setup() {\n\n pixels.begin(); // This initializes the NeoPixel library.\n  pixels.setBrightness(20); // Set brightness\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  // For a set of NeoPixels the first NeoPixel is 0, second is 1, all the way up to the count of pixels minus one.\n\n  // Dandelion LEDs\n\n  // pixels.Color takes RGB values, from 0,0,0 up to 255,255,255\n  pixels.setPixelColor(0, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(1, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(2, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(3, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(4, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(5, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(6, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(7, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(8, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(9, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(10, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(11, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval*6);//Gradual change from flower to seed head\n\n    // pixels.Color takes RGB values, from 0,0,0 up to 255,255,255\n  pixels.setPixelColor(0, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(1, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(2, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(3, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(4, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(5, pixels.Color(226,246,255)); // bluishwhite\n  pixels.setPixelColor(6, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(7, pixels.Color(226,246,255)); // bluishwhite\n  pixels.setPixelColor(8, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(9, pixels.Color(226,246,255)); // bluishwhite\n  pixels.setPixelColor(10, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(11, pixels.Color(226,246,255)); // bluishwhite.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n    delay(delayval*6);\n\n  //  Seed head LEDs\n\n pixels.setPixelColor(0, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(1, pixels.Color(0,0,0)); //off\n  pixels.setPixelColor(2, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(3, pixels.Color(0,0,0)); //off\n  pixels.setPixelColor(4, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(5, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(6, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(7, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(8, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(9, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(10, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(11, pixels.Color(226, 246, 255)); //off\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval*3); // Delay for a period of time (in milliseconds).\n\n  pixels.setPixelColor(0, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(1, pixels.Color(0,0,0)); //off\n  pixels.setPixelColor(2, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(3, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(4, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(5, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(6, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(7, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(8, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(9, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(10, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(11, pixels.Color(226,246,255)); //Bluish white.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval*3); // Delay for a period of time (in milliseconds).\n\n  pixels.setPixelColor(0, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(1, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(2, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(3, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(4, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(5, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(6, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(7, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(8, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(9, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(10, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(11, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval); // Delay for a period of time (in milliseconds).\n\n  // Read the sensor value and display it in the serial monitor\n  sensorValue = analogRead(sensorPin);\n  Serial.println(sensorValue);\n  delay(250);\n\n  // While sensor value is less than threshold, check the sensor value and print it in the serial monitor. When the value is above threshold, the sketch can continue\n  while (sensorValue < threshold) {\n  sensorValue = analogRead(sensorPin);\n  Serial.println(sensorValue);\n  delay(250);\n  }\n\n  // First wind LEDs\n\n  pixels.setPixelColor(0, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(1, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(2, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(3, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(4, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(5, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(6, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(7, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(8, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(9, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(10, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(11, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(12, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(13, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(14, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(15, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(16, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval); // Delay for a period of time (in milliseconds).\n\n  // Second wind LEDs\n\n  pixels.setPixelColor(0, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(1, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(2, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(3, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(4, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(5, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(6, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(7, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(8, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(9, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(10, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(11, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(15, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(18, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(19, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(20, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(21, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(22, pixels.Color(226, 246, 255)); // Bluish white.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(2000); // Delay for a period of time (in milliseconds).\n\n}\nAttach your Arduino to the computer with the USB printer cable\nGo to Tools > Board and select the Arduino/Genuino UNO board\nGo to Port and make sure you\u2019ve got the board connected to the right USB port. If you\u2019re unsure you can unplug the Arduino and see which port disappears from the list. Plug it back in and the port will be listed again.\nUpload the sketch by clicking on the Upload icon, shown in the annotated photo. Lights should flash on the Arduino while it uploads. When it finishes uploading half the LEDs on the neo pixel ring will light up yellow and then change to a full ring of white lights. Blow on the microphone to test the circuit. The LEDs in the outer layers should light up in turn. Check the solder on any LEDs that don\u2019t work.", "step_imgs": ["https://cdn.instructables.com/FLQ/1BM8/JTEMVW25/FLQ1BM8JTEMVW25.LARGE.jpg"], "step_title": "Step 6: Programming the Arduino"}, {"step": 7, "steps_text": "Colors\nThe colours of the LEDs are set using RGB (Red Green Blue) colour values. If you prefer to use different colors than I've used you can find the values for the colours you want by using an online RGB colour calculator such as www.w3schools.com/colors/colors_rgb.asp\nTo turn an LED off, use the values 0, 0, 0.\nTo set the LED to white, use the values 255, 255, 255. The code in the previous step uses a bluish white with the values 226, 246, 255 and an orange with the values of 255, 165, 0.\nBrightness\nTo change the brightness of the LEDs, go to the void setup section of the code and find the following line of code:\npixels.setBrightness(20); // Set brightness\nEdit the number in the brackets to change the brightness of the LEDs.\nSensor Threshold\nWhen you run the program, half the NeoPixel ring starts off yellow to represent a flower and gradually changes to a full circle of white LEDs to represent the seed head. At this point the program should pause until you blow on the microphone sensor. If the program continues and lights up the outer layers of LEDs without activation from the sensor, go to the void setup section of the code and lower the value shown below. Increase the value if the program pauses but doesn't respond when you blow on the sensor.\nconst int threshold = 200;", "step_imgs": ["https://cdn.instructables.com/FYT/5L3K/JTEMVQ7G/FYT5L3KJTEMVQ7G.LARGE.jpg", "https://cdn.instructables.com/FMZ/60OC/JTEMVQDU/FMZ60OCJTEMVQDU.LARGE.jpg"], "step_title": "Step 7: Changing the Colours, Brightness and Sensor Threshold"}, {"step": 8, "steps_text": "When the circuit works, unplug the Arduino from the computer and remove the microphone sensor from the breadboard. Solder wires from the Arduino to the microphone sensor to make the same circuit more permanent. Push the microphone through the hole in the card from behind. If necessary, carefully bend the microphone by 90 degrees so the board can lie flat behind the card. Attach the battery to the Arduino using the printer cable and the whole sequence should work.", "step_imgs": ["https://cdn.instructables.com/F2Z/MKA3/JTYN4ZH9/F2ZMKA3JTYN4ZH9.LARGE.jpg"], "step_title": "Step 8: Making the Circuit More Permanent"}, {"step": 9, "steps_text": "Make a hole in your fabric where you want the microphone. I used a hot soldering iron to burn a small hole and trimmed it with scissors until the microphone fitted through. Paint and stitch your flower on the fabric. When the paint dries, attach the painting to the embroidery hoop and trim away excess fabric, leaving a small border.\nTo see if any of the circuit components show through the fabric, temporarily place the fabric and hoop on top of the card with the microphone showing through the hole. If necessary, cover the circuit with layers of masking tape, checking occasionally, until the components don't show anymore. The LEDs are bright enough to be seen through a layer of masking tape. If you have to add even more layers you can make the LEDs brighter by adjusting your code as shown in Step 7.\nPlace the fabric and hoop back on top of the card as before and secure in place by gluing the extra fabric over the back of the card.", "step_imgs": ["https://cdn.instructables.com/F7S/ZG5T/JTWT8TZW/F7SZG5TJTWT8TZW.LARGE.jpg"], "step_title": "Step 9: Create a Picture"}, {"step": 10, "steps_text": "Glue the white card onto the corrugated cardboard circle, enclosing the microphone, but not the Arduino and battery pack, which need to go round the edge of the cardboard with the wires passing through the slits.\nAttach the last circle of cardboard with Velcro so that you can access the battery. Make a hole in the cardboard where you want to hang it on a hook on the wall.", "step_imgs": ["https://cdn.instructables.com/FLK/3H5N/JTYN54VT/FLK3H5NJTYN54VT.LARGE.jpg"], "step_title": "Step 10: Putting It Together"}, {"step": 11, "steps_text": "My first attempt was with circuit stickers and copper tape. Circuit stickers are tiny LEDs surface mounted onto stickers with copper pads. They come from Qi Jie's company, Chibitroniks, and I thought they\u2019d be perfect.\nI couldn\u2019t get a reliable connection using copper tape or silver tape and when I soldered wire to the stickers I could still only get a series of 3 LED stickers to light using a 9V battery. It became clear they are not intended for multi light projects as I\u2019d hoped. When I looked more closely at a web page about circuit stickers, a project with 4 lights turned out to be a different type of LEDs. I could power circuit stickers with a 12V battery but it would be too bulky to fit inside the picture.\nThen I tried sewable LEDs. I thought having only power and ground would be easier to wire than programmable LEDs which have power, ground and data lines. But it turned out to be a more complicated circuit needing an extra power supply and a MOSFET, which I didn\u2019t have. I could have used sewable NeoPixels, but they are more expensive.\nSo after a few false starts, I ended up with a string of programmable LEDs which are cheap and easy to use.", "step_imgs": ["https://cdn.instructables.com/FD8/CG7L/JTIYMDLI/FD8CG7LJTIYMDLI.LARGE.jpg", "https://cdn.instructables.com/F21/H6JG/JTIYMDS9/F21H6JGJTIYMDS9.LARGE.jpg", "https://cdn.instructables.com/FCJ/ZB7A/JTIYMDLL/FCJZB7AJTIYMDLL.LARGE.jpg"], "step_title": "Step 11: Learning From Mistakes"}], "channel": ""}, {"category": "", "description": "Since I found out what a rubens tube is I have wanted to make one. They just seem so cool. Something that could show sound waves though little flames. I found it was the perfect match: a little fire that dances to music. I never thought I could make one until I searched it on instructables and found this: https://www.instructables.com/id/The-Rubens--Tube%253a-Soundwaves-in-Fire!/.\nI had looked at other ones but none of them seemed to look all that good. They all looked very \"redneck\". With this instructable I will show you how to make one that looks good too.\nIf you are planning to make this, make sure you also consider the safety hazards that come along with it. Make sure to read the safety section in this instructable: https://www.instructables.com/id/The-Rubens--Tube%253a-Soundwaves-in-Fire!/\nI will try to explain all the steps in a clear way to make it easier. So, lets get to the point and start building.", "title": "Leon's Rubens Tube", "url": "https://www.instructables.com/id/Rubens-Tube-5/", "section": "technology", "steps": [{"step": 1, "steps_text": "I have tried to include a picture of everything i needed.\nMaterials:\nVentilation Ducting\nI used 4\" x 60\" air duct (4 inch diameter x 60 inches long)\nHose Clamps x2\nEpoxy putty\nHose / tubing\nI used 1/4\" tube\nhose barb splicer x2\ntwo 1/4\" hose splicers (make sure its the right size for your tubing, 1/4\" for me because I used 1/4\" tube)\nHose T barb connector\n1/4\" for me\nTeflon Tape\nPolyethylene Sheets\nI used polyethylene because that was all that I could find but yourtvlies says that latex works best.\npropane and torch\nI used this as my fuel source. The torch should have a fuctioning valve to turn it off.\nSpray paint x2\nOne color for the stands (I used textured charcoal) and another High heat color for the tube itself (I used silver)\nscrap wood\ntwo pieces at least\nClamps of all kinds\nA 1/4\" and a 1/16\" drill bit\nTape measure\nA Sharpie\nPliers\nA File\nA 2\" x 10\" at least 44\" long if you plan to make a base.\nAn amplifier\nPlay your own music or use a tone generator.", "step_imgs": ["https://cdn.instructables.com/FF2/XB5G/JTON895V/FF2XB5GJTON895V.LARGE.jpg", "https://cdn.instructables.com/F4N/MRZZ/JTT5QTVG/F4NMRZZJTT5QTVG.LARGE.jpg", "https://cdn.instructables.com/FUB/RYGG/JTON8974/FUBRYGGJTON8974.LARGE.jpg", "https://cdn.instructables.com/FQD/3SLE/JTON899L/FQD3SLEJTON899L.LARGE.jpg", "https://cdn.instructables.com/FNC/JERA/JTONAAK9/FNCJERAJTONAAK9.LARGE.jpg", "https://cdn.instructables.com/F7V/Y5YK/JTT5QTXS/F7VY5YKJTT5QTXS.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "put masking tape around the duct at approximatly 42\" from the good side (the side without the bumps).\nmeasure and mark 42\" in several different places around the duct on the tape.\nuse the tin snips to cut along the line\ndon't throw out the extra piece of duct, we will use it later.", "step_imgs": ["https://cdn.instructables.com/FH7/5HIG/JTON899P/FH75HIGJTON899P.LARGE.jpg", "https://cdn.instructables.com/F9N/TG6Z/JTON899Q/F9NTG6ZJTON899Q.LARGE.jpg", "https://cdn.instructables.com/FYV/15HG/JTON899T/FYV15HGJTON899T.LARGE.jpg"], "step_title": "Step 2: Measure and Cut Duct"}, {"step": 3, "steps_text": "you will need two peices of wood the same width as the duct flattened and at least 3ft long. I used the extra piece of duct left to mark it", "step_imgs": ["https://cdn.instructables.com/FOA/LPTZ/JTON89CC/FOALPTZJTON89CC.LARGE.jpg", "https://cdn.instructables.com/FEO/Y5X1/JTON89L4/FEOY5X1JTON89L4.LARGE.jpg"], "step_title": "Step 3: Cut the Wood"}, {"step": 4, "steps_text": "flatten the long duct onto the first peice of wood.\nput the next piece of wood on top\nclamp them together with the duct in between", "step_imgs": ["https://cdn.instructables.com/F0H/JTD3/JTON89MD/F0HJTD3JTON89MD.LARGE.jpg", "https://cdn.instructables.com/FN7/66BN/JTON89NM/FN766BNJTON89NM.LARGE.jpg", "https://cdn.instructables.com/F4U/TZA6/JTONC0AQ/F4UTZA6JTONC0AQ.LARGE.jpg"], "step_title": "Step 4: Clamp It in Place"}, {"step": 5, "steps_text": "The pictures help explain this part.\nStarting at 4\" from the ends of the ducts, mark where you will drill 1/16\" holes 1/2\" apart centered on the duct.\nAt 1/4 and 3/4 of the way down the line of dots, mark where you will drill 1/4\" holes 3 5/16\" away from the center dots.", "step_imgs": ["https://cdn.instructables.com/F7G/D8NB/JTONC0I3/F7GD8NBJTONC0I3.LARGE.jpg", "https://cdn.instructables.com/F5W/LG9K/JTON89OY/F5WLG9KJTON89OY.LARGE.jpg", "https://cdn.instructables.com/FIR/50FM/JTON89OX/FIR50FMJTON89OX.LARGE.jpg"], "step_title": "Step 5: Do Your Drawing."}, {"step": 6, "steps_text": "make a little dent in all the places you will be drilling. This will help so the drill bit won't move around.\ndrill all the holes. try your best to only drill strait up and down", "step_imgs": ["https://cdn.instructables.com/FO3/4B5J/JTONAAJY/FO34B5JJTONAAJY.LARGE.jpg", "https://cdn.instructables.com/FEE/5IT8/JTON89PR/FEE5IT8JTON89PR.LARGE.jpg"], "step_title": "Step 6: Drilling"}, {"step": 7, "steps_text": "take the clamps off\ntake the top piece of wood off. It will bulge up.", "step_imgs": ["https://cdn.instructables.com/FAR/8MMH/JTON89R3/FAR8MMHJTON89R3.LARGE.jpg", "https://cdn.instructables.com/FSM/KEVU/JTON89SG/FSMKEVUJTON89SG.LARGE.jpg"], "step_title": "Step 7: Take the Clamps Off"}, {"step": 8, "steps_text": "cut two pieces of 1/4\" tube that are the same size\nput teflon tape around the barbs on one end of the splicers.\npush* one splicer onto each piece of tube\nwrap two ends of the T connector and attach* the other ends of the tubes onto it. (see pictures)\n* when you attach the hoses it helps to turn the hose as it goes on.", "step_imgs": ["https://cdn.instructables.com/F2K/1W1R/JTON89XF/F2K1W1RJTON89XF.LARGE.jpg", "https://cdn.instructables.com/FU7/D8ZO/JTON89ZQ/FU7D8ZOJTON89ZQ.LARGE.jpg", "https://cdn.instructables.com/FDS/2X1I/JTON89ZR/FDS2X1IJTON89ZR.LARGE.jpg"], "step_title": "Step 8: Start Making the Hose System"}, {"step": 9, "steps_text": "Some of the rubens tube instructables don't mention this but if you are using a torch end like mine, this step is necessary. We tried it without making the hole bigger, there was not even enough propane to light the flames.\nclamp the torch\ndrill a 1/16\" hole in the end.", "step_imgs": ["https://cdn.instructables.com/F00/B79K/JTWT0S4T/F00B79KJTWT0S4T.LARGE.jpg", "https://cdn.instructables.com/FM5/WR0C/JTWT0SVR/FM5WR0CJTWT0SVR.LARGE.jpg", "https://cdn.instructables.com/FJJ/OV1C/JTWT0SDT/FJJOV1CJTWT0SDT.LARGE.jpg"], "step_title": "Step 9: Make the Torch Hole Bigger"}, {"step": 10, "steps_text": "push and twist the propane torch onto another, longer piece of tubing.\nwrap teflon tape onto the last end of the T connector.\npush and twist the other end of the tube onto the barbed T connector.", "step_imgs": ["https://cdn.instructables.com/FIQ/7OIE/JTON89ZS/FIQ7OIEJTON89ZS.LARGE.jpg", "https://cdn.instructables.com/FPJ/E32E/JTON89ZT/FPJE32EJTON89ZT.LARGE.jpg", "https://cdn.instructables.com/FLJ/9LC8/JTON89ZU/FLJ9LC8JTON89ZU.LARGE.jpg"], "step_title": "Step 10: Finish the Tubing"}, {"step": 11, "steps_text": "Scrape up around the hose splicers. This will make the epoxy putty stick to the metal better. See the pictures.", "step_imgs": ["https://cdn.instructables.com/FG8/TMEY/JTON8A4Z/FG8TMEYJTON8A4Z.LARGE.jpg", "https://cdn.instructables.com/F5A/YNWU/JTON8ABA/F5AYNWUJTON8ABA.LARGE.jpg", "https://cdn.instructables.com/F1B/HNPW/JTON8A7J/F1BHNPWJTON8A7J.LARGE.jpg", "https://cdn.instructables.com/FJA/MKQZ/JTON8AC1/FJAMKQZJTON8AC1.LARGE.jpg"], "step_title": "Step 11: Prepare for Glueing"}, {"step": 12, "steps_text": "take a chunk off\nknead and mix it with your hand* until it is even in color.\napply it around the splicers on the inside and outside\ndo the next step before it dries. (it should say on the package how long it takes)", "step_imgs": ["https://cdn.instructables.com/F23/5T76/JTON8A2D/F235T76JTON8A2D.LARGE.jpg", "https://cdn.instructables.com/FEO/1W0J/JTON8AC2/FEO1W0JJTON8AC2.LARGE.jpg", "https://cdn.instructables.com/FG2/5QW5/JTON8AC4/FG25QW5JTON8AC4.LARGE.jpg", "https://cdn.instructables.com/FED/NO55/JTON8AC5/FEDNO55JTON8AC5.LARGE.jpg"], "step_title": "Step 12: Put on the Epoxy Putty."}, {"step": 13, "steps_text": "Close the duct before the putty dries. You can pactice closing it on the extra piece on ducting.\nAfter closing thd duct, make sure the putty is still all right.", "step_imgs": ["https://cdn.instructables.com/FY0/8XY5/JTON8AC6/FY08XY5JTON8AC6.LARGE.jpg"], "step_title": "Step 13: Close the Duct."}, {"step": 14, "steps_text": "tape along the conecting point. this will mke it airtight\ncut short pieces of tape and put them on the sharp ends of the duct. See pictures.", "step_imgs": ["https://cdn.instructables.com/FWY/1JI9/JTONAANF/FWY1JI9JTONAANF.LARGE.jpg", "https://cdn.instructables.com/FWR/8AEI/JTONAANM/FWR8AEIJTONAANM.LARGE.jpg", "https://cdn.instructables.com/FNH/R3WS/JTONAANG/FNHR3WSJTONAANG.LARGE.jpg", "https://cdn.instructables.com/FKN/5LCT/JTONAANP/FKN5LCTJTONAANP.LARGE.jpg"], "step_title": "Step 14: Duct Tape"}, {"step": 15, "steps_text": "cut a piece of polyethelene film big enough to fit over the end of the tube with a little sticking off. see pictures", "step_imgs": ["https://cdn.instructables.com/FDG/30ZT/JTONAANU/FDG30ZTJTONAANU.LARGE.jpg", "https://cdn.instructables.com/F5H/XYF0/JTONAANV/F5HXYF0JTONAANV.LARGE.jpg", "https://cdn.instructables.com/FVD/AWO0/JTONAANX/FVDAWO0JTONAANX.LARGE.jpg", "https://cdn.instructables.com/FLZ/4GQ3/JTONAAR7/FLZ4GQ3JTONAAR7.LARGE.jpg"], "step_title": "Step 15: The Diaphragm"}, {"step": 16, "steps_text": "Use small pieces of duct tape to stretch the film over the hole. See the pictures.\nput two layers of tape on top to make it look better and airtight.", "step_imgs": ["https://cdn.instructables.com/FTY/VQQG/JTONAAXO/FTYVQQGJTONAAXO.LARGE.jpg", "https://cdn.instructables.com/FT9/ZK6P/JTONAAXP/FT9ZK6PJTONAAXP.LARGE.jpg", "https://cdn.instructables.com/F1Q/D5IH/JTONAAK6/F1QD5IHJTONAAK6.LARGE.jpg", "https://cdn.instructables.com/FJP/TYMA/JTONAAK7/FJPTYMAJTONAAK7.LARGE.jpg"], "step_title": "Step 16: Install the Diaphragm"}, {"step": 17, "steps_text": "do the same on the other side of the tube", "step_imgs": [], "step_title": "Step 17: Repeat Steps 14-16 on the Other Side"}, {"step": 18, "steps_text": "cut a strip 1\" wide and the same lengh as the extra piece of duct.\nmesure 1\" from each side.\nmesure 3 1/2\" from that on each side. (see pictures)\nfold on all the lines and turn the center into a curve.", "step_imgs": ["https://cdn.instructables.com/FHK/CJTW/JTT5QU66/FHKCJTWJTT5QU66.LARGE.jpg", "https://cdn.instructables.com/FTY/63VU/JTT5QU93/FTY63VUJTT5QU93.LARGE.jpg", "https://cdn.instructables.com/F26/7Z3A/JTT5QUA7/F267Z3AJTT5QUA7.LARGE.jpg"], "step_title": "Step 18: The Stand"}, {"step": 19, "steps_text": "measure a rectangle 6 1/4\" long and 1\" wide on the extra piece of duct.\nmeasure 1\" from both ends\ncut on the outer lines\nfold on the 1\" lines\nNow, to glue it all together.", "step_imgs": ["https://cdn.instructables.com/F6K/39JW/JTT5QTZY/F6K39JWJTT5QTZY.LARGE.jpg", "https://cdn.instructables.com/F2Z/O23J/JTT5QU1R/F2ZO23JJTT5QU1R.LARGE.jpg", "https://cdn.instructables.com/F4K/GUU2/JTT5QUGI/F4KGUU2JTT5QUGI.LARGE.jpg"], "step_title": "Step 19: The Stand Support"}, {"step": 20, "steps_text": "tighten the clamp onto the end of the duct.\ndraw a line a few spaces down from the tightener\nline up the line with the top of the stand.\nwhile holding it in place, mark some lines beside it to help while gluing", "step_imgs": ["https://cdn.instructables.com/FJ6/VR33/JTT5QUJX/FJ6VR33JTT5QUJX.LARGE.jpg", "https://cdn.instructables.com/FR2/S1TX/JTT5QUH2/FR2S1TXJTT5QUH2.LARGE.jpg", "https://cdn.instructables.com/F4Q/OBYC/JTT5QUQ2/F4QOBYCJTT5QUQ2.LARGE.jpg", "https://cdn.instructables.com/FW4/8P2E/JTT5QULO/FW48P2EJTT5QULO.LARGE.jpg"], "step_title": "Step 20: Preparing the Clamp for Gluing"}, {"step": 21, "steps_text": "Scrape and file anywhere the stand and clamp touch.", "step_imgs": ["https://cdn.instructables.com/FC1/I14D/JTT5QUTU/FC1I14DJTT5QUTU.LARGE.jpg", "https://cdn.instructables.com/FE3/392O/JTT5QUVX/FE3392OJTT5QUVX.LARGE.jpg"], "step_title": "Step 21: Scrape/file"}, {"step": 22, "steps_text": "mix up a chunk of epoxy putty\nroll it into a long piece\napply it along the bottom of the clamp.\nPush it onto the stand", "step_imgs": ["https://cdn.instructables.com/FJ5/595M/JTT5QV0E/FJ5595MJTT5QV0E.LARGE.jpg", "https://cdn.instructables.com/FSK/PRBZ/JTT5QV13/FSKPRBZJTT5QV13.LARGE.jpg", "https://cdn.instructables.com/FRB/VF1L/JTT5QV2C/FRBVF1LJTT5QV2C.LARGE.jpg"], "step_title": "Step 22: Glue"}, {"step": 23, "steps_text": "clamp it together. Don't worry if some putty comes though the holes. The stand will get deformed. This doesn't matter we will straiten it.\nLeave it for at least 30 min.", "step_imgs": ["https://cdn.instructables.com/FJS/DS6A/JTT5QUB0/FJSDS6AJTT5QUB0.LARGE.jpg", "https://cdn.instructables.com/FH5/Q349/JTT5QV44/FH5Q349JTT5QV44.LARGE.jpg"], "step_title": "Step 23: Clamp"}, {"step": 24, "steps_text": "Take the clamps off.\nFile the bumps away.", "step_imgs": ["https://cdn.instructables.com/F7Y/UVQA/JTT5QV4P/F7YUVQAJTT5QV4P.LARGE.jpg", "https://cdn.instructables.com/F5Q/0OQE/JTT5QVW7/F5Q0OQEJTT5QVW7.LARGE.jpg"], "step_title": "Step 24: Finishing Touches"}, {"step": 25, "steps_text": "Straiten the stand\nmeasure 1/2\" from the bottom of the stand.\nscrape anywhere the support and stand touches", "step_imgs": ["https://cdn.instructables.com/FLE/AOPZ/JTT5QV6J/FLEAOPZJTT5QV6J.LARGE.jpg", "https://cdn.instructables.com/FYB/VNRJ/JTT5QV8X/FYBVNRJJTT5QV8X.LARGE.jpg", "https://cdn.instructables.com/FWA/11I9/JTT5QVD7/FWA11I9JTT5QVD7.LARGE.jpg", "https://cdn.instructables.com/FAH/VINK/JTT5QVHF/FAHVINKJTT5QVHF.LARGE.jpg"], "step_title": "Step 25: Get Ready for the Support."}, {"step": 26, "steps_text": "apply some mixed epoxy putty to the support\npush it onto the stand\nclamp it\nremove any extras that come squishing out\ndo the same on the other side.", "step_imgs": ["https://cdn.instructables.com/FLP/BEXA/JTT5QVLM/FLPBEXAJTT5QVLM.LARGE.jpg", "https://cdn.instructables.com/FDU/AF1E/JTT5QVOT/FDUAF1EJTT5QVOT.LARGE.jpg", "https://cdn.instructables.com/FVX/CM2H/JTT5QVS2/FVXCM2HJTT5QVS2.LARGE.jpg", "https://cdn.instructables.com/F64/VLGF/JTT5QVTF/F64VLGFJTT5QVTF.LARGE.jpg"], "step_title": "Step 26: Glue"}, {"step": 27, "steps_text": "You will need to make another but this time with the support pointing the other way. See the pictures for better details.", "step_imgs": ["https://cdn.instructables.com/FM1/7FE4/JTT5QW11/FM17FE4JTT5QW11.LARGE.jpg"], "step_title": "Step 27: Redo Steps 17-25"}, {"step": 28, "steps_text": "This is what you'll need", "step_imgs": ["https://cdn.instructables.com/FBO/6OH1/JTT5QW5N/FBO6OH1JTT5QW5N.LARGE.jpg", "https://cdn.instructables.com/F7V/SML5/JTT5QW3T/F7VSML5JTT5QW3T.LARGE.jpg"], "step_title": "Step 28: Painting"}, {"step": 29, "steps_text": "cover the place you will paint with some sort of plastic stuff (I used some of the Polyethelene film I used for the diaphragm)\npaint with several thin coats", "step_imgs": ["https://cdn.instructables.com/FTU/EUB7/JTT5QW6W/FTUEUB7JTT5QW6W.LARGE.jpg", "https://cdn.instructables.com/F0X/FEAO/JTT5QWBR/F0XFEAOJTT5QWBR.LARGE.jpg", "https://cdn.instructables.com/F7Q/J24O/JTT5QWQD/F7QJ24OJTT5QWQD.LARGE.jpg", "https://cdn.instructables.com/FG5/QY2G/JTT5QWAT/FG5QY2GJTT5QWAT.LARGE.jpg"], "step_title": "Step 29: Painting the Stands"}, {"step": 30, "steps_text": "Cover the place again\nPut masking tape on anything you don't want covered in paint. Make sure you cover the holes so they don't get clogged.\nPaint it with high heat spray paint. I used silver\nLet it dry\nTake the tape off", "step_imgs": ["https://cdn.instructables.com/F7K/I1RY/JTT5QWLD/F7KI1RYJTT5QWLD.LARGE.jpg", "https://cdn.instructables.com/FIN/J49I/JTT5QWNV/FINJ49IJTT5QWNV.LARGE.jpg", "https://cdn.instructables.com/F7W/LZBY/JTT5QWSG/F7WLZBYJTT5QWSG.LARGE.jpg"], "step_title": "Step 30: Paint the Duct"}, {"step": 31, "steps_text": "Get a 2\" x 10\"\ncut it 42\" if you want it the same size as the duct or 44\" if you want it 1\" longer on each side for protection.", "step_imgs": ["https://cdn.instructables.com/F0A/FX9H/JTT5QWDA/F0AFX9HJTT5QWDA.LARGE.jpg", "https://cdn.instructables.com/FVE/IO4W/JTT5QWDP/FVEIO4WJTT5QWDP.LARGE.jpg", "https://cdn.instructables.com/FMV/8IX9/JTT5QWFM/FMV8IX9JTT5QWFM.LARGE.jpg"], "step_title": "Step 31: Make a Base (not Necessary)"}, {"step": 32, "steps_text": "Tighten the stands onto the duct\nScrew the stands onto the base (if you did one).", "step_imgs": ["https://cdn.instructables.com/FH4/CP6U/JTT5QWWX/FH4CP6UJTT5QWWX.LARGE.jpg"], "step_title": "Step 32: WOW! It's DONE (unless You Paint the Base)"}, {"step": 33, "steps_text": "Make sure the torch end is off\nscrew in a propane bottle\nturn it on**\nLight the holes\nput an amp beside it\nturn the lights out\nENJOY!\nTips & Tricks\nIf you play music, it will dance. If you want to see riples use a tone generator such as this: https://www.szynalski.com/tone-generator/\n**The remix I did said to prime the tube. This means that you put tape on the holes and turn the propane on. Then you wait a couple of minutes to let it fill up before removing the tape and lighting it. This will gather up pressure so the flames are higher. I found that most of the pessure was lost right away when you took the tape off anyway. Thus, I just opened the valve higher and didn't bother priming it at all.", "step_imgs": ["https://cdn.instructables.com/FNI/WG7O/JTYN8L6P/FNIWG7OJTYN8L6P.LARGE.jpg", "https://cdn.instructables.com/FSL/700V/JTWT0I9S/FSL700VJTWT0I9S.LARGE.jpg", "https://cdn.instructables.com/FGF/KMWH/JTYN8LGQ/FGFKMWHJTYN8LGQ.LARGE.jpg", "https://cdn.instructables.com/FEI/63RK/JTWT0HCT/FEI63RKJTWT0HCT.LARGE.jpg", "https://cdn.instructables.com/F5K/OX7E/JTWT0GEW/F5KOX7EJTWT0GEW.LARGE.jpg"], "step_title": "Step 33: Get Ready & Enjoy!"}], "channel": ""}, {"category": "", "description": "The idea was born after being selected to expose at Maker Faire Lille, a giant event around Science, inventions and the Do-It-Yourself mindset.\nI wanted to build something that makes visitors want to subscribe to my YouTube channel YouLab.\nI quickly though about a real time YouTube counter. However, it was lacking of interactivity with visitors.\nThat's why, I've decided to make an action after each subscription : Making bubbles.\nThe two following instructables have inspired me in the realization of the YouTube Subscriber Counter Bubble Machine.\nYouTube Counter :https://www.instructables.com/id/YouTube-Subscribe...\nBubble Machine : https://www.instructables.com/id/Bubble-Machine/\nLet's discover how I made this interactive counter.", "title": "YouTube Subscriber Counter Bubble Machine", "url": "https://www.instructables.com/id/YouTube-Counter-Bubble-Machine/", "section": "technology", "steps": [{"step": 1, "steps_text": "To make this project, you will need the following electronic material.\nESP8266 ESP-12 module\nESP-12E Motor Shield\n5V DC motor (At least 5000 RPM)\n5V DC gear-motor (about 100 RPM)\nLed Matrix 8x8 (between 3 to 8 units for a 3 to 8 digits counter)\nUSB Cable with power supply (At least 1A)\nIt can be purchase online for a very cheap price.\nThe ESP8266 is the brain of the circuit. This programmable board can connect to WIFI to get YouTube statistics, send commands to drive motors and pilot Led Matrix display.\nAs this module have limited current on output, a motor shield board must be added to drive motors.", "step_imgs": ["https://cdn.instructables.com/FOX/0KXG/JTYNE4LL/FOX0KXGJTYNE4LL.LARGE.jpg"], "step_title": "Step 1: Electronic Material"}, {"step": 2, "steps_text": "First of all, plug the ESP8266 module on the motor shield board.\nTo power these boards you can either use a separate power supply for motors and EPS8266 alimentation either use the same power supply.\nIn order to simplify the circuit I have chosen a unique power supply. To do so, you just have to had a jumper between VIN and VM on the motor shield board.\nThen connect the Led Matrix to the shield Board using the following table\nShield - Led Matrix\nVIN - VCC\nG - GND\n7 - DIN\n8 - CS\n5 - CLK\nFinally connect motors to A+/A- B+/B- and USB cable to VIN/GND", "step_imgs": ["https://cdn.instructables.com/FJG/4M9U/JTWT4YLM/FJG4M9UJTWT4YLM.LARGE.jpg", "https://cdn.instructables.com/F7G/C6UC/JTWT6L3Y/F7GC6UCJTWT6L3Y.LARGE.jpg"], "step_title": "Step 2: Electronic Circuit"}, {"step": 3, "steps_text": "The ESP8266 module runs Arduino. Some librairies and board configuration are required to run this project :\nAdd following URL in Preferences > Additional Boards Manager URLs:\nhttp://arduino.esp8266.com/stable/package_esp8266com_index.json\nInstall ESP8266 v2.4.2 in Tools > Boards Manager\nSelect NodeMCU 1.0 (ESP-12E Module) in Tools > Boards\nInstall ArduinoJson 5.13.5 in Library Manager\nInstall YoutubeAPI 1.1.0 in Library Manager", "step_imgs": ["https://cdn.instructables.com/FIG/DXVW/JTYNE4LE/FIGDXVWJTYNE4LE.LARGE.jpg"], "step_title": "Step 3: Sketch Configuration : Librairies and Board"}, {"step": 4, "steps_text": "Download the code attached to this step and open the file Youtube_counter_bubble_machine.ino\nYou will find three information to be customized in the code in the section 'Custom configuration to be replaced':\nCustomize WIFI\nIt correspond to the WIFI network that will be used by the ESP8266.\nUpdate WIFI SSID and Password fields with your network informations\nCustomize Channel ID\nThis field correspond to the YouTube channel that will be used to get subscribers statistics.\nYour Channel ID can be found in the URL of your web browser when you are on the main page of your YouTube channel.\nFor example the URL of YouLab Youtube page is :\nhttps://www.youtube.com/channel/UCQVsjlyPMlN4tZ7cGd5NnnA\nYouLab Channel ID is UCQVsjlyPMlN4tZ7cGd5NnnA\nCustomize Google API_Key\nSome Youtube API are used to get subscriber count of a channel. An API_Key is required to use Youtube APIs.\nWith a logged in google acount go to\nhttps://console.developers.google.com\nIn Dashboard select create project and in credentials select create credentials - API Key.\nIn Library select YouTube Data API v3 and enable.\nCopy the API Key in the Youtube counter code.", "step_imgs": ["https://cdn.instructables.com/F9V/KKV1/JTYNE4L5/F9VKKV1JTYNE4L5.LARGE.jpg", "https://cdn.instructables.com/F3B/3KVR/JTWT4YST/F3B3KVRJTWT4YST.LARGE.jpg", "https://cdn.instructables.com/FHS/KAN2/JTWT4YT1/FHSKAN2JTWT4YT1.LARGE.jpg"], "step_title": "Step 4: Customize Code"}, {"step": 5, "steps_text": "Let's try the firmware on the hardware.\nFirst connect the ESP8266 to your computer by USB and select the upload button. The firmware will be sent to your board.\nWhen finished, your Led Matrix should display INIT.\nAfter 3 to 5 seconds the Led Matrix should display the number of subscribers of your YouTube channel.\nTry to subscribe an check that the display is updated and motors start to run for 5 seconds.\nIf you face some troubles, open the serial monitor that will provide useful logs and help you debug your hardware or software.", "step_imgs": ["https://cdn.instructables.com/FM5/IT3I/JTWT4Z1X/FM5IT3IJTWT4Z1X.LARGE.jpg", "https://cdn.instructables.com/F74/M9M4/JTWT4ZGI/F74M9M4JTWT4ZGI.LARGE.jpg", "https://cdn.instructables.com/FL0/I9B6/JTWT4ZLD/FL0I9B6JTWT4ZLD.LARGE.jpg"], "step_title": "Step 5: Transfer Firmware and Test Boards"}, {"step": 6, "steps_text": "The code is divided in two parts, the setup phase and the loop phase.\nThe setup consist in initializing the Matrix Led, the WIFI and the two motors.\nThe loop phase repeat every two seconds :\nCall YouTube API\nUpdate Led Matrix\nIf new subscriber gain Power motors for 5 seconds", "step_imgs": ["https://cdn.instructables.com/FDS/V2DI/JTYNE4LA/FDSV2DIJTYNE4LA.LARGE.jpg"], "step_title": "Step 6: The Code"}, {"step": 7, "steps_text": "The bubble machine part is quit simple.\nA disk full of holes will dive into a dish soap liquid then rotate in front of a fan. It will create a lot of bubbles.\nThe disk is a CD-ROM or a DVD.\nMake some holes in it with a soldering machine.\nThen plug the disk on the gear-motor using a plastic cap to make the interface.", "step_imgs": ["https://cdn.instructables.com/F3R/PL56/JTYNE4LO/F3RPL56JTYNE4LO.LARGE.jpg", "https://cdn.instructables.com/FWS/1GG2/JTWT50LQ/FWS1GG2JTWT50LQ.LARGE.jpg", "https://cdn.instructables.com/FGV/9WHL/JTWT50QJ/FGV9WHLJTWT50QJ.LARGE.jpg"], "step_title": "Step 7: Bubble Machine"}, {"step": 8, "steps_text": "The casing is based on an old wood wine box that originally contained 3 bottles.\nMake a rectangle hole for the led matrix, a circular hole for the fan and a small hole for the gear motor axis.\nAttach a container on the bottom front of the wood box. It will contain the soap liquid.\nPlug the disk on the gear motor from the front of the wood box.\nFinally fill the container with some dish soap mixed to water.\nYour YouTube counter Bubble Machine is ready.", "step_imgs": ["https://cdn.instructables.com/FAP/P9XA/JTWT50IV/FAPP9XAJTWT50IV.LARGE.jpg", "https://cdn.instructables.com/FTS/Y9IK/JTWT50KO/FTSY9IKJTWT50KO.LARGE.jpg", "https://cdn.instructables.com/FX7/9UGX/JTYNE4K7/FX79UGXJTYNE4K7.LARGE.jpg"], "step_title": "Step 8: Casing"}], "channel": ""}, {"category": "", "description": "In this DIY guide I will show you how to make your own security check system based on Arduino!\nYou can use this system in areas with security guards (e.g. warehouses, malls, open areas). Every guard will have a personal RFID card with a unique ID number. When a security guard pass his cards over the Check point station - the ID and the current time/date will be stored inside controller memory (EEPROM). The security guard inside the \"Control Room\" can read the report of all check point stations with only one click!\nThis project started out as a Bachelor's thesis by me - John Vasilakis (supervised by Grigoris Tziallas) - Electronic Engineering Department of Stereas Elladas University. We are supporting the open hardware - software community so this project will be marked as an open-source. Before share/copy/change anything of below guide, make sure to read and agree with the CC BY-NC-SA licence agreement!\nWe used the RFID technology to read scanned card and the RS485 electrical data bus protocol for communication. In this project I decided to make my own PCB that is based on Arduino UNO microcontroller - Atmega328p.\nWe can have up to 254 slave-check point stations and one master station in the RS485 data bus. The master station is communicating with one computer in security room via serial USB port. We will describe the communication protocol in the following steps!\nLet's get started.\n~Project link can be found here:\nhttps://www.ardumotive.com/arduino-security-check-...\nVideo presentation:", "title": "Security Check RFID System Based on Arduino and RS485 Data Bus", "url": "https://www.instructables.com/id/Security-Check-RFID-System-Based-on-Arduino-and-RS/", "section": "technology", "steps": [{"step": 1, "steps_text": "For Master Station you will need:\nOur custom PCB circuit\nAtmega328 (with Arduino UNO bootloader)\n28 dip socket\n16 MHz crystal oscillator\n2x22 pF capacitors\n1x100nF ceramic capacitor\n1x10uF Electrolytic Capacitor\n1x10K resistor\nScrew terminal 2P 2.54mm\n2xPin Header 1x5 Female 2.54mm\n----> Or use an Arduino board with breadboard\nRFID MFRC-522 Module\nSN75176 Transceiver RS485\nbuzzer\n~Power by 5V power adapter\nFor every Slave - Sensor Station you will need:\nOur custom PCB circuit\nAtmega328 (with Arduino UNO bootloader)\n28 dip socket\n16 MHz crystal oscillator\n2x22 pF capacitors\n1x100nF ceramic capacitor\n1x10uF Electrolytic Capacitor\n1x10K resistor\nScrew terminal 2P 2.54mm\n2xPin Header 1x5 Female 2.54mm\n----> Or use an Arduino board with breadboard\nSN75176 Transceiver RS485\nDisplay 16x2 Character LCD - 5V\nTrimmer 20kOhm\nRFID MFRC-522 Module\nDS1307 IC RTC\n32.768 KHz Crystal\nCoin Cell Battery Holder (for CR2032 type batteries)\nbuzzer\n~Power by 5V power adapter\n*You will also need a TTL to USB module or an Arduino UNO board for the programming procedure, and then use it for USB communication for Master Station.", "step_imgs": ["https://cdn.instructables.com/FLJ/CTBP/JTWSW1K1/FLJCTBPJTWSW1K1.LARGE.jpg"], "step_title": "Step 1: What You Will Need - Hardware Part List"}, {"step": 2, "steps_text": "Find the electronic and pcb schematic at link below:\nhttps://easyeda.com/mi.vasilakis/RFID-RS485-ARDUIN...\nYou can make any changes you want!\nWe used the JLCPCB for $2 PCB Fabrication & 2-day Build Time, the quality is really good, check the below photo of our pcb board. JLCPCB it will not charge you for any color selection for your pcb board! Enter here to produce your PCB board!", "step_imgs": ["https://cdn.instructables.com/F5R/HD0P/JTWRZJ9D/F5RHD0PJTWRZJ9D.LARGE.jpg", "https://cdn.instructables.com/FWZ/MS8R/JTWRZJ9C/FWZMS8RJTWRZJ9C.LARGE.jpg", "https://cdn.instructables.com/F8J/HA4H/JTYND0NU/F8JHA4HJTYND0NU.LARGE.jpg"], "step_title": "Step 2: The Circuit - Electronic and PCB Schematic"}, {"step": 3, "steps_text": "LCD\nRS pin to Arduino Pin 2\nEN pin to Arduino Pin 3\nD4 pin to Arduino Pin 4\nD5 pin to Arduino Pin 5\nD6 pin to Arduino Pin 6\nD7 pin to Arduino Pin 7\nRFID\nSDA pin to Arduino Pin 10\nSCL pin to Arduino Pin 13\nMOSI pin to Arduino Pin 11\nMISO pin to Arduino Pin 12\nRST pin to Arduino Pin 9\nRTC\nSDA pin to Arduino Pin A4\nSCL pin to Arduino Pin A5\nSN75176\nRE pin to Arduino Pin A3\nDE pin to Arduino Pin A2\nR pin to Arduino Pin A0\nD pin to Arduino Pin A1\nBuzzer to Arduino Pin 8", "step_imgs": ["https://cdn.instructables.com/FW0/VHTH/JTWRZIVR/FW0VHTHJTWRZIVR.LARGE.jpg", "https://cdn.instructables.com/F2U/TX19/JTWRZIVW/F2UTX19JTWRZIVW.LARGE.jpg", "https://cdn.instructables.com/FES/NZKK/JTWRZJ09/FESNZKKJTWRZJ09.LARGE.jpg", "https://cdn.instructables.com/F2U/CHLH/JTWRZJ3E/F2UCHLHJTWRZJ3E.LARGE.jpg", "https://cdn.instructables.com/FZT/A20B/JTWRZJ5T/FZTA20BJTWRZJ5T.LARGE.jpg"], "step_title": "Step 3: Arduino Connection Pins"}, {"step": 4, "steps_text": "*See the attached images.", "step_imgs": ["https://cdn.instructables.com/FCY/PSWL/JTWRZJ9H/FCYPSWLJTWRZJ9H.LARGE.jpg", "https://cdn.instructables.com/FOH/Z727/JTWSW5FT/FOHZ727JTWSW5FT.LARGE.jpg", "https://cdn.instructables.com/FG3/16YE/JTWSW5H5/FG316YEJTWSW5H5.LARGE.jpg", "https://cdn.instructables.com/FRB/25BR/JTWSW5H6/FRB25BRJTWSW5H6.LARGE.jpg"], "step_title": "Step 4: Communication Protocol"}, {"step": 5, "steps_text": "Connect your circuit with the TTL to USB module with 5 cables to the programming header. The pins RX and TX must be cross-connected.\nNOTE: If you are using the Arduino UNO board make sure to remove the ATmega328 IC from it first and connect the headers RX to RX and TX to TX pins of the board. The RS pin must be connected to Arduino UNO reset pin.\n-------------CONFIGURATION-----------------\nMaster\nCode for the master station unit. The \"Master Station\" is responsible for the communication between \"Slave stations\" via RS485 data bus. It also communicate via serial port with the software that is running to \"control room\" computer.\nSlave\nCode for the slave station units. Every \"Slave Station\" - check point unit has a unique address. Edit the variable \"PORT\" (line 25) with hex value of unit address - value from 01 to FE (total of 254 stations). Also change the \"name\" of the current station by editing the variable \"point\" at line 24. Every check point can store to EEPROM memory up to 10 card IDs. If the security card exist, the ID and time-stamp will be saved to EEPROM memory.\nDownload the code from here and open it with Arduino IDE. Inside you will also find all library files.", "step_imgs": [], "step_title": "Step 5: The Code"}, {"step": 6, "steps_text": "Download and print the case of the master and slave stations with your 3D printer!", "step_imgs": ["https://cdn.instructables.com/F7Y/76MJ/JTWRZJ7R/F7Y76MJJTWRZJ7R.LARGE.jpg", "https://cdn.instructables.com/FID/LA3T/JTWRZJ8K/FIDLA3TJTWRZJ8K.LARGE.jpg", "https://cdn.instructables.com/FAB/VZ91/JTWRZJ8Y/FABVZ91JTWRZJ8Y.LARGE.jpg", "https://cdn.instructables.com/FN0/TJ8U/JTWRZJ8M/FN0TJ8UJTWRZJ8M.LARGE.jpg"], "step_title": "Step 6: 3D Parts"}, {"step": 7, "steps_text": "In this section we will describe the operation of the software that will run in the \"control\" room computer.\nFirst, you need to connect with master station via serial port.\nOnce logged in we will update the time and date of all stations based on the clock of the computer.\nWe have the option of entering the cardholder's name in our staff list. To do this, pass a card over the RFID (of master station) to read the ID and after the 'beep' sound click the \"Read ID\" button, select index position (from 1 to 10) and click the \"Add \" button. The new ID will be added to staff panel, there you can add a name of the employee. Now click on \"Update Stations with Card IDs\" button, now all stations are updated with new cards.\nThe report given by the devices since the card last passed. The total number of control stations indicates how many devices we have. We use 3 devices in our example. Clicking on the last check status report will look at the report that our devices gave us. For example: Station 1 replied that the E0 BD 74 AE card passed on 26/2/2019 at 19:13.\nFinally, we can read the time and date or the card table of each device.", "step_imgs": ["https://cdn.instructables.com/FHC/R8L1/JTWRZW7O/FHCR8L1JTWRZW7O.LARGE.jpg", "https://cdn.instructables.com/F4R/TFS4/JTWRZWIJ/F4RTFS4JTWRZWIJ.LARGE.jpg", "https://cdn.instructables.com/FNO/4P8L/JTWRZWOE/FNO4P8LJTWRZWOE.LARGE.jpg", "https://cdn.instructables.com/FM0/J9BC/JTWRZWQW/FM0J9BCJTWRZWQW.LARGE.jpg", "https://cdn.instructables.com/F16/MGSD/JTWRZWS1/F16MGSDJTWRZWS1.LARGE.jpg"], "step_title": "Step 7: Windows Software"}, {"step": 8, "steps_text": "I hope you liked this, let me know in the comments!!!", "step_imgs": ["https://cdn.instructables.com/FI3/LVEH/JTWRZIVK/FI3LVEHJTWRZIVK.LARGE.jpg", "https://cdn.instructables.com/FPV/2MF9/JTWRZJ6J/FPV2MF9JTWRZJ6J.LARGE.jpg"], "step_title": "Step 8: Well Done!"}], "channel": ""}, {"category": "", "description": "After having used my custom-made diving mask frame with the add-on lenses, I started finding that there was room for further improvements. These added features would facilitate the construction and make the overall use of the add-on lens frame more convenient to use while diving.\nThankfully, in recent times there have been great advancements made in the field of photogrammetry which have made this technology accessible to virtually anyone with a smartphone. Add to this the reduction in the costs of 3D printing and the combination of the two has offered the right opportunity to take my custom-made diving mask frame with the add-on lenses to the next level.\nIn the following steps I use some of the latest technologies that are now available to all to remix and transform the first version into a superior and more pleasing result!\nThe link to the first version: https://www.instructables.com/id/Diving-Mask-With-Add-on-Lenses/", "title": "Diving Mask With Custom Add-on Lenses (V2.0) Made Using Photogrammetry", "url": "https://www.instructables.com/id/Diving-Mask-With-Custom-Add-on-Lenses-V20-Made-Usi/", "section": "technology", "steps": [{"step": 1, "steps_text": "In the previous version (1.0) I had found the following difficulties while making and also when using the mask frame.\nShortcomings in V 1.0\nConstruction difficulties:\nThe 2D, flat, planar surface of the acrylic sheet provides limited possibilities to add more features and elements to it.\nThe mask frame supports (Step 16) are designed by taking visual measurements and are therefore inaccurate. Because of these inaccuracies the shape of the supports don't match the shape of the mask and don't get glued properly. I had to re-glue the supports a few times before they got firmly stuck.\nAligning all of the 4 frame supports on the mask which has irregularly shaped surfaces was challenging.\nBecause the frame supports are permanently glued to the mask, the mask gets permanently altered and can't be used as a \"regular mask\".\nUtilization difficulties:\nMoving and sliding the lenses up and down the slot in the frame requires the use of both hands - one hand to loosen the butterfly nut and the other to hold the lens frame.\nImprovements in V 2.0\nConstruction improvements:\nBy designing an add-on mask frame that closely matches the shape of the diving mask, we get a 3D shape which offers us many more surfaces and areas to add features and elements to the frame.\nAn add-on mask frame that closely fits the diving mask does not need to be permanently fixed or glued to the mask as it's holds itself in place.\nThe add-on mask frame can be added and removed without making any changes to the diving mask.\nThe availability of larger areas on the mask frame, on the sides and the back of the frame, provides the space to add elements to fasten the mask frame to the diving mask and also add a mechanism to slide the lenses up and down the face of the mask.\nImproved usage:\nA mechanism to slide the lenses up and down the face of the mask and with the use of just one hand has been added making the adjustment of the lenses extremely convenient.", "step_imgs": ["https://cdn.instructables.com/FZP/PN6V/JTWS8GD1/FZPPN6VJTWS8GD1.LARGE.jpg", "https://cdn.instructables.com/FNO/271Y/JTWS8GEI/FNO271YJTWS8GEI.LARGE.jpg"], "step_title": "Step 1: Remixing Version 1.0 to 2.0"}, {"step": 2, "steps_text": "One of the challenges of designing an add-on frame to a diving mask is the irregularity of the shape of a diving mask. The shapes of a typical diving mask are mostly curved with complex three dimensional forms. This makes it difficult to take those measurements of a mask that would be required to design a closely matching frame.\nThe difficulty of taking measurements of a mask can be overcome with the use of photogrammetry where one can directly recreate a virtual 3D mesh of the mask that closely matches the real mask without having to take any measurements.\nMoreover, photogrammetry has become greatly user-friendly and anyone with a smartphone or any other camera can take photos of almost any object and obtain a virtual 3D mesh of that object with the clicks of a few buttons. There are several software that offer photogrammetry for free and as this field is advancing so rapidly I suggest that anyone who wants to try it can look up the latest versions that are available online.\nFor the use of photogrammetry in this project, I watched a few videos on how to take the photos of my mask so that I could get a fairly accurate 3D mesh of the mask. Briefly, the important things to keep in mind are the lighting of the object, reflections from the object and making sure that there's sufficient overlap between successive photos.\nI didn't bother too much about the lighting and just used the natural daylight light in the room while keeping all the lights in the room on. Some of the photos came out a bit dark, but it didn't seem to matter too much. To remove the reflections from the mask I sprinkled some talcum powder on it and spread it all over with a paint brush. I took as many photos as possible from all the angles, about 120 photos which were probably more than necessary, in order to make sure that the photos overlapped each other. The photos were then fed into the photogrammetry software which created a sufficiently accurate 3d mesh of the mask.", "step_imgs": ["https://cdn.instructables.com/FB9/M1FA/JTWS8KFO/FB9M1FAJTWS8KFO.LARGE.jpg", "https://cdn.instructables.com/FKZ/VAQE/JTWS8K4D/FKZVAQEJTWS8K4D.LARGE.jpg", "https://cdn.instructables.com/FP9/8F5Y/JTWS8K88/FP98F5YJTWS8K88.LARGE.jpg", "https://cdn.instructables.com/FGL/CX5N/JTWS8KDQ/FGLCX5NJTWS8KDQ.LARGE.jpg", "https://cdn.instructables.com/F1S/V41E/JTWS8KAY/F1SV41EJTWS8KAY.LARGE.jpg", "https://cdn.instructables.com/FHD/EM2J/JTWS8KH2/FHDEM2JJTWS8KH2.LARGE.jpg"], "step_title": "Step 2: Using Photogrammetry"}, {"step": 3, "steps_text": "Once you have the 3D mesh of the model of the mask, you can use the mesh to recreate and reverse engineer the exact 3D shape and model of the mask in a CAD software. It is not necessary to be extremely precise while modeling and deviations in the range of +0.5 mm to 1.0 mm are acceptable. The model of the mask has to be larger than the mesh because otherwise he frame will not fit the mask.\nIt is important to bear in mind that the mesh of the mask is not to scale. To scale the 3D model that has been created so that it matches the actual mask, I used the same method of scanning, tracing and creating a 2D sketch that I used in steps 2 and 3 in the V 1.0. The 2D sketch is to scale and the 3D model of the mask frame that has been created can be scaled so that it matches the 2D sketch.", "step_imgs": ["https://cdn.instructables.com/FH3/76ZV/JTWS8NX9/FH376ZVJTWS8NX9.LARGE.jpg", "https://cdn.instructables.com/F4Z/8R0O/JTWS8NYW/F4Z8R0OJTWS8NYW.LARGE.jpg"], "step_title": "Step 3: Reverse Engineering the Mask's Profile"}, {"step": 4, "steps_text": "Once the 3D model of the diving mask has been created, it will serve as the base model around which the mask frame can be modeled. The mask frame has to make contact with the front and on all of the sides of the diving mask, with the allowance of a few millimeters. The mask frame can be attached to the mask either with a strap or with an attachment that is fitted at the back of the mask frame and which holds it onto the mask.\nThe mask frame can be modeled by offsetting the surfaces of the diving mask by about 1 mm so that we are sure that the mask frame is larger than the diving mask. These surfaces can then be thickened externally to create the solid 3D model of the mask frame. One can use one's imagination and design sense while creating the mask frame.\nFor instance I tried to maintain the design and profile of the original mask as much as possible and I added some space for a hole at the top so that a mount for a compact underwater camera such as a GoPro can be fitted onto the mask frame.\nWhile modeling the mask frame, it is not necessary to be too precise as long as the 3D model of the mask frame is larger than the diving mask. A few millimeters here and there in excess don't matter that much. The idea is to make an external frame that fits onto the diving mask.", "step_imgs": ["https://cdn.instructables.com/F8V/4V8X/JTWS8PHV/F8V4V8XJTWS8PHV.LARGE.jpg", "https://cdn.instructables.com/FWJ/1HP6/JTWS8PGU/FWJ1HP6JTWS8PGU.LARGE.jpg"], "step_title": "Step 4: Creating the 3D Model of the Mask Frame"}, {"step": 5, "steps_text": "To improve the ease of moving and sliding the lenses up and down the frame, a geared mechanism with a pinion that moves on a linear guide with a rack, was conceived. Essentially, by turning a knob which is connected to the pinion, the lens can be moved up or down the rack, with just one hand. To keep the lens sliding mechanism in its place a locking mechanism has also been incorporated along with the knob. This has greatly simplified the minute adjustment and positioning of the lenses.\nThe travel length of the linear guide mechanism is determined by the position of the eye in relation to the mask and also the shape of the mask, in my case I needed a travel length of 3 cm. This was covered in steps 2 to 6 of the V 1.0.", "step_imgs": ["https://cdn.instructables.com/FCZ/73OS/JTWS9649/FCZ73OSJTWS9649.LARGE.jpg"], "step_title": "Step 5: Linear Guide Mechanism for Lens Movement"}, {"step": 6, "steps_text": "3D Printing Filament (PLA) - as the parts in this project won't take much load I would recommend to use PLA due to its facility of printing. One can choose their preferred colour of filament, I decided to go with black as it would seamlessly integrate with the colour of my existing mask.\n3D Printer - Creality Ender 3 highly recommended.\nM5 Bolts x 8 - I tried 3D printing the bolts but they were not strong enough. I would advise using stainless steel bolts as seawater is unforgiving and will quickly corrode any other metal. You will require 4 bolts to be of length 1 cm and the other 4 to be of length 3 cm.\nClear Acrylic - 3 mm thick clear acrylic sheets will be required for encasing the lenses, as was done in V 1.0.", "step_imgs": ["https://cdn.instructables.com/F7F/P2BW/JTWSU50N/F7FP2BWJTWSU50N.LARGE.jpg"], "step_title": "Step 6: Materials Needed"}, {"step": 7, "steps_text": "All the parts have been modeled with respect to ease of 3D printing. A considerable amount of time went in designing the parts keeping in mind the structural strength of the parts as well as the feasibility of 3D printing. Ideally, I would have liked to print fewer parts, but I had to split some of the parts into smaller units because it was not possible to print those parts in one go.\nI have sliced the model in a way that no component has any overhangs and thus can be printed without supports. The complete list of the parts with their 3d printing specifications (stl's and g-codes) are in the file above.", "step_imgs": ["https://cdn.instructables.com/F9H/X8DT/JTWSU50P/F9HX8DTJTWSU50P.LARGE.jpg", "https://cdn.instructables.com/FG7/6ACT/JTWSU51B/FG76ACTJTWSU51B.LARGE.jpg", "https://cdn.instructables.com/FUV/EEES/JTWSU4UF/FUVEEESJTWSU4UF.LARGE.jpg"], "step_title": "Step 7: 3D Printing Specifications"}, {"step": 8, "steps_text": "The key to a well functioning mechanism, is finding the right tolerances. It took me several prototypes, from fits being too tight to components being too loose, to finally achieve the correct tolerances. Unfortunately tolerances depend on the precision of the 3d printer being used and thus might need to be altered for specific printers. I used the Creality Ender 3 to print the parts using tolerance of +0.25 mm while friction fit parts were of +0.1 mm. These settings lead to successful results.\nTherefore to analyse and gauge the required tolerances I have prepared a test print file of the section of the mechanism. This way one can prototype faster and have less waste. Once you have achieved the wanted results you are ready for the next steps.", "step_imgs": ["https://cdn.instructables.com/F0U/5ZA0/JTWSUDK0/F0U5ZA0JTWSUDK0.LARGE.jpg"], "step_title": "Step 8: Tolerance Test Sample"}, {"step": 9, "steps_text": "Thanks to the advancements in photogrammetry and its increased user-friendliness I was able to create a sufficiently accurate add-on frame for my mask that fitted it closely. Additionally, I find that it also looks better than the acrylic frame in V 1.0.", "step_imgs": ["https://cdn.instructables.com/F27/SL1W/JTWSU50M/F27SL1WJTWSU50M.LARGE.jpg", "https://cdn.instructables.com/F18/J52D/JTWSU520/F18J52DJTWSU520.LARGE.jpg", "https://cdn.instructables.com/FZ0/MY1L/JTWSU51X/FZ0MY1LJTWSU51X.LARGE.jpg", "https://cdn.instructables.com/FYU/K0PJ/JTWSU51Z/FYUK0PJJTWSU51Z.LARGE.jpg", "https://cdn.instructables.com/F11/T60N/JTWSU52J/F11T60NJTWSU52J.LARGE.jpg", "https://cdn.instructables.com/F6K/Z3MY/JTWSU51Y/F6KZ3MYJTWSU51Y.LARGE.jpg", "https://cdn.instructables.com/FCW/AT9L/JTWS8YNK/FCWAT9LJTWS8YNK.LARGE.jpg"], "step_title": "Step 9: Mask Frame From Photogrammetry"}, {"step": 10, "steps_text": "Press fit the four threaded inserts on either side of the frame, by gently tapping the inserts with a mallet. Once the insert is flush with the side of the frame, screw on the Linear Guide Rails on each side of the frame with the M5 3D printed screws.", "step_imgs": ["https://cdn.instructables.com/F4C/VXRJ/JTWSU58W/F4CVXRJJTWSU58W.LARGE.jpg", "https://cdn.instructables.com/FPZ/MB7Y/JTWSU543/FPZMB7YJTWSU543.LARGE.jpg", "https://cdn.instructables.com/F7K/CAFK/JTWSU54M/F7KCAFKJTWSU54M.LARGE.jpg", "https://cdn.instructables.com/F2M/9FKN/JTWSU558/F2M9FKNJTWSU558.LARGE.jpg", "https://cdn.instructables.com/FT6/ZY20/JTWSU55U/FT6ZY20JTWSU55U.LARGE.jpg", "https://cdn.instructables.com/F9N/XNEM/JTWSU56J/F9NXNEMJTWSU56J.LARGE.jpg", "https://cdn.instructables.com/FIS/ISYH/JTWSU578/FISISYHJTWSU578.LARGE.jpg", "https://cdn.instructables.com/FYU/Y3X3/JTWSU58A/FYUY3X3JTWSU58A.LARGE.jpg", "https://cdn.instructables.com/F55/X3HI/JTWSU59F/F55X3HIJTWSU59F.LARGE.jpg"], "step_title": "Step 10: Mounting the Guide Rails on the Frame"}, {"step": 11, "steps_text": "The rack can be slid into the Linear Guide and held in a place with a bit of CA glue.\nThe Lens Slider is prepared by inserting the knob in its hole and joining it to the pinion. The locking bolt is then inserted through the knob and joined to the locking plate.", "step_imgs": ["https://cdn.instructables.com/FJ3/9AQV/JTWSU59Z/FJ39AQVJTWSU59Z.LARGE.jpg", "https://cdn.instructables.com/FL7/E1C5/JTWSU5A0/FL7E1C5JTWSU5A0.LARGE.jpg", "https://cdn.instructables.com/FV3/R126/JTWSU5A1/FV3R126JTWSU5A1.LARGE.jpg", "https://cdn.instructables.com/FNF/33W7/JTWSU9W7/FNF33W7JTWSU9W7.LARGE.jpg", "https://cdn.instructables.com/FZJ/DBVL/JTWSUA0X/FZJDBVLJTWSUA0X.LARGE.jpg", "https://cdn.instructables.com/FFC/9H7F/JTWSUA10/FFC9H7FJTWSUA10.LARGE.jpg", "https://cdn.instructables.com/F4S/XOVF/JTWSUA5R/F4SXOVFJTWSUA5R.LARGE.jpg", "https://cdn.instructables.com/FS7/8JCF/JTWSU4SK/FS78JCFJTWSU4SK.LARGE.jpg", "https://cdn.instructables.com/F9L/KDZI/JTWSUA9A/F9LKDZIJTWSUA9A.LARGE.jpg", "https://cdn.instructables.com/FNN/82VL/JTWSUACA/FNN82VLJTWSUACA.LARGE.jpg", "https://cdn.instructables.com/F88/R164/JTWSUAFU/F88R164JTWSUAFU.LARGE.jpg", "https://cdn.instructables.com/F4X/GLZK/JTWSUAKO/F4XGLZKJTWSUAKO.LARGE.jpg"], "step_title": "Step 11: Assembling the Linear Mechanism"}, {"step": 12, "steps_text": "This step is identical to Step 10 of V 1.0 and the photos are self-explanatory. It is important to ensure that the lenses and lens covers are clean before gluing because once glued the lenses and the inner surfaces of the lens covers are inaccessible. One should also be careful not to smear epoxy on the lens covers because it is virtually impossible to clean it later on.", "step_imgs": ["https://cdn.instructables.com/FWD/IGHN/JTWSU4WJ/FWDIGHNJTWSU4WJ.LARGE.jpg", "https://cdn.instructables.com/F7T/3IQ2/JTWSU4W4/F7T3IQ2JTWSU4W4.LARGE.jpg", "https://cdn.instructables.com/FCP/TY2F/JTWSU4WI/FCPTY2FJTWSU4WI.LARGE.jpg", "https://cdn.instructables.com/FQ0/86A1/JTWSU4W6/FQ086A1JTWSU4W6.LARGE.jpg", "https://cdn.instructables.com/FQ0/1C9A/JTWSU4Y6/FQ01C9AJTWSU4Y6.LARGE.jpg", "https://cdn.instructables.com/FD4/FVQC/JTWSU4YP/FD4FVQCJTWSU4YP.LARGE.jpg", "https://cdn.instructables.com/F6I/IPIE/JTWSU4WK/F6IIPIEJTWSU4WK.LARGE.jpg", "https://cdn.instructables.com/F6X/FSVX/JTWSU4YS/F6XFSVXJTWSU4YS.LARGE.jpg", "https://cdn.instructables.com/FAO/8VAJ/JTWSU4W5/FAO8VAJJTWSU4W5.LARGE.jpg", "https://cdn.instructables.com/FJE/BFFD/JTWSU4ZH/FJEBFFDJTWSU4ZH.LARGE.jpg"], "step_title": "Step 12: Gluing the Lens Holder"}, {"step": 13, "steps_text": "The assembly of the Lens Rotating and Blocking mechanism is similar to Step 14 of V 1.0 except that I have now given the provision to add two more of the movable, sliding teeth that block the gear in place. This has been done to reduce the amount of play that there was in the V 1.0 and to make the lens frame more firm. Although in V 2.0 I can fit 4 teeth I found that the mechanism worked sufficiently well with just 3 teeth.\nThe Lens Frame with the Rotating mechanism is then assembled to the Lens Slider mechanism.", "step_imgs": ["https://cdn.instructables.com/FWL/R3XT/JTWS5KGL/FWLR3XTJTWS5KGL.LARGE.jpg", "https://cdn.instructables.com/F66/ZQEB/JTWS5KA6/F66ZQEBJTWS5KA6.LARGE.jpg", "https://cdn.instructables.com/FH1/N6AV/JTWS5KB1/FH1N6AVJTWS5KB1.LARGE.jpg", "https://cdn.instructables.com/F2C/8TLT/JTWS5KD7/F2C8TLTJTWS5KD7.LARGE.jpg", "https://cdn.instructables.com/FR4/4G4L/JTWS5KF8/FR44G4LJTWS5KF8.LARGE.jpg", "https://cdn.instructables.com/FRB/XZL0/JTWS5KHF/FRBXZL0JTWS5KHF.LARGE.jpg", "https://cdn.instructables.com/FIJ/OKP6/JTWS5KKB/FIJOKP6JTWS5KKB.LARGE.jpg", "https://cdn.instructables.com/FYT/6EH8/JTWS5KKT/FYT6EH8JTWS5KKT.LARGE.jpg", "https://cdn.instructables.com/FLD/23QZ/JTWS5KLO/FLD23QZJTWS5KLO.LARGE.jpg"], "step_title": "Step 13: Assembling the Lens Rotating and Blocking Mechanism"}, {"step": 14, "steps_text": "The modular Fastening Blocks that are required to attach the mask frame onto the mask are best fitted from the front of the mask frame with the 4 M5 stainless steel bolts.\nI chose to have modular blocks instead of having blocks that are an integral part of the frame because the modular blocks can be modified to have side mounts for a torch or an accessory that one may want to add to the side of the mask frame. Modular blocks can therefore be easily interchanged and they add greater versatility to the mask frame.", "step_imgs": ["https://cdn.instructables.com/FW9/IBD5/JTWS5BN5/FW9IBD5JTWS5BN5.LARGE.jpg", "https://cdn.instructables.com/FRM/V7TT/JTWS5BR1/FRMV7TTJTWS5BR1.LARGE.jpg", "https://cdn.instructables.com/F3A/HSKF/JTWS5BUX/F3AHSKFJTWS5BUX.LARGE.jpg", "https://cdn.instructables.com/FB5/K3LT/JTWS5BYS/FB5K3LTJTWS5BYS.LARGE.jpg", "https://cdn.instructables.com/FYB/662S/JTWS5C2Q/FYB662SJTWS5C2Q.LARGE.jpg", "https://cdn.instructables.com/FIU/N6DW/JTWS5C2S/FIUN6DWJTWS5C2S.LARGE.jpg", "https://cdn.instructables.com/FQW/53F6/JTWS5C7B/FQW53F6JTWS5C7B.LARGE.jpg", "https://cdn.instructables.com/FY2/I30P/JTWS5C7E/FY2I30PJTWS5C7E.LARGE.jpg", "https://cdn.instructables.com/FL5/3ZYM/JTWS5C7G/FL53ZYMJTWS5C7G.LARGE.jpg"], "step_title": "Step 14: Attaching the Fastening Blocks"}, {"step": 15, "steps_text": "The mask is now ready to be inserted into the frame and the two can be fastened to each other by bolting the two straps to the fastening blocks at the back of the mask. The bolts are tightened till the frame is firmly fixed to the mask.", "step_imgs": ["https://cdn.instructables.com/FWW/BKEU/JTWS5I5T/FWWBKEUJTWS5I5T.LARGE.jpg", "https://cdn.instructables.com/FHR/WX4A/JTWS5I6N/FHRWX4AJTWS5I6N.LARGE.jpg", "https://cdn.instructables.com/FAK/PBUV/JTWS5I6T/FAKPBUVJTWS5I6T.LARGE.jpg", "https://cdn.instructables.com/FIJ/TH1E/JTWS5I7N/FIJTH1EJTWS5I7N.LARGE.jpg", "https://cdn.instructables.com/FG3/NZLP/JTWS5I8L/FG3NZLPJTWS5I8L.LARGE.jpg", "https://cdn.instructables.com/FGO/0Q1F/JTWS5I9F/FGO0Q1FJTWS5I9F.LARGE.jpg", "https://cdn.instructables.com/F0Z/EWRA/JTWS5IAX/F0ZEWRAJTWS5IAX.LARGE.jpg"], "step_title": "Step 15: Mounting the Frame to the Mask"}, {"step": 16, "steps_text": "The lens frame with the lens sliding mechanism can then be inserted into the linear guide. The ends of the linear guide can then be closed with the plugs to prevent the slider from sliding out of the linear guide.\nThe last image describes the lens sliding mechanism and how it's used.", "step_imgs": ["https://cdn.instructables.com/FX9/7FLS/JTWS5JU3/FX97FLSJTWS5JU3.LARGE.jpg", "https://cdn.instructables.com/FS2/P6FJ/JTWS5JN3/FS2P6FJJTWS5JN3.LARGE.jpg", "https://cdn.instructables.com/FWP/2RF3/JTWS5JNZ/FWP2RF3JTWS5JNZ.LARGE.jpg", "https://cdn.instructables.com/F6Y/YXR9/JTWS91GP/F6YYXR9JTWS91GP.LARGE.jpg", "https://cdn.instructables.com/FJE/CTK4/JTWS90AC/FJECTK4JTWS90AC.LARGE.jpg"], "step_title": "Step 16: Assembling and Using the Lens Frame and Sliding Mechanism"}, {"step": 17, "steps_text": "The creation of a customized mask frame with the use of photogrammetry has allowed me to increase the functionality of my ordinary, conventional diving mask. I can now add movable prescription lenses and various kinds of accessories such as mounts for cameras and flashlights which add greater value to the experience of diving.", "step_imgs": ["https://cdn.instructables.com/FOW/A7M8/JTWS5MBF/FOWA7M8JTWS5MBF.LARGE.jpg"], "step_title": "Step 17: The Modular Mask of the Future"}, {"step": 18, "steps_text": "This project would not have been possible if I was not introduced to the latest developments in photogrammetry that my son, Satya, shared with me. Moreover, his invaluable experience in 3D printing was indispensable for the execution of this project. Finally, his photographic skills and documentation also came in handy.", "step_imgs": [], "step_title": "Step 18: Acknowledgement"}], "channel": ""}, {"category": "", "description": "The Arduino is the ultimate tool in the Maker's arsenal. You should be able to build your own! In the early days of the project, circa 2005, the design was all through-hole parts and communication was via a RS232 serial cable. The files are still available, so you can make your own, and I have, but not many computers have the older serial ports.\nThe Arduino USB version followed shortly, and probably contributed greatly to the project's success because it allowed easy connection and communication. It did, however come at a cost: the FTDI communication chip only came in a surface mount package. Plans are still available for it as well, but surface mount soldering is beyond most beginners.\nNewer Arduino boards use 32U4 chips with built in USB (Leonardo), or separate Atmel chips for USB (UNO), both which still leave us in surface mount territory. At one point there was \"TAD\" from Dangerous Devices that used a through hole PIC to do USB, but I can't find anything left on the web of them.\nSo here we are. I firmly believe a beginner, like a Jedi Knight, should be able to build their own Arduino (light sabre). \"An elegent weapon from a more civilize age\". My solution: make a through-hole FTDI chip using a surface mount package! That allows me to do the surface mount, and offer the remaining project as DIY through-hole! I also designed it in Open Source KiCad, so you can study the design files, modify them, and spin your own version.\nIf you think this is a stupid idea, or love surface mount soldering, check out my Leonardo Clone, otherwise, read on . . .", "title": "DIY Arduino-Compatible Clone", "url": "https://www.instructables.com/id/DIY-Arduino-2/", "section": "technology", "steps": [{"step": 1, "steps_text": "The full bill of materials is located at https://github.com/aspro648/Arduino/tree/master/D...\nThe unique parts of this are the circuit boards, one for the Arduino, and one for the FTDI chip. You can have OSH Park make them for you, or use the design files with your favorite board house.\nA kit for this project is available on Tindie.com. Purchasing the kit will save you the time and expense of ordering from several different vendors and avoid the minimum PCB order premium. It will also provide you a tested surface-mounted FDTI through-hole chip as well a pre-flashed Atmega.\nTools and Supplies:\nFor my workshops, I use SparkFun's Beginner's ToolKit which has most of what you need:\nSoldering iron.\nSolder\nWire nippers\nDesoldering braid (hopefully not needed, but you never know).", "step_imgs": ["https://cdn.instructables.com/F66/TH1S/JTMSUPXI/F66TH1SJTMSUPXI.LARGE.jpg"], "step_title": "Step 1: Parts and Supplies"}, {"step": 2, "steps_text": "I'm not going to try and teach you soldering. Here are a couple of my favorite videos that show it much better than I can:\nCarrie Ann from Geek Girl Diaries.\nColin from Adafruit\nIn general:\nFind the location on the PCB using the silk screen markings.\nBend the component leads to fit the foot print.\nSolder the leads.\nTrim the leads", "step_imgs": ["https://cdn.instructables.com/FYQ/R1D5/JTMSUPXQ/FYQR1D5JTMSUPXQ.LARGE.jpg", "https://cdn.instructables.com/FGU/ZJPF/JTMSUPXS/FGUZJPFJTMSUPXS.LARGE.jpg", "https://cdn.instructables.com/FAP/V9JO/JTOMY6WW/FAPV9JOJTOMY6WW.LARGE.jpg"], "step_title": "Step 2: Ladies and Gentlemen, Start Your Irons"}, {"step": 3, "steps_text": "Let's start with resistors since they are the most plentiful, lowest seating, and easiest to solder. They are more heat resistant and will give you a chance to brush up on your technique. They also have no polarity, so you can put them in either way.\nStart with the three 10K ohm (brown - black - orange -gold), which are in a couple of places on the board (see picture). These are \"pull-up\" resistors that keep the signal at 5V unless they are actively pulled low.\nPair of 22 ohm (red - red - black - gold) are in the upper left corner. These are part of the USB communication circuit.\nPair of 470 ohm (Yellow, Violet, Brown, Gold) are the next ones down. These are current limiting resistors for the RX/TX LEDs.\nSingle 4.7K ohm (Yellow, Violet, Red, Gold). An odd-ball for the FTDI VCC signal.\nAnd finally, a pair of 1K ohm (Brown, Black, Red, Gold). These are current limiting resistors for the power and D13 LEDs (330 ohm would work, but I don't like them too bright).", "step_imgs": ["https://cdn.instructables.com/FHZ/BABW/JTT5HRJR/FHZBABWJTT5HRJR.LARGE.jpg", "https://cdn.instructables.com/FP6/YWPA/JTMSUPO2/FP6YWPAJTMSUPO2.LARGE.jpg", "https://cdn.instructables.com/FM2/WQMH/JTMSUPO9/FM2WQMHJTMSUPO9.LARGE.jpg", "https://cdn.instructables.com/FWE/JC7D/JTMSUPOF/FWEJC7DJTMSUPOF.LARGE.jpg", "https://cdn.instructables.com/FKJ/CPBM/JTMSUPOG/FKJCPBMJTMSUPOG.LARGE.jpg"], "step_title": "Step 3: Resistors"}, {"step": 4, "steps_text": "Next up we have the diode which protects the circuit from reverse current from power jack. Most, but not all components will react poorly to reverse polarity.\nIt has a polarity which is marked by a silver band on one end.\nMatch it with the silk screen marking and solder in place.", "step_imgs": ["https://cdn.instructables.com/F7F/5GHJ/JTMSUPOP/F7F5GHJJTMSUPOP.LARGE.jpg"], "step_title": "Step 4: Diode"}, {"step": 5, "steps_text": "There are two voltage regulators, and the main one is a 7805 which will regulate twelve volts from the jack down to 5 volts that the Atmega 328 needs. There are large copper features on the printed circuit board to help dissipate heat. Bend the leads so that the back touches the board with the hole aligned with the hole in part and solder in place.", "step_imgs": ["https://cdn.instructables.com/FYY/XVF7/JTWRZ5WP/FYYXVF7JTWRZ5WP.LARGE.jpg"], "step_title": "Step 5: Voltage Regulator (5V)"}, {"step": 6, "steps_text": "Sockets allow IC chips to be inserted and removed without soldering. I think of them as insurance because they are cheap and allow you to replace a blown chip or reorient the IC if put in backward. They have a divot in one end to show the direction of the chip, so match it to the silk screen. Solder two pins and then verify it is seated correctly before soldering the remaining pins.", "step_imgs": ["https://cdn.instructables.com/FVU/3XND/JTMSUPPJ/FVU3XNDJTMSUPPJ.LARGE.jpg"], "step_title": "Step 6: Sockets"}, {"step": 7, "steps_text": "Arduino's typically have a reset button to restart the chip if it hangs up or needs to restart. Yours is in the upper left corner. Press it in place and solder.", "step_imgs": ["https://cdn.instructables.com/F0K/IBYK/JTMSUPQ3/F0KIBYKJTMSUPQ3.LARGE.jpg"], "step_title": "Step 7: Button"}, {"step": 8, "steps_text": "There are a number of LEDs to indicate status. LEDs have a polarity. The long leg is the anode, or positive, and goes in the round pad with the \"+\" next to it. The short leg is the cathode, or negative, and goes in the square pad.\nThe color is arbitrary, but I typically use:\nYellow for RX/TX which blink when the chip is communicating or being programmed.\nGreen for the the D13 LED which can be used to by the program to indicate events.\nRed to show 5 volt power is available either via USB or the power jack.", "step_imgs": ["https://cdn.instructables.com/FZI/TF13/JTMSUPQI/FZITF13JTMSUPQI.LARGE.jpg", "https://cdn.instructables.com/F2C/3CRD/JTT5MOFA/F2C3CRDJTT5MOFA.LARGE.jpg", "https://cdn.instructables.com/FEX/9YIZ/JTT5MON0/FEX9YIZJTT5MON0.LARGE.jpg"], "step_title": "Step 8: LEDs"}, {"step": 9, "steps_text": "Ceramic capacitors have no polarity.\nPower smoothing capacitors are typically used to remove transients from the power supply to chips. The values are typically specified in the component's data sheet.\nEach IC chip in our design has a 0.1uF capacitor for power smoothing.\nThere are two 1uF capacitors for smoothing power around the 3.3 volt regulator.\nAdditionally, there is a 1uF capacitor that helps with the timing of the software reset function.", "step_imgs": ["https://cdn.instructables.com/FL9/FVIS/JTMSUPQX/FL9FVISJTMSUPQX.LARGE.jpg", "https://cdn.instructables.com/FGM/XX4A/JTMSUPR5/FGMXX4AJTMSUPR5.LARGE.jpg"], "step_title": "Step 9: Ceramic Capacitors"}, {"step": 10, "steps_text": "Electrolytic Capacitors do have a polarity which must be observed. They typically come in larger values than ceramic capacitors, but in this case we have 0.33 uF capacitor for power smoothing around the 7805 regulator.\nThe long leg of the device is positive and goes in the square pad marked \"+\". These tend to go \"pop\" if put in backward, so get it right or you will need a replacement.", "step_imgs": ["https://cdn.instructables.com/FR8/I4OR/JTMSUPS8/FR8I4ORJTMSUPS8.LARGE.jpg"], "step_title": "Step 10: Electrolytic Capacitors"}, {"step": 11, "steps_text": "While the Atmega chip runs on 5 volts, the FTDI USB chip needs 3.3 volts to operate correctly. To provide this, we use a MCP1700 and since it requires very little current, it is in a small TO-92-3 package like transistors instead of the big TO-220 package like the 7805.\nThe device has a flat face. Match it to the silk screen and adjust the component height about a quarter inch above the board. Solder in place.", "step_imgs": ["https://cdn.instructables.com/F7E/5Z3R/JTMSUPSO/F7E5Z3RJTMSUPSO.LARGE.jpg"], "step_title": "Step 11: 3.3 Voltage Regulator"}, {"step": 12, "steps_text": "The beauty of Arduino is the standardized footprint and pinout. The headers allow plugging in \"shields\" that allow quickly changing hardward configurations as needed.\nI typically solder one pin of each header in and then verify the alignment before soldering the remaining pins.", "step_imgs": ["https://cdn.instructables.com/FG8/ZCED/JTT5MP0H/FG8ZCEDJTT5MP0H.LARGE.jpg"], "step_title": "Step 12: Headers"}, {"step": 13, "steps_text": "Atmega chips have an internal resonator which can run at different frequencies up to 8 Mhz. An external timing source allows the chip to run up to 20 Mhz, but, the standard Arduino use 16 Mhz which was the maximum speed of the Atmega8 chips used in the original design.\nMost Arduino's use crystals, which are more accurate, but they require additional capacitors. I decided to use a resonator, which is accurate enough for most work. It does not have a polarity, but I usually face the marking outward so curious makers can tell you are running a standard setup.", "step_imgs": ["https://cdn.instructables.com/FSC/QIC5/JTMSUPTJ/FSCQIC5JTMSUPTJ.LARGE.jpg"], "step_title": "Step 13: Resonator"}, {"step": 14, "steps_text": "Most Arduino don't have fuses, but any Maker who is learning will quite often (at least in my case) hook things up incorrectly. A simple re-setable fuse will help keep from releasing the \"magic smoke\" necessitating chip replacement. This fuse will open if too much current is pulled, and will reset itself when it cools off. It has no polarity, and kinks in the legs hold it above the board.", "step_imgs": ["https://cdn.instructables.com/FH9/HPPY/JTMSUPVA/FH9HPPYJTMSUPVA.LARGE.jpg"], "step_title": "Step 14: Fuse"}, {"step": 15, "steps_text": "Two more headers, these one with male pins. Near the USB connector are three pins which allow switching between USB power and the jack using a jumper. An UNO has circuity to do this automatically, but I haven't been able to replicate that in through-hole form.\nThe second header is a six-pin \"in system programming\" header. This allows connecting an external programmer to reprogram the Atmega directly if needed. If you buy my kit, the chip already has firmware loaded, or the Atmega can be removed from the socket and placed directly in a programming socket, so this header is rarely used and therefore optional.", "step_imgs": ["https://cdn.instructables.com/FXU/7OV6/JTMSUPVB/FXU7OV6JTMSUPVB.LARGE.jpg"], "step_title": "Step 15: Headers"}, {"step": 16, "steps_text": "Instead of USB, a standard 5.5 x 2.1 mm jack can be used to bring in external power. This supplies the pin marked \"Vin\" and powers the 7805 voltage regulator which makes 5 volts. The center pin is positive and the input can be up to 35V, although 12V is more typical.", "step_imgs": ["https://cdn.instructables.com/FNM/C0NQ/JTT5MPD1/FNMC0NQJTT5MPD1.LARGE.jpg"], "step_title": "Step 16: Power Jack"}, {"step": 17, "steps_text": "Newer Arduinos like the Leonardo use a USB micro connection, but the original USB B connection is robust and cheap and you probably have lots of cables laying around. The two large tabs are not electrically connected, but are soldered for mechanical strength.", "step_imgs": ["https://cdn.instructables.com/F9F/ML1R/JTT5MQL0/F9FML1RJTT5MQL0.LARGE.jpg"], "step_title": "Step 17: USB"}, {"step": 18, "steps_text": "Time to install the chips. Verify the orientation. If the socket is in backwards, just ensure the chip is matching the silk screen markings. In the orientation we have been working with, the bottom two chips are upside down.\nInsert the chip so the legs are aligned with the holds. ICs come from the manufacture with the legs slightly splayed, so will need to be bent to vertical. This is usually already done for you in my kits. Once you are are sure of the orientation, gently press both sides of the chip. Check to make sure no legs got folded over by accident.", "step_imgs": ["https://cdn.instructables.com/FMQ/74N5/JTMSUPXA/FMQ74N5JTMSUPXA.LARGE.jpg"], "step_title": "Step 18: Chips"}, {"step": 19, "steps_text": "The bootloader is a small bit of code on the chip that allows loading code easily via USB. It runs for the first few seconds on power up looking for updates, and then launches the existing code.\nThe Arduino IDE makes flashing firmware easy, but it does require an external programmer. I use my own AVR Programmer, and will of course, sell you a kit for that. If you do have a programmer, you don't really need an Arduino since you can program the chip directly. Kind of a chick-and-egg thing.\nAnother option is to buy the Atmega with a bootloader already on it: https://www.adafruit.com/product/123\nI will point to you the official Arduino instructions since it could easily turn into it's own Instructable if we are not careful: https://www.arduino.cc/en/Hacking/Bootloader", "step_imgs": [], "step_title": "Step 19: Flashing the Bootloader"}, {"step": 20, "steps_text": "The power jumper is a manual way of selecting the source of power between 5 volts from USB or the power jack. Standard Arduinos have circuitry to switch automatically, but I wasn't able to implement it easily with through hole parts.\nIf the jumper is not installed, there is no power. If you select the jack, and have nothing plugged in, there is no power. That is why there is a red LED to show you if you have power.\nInitially, you want to see if the Arduino communicates via USB, so place the jumper to that setting. Plug your Arduino into your computer at watch carefully. If you get an \"unrecognized USB device\", unplug and start trouble shooting.\nOtherwise, use your Arduino IDE to upload the basic blink sketch. Use \"Arduino UNO\" as the board. Follow instructions here: https://www.arduino.cc/en/tutorial/blink", "step_imgs": ["https://cdn.instructables.com/FHZ/E60G/JTT5MQP5/FHZE60GJTT5MQP5.LARGE.jpg"], "step_title": "Step 20: Install Power Jumper and Connect"}, {"step": 21, "steps_text": "On initial power up, you are always looking for indications of success or failure, and are ready to unplug the board quickly if things are not going as expected. Don't loose heart if success isn't immediate. In my workshops, I try to encourage:\nPatience, this is not always easy, but usually worth it.\nPersistence, you won't solve the problem if you give up .\nPositive Attitude, you can figure this out, even if you need help to do so.\nWhen ever I am struggling with a problem, I always tell myself the harder it is to solve, the bigger the reward or learning will be for solving it.\nWith that in mind, start with the simple stuff:\nInspect the solder joints on the back of the board, retouching any joint that looks suspect.\nCheck that the IC chips are in the correct orientation and that none of the leads got folding in when inserted.\nIs the red LED on when plugged in? If not, check your power jumper and USB solder joints.\nCheck that other components that have polarity are correctly oriented.\nLook for other clues like error messages or components getting hot.\nIf you are still having trouble, ask for help. I write Instructables because I want to teach and help those who want to learn. Provide a good description of what the symptoms are and what steps you have done to find errors. A high resolution photograph of the front and back of the board may help as well. Never give up. Every struggle is a lesson.", "step_imgs": ["https://cdn.instructables.com/FAP/V9JO/JTOMY6WW/FAPV9JOJTOMY6WW.LARGE.jpg", "https://cdn.instructables.com/FHQ/YBGN/JTT5MT5N/FHQYBGNJTT5MT5N.LARGE.jpg"], "step_title": "Step 21: Troubleshooting"}], "channel": ""}, {"category": "", "description": "This is an instructable on how to build a 6x6x6 RGB LED (Common Anodes) Cube controlled by a Bluetooth App using an Arduino Nano. The entire build is easily adaptable to a say 4x4x4 or 8x8x8 Cube. This project is inspired by GreatScott. I decided to go for a more sophisticated build using bigger leds (8mm), with less distance + adding Bluetooth communication which makes adding new functions so much easier and also adds the capability of building an app to control the cube. This also allows me to e.g. code a Snake Game (3rd showcase video at the end). On top of that I added an Audio Visualizer mode which allows the cube to visualize an AUX Input e.g. Music using an MSGEQ7( showcase video at the end). Additionally I wrote an AnimationCreator application in Java with an easy to use UI to create and tweak Animations, so that anyone can build custom animations very quick. So the Sketch + Bluetooth App provides a framework for any LED Cube configuration and with the Animation Creator you do not need to worry about implementing custom animations.\nLinks to the Arduino Sketch and Bluetooth App:\nRGBCube_Arduino Sketch (Github)+Animation Creator.jar\nCubo Bluetooth App (Github)\nParts list for the Cube:\n216x RGB LED (Common Anode) (8mm)( AliExpress / Ebay)-> 6x6x6=216\nRibbon Cable (1m 40Pin should be sufficient) ( AliExpress / Ebay / Amazon)\nFemale and Male Headers (at least 4x40pin each) ( AliExpress / Ebay / Amazon)\nTinned Copper/Silver Wire 0.8mm (~25Meter) ( AliExpress / Ebay / Amazon)\nShrinking Tube (AliExpress / Ebay / Amazon)\nParts list for the Control Boards:\n7 x TLC5940 LED Driver ( Ebay / AliExpress)\n6 x IRF 9540 P-Channel MOSFETs ( Amazon / Ebay / AliExpress)\n8 x 10 uF Capacitors ( Amazon / Ebay / AliExpress)\n3 x 1000 uF Capacitors ( Amazon / Ebay / AliExpress)\n14x 2.2kOhm Resistors ( Amazon / Ebay / AliExpress)\n1 x 1kOhm Resistor ( Amazon / Ebay / AliExpress)\n7 x 28pin IC Sockets ( Amazon / Ebay / AliExpress)\n1 x Arduino Nano ( Amazon / Ebay / AliExpress)\n1 x 1N4001 Diode (Any common Diode) ( Amazon / Ebay / AliExpress)\n8 x 0.1uF Capacitors ( Ebay)\n1 x DC Jack PCB Mount ( Amazon / Ebay / AliExpress)\n1 x HC-05 Bluetooth Module ( Amazon / Ebay / AliExpress)", "title": "RGB LED Cube With Bluetooth App + AnimationCreator", "url": "https://www.instructables.com/id/RGB-LED-Cube-With-Bluetooth-App-AnimationCreator/", "section": "technology", "steps": [{"step": 1, "steps_text": "If you are not interested in theory about multiplexing than jump to Step 2 for the start of the actual build\nSince the hardware and software are equally big parts of this project, lets have a look at the theory first.\nThe brain of the cube is an Arduino Nano. It provides enough I/O to interract with the used LED Drivers as well as establish a Bluetooth connection to an HC-05 module and other control hardware. If you have looked at other LED Cube builds, you will know that most people use simple Shift registers to store brightness values of the colors of the individual LEDs. This build does not use Shift registers, but instead so called \"TLC5940\" LED Drivers. As we will see later this saves us a lot of time as well as tons of additional hardware (e.g. resistors).\nThe basic functionality of controlling the cube uses multiplexing. In this case we are multiplexing the 6 layers of the cube, meaning all Anodes(+) of all LEDs in a layer are connected, whereas the individual Cathodes of all LEDs in the same Column are connected towards the bottom. This means that if you want to light up the LED at position x=1,y=2,z=3,color: green you need to provide 5V at the Anode of Layer 3 and connect GND to the Cathode of the Column corresponding to Green Pin of x=1,y=2. So in reality at one point in time, only one layer of the Cube is actually turned on, but as you will see later in the Code we are turning off and on the individual Layers so fast, that our eye thinks the entire cube is on.\nTo control things such as brightness, animations and so on we use an HC-05 Bluetooth module connected to the Arduino Nano. It's very simple to use the module with an Arduino since you only need 4 Pin connection and can simply interface the module via the default Serial-Commuincation of the Arduino. Towards the end of this instructable you will se how easy it is to write your own Bluetooth App to control the Cube.\nNOTE:\nIn my schematic of the Arduino Circuit board you can also see a small schematic for interfacing a MSGEQ7 chipto process Audio Input, this is absolutely not necessary for the actual cube and is just an additional functionality I added, hence you can simply ignore the Schematic marked with \"MSGEQ7\"", "step_imgs": ["https://cdn.instructables.com/FI9/96FI/JT91V2B2/FI996FIJT91V2B2.LARGE.jpg"], "step_title": "Step 1: Theory"}, {"step": 2, "steps_text": "So lets have a look at how to build the Cube itself, before talking about the control circuit around the Arduino Nano.\nParts List for the Cube Construction :\n216x RGB LED (Common Anode) ( AliExpress / Ebay )-> 6x6x6=216\nRibbon Cable (1m 40Pin should be sufficient) ( AliExpress / Ebay / Amazon )\nFemale and Male Headers (at least 4x40pin) ( AliExpress / Ebay / Amazon )\nTinned Copper/Silver Wire 0.8mm (~25Meter) ( AliExpress / Ebay / Amazon )\nShrinking Tube (AliExpress / Ebay / Amazon )\nThe first thing to do, and I now it is tedious but necessary, we have to test the LEDs. To do that, we simple connect a power supply e.g 9V Battery block with clip to a breaboard. As you can see in picture 3 the longest Pin of the LEDs is the Anode (+) so you connect this pin to the +9V of the battery. Now before connecting GND to the individual colors Cathodes( Red,Green,Blue) add a 220Ohm resistor to each cathode to limit the current. Now have fun testing all colors of all 216 LEDs.\nIn the next step we will prepare the tested LEDs so that we can easily assemble them in columns later.", "step_imgs": ["https://cdn.instructables.com/F0N/EWE6/JTOMX1SR/F0NEWE6JTOMX1SR.LARGE.jpg", "https://cdn.instructables.com/F2U/IWY1/JT91V2JD/F2UIWY1JT91V2JD.LARGE.jpg", "https://cdn.instructables.com/FX8/24NP/JTCSFBD5/FX824NPJTCSFBD5.LARGE.jpg"], "step_title": "Step 2: Hardware: LED Cube Build"}, {"step": 3, "steps_text": "Before we can solder the LEDs into their respective rows we need to bend and cut the leads.\nAs you can see in the first picture i simple drilled a 8mm hole (for 8mm LEDs) into a piece of wood and drilled 3 very small drills to the left of the LED hole and another to the right of the hole. These drills are markers for bending the leads correctly and should have a distance of about 1cm from the middle of the hole for the LED.\nThis technique is inspired by Steve Manley , you can find a video of him doing this in a slight variation on YouTube.\nBefore you cut and bend the leads around the drills as seen in picture 2 and 3, make sure that the orientation of the leads corresponds to picture 1 (Blue on the top to the left ,then green, then anode + to the right, and red left again). The circle you bent into the leads should have a big enough diameter to fit the tinned copper wire (0.8mm). This step makes it magnificently easier to solder the LEDs in place nicely.\nNow that all the LEDs are prepared, we want to assemble them in rows of 6 where the Anodes(+) are connected:\nBuild a small jig as seen in picture 6, drill 6 holes (diameter 0.8mm) with a distance of 2.5cm to the next hole. This allows us fit 6 LEDs at a time into the jig\nTo connect the anodes we need a straight tinned copper wire piece of ~ 16cm length (with some extra margin). To get the wire nice and straight you can mount one end of the wire into e.g an electric drill , secure about 2m of wires at a time on a table, then holding the drill so that the wire is stretched and tight and power on the drill for a few seconds with straightens out the wire very quick. You can then cut the wire right at where you secured the piece. You can also use two pliers and tighten smaller pieces of wire at a time, but that is much more tedious\nOnce you have 16cm long wires you direct them through the Anode(+) holes of the LEDs in the jig and solder the Anode pins to the wire (Picture 7)\nFor the entire cube we will need 6x6 =36 of these LED rows", "step_imgs": ["https://cdn.instructables.com/FVH/B4CN/JT91V2EZ/FVHB4CNJT91V2EZ.LARGE.jpg", "https://cdn.instructables.com/FZN/9UB0/JT91V2F1/FZN9UB0JT91V2F1.LARGE.jpg", "https://cdn.instructables.com/FDM/3683/JT91V2HK/FDM3683JT91V2HK.LARGE.jpg", "https://cdn.instructables.com/FS4/5SME/JT91V2JH/FS45SMEJT91V2JH.LARGE.jpg", "https://cdn.instructables.com/FBV/OLZ3/JT91V2JI/FBVOLZ3JT91V2JI.LARGE.jpg", "https://cdn.instructables.com/FPV/TWMY/JT91V2JE/FPVTWMYJT91V2JE.LARGE.jpg"], "step_title": "Step 3: LED Rows"}, {"step": 4, "steps_text": "As I have mentioned before, we will multiplex the layers of the cube, but for the assembly it is easier to build 6 Walls of 6x6 LEDs and then assembling them next to each other and simply run a single tinned copper wire connecting the anodes of the rows in a layer together.\nBeware that this step takes a lot of time and patience to do it right, in total you will have to solder around 1000 solder joints for the build so take your time!\nTo build an LED Wall:\nFor the jig: We need a piece of wood with 6 carved lines to fit 6 rows one above the other to build a wall. You can see the jig itself in picture 2 (distances between rows: 2.5cm)\nYou fit the 6 rows of LEDs into the carvings, with the Anode wire face down into the carved line, so that the 3 Cathodes (R,G,B) face up\nTo connect the Cathodes positioned above each other (see picture 2) we need some more wire (so again we 6 Columns x 3 Cathodes x 6 Walls = 108 tinned wire pieces as described in the last step (2.) (same length aswell))\nSlide the wire pieces from the bottom of a column through the holes of the Cathodes to the top row and solder the wire in place at each LED\nYou do this 6 times to get 6 Walls of LEDs.\nNow we can actually assemble the Walls into the actual cube itself. But to hold the cube, we need to build some sort of ground plane. For this I simply used some thin plywood and drilled little 0.8mm holes into it, to fit the wires hanging from the lowest LED Rows (for all 6 LED Walls). The measurings for the holes of a single LED are documented in Step 3 and the distances between each LED is 2.5cm.\nWith the holes in place we now take the first wall and maneuver it into the holes on the very left of the plywood. The LED row on the bottom should sit right on the wood, so that in the end all the Walls are aligned the same.\nGo on doing the same thing with the rest of the LED Walls, but remember that the Anodes of the Walls always face the same direction. ( in picture 3 all the Anodes of the Walls face the left )\nOnce the entire Cube is in place, we need to solder the Anodes of each layer together. To do this we take another ~16cm piece of straight wire and lay it on top of the first layer, so that the wire touches all the Anode wires of the 6 walls in one layer. Watch out that the new wire does not touch any of the Cathodes. Solder the wire in place and repeat the same thing for the 5 remaining layers.", "step_imgs": ["https://cdn.instructables.com/F9U/QAWC/JT91V2E5/F9UQAWCJT91V2E5.LARGE.jpg", "https://cdn.instructables.com/FZ5/QE8B/JTCSI8OH/FZ5QE8BJTCSI8OH.LARGE.jpg", "https://cdn.instructables.com/FEW/NWE3/JT91V2JK/FEWNWE3JT91V2JK.LARGE.jpg"], "step_title": "Step 4: Layer Assembly"}, {"step": 5, "steps_text": "Now that the physical structure of the cube is in place it is time add wires to the Cathodes and Anodes to later connect it to the controller circuit board.\nFirst things first, we cut of extend wire on the bottom of the wooden plane, but leave around 1.5cm to solder on the wires. To make the software code easier to map the individual Colors of the LEDs to the LED Driver pins, we use the wiring schematic described in picture 1. Our TLC5940 LED Drivers have 16 Output each, so that means we need (6x6)Leds x 3 Colors = 108 / 16 = 6,75 -> So we need 7 TLC Drivers (the last one is not fully used).\nThat means we need 7 x 16 wires which are connected on one end with the LED Cathodesand with a male pin header on the other end. So from your Ribbon Cablecut 7x 16 pins cables with a length of about 20cm. To solder on the male pin headers on the other end of the cables watch this video from ZTAR-Planet .\nStart at one corner of the cube with the cable on the very left of the Ribbon cable soldered first.In my case I started with the Blue Cathode of the LED in the bottom right corner\nThe second cable gets soldered to the Green Cathode of the same LED,the next to the Red Cathode, the following to the Blue of the LED to the left of the first LED, then the Green of this Led, then Blue, on to the next Blue Cathode and so on\nSo you follow this schematic so that the sequence always is : Blue Cathode, Red Cath. , Green Cath., Blue Cath., ... as seen in picture 1. You start with the first 16pin cable, once you solder the last pin of the cable, you take the next cable on solder the left most pin to the next Cathode in the sequence. So the last pin of a cable is follow by the first pin of the next cable.\nFor the Anodes it is recommended to use slightly thicker cable since there is more current flowing through it then the cathodes.To acces the Anodes of the 6 Layers on the bottom of the Cube, we need yet some more tinned copper wire.This time we drill holes on one side of the Cube (see picture 1, white circles) and run the copper wire through these holes and solder them onto the corresponding Layer Anode. So in picture 1 the Anode labelled \"0\" is a tinned copper wire piece soldered to the Anode wire of Layer 0, 1 is soldered to the Anode of Layer 1, and so on. For the cable you once again solder a 6 pin male header on the other side of the cable, and the other to the extend wire of the Layer Anodes.", "step_imgs": ["https://cdn.instructables.com/FYX/7YK9/JT91V2JN/FYX7YK9JT91V2JN.LARGE.jpg", "https://cdn.instructables.com/FVR/B2H7/JT91V29G/FVRB2H7JT91V29G.LARGE.jpg"], "step_title": "Step 5: Cube Wiring"}, {"step": 6, "steps_text": "Parts for the LED Driver Board:\n7 x TLC5940\n6/7 x 10 uF Capacitors\n2 x 1000 uF Capacitors\n7x 2.2kOhm Resistors\n7 x 28pin IC Sockets\n7 x 0.1uF Capacitors\nRibbon Cable\nMoving on to the controlling circuits, lets first have a look at the LED Driver board. As mentioned before we need 7 TLC5940 connected to the Arduino Nano. All of the TLC5940 Chips are daisy chained which means that all the control Pins of the Drivers are interconnected( e.g BLANK pin of the first TLC is connected to BLANK of the second,third,fourth,... TLC) and are all connected to the Arduinowith the same wires, except the Serial In which is first connected from an Arduino Digital Pin to the first TLC, then the Serial Out pin of this first TLC is connected to the SIN pin of the second TLC and so on (see picture 4)...\nSo the schematic of the TLC Board is quite simple as you can see in the attached schematic.\n(IF YOU WANT TO ETCH THE BOARD JUMP TO STEP 8)\nI also attached a screenshot of the schematic in frizzwhich includes pin labelsand also an GIMP .xcf files with layers for every Control Pin connection separated.\nStart by soldering all the IC sockets in place,then adding the 100nF Capacitors to each TLC, followed by the 2.2kOhm resistorsto IREFand GND and the 7 pin Header in the top right corner.. After that you can simply follow the .xcf file by starting with the \"SIN layer\" in the Gimp file which showcases how to connect the Serial IN/OUT pins of the Drivers using Ribbon Cables, then enabling the CLK Layer in GIMP and so on. Make sure that you have good connections of the + and - Pins to the pin Header on the top right The rest of the schematic should be self explanatory but make sure you add enough 1000uF and 10uF Capacitors to the board it is not so relevant where exactly you position them.\nOnce this board is finished you can move on to the Arduino Board in the next step.", "step_imgs": ["https://cdn.instructables.com/FJP/28WI/JT91V2CJ/FJP28WIJT91V2CJ.LARGE.jpg", "https://cdn.instructables.com/F8R/7QYL/JTIYHFFY/F8R7QYLJTIYHFFY.LARGE.jpg", "https://cdn.instructables.com/FKA/5UWF/JTMSSEU6/FKA5UWFJTMSSEU6.LARGE.jpg", "https://cdn.instructables.com/FIG/MCYL/JT91V2BU/FIGMCYLJT91V2BU.LARGE.jpg"], "step_title": "Step 6: LED Driver Board"}, {"step": 7, "steps_text": "Parts for the Control Board:\n6 x IRF 9540 P-Channel MOSFETs\n1 x 10 uF Capacitors\n1 x 1000 uF Capacitors\n7 x 2.2kOhm Resistors\n1 x 1kOhm Resistor\n2 x 14 Female pin Header\n1 x Arduino Nano\n1 x 1N4001 Diode\n1 x 0.1uF Capacitors\n1 x DC Jack PCB Mount\n1 x HC-05 Bluetooth Module\n1 x 3.5mm Audio Jack\nThe Arduino Control Board is mainly handling the multiplexing aswell as providing the counterpart of the pin header of the LED Driver board.\nSoldering on perfboard:\nPlace two female Pin headers to act as socket for the Arduino in the middle of the board.\nPut the 6 MOSFETs in a row next to each other on the right side of the Arduino(the side with the Analog Pins) and add a 2.2kOhm resistor between the first and the last pin each.\nNow place the 6 pin header in front of the MOSFETs (middle of the row) and connect the 6 DRAIN pins of the FETs(middle pin) to the header and the GATE pins (left pin) of the FETs to the respective Arduino Analog pins.\nNext, solder the 7pin header for the LEDDriver connection on the other side of the Arduino,leave some space for cables and solder all the connections from the Arduino to the pin header.\nAdd some capacitors (1-2 1000uF, 1 10uF, 100nF next to the Arduino) for possible current drains.\nSolder a 4 pin header next to the back side of the Arduino for the HC-05 module and make the 4 connections to VCC,RX,TX,GND and dont forget to make a voltage divder from the RX Pin of the HC-05 and the TX Pin of the Arduino (see here)\nPlace the DC Jack on any edge of the board with a switch next to and connect the right pin of the switch to the + Pin of the DC Jack\nFinally make all the necessary Power connections from the GND Pin of the DC Jack and the right pin of the switch (VCC) to the Arduino,MOSFETs,Capacitors and HC-05 as seen in the schematic. Remember to add the Diode only granting the Power from the VCC pin of the switch to flow into the Arduinos 5V pin, not the other way.(this protects the Arduino when programming it via USB connection)\nFor the power connection I used a DC Power Jackwith a simple switch,you could also use a USB Connector if you want.I outsourced the power connector to another small circuit board to nicely fit in into my wooden case but you can simply put it directly onto the Arduino Board. As mentioned in the first step there is also a MSGEQ7 Connection Circuit in the schematic but simply ignore that if you dont use an MSGEQ7. (For more info about the MSGEQ7 functionality click here )\nDont forget to make another 7Pin Ribbon Cable with male pin Headers on each end for connecting the Arduino board with the Driver board.", "step_imgs": ["https://cdn.instructables.com/FMW/BNEF/JTMSSCB8/FMWBNEFJTMSSCB8.LARGE.jpg"], "step_title": "Step 7: Arduino + Bluetooth Control Board"}, {"step": 8, "steps_text": "So if you dont like soldering lots of cables of course you can also etch the necessary PCB's if you prefer that.\nIn my Cube the Arduino board and the Power/Audio connector board are both etched boards using the attached schematic/EAGLE files. The first time I made a mistake in the schematic so I had to redo the LED Driver board like I did in the last step. There are no huge advantages to etch the board instead of using perboard, so feel free to either etch the board or solder it on perfboard.\nIn the attached .zip you can find both a BOARD file as well as a SCHEMATIC file.\nNotice that the top layer traces (red) are supposed to be wire bridges (since I cant etch two sided boards at home). The unrouted traces showcase the connections to be made via cables for the female Pin Headers.\nThe schematic includes the MSGEQ7 feature, which you can simply omit by deleting the section of the schematic marked \"(MSGEQ7)\" in the screenshot of the .pdf schematic.", "step_imgs": ["https://cdn.instructables.com/FZV/WLEH/JTMSS8W5/FZVWLEHJTMSS8W5.LARGE.jpg", "https://cdn.instructables.com/FJY/CUTO/JTCSFBQT/FJYCUTOJTCSFBQT.LARGE.jpg", "https://cdn.instructables.com/FJK/NP3P/JTMSS8W8/FJKNP3PJTMSS8W8.LARGE.jpg"], "step_title": "Step 8: Optional: Etching the Circuit Boards"}, {"step": 9, "steps_text": "To connect all the parts of the Cube, start by pluging in the 7pin Cable to the Arduino Board and the Driver Board (make sure the orientation is correct!). Next plug in the HC05 Module to the 4 Pin header and connect the Power Board if separated.\nTo connect the 7x16 Pin Headers of the Cube make sure to start with the first TLC (the one whose SIN pin is connected to the Arduino directly). Find the correct 16pin Cable from the Cube and connect it to the first TLC's pin header (make sure the cable for Cathode Nr.0 connects to the first TLC OUT0 Pin!). Go on and connect the other 16pin Cables to the corresponding TLC headers in the correct order.\nLast but not least, connect the 6Pin Cable for the Anodes from the Cube to the 6Pin header on the Control Board next to the MOSFETs.\nTo finish the Cube I added walls to the case with some more plywood with black paint on it and glued them in.\nNow we are finished with all the hardware required for the entire build!", "step_imgs": ["https://cdn.instructables.com/F88/B3AE/JTOMX1N1/F88B3AEJTOMX1N1.LARGE.jpg", "https://cdn.instructables.com/FM7/JFP7/JTIYHQVP/FM7JFP7JTIYHQVP.LARGE.jpg", "https://cdn.instructables.com/F8R/6TUI/JT91V2AD/F8R6TUIJT91V2AD.LARGE.jpg"], "step_title": "Step 9: Connecting the Cube"}, {"step": 10, "steps_text": "Now in theory the Arduino is constanly executing the following cycle:\nIf the LayerDuration has passed, load the Values for the next Layer to the TLCs, turn off the current Layer,turn on the next Layer, reset the LayerDuration, commit the new Values to the TLCs\nIf the FrameDuration has passed, load the new Frame of the current Animation by storing the values for all LEDs and Colors into the ValueLed[] buffer, reset FrameDuration\nIf Bluetooth Data is available, react upon them( Change Animations,Brightness,...)(more information later)\nAs you can see the main focus of the code is speed. It is important that the time to change the Layer is minimal.\nThe faster you switch on/off the Layers the more \"Frames\" you will get. for a 6x6x6 RGB LED Cube like this I figured out that a Layer Duration of 1700 microSec. is good enough to keep flickering at a minimum and should be left at this value. The FrameDuration controls more of the speed of the Animation so it can be changed for different Animations.\nIn the next step we will look at how we can actually write our own Animations.", "step_imgs": ["https://cdn.instructables.com/F7Z/NK4W/JTON0MXB/F7ZNK4WJTON0MXB.LARGE.jpg"], "step_title": "Step 10: Software: Multiplexing Cycle"}, {"step": 11, "steps_text": "To implement an animation we have to set the ValueLed[] buffer to the Values we want for the next Frame every time FrameDuration has passed. We do that by calling the Macro function \"SETLED(x,y,z,COLOR,Brightness)\"\nx,y,z are the coordinates of the LED we want to set and COLOR (RED,GREEN or BLUE) is the color we want to set and Brightness is the actual Value for this particular color we set.\nSo to for example implement an Animation that simply displays Red,Green and Blue color randomly across the entire cube you can simply do this:\nvoid randomLedsFull(){\n  for (uint8_t j = 0; j < CUBE_SIZE; j++){\n    for (uint8_t x = 0; x < CUBE_SIZE; x++){\n      for (uint8_t y = 0; y < CUBE_SIZE; y++){\n        uint8_t rand = random8(3);\n        SETLED(x,y,j,rand,maxBright);\n      }\n    }\n  }\n}\nThis method is called every time the FrameDuration has passed and is selected from the switch-case command in the loop(). If you write new animations you can add them by simply adding them into the switch-case.", "step_imgs": ["https://cdn.instructables.com/FU8/8BC6/JTT5QE5S/FU88BC6JTT5QE5S.LARGE.jpg", "https://cdn.instructables.com/FFQ/4ZJ3/JTT5QGJB/FFQ4ZJ3JTT5QGJB.LARGE.jpg"], "step_title": "Step 11: Custom Animations"}, {"step": 12, "steps_text": "I additionaly wrote an AnimationCreator using JavaFX and Java3D.\nIt makes creating and editing custom Animations very easy by providing an easy to understand UI.\nYou can create,edit,rename and reconfigure Animations for 4x4x4,6x6x6 or 8x8x8 LED Cubes.\nTo create a new Animation simply hit File>New, under \"Cube\" you can select the Cube size, to set the Color of a LED select the color you want with the Color picker on the left and then left click the LEDs you want in that color for that Frame. To add another Frame hit \"Next\" or \"+\". The rest of the UI Controls is quite self explanatory, the checkboxes next to the Cubes Layers are to check which Layers should be affected by shifting and \"Keep Frame\". Just test it out and you will figure out everything in no time.\nAdditionally to simulate the Animation you can click the \"View 3D\" Button which opens another window with a Java3D Model of the Cube. You can rotate the Camera while holding down the left mouse button (Press R to reset the Camera).To play/pause the Animation hit the P Key, to reset the Animation hit Q. The TextField below the \"View 3D\" buttondenotes the current FrameTime, ergo the speed of your animation.\nWhen you are done with the Animation give it a name and hit File>Save As... and save the Animation to the same folder as the Cubo_Control.ino Sketch.\nTo include you new Animation in the Sketch open the Cubo_Control.ino and add following code on top of the Sketch:\n#include \"<YOUR_ANIMATION>RGBit.h\" //Replace <YOUR_ANIMATION>\nScroll down to BTEvent()and add case statement to the switch-case of the animations\nswitch(curAnim){\n...\ncase 10:               \n animation= &ani_cubesmove[0][0];\n FRAME_TIME= ANI_CUBESMOVE_FRAMTIME;\n maxCount= ANI_CUBESMOVE_FRAMES;\n break;\n\ncase 11:            //YOUR NEW ANIMATION\n animation= &ani_<YOUR_ANIMATION>rgbit[0][0];\n FRAME_TIME= <YOUR_ANIMATION>RGBIT_FRAMETIME;\n maxCount= ANI_<YOUR_ANIMATION>RGBIT_FRAMES;\n break;\n}", "step_imgs": ["https://cdn.instructables.com/F6I/XV64/JT91VU77/F6IXV64JT91VU77.LARGE.jpg"], "step_title": "Step 12: Additional: AnimationCreator"}, {"step": 13, "steps_text": "To actually control the Cube, thanks to the HC-05 Module it is quite simple to build a Bluetooth app to connect your Phone to the Cube.\nLink to the App :Github\nThe App is open source so feel free to add additional Animations/features yourself.\nStart the App, it asks you to turn on Bluetooth\nClick \"Search\" and a list of available Bluetooth connections appears. Identify the HC-05 Module from the Cube and click on it.\nIf there is an error when trying to connect to the Cube, try to pair the HC-05 module in the Bluetooth settings manually\nOnce connected the App switches to the Control Screen and the Bluetooth connection has been established\nControls:\nSpeed & Brightness: Change slider values to speed up/slow down the Animation or change the brightness\nAnimations: Click on a button to change the Animation, by default the Animations are looping (Starting from the top left the button correspond to currAnim)\nText Scroll: Click the \"Text\" button which brings up a dialog to input some text which will be scrolled through the cube\nCommand: You can enter commands manually with the Command TextField (look into the BTEvent() method of Cubo_Control.ino for syntax)\nSnake: classic Snake Game (red:apple, green:snake Head, blue:sneak Tail) (Controls: 4 directional Buttons, Up and Down is triggered by turning the Phone forward (Up) or backward (Down))\nAudio Visualizer: MSGEQ7 used to visualize 6 audio bands from AUX Jack (Button for Animation 7)", "step_imgs": ["https://cdn.instructables.com/F14/H6DW/JTT5QDT8/F14H6DWJTT5QDT8.LARGE.jpg"], "step_title": "Step 13: Bluetooth App"}, {"step": 14, "steps_text": "NOTES: Since it is very hard to accurately capture the LED Cube in bad lightning conditions, I turned down the brightness of the Cube to 15 (max: 255). Note that in reality with full brightness for the human eye there is no flickering of the LEDs whatsoever.\nFor the Snake Game:\nThe Red Animation at the end instantly signals Game Over when you move the Head into any part of the tail of the snake.", "step_imgs": [], "step_title": "Step 14: Showcase"}], "channel": ""}, {"category": "", "description": "In recent days, I started looking for a vacuum cleaner for keeping my desk clean.\nAnd I found some junk in my storage space, let's diy a vacuum cleaner.", "title": "Vacuum Cleaner From a Hairdryer", "url": "https://www.instructables.com/id/Vacuum-Cleaner-From-a-Hairdryer/", "section": "technology", "steps": [{"step": 1, "steps_text": "This hair dryer is out of function. I tore it down and removed the heater and useless parts.\nReverse the set of the motor like the fourth and the fifth pictures show. And then reconnected the cables to power the motor.\nCut the parts which blocked the fan.", "step_imgs": ["https://cdn.instructables.com/F33/VOY0/JTT5R4Y7/F33VOY0JTT5R4Y7.LARGE.jpg", "https://cdn.instructables.com/F1Z/H4R7/JTT5R57Y/F1ZH4R7JTT5R57Y.LARGE.jpg", "https://cdn.instructables.com/FJV/3HXT/JTT5R5JL/FJV3HXTJTT5R5JL.LARGE.jpg", "https://cdn.instructables.com/FG6/Y811/JTT5RT9Q/FG6Y811JTT5RT9Q.LARGE.jpg", "https://cdn.instructables.com/FVV/KGYP/JTT5RT93/FVVKGYPJTT5RT93.LARGE.jpg", "https://cdn.instructables.com/F4Q/LWCN/JTT5R5Y8/F4QLWCNJTT5R5Y8.LARGE.jpg", "https://cdn.instructables.com/FVP/ZDYB/JTT5R5UE/FVPZDYBJTT5R5UE.LARGE.jpg", "https://cdn.instructables.com/FED/MC0T/JTT5R65V/FEDMC0TJTT5R65V.LARGE.jpg", "https://cdn.instructables.com/F2L/DRI1/JTT5R63Y/F2LDRI1JTT5R63Y.LARGE.jpg"], "step_title": "Step 1: Modify a Hair Dryer From Blowing Into a Sucking Device"}, {"step": 2, "steps_text": "I had a busted container. There were some holes on its lid.\nThis lid was attached a piece of wood from a pallet. And then put RTV glue to ensure the lid sealed.\nCut off the area of the lid and drilled five holes for air flow.\nThe center one of the holes was used to fix air filter. Mount the air filter with a screw and nuts.\nDrill a 32mm diameter hole.\nSqueeze the hose into that hole and seal it with RTV glue.", "step_imgs": ["https://cdn.instructables.com/FXC/OM94/JTT5R6EN/FXCOM94JTT5R6EN.LARGE.jpg", "https://cdn.instructables.com/F39/ZJWN/JTT5R6IJ/F39ZJWNJTT5R6IJ.LARGE.jpg", "https://cdn.instructables.com/FRQ/JY7W/JTT5R6L4/FRQJY7WJTT5R6L4.LARGE.jpg", "https://cdn.instructables.com/FHV/0B0U/JTT5R6L5/FHV0B0UJTT5R6L5.LARGE.jpg", "https://cdn.instructables.com/FDF/RSLI/JTT5RV6Q/FDFRSLIJTT5RV6Q.LARGE.jpg", "https://cdn.instructables.com/FIG/B0QA/JTT5R6RK/FIGB0QAJTT5R6RK.LARGE.jpg", "https://cdn.instructables.com/F22/39RN/JTT5R6VD/F2239RNJTT5R6VD.LARGE.jpg", "https://cdn.instructables.com/F1T/NNQW/JTT5R6AU/F1TNNQWJTT5R6AU.LARGE.jpg", "https://cdn.instructables.com/F4Z/R85X/JTT5R75K/F4ZR85XJTT5R75K.LARGE.jpg", "https://cdn.instructables.com/FZ0/ZGZ5/JTT5R6XY/FZ0ZGZ5JTT5R6XY.LARGE.jpg", "https://cdn.instructables.com/FG3/FQGO/JTT5R71R/FG3FQGOJTT5R71R.LARGE.jpg"], "step_title": "Step 2: Make the Air Filter Parts and the Dust Chamber"}, {"step": 3, "steps_text": "Make a supporter to hold the hairdryer.\nDraw a line along the shadow of the hairdryer. Grind along the line~\nDrill two big holes for the steel rings.\nAssemble the hairdryer and seal the gap between the hair dryer and the plate.", "step_imgs": ["https://cdn.instructables.com/FFD/9TIF/JTT5RXR0/FFD9TIFJTT5RXR0.LARGE.jpg", "https://cdn.instructables.com/FAZ/1U79/JTT5RXRP/FAZ1U79JTT5RXRP.LARGE.jpg", "https://cdn.instructables.com/F1I/6HZA/JTT5RXSE/F1I6HZAJTT5RXSE.LARGE.jpg", "https://cdn.instructables.com/F3A/TDLO/JTT5R7HQ/F3ATDLOJTT5R7HQ.LARGE.jpg", "https://cdn.instructables.com/FUO/97J6/JTT5R98C/FUO97J6JTT5R98C.LARGE.jpg", "https://cdn.instructables.com/FY6/RIUH/JTT5R81C/FY6RIUHJTT5R81C.LARGE.jpg", "https://cdn.instructables.com/F5N/61VH/JTT5R9DO/F5N61VHJTT5R9DO.LARGE.jpg", "https://cdn.instructables.com/FFD/6Y96/JTT5R77H/FFD6Y96JTT5R77H.LARGE.jpg"], "step_title": "Step 3: Fix the Hairdryer"}, {"step": 4, "steps_text": "Tear down the control switch.\nDrill a hole and put a screw for fix the control switch.\nCAUTION:\nMake sure twice that metal screw is insulated from the PCB.\nOr a short circuit would cause the fire alarm.\nAttach the power supply on the base.", "step_imgs": ["https://cdn.instructables.com/FXZ/A2CW/JTT5R8TN/FXZA2CWJTT5R8TN.LARGE.jpg", "https://cdn.instructables.com/FSQ/Y7M3/JTT5R8IB/FSQY7M3JTT5R8IB.LARGE.jpg", "https://cdn.instructables.com/FC7/UBMW/JTT5R8EV/FC7UBMWJTT5R8EV.LARGE.jpg", "https://cdn.instructables.com/FJU/T408/JTT5R9FL/FJUT408JTT5R9FL.LARGE.jpg", "https://cdn.instructables.com/FIU/YKDH/JTT5R9J0/FIUYKDHJTT5R9J0.LARGE.jpg", "https://cdn.instructables.com/F7D/6KWE/JTT5R8EW/F7D6KWEJTT5R8EW.LARGE.jpg", "https://cdn.instructables.com/FFC/3HTM/JTT5R9KJ/FFC3HTMJTT5R9KJ.LARGE.jpg"], "step_title": "Step 4: Electronics for Power Control : CAUTION"}, {"step": 5, "steps_text": "IT WORKS~~~\nThis baby can pick up dust, tiny wires, smoke, coins, and pads.\nBut thin cable and nuts could not be carried away. The hairdryer motor is 60W only.\nThe air flow is not strong enough to suck up those cables and nuts.\nThis performance satisfied me, I like it.", "step_imgs": [], "step_title": "Step 5: Let's See the Performance"}, {"step": 6, "steps_text": "If you don't have broken things such as a hairdryer, a sealable box, and a power supply, etc, it would cost more rather than buy a brand new vacuum cleaner.\nCommercial vacuum cleaners are more much effective than made by my own.\nWhat you paid for are the strong motor, the air flow, the good sealability, the nozzle good use, the safety, and so on.\nThat is worthy!\nBUT........\nThe pros. that making that vacuum cleaner by my own is.......\nThe suction to pick up dust or smoke or bolts is not the same thing.\nPicking up bolts and nuts.........maybe the magnet does that job better!\nAnd no one wants to collect anything in the dust chamber which filled with dust......\nWhen we are talking about sucking dust, my device doses that job very well.\nAdjustable suction level, less power consumption, lower noise, no bad smell, longer operating time, and don't concern about overheat.\nIt is not necessary to pick up just dust with high power consumption device!!", "step_imgs": [], "step_title": "Step 6: I Want to Say ......"}], "channel": ""}, {"category": "", "description": "A few weeks ago I received a last minute invite to participate in a PhabLabs Hackathon at Science Centre Delft in the Netherlands. For an enthusiastic hobbyist like me, who can normally spend only a limited amount of time on tinkering, I saw this as a great opportunity to schedule some dedicated time to turn one of my many ideas, within the scope of the Hackathon: Photonics, into an actual project. And with the great facilities in the Makerspace at Science Centre Delft it was just impossible to turn down this invite.\nOne of the ideas I already had for a while related to photonics was that I wanted to do something with Persistence of Vision (POV). There are already tons of examples available online of how to build a basic POV display using some basic components: microcontroller, old fan/hard disk/motor and one string of leds connected perpendicular to the axis of the rotating device. With a relatively simple setup you can already create an impressive 2 dimensional image, e.g.: https://www.youtube.com/watch?v=QAGnpKz7zvY\nAnother variation of POV displays connects a string of leds parallel to the axis of the rotating device. This will result in a 3 dimensional cylindrical POV display, e.g.: https://www.instructables.com/id/3D-POV-Clock-fro...\nInstead of connecting the string of leds parallel to the axis of the rotating device you can also arc the string of leds. This will result in a spherical (globe) POV display, e.g.: https://www.instructables.com/id/POV-Globe-24bit-... The next level is to build several layers of led strings to create a volumetric 3D display. Here are some examples of such volumetric 3D POV displays which I used as inspiration for this specific project:\nhttps://www.instructables.com/id/PropHelix-3D-POV-...\nhttps://github.com/mbjd/3DPOV\nhttps://hackaday.io/project/159306-volumetric-pov-...\nhttps://hackaday.com/2014/04/21/volumen-the-most-a...\nAs the makers of the examples above provided very useful information, it made a lot of sense to remix parts of their projects. But as a Hackathon is supposed to be challenging, I also decided to build a different type of volumetric 3D POV display. Some of them were using rotors and lots of hot glue to keep the components from flying around. Others created custom PCB\u2019s for their project. After reviewing some of the other 3D POV projects I saw room for some \u201cinnovation\u201d or introduce some challenges for myself:\nWith no prior experience of creating customised PCB\u2019s and due to the time constraint of the Hackathon I choose to follow a more basic prototype approach. But instead of creating actual rotors I was curious about how such a volumetric 3D POV display would look like when using a cylinder build out of layers of acrylic plastic.\nNo use or else minimum use of hot glue to make the device less dangerous", "title": "Transparent 3D Volumetric POV", "url": "https://www.instructables.com/id/Transparent-3D-Volumetric-POV/", "section": "technology", "steps": [{"step": 1, "steps_text": "For the Motor Controller\nArduino Pro Micro 5V/16Mhz\nSmall Breadboard\n3144 Hall Effect Switch Sensor\nMagnet with Diameter: 1cm, Height: 3mm\nToggle Switch - MTS-102\n10K Potentiometer\nDupont Jumper Wires\n16 x M5 Nuts\nLCD display module with blue backlight (HD44780 16\u00d72 Characters)\n10K Resistor - Pull Up Resistor for the Hall Effect Sensor\n220Ohm Resistor - For controlling the contrast of the LCD Screen\nThreaded Rod Diameter: 5mm\nPlywood, Thickness: 3mm\nFor the Platform Base\nPiece of Scrap Wood (250 x 180 x 18 mm)\nMean Well - 12V 4.2A - Switching Power Supply LRS-50-12\nPower Plug Cable 220V\nDC-DC Wireless Converter - 5V 2A (Transmitter)\nTurnigy D2836/8 1100KV Brushless Outrunner Motor\nTurnigy Plush 30amp Speed Controller W/BEC\nTerminal Blocks Connectors\n12 x M6 Nuts to secure the platform using the threaded rods with a diameter of 6mm.\n3 x M2 Bolts (18mm length) for securing the bolt-on adapter to the brushless motor\n4 x M3 Nuts and Bolts for securing the brushless motor to the piece of scrap wood\nThreaded Rod Diameter: 6mm (4 x length 70 mm)\nThreaded Rod Diameter: 4mm (1 x length 80 mm)\nPlywood, Thickness: 3mm\nFor the Rotating Casing\nDC-DC Wireless Converter - 5V 2A (Receiver)\n3D Printed Bolt On Adapter (PLA Filament, White)\nTeensy 3.6\nIC 74AHCT125 Quad Logic Level Converter/Shifter (3V to 5V)\n10K Resistor - Pull Up Resistor for the Hall Effect Sensor\n1000uF 16V Capacitor\nThreaded Rod Diameter 4mm\nMagnet with Diameter: 1cm, Height: 3mm\nPlywood, Thickness: 3mm\nPlywood, Thickness: 2mm\nAcrylic Sheet, Thickness: 2mm\nSteel Rod Diameter: 2mm\nNuts & Bolts\n0.5 meter ledstrip APA102C 144 leds / meter\nTools Used\nMerlin Laser Cutter M1300 - Laser Cutting Plywood and Acrylic Sheet\nUltimaker 2+ for 3D Printing the Bolt On Adapter\nSoldering Station and Solder\nTable Drill\nScrewdrivers\nPlyers\nHammer\nCaliper\nHacksaw\nWrenches\nHeat Shrink Tubing\nSoftware Used\nFusion 360\nUltimaker Cura\nArduino IDE and Teensyduino (containing Teensy Loader)", "step_imgs": ["https://cdn.instructables.com/FUP/GDEY/JTWRZF4I/FUPGDEYJTWRZF4I.LARGE.jpg"], "step_title": "Step 1: Material and Tools Used"}, {"step": 2, "steps_text": "The Motor Controller Unit sends a signal to the Turnigy Electronic Speed Controller (ESC) which will control the number of rotations provided by the brushless motor.\nAdditionally I also wanted to be able to display the actual rotations per minute of the POV cylinder. That's why I have decided to include a hall effect sensor and an 16x2 LCD Display to the Motor Controller Unit.\nIn the attached zip file (MotorControl_Board.zip) you will find three dxf files which will enable you to lasercut one base plate and two top plates for the motor controller unit. Please use plywood with a thickness of 3mm. The two top plates can be placed on top of each other which will allow you to screw in the 16x2 LCD Display.\nThe two holes in the top plate are meant for one on/off toggle switch and one potentiometer to control the speed of the brushless motor (I haven't wired the on/off toggle switch myself yet). To construct the Motor Controller Unit you need to saw the threaded rod with a diameter of 5mm into 4 pieces of the desired height. Using the 8 M5 nuts you can first fasten the base. Then I attached the small breadboard to the base plate using the two sided adhesive sticker that was provided with the breadboard. The attached schematic shows how you should wire the components so it can work with the source code (MotorControl.ino) attached to this step. I've used a 10K pull up resistor for the hall sensor. An 220 Ohm resistor worked good enough to make the text visible on the LCD screen.\nPlease make sure that you isolate the pins of the hall effect sensor using heat shrink tubes, just as shown on the pictures. The correct functioning of the hall sensor will rely on a magnet that will be placed in the rotating case at step 3.\nOnce the wiring is completed you can secure the 2 top plates with the LCD Display, Switch and Potentiometer using again 8 M5 nuts as shown on the pictures.\nPending on the model of your motor used, you might need to adjust the following line of code in the MotorControl.ino file:\nthrottle = map(averagePotValue, 0, 1020, 710, 900); <br>\nThis line of code (line 176) maps the position of the 10K potentiometer to the signal for the ESC. The ESC accepts value between 700 and 2000. And as the motor I used for this project started to turn around 823, I limited the RPM's of the motor by limiting the max value to 900.", "step_imgs": ["https://cdn.instructables.com/FT0/NYU9/JTWS1SZM/FT0NYU9JTWS1SZM.LARGE.jpg", "https://cdn.instructables.com/FJM/KSGR/JTWSYXPI/FJMKSGRJTWSYXPI.LARGE.jpg", "https://cdn.instructables.com/FV4/154D/JTWSYXNY/FV4154DJTWSYXNY.LARGE.jpg", "https://cdn.instructables.com/FUV/DPBT/JTWRZEOL/FUVDPBTJTWRZEOL.LARGE.jpg", "https://cdn.instructables.com/FOA/OENQ/JTWRZEPY/FOAOENQJTWRZEPY.LARGE.jpg", "https://cdn.instructables.com/FTF/FR6Y/JTWRZEOD/FTFFR6YJTWRZEOD.LARGE.jpg"], "step_title": "Step 2: Motor Controller Unit to Regulate the Rotation Speed"}, {"step": 3, "steps_text": "Nowadays there are basically two ways to power devices which needs to rotate: slip rings or transmitting power wirelessly via induction coils. As high quality slip rings which can support high RPM's tend to be very expensive and more prone to wear and tear I opted for the wireless option using a 5V Wireless DC-DC converter. According to the specifications it should be possible to transfer up to 2 Amps using such a converter.\nThe Wireless DC-DC converter consists of two components, a transmitter and a receiver. Please be aware that the PCB connected to the transmitting induction coil is smaller than the one receiving.\nThe platform itself is build using a piece of scrap wood (250 x 180 x 18 mm).\nOn the platform I screwed on the Mean Well 12V Power Supply. The 12V output is connected to the ESC (see the schematics at Step 1) and the PCB of the transmitting part of the Wireless DC-DC Converter.\nIn the attached Platform_Files.zip you find the dxf files to lasercut the platform out of plywood with a thickness of 3mm:\nPlatform_001.dxf and Platform_002.dxf: You need to place them on each other. This will create a recessed area for the transmitting induction coil.\nMagnet_Holder.dxf: Lasercut this design three times. One of the three times, include the circle. In the other two lasercuts: remove the circle from being cut. After cutting, glue the three pieces together to create a holder for a magnet (diameter 10mm, thickness: 3mm). I used superglue to glue the magnet in the Magnet holder. Please make sure that you glue the correct side of the Magnet to the holder as the hall sensor will only work with one side of the magnet.\nPlatform_Sensor_Cover.dxf: This piece will help you to keep the hall sensor attached to the Motor Control Unit in place as shown in the first picture.\nPlatform_Drill_Template.dxf: I used this piece as a template for drilling the holes in the piece of scrap wood. The four larger 6 mm holes are for the supporting threaded rods with a diameter of 6mm to support the platform. The 4 smaller holes are for securing the brushless motor to the piece of scrap wood. The largest hole in the middle was required for the axis that sticked out of the brushless motor. As the bolts for the motor and the threaded rods for the platform need to be secured on the bottom of the platform, it is necessary to enlarge those holes for a few mm deep to allow for the nuts to fit in.\nUnfortunately the shaft of the brushless motor stuck out of the 'wrong' side for this project. But I was able to reverse the shaft with the help of the following instruction I found on Youtube: https://www.youtube.com/watch?v=4jSix3rUI2E\nOnce the motor and supporting rods are secured, the platform can be constructed using the lasercut platform pieces. The platform itself can be secured using 8 M6 nuts. The Magnet holder can be glued to the platform at the border as shown in the first picture.\nThe attached file \"Bolt-On Adapter.stl\" can be printed using a 3D printer. This adapter is necessary to attach a threaded rod with a diameter of 4mm to the Brushless Motor using 3 x M2 bolts with a length of 18mm.", "step_imgs": ["https://cdn.instructables.com/F52/6W0X/JTWRZEXW/F526W0XJTWRZEXW.LARGE.jpg", "https://cdn.instructables.com/FF6/EIMG/JTWRZEHO/FF6EIMGJTWRZEHO.LARGE.jpg", "https://cdn.instructables.com/FRP/ZH5X/JTWRZF0E/FRPZH5XJTWRZF0E.LARGE.jpg", "https://cdn.instructables.com/F4B/MHTY/JTWRZF4A/F4BMHTYJTWRZF4A.LARGE.jpg", "https://cdn.instructables.com/FKW/WDS6/JTWRZEY5/FKWWDS6JTWRZEY5.LARGE.jpg", "https://cdn.instructables.com/FHF/IQK7/JTWRZF06/FHFIQK7JTWRZF06.LARGE.jpg", "https://cdn.instructables.com/FLB/FMX7/JTWRZF2B/FLBFMX7JTWRZF2B.LARGE.jpg"], "step_title": "Step 3: Building the Platform for Wireless Transmitting Power"}, {"step": 4, "steps_text": "The attached Base_Case_Files.zip contains the dxf files to laser cut the 6 layers to construct the case for the components controlling the APA102C led strip.\nLayers 1-3 of the Case design are meant to be glued together. But please make sure that a magnet (diameter 10mm, height: 3mm) is put into the circular cutout in Layer 2 before glueing the three layers together. Also make sure that the magnet is glued with the correct pole to the bottom, as the hall effect sensor placed on the platform constructed in Step 3 will only respond to one side of the magnet.\nThe design of the case contains compartments for the components listed in the attached wiring schematics. The IC 74AHCT125 is required to convert the 3.3V signal from the Teensy to the 5V signal required for the APA102 led strip. Layers 4 and 5 can also be glued together. Top layer 6 can be piled upon the other layers. All layers will remain in the correct position with the help of 3 steel rods with a diameter of 2mm. There are three small holes for the 2mm steel rods surrounding the larger hole for the rotating 4mm threaded rod attached to the brushless motor. Once all components are soldered according the schematic, the complete case can be put on the bolt-on adapter printed in Step 3. Please make sure that any open wires are properly insulated using heat shrink tubes. Please be aware that the correct functioning of the hall sensor of this steps depends on the magnet placed in the magnet holder described at step 3.\nThe attached proof of concept code 3D_POV_POC.ino will lighten up some leds in red. The sketch results in a square being displayed once the cylinder starts to rotate. But before the rotating starts the leds which are required to simulate a square are turned on by default. This is helpful to test the correct functioning of the leds in the next step.", "step_imgs": ["https://cdn.instructables.com/FGV/5GRG/JTWRZEK0/FGV5GRGJTWRZEK0.LARGE.jpg", "https://cdn.instructables.com/FJO/FUI6/JTWS3M9J/FJOFUI6JTWS3M9J.LARGE.jpg", "https://cdn.instructables.com/FKX/5ROJ/JTWRZEQF/FKX5ROJJTWRZEQF.LARGE.jpg", "https://cdn.instructables.com/FV6/JATR/JTWRZELL/FV6JATRJTWRZELL.LARGE.jpg", "https://cdn.instructables.com/FHC/3N9J/JTWRZEN0/FHC3N9JJTWRZEN0.LARGE.jpg", "https://cdn.instructables.com/FEQ/D9EU/JTWRZEJS/FEQD9EUJTWRZEJS.LARGE.jpg", "https://cdn.instructables.com/FB5/EGZG/JTWRZETT/FB5EGZGJTWRZETT.LARGE.jpg", "https://cdn.instructables.com/FRM/C07L/JTWRZEV8/FRMC07LJTWRZEV8.LARGE.jpg", "https://cdn.instructables.com/F9C/MYIO/JTWRZF23/F9CMYIOJTWRZF23.LARGE.jpg", "https://cdn.instructables.com/FMZ/UEIB/JTWRZESF/FMZUEIBJTWRZESF.LARGE.jpg", "https://cdn.instructables.com/F0W/0MDW/JTWRZEQ6/F0W0MDWJTWRZEQ6.LARGE.jpg"], "step_title": "Step 4: Rotating Casing"}, {"step": 5, "steps_text": "The attached Rotor_Cylinder_Files.zip contains the dxf files for cutting a 2mm thick Acrylic Sheet. The resulting 14 discs are necessary to build the transparent cylinder for this POV project. The discs need to be piled upon each other. The design of the cylindric discs allow 12 led strips to be soldered together as one long led strip. Starting from disc one a small led strip containing 6 leds need to be attached to a disc using the adhesive stickers on the led strip. Solder the wires to the led strip first before attaching the led strips to the disc using the adhesive stickers. Else you run the risk that the solder gun will melt the acrylic disc.\nOnce disc #13 is piled upon the transparent cylinder, the 2mm steel rod used to keep all layers in the correct positions can now also be cut to the right length, aligned to the the top of disc #13 of the cylinder. Disc #14 can then be used to keep the 2mm steel rods in place with the help of two M4 nuts.\nBecause the amount of time required to construct the whole device, I haven't been able to program more stable visually interesting 3D displays yet within the timeframe of the hackathon. That is also the reason why the provided code for controlling the leds is still very basic to proof the concept, showing only a red square 3 dimensionally for the time being.", "step_imgs": ["https://cdn.instructables.com/FA0/G772/JTWRZF3Z/FA0G772JTWRZF3Z.LARGE.jpg", "https://cdn.instructables.com/F63/SHX6/JTWRZELD/F63SHX6JTWRZELD.LARGE.jpg", "https://cdn.instructables.com/FLU/ALO2/JTWRZF2L/FLUALO2JTWRZF2L.LARGE.jpg", "https://cdn.instructables.com/FE8/CJIX/JTWRZF0O/FE8CJIXJTWRZF0O.LARGE.jpg"], "step_title": "Step 5: Rotating Cylinder With the Led Strips"}, {"step": 6, "steps_text": "Teensy 3.6\nI ordered a Teensy 3.5 for this project, but the supplier sent me a Teensy 3.6 by mistake. As I was eager to finish the project within the timeframe of the hackathon I decided to move forward with the Teensy 3.6. The reason why I wanted to use the Teensy 3.5 was because of the ports, they are 5V tolerant. This is not the case with the Teensy 3.6. That is also the reason why I had to introduce a bi-directional logic converter to the setup. With a Teensy 3.5 this would not have been required.\nPower Ramp Up issue: When turning on the device there is a power ramp up via the wireless dc-dc charging module to power the Teensy 3.6. Unfortunately the ramp up is too slow for the Teensy 3.6 to startup correctly. As a workaround I currently have to power up the Teensy 3.6 via the micro USB connection and then plug in the 12V Power Supply feeding the wireless dc-dc transmitter. Once the wireless dc-dc receiver is also supplying the power to the Teensy I can unplug the USB cable. People have shared their hack with a MIC803 for the slow power ramp up issue here: https://forum.pjrc.com/threads/44704-Boot-on-Power-Up-Problem-with-three-T3-6s\nLCD Screen Module\nErratic behaviour on external power. The screen works correctly when powered via USB. But when I power the LCD screen via the breadboard using the 5V supplied by the BEC or an independent Power Supply, the text starts to get scrambled after a few seconds after the text is supposed to change. I still need to investigate what is causing this issue.\nMechanical\nIn order to test my motor controller unit to measure the actual RPM\u2019s, I let the motor spin with the bolt on adapter, bolt and base case attached to the motor. During one of the initial test runs the screws connecting the motor holder to the motor unscrew themselves due to the vibrations. Luckily I noticed this issue in time so a potential disaster was avoided. I solved this issue by screwing the screws a bit tighter to the motor and also used a few drops of Loctite to secure the screws even more.\nSoftware\nWhen you export Fusion 360 sketches as dxf files for the laser cutter, supportive lines are exported as regular lines.", "step_imgs": [], "step_title": "Step 6: Lessons Learned"}, {"step": 7, "steps_text": "What would I have done differently based on the experience I gained with this project:\nUsing a led strip containing at least 7 leds instead of 6 leds per layer for some what nicer textual visualisations\nBuy a different brushless motor where the shaft is already sticking out on the correct (bottom) side of the motor. (e.g.: https://hobbyking.com/de_de/ntm-prop-drive-28-36-1000kv-400w.html) This will save you the trouble of either cutting the shaft or pushing the shaft to the correct side like I had to do now.\nSpending more time on balancing the device to minimize the vibrations, either mechanical or model it in Fusion 360.\nI have also been thinking about some potential improvements, which I might look into if time allows:\nActual making use of the SD card functionality on the Teensy to create longer animations\nIncrease density of imaging by using smaller leds (APA102(C) 2020). When I started this project a few weeks ago, led strips containing these small leds (2x2 mm) were not readily available in the market. It is possible to buy them as separate SMD components, but I would only consider this option if you are willing to solder these components on a custom PCB.\nTransfer 3D images wirelessly to the device (Wifi or Bluetooth). This should also make it possible to program the device to visualize sound/music.\nConvert Blender animations to a file format that can be used with the device\nPut all led strips on the base plate and focus the light to the layers of acryl. On each different layer small areas can be engraved to reflect the light when omitted from the leds. The light should be focused to the engraved areas. This should be possible by creating a tunnel guiding the light or using lenses on the leds to focus the light.\nImproving the stability of the 3D Volumetric display and regulation of rotation speed by separating the rotating base from the brushless motor by using gears and a timing belt.", "step_imgs": [], "step_title": "Step 7: Potential Improvements"}, {"step": 8, "steps_text": "I would like to give special thanks to the following persons:\nMy fantastic wife and daughters, for their support and understanding.\nTeun Verkerk, for inviting me to the Hackathon\nNabi Kambiz, Nuriddin Kadouri and Aidan Wyber, for your support, assistance and guidance throughout the Hackaton\nLuuk Meints, an artist and a fellow participant of this Hackaton who was so kind to give me a personal 1 hour introduction speed course to Fusion 360 which allowed me to model all the parts that I needed for this project.", "step_imgs": [], "step_title": "Step 8: Shout Out"}], "channel": ""}, {"category": "", "description": "For my daughters second birthday, we decided to get her a kitchen set. But I really wanted to make what we got her special and after being inspired by what some awesome makers had done with the Ikea Duktig Kitchen, we decided to get one and to make some modifications to it to make in unique.\nThe two new features we added to the kitchen are\nOven Mod:\nAdding lights to the oven section that could be set to different colours and that the brightness could be adjusted. This is obviously is not a realistic representation of how an oven works, but our daughter was just starting to learn her colours and we thought that she would really enjoy swapping between the different colours. (sorry about my dog wanting to be famous)\nMicrowave Mod:\nAdding lights and a timer to the microwave section. I went for a little bit more realism here, even trying to simulate the item in the microwave spinning by rotating the lit LED around the neopixel ring. This was bit too advanced for her at the time but now that she is a few months older she does really like this too!\nSeeing my Daughter play with this for the first time is probably my proudest moment as a maker. A lot of the times the things I make might be kind of interesting or cool, but seeing the glow on my Daugther's face the first time she was playing with it is honestly one of the highlights of my Dad career so far (some of it was from the Oven lights, but there was serious joy too!)", "title": "Ikea Kids Kitchen Lights Mod", "url": "https://www.instructables.com/id/Ikea-Kids-Kitchen-Lights-Mod/", "section": "technology", "steps": [{"step": 1, "steps_text": "I seen a couple mods for the Ikea Duktig Kitchen last year that I thought were amazing so I wanted to see if I could combine some of the best of both and make a few changes based on what I parts I had available and my based on my limited woodworking skills!\nThe first is the Kids Kitchen that says BEEP by RoaldH. This is a mod that adds lights and buttons to the oven section of the Kitchen.\nThe second is the IKEA Hack: Microwave for the Duktig Kids Kitchen by Myles Eftos. This mod adds a rotary encoder, a 7 segment and lights to the microwave section of the kitchen.\nLastly, I had a lot of spare Neopixel rings and ESP8266 boards left over from my WiFi Wedding Lights project so I wanted to try use as much as I could from that project so it would no longer just be sitting in a box on a shelf! I also think its kind of nice that something from our wedding is now being used by daughter to play with!", "step_imgs": ["https://cdn.instructables.com/FFM/SFCF/JT91LXY9/FFMSFCFJT91LXY9.LARGE.jpg", "https://cdn.instructables.com/FYP/T9MX/JT91LYN9/FYPT9MXJT91LYN9.LARGE.jpg", "https://cdn.instructables.com/FXV/787B/JTWS1UMC/FXV787BJTWS1UMC.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F9E/ZI3R/JTMSEDKO/F9EZI3RJTMSEDKO.LARGE.jpg"], "step_title": "Step 1: The Remix"}, {"step": 2, "steps_text": "I used the following parts in this project\nComponents:\n2no. D1 Mini ESP8266 Arduino boards* - I used these as I had some spare after the Wifi Wedding Lights project. You could replace this with any Arduino board though\n3no. 16 LED Neopixel Ring* - Again these were spare from the Wedding lights project, but the rings ended up working out quite well, especially for the mircrowave.\n4no. Arcade Buttons\n2no. Rotary encoder modules*\n1no. 7-Segment display module\nLarge Amp 5V power supply* - You need minimum 3 or 4 A amps, but could get away with less if you limit the max brightness of the the Neopixels.\nSome perf board* - I used two pieces\nScrew terminals*\nDC Jack to screw terminal adaptors (Male and Female)*\nParts From Ikea:\nIkea Dukstig Kitchen - I had mine assembled before stating these mods.\nCable trunking - This is a nice cheap way of tidying up the cable.\nTools:\nCordless Drill\nSelection of standard wood drill bits\n25mm Hole Saw bit\nSome screws\nSome clips to tidy up cables\n3d Printer (or access to one)", "step_imgs": [], "step_title": "Step 2: Things You'll Need"}, {"step": 3, "steps_text": "There are two sketches used in this project, one for the Oven mod and one for the Microwave mod.\nThe code is pretty simple, and as mentioned earlier, should run on any arduino if you change the pin numbers to match.\nIf you are using the ESP8266 boards like I did, you will first need to setup your Arduino IDE for programming these boards, check out the video above for steps on how to do this.\nOnce you are setup, download the the two sketches from github and upload them to the two separate boards\nMicrowave Sketch\nOven Sketch", "step_imgs": [], "step_title": "Step 3: The Code"}, {"step": 4, "steps_text": "First thing that we need to do is drill the holes above the oven to house the buttons and the rotary encoder. I did these steps while the kitchen was fully assembled, I just needed to remove the plastic stove top. You may need to remove the door in later steps, but that's easily done.\nI put some masking tape on the area where the buttons were being places so I could mark out where the holes were and to help protect the finish of the wood when drilling.\nI marked out the holes as shown below. The marking for the centre, the rotary encoder, is 16cm from the left. The inner buttons are marked 5cm from the centre and the outer buttons are marked 6cm from the inner buttons.\nI drilled a guide hole on the markings for the buttons using a 4mm drill bit. I then used a 25mm hole saw to drill the holes out large enough so that buttons could fit in them.\nNow comes for the scariest part of the whole build for me, the hole for the rotary encoder. The shaft of my rotary encoder was far to short to be able to just drill a single hole through the wood and get the nut on the shaft. I drilled a hole for the shaft using a 8mm drill bit (I think, please check the size before doing it!). Then from the inside of the oven I used a flat drill bit to drill out a hollow so that the rotary encoder fits inside this to make the depth of the hole the shaft needs to pass through shorter. Be very careful at this part! Take it slow and keep checking if its deep enough for the encoder to go through and grip the nut.\nNow would be a good time to test the fit of the button and the Rotary encoder. I was really happy with how they came out!", "step_imgs": ["https://cdn.instructables.com/FIY/4WXY/JTMSEDCV/FIY4WXYJTMSEDCV.LARGE.jpg"], "step_title": "Step 4: The Oven Mod - Drilling the Holes"}, {"step": 5, "steps_text": "The main components for the oven mod consists of\n4 arcade push buttons\n1 rotary encoder\n2 neopixel rings\nThe D1 Mini ESP8266 board.\nThe circuit is laid out as follows:\nI started by building a proof of concept of the circuit using a breadboard and crocodile clips so I could test out the circuit and start writing the Arduino sketch. It is a bit of a mess but it's a really good way of trialing out what you want to do without having anything permanent.\nOnce I was happy with the POC, I decided to move to a more solid solution. I made up a board using perfboard and screw terminals for connecting all the external components to the board. I find screw terminals are a great way of connecting components that are not attached to the same perfboard as the arduino so it allows you cut the wire to whatever length it needs to be.", "step_imgs": ["https://cdn.instructables.com/F3Q/PE6R/JTMSEDIJ/F3QPE6RJTMSEDIJ.LARGE.jpg", "https://cdn.instructables.com/F28/ZVOR/JTT5PK2A/F28ZVORJTT5PK2A.LARGE.jpg"], "step_title": "Step 5: The Oven Mod - the Circuit"}, {"step": 6, "steps_text": "I first screwed the perfboard to the inside of the oven towards the back.\nFor wire I used some CAT5 cable I had to hand. CAT5 has 4 pairs of wires (8 wire in total) so this was perfect to run one length of this up to the buttons. Make sure to keep it long enough to get to the furthest away button while being clipped against the edge (you don't want these wires dangling inside the oven)\nMy arcade buttons had a hole on their terminals so I decided to just wrap the wire around rather than soldering so I could easily remove if required.\nMy rotary encoder came with headers pre-soldered, I needed to un solder these and replace them with wire. Again i used a length of CAT5. The wire should be soldered from the bottom of the PCB so it fits better (as seen below)\nThe neopixel rings need to be attached to the bottom of the plastic hob and to the bottom of the shelf inside the oven. I used hot glue to attach these.\nI made a makeshift connector for the neopixels rings using male and female headers. This is so the neopxiels rings, or even what they are attached to, could be removed from the kitchen without the need for unscrewing them from the screw terminals. This is especially important for the one attached to the hob as that may need to be removed regular to replace it's batteries etc.\nFinally, I drilled a hole in the back panel to allow the power supply through (more about this in a later step)", "step_imgs": ["https://cdn.instructables.com/FBQ/1Y7J/JTMSEDMJ/FBQ1Y7JJTMSEDMJ.LARGE.jpg", "https://cdn.instructables.com/FCS/Z01G/JTMSEDTX/FCSZ01GJTMSEDTX.LARGE.jpg", "https://cdn.instructables.com/F0B/IF48/JTMSEDQG/F0BIF48JTMSEDQG.LARGE.jpg", "https://cdn.instructables.com/FYG/2SU2/JTMSEDOQ/FYG2SU2JTMSEDOQ.LARGE.jpg"], "step_title": "Step 6: The Oven Mod - Assembling"}, {"step": 7, "steps_text": "The main components for the oven mod consists of\n1 Rotary Encoder Module\n1 Passive Buzzer Module\n1 TM1637 7 Segment display\n1 Neopixel Ring\nA D1 Mini ESP8266 board.\nThe circuit is laid out as follows:\nYou should test the circuit out on a breadboard before starting assembly just to make sure everything is working as expect.\nLike I did with the oven mod, When I was happy with it how it turned out, I created a board using perfboard and screw terminals.\nThe 7 segment display and the rotary encoder are housed in a 3D printed enclosure that is screwed in below the microwave. This is not an exact fit for the parts (I'm not good at 3D design!) but with a bit of hot glue for the 7-segment display, it does the job fine!\nJust to note, that i left the buzzer attached to the perfboard, but if your buzzer is a bit quite it might be a good idea to bring it to this enclosure as well.\nSimilar to what we did earlier with the rotary encoder for the oven, we need to replace the pre-soldered header pins with wires for both the rotary encoder and the 7 Segment display.\nI had too take off the top of the kitchen in order to screw the Neopixel ring into place insider the microwave, but you could just use glue to save yourself this step. I drilled out a hole in the back of the microwave to allow the cables from the neopixel ring out.\nI screwed the perfboard to the back of the microwave and connected up all the wires.", "step_imgs": ["https://cdn.instructables.com/FWP/JB0S/JTT5Q6B9/FWPJB0SJTT5Q6B9.LARGE.jpg", "https://cdn.instructables.com/F6M/Y6JX/JTT5PK0X/F6MY6JXJTT5PK0X.LARGE.jpg", "https://cdn.instructables.com/F7K/E5FT/JTT5PK0Y/F7KE5FTJTT5PK0Y.LARGE.jpg", "https://cdn.instructables.com/F3B/93QY/JTWS0U6I/F3B93QYJTWS0U6I.LARGE.jpg", "https://cdn.instructables.com/FWQ/BAGC/JTWS0UED/FWQBAGCJTWS0UED.LARGE.jpg"], "step_title": "Step 7: The Microwave"}, {"step": 8, "steps_text": "To power the project, I used a single laptop style 5V power supply. Seeing as there are 48 neopixels, you should be aiming for a PSU cable of supplying at least 3 Amps (the neopixels will not all be on at the one time, but better to have the extra amp room if you want them, rather than looking for them).\nI used a DC Jack socket to screw terminal adaptor to take the single power supply in and then split it from there to the two perfboards. I used DC barrels connector to screw terminal adapters to connect this to each of the perfboards.\nFor tidying up the wires I used the mini trunkink from Ikea everywhere I could just to keep the wiring neat. This stuff is pretty cheap, can easily be cut using something like a snips and has adhesive on back so it's easy to stick up.", "step_imgs": ["https://cdn.instructables.com/FSO/KRJJ/JTWS0UA4/FSOKRJJJTWS0UA4.LARGE.jpg", "https://cdn.instructables.com/FBC/VC1L/JTWS0UC4/FBCVC1LJTWS0UC4.LARGE.jpg"], "step_title": "Step 8: Powering the Kitchen and Tidying Up Wires"}, {"step": 9, "steps_text": "One thing that I thought would be nice about getting the kitchen for our daughter is that it would hopefully be something she would have long time. I have been thinking of some changes that I could make to it so that it grows with her.\nDisplay the time to the microwave 7 Segment:\nMy daughter can't tell the time at the moment, but the way she is growing and learning I don't feel thats too far away! One simple mod would be display the time on the 7 segment display when it's not actively in use by the microwave. No additional hardware would even be required as the ESP8266 is capable of fetching the time from the internet. Here is a sample sketch I did displaying the time on this type of a display using an ESP8266\nAlexa integration:\nMy daughter is a big fan of \"lexa\" and I was thinking it would be pretty cool to add some integration between Alexa and the kitchen. I'm not sure exactly what that would be yet but I'm sure we could have some fun with it! Check out this library for using an ESP8266 with an Alexa\nDo you have any other ideas that could be added?", "step_imgs": [], "step_title": "Step 9: Ideas to Improve It in the Future"}, {"step": 10, "steps_text": "If I was building this again, there a couple of small things I would do differently to make it easier.\nD1 Mini Breakout Shield\nAfter building 2 of pretty much the exact same perfboard for this project, I decided I never wanted to build another one like this again! I ended up designing a PCB to this job instead and I'm really happy with how it turned out. It has screw terminals for all the pins of the D1 mini plus 6 addtional ones that can be connected to circuitry on the built in prototype area. This would have saved several hours when doing this build (perfboard projects always take me longer than I think). I sell these on Tindie if you want to buy one!\nArcade button Crimp Terminal\nThese slot onto the arcade buttons so it makes it really easy to connect them up. Definitely would be more convenient than the wrapping of out terminals like I did!\nYou can buy them on Aliexpress for really cheap*\n* Affilate Link", "step_imgs": ["https://cdn.instructables.com/FFA/VUAN/JTWRY1WU/FFAVUANJTWRY1WU.LARGE.jpg", "https://cdn.instructables.com/F37/M9DS/JTWRY1WT/F37M9DSJTWRY1WT.LARGE.jpg"], "step_title": "Step 10: Things I Would Do Differently"}, {"step": 11, "steps_text": "This is easily one of the most rewarding builds I have ever done. Lot's of times I make things because they are interesting or cool, but in truth they usual sit on a shelf. But this is something my daughter uses nearly every day and it means a lot to me that I could make something for her.\nI was really happy with how this turned out, the finish is definitely one of my better ones! It's actually quite interesting seeing unmodified versions of the kitchen, they look kind of strange to me!\nHopefully you enjoy this guide and can make use of it. If you do make a version of one I would absolutely love to see it!\nAll the best,\nBrian\nYouTube\nTwitter\nTindie", "step_imgs": ["https://cdn.instructables.com/FEC/VOBW/JTWS1YQ9/FECVOBWJTWS1YQ9.LARGE.jpg"], "step_title": "Step 11: Conclusion"}], "channel": ""}, {"category": "", "description": "Hello, i am happy to present you my first instructable.\nFirst, i am sorry if my English is bad, i learned English at school 15 years ago. I try my best.\nI used a lot of tutorials and forums for having solutions or ideas but i never contribute. That is why i am happy to start my contribution with you.\nMy project is a 3D printer build with recycled components and cheap materials. This project started with my son when i started to learn him how recycling and fixing are important for his future and the earth. 3d printer is for me a formidable machine that can contribute for a responsible consummation. It can contribute to the development of imagination and is a good approach to mechanical, programming, electronics, engineering ...\nMy specifications :\nA compact design.\nEasy to move and use.\nThe print area is 10 cm x 10 cm x 10 cm.\nFilament roll stored in the machine (250g spool).\nCompatible with regular nema17 steppers and GT2 belt.\nModular head.\nThe must important : use a maximum of scavenged components and 3d printed parts with PLA (biodegradable).\nHowever, i don't want a poor machine, it must have good prints. So i had to buy some parts like bearings because i didn't find better solution. All parts i bought are cheap but do their job.\nI chose the coreXY arrangement because it corresponds to my specifications and it need only one motor for the Z axis. I designed all the parts except the bowden extruder (by Schlotzz) and the clamp for linear bearings.\nAs you can see in the picture the first user is my son. In the first photo you can see everything the machine printed (tests and fails comprise). The machine can print with 0.15mm resolution and the longer print i do was 3 hours (motors are very small so they heat faster than the classic nema 17). It is quite noisy but i am always impressed to see it working !", "title": "Green Core XY : a 3D Printer With Recycled Components.", "url": "https://www.instructables.com/id/Green-Core-XY-a-3D-Printer-With-Recycled-Component/", "section": "technology", "steps": [{"step": 1, "steps_text": "2x nema 17 steppers with belts and bolts for XY axis (i found them in olds Espon C20 printers).\n1x nema 17 stepper with bolts for z axis (Epson C20 printer).\n1x nema 17 stepper (you can find strongest in big photocopier machine).\n1x coupler 4x6.\n1x 608zz bearing.\n16x 623zz bearings (i recently found them in server's cooling fans).\n8x LM8uu linear bearings.\n1x pneumatic connector PC4.\n1x driver gear.\n1x e3dv6 hotend remote bowden 1.75 12v.\n1x kit Arduino mega + Ramps 1.4 + 4x polulu 4988.\n12V 5A power supply (i am trying to convert a computer power supply).\n12V power jack plug.\nUSB cables.\n2x DVD drives (1 for the door).\n1x endstop switch.\n8mm linear shafts.\n6mm threaded rod.\nScrews, bolts and nuts (M2, M3, M4 & M6).\nSprings (found in printer, machines).\nMDF or plywood offcuts.\nPlexyglass offcut.\n12mm flexible tube (you can use PVC flexible cable pipe).", "step_imgs": ["https://cdn.instructables.com/FJW/8NSR/JTON6J8V/FJW8NSRJTON6J8V.LARGE.jpg", "https://cdn.instructables.com/FU5/7DW5/JTEMZFMO/FU57DW5JTEMZFMO.LARGE.jpg", "https://cdn.instructables.com/FVI/O9DN/JTWSBWXS/FVIO9DNJTWSBWXS.LARGE.jpg", "https://cdn.instructables.com/FCN/YYBD/JTWSBWZM/FCNYYBDJTWSBWZM.LARGE.jpg", "https://cdn.instructables.com/F0G/2IK0/JTWSBX1J/F0G2IK0JTWSBX1J.LARGE.jpg", "https://cdn.instructables.com/F8I/H1W2/JTWSBX6U/F8IH1W2JTWSBX6U.LARGE.jpg"], "step_title": "Step 1: Bill of Materials :"}, {"step": 2, "steps_text": "I built the box with 10mm thickness MDF (but plywood is better because less toxic) and 3mm plexiglass for the door. I got it in a carpentry workshop, they are offcuts that they don't use because to small. I cut it with a circular saw. The door frame is cut with a wood router.\nSadly, i accidentally deleted photos i took during this step. however, with the dust and bad light they were not very exploitable. I apologize for this lack.\nI used 25mm M3 screws.\nYou can choose to leave the wood apparent or to paint it. I finally painted mine with a white paint found in my garage.", "step_imgs": ["https://cdn.instructables.com/F0W/GEZE/JTCSJ34B/F0WGEZEJTCSJ34B.LARGE.jpg", "https://cdn.instructables.com/FOL/ABND/JTYNF51O/FOLABNDJTYNF51O.LARGE.jpg", "https://cdn.instructables.com/FTR/3TJJ/JTYNF51M/FTR3TJJJTYNF51M.LARGE.jpg"], "step_title": "Step 2: Woodworking"}, {"step": 3, "steps_text": "Maybe the most sporty part of this instructable !\nI picked up my linear rods from a demolition. I found in an old fax 6mm diameter linear shaft compatible with lm6uu bearings. You can modify the 3d files to adjust. The 3mm rod is in the DVD drive.\n8mm diameter linear shaft (mine are not rectified but fortunately it works great) :\n2x 225 mm (X axis)\n2x 180 mm (Z axis)\n2x 200 mm (Y axis)\n6mm diameter threaded rods :\n1x 135mm (Z axis)\n3mm diameter linear rod (optional) :\n2x 30mm (hinges)", "step_imgs": ["https://cdn.instructables.com/FO0/BLZS/JTEMZTHC/FO0BLZSJTEMZTHC.LARGE.jpg", "https://cdn.instructables.com/FIU/S8US/JTYNF5AI/FIUS8USJTYNF5AI.LARGE.jpg"], "step_title": "Step 3: Linear and Threaded Rod"}, {"step": 4, "steps_text": "Now it is time to use your 3d printer ! That is why I said this is a formidable machine. You can duplicate your printer, upgrade it, print mechanical elements ... but you need one to start this project. Maybe the 3d printer paradox ?\nI used my 3D printer Discoeasy200 by Dagoma with Gracious green and black PLA Filaments by ICE and White Chromatik PLA Filament by Dagoma. The project need XXXg of filament.\nPrint settings :\nSupports : no\nResolution : 0.2 mm\nInfill : 20%\nFilament : PLA\nAll files are directly printable with the best orientation. I recommend you to start with the Test.stl file. Indeed, this part got all different assemblies present in the machine. It is a good way to verify if your printer is properly calibrated to don't make the mistake to print all parts for nothing.", "step_imgs": ["https://cdn.instructables.com/FTJ/TRQD/JTEMZMXE/FTJTRQDJTEMZMXE.LARGE.jpg", "https://cdn.instructables.com/FT7/ZDGQ/JTEMZMY9/FT7ZDGQJTEMZMY9.LARGE.jpg"], "step_title": "Step 4: 3D Printing"}, {"step": 5, "steps_text": "For my project I used 3 stepper motors scavenged in old Epson C20 printers. Generally, printers are thrown in the trash because print heads are clogged, however, all the other parts in the machine work well. You can scavenge stepper motor, M3 nuts and bolts, belt, linear shaft, springs, buttons ... Fortunately, in old Epson printers motor steppers are nema 17. Apparently in big photocopier machine like Ricoh you can fo1nd more powerful stepper.\nTo prepare steppers you need Dupont connectors, old USB cables and your soldering material. You need two motors with drive pulley and another without (Z axis).\nWires length :\nStepper front right (with pulley) : 73 cm\nStepper front left (with pulley) : 50 cm\nStepper bottom Z : 23 cm\nYour motors can be connected like this to your Ramps but I preferred make an intermediate cable for this reason : If you want to connect your motors to another motherboard you have to disconnect only a big Dupont connector instead of three (six with the endstops).", "step_imgs": ["https://cdn.instructables.com/FBS/XGBC/JTCSIC1X/FBSXGBCJTCSIC1X.LARGE.jpg", "https://cdn.instructables.com/FN1/ZVYR/JTYNF5MT/FN1ZVYRJTYNF5MT.LARGE.jpg"], "step_title": "Step 5: Stepper Motors"}, {"step": 6, "steps_text": "For this step I try to use 3 different components : two are found in the DVD drive and one is a classic end stop (old project). You need old USB cables and soldering materials.\nWires length :\nClassic end stop (Y) : 29 cm\nButton (X) : 51 cm\nThree foot switch (Z) : 32 cm\nYou will connect each end stop with a female Dupont double connector during the wiring step (after the pre assembling).\nLike motors, these end stops can be directly connected to the ramps, but I preferred the solution for a big connector.\nNotice I tried to use an LED with the three foot switch but i failed.", "step_imgs": ["https://cdn.instructables.com/F23/0XU3/JTCSIDDS/F230XU3JTCSIDDS.LARGE.jpg", "https://cdn.instructables.com/F5F/S8OH/JTYNF5T2/F5FS8OHJTYNF5T2.LARGE.jpg", "https://cdn.instructables.com/F5N/N3LT/JTCSIDAX/F5NN3LTJTCSIDAX.LARGE.jpg"], "step_title": "Step 6: End Stops"}, {"step": 7, "steps_text": "As i said all my wires are from old USB cables.\nI chose to have an intermediate section of wires between the Ramps and the steppers/end stops. If i want to change the board i only have to disconnect the two big connectors. If you want to alternate the Arduino Mega and the Ramps with the Arduino Uno and the CNC shield it will be easier and fast.\nHowever, you can directly connect the motors and the end stops to the Ramps. The extruder is directly connected with the Ramps.\nTo make the nodes i used sleeving heat shrink tube but, you can use tape or a hot glue gun.", "step_imgs": ["https://cdn.instructables.com/FF0/XEYC/JTONB5SN/FF0XEYCJTONB5SN.LARGE.jpg", "https://cdn.instructables.com/FY2/DGIW/JTT5KOOX/FY2DGIWJTT5KOOX.LARGE.jpg"], "step_title": "Step 7: Wiring"}, {"step": 8, "steps_text": "Here is a special step for the bed. It is not hard, but i prefer separate this step for a better readability.\nTake care to be sure that the M6 nut doesn't move. Use paper or tape to add thickness if needed. I used for the bed an aluminum panel cutoff, but you can use another strong material that doesn't curve. I suggest you to use Blue tape on the bed for a good adherence with the first layer.\nLike the box I painted the wood in white.", "step_imgs": ["https://cdn.instructables.com/FKM/6JDK/JTEMZOL8/FKM6JDKJTEMZOL8.LARGE.jpg", "https://cdn.instructables.com/F5C/SOFN/JTYNF5Y3/F5CSOFNJTYNF5Y3.LARGE.jpg", "https://cdn.instructables.com/F6A/FNBV/JTYNF5Y0/F6AFNBVJTYNF5Y0.LARGE.jpg"], "step_title": "Step 8: The Bed"}, {"step": 9, "steps_text": "It is time to test your dexterity !\nThese assemblies are intuitive and quite repetitive. So if you pass the first element you will success the other.\nTake care with the Z axis' motor, his shaft moves and it can cause troubleshoots during printing. That is why you have to pinch it with the coupler.\nNotice that in the illustration some parts are not updated.", "step_imgs": ["https://cdn.instructables.com/FTF/4P8E/JTON79Z1/FTF4P8EJTON79Z1.LARGE.jpg", "https://cdn.instructables.com/FT3/HT3Z/JTON00R6/FT3HT3ZJTON00R6.LARGE.jpg", "https://cdn.instructables.com/FWY/7UGS/JTYNF60X/FWY7UGSJTYNF60X.LARGE.jpg", "https://cdn.instructables.com/FV7/QZY0/JU31R5US/FV7QZY0JU31R5US.LARGE.jpg", "https://cdn.instructables.com/FME/OLG9/JTYNF63E/FMEOLG9JTYNF63E.LARGE.jpg", "https://cdn.instructables.com/FKK/MQL2/JTYNF671/FKKMQL2JTYNF671.LARGE.jpg", "https://cdn.instructables.com/FB5/JK9W/JTYNF68C/FB5JK9WJTYNF68C.LARGE.jpg", "https://cdn.instructables.com/FS8/M49U/JTYNF68D/FS8M49UJTYNF68D.LARGE.jpg", "https://cdn.instructables.com/FBF/4524/JTYNF68E/FBF4524JTYNF68E.LARGE.jpg", "https://cdn.instructables.com/FXK/G64E/JTYNF68B/FXKG64EJTYNF68B.LARGE.jpg", "https://cdn.instructables.com/F1O/QD5E/JTYNG0OP/F1OQD5EJTYNG0OP.LARGE.jpg", "https://cdn.instructables.com/FW5/GYBT/JTYNG0QN/FW5GYBTJTYNG0QN.LARGE.jpg", "https://cdn.instructables.com/FXJ/5ARQ/JTYNG0PK/FXJ5ARQJTYNG0PK.LARGE.jpg"], "step_title": "Step 9: Pre Assembling"}, {"step": 10, "steps_text": "The minimum needed is 12V 5A. I am not reassured that a machine works during 3 hours with a diy power supply, especially if my son is around ! That is why i use a power supply used for Christmas lighting. However, i am working to build a secure diy power supply from an old computer.\nBe careful with electricity, it can burn your house and kill.", "step_imgs": ["https://cdn.instructables.com/FZR/AGEF/JTWSC7KK/FZRAGEFJTWSC7KK.LARGE.jpg", "https://cdn.instructables.com/FFT/LUW1/JTWSC7L9/FFTLUW1JTWSC7L9.LARGE.jpg"], "step_title": "Step 10: Power Supply"}, {"step": 11, "steps_text": "For software I use Repetier Host for this reason :\nIt is free.\nIt is easy to use.\nIt can slice and pilot your printer.\nYou can use Cura and Slic3r to slice.\nYou can easily configure it for a CNC or a Laser.\nIt is compatible with Marlin firmware.\nIf you want another solution you can use to slice Slic3r or Cura and to pilot Pronterface for example. They are free and have a big community.\nYou need to install Arduino IDE to transfer the firmware (Repetier or Marlin) in your Ramps.\nI give you my Marlin and Repetier configurations they work both.", "step_imgs": ["https://cdn.instructables.com/FRY/1228/JTONC9PC/FRY1228JTONC9PC.LARGE.jpg", "https://cdn.instructables.com/FIB/W2S6/JTONC9QZ/FIBW2S6JTONC9QZ.LARGE.jpg"], "step_title": "Step 11: Firmwares & Softwares"}, {"step": 12, "steps_text": "I chose these two elements because they are cheap, well known and if you get a problem, with luck you only have to change one of them. Nevertheless, when you are working on the Ramps be sure that there is no electricity\n(12V or USB connection). Be careful and verify your connection before powering the shield. I did the mistake and I think i killed a component in the Arduino (my 5V outputs are 3V now). You have to plug stepper drivers to control the motors. I chose the pololu A4988. They are cheap and work well.\nAfter plugging the jumpers and the pololu, attach the Arduino with the printed motherboard rail. Then plug the Ramps in the Arduino Mega. Depending your power supply you can like me, attach a 12V power jack plug.\nWe will verify the steppers :\nDispose the motors like if they were in the box.\nOnly plug the motors on the Ramps.\nVerify all then connect the motherboard to your computer.\nPower the Ramps.\nLaunch Repetier Host and connect the printer.\nGo to the manual control.\nTest to go to the right, and look the motor's rotation.\nCompare with my schema. If one turn in the bad direction disconnects the printer, unplug the USB and power supply.\nInvert the connection of the motor on the ramps.\nDo it with the other motors (Z goes down).\nNow it is time to adjust the steppers :\nYou will do the following steps.\ntest to go to the right.\nWith an isolate screwdriver, slowly turn the little screw on the pololu in anticlockwise.\ntest to go to the right.\nWhen the motor stop to work turn 1/4 in clockwise.\nDo it with the other motors (Z goesdown).\nThis method looks archaic, but works for all steppers I used.", "step_imgs": ["https://cdn.instructables.com/FD7/71IJ/JTT5S21Q/FD771IJJTT5S21Q.LARGE.jpg", "https://cdn.instructables.com/FU3/ZTAK/JTWSCDVN/FU3ZTAKJTWSCDVN.LARGE.jpg", "https://cdn.instructables.com/F8A/WW5B/JTWSCDQY/F8AWW5BJTWSCDQY.LARGE.jpg", "https://cdn.instructables.com/FGW/TBWT/JTWSCJAJ/FGWTBWTJTWSCJAJ.LARGE.jpg"], "step_title": "Step 12: Arduino Mega and Ramps 1.4"}, {"step": 13, "steps_text": "It is time to assemble all the parts before giving life to your printer.", "step_imgs": ["https://cdn.instructables.com/FMB/V9OU/JTYNFZZI/FMBV9OUJTYNFZZI.LARGE.jpg", "https://cdn.instructables.com/F7Q/PM6F/JTYNFZRD/F7QPM6FJTYNFZRD.LARGE.jpg", "https://cdn.instructables.com/F4X/34VY/JTYNFZTH/F4X34VYJTYNFZTH.LARGE.jpg", "https://cdn.instructables.com/FII/FZZP/JTYNG03B/FIIFZZPJTYNG03B.LARGE.jpg", "https://cdn.instructables.com/F5A/P9ZE/JTYNG01O/F5AP9ZEJTYNG01O.LARGE.jpg", "https://cdn.instructables.com/FGF/4SGU/JTYNFZX9/FGF4SGUJTYNFZX9.LARGE.jpg", "https://cdn.instructables.com/F1H/3RJ0/JTYNFZTG/F1H3RJ0JTYNFZTG.LARGE.jpg", "https://cdn.instructables.com/FGJ/QDSF/JTYNFZSH/FGJQDSFJTYNFZSH.LARGE.jpg"], "step_title": "Step 13: Assembling"}, {"step": 14, "steps_text": "Folow the instruction for the bed leveling.\nNotice you can move the head with the software, or with the hand if you unpower the motors in the software.\nPersonally i prefer the second solution.\nAfter this step your printer is operational.\nI hope you enjoy reading my first instructable. It is a hard work, but i am happy to share it. I will update this instructable. Tell me if there is something wrong. Thank you. R\u00e9my", "step_imgs": ["https://cdn.instructables.com/F6C/8I7U/JU31RPS4/F6C8I7UJU31RPS4.LARGE.jpg"], "step_title": "Step 14: Calibration"}, {"step": 15, "steps_text": "I designed this printer to be transformable in CNC, plotter or a Laser engraver.\nYou can disconnect the Ramps 1.4 and use a CNC shield, you can unplug the Hotend and plug another tool.\nI tried with a motor with a drill bit, a dremel and a pen. That works !", "step_imgs": ["https://cdn.instructables.com/FP4/XN64/JTWSBPHN/FP4XN64JTWSBPHN.LARGE.jpg"], "step_title": "Step 15: Transformations"}], "channel": ""}, {"category": "", "description": "Featured design on Thingiverse.com!\nI started working with 3D printing in 2017, the year I got my first printer and started to venture into 3D modeling and printing.\nAt the time I spent more and more time in the improvised laboratory in a bedroom, doing different experiments with 3D printing and electronics. And the first challenge I faced was to print my own tools to better organize and enjoy my space. It was in this context that I decided that I needed to improve the lighting of my workbench.\nI searched the internet for different models, but none adapted to my requirements. It was then that I came across with the Articulating, Wall-Mounted, Magnetic Phone Mount designed by Kenneth Haynie . And that's where this Remix started! The model, used as a mobile phone holder, has been transformed into an articulated luminaire.\nWith the permission of the original author, I remodeled all the pieces following a similar pattern, and after I finished and satisfied with the result, I decided to share it with the community. And to my surprise, the model was extremely well accepted and even featured on Thingiverse, one of the largest, if not the largest, platform for sharing models for 3D printing! The model became a hit with over 220,000 views, 36,000 downloads and 7,800 likes! To help users print and assemble their own pieces, I shared a tutorial here in Instructables which, to my second surprise, was awarded in the Plastics Contest of 2017 with almost 20,000 views!\nAnd what surprised me the most is that other users started to print and create their own remixes! At the time of publication of this article, more than 60 lamps had already been produced and shared. For me, it was a surprise to know that people all over the world liked the model so much that they spent hours of their lives printing and posting versions of my project. In the end, the project has evolved to become a kind of kit, such as a LEGO-lamp, in which users can make different combinations and form different structures.\nThroughout this tutorial I present my version of several of these remixes developed over the last few years to improve the use of the articulating lamp. I'll show you some remixes (made out of remixes of my initial designed, which was remixed from another design!) and the links fo the parts developed by members of the 3D printing user community, as well as detailed information for my version of each of these parts.\nAlthough it is extremely simple, I'll show you how to assemble the lamp, and suggestions on how to combine the pieces to form different structures.\n\nBe careful when working with electricity. Make sure there is no short circuit and just try to connect to the electrical power plug after making sure that all components are properly connected and double insulated. If you don't have enough experience working with electricity, as for others help.\nDon't touch any exposed wire or any metal part of the LED lamp after it's energized! Some LED spots have a metal heat sink. Avoid touching that part when the lamp is on!\nOnce there are exposed wires, it's not recommend to use it places accessible to children or animals. Under no circunstances use it close to wet surfaces!\nIt's and experimental design, so you might use it with caution.", "title": "3D Printed Articulating Lamp - REMIXED", "url": "https://www.instructables.com/id/Articulating-LED-Lamp-REMIXED/", "section": "technology", "steps": [{"step": 1, "steps_text": "[atualizar links e coupons]\nThe following tools and materials were used in this project:\n3D printer (link / link). In my case I used a Voolt3D, a Grabber i3 based 3D printer. But you can't use differente models of 3D printers. Most of the parts are quite small. The larger ones will be the arms of the lamp, with up to 200 mm. Make sure that your printer has enough print area for that.\n1.75mm PLA (link / link) of different colors. I combined white, orange and blue PLA in my design;\nScrewdriver. You'll need it for mounting your lamp on the wall and to assemble the electrical plug and switch;\nScrews (for mouting your lamp on the wall);\n5W LED spotlight (link). Don't forget to check its voltage.\nGU10 socket (link). Don't forget to check its voltage.\nYou'll probably need some wires, a power plug and a on/off switch. You can find it in electrical hardware stores.\nThe links described above are only a suggestion of where you can find the items used in this tutorial (and support my future hacks). Feel free to search for them elsewhere and buy at your favourite store.\nPlease be carefull when working with electricity. It might be dangerous. Some of those connectors and LED bulbs might have exposed metal parts! Don't touch it's energized and keep it out of reach from children or pets. Make sure that everything is perfectly isolated beforing turning it on. If you have no experience working with electricity, ask for help of any one with experience, or use lower voltages (e.g. 5V LEDs).\nCollect everything and get ready for some action!\nDid you know you can buy a Creality3D Ender for only $199.99? Get yours at http://bit.ly/2WBY0jm.", "step_imgs": ["https://cdn.instructables.com/FPA/DUV1/J6MGIP0Q/FPADUV1J6MGIP0Q.LARGE.jpg", "https://cdn.instructables.com/F3U/3HRS/J6MGIPFL/F3U3HRSJ6MGIPFL.LARGE.jpg", "https://cdn.instructables.com/FRI/QU5I/J6QQGPJI/FRIQU5IJ6QQGPJI.LARGE.jpg", "https://cdn.instructables.com/F7Z/ZTSD/J6QQGPJA/F7ZZTSDJ6QQGPJA.LARGE.jpg", "https://cdn.instructables.com/FGU/PCQQ/J6QQEZTA/FGUPCQQJ6QQEZTA.LARGE.jpg", "https://cdn.instructables.com/F8W/W6FH/J6QQEZTN/F8WW6FHJ6QQEZTN.LARGE.jpg", "https://cdn.instructables.com/FBB/8SY5/J6QQGQR8/FBB8SY5J6QQGQR8.LARGE.jpg", "https://cdn.instructables.com/FLO/MWOX/J6QQEZRT/FLOMWOXJ6QQEZRT.LARGE.jpg", "https://cdn.instructables.com/FW5/CRKS/J6MGIPW3/FW5CRKSJ6MGIPW3.LARGE.jpg"], "step_title": "Step 1: Tools and Materials"}, {"step": 2, "steps_text": "In the next sections I'll tell you a little about each of the pieces used in this project. The general idea of the 3D model was based on Kenneth's Articulating, Wall-Mounted, Magnetic Phone Mount desing. Thanks, man! For this lamp I redesigned most of the parts using Fusion 360 and made some adaptations and improvements for my specific application.\nYou can find all files at: https://www.thingiverse.com/thing:2505394\nThe initial design had two models of arms:\nOne with two \"male\" ends (two threaded ends);\nOne with two \"female\" ends (two ends with a hole).\nThe idea here seemed great to me! The threaded end of one of the arms passes into the hollowed end of the other, and a knob, also 3D printed, is screwed to compress the two pieces together. Grooves and bounces on the surface of these two partes are used to lock the position of the arms.\nThese two models are still available and are still compatible with all other parts. However, these two types of parts slightly limit the mounting of the lamp, since one should always use an even number of arms between the lamp holder and the anchor point.\nThe first remix of the project was the inclusion of a new type of arm, containing a threaded joint at one end (male) and a hole at the opposite end (female). In this way, it is possible to mount the lamp with any desired number of arms (even or odd number of arms), making the structure longer or shorter as desired. Special thanks to Robert Phelps\nwho had the great idea of adapting the arms (link). Thank you!\nDifferent applications may require larger spacing between the fixing point of the lamp and the object to be illuminated. With this in mind, different sizes of arms were introduced: 100, 140 and 200 mm. Any of the sizes can be combined in the construction of the joint. The idea came after Ken Mckittrick published and 8 inch long arm (link), and made realize that this might be usefull for different users.\nPlease also check div saW remix (link). It uses a spring between the arms and the nuts to create a self articulating joint.", "step_imgs": ["https://cdn.instructables.com/FDU/20HW/JTIYOHRD/FDU20HWJTIYOHRD.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FFN/SCXN/JTIYOIG3/FFNSCXNJTIYOIG3.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FRZ/Y7JW/JTIYOIKR/FRZY7JWJTIYOIKR.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FDD/7CMW/JTIYOK7P/FDD7CMWJTIYOK7P.ANIMATED.LARGE.gif"], "step_title": "Step 2: 3D Models - Arms"}, {"step": 3, "steps_text": "One of the points that had most of the remixes since the creation of this model was the lamp holder. Different users have proposed different models for different types of lamps: from incandescent lamps to 5V LED lamps.\nThe original design is based on the use of LED lamps with GU10 connector. You can find both lamp and connector on electrical hardware stores. The idea here is quite simple: the lamp is fitted on one side of the holder in a circular cavity, and the connector is engaged on the opposite side. This assembly makes the lamp stay fixed, without the need for additional parts.\nOne remix proposed here was the addition of a new lamp holder model, enabling a pair of lamps on the same holder. Thus, it is possible to achieve twice the brightness for the luminaire.\nThis remix was inspired in Lena Br\u00fcder design (link), which accomodates three lamps in a single holder. I thought three lamps would be too much for me, so I redesigned it for a pair of lamps only. :)\nA lot of users warned me about the dangers of the exposed contacts behind the socket, and the danger of and electrical discharge. Carlos Martinez (link) and Pepe Potamo (link) proposed a lamp cover as a safety improvement. But what really caught my attention was the solution of MAILLERE Brigitte (link), who proposed a lamp cover with a round switch for turning the lamp on/off. I really liked that and decided to make my own version, in a octagonal pattern to resemble the format of the nuts used in my design. The socket is hidden inside this structure, and a round button is installed on the opposite side. There's a hole on side for the wires.\nI also designed a simpler version, without a button, meant to cover the exposed contacts of the connector and avoid electical issues. As always, use it if caution even with this protective lamp cap.\nThe very first suggestion I received was for a wire holder for the lamp. The wires between the connector and the socket are loose, being able to entagle with the structure itself or with nearby objects. Some users solved this using some zip ties, which's just fine. But Carlos Martinez (link) presented another great solution for the problem, followed latter by Pepe Potamo (link). They devised a clip to hold the wires close to the structure of the arm itself.\nAlthough, I wanted something simpler. So I designed my own version of the wire clip, which's easy to use, easy to print and, I hope, not so easy to break! :)\nUsers all around the world have proposed different types of holders for different lamp bulbs (incandescent lamps, 5V LEDs, etc.). I did not get to try these remixes, but I encourage you to try, if the lamp you want to use is different from the one I present here. Here are some suggestions:\nGU10 holder (link)\nE27 connector (link / link)\nIkea lamp (link / link)", "step_imgs": ["https://cdn.instructables.com/F7Y/5IL0/JTON98NY/F7Y5IL0JTON98NY.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FW9/DF8F/JTON98RR/FW9DF8FJTON98RR.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F92/D54U/JTON6H0F/F92D54UJTON6H0F.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FFR/USH9/JTWSCBYY/FFRUSH9JTWSCBYY.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FPM/XV97/JTON6H8U/FPMXV97JTON6H8U.ANIMATED.LARGE.gif"], "step_title": "Step 3: 3D Models - Lamp Holders"}, {"step": 4, "steps_text": "The fixing point of the lamp was verry questioned since the birth of this project. The wall bracket was initially designed for a specific configuration in my office, where the lamp would be fitted into the gap between two wooden panels, without the need for fastening screws.\nIn fact this setting is quite specific and few users would find the same facility in their homes or workplaces. Thus, another model was proposed for the instalation using a pair of screws. It's made of three parts: the wall mount (which's screwed on the wall), a joint (which allows the lamp to turn 180 degrees around the fixing point), and a bolt (which is used for the instalation of the joint, along with a knob described earlier).\nSoon a lot of suggestions and remixes for new support proposals appeared.\nSome of them used Johann Joe's G-Clamp desing as reference, like the ones proposed by Morten Thorsen (link) and Tim Hespel (link). They both look great!\nThis type of support is very versatile, since it can be installed on tables and other flat surfaces, including in the 3D printers themselves (a popular assembly among printer owners!).\nI present my support version here, remixed from the model of Johann. The model allows the installation of the support on surfaces with thickness up to 45 mm, and might be used on table top or shelves. The model is composed of three parts: the clamp itself, a bolt (which is threaded to the clamp) and a cap (fitted to the end of the bolt to compensate for surface angulation). A bolt and a knob are also used for the complete assembly.\nAnother new support presented here is the clip peg type. This support is designed to be \"clipped\" on flat surfaces with thickness up to 35 mm. The advantage here is, in addition to versatility, the fact that it is made up of a single piece! It will take longer to print, but it's make of a single part with no external moving parts.\nThe last part I present here is the zip tie mount. It was proposed by Gael Lanfond (link) based on a remix of the wall mount part. It has a couple of inserts, through which zip ties are passed. This assembly allows tying the luminaire in tubular structures, like pipes and post. It's a great idea!\nSome users also proposed some models meant to be installed on 3D printers. like those ones by MAILLERE Brigitte (link) and Simon Couturier (link). Since different printers would have different setups, there are endless possibilities for supports like this!", "step_imgs": ["https://cdn.instructables.com/FW1/IPP1/JTON98BV/FW1IPP1JTON98BV.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F10/6PB3/JTIYOK74/F106PB3JTIYOK74.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F83/JUJA/JTON988X/F83JUJAJTON988X.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FYM/F80D/JTON988V/FYMF80DJTON988V.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FMR/BAWJ/JTON988W/FMRBAWJJTON988W.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F32/NC6S/JTON988U/F32NC6SJTON988U.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FR2/69DO/JTON98FT/FR269DOJTON98FT.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FAI/PBC8/JTON6H61/FAIPBC8JTON6H61.ANIMATED.LARGE.gif"], "step_title": "Step 4: 3D Model - Fixing Point"}, {"step": 5, "steps_text": "You may print the parts described on the previous steps, in your favourite color. Some of the parts, like the arms or the knobs, might have to be printed more than once. I printed all the parts in PLA, with 0,2mm resolution, 20% infill and no supports (considering you place then with the right orientation, the one of the stl files).\nYou can find all files at: https://www.thingiverse.com/thing:2505394\nFollows a picture of each part and the extimated tipe you'll take to print them.\nArms:\nPrinting time:\n- \"Female/female\" arm (100 mm / 140 mm / 200 mm): 70 min / 90 min / 110 min\n- \"Male/Male\" arm (100 mm / 140 mm / 200 mm): 120 min / 140 min / 160 min\n- \"Female/Male\" arm (100 mm / 140 mm / 200 mm): 90 min / 110 min / 130 min\nKnob\nPrinting time: 30 min\nSingle lamp holder:\nPrinting time: 105 min\nDouble lamp holder:\nPrinting time: 145 min\nLamp button:\nPrinting time: 95 min\nLamp cap:\nPrinting time: 25 min\nWire clip:\nPrinting time: 10 min\nWall mount:\nPrinting time: 70 min\nBolt:\nPrinting time: 70 min\nWall joint:\nPrinting time: 90 min\nClamp:\nPrinting time: 110 min\nClamp screw:\nPrinting time: 90 min\nClamp cap:\nPrinting time: 10 min\nClip:\nPrinting time: 235 min\nTube mount:\nPrinting time: 85 min", "step_imgs": [], "step_title": "Step 5: 3D Printing"}, {"step": 6, "steps_text": "In this step I'll show you how to assemble the lamp, connecting each part of it. The assembly is very intuitive and self explanatory, however I wanted to include some animations here! :D\nAs I said before, there are several ways to mount the lamp using more or less components. Here I present just how to assemble each component individually.\n\nArms\nConnect the threaded end of one arm with the hollowed end of the next arm and use a knob to compress the two and lock their relative position.\nSingle lamp holder\nConnect its end to the threaded end of one arm and use a knob to compress the two and lock their relative position.\nDouble lamp holder\nConnect its end to the threaded end of one arm and use a knob to compress the two and lock their relative position.\nLamp connector\nPass a LED spotlight through the lamp holder and put the GU-10 connector on the other side.\nWire holder\nClip the wire holder into the arm, securing the cable.\nLamp cap\nPass the wires through the center hole of the part and attach the cap to the lamp connector.\nLamp button cap\nFit the button on the cap, solder the wires from the connector to the button terminals (not shown in the animation), and the power wires through the cap hole (not shown in the animation). Attach the connector to the lamp button cap part, and then the connector on the lamp.\nWall mount\nConnect the wall joint to the hollowed end of one of the arms, imprisoning it with a knob. Enclose the wall mount in the wall joint, and pass a bolt through both parts. Thread a knob at the end of the bolt. Use a couple of screws to install it on the wall.\nG-clamp\nConnect the wall joint to the hollowed end of one of the arms, imprisoning it with a knob. Enclose the clamp in the wall joint, and pass a bolt through both parts. Thread a knob at the end of the bolt.\nClip\nConnect the clip to the hollowed end of one of the arms, imprisoning it with a knob.\nTube mount\nConnect the wall joint to the hollowed end of one of the arms, imprisoning it with a knob. Enclose the tube mount in the wall joint, and pass a bolt through both parts. Thread a knob at the end of the bolt. Use a couple of zip ties to install it on a pipe or post.", "step_imgs": [], "step_title": "Step 6: Assembling"}, {"step": 7, "steps_text": "As I showed before, once parts are printed, mounting the structures is easy! There are several ways to assemble the lamp by combining different parts to create the desired structure. Below I present some \"recipes\" for mounting your lamp:\nRecipe #1 - Wall-mounted lamp\nWall mount (1)\nBolt (1)\nWall joint (1)\nArms (n)\nNuts (n+2)\nLamp holder (1)\nHow-to: Start from the wall mount part. The bolt passes through the wall mount and the wall joint parts and is locked with a knob on its end. Attach the female arm (or a mixed arm) to the wall joint using a knob. Connect the male arm (or another mixed arm) to the female on with another knob and attach the lamp holder to the other end of the male arm with another knob. Finally pass a LED spotlight through the lamp holder and put its connector. Your structure will be ready to be attached to the wall.\nRecipe #2 - Desk/shelf mounted lamp (with clamp)\nClamp (1)\nClamp screw (1)\nClamp cap (1)\nBolt (1)\nWall joint (1)\nArms (n)\nNuts (n+2)\nLamp holder (1)\nHow-to: Start from the clamp part. Put the screw on one side of the camp and attach the cap on it's end. The bolt passes through the clamp and the wall joint parts and is locked with a knob on its end. Attach the female arm (or a mixed arm) to the wall joint using a knob. Connect the male arm (or another mixed arm) to the female on with another knob and attach the lamp holder to the other end of the male arm with another knob. Finally pass a LED spotlight through the lamp holder and put its connector. Your structure will be ready to be attached to the wall.\nRecipe #3 - Desk/shelf mounted lamp (with clip)\nClip (1)\nArms (n)\nNuts (n+1)\nLamp holder (1)\nHow-to: Start from the clip part. Attach the female arm (or a mixed arm) to the clip part using a knob. Connect the male arm (or another mixed arm) to the female on with another knob and attach the lamp holder to the other end of the male arm with another knob. Finally pass a LED spotlight through the lamp holder and put its connector. Your structure will be ready to be attached to the wall.\nRecipe #4 - Tube/post mounted lamp\nTube mount (1)\nBolt (1)\nWall joint (1)\nArms (n)\nNuts (n+2)\nLamp holder (1)\nHow-to: Start from the tube mount part. The bolt passes through the tube mount and the wall joint parts and is locked with a knob on its end. Attach the female arm (or a mixed arm) to the wall joint using a knob. Connect the male arm (or another mixed arm) to the female on with another knob and attach the lamp holder to the other end of the male arm with another knob. Finally pass a LED spotlight through the lamp holder and put its connector. Your structure will be ready to be attached to the wall.\n*n is the number of arms you want on your articulating lamp. In any of the recipes, you might add some wire holders (one for each arm), a button cap or a simple protective cap.\n\nBe careful when working with electricity. Make sure there is no short circuit and just try to connect to the electrical power plug after making sure that all components are properly connected and double insulated. If you don't have enough experience working with electricity, as for others help! Don't touch any exposed wire or any metal part of the LED lamp after it's energized! Some LED spots have a metal heat sink, and some GU10 connectors have exposed metal. Avoid touching that part when the lamp is on! If necessary, cover it with isolating materials!", "step_imgs": ["https://cdn.instructables.com/FIE/GT7U/JTT5HRLC/FIEGT7UJTT5HRLC.LARGE.jpg", "https://cdn.instructables.com/FUZ/LL91/JTT5HRNK/FUZLL91JTT5HRNK.LARGE.jpg", "https://cdn.instructables.com/FN2/0T5F/JTT5HRML/FN20T5FJTT5HRML.LARGE.jpg", "https://cdn.instructables.com/FF5/GS2E/JTT5HRI7/FF5GS2EJTT5HRI7.LARGE.jpg", "https://cdn.instructables.com/FMY/44E3/JTT5HRJ3/FMY44E3JTT5HRJ3.LARGE.jpg", "https://cdn.instructables.com/FAY/TGX8/JTT5HRKC/FAYTGX8JTT5HRKC.LARGE.jpg", "https://cdn.instructables.com/FF8/IX0I/JTT5HRII/FF8IX0IJTT5HRII.LARGE.jpg"], "step_title": "Step 7: Assembling - Suggested Recipes"}, {"step": 8, "steps_text": "It's done! Turn it on an let it shine!\nYou can adjust the angle between each component to make the spotlight aim the place you want to light up.\nHave suggestions on how to improve the design? Need aditional parts to be designed? Leave it on the comments bellow!\nIf you still don't follow my tutorials, take a look at those other projects in which I explain a little bit about internet of things, robotics and 3D printing. I hope you enjoy them too!\nPlease consider supporting my future projects with a small donation! :D\nBitcoin donation: Deposit Address = 1FiWFYSjRaL7sLdr5wr6h86QkMA6pQxkXJ\nPaypal donation: igorfonseca83@gmail.com\nThingiverse tip: https://www.thingiverse.com/igorF2/about", "step_imgs": ["https://cdn.instructables.com/F45/F18W/JTT5HNAZ/F45F18WJTT5HNAZ.LARGE.jpg", "https://cdn.instructables.com/FTH/RD05/JTT5HN9I/FTHRD05JTT5HN9I.LARGE.jpg", "https://cdn.instructables.com/FVA/N51G/JTT5HN9H/FVAN51GJTT5HN9H.LARGE.jpg", "https://cdn.instructables.com/FPB/6M2N/JTT5HN9Z/FPB6M2NJTT5HN9Z.LARGE.jpg", "https://cdn.instructables.com/FGC/YCWM/JTT5HNAG/FGCYCWMJTT5HNAG.LARGE.jpg", "https://cdn.instructables.com/FWY/8N30/JTT5HN9G/FWY8N30JTT5HN9G.LARGE.jpg", "https://cdn.instructables.com/F3T/KFAL/JTT5HNBG/F3TKFALJTT5HNBG.LARGE.jpg"], "step_title": "Step 8: End Notes"}], "channel": ""}, {"category": "", "description": "I want to start by saying that I am not a professional, I don\u2019t have any degrees in electronics. I simply enjoy working with my hands and figuring things out. I say that to be encouraging to all you nonprofessionals like me. You have the ability to do anything like this, all it takes is patience and research! My research was done through this website and YouTube.\nI have seen LED matrix's before like this one on Youtube\nand it sparked such excitement for me that I started thinking \u201cI can make something like that.\u201d I made my first LED matrix as a demo following an instuctables tutorial three years ago. Every time I looked at it I thought, \u201cI want to go bigger!\u201d My wife and I live in the Amazon basin of Ecuador but we had to temporarily relocate to city that's a little bit larger when my wife was going to give birth to our son. While living and working here we found out about \u201cNight to Shine\u201d.\nNight to Shine is a special night dedicated to people that are physically or mentally disabled. I\u2019m not trying to promote for this event, but it was something that I believed in and wanted to help support in anyway that I could. I built a LED wall stage backdrop to be something that added excitement to that night for these special guest attending the event.\nPs. If you like my Instructable tutorial please scroll to the bottom and vote for it in the contest!", "title": "Huge Flexible Transparent LED Matrix Under $150. Easy to Make.", "url": "https://www.instructables.com/id/Huge-Flexible-Transparent-LED-Matrix-Under-150-Eas-1/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts list:\n400x 4-Pin LED Chip & Heatsink 5V 5050 RGB WS2811 IC Built-in. $43.80\nhttps://www.ebay.com/itm/10-1000-4-Pin-WS2812B-WS2...\nAC 110-220V TO DC 5VOLT, 30AMP, Power Supply. $19.63\nhttps://www.ebay.com/itm/AC-110-220V-TO-DC-5V-12V-...\nDC 5-24V T1000S SD Card LED Pixel Controller For WS2812B LPD8806 WS2811 WS2801. $18.83\nhttps://www.ebay.com/itm/DC-5-24V-T1000S-SD-Card-L...\n50 meters of 3Pin Extension Wire Cable For WS2811. $15.88\nhttps://www.ebay.com/itm/2Pin-3Pin-4Pin-5Pin-Exten...\n3m x 5m Sheet of concrete reinforcement wire. (each wire 6 inches apart). $32.00\n3 rolls of electrical tape. $1.50\nHot glue sticks $3.25\nSolder for connections. $5.50", "step_imgs": ["https://cdn.instructables.com/F75/50BX/JTIYMEW0/F7550BXJTIYMEW0.LARGE.jpg", "https://cdn.instructables.com/FET/ACQJ/JTIYMEVE/FETACQJJTIYMEVE.LARGE.jpg"], "step_title": "Step 1: Gathering Parts"}, {"step": 2, "steps_text": "Using a fine tip soldering iron, first apply solder to each one of the LED chip contact points. (See example picture 1.)The great thing about these LEDs is that they are intelligent and they basically map out and number themselves when they are connected. This makes programming quite simple even for a beginner like me.\nYou need to use three pin wire to connect each LED together. I used a regular pair of wire cutters to strip all three wires simultaneously. They also sell strippers that can do this with ease.\nAfter your wires are stripped do you need to begin the tinning process on the wires. This keeps the wires from getting straggly (See example picture 2.) and facilitates connecting to the chip without any short circuits.\nTo tin the wires you simply touch the tip of the hot soldering iron to each wire and then touch the solder to the wire. The solder will then penetrate into the strands of each wire. As it cools, the wires will become rigid and uniform. (See example picture 3.)\nImportant note: as you solder the chips together to the wires. Make sure all the arrows on the chips are oriented the same direction. (These arrows show the data input direction)\nIf you have tinned the wires correctly and applied the proper amount of solder to each LED chip they\u2019ll be no need for additional solder as you connect them. All you simply need to do is place the wire on each side of the surface and apply the heat of the soldering iron to make the connection. (picture 4.)\nI created a template using a CNC mill cutting holes the exact size of the LED chips and then horizontal channels to connect it so that way as I strip the wires and solder them together I had a gauge on how long each wire should be. It was also because the chips are small and the board held them stationary as I soldered them.\nThis is the link to my CNC template design.\nhttp://easel.inventables.com/projects/ibMc1dJU_v7j...", "step_imgs": ["https://cdn.instructables.com/FEB/ZHD0/JTIYN55G/FEBZHD0JTIYN55G.LARGE.jpg", "https://cdn.instructables.com/FN2/7L9D/JTIYMEUE/FN27L9DJTIYMEUE.LARGE.jpg", "https://cdn.instructables.com/F7P/X96H/JTIYMEUG/F7PX96HJTIYMEUG.LARGE.jpg", "https://cdn.instructables.com/F2P/JZ5C/JTIYMEV7/F2PJZ5CJTIYMEV7.LARGE.jpg", "https://cdn.instructables.com/FRN/W6DM/JSKOWD63/FRNW6DMJSKOWD63.LARGE.jpg", "https://cdn.instructables.com/FCQ/LABZ/JSKOWD75/FCQLABZJSKOWD75.LARGE.jpg"], "step_title": "Step 2: Assembling LED Strands."}, {"step": 3, "steps_text": "As you solder and complete the connections on each LED it is a good idea to protect the contact points from damage and short circuits. This can be done by covering the backside with electrical tape. Yet, I found an easier solution using a hot glue gun to cover the back of each chip and partially covering the wires to make a strong partially flexible connection. I think it\u2019s better than electrical tape because it keeps the wires from breaking free from the solder connection.\nTip: I would suggest making each strand of led pixels twice the length of your pixel height. (My matrix was 16 pixels high so 32 pixels long was ideal for assembly.) I will explain this more in power and power injection step.", "step_imgs": ["https://cdn.instructables.com/FAT/28QU/JTIYMEVH/FAT28QUJTIYMEVH.LARGE.jpg", "https://cdn.instructables.com/FWG/CET6/JTIYMEVX/FWGCET6JTIYMEVX.LARGE.jpg", "https://cdn.instructables.com/F2O/J6AA/JSL33OQZ/F2OJ6AAJSL33OQZ.LARGE.jpg", "https://cdn.instructables.com/FZ9/Y4BO/JSL33OWZ/FZ9Y4BOJSL33OWZ.LARGE.jpg"], "step_title": "Step 3: Connection of LEDs Continued,"}, {"step": 4, "steps_text": "In an effort to simplify construction of a grid for the matrix I came across concrete reinforcement wire. It\u2019s great because it can be purchased in various sizes and wire spacing, it\u2019s also flexible so it can be formed into curves, cylinders, etc. Another reason I like it so much is that the wire is very thin, this gives the matrix a transparent effect because you can see through it easily.\nUsing electrical tape attach each LED strand to the reinforcement wire. Align every pixel chip with the intersection points of the steel wire.\nI used 6 inch wire. (Which means there was a pixel every 6 inches at each place where each wire intersects.) The structure of the wire keeps everything uniform. Honestly, I was in a hurry and so I think I did a sloppy job. Thankfully because of the uniform nature of the wire the matrix looked amazing! As long as all of the LED chips are aiming out the visual display will be uniform and stunning.", "step_imgs": ["https://cdn.instructables.com/F2J/B7IM/JSL33P1E/F2JB7IMJSL33P1E.LARGE.jpg", "https://cdn.instructables.com/FCY/FIEP/JTIYMEVS/FCYFIEPJTIYMEVS.LARGE.jpg", "https://cdn.instructables.com/FC3/ZKFW/JSL33OUP/FC3ZKFWJSL33OUP.LARGE.jpg", "https://cdn.instructables.com/FFO/JUZ0/JSKOWD5W/FFOJUZ0JSKOWD5W.LARGE.jpg", "https://cdn.instructables.com/FQH/8FVJ/JSL33OSS/FQH8FVJJSL33OSS.LARGE.jpg"], "step_title": "Step 4: Assembling the Structure,"}, {"step": 5, "steps_text": "I\u2019ve included a wiring diagram so you understand the purpose of the power injection. Each of the chips does create a small amount of resistance. So as you connect all these LEDs together eventually the power begins to dissipate. The result of this is the illumination of the LEDs begins to change color and fade. First the blue begins to go out causing the strand to have a yellow hue and then the green causing the color to transition to red. (Please see the picture I created to illustrate this problem.)\nThe solution to this problem is injecting power throughout the matrix. Each of the LED chips can receive positive and negative current entering the chip from either direction. You\u2019re only limitation is data wires need to be in sequence. The second picture shows the easiest way to resolve this problem. As I said before, it\u2019s beneficial to have each strand be twice the pixel height of the matrix. As you look at my wiring diagram you see that each loop is 32 pixels long. And the voltage is being injected to both ends of the strand. This caused all LEDs to have uniform brightness without the color dissipating.", "step_imgs": ["https://cdn.instructables.com/FL7/5P95/JTON5SZO/FL75P95JTON5SZO.LARGE.jpg", "https://cdn.instructables.com/FS9/4FKR/JTIYN5JG/FS94FKRJTIYN5JG.LARGE.jpg", "https://cdn.instructables.com/FYL/IVXA/JSL33OYZ/FYLIVXAJSL33OYZ.LARGE.jpg", "https://cdn.instructables.com/FIY/LGOW/JTIYMEVM/FIYLGOWJTIYMEVM.LARGE.jpg", "https://cdn.instructables.com/F2X/ZTLD/JSL33PA8/F2XZTLDJSL33PA8.LARGE.jpg"], "step_title": "Step 5: Power and Power Injection,"}, {"step": 6, "steps_text": "Testing is quite simple to ensure all your wiring is correct. I\u2019ve included a picture of the T1000S controller. When it is connected to the LED strand, it will begin to cycle through various colors and fades. (This will happen when the SD memory card is not inserted). Testing is simply confirming that all LEDs are lighting the same color at the same time. If there are any problems with the wiring or solder connections the light typically stops at that point that needs correction. Simply review your solder connections and confirm that wires are in their proper place without contacting to any other connection points.\nConnecting to the controller is simple. Simply connect your 5 volt power supply to the 5 volt screw head. From the negative side of the power supply connect to the ground screw head. The wire that you will connect to the matrix to supply the information is the Data line. With these three wires connected your matrix will function. (I additionally bridged another wire to the other side of the ground just for good measure).", "step_imgs": ["https://cdn.instructables.com/F1A/CMM1/JTON4BTY/F1ACMM1JTON4BTY.LARGE.jpg", "https://cdn.instructables.com/FTW/ZSQH/JSL33P9D/FTWZSQHJSL33P9D.LARGE.jpg"], "step_title": "Step 6: Testing and Programming"}, {"step": 7, "steps_text": "The Software downloads can be found at this link.\nhttp://www.ipixelleds.com/index.php?catid=7\nThe LED edit program is one of the simplest ways to create visual effects. There is no need to understand coding or even the complexity of the Neopixels. You simply record the program and export it to the SD card memory.\nI was limited with my creativity because some of the guest suffer from epileptic seizures therefore I had to be very conservative with how dramatic each effect would be.\nTo begin:\nIn the software interface click on \u201cFile\u201d and choose \u201cNew Project\u201d from the drop down list .\nAt this point it will be a window that shows all the controller options. I used the T1000S which is highlighted in the first picture. But the chips that I am using (neopixels) are the selection directly below it WS2811. After making your selection click \"OK\".\nNext you want to design the layout of your matrix. There is an auto configuration tool that will make this very easy. You simply input the number of vertical pixels and the number of horizontal pixels in select the data direction that matches the wiring diagram I posted in the earlier step.\nAnd now you are ready to record your visualizations!\nThe most simple way is to go to the video effects tab. There are lots of preloaded effects and that's what I used to my matrix. Again, I was somewhat limited on how dramatic I could make the effects because some of our guest suffered from epilepsy.\nSimply open any effect allow it to play in the window and when you see what you like click the record button. Just to the right you will see the number of frames ascending in numerical order. This is showing how many frames have been captured during the recording process.\nWhen you're satisfied with what you have captured, press \"stop recording\". The visual that is displaying the number of frames that has been captured will stop ascending.\nThe final step is to click export. In the file Will be created in saved at the location you designate. This file needs to be copied and pasted onto the SD card that is formatted as FAT and everything will work!\nIt's that simple!", "step_imgs": ["https://cdn.instructables.com/FEM/B3I0/JTON4DMR/FEMB3I0JTON4DMR.LARGE.jpg", "https://cdn.instructables.com/FZJ/E73Q/JTON4DMQ/FZJE73QJTON4DMQ.LARGE.jpg", "https://cdn.instructables.com/F9Q/1YOC/JTON4DMP/F9Q1YOCJTON4DMP.LARGE.jpg", "https://cdn.instructables.com/FUC/BMGY/JTON4DMM/FUCBMGYJTON4DMM.LARGE.jpg", "https://cdn.instructables.com/FUN/6L1M/JTON4DMK/FUN6L1MJTON4DMK.LARGE.jpg", "https://cdn.instructables.com/FP4/1JOJ/JTON4DML/FP41JOJJTON4DML.LARGE.jpg", "https://cdn.instructables.com/FRM/UO5U/JTON4DMJ/FRMUO5UJTON4DMJ.LARGE.jpg"], "step_title": "Step 7: Led Edit Program"}, {"step": 8, "steps_text": "Wasn't that easy?!\nAt this point everything is completed and you can power your matrix on! You can use the mode button on the controller to cycle through up to 16 programs you've created.\nThere are many other options for driving the matrix also. If you're more ambitious you can look into writing a code yourself and in putting that code through the data line into the matrix display. You can use any type of microcontroller that has a digital output for this task!\nI hope that you'll be inspired to do something like this for yourself or someone else. It only takes commitment to do something great!\nIf you have any questions please leave me a comment and I'll be happy to answer them.\nI appreciate you taking your time to read my instructable! If you liked it, vote for me below!", "step_imgs": ["https://cdn.instructables.com/FWW/YH1X/JTT5RNCF/FWWYH1XJTT5RNCF.LARGE.jpg", "https://cdn.instructables.com/FAL/YGR6/JTT5RNBZ/FALYGR6JTT5RNBZ.LARGE.jpg", "https://cdn.instructables.com/F1X/907C/JTIYMEW3/F1X907CJTIYMEW3.LARGE.jpg", "https://cdn.instructables.com/FDX/9BFX/JSL33PB4/FDX9BFXJSL33PB4.LARGE.jpg", "https://cdn.instructables.com/F5K/XXLL/JSL33P5A/F5KXXLLJSL33P5A.LARGE.jpg"], "step_title": "Step 8: Celebrate!  the Party Can Begin!"}], "channel": ""}, {"category": "", "description": "Yet another arcade build with the unique feature that the LED matrix marquee changes to match the selected game. Also the character side art are laser cut inlays and not stickers.\nA big thanks to Tobias for posting the original laser cut CAD design for this project. This project leverages the design from Tobias with the following modifications:\nAn integrated PIXEL LED Matrix marquee that changes based on the selected game\nLaser cut design modified for a vertical mount monitor instead of horizontal (many classic arcade games are optimized for a vertically mounted monitor)\nLaser cut side art inlays\nAudio amp with volume control knob\nShutdown/Restart Button\nMaterial is Acrylic vs. Wood\nAll laser cut .SVG files, software scripts, LED GIF images and animations, wiring table, and artwork for this project are open source and here in GitHub.\nParts\n1x PIXEL Maker's Kit Arcade Bundle (includes PIXEL LED driver board, 64x32 P3 LED Matrix, and (7) 12mm dome pushbuttons) - $149\n1x Arcade Joystick - $24\n4x 30mm Arcade Buttons ($15, with Cherry D44X 75g .187\" Microswitch)\n1x 2.1mm Panel Mount DC Jack (.33\" mounting hole)\n1x Rocker On/Off Panel Mount Switches (you'll need 2 but the PIXEL:Maker's Kit comes with 1) - $1.17\n1x Raspberry Pi 3+ - $38\n1x microSD card (128 GB is a good size for this project) - $20\n1x Official Raspberry Pi Monitor - $74\n1x 5V, 10A Power Brick - $21\n1x Audio Amplifier - $14\n2x Mini Oval Speakers 35mm x 20mm - $10\n1x Stereo audio cable (right angle is better but normal will fit and is ok too) - $3\n2x USB Panel Mount Cable A-A - $16\n1x Right angle DC power jack - $2.50\n1x microUSB jack (use an old microUSB cable and chop off the large USB side)\n1x Bottle of India Ink - $5\n1x Mr. Clean Magic Eraser Sponge\nBlue Painter's Tape\nScrews, Nuts, Stand-Offs\n8x 4/40 x 3/16\" pan head screws (for maintenance ports)\n2x 4/40 x 7/16\" pan head screws ?\n7x M3 screws x 10mm\n4x M3 screws x 5mm (for joystick mounts)\n4x M3 square hex nuts (for joystick mounts)\n8x 2/56 x 1/2\" pan head screws black (for speakers)\n8x 2/25 nuts (for speakers)\n(4) Hex Stand-Off Aluminum, 1/4\" Hex, 5/8\" Long, 4-40 Thread\n2x 4/40 x 3/8\" Nylon Screws\n4x 4/40 Nylon Nuts\n4x rubber bumper pads for the bottom\nAcrylic & Glue\n5x 12x20\" Yellow Acrylic Sheet , 1/8\" thick - $48\n3x 12x20\" Black Acrylic Sheet , 1/8\" thick - $29\n1x 12x12 Transparent Light Smoke Acrylic Sheet, 1/8\" thick\nMisc colored sheets depending on desired arcade character inlays (optional)\nAcrylic Cement Glue\nAcrylic Cement for Capillary Application\nLow Density Polyethylene Bottle Applicator\nOptional\nKaptop tape (for securing the cables to the Pi header)\n1x USB Audio Adapter (this is not really needed, while the Pi audio is known to be poor, I can't really tell the difference with this one)\nDupont Female Pin Crimp Terminals 2.54mm Pitch (for making your own cables with DuPont connectors that plug into the Raspberry Pi GPIO 40-pin header but you can also just use off the shelf cables and splice them which is cheaper\nDupont Terminal Crimper\nTools\nLaser Cutter (I used a Glowforge with a 19.5\" x 11 cutting area)\n4/40 Tap Tool (for tapping eight 4/40 holes for the maintenance ports)", "title": "Vertical Bartop Arcade With Integrated PIXEL LED Display", "url": "https://www.instructables.com/id/Vertical-Bartop-Arcade-With-Integrated-PIXEL-LED-D/", "section": "technology", "steps": [{"step": 1, "steps_text": "LASER CUTTING SVG FILES HERE\nVERY IMPORTANT: Before you laser cut the acrylic for this project, be sure and have all parts on hands first and measure to ensure they fit the mounting holes in the laser .SVG files. Here are items in particular to check and adjust.\n1. 64x32 P3 HUB75 LED Matrix - The one used in this project I bought direct from China, not from Adafruit and different LED panel manufacturers have different mounting hole locations.\n2. Speakers - I did not use the speakers in the link and instead had some lying around my shop. The ones in the link I think are close but am not sure the mounting holes will line up exactly.\nI used a Glowforge laser cutter and all the .SVG laser cut files are sized for the cut size of the Glowforge at 19.5\" x 11\".\nAlso, there are lot of ways the laser cutting and assembling can go wrong resulting in scrap due to the complexity of the assembly & specific orientation steps so it's highly recommend to first laser cut and assemble in cardboard and then cut in acrylic after you've got it dialed in.", "step_imgs": ["https://cdn.instructables.com/FQD/RYQL/JTWS1BOB/FQDRYQLJTWS1BOB.LARGE.jpg", "https://cdn.instructables.com/FCN/0F6K/JTT5RJ8F/FCN0F6KJTT5RJ8F.LARGE.jpg", "https://cdn.instructables.com/F7W/LJBN/JTT5RJHM/F7WLJBNJTT5RJHM.LARGE.jpg", "https://cdn.instructables.com/FVE/O2ZB/JTT5RJID/FVEO2ZBJTT5RJID.LARGE.jpg", "https://cdn.instructables.com/FUA/OUSO/JTT5RJJ5/FUAOUSOJTT5RJJ5.LARGE.jpg", "https://cdn.instructables.com/FNH/J654/JTT5RJLS/FNHJ654JTT5RJLS.LARGE.jpg", "https://cdn.instructables.com/FXF/VF8L/JTT5RJNN/FXFVF8LJTT5RJNN.LARGE.jpg", "https://cdn.instructables.com/FBY/B659/JTT5RJRZ/FBYB659JTT5RJRZ.LARGE.jpg", "https://cdn.instructables.com/FWM/PYFH/JTWS1BKI/FWMPYFHJTWS1BKI.LARGE.jpg", "https://cdn.instructables.com/FKP/4C1O/JTWS1BMB/FKP4C1OJTWS1BMB.LARGE.jpg"], "step_title": "Step 1: Laser Cutting & Cardboard Assembly First"}, {"step": 2, "steps_text": "The maintenance port allows you to get to the electronics in the back if you ever need to in the future. This part is tricky, it's recommended to first assemble this in cardboard. Follow the steps in the video.", "step_imgs": [], "step_title": "Step 2: Back Maintenance Port"}, {"step": 3, "steps_text": "The bottom maintenance port allows you to get to the bottom of the arcade buttons and joystick to in the future. This part is tricky, it's recommended to first assemble this in cardboard. Follow the steps in the video.", "step_imgs": [], "step_title": "Step 3: Bottom Maintenance Port"}, {"step": 4, "steps_text": "Attach the Pi monitor and Raspberry Pi. Be sure and fit the Pi monitor on the frame without the slot.\nWhile waiting for the first layer to dry, add screws in the speaker holes to ensure alignment.\nNow is a good time to install RetroPie, the pre-built image you'll install on your Pi microSD card. At the end of the RetroPie install, you'll be prompted to configure inputs. Hook up a generic USB keyboard and use these keys:\nD-PAD UP - Up Arrow\nD-PAD DOWN - Down Arrow\nD-PAD LEFT - Left Arrow\nD-PAD RIGH - Right Arrow\nStart - A\nSelect - S\nA Button - Z\nB Button - X\nX Button - C\nY Button - V\nHold down any key to skip the rest of the keys until you get to Hotkey Enable\nHOTKEY - SPACE\nWhen you get to OK press the button you have configured as the A Button which in this case is \"Z\"", "step_imgs": ["https://cdn.instructables.com/FDV/4KLV/JRV8GGXF/FDV4KLVJRV8GGXF.LARGE.jpg", "https://cdn.instructables.com/FWO/BVP1/JRYURT7C/FWOBVP1JRYURT7C.LARGE.jpg", "https://cdn.instructables.com/F2D/PXWX/JRYURT7H/F2DPXWXJRYURT7H.LARGE.jpg", "https://cdn.instructables.com/F9H/X4C0/JRYURT7M/F9HX4C0JRYURT7M.LARGE.jpg", "https://cdn.instructables.com/FTZ/C1Y4/JRYURT7R/FTZC1Y4JRYURT7R.LARGE.jpg", "https://cdn.instructables.com/FWS/E9F0/JRYURT7W/FWSE9F0JRYURT7W.LARGE.jpg", "https://cdn.instructables.com/FP2/QB85/JRYURT83/FP2QB85JRYURT83.LARGE.jpg", "https://cdn.instructables.com/FJU/D0D9/JRYURT88/FJUD0D9JRYURT88.LARGE.jpg", "https://cdn.instructables.com/FNP/28ZW/JRYURT8D/FNP28ZWJRYURT8D.LARGE.jpg", "https://cdn.instructables.com/FYV/ZISH/JRYURT96/FYVZISHJRYURT96.LARGE.jpg", "https://cdn.instructables.com/F60/5WD1/JRYURT9H/F605WD1JRYURT9H.LARGE.jpg", "https://cdn.instructables.com/F2N/G8XK/JRYURT9M/F2NG8XKJRYURT9M.LARGE.jpg", "https://cdn.instructables.com/F76/2PWX/JRYURT9N/F762PWXJRYURT9N.LARGE.jpg"], "step_title": "Step 4: Pi Monitor Mount"}, {"step": 5, "steps_text": "Screw in the joystick to the bottom layer with the screws and square nuts. Do a test and place the top layer on top of the bottom layer and ensure you've engraved deep enough such that the two layers are flush. Then use acrylic cement to glue the two layers together and clamp.\nThe Sanwa joystick I got was default configured for 8-way. My interest is 80s arcade games which are mostly played with a 4-way joystick. So this is a good time to change from 8-way to 4-way which is easily done by moving a template piece on the bottom of the joystick, this video explains how to switch from 8-way to 4-way and vice-versa. Using the bottom maintenance port of the arcade machine, you can change back and forth later after everything is installed but space is limited and it'll be much easier to do that now.\nUse your the continuity tester on your multimeter and then label each wire on the Joystick (up, down, left, right).", "step_imgs": ["https://cdn.instructables.com/FYA/VWQQ/JRYURSEA/FYAVWQQJRYURSEA.LARGE.jpg", "https://cdn.instructables.com/F69/Z49K/JRYURSEB/F69Z49KJRYURSEB.LARGE.jpg", "https://cdn.instructables.com/F3O/SVXE/JRYURSEH/F3OSVXEJRYURSEH.LARGE.jpg", "https://cdn.instructables.com/F7Z/S4B2/JRYURSEO/F7ZS4B2JRYURSEO.LARGE.jpg", "https://cdn.instructables.com/F71/ATP5/JRYURSF4/F71ATP5JRYURSF4.LARGE.jpg", "https://cdn.instructables.com/FKV/73IO/JRYURSF6/FKV73IOJRYURSF6.LARGE.jpg", "https://cdn.instructables.com/FQI/Y7Q6/JRYURSFN/FQIY7Q6JRYURSFN.LARGE.jpg", "https://cdn.instructables.com/FZ5/KI71/JSITPWGY/FZ5KI71JSITPWGY.LARGE.jpg", "https://cdn.instructables.com/FQH/RWPC/JTT5R9F1/FQHRWPCJTT5R9F1.LARGE.jpg", "https://cdn.instructables.com/FF9/GYAI/JTT5R9KB/FF9GYAIJTT5R9KB.LARGE.jpg", "https://cdn.instructables.com/FSC/60U5/JTT5R9KE/FSC60U5JTT5R9KE.LARGE.jpg", "https://cdn.instructables.com/FR8/P137/JTT5R9KG/FR8P137JTT5R9KG.LARGE.jpg", "https://cdn.instructables.com/FCK/U66Z/JTT5R9KJ/FCKU66ZJTT5R9KJ.LARGE.jpg", "https://cdn.instructables.com/FJI/C6E8/JTT5R9N8/FJIC6E8JTT5R9N8.LARGE.jpg", "https://cdn.instructables.com/F0W/JCQB/JTT5R9PV/F0WJCQBJTT5R9PV.LARGE.jpg", "https://cdn.instructables.com/FIF/EI9R/JTT5R9PY/FIFEI9RJTT5R9PY.LARGE.jpg", "https://cdn.instructables.com/FHE/PM6Q/JTT5R9Q0/FHEPM6QJTT5R9Q0.LARGE.jpg", "https://cdn.instructables.com/F7B/JH7X/JTT5R9R6/F7BJH7XJTT5R9R6.LARGE.jpg", "https://cdn.instructables.com/FD6/F91O/JTT5R9WH/FD6F91OJTT5R9WH.LARGE.jpg", "https://cdn.instructables.com/FGH/HVP1/JTT5R9WI/FGHHVP1JTT5R9WI.LARGE.jpg", "https://cdn.instructables.com/FPK/8UIN/JTT5R9WK/FPK8UINJTT5R9WK.LARGE.jpg", "https://cdn.instructables.com/F4T/6ZD6/JTT5R9WN/F4T6ZD6JTT5R9WN.LARGE.jpg", "https://cdn.instructables.com/FFG/L458/JTT5R9WS/FFGL458JTT5R9WS.LARGE.jpg", "https://cdn.instructables.com/FV1/8J2D/JTT5R9WT/FV18J2DJTT5R9WT.LARGE.jpg", "https://cdn.instructables.com/FXX/98RA/JTT5R9WY/FXX98RAJTT5R9WY.LARGE.jpg", "https://cdn.instructables.com/FGJ/BWYF/JTT5RA2D/FGJBWYFJTT5RA2D.LARGE.jpg", "https://cdn.instructables.com/F8B/WM49/JTT5RA2I/F8BWM49JTT5RA2I.LARGE.jpg", "https://cdn.instructables.com/FBP/LXWP/JTT5RA2J/FBPLXWPJTT5RA2J.LARGE.jpg", "https://cdn.instructables.com/F0U/IQ2O/JTT5RA2K/F0UIQ2OJTT5RA2K.LARGE.jpg", "https://cdn.instructables.com/F4E/NXVN/JTT5RA3O/F4ENXVNJTT5RA3O.LARGE.jpg", "https://cdn.instructables.com/F90/KH45/JTT5RA4D/F90KH45JTT5RA4D.LARGE.jpg"], "step_title": "Step 5: Control Panel - Joystick and Buttons"}, {"step": 6, "steps_text": "Leave the acrylic masking tape on and brush paint India ink generously. Let the India ink dry for a couple of hours or longer.\nOnce dry, remove the acrylic masking tape and you'll be left with some residue to be removed. Take some strong duct tape like Gorilla duct tape and press it hard on the engraved text and then tear off. Repeat this a few times and most of the ink residue will be removed. Then use either a wet soft sponge or a Mr. Clean magic eraser sponge to take off the rest.", "step_imgs": ["https://cdn.instructables.com/F3T/8HXF/JTT5RWWH/F3T8HXFJTT5RWWH.LARGE.jpg", "https://cdn.instructables.com/FQH/G7KF/JTT5RX49/FQHG7KFJTT5RX49.LARGE.jpg", "https://cdn.instructables.com/FBI/FW6W/JTT5RWYY/FBIFW6WJTT5RWYY.LARGE.jpg", "https://cdn.instructables.com/F5J/04X7/JTT5RWUT/F5J04X7JTT5RWUT.LARGE.jpg", "https://cdn.instructables.com/FJV/IC07/JTT5RWVN/FJVIC07JTT5RWVN.LARGE.jpg"], "step_title": "Step 6: Front Panels Buttons and Inking Black Text"}, {"step": 7, "steps_text": "Refer to the wiring diagram schematics and make the power cable which will consist of a female DC jack which will then 4 way split to the Pi (microUSB connector), PIXEL:LED ART Board (right angle DC barrel jack connector), audio mini amp (hook-up wire), and LED light bar (hook-up wire). Find an old microUSB cable and cut off the large USB connector end and splice and solder to this power cable for the connection to the Pi.\nPut together a wiring table that maps each joystick direction and button to the corresponding pin on the Pi and assigned keyboard key. If you map to the same keys I did, then you can use the config files in the next steps out of the box.\nYou'll need female DuPont cables to connect to the 40-pin GPIO header on the Pi. I ended up making my own cables which was pretty fun but also a lot of work and you'll also need a crimper and the female DuPont terminals. It'll be faster and cheaper to just use stock female to female DuPont cables that you probably already having lying around and splice/solder them. If you do end up making your own DuPont cables, it turns out they are not easy to make, I found this YouTube video tutorial very helpful and was able to make them with ease after that.\nMake the cables for the buttons and joystick and don't connect to the Pi yet. You'll connect to the Pi in the next step. In general, each cable should be ~13 inches long, that will be long enough to reach the Pi when mounted. If you can, use a different color for each cable (use black for all GND) or label each cable which will make things easier in the next step.", "step_imgs": ["https://cdn.instructables.com/F4W/JPRH/JTT5R44Z/F4WJPRHJTT5R44Z.LARGE.jpg", "https://cdn.instructables.com/F68/9FO7/JTT5R46N/F689FO7JTT5R46N.LARGE.jpg", "https://cdn.instructables.com/FAG/5022/JTT5R4IF/FAG5022JTT5R4IF.LARGE.jpg", "https://cdn.instructables.com/FMC/AMUN/JTT5R48A/FMCAMUNJTT5R48A.LARGE.jpg", "https://cdn.instructables.com/F24/O1KZ/JTT5R3A8/F24O1KZJTT5R3A8.LARGE.jpg", "https://cdn.instructables.com/FIR/CFTJ/JTT5R3KB/FIRCFTJJTT5R3KB.LARGE.jpg", "https://cdn.instructables.com/FKU/5ZYY/JTT5R3P6/FKU5ZYYJTT5R3P6.LARGE.jpg", "https://cdn.instructables.com/FOK/N9T7/JTT5R3VG/FOKN9T7JTT5R3VG.LARGE.jpg", "https://cdn.instructables.com/FXA/GOQ3/JTT5R439/FXAGOQ3JTT5R439.LARGE.jpg", "https://cdn.instructables.com/FD0/DKTY/JTT5R3C5/FD0DKTYJTT5R3C5.LARGE.jpg", "https://cdn.instructables.com/F15/I221/JTT5R3I5/F15I221JTT5R3I5.LARGE.jpg", "https://cdn.instructables.com/FFJ/BNZR/JTT5R3EB/FFJBNZRJTT5R3EB.LARGE.jpg"], "step_title": "Step 7: Wiring"}, {"step": 8, "steps_text": "Go ahead and remove the acrylic masking tape on both sides now.\nFirst mount the PIXEL PCB board and then mount the LED panel on the other side. Pay attention to the orientation & make sure the LED panel is facing up matching the label on the acrylic mount.\nNext mount the screw in the lower right hand of the PIXEL board to the panel.\nMount the LED panel using (6) M3 x 8mm screws. Note the LED panels are threaded for M3 screws, 4/40 will not work.", "step_imgs": ["https://cdn.instructables.com/FOJ/GAFC/JTT5RIR3/FOJGAFCJTT5RIR3.LARGE.jpg", "https://cdn.instructables.com/F58/Z53H/JTT5RI3L/F58Z53HJTT5RI3L.LARGE.jpg", "https://cdn.instructables.com/F89/EEGI/JTT5RIBD/F89EEGIJTT5RIBD.LARGE.jpg", "https://cdn.instructables.com/FOF/NCL2/JTT5RIB8/FOFNCL2JTT5RIB8.LARGE.jpg", "https://cdn.instructables.com/FNP/M4RH/JTT5RHYW/FNPM4RHJTT5RHYW.LARGE.jpg", "https://cdn.instructables.com/FOL/YIVY/JTT5RHYX/FOLYIVYJTT5RHYX.LARGE.jpg", "https://cdn.instructables.com/FQJ/Z9WC/JTT5RI92/FQJZ9WCJTT5RI92.LARGE.jpg", "https://cdn.instructables.com/FXA/ZOTF/JTT5RIC8/FXAZOTFJTT5RIC8.LARGE.jpg", "https://cdn.instructables.com/FKH/NGQL/JTT5RI4P/FKHNGQLJTT5RI4P.LARGE.jpg", "https://cdn.instructables.com/FRI/2GIA/JTT5RINE/FRI2GIAJTT5RINE.LARGE.jpg", "https://cdn.instructables.com/F86/K892/JTT5RIRX/F86K892JTT5RIRX.LARGE.jpg"], "step_title": "Step 8: LED Matrix Panel Mounting"}, {"step": 9, "steps_text": "Now comes the fun part where you put everything together! But first mount all 6 buttons on the front red panel, the 4 arcade button and the joystick on the black control panel, and the power jack, toggle switches, and audio amp on the back panel. You won't be able to mount the buttons and joystick after the case is together due to lack of elbow room.\nFollow the pictures to assemble things together but do not glue anything yet and instead use some blue painter's tape to keep things together for now. Once you get to the picture labelled \"After you get here, connect wires to the GPIO Pi Header\", then start to connect the wires to the pins on the Pi header.\nFollow the table you put together in the previous step to connect each wire to the Pi header. It will be very cramped and not so easy to connect the pins to the Pi header so have patience.\nOnce you have everything connected, power the system up and do a full test that includes testing the joystick and every button. To test, we'll need to install a utility from Adafruit called Retrogame which converts the joystick and button inputs from the Pi's GPIO into keyboard inputs. By using Retrogame, you won't need a separate USB arcade keyboard emulator which is nice.\nFollow these instructions from Adafruit to install Retrogame. After you've installed Retrogame, then copy this retrogame.cfg file to the /boot directory on your Pi. The retrogame.cfg file here assumes you have followed the same keyboard mappings and pin connections in the wiring table from Step 8 - Wiring. If you have used different pins or keyboard mappings, no worries, just make the corresponding changes in retrogame.cfg. Chances are you've connected a pin or two wrong so just test every input and correct.\nThis tutorial guides you through how to setup the combined shutdown and restart button.\nOnce everything is working, now you're ready to make things permanent. If you happen to have some Kapton tape, that's a nice way to secure the Pi pins ensuring they won't come loose later. Wrap some Kapton tape around the pins and Pi header. But no worries if you don't, it should still be fine.\nNow turn the arcade on its side. At this point, you only have the left side installed, the right side is still open. Use your capillary action acrylic solvent applicator to glue the acrylic. Acrylic solvent works very quickly and will be sturdy in less than 5 minutes and does not need to be clamped. Here's a good primer on using acrylic solvent.\nAttach the pieces for the marquee (make sure to do this before adding the right side).\nNow attach the right side and glue that using the acrylic solvent.\nLastly, use a grinder or Dremel tool to grind down the left and right sides such that they are flush (the black notches may be sticking out a little bit). You'll want to do this so the outside pieces when attached will be nice and flush.", "step_imgs": ["https://cdn.instructables.com/FRT/FLT8/JTT5R79B/FRTFLT8JTT5R79B.LARGE.jpg", "https://cdn.instructables.com/F1F/I3DA/JTT5R7AI/F1FI3DAJTT5R7AI.LARGE.jpg", "https://cdn.instructables.com/F1D/ZNQE/JTT5R7BF/F1DZNQEJTT5R7BF.LARGE.jpg", "https://cdn.instructables.com/FI6/DJRI/JTT5R7CU/FI6DJRIJTT5R7CU.LARGE.jpg", "https://cdn.instructables.com/F79/F7XE/JTT5R7EF/F79F7XEJTT5R7EF.LARGE.jpg", "https://cdn.instructables.com/FZ2/5AGK/JTT5R7J3/FZ25AGKJTT5R7J3.LARGE.jpg", "https://cdn.instructables.com/FA8/MR4N/JTT5R7K5/FA8MR4NJTT5R7K5.LARGE.jpg", "https://cdn.instructables.com/F5H/EFBF/JTT5R7R0/F5HEFBFJTT5R7R0.LARGE.jpg", "https://cdn.instructables.com/F1I/YUYK/JTT5R7SY/F1IYUYKJTT5R7SY.LARGE.jpg", "https://cdn.instructables.com/FU2/2VGE/JTT5R7UX/FU22VGEJTT5R7UX.LARGE.jpg", "https://cdn.instructables.com/FHX/L66J/JTT5R7UY/FHXL66JJTT5R7UY.LARGE.jpg", "https://cdn.instructables.com/FHI/SI5Z/JTT5R7UZ/FHISI5ZJTT5R7UZ.LARGE.jpg", "https://cdn.instructables.com/FT5/AN52/JTT5R7V1/FT5AN52JTT5R7V1.LARGE.jpg", "https://cdn.instructables.com/FC0/KMV4/JTT5R7WH/FC0KMV4JTT5R7WH.LARGE.jpg", "https://cdn.instructables.com/FJL/SME4/JTT5R7X0/FJLSME4JTT5R7X0.LARGE.jpg", "https://cdn.instructables.com/FKF/FTTZ/JTT5R7YK/FKFFTTZJTT5R7YK.LARGE.jpg", "https://cdn.instructables.com/F21/MK77/JTT5R7TH/F21MK77JTT5R7TH.LARGE.jpg", "https://cdn.instructables.com/F6V/I04N/JTT5R7Z3/F6VI04NJTT5R7Z3.LARGE.jpg", "https://cdn.instructables.com/FLX/IPRO/JTT5R7GN/FLXIPROJTT5R7GN.LARGE.jpg", "https://cdn.instructables.com/FS3/7DN8/JTT5R808/FS37DN8JTT5R808.LARGE.jpg", "https://cdn.instructables.com/F9T/V7SY/JTT5R82V/F9TV7SYJTT5R82V.LARGE.jpg", "https://cdn.instructables.com/FPA/2AEM/JTT5R87E/FPA2AEMJTT5R87E.LARGE.jpg", "https://cdn.instructables.com/FXJ/RQKZ/JTT5R8A1/FXJRQKZJTT5R8A1.LARGE.jpg"], "step_title": "Step 9: Putting It All Together"}, {"step": 10, "steps_text": "The arcade character inlays are optional but a pretty nice effect if you've got the time. If not using the inlays, then you could also use a service like this to print some side art stickers or just leave the sides solid red which would still be nice.\nIf not using the inlays, then modify the left and right outside panels and delete the inlay outlines. If you want personalize with your own favorite arcade characters, here's a great resource for arcade sprites. Then it's a matter of isolating each color of the sprite and then tracing in a vector program like Illustrator or Inkscape. Warning, this is a good amount of work. If you want to stick with the characters I used, use this file to laser cut each color of each character.\nAs you laser cut each color of each character, lay them out on a table and only glue to the arcade side once you know everything fits together right. Chances are there will be some mistakes (I made a bunch) so if you glue too soon, you'll be in trouble as the acrylic solvent is permanent.\nAlso VERY IMPORTANT, you don't want to use yellow color for any of the inlay characters as the side panel is already yellow. So if your desired arcade sprite has yellow, then substitute another color.", "step_imgs": ["https://cdn.instructables.com/FPU/XC5W/JTT5RMSP/FPUXC5WJTT5RMSP.LARGE.jpg", "https://cdn.instructables.com/FAJ/OHXM/JTT5RMSQ/FAJOHXMJTT5RMSQ.LARGE.jpg", "https://cdn.instructables.com/FC8/9HLK/JTT5RMTF/FC89HLKJTT5RMTF.LARGE.jpg", "https://cdn.instructables.com/FFP/F1KH/JTT5RMWD/FFPF1KHJTT5RMWD.LARGE.jpg", "https://cdn.instructables.com/FE3/R73H/JTT5RMX5/FE3R73HJTT5RMX5.LARGE.jpg", "https://cdn.instructables.com/F1X/C92X/JTT5RMYB/F1XC92XJTT5RMYB.LARGE.jpg", "https://cdn.instructables.com/FAA/5RV6/JTT5RN0I/FAA5RV6JTT5RN0I.LARGE.jpg", "https://cdn.instructables.com/FGI/5UW5/JTT5RN1N/FGI5UW5JTT5RN1N.LARGE.jpg", "https://cdn.instructables.com/FDH/ZIDS/JTT5RN23/FDHZIDSJTT5RN23.LARGE.jpg", "https://cdn.instructables.com/F3L/JRX4/JTT5RN2W/F3LJRX4JTT5RN2W.LARGE.jpg", "https://cdn.instructables.com/FXG/SFDP/JTT5RN4D/FXGSFDPJTT5RN4D.LARGE.jpg", "https://cdn.instructables.com/FJ5/A8HB/JTT5RN54/FJ5A8HBJTT5RN54.LARGE.jpg", "https://cdn.instructables.com/FD3/S3KA/JTT5RN6J/FD3S3KAJTT5RN6J.LARGE.jpg", "https://cdn.instructables.com/FN9/6NPV/JTT5RN6K/FN96NPVJTT5RN6K.LARGE.jpg", "https://cdn.instructables.com/FOI/FJ3K/JTT5RN6L/FOIFJ3KJTT5RN6L.LARGE.jpg", "https://cdn.instructables.com/FGI/RFYE/JTT5RN7C/FGIRFYEJTT5RN7C.LARGE.jpg", "https://cdn.instructables.com/FT1/NOHW/JTT5RN9K/FT1NOHWJTT5RN9K.LARGE.jpg", "https://cdn.instructables.com/FM0/6TYP/JTT5RN9L/FM06TYPJTT5RN9L.LARGE.jpg", "https://cdn.instructables.com/FE6/QUBI/JTT5RNA0/FE6QUBIJTT5RNA0.LARGE.jpg", "https://cdn.instructables.com/F58/LFDX/JTT5RNBI/F58LFDXJTT5RNBI.LARGE.jpg", "https://cdn.instructables.com/F48/NBDG/JTT5RNBJ/F48NBDGJTT5RNBJ.LARGE.jpg", "https://cdn.instructables.com/FE3/HDGI/JTT5RNBK/FE3HDGIJTT5RNBK.LARGE.jpg", "https://cdn.instructables.com/F8G/B9KM/JTT5RNCE/F8GB9KMJTT5RNCE.LARGE.jpg", "https://cdn.instructables.com/FSD/DXYI/JTT5RNDZ/FSDDXYIJTT5RNDZ.LARGE.jpg", "https://cdn.instructables.com/FCO/MJ6B/JTT5RNEE/FCOMJ6BJTT5RNEE.LARGE.jpg", "https://cdn.instructables.com/FUL/A641/JTT5RNH3/FULA641JTT5RNH3.LARGE.jpg", "https://cdn.instructables.com/FAQ/KG9H/JTT5RNHK/FAQKG9HJTT5RNHK.LARGE.jpg", "https://cdn.instructables.com/FCV/86CU/JTT5RNJ8/FCV86CUJTT5RNJ8.LARGE.jpg", "https://cdn.instructables.com/FLW/VO5S/JTT5RNJA/FLWVO5SJTT5RNJA.LARGE.jpg", "https://cdn.instructables.com/F50/X0J3/JTT5RNJC/F50X0J3JTT5RNJC.LARGE.jpg", "https://cdn.instructables.com/FDW/LN8N/JTT5RNJE/FDWLN8NJTT5RNJE.LARGE.jpg"], "step_title": "Step 10: Left and Right Outside Panels & Arcade Character Inlays"}, {"step": 11, "steps_text": "Almost done! The last step is to add some scripts such that the PIXEL: LED ART display will change artwork automatically based on the selected game from RetroPie. Fortunately, RetroPie includes a hook called runcommand which is a user supplied bash shell script that runs prior to each game launching. So we'll add our own runcommand script that passes the current game to a command line Java program that the PIXEL: LED ART board uses (pixelc.jar) that writes an LED still image or animation GIF we specify per game. As your install may include many games, you can just pick the games you want to do a special LED design for and then write a generic LED design for all the other games. I've made custom GIFs for ~35 games so you can use this to start too. And if you make your own and are open to share, please do let me know (comment here or github pull request) and I'll add to the repo for others.\nCheck if Java 8 is installed on your Pi.\njava -version\nIf Java 8 is not installed:\nsudo apt-get update\nsudo apt-get install oracle-java8-jdk\nCopy the Java command line PIXEL: LED ART program called pixelc.jar to your Pi, download here. First create a directory on your pi called pixel.\nmkdir /home/pi/pixel\nTransfer pixelc.jar from your PC or Mac to your Pi\nscp /local-path-on-your-pc/pixelc.jar pi@your_raspberrypi_IP_address:/home/pi/pixel\nYou must have the Android only firmware installed on your PIXEL:LED ART board which is the default, the iOS/Android firmwares will not work. Double check that the PIXEL:LED ART board is USB connected to the Pi. Also ensure that the toggle switch on the PIXEL:LED ART board is facing the USB direction and not facing the BT direction. Check that your Pi detects the PIXEL:LED ART board.\nls /dev/ttyACM0\nAnd you should get back\n/dev/ttyACM0\nDownload runcommand-onstart.sh to your local PC. You'll modify this script for your needs and then copy over to your Pi. Let's first understand what this script is doing. The logic is the following:\n1. Sets the path where pixelc.jar is located. If you copied pixelc.jar in /home/pi/pixel, then leave this line as is\nPIXELPATH=\"/home/pi/pixel/\";\n2. Checks that the PIXEL:LED ART board is connected. If yes, we keep going and if no, the script terminates.\nif $pixelexists | grep -q '/dev/ttyACM0';\n3. RetroPie passes to this script in the form of a variable called $3 the path of the selected game rom which includes the rom name. So then we just use a long if statement to check for the games we're interested in and if there is a match, we tell the script what GIF file we want to write before launching the rom. In the example script below, if the rom path contains \"galaga\", then we'll write galaga.gif. If the rom path contains \"pacman\", then we'll write pacman.gif. You will need to have copied galaga.gif and pacman.gif to the same directory as pixelc.jar, so copy them to /home/pi/pixel . Since this particular installation uses a 64x32 LED display, your GIFs for galaga.gif and pacman.gif should both be 64x32. pixelc.jar will automatically resize your GIFs if they are not 64x32. They can be either single image GIFs or multi-frame GIF animations. Keep in mind that the longer the GIF animation, the longer it will take to write meaning you'll want to make your animations fairly short or it will take longer to load your game. Here is a sample of the contents of your /home/pi/pixel folder which works with all the sample scripts shown here and also here are some more GIFs you can use and please do a pull request if you do your own to share with others.\nROMPATH=$3\nif [[ $ROMPATH == *\"galaga\"* ]];\nthen echo \"galaga match\" >&2\nGAMEIMAGE=\"galaga.gif\"\nelif [[ $ROMPATH == *\"pacman\"* ]];\nthen echo \"pacman match\" >&2\nGAMEIMAGE=\"pacman.gif\"\n4. Then we end the if statement with this which means if the game launched didn't match any of the roms we were looking for, then just write a default GIF, in this case cherry.gif\nelse echo \"no game match\" >&2\nGAMEIMAGE=\"cherry.gif\"\nfi\n5. This last command in the script does the actual write to the LED display where the GAMEIMAGE variable was set within the if statement.\njava -jar pixelc.jar --gif=$GAMEIMAGE --adafruit64x32 --write\nSo go ahead and modify per your needs and also copy your corresponding GIFs to /home/pi/pixel and then copy your version of runcommand-onstart.sh to /opt/retropie/all/\nscp /local-path-on-your-pc/runcommand-onstart.sh pi@your_raspberrypi_IP_address:/opt/retropie/all/\nMake the script executable\nsudo chmod +x runcommand-onstart.sh\nHere is the script for the combined shutdown / restart button.\nSince this installation is for a vertical orientated monitor, you'll want to get a vertical theme for RetroPie which is a theme available from RetroPie, info here.", "step_imgs": ["https://cdn.instructables.com/FV5/6NAU/JTT5RCOR/FV56NAUJTT5RCOR.LARGE.jpg"], "step_title": "Step 11: Software Scripts for the The PIXEL: LED ART Matrix Integration"}], "channel": ""}, {"category": "", "description": "Together, we can reforest the world.\nDrone technology combined with native coated seeds will revolutionize the efficiency of ecosystem restoration. We created a set of open sourcetools, to use drones for sowing seedballs of wild seeds with efficient microorganisms for ecological restoration,making easier the seeding at industrial scale and low cost.\nDrones can analyze the terrain and sow with precision hectares in minutes. Sowing a combination of thousands of trees and herbaceous for carbon fixation, turning every seed into a winner, making green large-scale landscapes at low cost, with the power of open-source and digital fabrication.\nWe share this technology to individuals, ecologist teams and restoration organizationsaround the world, for dramatically improve the traditional forest seeding.\nDronecoria represents a new area of symbiotic devices, produced by biological and technological processes, revealing the potential impact of interaction between ecologies and robotic systems on critical environments. Relies on mechanisms borrowed from cybernetics, robotics and permaculture, to sow seeds from affordable wooden made drones. Allowing accurately positioning of each new seedling, increasing the chance of survival.\nSpecs:\nTotal weight without payload: 9,7Kg.\nFlying time without payload: 41min.\nMaximum payload: 8kg of seeds.\nAutonomy: Can sow in autopilot one hectare in 10 minutes, around 5 seeds by square meter, with a speed of 5 m/s.\nProduction cost: 1961,75 US$\nLicense:\nAll files are licensed with Creative Commons BY-SA, this perfectly allow to make profit with this project (please do it!) You only are required to give us attribution (dronecoria.org), and if you made any improvement, you should share it with the same license.", "title": "Dronecoria: Drone for Forest Restoration", "url": "https://www.instructables.com/id/Dronecoria-Drone-for-Forest-Restoration/", "section": "technology", "steps": [{"step": 1, "steps_text": "Attention:\nIf this is the first drone you make, we recommend to start with smaller and safer drones, like the wooden, small, and also open source drone: flone intructable. Dronecoria is too powerful to be your first drone!\nWhere to Build/Buy:\nThe cost of the complete drone with two batteries, and a radio controller is less than 2000 US$. You should look for a laser cut service for cutting the wood, and a 3D printing service for the sowing mechanism. Good places to ask should be FabLab's and MakerSpaces.\nWe place here the links to different online stores like Banggood, Hobbyking, or T-Motor, where to buy the components, most of them you can also found them on eBay. Keep in mind that depends on your country, you will be able to find a closer or cheaper supplier.\nPlease check the right legal frecency of the telemetryradio for your country, normally is 900 Mhz for America and 433Mhz for Europe.\nOur batteries of 16000 mAh allowed the aircraft to fly without payload for 41 minutes, but due to the nature of the operations, fly to an area, deliver the seeds as soon as possible (it takes 10 minutes around), and land, smaller and lighter batteries are also recommended.\nAirframe\nPlywood 250 x 122 x 0,5 cm $28\nElectronics\nMotors:T-Motor P60 170KV 6 x $97.11\nESC:Flame 60A 6 x $90\nPropellers:T-MOTOR Polymer Folding 22\"Propeller MF2211 3 x $55\nBatteries:Turnigy MultiStar 6S 16000mAh 12C LiPo Battery 2 x $142\nFlight Controller:HolyBro Pixhawk 4 & M8N GPS Module Combo 1 x $225.54\nTelemetry:Holybro 500mW Transceiver Radio Telemetry Set V3 for PIXHawk 1 x $46.36\nServo (Seed control): Emax ES09MD 1 x $9.65\nVarious\nBattery connector AS150 anti-spark 1 x $6.79\nMotor connector MT60 6 x $1.77\nMotor screws M4x20 (Alternative) 3 x $2.42\nHeat Shrink Tubing Insulation 1 x $4.11\nBlack and Red cable 12 AWG 1x $6.83\nBlack and Red cable 10 AWG 1 meter x $5.61\nBattery strap 20x500mm 1 x $10.72\nAdhesive Velcro Tape $1.6\nRadio transmitter iRangeX iRX-IR8M 2.4G 8CH Multi-Protocol w/ PPM S.BUS Receiver - Mode 2 1 x 55$\nTotal: 1961,75 US$\nPossible customs expenses, TAX or shipping costs, are not included in this budget.", "step_imgs": ["https://cdn.instructables.com/FGE/ZY3L/JTON1JKI/FGEZY3LJTON1JKI.LARGE.jpg", "https://cdn.instructables.com/FSJ/BVYE/JTT5MKE2/FSJBVYEJTT5MKE2.LARGE.jpg"], "step_title": "Step 1: Acquire the Materials"}, {"step": 2, "steps_text": "In this step we will follow the process of build and assemble the frame of the drone.\nThis frame is made in plywood, like historic radio controlled planes, this also means, that can be repaired with glue, and is compostable if there is an accident and brakes.\nPlywood is a very good material, allowing us to make a lightweight drone and low-cost. Weights 1.8 kg and can cost a couple of hundreds dollars, instead of thousands.\nDigital fabrication allow us an easy replication, and sharing the design withyou!\nIn the video, and the attached instructions, you will see how it looks the process of mounting the frame.\nFirst you should download the files and find a place with a laser cutter to cut them. Once si done, this are the main assembling steps:\nYou need to get use with the pieces, every arm is identified by numbers. To start building the arms, order the pieces of every arm.\nStart assembling the upper part of each arm. glue or use zipties to get the connection strong.\nDo the same with the lower part of the arms.\nBlend this last part to fit the rest of the arm.\nFinish the arms adding the landing gear.\nFinally, use the top and bottom plates to put all arms together.\nAnd that\u2019s it!\nIn the next step, you will learn how to mount the 3D Printed part to drop the seeds, we wait for you there!", "step_imgs": ["https://cdn.instructables.com/F9O/N140/JTCRJWC8/F9ON140JTCRJWC8.LARGE.jpg", "https://cdn.instructables.com/F42/0CJR/JTCRJYS7/F420CJRJTCRJYS7.LARGE.jpg", "https://cdn.instructables.com/FZI/M33H/JTT5MMP2/FZIM33HJTT5MMP2.LARGE.jpg", "https://cdn.instructables.com/FTR/X1MA/JTT5MMMZ/FTRX1MAJTT5MMMZ.LARGE.jpg", "https://cdn.instructables.com/FDW/3WT0/JTT5JX5D/FDW3WT0JTT5JX5D.LARGE.jpg"], "step_title": "Step 2: Cut and Ensemble the Airframe"}, {"step": 3, "steps_text": "We designed a 3D printed seed-release system, that can be screwed to any PVC water bottle like a tap, for use plastic bottles as a seed containers.\nBottles can be used as a low weight - low cost, recipient of Nendo Dango seed balls, as a payload for drones. The release mechanism is in the neck of the bottle, the servo motor controls the opened diameter, allowing the automatic open and control, of the rate of sowing of the seeds failing out of the bottle.\nThis are the materials that you will need:\nA plastic bottle with big bottleneck.\nThe 3D printed mechanism.\nA ziptie.\nFive M3x16mm Screws and Nuts,\nA screwdriver.\nA servo.\nSomething to connect to the servo, like a flight controller, radio receiver, or servo tester.\nFor aerial vehicles we recommend digital servos, because the digital circuit filters the noise, reducing battery consumption, extending flight time, and not producing any electronic noise that can affect the flightcontroller.\nWe recommend the EMAX ES09MD servo, have a good quality/price balance, and includes metallic gears.\nYou can order online the parts in Shapeways, or download and print the parts by yourself.\nThe assembly is very simple:\nJust place the ring over the screw piece.\nScrew one by one each of the screws, attaching the small pieces to the main body, placing the nuts at the end.\nPlace the servo in his place, fixing it with the zip tie. Is recommended to use also the screw that comes with the servo, to fix it more firmly.\nFit the gear to the axis of the servo. (In the video is glued, but it's not any more necessary.\nTo test it: connect the servo to a servo tester, and drop some seeds :)\nFeel free to check the v\u00eddeo, to see the assembling process in detail !", "step_imgs": ["https://cdn.instructables.com/F76/JRNU/JS8TEU9R/F76JRNUJS8TEU9R.LARGE.jpg", "https://cdn.instructables.com/FT4/BEHN/JTT5HOCE/FT4BEHNJTT5HOCE.LARGE.jpg", "https://cdn.instructables.com/FMU/9O9A/JS8TEUD6/FMU9O9AJS8TEUD6.LARGE.jpg", "https://cdn.instructables.com/FPM/3DY0/JTON1ENE/FPM3DY0JTON1ENE.LARGE.jpg", "https://cdn.instructables.com/FB1/DT61/JTON1HVM/FB1DT61JTON1HVM.LARGE.jpg"], "step_title": "Step 3: 3D Print and Ensemble the Seed Dispenser"}, {"step": 4, "steps_text": "Once the frame, and the sowing mechanism are assembled, is time to do the electronic part.\nWARNING!\nDo the soldering properly, made a bad connection can have catastrophic consequences, like the totally loose of the aircraft, or accidents.\nUse a generous quantity of solder since some wires will support high amperages.\nOnly connect the batteries when all safety checks are done. You should check (with a tester) that there are not short-circuits between wires.\nNever put the propellers until everything is well configured. Placing the propellers is ALWAYS the last step.\nFor this part of the process, you should have all the electronic components:\n6 Motors P60 179KV.\n6 ESC Flame 60A.\n2 LiPo Batteries 6S.\n1 FlightBoard Pixhawk 4\n1 GPS Module.\n2 Radio Telemetry Transceivers.\n1 Radio Receiver.\n2 AS150 Battery connectors.\n6 MT60 three wire connector.\nBattery strap.\n1 meter Black cable 12 AWG\n1 meter Red cable 12 AWG.\n1 meter Black cable 10 AWG\n1 meter Red cable 10 AWG.\n24 screws for the motors. M4 x 16.\nAnd some tools like:\nSolder & soldering iron.\nHeat Shrink tubing insulation\nAdhesive tape.\nVelcro\nThird hand for soldering.\nDouble sided tape.\nSo let\u2019s go!\nMotors and ESC\nFrom each motor there is three cables, to avoid electromagnetic interferences with the rest of the electronic equipment, is a good idea to plait the wires, in order to reduce this interferences, also the length of this connection should be as short as possible.\nThis three cables from the motors should be wired to the three cables of the ESC, the order of this wires depends the final direction of the motors, you should swap two wires to change the direction. Check the scheme for the right direction of each motor.\nTo make the final wiring you can use the MT60 with the three connectors: solder the cables from the motor to the male connector, and the three wires from the ESC to the female connector.\nJust repeat this 6 times for each couple Motor-ESC.\nNow you can screw the motors to each arm using the M4 screws. Place also the ESC\u2019s inside the frame and connect each motor with the corresponding ESC.\nFlight Controller\nUse a double sided vibrating isolation tape to place the flight board to the frame, is important that you use a right tape in order to isolate the board from vibrations. Check that the arrow of the flight board is in the same direction of the arrow of the frame.\nPower Distribution Board.\nThe PDB is the electric hearth of the drone that powers every element. All ESC are wired there to get the voltage from the Battery. This PDB has integrated a BEC to power all elements that require 5V, like the flight controller and the electronics. Also mesure the electric consumption of the aircraft in order to know the battery left.\nSolder the battery connectors to the PDB.\nThe P60 motors that we use are designed to work in 12S (44 Volts) since our batteries are 6S, they should be connected in serial for adding the voltage of each one. Each battery has 22.2 Volts, if we connect the batteries in series we will obtain 44.4 V.\nThe easiest way to wire batteries in serie is with the AS150 connector, this allow us to connect directly one battery to the other and the positive and negative of each battery to the PDB.\nIf your battery have a different connector, you can easily change the connector to the AntiSpark AS150 or use an adapter.\nStart soldering the 10 AWG wires to the PDB, use sufficient cable to arrive from the position of the PDB to the batteries. Then finish soldering the AS150 connectors. Please take care of the right polarity.\nSolder ESC\u2019s to the PDB.\nThe energy from the batteries go directly to the PDB, and then from the PDB the power goes to the six different ESC. Start placing the PDB in their designed place and screw it or use velcro to fixit to the frame.\nSolder the two wires, positive and negative of each ESC to the PDB with the 12 AWG wire, this PDB can support up to 8 motors, but we will use the connections only for six motors, so solder ESC by ESC, positive and negative, to the PDB.\nEach ESC comes with a three wire conector, you would pick the white wire of signal of this connector and solder it to the specified position in the PDB.\nFinally, wire the PDB with the designed port to the flight board,\nGPS & Arm Button & Buzzer\nThis GPS has integrated a button to arm the aircraft and a buzzer to trigger an alarm or beep different signals.\nPlace the base of the GPS in the marked position and screw it to the frame, take care of build a solid attachment without vibrations or movement, then connect it to the flightboard with the specified cables.\nTelemetry\nTypically you will need a pair of devices, one for the aircraft and one for the ground station. Place one telemetry transceiver in the desired position and use velcro or double sided tape to fix in their position. Connect it to the flight board with the specific port.\nRadio Receiver\nPlace the radio receiver in the designed place, fixing it with velcro or double sided tape, then put the antenas as far away as possible, and attach them safely to the frame with tape. Wire the receiver to the flight board as you can see in the scheme.", "step_imgs": ["https://cdn.instructables.com/F79/UQQV/JTT5PA73/F79UQQVJTT5PA73.LARGE.jpg", "https://cdn.instructables.com/F6L/MCJK/JTT5IDHM/F6LMCJKJTT5IDHM.LARGE.jpg", "https://cdn.instructables.com/FF1/JLB3/JTT5IE0P/FF1JLB3JTT5IE0P.LARGE.jpg", "https://cdn.instructables.com/FSA/QHJO/JTT5IDFV/FSAQHJOJTT5IDFV.LARGE.jpg", "https://cdn.instructables.com/F7C/AQNW/JTT5KGY1/F7CAQNWJTT5KGY1.LARGE.jpg", "https://cdn.instructables.com/F4L/LA0T/JTT5MVZI/F4LLA0TJTT5MVZI.LARGE.jpg", "https://cdn.instructables.com/FXC/MYLL/JTT5KFTH/FXCMYLLJTT5KFTH.LARGE.jpg", "https://cdn.instructables.com/FV7/FK03/JTT5OPVX/FV7FK03JTT5OPVX.LARGE.jpg", "https://cdn.instructables.com/F98/42BU/JTT5OPVY/F9842BUJTT5OPVY.LARGE.jpg", "https://cdn.instructables.com/FHK/WP1A/JTT5MYOV/FHKWP1AJTT5MYOV.LARGE.jpg", "https://cdn.instructables.com/F4I/WJ7P/JTT5PA6F/F4IWJ7PJTT5PA6F.LARGE.jpg", "https://cdn.instructables.com/F9S/JIKU/JTT5PA6N/F9SJIKUJTT5PA6N.LARGE.jpg", "https://cdn.instructables.com/FF3/AHU4/JTT5PA6V/FF3AHU4JTT5PA6V.LARGE.jpg"], "step_title": "Step 4: Electronics"}, {"step": 5, "steps_text": "Tip:\nWe made this Instructable as complete as possible, with the essential instructions needed to have the flight controller ready to fly. For the full configuration, you can always consult the official documentation of the Ardupilot / PixHawk projects, in case of something is unclear or the firmware is updated to a new version.\nFor do this step you should have internet connection to download and install the required software and firmware.\nAs a ground station, to configure and execute flight plans in arducopter-based vehicles, you can use APM Planner 2 or QGroundControl, both works well in all platforms, Linux, Windows and OSX. (QGroundControl even in Android)\nSo the first step will be download and install the Ground Station of your choose to your computer.\nDepending of your operating system maybe you need to install a extra driver to connect to the board.\nOnce is installed, connect the flight controller to your computer via the USB cable, select Install Firmware, as airframe, you should select the hexacopter drone with + configuration, this will download the last firmware to your computer and upload-it to the drone. Don\u2019t interrupt this process or disconnect the cable meanwhile the upload.\nOnce the firmware is installed, you can connect to the drone, and do the configuration of the aircraft, this configuration should be done only one time or every time that a new firmware is upgraded. Since is a big aircraft, could be better to configure first the connection with a wireless link with the telemetry radios to easy move the drone without a wired cable.\nRadio Telemetry connection.\nConnect the USB-Radio to your computer, and power on the drone using the batteries.\nThen, connect also the batteries to the drone, and click on connect in the Ground Station, depending of your operating system a different port can appear by default, normally with the Port in AUTO, a solid connection should be done.\nIf not ,check that you are using the right port, and the right speed in this port.\nESC Calibration.\nIn order to configure the ESC\u2019s with the minimum and maximum Throttle value, an ESC calibration should be performed. The easiest way to do this is through Mission Planer, clicking on ESC Calibration and following the steps on the screen. If you have doubts you can check section of ESC calibration in the official documentation.\nCalibration of the accelerometer.\nTo calibrate the accelerometer you will need a flat surface, then you should click in the button of Calibrate Accelerometer and follow the instructions on the screen, they will ask you to put the drone in different positions and press the button each time, the positions should be level, on the left side, on the right side, nose up and nose down.\nCalibration of the magnetometer.\nTo calibrate the magnetometer, once the button Calibrate Magnetometer is pressed, you should move the full aircraft 360 degrees in order to do a full calibration, the screen will assist you in the process, and alert you when is done.\nPair to the radio receiver.\nFollow the instructions of your radio controller to bind the emitter and the receiver. Once the connection is done you will see the signals arriving to the flight controller.\nConfiguring the servo for seed release\nThe seed release system, for the flight controller, can be configured as a camera, but instead of take a photo, drop seeds :)\nThe camera configuration is under Trigger Modes, different modes are supported, just select the one woks better for your mission:\nWorks like a basic intervalometer that can be enabled and disabled. Automatic open and close.\nSwitches the intervalometer constantly on. The drone is always dropping seeds. Maybe not so useful since we will lost some seeds during take off.\nTriggers based on distance. Will be useful in manual flights to drop seeds with specific frequency on the ground with independence of the speed of the aircraft. The system opens the door every time the set horizontal distance is exceeded.\nTriggers automatically when flying a survey in Mission mode. Useful to plan the places to drop the seeds from the Ground Station.\nOur frame works well with the standard configuration, so no specific configuration needs to be done.", "step_imgs": ["https://cdn.instructables.com/FE6/JR02/JTT5Q3WJ/FE6JR02JTT5Q3WJ.LARGE.jpg", "https://cdn.instructables.com/FBO/JGUJ/JTT5Q3WI/FBOJGUJJTT5Q3WI.LARGE.jpg", "https://cdn.instructables.com/FKQ/UZJZ/JTT5Q3XS/FKQUZJZJTT5Q3XS.LARGE.jpg", "https://cdn.instructables.com/FIV/0W6V/JTWSC77R/FIV0W6VJTWSC77R.LARGE.jpg"], "step_title": "Step 5: Software Configuration"}, {"step": 6, "steps_text": "Mapping the Territory.\nAfter a fire, or to recover a degraded area, the first step would be to perform a damage assessment and document the current state before any intervention. For this task drones are a fundamental tool because they document faithfully the state of the land. To perform these tasks we can use a conventional drone, or cameras that capture the near infrared that will able us to see the photosynthetic activity of the plants.\nThe more infrared light reflected, the plants will be healthier. Depending on the amount of terrain affected, we could use multirotors, which can have a mapping capacity of about 15 hectares per flight, or opt for a fixed wing, which could map up to 200 hectares in a single flight. The resolution to choose depends on what we want to observe. To perform a first evaluation, with resolutions of 2 to 5 cm per pixel would be sufficient.\nFor further evaluations, when looking to check the evolution of seed sown in an area, it may be advisable to perform samplings with resolutions around 1 cm/pixel to see the growth.\nFlight around 23 meters of altitude will get 1cm/pixel and flights at 70 meters will obtain a resolution of 3 cm/pixel.\nTo make the Orthophoto and digital model of the terrain, we can use free tools like PrecissionMapper or OpenDroneMap that is also Free Software.\nOnce the orthophoto is done, please upload it to Open Aerial Map, to share with others the state of the land.\nAnalysis and classification of the Territory\nWhen we have rebuilt the orthophoto, this image, usually in geoTIFF format, contains the geographical coordinates of each pixel, so any recognizable object in the image has associated its 2D, latitude and longitude coordinates in the real world.\nIdeally, to understand the territory, we should also work with 3D data and analyze its elevation characteristics, with the aim of locating the ideal places to sow.\nSurface Classification and segmentation\nThe area to be reforested, the density and type of species will be determined by a Biologist, Ecologist, Forestry Engineer, or professional of the restoration, and also by legal or political questions.\nAs approximate value, we can point to 50,000 seeds per hectare, this would be 5 seeds per square metre. This surface to be sown will be circumscribed within the previously mapped area. Once determined the potential area to be reforested, the first necessary classification would be differentiate the real area to sow, and where not.\nYou should identify as NON-sowing zones:\nInfrastructures: Roads, constructions, roads.\nWater: Rivers, lakes, flooded areas.\nNon-fertile surfaces: rocky areas, or with large stones.\nInclined Land: with a slope greater than 35%.\nSo this first step would be to make the segmentation of the territory to the areas to perform the seeding.\nWe could sow filling these areas, producing a vegetation cover, avoid erosion and begin as soon as possible with the recovery of the soil.\nSowing with drones\nOnce we have constructed these polygons where to sow, to make a complete filling of the surface with seeds, we should know the sowing width path that can open the Seeder drone, and the height of flight established, to make a complete tour of the territory, with a separation between paths of this known width.\nThe speed will also determine the number of seeds per square metre, but we will try to maximize the speed, to minimize the flight time and to carry out the sowing operation per hectare in the minimum possible time. Assuming that we fly at 20 km/hour this would be about 5 meters per second, if we have a path width of 10 meters, in one second would cover a surface of 50 square meters, so we should throw 250 seeds per second to cover the target raised 5 seeds per squared meter.\nWe hope that you will have nice flights restoring ecosystems.\nWe need you for fight against wild fires.\nIf you arrived here, you have in your hands a very powerful tool, a drone capable of reforest an hectare in just 8 minutes. But this power is a big responsibility, use ONLY NATIVE SEEDS for not make any interference with the ecosystem.\nIf you want to collaborate, have issues to be resolved, or you have good ideas to improve this project, we are organized in the wikifactory site, so please use this platform to grow the project.\nThanks again to help us to make a greener planet.\nDronecoria Team.\n\nThis manual is made by:\nLot Amor\u00f3s (Aeracoop)\nWeiwei Cheng Chen (PicAirDrone)\nSalva Serrano (Ootro Studio)", "step_imgs": ["https://cdn.instructables.com/FLN/MJYV/JTIXB8F9/FLNMJYVJTIXB8F9.LARGE.jpg", "https://cdn.instructables.com/FBZ/1QWT/JTIXB88F/FBZ1QWTJTIXB88F.LARGE.jpg", "https://cdn.instructables.com/F11/LVTI/JTIXB89M/F11LVTIJTIXB89M.LARGE.jpg", "https://cdn.instructables.com/FT3/LIJH/JTIXB8F4/FT3LIJHJTIXB8F4.LARGE.jpg", "https://cdn.instructables.com/FOD/6E06/JT2SNTQM/FOD6E06JT2SNTQM.LARGE.jpg"], "step_title": "Step 6: Fly and Perform Reforestation Projects!"}, {"step": 7, "steps_text": "Powerful Seeds (Semillas Poderosas) is a project that we made to make accessible the knowledge around the organic seed coating, putting light on the type of ingredients and the production methodology with low-cost materials.\nIn the recovery of degraded land, whether by fires or infertile soils, seed pelletizing can be a key factor in improving the sowing and reducing seed costs and environmental needs.\nWe hope that this information will be useful for farmers and conservationists to make restoration projects, pelletizing their seeds themselves, increasing the viability of the seeds, ensuring that the seeds will be protected against fungi and predators during germination, adding microbiology for an increasing soil fertility.\nWe have developed this tutorial using a conventional cement mixer, and a water sprayer to pelletize large quantities of seeds. To pelletize smaller seeds, a bucket can be applied to the mixer. Our 3-layer method:\nFirst Layer:Bioprotection. Natural compounds that allow to protect the seed against harmful agents such as fungi and bacteria. The main natural fungicides are: garlic, nettle, ash,horsetail, cinnamon, diatom.\nSecond Layer:Nutrition. They are natural organic fertilizers produced by beneficial soil microorganisms, which produce a synergy with the roots. Main biofertilizers: Earthworm Humus, compost, liquid fertilizer, efficient microorganisms.\nThird Layer:External protection. Natural compounds that allow to protect the seed against external agents, such as predators, sun and dehydration. Agents against insects: ash, garlic, diatomaceous earth, clove, turmeric tobacco, cayenne, Lavender. Agents against external factors: Clay, hydrogel, charcoal, lime dolomitic.\nIn between: Binders. Coating materials are bonded through binder or adhesive substances, preventing layers of coverage from breaking or tearing. These binders can be: Plantago, alginate, agar.agar, arabic gum, gelatin, vegetable oil, milk powder, casein, honey, starch or resins.\nWe recommend that you start with small controls until you master the technique. The process is simple, but requires experience until you know the right amounts.\nThe solid ingredients should be applied very thin, and very little by little, not to form lumps or to create pellets without seeds inside. The liquid components are applied through a pulverizer as thin as possible, which does not produce drops. Minimum amounts of liquid are applied between material and material to improve the adhesion of the dust on the balls. Some materials need more binders than others because they can be more stickers. If you stick the balls together you can separate them with your hands very carefully, as they can break. A good pelletization should not need mechanical separation.\nIn the video you will see an example of the coating process of Eruca Sativa. Note that this is an example, you can combine different components for coating, depending on the deficiencies or potential soil and seeds, also from predators as well, or availability of the ingredients in your region. For this tutorial me made also the attached list of posible ingredients that you can use.\nAs a binder we will use agar agar. As bio-protection agent we will use diatomaceous earth. As components of nutrition, charcoal, also compost, dolomite and liquid biofertilizer. Clay and turmeric for the outer protection layer.\nThe most important element is the seed, which must not have suffered any type of process with agrochemicals.\nThe biofertilizer is diluted in water in proportions of one in ten. In this case 50 cubic centimeters in half a liter of water. The liquid preparation is in a liquid sprayer and we give-it a load of 15 compressions.\nWe deposit the seeds in the machine, and spray them with water. Sprays should be as small as possible so that lumps do not form. Then we turn on the machine and start with the coating.\nWith your hands you can gently separate the seeds if stick between them.\nWe add diatomaceous powder and mix to form an homogeneous mix, then we add water disarming the lumps.\nCharcoal is added to the mixture and repeating the water spray, then add dolomite or calcareous earth.\nOnce the layers are well formed, substrate is added as thin as possible. For achieve this you can use a filter.\nThe clay is added generously mixing well with the seeds. Finally for the outer protection layer, we decided to incorporate turmeric.\nPelleted seeds should be dried outdoors in the shade, otherwise they can brake.\nAnd that's it! Have a nice time creating a wonderful ecosystem !", "step_imgs": ["https://cdn.instructables.com/F68/W9UT/JT91PYYG/F68W9UTJT91PYYG.LARGE.jpg", "https://cdn.instructables.com/FXR/M5IG/JT91LLGU/FXRM5IGJT91LLGU.LARGE.jpg", "https://cdn.instructables.com/FVO/N9GS/JT91NRIY/FVON9GSJT91NRIY.LARGE.jpg"], "step_title": "Step 7: Bonus Track: Coat Your Own Seeds for Aerial Sowing"}], "channel": ""}, {"category": "", "description": "This project started all the way back when I was in 6th grade and completely new to electronics, when I thought to myself, \"Hey, let's build a drone....it shouldn't be that hard......right?\" Yea, guess what, it's hard. Almost 4 years later, this project is coming to a close, and along the way, I have built my engineering knowledge from the ground up, and I will be sharing my knowledge with everyone in the Instructables community so that if another 6th grader were to find themselves upon this Instructable, I hope they will not spend nearly as much time trying to build a drone, but still acquire the same knowledge that I have.\nThis drone tutorial go cover how I built my drone as well as go deep into the nitty-gritty aspects from the construction of the frame all the way to the code. I hope that by reading this instructable, you will be able to fully understand and admire the concepts and theory behind quadcopter building. I would like to thank and recommend some Youtube channels that I have watched and learned from which helped arm me with the knowledge that I have today:\n- Joop Brokking: https://www.youtube.com/user/MacPuffdog (He has an AMAZING playlist for drone building)\n- Great Scott: https://www.youtube.com/user/greatscottlab (Great electronics information)\n- Electronoobs: https://www.youtube.com/channel/UCjiVhIvGmRZixSzup... (Clear explaination of PID)\n- Electroboom: https://www.youtube.com/user/msadaghd (Funny and also great electronics information)\nWithout further ado, here's the breakdown of this instructable.\nSome parts are written as if a complete beginner was reading it:\n- Steps 1-2: Physics and About Quadcopters\n- Steps 3-6: Frame Design/Construction\n- Steps 7-12: Power Electronics\n- Steps 13-15: Control Electronics\n- Steps 16-24: Wiring the Quadcopter\n- Steps 25-31: Code, Calibration, Setup, and Theory\n- Steps 32-34: PID Tuning and Maiden Flight-ish\n- Steps 35: Summary, Future Upgrades/Add-Ons, Final Remarks\nNote: Though this drone is made of cardboard, this is no slouch when it comes to flying. Fully loaded with the battery, the all up weight (AUW) is just above 800g, and with each motor pushing out up to 740g of thrust. Theoretically, this drone has a thrust-to-weight ratio about 4:1. In perspective, a DJI Phantom has a thrust to weight ratio of about 2:1.", "title": "The Ultimate Guide to Building a Quadcopter From Scratch", "url": "https://www.instructables.com/id/The-Ultimate-Guide-to-Building-a-Quadcopter-From-S/", "section": "technology", "steps": [{"step": 1, "steps_text": "Newton's 3 Laws of Motion\nFirst Law: What is at rest will stay at rest and what is in motion will stay in motion, unless there is an external force acting on it.\nSecond Law: The force required to accelerate an object to a certain velocity depends on the mass (F=ma)\nThird Law: For every action there is an equal and opposite reaction\nBased off of the first law, a drone will stay on the unless you decide to move it. A drone will move if you move it.\nBased off of the second law, it is clear if you have a lighter drone, you will have longer flight times (less force required to accelerate it), quicker reaction time (if you decide to put more force, the drone will accelerate faster), and better maneuverability.\nBased off of the third law, drone propellers throw air down with a certain force, the air molecules will push up on the propellers with the same force, therefore the drone moves up. There is another aspect to this law however, and is the fact that anything rotating will generate a small spinning force in the opposite direction, called torque. Just like how a person needs to \"push off\" against the ground in order to walk forwards, the motor needs to continuously \"push off\" against something in order to rotate. That is why if helicopters only have the main rotor, the torque generated by the main propeller will send the body of the helicopter spinning in the opposite direction, and it needs a small rotor on the tail to prevent that.", "step_imgs": [], "step_title": "Step 1: Physics"}, {"step": 2, "steps_text": "It's a helicopter with 4 propellers.\nIn order to explain what makes a quadcopter stand out from the rest of the flying contraptions will take a lot more than 6 words. But before we go into that, we need to define some key terms I will be using to describe movement.\n- X-axis: the axis that points left/right or west/east\n- Y-axis: the axis that points forwards/backwards or north/south\n- Z-axis: the axis that points up/down\n- Roll: when the aerial vehicle tilts left/right; rotates about the y axis\n- Pitch: when the aerial vehicle tilts forwards/backwards; rotates about the x axis\n- Yaw: when the aerial vehicle spins in place left or right; rotates about the z axis\n- Degrees of Freedom (DOF): the number of independent factors that can be assessed (I'll explain this term in better detail later, with an example)\nHelicopters have one main propeller that can provide the acceleration, but need the small rotor in the back to counteract the torque created by the big spinning propeller. Additionally, there are countless other control mechanisms to physically tilt the main propeller in order for the helicopter to move in the 2D-plane.\nBicopters have two equal-sized counter-rotating propellers that provide the acceleration, roll, and the yaw control, but needs the assistance of two servos to tilt the propellers in order to maintain balance and control the pitch.\nTricopters have three equal-sized propellers that provide the roll, pitch, and acceleration control. Two of the propellers spin clockwise and the remaining propeller spins counterclockwise. Due to the extra propeller spinning clockwise, there is no control over the yaw angle, so a servo must be use to tilt the last motor in order to compensate and gain yaw control.\nQuadcopters, with four propellers, have the least amount of physical propellers and motors that can allow it to travel in 4 degrees of freedom (move linearly in the x-axis, move linearly in the y-axis, move linearly in the z-axis, and accelerate). However, if one motor fails, it will be the demise of the quadcopter.....unless there is specific code that can compensate.\nHexacopters and Octocopters have 6 and 8 propellers, respectively. They offer an advantage over quadcopters that if it loses one propeller, it will still be able to and safely, but at the cost of increase complexity, decreased flight time, higher cost, and less maneuverability.\nUnlike planes, quadcopters are naturally unstable and will need software assistance. Overall, the greatest challenge in the construction of the quadcopter will not be the hardware, but instead, the code itself.", "step_imgs": [], "step_title": "Step 2: What Is a Quadcopter?"}, {"step": 3, "steps_text": "The frame makes up around 90% of a quadcopter....so it's kinda important. The first thing you have to consider is the size of the frame you want. Note, the number represents the approximate diagonal arm span of the drone and is measured in millimeters (so if I say I have a 250 frame, the frame is about 250 mm diagonally from arm tip to arm tip). The size of the drone you make depends on your use case, but the general rule of thumb is that the smaller the frame, the more agile and maneuverable the drone is, but it will be less stable. A larger frame will be less agile and maneuverable, but it will be much more stable. In this instructable, I plan to make a size 550 quadcopter.", "step_imgs": [], "step_title": "Step 3: Frame Selection"}, {"step": 4, "steps_text": "There are a lot of different materials you can use to build a quadcopter, each with their own advantages and disadvantages. Here are some of the most popular materials:\nCarbon Fiber (strongest and lightest, but expensive)\nWood\nAluminum\nFoam\nPlastic\nBut I believe that with some engineering, you can make a working quadcopter frame out of almost anything. So as a result, I decided challenge myself and make my quadcopter out of cardboard (:D).", "step_imgs": [], "step_title": "Step 4: Frame Material"}, {"step": 5, "steps_text": "There are three main types of quadcopter frames, the \"X\" frame, the \"+\" frame, and the \"H\" frame. There are also some other obscure types like the Deadcat or hybrid H-X frames, but we're not going to go into those.\nThe \"X\" frame is the classic drone frame, where the arms are at right angles to each other and the quadcopter looks nice and symmetrical. Most commercial drones like the DJI Phantom are based off of this frame type.\nThe \"+\" frame version is virtually identical to the \"X\" frame - the only difference is the orientation when it is flying in the direction that you call \"forwards\". The \"+\" orientation is not as commonly used because the arm sticking out when flying \"forwards\" will block the view of the camera.\nThe \"H\" frame looks like an H and are mainly found on racing drones. An advantage that the \"H\" frame has over the \"X\" and \"+\" is there is a lot more room available to mount the electronics and batteries.\nFor my drone, I decided to go with the \"X\" frame.", "step_imgs": [], "step_title": "Step 5: Frame Arm Orientation"}, {"step": 6, "steps_text": "I planned to make my drone come together like a puzzle with a minimal use of adhesives. All the plates and pieces will slide into each other and are locked with additional arm lock pieces. I also used some zip ties to secure everything together even more.\nI initially created my idea using a computer-aided design (CAD) software called AutoDesk Inventor Professional. My frame consists of arms that mimic the shape of I-beams, as it will give cardboard arms the structural integrity the quadcopter arms will need.\nGoing to my local makerspace, I laser cut all the pieces out of cardboard and surprisingly, the result was better than I expected.\nThe bare frame weight is around 98 grams.\nAssemble the frame and use zipties to hold everything securely in place.\nNOTE: The \"Arm Lock MIR\" in the drawings are the same thing as \"Arm Lock\".", "step_imgs": ["https://cdn.instructables.com/F6K/33U9/JR4TZKCK/F6K33U9JR4TZKCK.LARGE.jpg", "https://cdn.instructables.com/FB8/MD8I/JR4TZK0M/FB8MD8IJR4TZK0M.LARGE.jpg", "https://cdn.instructables.com/FAX/W069/JR4TZK03/FAXW069JR4TZK03.LARGE.jpg", "https://cdn.instructables.com/FUX/TJF9/JR4TZK14/FUXTJF9JR4TZK14.LARGE.jpg", "https://cdn.instructables.com/FGU/57Y1/JR4TZK1O/FGU57Y1JR4TZK1O.LARGE.jpg", "https://cdn.instructables.com/FCL/0W9W/JR4TZK26/FCL0W9WJR4TZK26.LARGE.jpg"], "step_title": "Step 6: Designing and Assembling the Frame"}, {"step": 7, "steps_text": "Now, onto my favorite part about any engineering project: the electronics!\nIn a nutshell, the main electronics are pretty simple to understand: the battery power gets split and directed between the 4 individual motors and the control board. The control board decodes the signals sent by the controller and taking that information as well as the tilt information into account, controls the motors accordingly.\nRefer to the schematics above for more information.\nFor those who are completely new to reading a schematic........\nCRASH COURSE ON HOW TO READ A SCHEMATIC:\nFollow the lines to see where and how they connect. Overlapping lines do not mean those wires are connected, unless there is a dot at the intersection.", "step_imgs": ["https://cdn.instructables.com/FZR/0M4F/JREUAIXF/FZR0M4FJREUAIXF.LARGE.jpg"], "step_title": "Step 7: POWAAAAAA!!!!"}, {"step": 8, "steps_text": "All motors have two parts, the rotor and the stator. The rotor is the part that spins and the stator is the part that stays in place.\nMotors come in two main classes: brushed and brushless. Brushed motors have two wires and generally have the coils on the rotor and magnets on the stator. When the coils are energized, it will create a magnetic field that will attract or repel the magnets on the stator, causing the rotor to spin. The coils get the energy through \"brushes\" and as the rotor spins, the direction of electric flow will change accordingly, keeping the motor spinning. These motors are inexpensive, but generally spin slower and are less efficient due to the friction of the brushes on the rotor. This is why most drones use motors found in the latter class, brushless motors.\nBrushless motors have three wires. Due to the structure of brushless motors, they cannot run directly off of the battery. Their structure is opposite of brushed motors, they have the magnets on the rotor and the coils on the stator. Now, the poles of the electromagnet will no longer flip with the rotation of the rotor, so a component called the electronic speed controller (ESC) is necessary. The main job of these devices is to turn on and off the coils in a timed manner in order to keep the motor running. Brushless motors are a lot faster and more efficient as they do not suffer from additional friction from brushes and their speed depends on the switching rate of the ESC. Almost all high-quality drones use brushless motors.\nBrushless motors have two subclasses, inrunners and outrunners. The difference between the two are what each motor calls the rotor and stator. Inrunner motors have the rotor on the inside, where only the shaft of the motor spins and the casing outside stays in place. Outrunner motors on the other hand, have the rotor on the outside, so in outrunners, the whole casing spins and only the base of the motor, which the stator is mounted upon, stays in place. Generally, outrunner motors have a lower kV rating.....which is what I will explain in the next step.", "step_imgs": ["https://cdn.instructables.com/FGW/5IEI/JTT5O4SN/FGW5IEIJTT5O4SN.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F9K/SW4T/JTT5O5E2/F9KSW4TJTT5O5E2.LARGE.jpg"], "step_title": "Step 8: Motors and Electronic Speed Controllers"}, {"step": 9, "steps_text": "When looking at motors, ESCs, and batteries, you get bombarded with scary numbers with weird units....this step will explain all of those.\nLet's say on the motor, you saw this: A2212 1000kV 12N14P\nkV: This unit is found on motors and does not stand for \"kilovolts\". The letter \"k\" in this case stands for a constant and \"V\" is for volts. Basically what this tells you is the approximate number of revolutions per minute (rpms) the motor will spin per volt you put in. For example, the motor is 1000 kV, it means that this motor will spin about 1000 rpm at one volt, 2000 rpm at two volts, and so on. Generally, a motor with a lower kV rating will spin at slower rpms, but will have more torque, which is the turning force.\nA2212: Ignore the A, but the first two numbers you see (the 22) tell you the diameter of the motor itself or the stator in millimeters. The second pair (the 12) tell you the height of the motor itself or the stator in millimeters.\n12N14P: The number in front of the \"N\" tells you how many electromagnets/coils the stator has and the number in front of the \"P\" tells you how many permanent magnets are on the rotor.\nThe following numbers apply to all batteries, ESCs, and motors\nA or Amps: This is usually found on ESCs and motor datasheets. This is the amount of punch the ESC can provide to the motor. Make sure that this amount is at least 20-30% higher than the amp rating of your motor. It is important to remember that you cannot shove amps into a motor, a motor will pull as many amps as it needs. SO if your motor only pulls 8 amps maximum, it is not necessary to have a 60 amp esc, because you will never pull anywhere near that 60 amps and you will be carrying around unnecessary weight. However, don't pair a motor that can pull up to 60A with an ESC with a 20A rating because that ESC is going to fry faster than you can say \"kV\". On ESCs, there is sometimes a \"burst\" amperage that the ESC can supply for a couple of seconds before irreversible damage. Only use this number for reference.\nBattery labels: 3s 2000mAH 20c\nmAH or milliamp-hour: This is found on batteries. This is the capacity of the battery, or how much electricity the battery can supply before it dies. Divide this number by 1000 (to convert it to Amp-hour) and multiply by the C rating to get the maximum number of Amps the battery can supply before damage. You can also use the Amp-hour value to calculate a crude approximate of your flight time. In this case, 2000mAH --> 2 AH, meaning that this battery can supply a continuous 2 amps for one hour before dying. Keep in mind that you are never going to discharge a battery all the way, so this is an estimate.\nC rating or just C: This number along with the mAH can tell you the maximum amount of amps that this battery can supply. Just like an ESC, there is also a \"burst C rating\" which is the maximum amount of amps the battery can provide for a short period of time (like about 10-30 seconds). So with the example battery, it can provide 40A of continuous current (2000mAH --> 2 AH --> 2AH * 20C --> 40A).\n3s: This is found on batteries and tells you how many cells are wired in series and parallel. Assuming we are talking about Lithium Polymer (LiPo) batteries, each cell has a nominal or \"normal\" voltage of 3.7v, but when fully charged, they are 4.2v, though some LiPos can go up to 4.35v per cell, and are labelled as LiHV or high voltage. So in this case, 3s means that there are three LiPo cells wired in series, which means this battery has a nominal voltage of 11.1v (3 * 3.7) and a maximum voltage of 12.6v (3 * 4.2). This is also found on ESCs and tells you how much voltage the ESC can handle.\nBEC: Battery Eliminator Circuit. It is a circuit found inside ESCs that provide a steady 5v (or 6v...depending on your ESC) to power receivers, the flight controller board, servos, etc. Not all ESCs have a BEC.", "step_imgs": [], "step_title": "Step 9: All Those Darn Numbers and Letters....What Do They Mean?"}, {"step": 10, "steps_text": "Here are the parts that I have decided to use:\n- 1000kV brushless outrunner motors (x4): https://www.amazon.com/Hobbypower-Brushless-Outrun...\n- 10x4.5in propellers: https://www.amazon.com/Genuine-Gemfan-10x4-5-Prope...\n- 30A Blheli ESCs: https://www.amazon.com/BLHeli-32-Brushless-Control...\n- Power Distribution Board: https://www.ebay.com/itm/Multirotor-ESC-Power-Dist...\n- XT-60 connectors: https://www.amazon.com/Finware-Female-Bullet-Conne...\n- Bullet Connectors (if your ESC does not come with these): https://www.amazon.com/JFtech-Bullet-Banana-Connec...\n- 30dB earplugs: https://www.lowes.com/pd/Safety-Works-Ear-Plugs/10...\n- Heat Shrink Tubing: https://www.amazon.com/NTE-Electronics-47-23448-BK...\n- DIY flight controller (which I well get to in Step 14)\n- DIY battery pack (which I will explain in the next step)\nTip: Don't go cheap on motors and ESCs, as poor quality parts will result in poor performance. If you are serious into drone building, put a bit of money into quality parts, it will be worth it in the long run. I do not recommend the no-brand motors I got, but I have provided the link anyways.", "step_imgs": ["https://cdn.instructables.com/FBQ/2N5B/JREUAFEE/FBQ2N5BJREUAFEE.LARGE.jpg", "https://cdn.instructables.com/FH9/1FK4/JRKZ193J/FH91FK4JRKZ193J.LARGE.jpg"], "step_title": "Step 10: My Layout"}, {"step": 11, "steps_text": "LiPo batteries are the most popular batteries for drones in general, but they scare me:\nThat is why I decided to take the path that not many people have taken: making my own battery pack.\nNote, if this is your first drone, I do not recommend building your own battery, it is better to buy a good battery and a good charger.\nI salvaged cells from a lithium drill battery pack to build my pack. The cells found in a lithium drill battery pack are called 18650 cells and are also commonly found in old laptop batteries. However, not all 18650 cells are created equal. The ones found in laptop batteries are made to discharge slowly, but can last for a long time. Drills on the other hand, require a lot of continuous power but not for hours on an end. Drones are very similar when it comes to power usage- they need that punch of power, but flying for three hours on end is not a necessity.\nI got my batteries from this battery pack: https://www.lowes.com/pd/Kobalt-24-volt-Max-1-5-Am...\nInside the pack, I got Samsung INR18650-15L cells, which according to their datasheet, can provide 18A of continuous current and have a nominal capacity of 1500 mAH. I will wire the pack into a 3s2p pack. The 2p stands for 2 parallel, and when batteries are wired in parallel, the overall capacity (the mAH) and the maximum current (A) will increase, but the voltage will stay the same. Therefore, I will have a battery pack that has a 11.1v nominal voltage, 12.6 v maximum voltage, 3000 mAH capacity (1500 mAH * 2p), and 36A continuous output current (18A * 2p).", "step_imgs": ["https://cdn.instructables.com/FE9/CCB5/JREUAFAG/FE9CCB5JREUAFAG.LARGE.jpg", "https://cdn.instructables.com/FMS/J5FG/JREUAFAK/FMSJ5FGJREUAFAK.LARGE.jpg", "https://cdn.instructables.com/FMM/SWOE/JREUAFB4/FMMSWOEJREUAFB4.LARGE.jpg"], "step_title": "Step 11: Battery Choice"}, {"step": 12, "steps_text": "I am too poor to afford a spot welder to make my battery. I have to come up with another plan.\nSo....back to AutoDesk Inventor I go to design a battery pack. I want a modular battery pack that enables to quickly remove the cells when I want to charge them and put them back together for flight.\nThe CAD drawings and STL files are attached.\nThe battery holders are 3D printed at my local makerspace (a total of 12 modules were needed).\nTo make the connections within the batteries, I cut strips of metal out of aluminium soda cans and used aluminum rivets to secure the soda can and the power wires to the battery holders....and as a bonus, the heads of the rivets act as contact points for the batteries. The pack will be physically held together with thick rubber bands.\n(Note: Check step 34 for updated battery design)\nIMPORTANT: IF THIS IS DONE INCORRECTLY, IT MAY CAUSE A LOT OF DAMAGE:\nCreate two identical \"plates\" of the battery holder, place the batteries in the orientation as shown, and place the second plate EXACTLY as shown in the drawing. Use the schematic of the battery pack to make sure you are doing it right.\nTo charge the battery, I take it apart and charge the cells individually using a charger like this: https://www.walmart.com/ip/Tbest-4-Slots-Battery-C....", "step_imgs": ["https://cdn.instructables.com/FNL/K1I6/JRBBP2A6/FNLK1I6JRBBP2A6.LARGE.jpg", "https://cdn.instructables.com/FMJ/4OHS/JRKZ11C6/FMJ4OHSJRKZ11C6.LARGE.jpg", "https://cdn.instructables.com/F6N/5KMA/JREUAJ8R/F6N5KMAJREUAJ8R.LARGE.jpg", "https://cdn.instructables.com/F56/IE7Y/JRKZ11C5/F56IE7YJRKZ11C5.LARGE.jpg", "https://cdn.instructables.com/FRD/IXBK/JRKZ11C1/FRDIXBKJRKZ11C1.LARGE.jpg", "https://cdn.instructables.com/FBD/96DY/JRKZ11C2/FBD96DYJRKZ11C2.LARGE.jpg", "https://cdn.instructables.com/F58/Y450/JRKZ11V2/F58Y450JRKZ11V2.LARGE.jpg", "https://cdn.instructables.com/FJR/39DN/JRKZ11C3/FJR39DNJRKZ11C3.LARGE.jpg"], "step_title": "Step 12: Battery Construction"}, {"step": 13, "steps_text": "There is this ad I've seen somewhere that states \"Power is nothing without control\", and that is very true when it comes to quadcopters.\nNow for many beginners, it is good enough to go buy a commercial flight controller board like an Ardupilot, which is based off of the Arduino Mega and can be programmed with the Arduino IDE (https://www.newegg.com/Product/Product.aspx?Item=9...), NAZA 32 (https://www.ebay.com/i/322013155847?chn=ps), etc and use that instead. You will probably get better performance that way, but what is the fun in that?\nSo being the naive child I am, I decided to make my own flight controller...how hard can that be?\nSigh.", "step_imgs": ["https://cdn.instructables.com/F6R/T74Z/JTT5O45W/F6RT74ZJTT5O45W.LARGE.jpg"], "step_title": "Step 13: Control"}, {"step": 14, "steps_text": "This is the brains of the drone. Let's make it. I will assume soldering skills are present.\nYou will need:\n- 1x 5v Arduino Pro Mini (or clone): https://www.microcenter.com/product/486546/arduino...\n- 1x GY-87 10 DOF triple axis gyroscope, accelerometer, magnetometer, and barometer: https://www.amazon.com/GUWANJI-MPU6050-HMC5883L-BM...\n- Resistors\n- 2.2k resistor\n- 6.8k resistor\n- 40x Header pins\n- 1x LM7805 5v voltage regulator (I dug mine out of an old ESC which I burned up): https://www.adafruit.com/product/2164\n- Wires\n- A ton of programming skills\n- Perfboard\n- 2.4 Ghz transmitter and receiver (at least 4 channels, I used a Flysky FS-i6X: https://www.amazon.com/Flysky-FS-TM10-Transmitter-...)\nMost components within the quadcopter communicate via PWM. You will see wire \"ribbons\" (called servo connectors) with three wires: red, black, and white (or sometimes, orange, red, and brown). Red is for 5V (positive), white/orange is for signal, and black/brown is for GND (negative). I will explain the communication methods in the \"Theory\" section.", "step_imgs": ["https://cdn.instructables.com/F46/KPM3/JRKZ18G4/F46KPM3JRKZ18G4.LARGE.jpg"], "step_title": "Step 14: Flight Controller"}, {"step": 15, "steps_text": "The Arduino Pro Mini is powered by the 5v regulator (built into the voltage sense wire...look at step 18) and communicates with the GY-87 gyroscope via the I2C bus. The voltage of the battery is read through analog input pin 3 (A3) through a voltage divider (also built into the voltage sense wire).", "step_imgs": ["https://cdn.instructables.com/FGB/0GTV/JRKZ24E7/FGB0GTVJRKZ24E7.LARGE.jpg", "https://cdn.instructables.com/F2Z/L0HB/JRKZ18IW/F2ZL0HBJRKZ18IW.LARGE.jpg", "https://cdn.instructables.com/FU9/H1V1/JRKZ18M2/FU9H1V1JRKZ18M2.LARGE.jpg"], "step_title": "Step 15: Flight Controller Schematic"}, {"step": 16, "steps_text": "The title may sound intimidating, but to be honest, this is probably the easiest part of the whole process of quadcopter building. Still not convinced? Well, I'll show you....", "step_imgs": ["https://cdn.instructables.com/FXA/EJY8/JRKZ18XZ/FXAEJY8JRKZ18XZ.LARGE.jpg"], "step_title": "Step 16: Wiring the Whole Quadcopter"}, {"step": 17, "steps_text": "Female bullet connectors get soldered onto the three wires coming out from the ESC and male bullet connectors get soldered onto the two power wires from the ESC.\nLook at this video if you need help:\nFemale bullet connectors also get soldered onto the Power Distribution Board (PDB). First, lay them sideways and clamp them on the metal contacts. Then, melt the solder all around it to make sure it stays in place.\nThe male XT-60 connector gets soldered to the PDB as well. Solder wires to the XT-60 connector and solder the wires to the PDB.\nCreate the voltage regulator circuit on the PDB.", "step_imgs": ["https://cdn.instructables.com/FG9/NUO9/JRKZ193K/FG9NUO9JRKZ193K.LARGE.jpg", "https://cdn.instructables.com/F0R/WR4J/JRKZ242I/F0RWR4JJRKZ242I.LARGE.jpg"], "step_title": "Step 17: Solder (all) the Connectors"}, {"step": 18, "steps_text": "This wire will allow the Arduino to determine if the battery voltage is too low as well as provide 5V regulated power to the Arduino.", "step_imgs": ["https://cdn.instructables.com/FW8/7336/JRKZ1MNC/FW87336JRKZ1MNC.LARGE.jpg", "https://cdn.instructables.com/FGR/1AY1/JRKZ19C0/FGR1AY1JRKZ19C0.LARGE.jpg"], "step_title": "Step 18: Make the Voltage Sense Wire"}, {"step": 19, "steps_text": "Use zipties to mount the PDB onto the bottom plate of the quadcopter and feed the sense wire through the hole and up to the top of the quadcopter.", "step_imgs": ["https://cdn.instructables.com/F4X/VE9V/JRKZ193L/F4XVE9VJRKZ193L.LARGE.jpg"], "step_title": "Step 19: Mount the PDB"}, {"step": 20, "steps_text": "Since it is impossible to screw through cardboard and expect there to be a strong mount, I decided to use zipties again and they work very well.", "step_imgs": ["https://cdn.instructables.com/F37/L0I4/JREUAFDV/F37L0I4JREUAFDV.LARGE.jpg"], "step_title": "Step 20: Mount the Motors"}, {"step": 21, "steps_text": "Use double-sided sticky tape to mount the ESCs and plug the power wires of the ESC to the PDB. Then, plug the three wires coming out of the other side of the ESC into the motor (it does not matter which way....we will fix that later if necessary).", "step_imgs": ["https://cdn.instructables.com/F5H/DCGK/JRKZ1998/F5HDCGKJRKZ1998.LARGE.jpg", "https://cdn.instructables.com/FB0/REKZ/JRKZ196G/FB0REKZJRKZ196G.LARGE.jpg", "https://cdn.instructables.com/FSV/JDM6/JRKZ19JG/FSVJDM6JRKZ19JG.LARGE.jpg"], "step_title": "Step 21: Mount and Wire the ESCs"}, {"step": 22, "steps_text": "Feed the signal wires of the ESC to the top of the quadcopter and insert the top plate. Glue 30dB earplugs to the top plate. These earplugs will act as vibration dampeners for the flight controller.", "step_imgs": ["https://cdn.instructables.com/F67/G768/JRKZ19FQ/F67G768JRKZ19FQ.LARGE.jpg", "https://cdn.instructables.com/FJH/1NQL/JRKZ19MD/FJH1NQLJRKZ19MD.LARGE.jpg", "https://cdn.instructables.com/FYG/UXQ6/JRKZ19P9/FYGUXQ6JRKZ19P9.LARGE.jpg"], "step_title": "Step 22: Wire Management"}, {"step": 23, "steps_text": "Put velcro on the receiver as well as the top plate of the quadcopter and mount it. Feed the antenna wires under the zipties on the arms, 90 degrees with respect to each other.", "step_imgs": ["https://cdn.instructables.com/FXU/LAS8/JRKZ19S1/FXULAS8JRKZ19S1.LARGE.jpg", "https://cdn.instructables.com/F4M/16L1/JRKZ19UU/F4M16L1JRKZ19UU.LARGE.jpg", "https://cdn.instructables.com/FC1/EGF5/JRKZ18AI/FC1EGF5JRKZ18AI.LARGE.jpg", "https://cdn.instructables.com/F5B/XJHS/JRKZ18DA/F5BXJHSJRKZ18DA.LARGE.jpg"], "step_title": "Step 23: Mount the Receiver"}, {"step": 24, "steps_text": "Plug in the voltage sense wire to the flight controller and make the following connections:\nReceiver --> Arduino\nCH1 --> 12\nCH2 --> 11\nCH3 --> 10\nCH4 --> 9\nMotor --> Arduino\nTop left --> 4\nTop right --> 5\nBottom left --> 7\nBottom right --> 6\nThen, secure the flight controller on top of the earplugs.", "step_imgs": ["https://cdn.instructables.com/F38/0W7E/JRKZ18V7/F380W7EJRKZ18V7.LARGE.jpg"], "step_title": "Step 24: Wire the Flight Controller In"}, {"step": 25, "steps_text": "To make our lives easier when it comes to the tuning, let's build ourselves a programming board we can attach to the Arduino that will allow us to program wirelessly.\nYou will need:\n- 1x HC-05 Bluetooth Module\n- 2x 2n2222 NPN bipolar junction transistor (or equivalent)\n- Resistors\n- 1.8k (x1)\n- 3.3k (x1)\n- 10k (x2)\n- 1x 0.01 microfarad ceramic capacitor\n- Some wires\n- 6x female header pins\n- Arduino Uno for HC-05 setup\n- Perfboard\n- Laptop/Computer with bluetooth\nSet up the HC-05:\nConnect the HC-05 to the Arduino Uno according to the schematic, hold down the button on the HC-05, power the Arduino with your laptop, and open the Arduino IDE.\nUpload the test code and open the Serial Monitor.\nMake sure that the Line Ending box is set to NL & CR (instead of No line ending) and at 9600 baud.\nType \"AT\" (without the quotes) into the Serial Monitor and hit enter, you should get a response of \"OK\".\nIf so, then set the baud rate of the HC-05 to the programming baud rate of the Arduino Pro Mini with the command \"AT+UART=57600,0,0\" (without quotes)\nYou should get a response of:\n+UART: 57600,0,0\nOK\nIf you want to change the password, use this command \"AT+PSWD=xxxx\" (replace the x's with your numerical password). This is optional.\nTo connect with your laptop for programming, unplug the HC-05 from your laptop and power it from an external source. Then, turn on your laptop's bluetooth and find the device called \"HC-05\". When you try to pair with it, it will prompt you for a password, in which you will type the password that you set previously or if you chose not to change the password, the default is \"1234\". If that does not work, try \"0000\".\nConstruction of the Programming Board:\nRefer to the schematic for construction information.", "step_imgs": ["https://cdn.instructables.com/FZZ/60CU/JREUACDF/FZZ60CUJREUACDF.LARGE.jpg", "https://cdn.instructables.com/FRM/E2BD/JREU8PZV/FRME2BDJREU8PZV.LARGE.jpg", "https://cdn.instructables.com/FYE/DCNY/JRKZ18OV/FYEDCNYJRKZ18OV.LARGE.jpg", "https://cdn.instructables.com/FKU/HUK4/JRKZ18RN/FKUHUK4JRKZ18RN.LARGE.jpg"], "step_title": "Step 25: Programming Board"}, {"step": 26, "steps_text": "In the following sections I explain how the flight controller \"thinks\" and how things communicate with each other inside a quadcopter.\nYou will notice that many things like the receiver and motors connect to the flight controller with three-wire cables, which are called servo connectors. The red and the black/brown wires are your 5V and GND, respectively, and your white/orange wire is the signal wire, which sends pulse width modulation (PWM) signals like the image shown above.\nBy varying the amount of time the signal is \"high\" or connected to 5V, control information can be quickly sent and received. The signal sent out from the receiver at a 50 hertz (Hz) refresh rate and the \"high\" pulse varies between 1000 microseconds to 2000 microseconds (1-2 milliseconds). There are 1 million microseconds in a second...so that pulse is very fast.\nBased on the image above, you can see that the whole signal takes about 20 milliseconds. The signal is only high for 1000-2000 microseconds, but for the remaining time, the signal is low. There are 1000 milliseconds in a second, and if you divide 1000/20, you get 50 Hz, indicating that there can be 50 twenty-millisecond signals sent within a second.\nNow, the 50 Hz refresh rate may sound very fast to you, but for quadcopters, a 50Hz refresh rate is too slow to keep the quadcopter balanced. Why? Well, only the duration of the \"high\" pulse carries the motor speed information, and the low pulse is only there to help the flight controller differentiate between the first signal and the next signal and does not carry any important information. So in other words, making the \"low\" pulse way too long is a waste of time, and this is certainly the case. That is why the PWM interface for the motors is clocked much faster, in this case, 250 Hz, or 250 times a second! If we do the calculations: 1000/250, we can see that each signal only lasts for 4 milliseconds! In off-the-shelf flight controllers, refresh rates can be as high as a couple of kilohertz, but the Arduino is not fast enough to achieve those speeds.", "step_imgs": ["https://cdn.instructables.com/F3I/GQXY/JRGOFQ00/F3IGQXYJRGOFQ00.LARGE.jpg"], "step_title": "Step 26: Theory (PWM Communication)"}, {"step": 27, "steps_text": "Flying a drone is 98% computer and 2% human. Why? Because humans are slow. Like reeeeaaaaaallllllllyyyyy slow. In fact it is nearly impossible to fly a quadcopter without a flight controller to automatically adjust and stabilize the quadcopter hundreds of times per second. In the previous step, I mentioned how receiver information has a refresh rate of 50 Hz, and that is good enough because human reaction times are not going to be that fast anyway (average response time to a touch stimulus, the fastest, is around 150 milliseconds).\nHowever, how does the flight controller know that the quadcopter is tilting? Well, in my drone, I used a GY-87 10DOF IMU, or inertial measurement unit. This module is capable of measuring acceleration in the x, y, and z axes, can measure rotation rate around the x, y, and z, axes, the angle from magnetic north on the x, y, and z axes, and can measure air pressure as well. Using all these pieces of information, the quadcopter can accurately determine the tilt. I will go into more detail in the next step.\nThe IMU is getting all this good information, but how does it tell all this to the Arduino....and fast enough so it is not too late to save a falling quadcopter? This most certainly cannot use PWM, as it would be way too slow to send all these 10 pieces of information all at once. Instead, it uses a communication protocol called I2C (pronounced \"eye squared see\", but also known as TWI, or two wire interface), which as the name suggests, uses two wires called SDA (serial data) and SCL (serial clock). This communication method can allow maximum speeds of up to 400 kHz or 400,000 times per second!\nHow does it work?\nWell, I2C communication occurs between a master (the device who wants the information) and a slave (the device that gives the information), and the slave has its own address, or name, in hexadecimal form. It kinda works like a really small band, let's say a drummer and a rapper. The drummer keeps the beat and the rapper delivers the message. The SCL line keeps both devices synchronized, the SDA line sends a chain of pulses of different lengths to send different messages. This is called serial communication because the information packets are delivered sequentially, one after another. With this method, over 100 devices can be connected and interfaced independently with only two wires! Really neat stuff.", "step_imgs": ["https://cdn.instructables.com/F3P/WNSK/JRGOFPRL/F3PWNSKJRGOFPRL.LARGE.jpg"], "step_title": "Step 27: More Theory (I2C Communication)"}, {"step": 28, "steps_text": "Each sensor has their own advantages and disadvantages, and this is why we need a ton of sensors.\nGyroscope (or gyro): Measures angular velocity, or the rate at which the quadcopter is spinning in degrees per second. So if you know the speed at which the quadcopter is spinning and the amount of time passed, you can calculate the angle. This is by far the most accurate and reliable sensor on any drone, as the values are not affected by vibration and linear motion (motion in a straight line). However, gyros do suffer from drifting (called low frequency noise), where small errors add up to make huge problems.\nAccelerometer: Measures linear acceleration and knows which way is down (it uses the acceleration of gravity to determine that). By using trigonometry (look at pictures), we can figure out the angle which it is tilted at. However, this sensor's values are very noisy and is greatly affected by quadcopter motion, vibration from motors, and high frequency noise.\nAccelerometers also suffer from gimbal lock:\nFor example, if the quadcopter is perfectly level, the z axis will point upwards and the x and y axes will be parallel to the earth. In this case, if the quadcopter were to pitch and roll, the x or y axes will no longer be parallel to the earth and the z axis will no longer be perpendicular to the ground, therefore, registering an acceleration on the axes. This enables the accelerometer to calculate pitch and roll. However, if the quadcopter were to yaw, the accelerometer will not sense any change because the Z axis will still be pointing straight upwards and the x and y axes will still be parallel to the earth. We lose one axis of rotation.\nMagnetometer: Tells you where is magnetic north and how many degrees you are away from it. However, because this sensor measures magnetic fields, if you have big coils with a lot of electricity running though it or big metal things with magnets spinning at thousands of rpms (cough cough your motors), then the measurement will be affected. These sensors need to be manually calibrated from time to time (check the next step for information).\nBarometer: Measures air pressure. Using this information we can approximate altitude. This sensor can be affected by light (yes it is that sensitive).\nA quadcopter needs to measure pitch, roll, and yaw angles, as well as position and altitude (both optional).\nPitch and Roll: The accelerometer and gyroscope data are both used to calculate the angle. The gyro does most of the angle measurement but the accelerometer is there to check and correct the gyro values if it has drifted too far.\nYaw: The gyro and magnetometer are used to calculate the angle. In this case, the magnetometer replaces the accelerometer and corrects the gyro drift.\nAltitude: The barometer and GPS are used to calculate the altitude. Using only the barometer is fine for most cases, but if you really need precise altitude information (altitude hold for example), GPS can be used to correct barometer errors\nPosition: GPS....doesn't need anything for compensation as it is very accurate, but GPS has a really slow refresh rate (10 Hz).", "step_imgs": ["https://cdn.instructables.com/FMZ/1XS5/JRKZ2A1G/FMZ1XS5JRKZ2A1G.LARGE.jpg", "https://cdn.instructables.com/F17/B6KW/JRKZ2A1J/F17B6KWJRKZ2A1J.LARGE.jpg", "https://cdn.instructables.com/F9M/MRNT/JRKZ2A1M/F9MMRNTJRKZ2A1M.LARGE.jpg"], "step_title": "Step 28: Even More Theory (Sensors, Math, and Angle Calculation)"}, {"step": 29, "steps_text": "If you just bought a transmitter and receiver, you have to let the transmitter know that it will be talking to the specific receiver that came with your box and vice-versa. This process is called binding and it takes literally 10 seconds.\n1. Plug the bind cable into the \"BAT\" (battery) port on your receiver.\nThe bind cable is the little black loop of wire with a servo connector at the end\n2. Power on the receiver with the Arduino flight controller\n3. While holding the \"BIND\" key on your transmitter, turn it on\n4. Lights should blink and when everything stops blinking, you can unplug the bind cable and you are done!", "step_imgs": ["https://cdn.instructables.com/F1E/0J83/JROTLIHN/F1E0J83JROTLIHN.LARGE.jpg", "https://cdn.instructables.com/FVK/5ED0/JROTLIHO/FVK5ED0JROTLIHO.LARGE.jpg"], "step_title": "Step 29: Transmitter and Receiver Info"}, {"step": 30, "steps_text": "There are two things we need to calibrate before we can fly, the motors and the magnetometer.\nCalibrate the Motors:\nWe need to do this in order to tell the ESCs what the throttle range is. This is very important, because if you do not take the time to calibrate your motors, your motors may start at different times, not start at all, or may not utilize the full range of the throttle correctly.\nMoreover, the standard timing for an ESC is 50 Hz, which I mentioned previously, is way too slow for a drone, so a calibration will allow the ESC timing to be scaled up to 250 Hz.\nThis is fairly simple. Upload the code attached to the Arduino (called \"motor_calibrate\") and follow this procedure:\n1. Unplug battery\n2. Take off your propellers\n3. Take off your propellers\n4. Did you do steps 2 and 3?\n5. Set your throttle stick on your RC transmitter to full throttle.\n6. Check and make sure your propellers are off\n7. Plug in the battery\n8. Your ESCs will beep a startup tone and then it will beep once or twice\n9. After you hear the final beeps, lower your throttle to minimum throttle and wait for a confirmation beep.\n10. Then move your throttle stick up and down, all motors should spin up at the same time\n11. Check if the motors are spinning in the right directions: top left- counterclockwise, top right- clockwise, bottom left- clockwise, bottom right- counterclockwise.\n12. If any motor is not spinning in the right direction, simply swap any two of the wires connected to the ESC and the motor will change direction.\n13. Unplug battery\n14. When you are ready for the main code and PID tuning, put the propellers on. Depending on which way your motors are spinning, remember that the elevated edge of the propeller blade cuts into the air first.\nCalibrate the magentometer:\nIf the magnetometer is not calibrated, the yaw angle values will be off.\n1. Upload the code called \"calibrate_mag\" to the Arduino.\n2. Open the Serial Monitor (use No line ending and 9600 baud) and spin your quadcopter around the z-axis at least 3 times slowly.\n3. Record the final two numbers. These are your offset values.\n4. When you get around to uploading the final flight controller code, insert the offset values into the code (there will be comments in the code which indicates where you should put your offset values).", "step_imgs": [], "step_title": "Step 30: Calibration"}, {"step": 31, "steps_text": "I attached the code for the quadcopter, note that this code is nowhere near perfect and does not take advantage of all the sensors and input devices I've mentioned. In fact it, is the bare minimum required for flight. However, if you are a seasoned programmer, go ahead and adjust it to make other cool stuff happen.\nTo use the bluetooth programming board to program the Arduino, turn on your computer's bluetooth and open the Arduino IDE. Go to Tools --> Ports and note the available ports. Power on the Arduino, go back into Ports and look at the new port that appeared. Click on this port and upload the code and it should upload wirelessly.\nNote: The refresh rate of the code is 250 Hz, which means it takes 4000 microseconds to complete a loop. If you add more code, make sure the looptime is not greater than 4000 microseconds, or angle calculation will be off. Remember the gyro outputs the rate of rotation, so it must be multiplied by the elapsed time in order to calculate angle. Calculating elapsed time every loop makes the program too sluggish, so setting the looptime to a constant time (4 milliseconds) will enable the Arduino to calculate the gyro angle much faster.", "step_imgs": [], "step_title": "Step 31: Code"}, {"step": 32, "steps_text": "Before you can actually fly, you need to tune your PID controller. Essentially, you initially make the P-gain equal to 1.00, upload the code to the Arduino, fly, land, change more values, and repeat until you get something flying nice.\nThe PID controller is responsible for how responsive the quadcopter is going to be. There are a ton of different methods to PID tuning, but this method works for me:\nIncrease the P-gain (whole or half number intervals): Increases the responsiveness (or the \"kick\") of the quadcopter (aka determines how much the quadcopter speeds up the motors when there is little tilt). Keep increasing this value until the quadcopter starts to overcompensate and starts wobbling.\nIncreasethe D-gain (intervals of about 0.5): Dampens the P-gain. For example, a human hitting the drone or sudden gust of wind will cause the drone to try to rocket back to stability, but the D-gain provides a \"force\" to resist the drone from overshooting. Increase this until the quadcopter starts vibrating, then decrease it by around .5.\nIncrease the I-gain (intervals of 0.001): Corrects small quadcopter drift and helps the quadcopter actually return to zero degrees.\nPID tuning is long, brutal, and will require some (a lot of) patience. Play with the values in this order until you get satisfactory performance.\nFor more information I recommend watching Joop Brokking's channel on youtube as he explains a lot more through his videos in a rather entertaining way.", "step_imgs": ["https://cdn.instructables.com/F0L/RV0K/JTT5O776/F0LRV0KJTT5O776.LARGE.jpg"], "step_title": "Step 32: PID Tuning"}, {"step": 33, "steps_text": "When you try your best but you don't succeed.....\nThis was the first flight with my original code that I did not post because it's bad.\nNow as you can see, my drone did not take off successfully in this footage, and there's a couple of reasons why. 1. The batteries were too discharged\n- I spent the whole day tuning the PID on the quadcopter and never bothered to check the voltage of the battery (preferably above 12 volts) before taking it out to fly....so it is essential to have fresh batteries before flight. With a discharged battery, your motors will not produce the expected amount of thrust and your drone will not fly.\n2. PID values were out of wack\n- Even with a whole day of PID tuning, you can see that I didn't do a good job of it, as see by the large wobbling around the y-axis. Decreasing the P gain of the roll can solve the problem (note, if the drone was oscillating very rapidly, then it is the fault of the D gain).\n3. Battery Connections were not good\n- If you caught the quick beeps from the ESCs at the end of the video, you can tell that the quadcopter had powered off and powered on again. This is the result of bad connections that rocked loose during the wobbling.", "step_imgs": [], "step_title": "Step 33: Flight....fail"}, {"step": 34, "steps_text": "Problem 1 is easy to solve....charge the batteries!!!\nProblem 2 will require more hours of tuning.\nProblem 3 is also fairly easy to solve. Apparently trying to clamp the battery wires underneath the soda can and hot-gluing them in place is not enough....so here's my solution:\n- Solder the battery wires to washers\n- Pre-sand the washers with 100 grit sandpaper so the solder will stick to the washers better\n- Solder the wires.\n- Slide the rivet through the washer\n- Put the soda can strip on top, and rivet everything together\nClearly, this was a much more robust solution.", "step_imgs": ["https://cdn.instructables.com/FV2/O3FS/JTWS1YYT/FV2O3FSJTWS1YYT.LARGE.jpg", "https://cdn.instructables.com/FC8/ZQ9X/JTWS1YZX/FC8ZQ9XJTWS1YZX.LARGE.jpg", "https://cdn.instructables.com/FT1/FQBP/JTWS1Z11/FT1FQBPJTWS1Z11.LARGE.jpg"], "step_title": "Step 34: Fix Those Problems"}, {"step": 35, "steps_text": "So congratulations, you've finally reached the end of this really long instructable. I hope that you've learned a lot of about the art of drone building and electronics as much as I did and I hope that I did not bore you too much.\nThere are a ton of upgrades I can make to the quadcopter, but if I had the time (and money) to do so, I would:\n- Upgrade the battery to higher quality pack, because my DIY battery pack is heavier and requires a lot more maintenance, but the DIY pack has taught me a lot more.\n- Integrate a Raspberry Pi Zero W and a camera, so I can put in computer vision, data logging, FPV (first person view), aerial photography, and much more.\n- Upgrade the motors and propellers\n- Add GPS and position hold features (perhaps even autonomous flight)\n- Add a camera gimbal\nSome use cases for my quadcopter:\n- Seek out my school bus when it comes so I can make it to my stop on time (really useful to have on cold days, where I can limit the amount of time I spend outside)\n- Take cool pictures\n- Drop water balloons on people during hot summer days :D\n- The possibilities are limitless!\nUnfortunately the failed flight damaged my last stock of propellers, and I will need to order more. If I manage to do any of the above and find some time within my busy high school life, I will post an updated instructable with a successful flight (hopefully) as well as highlight more things that I have done with this project.\nSo in the end, thank you all for taking the time to read my instructable, and now I'd better catch up on my homework....", "step_imgs": [], "step_title": "Step 35: Final Remarks"}], "channel": ""}, {"category": "", "description": "Materials:\ntriplex, thickness: 3mm\nHow many wooden plates depends on how big your lasercutter is... adjust the file on your maximum size wood plate... maybe you need more than 1 plate (keep that in mind).\n6 x flash leds (i used 7 color flash leds)\navailable here: https://bit.ly/2VXQj7g\n6 x 100ohm resistors\navailable here: https://bit.ly/2RNmBCU\n1 x toggle switch\navailable here: https://bit.ly/2TTv5WC\nblack&red electrical wire\navailable here: https://bit.ly/2DbkVes\nheat shrink tube (red)\navailable here: https://bit.ly/2Tz85vp\n2 x AA battery pack\navailable here: https://bit.ly/2CnIO0y\n2 x AA battery\nTools:\nwood glue\nwooden hammer\nsoldering tools", "title": "Disco Desktop Organiser", "url": "https://www.instructables.com/id/Disco-Desktop-Organiser/", "section": "technology", "steps": [{"step": 1, "steps_text": "Download the file for lasercutting (.ai .eps)\nLasercut all the parts.\nEngravings: 1. A position of the name on the front (just outline) so that you can place the separate letters correctly. 2. The text around the toggle switch \"switch to party\". If you prefer using the same font as in the file, it's a free downloadable font: Andora at https://www.dafont.com/andora.font", "step_imgs": ["https://cdn.instructables.com/FC3/OXN7/JQWSX3NO/FC3OXN7JQWSX3NO.LARGE.jpg"], "step_title": "Step 1: Lasercut File"}, {"step": 2, "steps_text": "Gather all parts as seen in picture1.\nTools: wood glue, glue clamp, wooden hammer.\nFollow steps in order of pictures.", "step_imgs": ["https://cdn.instructables.com/FBG/ORM7/JQWSX3P6/FBGORM7JQWSX3P6.LARGE.jpg", "https://cdn.instructables.com/FE3/RKL9/JQWSX3QJ/FE3RKL9JQWSX3QJ.LARGE.jpg", "https://cdn.instructables.com/FFC/S88N/JQWSX3QK/FFCS88NJQWSX3QK.LARGE.jpg", "https://cdn.instructables.com/FWF/1NWO/JQWSX3QL/FWF1NWOJQWSX3QL.LARGE.jpg", "https://cdn.instructables.com/FPE/MO07/JQWSX3QM/FPEMO07JQWSX3QM.LARGE.jpg", "https://cdn.instructables.com/FQ1/MXP0/JQWSX3O6/FQ1MXP0JQWSX3O6.LARGE.jpg"], "step_title": "Step 2: Assembly of 'post-it' Holder"}, {"step": 3, "steps_text": "follow examples in picture 1 to 5.\nthese assembly steps are done with the object turned upside down.\nextra instruction for picture 5: after adding wood glue > flip the object 180 degrees so that the object is not upside down anymore.", "step_imgs": ["https://cdn.instructables.com/F9U/M3EW/JQWSX3P9/F9UM3EWJQWSX3P9.LARGE.jpg", "https://cdn.instructables.com/F2Y/WKTK/JQWSX3PA/F2YWKTKJQWSX3PA.LARGE.jpg", "https://cdn.instructables.com/FME/PLBQ/JQWSX3PI/FMEPLBQJQWSX3PI.LARGE.jpg", "https://cdn.instructables.com/FNI/IGVR/JQWSX3PJ/FNIIGVRJQWSX3PJ.LARGE.jpg", "https://cdn.instructables.com/FP7/HJ2G/JQWSX3QA/FP7HJ2GJQWSX3QA.LARGE.jpg", "https://cdn.instructables.com/F79/STCD/JQWSX3QB/F79STCDJQWSX3QB.LARGE.jpg"], "step_title": "Step 3: Assembly of 'pencil' Holder"}, {"step": 4, "steps_text": "assemble the pencil holder on the baseplate.\n(baseplate is best seen in picture 2 > underneath the pencil holder)", "step_imgs": ["https://cdn.instructables.com/FZF/9H2P/JQWSX3QD/FZF9H2PJQWSX3QD.LARGE.jpg", "https://cdn.instructables.com/F1E/CZNK/JQWSX3QC/F1ECZNKJQWSX3QC.LARGE.jpg", "https://cdn.instructables.com/F33/FOJT/JQWSX3QF/F33FOJTJQWSX3QF.LARGE.jpg", "https://cdn.instructables.com/F52/F2UG/JQWSX3QE/F52F2UGJQWSX3QE.LARGE.jpg"], "step_title": "Step 4: Assembly of Pencil Holder to Baseplate"}, {"step": 5, "steps_text": "follow examples in picture 1 to 6.", "step_imgs": ["https://cdn.instructables.com/F9C/59UU/JQWSX3QP/F9C59UUJQWSX3QP.LARGE.jpg", "https://cdn.instructables.com/F9V/YVP5/JQWSX3QW/F9VYVP5JQWSX3QW.LARGE.jpg", "https://cdn.instructables.com/FXC/8J2T/JQWSX3S5/FXC8J2TJQWSX3S5.LARGE.jpg", "https://cdn.instructables.com/FNA/4COR/JQWSX3P4/FNA4CORJQWSX3P4.LARGE.jpg", "https://cdn.instructables.com/FVP/A4FJ/JQWSX3O7/FVPA4FJJQWSX3O7.LARGE.jpg", "https://cdn.instructables.com/FN1/U6D6/JQWSX3OZ/FN1U6D6JQWSX3OZ.LARGE.jpg"], "step_title": "Step 5: Assembly of Post-it Holder to Baseplate"}, {"step": 6, "steps_text": "First: solder de 100 ohm resistors to the positive leg of the flash leds.\nPut all leds in the front plate.\nUse the little 'handles' to fix the leds in position > use wood glue\nSolder all negative legs (parallel circuit)\nSolder all positive legs (parallel circuit)\nSolder positive wires to the toggle switch (use 2 connectors next to each other)\nSolder batterypack to positive wire of the switch\nSolder batterypack to negative wire of the switch\nFINAL CHECK: insert 2 x AA batteries to check your circuit.", "step_imgs": ["https://cdn.instructables.com/F83/SVYY/JTON14UF/F83SVYYJTON14UF.LARGE.jpg", "https://cdn.instructables.com/FAI/N92A/JTON14KN/FAIN92AJTON14KN.LARGE.jpg", "https://cdn.instructables.com/FGL/7HVY/JTON14LY/FGL7HVYJTON14LY.LARGE.jpg", "https://cdn.instructables.com/F8H/FGA1/JTON14TE/F8HFGA1JTON14TE.LARGE.jpg", "https://cdn.instructables.com/F5Z/E4L2/JTON14RA/F5ZE4L2JTON14RA.LARGE.jpg", "https://cdn.instructables.com/FMN/6FEO/JTON14SS/FMN6FEOJTON14SS.LARGE.jpg", "https://cdn.instructables.com/FL9/7JM8/JTON1A2G/FL97JM8JTON1A2G.LARGE.jpg"], "step_title": "Step 6: Building Front Plate With Leds and Wiring"}, {"step": 7, "steps_text": "Tools needed: wooden hamer & wood glue.\nConnect toggle switch to the casing\nUse the hammer gently to connect front plate to base plate (in photo the order is different but nonetheless very helpfull)\nNow connect the casing all around the front plate and baseplate.\nFinally connect the back plate\nWhile using the wooden hammer > watch out for the leds! > don't crush them... ;)", "step_imgs": ["https://cdn.instructables.com/FGT/4QMH/JTON1IY7/FGT4QMHJTON1IY7.LARGE.jpg", "https://cdn.instructables.com/FQW/V1O1/JTON1I8S/FQWV1O1JTON1I8S.LARGE.jpg", "https://cdn.instructables.com/FP1/5ZP7/JQWSX4TS/FP15ZP7JQWSX4TS.LARGE.jpg", "https://cdn.instructables.com/F0X/FZ99/JTON1JDN/F0XFZ99JTON1JDN.LARGE.jpg", "https://cdn.instructables.com/FI6/TSUS/JTON1JDO/FI6TSUSJTON1JDO.LARGE.jpg", "https://cdn.instructables.com/FDW/L4LS/JTON1JC8/FDWL4LSJTON1JC8.LARGE.jpg", "https://cdn.instructables.com/FLT/WPKG/JTON1JCX/FLTWPKGJTON1JCX.LARGE.jpg"], "step_title": "Step 7: Final Assembly"}, {"step": 8, "steps_text": "Colour the preferred name with 'ecoline'.\n...or keep it blank... whatever you prefer!\nGlue it to the box ... and VOILA!\nYou're done!", "step_imgs": ["https://cdn.instructables.com/FSX/DFOM/JQWSX42P/FSXDFOMJQWSX42P.LARGE.jpg"], "step_title": "Step 8: Finishing Touch: Personalize!"}], "channel": ""}, {"category": "", "description": "We are a family of four and so have four bicycles. Every time we want to use them, there are surely some tyres to top up. My compressor is in the garage /workshop and not easily accessible from where we store the bicycles. Hence, we have to use a hand pump and by the time I have finished pumping all the tyres I have lost the enthusiasm to go out with the bikes. Hence I needed a portable and quick to set up compressor.\nWell I had some 5 litre containers lying around, an old computer power supply and a mini compressor that someone had given me a few years ago. Hence I decided to put them together, make a lazy mans portable compressor and recycle some waste!\nI am sure the electronics experts are going to crucify me but I can take it!\nI am not inventing anything but hope someone finds this instructable useful.", "title": "Lazy Man's Portable Bicycle Pump", "url": "https://www.instructables.com/id/Lazy-Mans-Portable-Bicycle-Pump/", "section": "technology", "steps": [{"step": 1, "steps_text": "Here we will be using a knife to cut holes and a drill, Always use protective gear and take all necessary precautions when using power tools. Read the instruction manual for your power tool carefully and pay particular attention to safety\nATTENTION: I am using an ATX power supply. Do not open the ATX power supply unless you know what you are doing. There are large capacitors inside and there is risk of electric shock from high voltage. It should not be necessary to open it.\nClean your container well before using.\nDo not use containers that contained dangerous, toxic or inflammable substances. Instead, dispose of them properly according to your local laws. Do not disperse toxic or dangerous substances into the atmosphere.\nThe object in this instructable is only meant for filling bicycle tyre with air. Hence it should only be used for 5-10 minutes maximum. My particular compressor cuts out automatically after 10 minutes of use. Even though I use a cigar lighter type socket, it is not meant as cigar lighter or phone charger or any other function. If you use for any other function then do so at your own risk.\nThe device uses 12V and could cause fires in case of short circuit or over heating. If you do not know what you are doing then seek expert advice or do not do this instructable.\nThis device is only to be used out of doors on a dry day. Do not use in damp or humid conditions or near water.\nThis device should only be used by adults.\nDisconnect the device from the power supply when not in use.\nDo not leave unattended while in use.\nFollow this instructable at your own risk. I will not accept responsibility for any damage or harm caused.", "step_imgs": ["https://cdn.instructables.com/F6F/BSA3/JQWSYGGH/F6FBSA3JQWSYGGH.LARGE.jpg"], "step_title": "Step 1: Safety First"}, {"step": 2, "steps_text": "You will need:\n1. A cigar /cigarette lighter socket.\n2. Mini compressor (mine is 60W 5A)\n3. Small switch (I used a toggle type)\n4 Some LED lights and a couple of approx. 220 ohm resistors and heat shrink tube\n5. Fuse holder\n6. Old power supply (mine is a small 12V 10Amp)\nDrawings are at the end of the instructable.", "step_imgs": ["https://cdn.instructables.com/FDI/K8KB/JQWSWR08/FDIK8KBJQWSWR08.LARGE.jpg", "https://cdn.instructables.com/F4T/SGMF/JSL3CIPB/F4TSGMFJSL3CIPB.LARGE.jpg", "https://cdn.instructables.com/FN3/MZQH/JQWSWR3I/FN3MZQHJQWSWR3I.LARGE.jpg", "https://cdn.instructables.com/FKX/MD9H/JSL3CNPE/FKXMD9HJSL3CNPE.LARGE.jpg", "https://cdn.instructables.com/FND/7Z1M/JQWSWR07/FND7Z1MJQWSWR07.LARGE.jpg", "https://cdn.instructables.com/F22/C1TS/JSL3CNEM/F22C1TSJSL3CNEM.LARGE.jpg", "https://cdn.instructables.com/FNN/VUI1/JSL3CPRI/FNNVUI1JSL3CPRI.LARGE.jpg"], "step_title": "Step 2: What You Will Need"}, {"step": 3, "steps_text": "As I mentioned, I used a 5 litre container that is normally used for liquids.\nclean it out and make sure it is dried well. Do not use a container that contained harmful or inflammable liquids.\nWe will need to make some holes in the container (see drawings in PDF at the end) and will start with a window on the side that is big enough to allow the power supply to pass through.\n1. On one of the larger sides, draw a square, 110mm from the base, 140mm x 140mm.\n2. make a hole in each corner, using a drill, so that you can start the cut. I used a small drill bit first (5mm) and then a larger one (8 or 9mm).\n3. cut the square out using scissors or knife. Take care because it is easy for the knife to slip and cut yourself.", "step_imgs": ["https://cdn.instructables.com/FM1/WFU0/JQWSWR3G/FM1WFU0JQWSWR3G.LARGE.jpg", "https://cdn.instructables.com/FLE/W7NT/JQWSWRJ8/FLEW7NTJQWSWRJ8.LARGE.jpg", "https://cdn.instructables.com/FS8/VVY2/JQWSWRJO/FS8VVY2JQWSWRJO.LARGE.jpg", "https://cdn.instructables.com/F6Q/KYWZ/JQWSWRK4/F6QKYWZJQWSWRK4.LARGE.jpg"], "step_title": "Step 3: Prepare the Container"}, {"step": 4, "steps_text": "I have loads of old ATX power supplies so I decided to use one of those for the power. I guess the electronics experts won't be happy to use a plastic container for such an application but, as you will see later, I put sheets of cork around the power supply to protect the container from heat. However, I should point out that the ATX is an old low power one. I guess another type of power supply could also be used.\nATTENTION: Do not open the ATX power supply unless you know what you are doing. There are large capacitors inside and there is risk of electric shock from high voltage. It should not be necessary to open it. If you want to clean dust from it, use a compressor and blow the dust out from the outside, there are plenty of ventilation holes. Wear a mask and do the job in a well ventilated area (outside for example).\nInstallation:\n1. If necessary, allow for the concave base of the container (some are concave).\n2 There is a drawing at the end of the instructable that you can use as a template.\n3. position the template approx 25mm from the base so that, if the base is concave, the weight of the ATX rests on the base.(see drawings at end)\n3. Mark the fixing holes and then a square just inside (approx 5mm) the position of the holes.\n4. Make 4 holes in each corner of the square and cut it out.\n5. Check the ATX fits and that the fixing holes, in the container, line up with the holes in the ATX", "step_imgs": ["https://cdn.instructables.com/FA4/5Q8B/JQWSWRCF/FA45Q8BJQWSWRCF.LARGE.jpg", "https://cdn.instructables.com/F0D/ACLS/JQWSWRG1/F0DACLSJQWSWRG1.LARGE.jpg", "https://cdn.instructables.com/FTZ/ZBDM/JQWSWRY2/FTZZBDMJQWSWRY2.LARGE.jpg"], "step_title": "Step 4: Cut Out for ATX Power Supply"}, {"step": 5, "steps_text": "I decided to fit a fan for cooling the mini compressor and also the ATX power supply\nI used a big 80mm fan and positioned it just above the ATX power supply (approx. 114mm from the base).\nSeeing as the container is not closed, I used the fan to blow over everything and then out the other side. However, I am not an expert and it may be better to draw the heat out. Perhaps someone could suggest the best way.\n1. position the fan where you want it and use it to draw the inner circle. Measure and draw the hole positions.\n2. cut the inner circle. I used a sharp knife but scissors are probably better.\n3. drill the fixing holes.", "step_imgs": ["https://cdn.instructables.com/FYH/WDMT/JQWSWRYJ/FYHWDMTJQWSWRYJ.LARGE.jpg", "https://cdn.instructables.com/FCV/5RXF/JSL3CJWD/FCV5RXFJSL3CJWD.LARGE.jpg", "https://cdn.instructables.com/F3A/RB6S/JSL3CJYN/F3ARB6SJSL3CJYN.LARGE.jpg"], "step_title": "Step 5: Cut Out for Fan"}, {"step": 6, "steps_text": "To protect the container from heat, I lined the inside of the container, with thin sheets of cork, where the power supply will be positioned. Then I fitted the pwer supply using the same special screws that were used to fit it to computer.\nI next fitted the fan. It is possible put some thin aluminium grill over the top or, if you have a 3D printer, print a fan cover. You can find plenty on Thingiverse: https://www.thingiverse.com/", "step_imgs": ["https://cdn.instructables.com/F9L/KB1K/JSL3CK34/F9LKB1KJSL3CK34.LARGE.jpg", "https://cdn.instructables.com/FT6/N0QM/JSL33Z6E/FT6N0QMJSL33Z6E.LARGE.jpg", "https://cdn.instructables.com/FJR/91K3/JT4TXT9T/FJR91K3JT4TXT9T.LARGE.jpg"], "step_title": "Step 6: Fitting the Power Supply and Fan"}, {"step": 7, "steps_text": "The compressor needs to be fixed well and I thought the sides of the container were too thin and flexible for good support. There are also no suitable fixing holes on my compressor.\nHowever, I noticed that the compressor does has 4 lateral supports for resting it on the ground and giving it a bit of stability. Hence I decided to make use of these and 4 cable ties to tie the compressor to the side of the container. For extra strength and support, I also used a piece of 5mm plastic sheet between the compressor and the wall of the container.\n1. Cut a piece of plastic sheet large enough so that the compressor sits on it and with approx 5mm extra border all round.\n2. Rest the compressor on the piece of plastic sheet and Mark the position of the supports\n3. drill a hole on outside position of the supports, next to each line. The holes should be big enough for the cable ties to pass through.", "step_imgs": ["https://cdn.instructables.com/FT8/0KDK/JSL3CKD1/FT80KDKJSL3CKD1.LARGE.jpg", "https://cdn.instructables.com/FBT/9JB3/JSL3CKFQ/FBT9JB3JSL3CKFQ.LARGE.jpg", "https://cdn.instructables.com/FOZ/6PKZ/JSL3CKN5/FOZ6PKZJSL3CKN5.LARGE.jpg"], "step_title": "Step 7: Fixing Holes for Compressor."}, {"step": 8, "steps_text": "For this step, you can take measurements or, if you have used a similar compressor, use the dimensions from my drawing. We will use the piece of plastic as a jig for drilling the holes.\n1. Measure the distance from the end of the compressor to the rear supports.\n2. Mark the centre of the narrow side of the piece plastic sheet and place it on the outside of one of the narrow sides of the container.\n3. line the centre line of the piece of plastic with the join line of the container and above the position of the ATX power supply. Allow enough space so the end of the compressor will not touch the power supply. (use the measurement taken in step 1 above)\n4. drill through the holes (previously made) in the piece of plastic so as to make corresponding holes in the plastic container.", "step_imgs": ["https://cdn.instructables.com/FL8/6HLL/JSL3CKH7/FL86HLLJSL3CKH7.LARGE.jpg", "https://cdn.instructables.com/FMJ/VKJI/JSL3CKSA/FMJVKJIJSL3CKSA.LARGE.jpg", "https://cdn.instructables.com/F0R/WA2M/JSL3CKTU/F0RWA2MJSL3CKTU.LARGE.jpg"], "step_title": "Step 8: Fitting the Compressor - Preparations"}, {"step": 9, "steps_text": "1. Place a sheet of cork on top of the ATX power supply.\n2. Place the piece of plastic, on the inside of the container, on the side where the holes were drilled previously.\n3. Place the compressor inside the container and on top of the piece of plastic.\n4. Line up the holes, in the plastic sheet, with those in the container.\n5. Fasten the compressor to the side of the container with cable ties. The cable ties need to pass through the holes ( in the plastic sheet and container next to the supports of the compressor) and then loop them back so they go back inside the container again.\n6. fasten/ pull tightly around the supports of the compressor.", "step_imgs": ["https://cdn.instructables.com/F9Y/IHCR/JQWSWRUC/F9YIHCRJQWSWRUC.LARGE.jpg", "https://cdn.instructables.com/FJ7/CNLC/JSL3CKVB/FJ7CNLCJSL3CKVB.LARGE.jpg", "https://cdn.instructables.com/FB8/6I8K/JSL3CKYB/FB86I8KJSL3CKYB.LARGE.jpg", "https://cdn.instructables.com/FA9/LD3U/JSL3CKWU/FA9LD3UJSL3CKWU.LARGE.jpg"], "step_title": "Step 9: Fitting the Mini Compressor."}, {"step": 10, "steps_text": "I wanted to be able to see the pressure gauge so added a window above it.\n1. Draw a rectangle over the area where the pressure gauge is fitted.\n2. Drill holes in each corner and cut out the rectangle.", "step_imgs": ["https://cdn.instructables.com/F8L/ZGPU/JSL33Z6C/F8LZGPUJSL33Z6C.LARGE.jpg", "https://cdn.instructables.com/FWY/NWEC/JQWSWRMW/FWYNWECJQWSWRMW.LARGE.jpg", "https://cdn.instructables.com/FFP/KCTA/JQWSWRXL/FFPKCTAJQWSWRXL.LARGE.jpg"], "step_title": "Step 10: Adding a Window"}, {"step": 11, "steps_text": "I used a piece of 3mm plexiglass that I had lying around. The container is not very good for gluing things too and is too thin to screw things onto. Hence I decided to use small self tapping screws into the plexiglass.\n1. I cut it just larger than the hole (approx 10mm is OK).\n2. Drill a small hole in each corner of the plexiglass to suit the screws you will use. I drilled 2mm holes. I used the screws from old toys that I had dismantled.\n3. Use the plexiglass as a jig and drill corresponding holes in the container.\n4. Make a hole for the cigarette lighter. Mine is 22mm diam. I only had the cutting bit like in the photo. However, I thing is is better and safer to use a hole saw perhaps.\n5. I also wanted ti fit some LED llights to show power ON and pump ON. Hence drill 2 holes for those too. The sizes depends on the LEDS you use and the LED holder. Mine are 6mm.\n7. Finally I made a 6mm hole for the on off switch.\n8. I tried to heat the plexiglass to make it slightly curved but it did not work very well. Perhaps better to use a thinner piece that bends but then there is not enough material for the screws.\n9. Fit the plexiglass to the container.", "step_imgs": ["https://cdn.instructables.com/FXC/5STY/JSL3CLDG/FXC5STYJSL3CLDG.LARGE.jpg", "https://cdn.instructables.com/FVN/KB70/JSL3CL60/FVNKB70JSL3CL60.LARGE.jpg", "https://cdn.instructables.com/FDZ/8MQ5/JSL3CL92/FDZ8MQ5JSL3CL92.LARGE.jpg", "https://cdn.instructables.com/FYG/ELLU/JSL3CLGJ/FYGELLUJSL3CLGJ.LARGE.jpg", "https://cdn.instructables.com/FVL/I2NU/JSL3CLEZ/FVLI2NUJSL3CLEZ.LARGE.jpg", "https://cdn.instructables.com/FZH/YNKY/JSL3CLN6/FZHYNKYJSL3CLN6.LARGE.jpg", "https://cdn.instructables.com/FHP/PDO3/JSL3CLI2/FHPPDO3JSL3CLI2.LARGE.jpg"], "step_title": "Step 11: Fitting Plexiglass to the Window"}, {"step": 12, "steps_text": "Here I am going into deep water and must make reference to my favourite instructable on ATX power supplies:\nhttps://www.instructables.com/id/Lab-ATX-Powersupp... Please read this before going any further. Be very careful with low voltage because, if connected badly/wrongly the high Amps can generate heat and cause fires.\nI am not an expert on electronics so please forgive and correct me if I write something wrong.\nMy small compressor is 5W and 5A so I figured my 10A power supply should be more than enough.\nI used a cigarette lighter socket that I bought at a local electronics fair for 2,00 Euro. I chose one with a cover/cap for extra protection when not in use.\nI only used the wires going to the long 24 pin connector. So cut the 24 pin connector off. and leave the others.\n1. for the cigarette lighter socket, I used 3 (yellow) wires from the 12V power supply so as to help avoid them getting hot. I then soldered them to a piece of 1.5mm mains wire and fitted a Faston which in turn I connected to one side of an automotive type fuse holder. I fitted a 8Amp fuse. I would have preferred to avoid the piece of 1.5mm wire but (apart from soldering the three wires directly) could see no other way because I could not fit the faston to the three wires.\n2. connect a faston on each end of another piece of 1.5mm wire. Fit one end to the to the other side of the fuse holder and the other end to the positive connection on the cigarette lighter.\n3. Take 3 ground wires and connect them to the centre (ground) connection of the cigarette lighter. I used an eye type terminal.\nMake sure all connections are tight, keep wires as short as possible and use plenty of shrink tube to avoid short circuits.", "step_imgs": ["https://cdn.instructables.com/F2S/7Z7E/JSL3CK87/F2S7Z7EJSL3CK87.LARGE.jpg", "https://cdn.instructables.com/FX6/EYXY/JSL3CLOQ/FX6EYXYJSL3CLOQ.LARGE.jpg", "https://cdn.instructables.com/FHJ/K4YC/JSL3CLQ7/FHJK4YCJSL3CLQ7.LARGE.jpg"], "step_title": "Step 12: Wiring Cigarette Lighter Socket"}, {"step": 13, "steps_text": "The LEDS are optional but look nice.\nPlease check again this great instructable for details on ATX power supplies for further information:\nhttps://www.instructables.com/id/Lab-ATX-Powersupp...\nI used the purple wire (standby) on the red LED\nI used the grey wire (power good) green LED\nI used the green wire for the switch.\nFor the RED LED:\nsolder a resistor to the longer (+) side of the LED. The resistor depends on the colour and voltage:\nhttp://www.resistorguide.com/resistor-for-led/\nHowever, I used a 220 Ohm resistor for each because I had them lying around.\nSolder the purple wire to the other end of the resistor\nSolder the short leg (-ve) of the LED to the black negative wire. Use plenty of heat shrink tube over the bare wires to avoid short circuits.\nI put heat shrink tube over the resistor too.\nFor the GREEN LED:\nsolder a resistor to the longer (+) side of the LED.\nSolder the grey wire to the other end of the resistor\nSolder the short leg (-ve) of the LED to the black negative wire. Use plenty of heat shrink tube over the bare wires to avoid short circuits. Again I put heat shrink tube over the resistor too.\nFor the switch:\nI used a toggle switch but perhaps better to use a slider to avoid switching on by accident.\nSolder the green wire to one pole and a black to the other. Again use plenty of heat shrink over the bare wires.\nDouble check all connections are correct, soldered well and insulated well\nfix all the lose wires and make them as tidy as possible.\nPut heat shrink on the ends of all the other wires that were cut previously but not used.", "step_imgs": ["https://cdn.instructables.com/FW4/A5BO/JSL3CNFB/FW4A5BOJSL3CNFB.LARGE.jpg", "https://cdn.instructables.com/FCJ/VO9O/JTEN8LNW/FCJVO9OJTEN8LNW.LARGE.jpg", "https://cdn.instructables.com/FU2/RMWU/JTEN8LNY/FU2RMWUJTEN8LNY.LARGE.jpg", "https://cdn.instructables.com/F23/C94E/JTEN8LNQ/F23C94EJTEN8LNQ.LARGE.jpg"], "step_title": "Step 13: Adding Some LEDS and a Switch"}, {"step": 14, "steps_text": "Now you can test it!\nConnect to the power supply, connect the compressor to the cigarette lighter and switch ON!\nPlease note that this is device is mainly for topping up the tires and not meant for prolonged use.\nEnjoy your day out!!", "step_imgs": ["https://cdn.instructables.com/FY4/CMDM/JT4TXT9Q/FY4CMDMJT4TXT9Q.LARGE.jpg", "https://cdn.instructables.com/FSS/OQUY/JTEN8LO4/FSSOQUYJTEN8LO4.LARGE.jpg", "https://cdn.instructables.com/F35/HYBW/JSL33Z6G/F35HYBWJSL33Z6G.LARGE.jpg", "https://cdn.instructables.com/FF2/4VDG/JT4TXT9U/FF24VDGJT4TXT9U.LARGE.jpg", "https://cdn.instructables.com/FL0/C1W2/JTEN8LO9/FL0C1W2JTEN8LO9.LARGE.jpg", "https://cdn.instructables.com/FYY/EN6X/JT4TXTAJ/FYYEN6XJT4TXTAJ.LARGE.jpg"], "step_title": "Step 14: Testing"}, {"step": 15, "steps_text": "I have included some drawings but the dimensions are approximate and depend on the container used.\nThe drawings for the connections are quite basic. Let me know if there are mistakes or improvements to make.\nThanks!!", "step_imgs": [], "step_title": "Step 15: Here Are the Various Drawings"}], "channel": ""}, {"category": "", "description": "In the \"Olden Days\" professional science was still in its infancy. People who trained in science and practiced science were using every ounce of creativity and imagination at their disposal to discover the nature of the world. They were scrappy and inventive, not unlike the modern day hobbyists and makers you see here on Instructables.\nFor this \"remix\" instructable I will outline a modern replication of the experiment that produced the first color photograph ever made. As you will see, the method for making the original color photograph was itself a remix! It was made in 1861 by Scottish physicist, James Clerk Maxwell working with the photographer Thomas Sutton (see a nice historical blog post here). The image was of a tartan ribbon and based on ideas he had worked out and described in a scientific paper six years earlier, in 1855 (you can get Maxwell's original paper here).\nIn a world driven by multi-media and digital imagery, it is easy to forget that not so long ago, photography was a brand new technology. As of right now, it is less than 200 years old! The first photograph known to be taken that is still surviving today was by Joseph Nic\u00e9phore Ni\u00e9pce in 1826 or 1827. It is a photograph taken through an upstairs window, looking out over the rooftops of his estate in Le Grase, Burgundy, France. The earliest photograph known to include people was by Louis Daguerre in 1838, showing the Boulevard du Temple in Paris.\nThese early photographs were all monochromatic -- \"black and white.\" They were largely based on chemical reactions of silver nitrate, which darkens when exposed to sunlight. Such reactions are called \"photochemical.\" While the novelty of capturing life exactly as it appeared at a given moment was enchanting, there was always something missing: color.\nThis Instructable will guide you through a modern implementation of the Maxwell-Sutton method. It is not necessary by any means, but it is enjoyable process and has its own charming elements that can be launching points into your own personal explorations of the artistry and science of photography.", "title": "The First Color Photograph", "url": "https://www.instructables.com/id/The-First-Color-Photograph/", "section": "technology", "steps": [{"step": 1, "steps_text": "Maxwell's method is to exploit monochromatic photography in a subtle and clever way. The basic idea is this:\nTake a black and white photograph of a scene through a colored filter. The image will be black and white, but the only things in the image are the things that can be seen through the filter.\nTake a multitude of black and white images through different filters. The classic choices are RED, GREEN, and BLUE.\nTo reconstruct the color image, shine a RED light through the \"red\" black and white image; shine a GREEN light through the \"green\" image, and a BLUE light through the \"blue\" image.\nAlign the three projected images together on the screen or wall, and the correct color image will appear!\nIn images where the colors are well defined and separated, it is easy to imagine how this might work. Above, I show a Hubble Space Telescope image of the Helix Nebula (NGC 7293). Hubble takes images using exactly the Maxwell method, through separate color filters, with the final image being a combination of the separate images. The three black and white images are the RED, GREEN, and BLUE breakdown of the Helix Nebula. You can compare them to the color image to see how different parts of the full color image are created.", "step_imgs": ["https://cdn.instructables.com/FNV/DZKP/JTT5LGHI/FNVDZKPJTT5LGHI.LARGE.jpg", "https://cdn.instructables.com/FJW/LQQN/JTT5LGII/FJWLQQNJTT5LGII.LARGE.jpg", "https://cdn.instructables.com/F7D/FDG4/JTT5LGI6/F7DFDG4JTT5LGI6.LARGE.jpg", "https://cdn.instructables.com/FF6/4HEF/JTT5LGHU/FF64HEFJTT5LGHU.LARGE.jpg"], "step_title": "Step 1: Maxwell Color Separation Method"}, {"step": 2, "steps_text": "To complete this Instructable, you'll need:\nsome cardstock\ntape\nRed, Green, Blue transparent plastic (see below)\nSmartphone (or other camera)\nTripod\nPrintable transparency sheets\nA bright light\nThe keys to the method are the colored filters. You can try just about anything, but the overall color balance you end up with depends on the color of the filters and how dark one filter is compared to another. For accurate color representation (as opposed to artistic -- see the last step!) you want the three filters to be roughly the same in terms of how dark the world looks through them, and slightly darker is better than slightly lighter.\nGood sources of filter material might be clear gel filters used in theatre lighting, or colored PVC sheets at your local art supply store. I've used clear cellophane for gift wrapping for this Instructable.", "step_imgs": [], "step_title": "Step 2: Materials"}, {"step": 3, "steps_text": "To make photographing simpler, we'll build a \"filter slide\" that holds a colored bit of filter in front of the lens on your camera. For this step I'll assume you are using a smartphone.\nBegin by cutting a 1-1/2\" wide strip of cardstock from the long dimension of your sheet.\nFold the strip around your smart phone so it overlaps itself making a loop sleeve.\nNote where the camera is; unfold the strip and using an excacto knife cut an opening over the location of the camera.\nTape the sleeve shut into a loop, and confirm your hole sits over the camera.", "step_imgs": ["https://cdn.instructables.com/FKX/5LUN/JTT5LHY1/FKX5LUNJTT5LHY1.LARGE.jpg", "https://cdn.instructables.com/FUW/Y4Y9/JTT5LHXZ/FUWY4Y9JTT5LHXZ.LARGE.jpg", "https://cdn.instructables.com/FGG/T5W5/JTT5LHZK/FGGT5W5JTT5LHZK.LARGE.jpg", "https://cdn.instructables.com/F1J/IV7D/JTT5LHWZ/F1JIV7DJTT5LHWZ.LARGE.jpg"], "step_title": "Step 3: Color Filter Mount"}, {"step": 4, "steps_text": "To make the filter slide, take another 1-1/2\" wide strip of cardstock about 8 inches long, and fold it in half. Cut three large windows through both sides using your exacto knife.\nIn each window, pick one of your three color filters and tape a bit into the window. Be careful to not get any tape in the window, otherwise it will show up in your photographs!\nIf you need the filter material to be a bit darker, you can fold it over on itself (I had to do this with my blue cellophane). If you do this, make sure it is as flat as possible, or your photographs will not come out crisp and in focus.\nWhen the filter windows are covered, tape the edges of the cardstock together so you can slide it into the filter mount as one piece without it flopping open.\nBe careful to place the windows so you can cover the camera with the film, not the cardstock. I had to trim my first filter slide a bit because the cardstock boundary was a bit too thick the first time I cut it, and it blocked about half of the camera view!", "step_imgs": ["https://cdn.instructables.com/FCW/H8A6/JTT5LITX/FCWH8A6JTT5LITX.LARGE.jpg", "https://cdn.instructables.com/FX5/DR2K/JTT5LIST/FX5DR2KJTT5LIST.LARGE.jpg", "https://cdn.instructables.com/FLB/358Z/JTT5LISS/FLB358ZJTT5LISS.LARGE.jpg", "https://cdn.instructables.com/F6L/CKGO/JTT5LISR/F6LCKGOJTT5LISR.LARGE.jpg", "https://cdn.instructables.com/FZ5/ZDUD/JTT5LIS4/FZ5ZDUDJTT5LIS4.LARGE.jpg"], "step_title": "Step 4: Color Filter Slide"}, {"step": 5, "steps_text": "Insert the slide with the filters underneath the filter mount against the body of your smartphone. Carefully slide the filter back and forth until one of the colors shows through the window.\nIf you look at the camera view, you will see a color filtered image of the world!\nWhen you are ready for the next filter, push the slide along underneath the mount until you reach the next filter window.", "step_imgs": ["https://cdn.instructables.com/FAY/FY4K/JTT5LJ4X/FAYFY4KJTT5LJ4X.LARGE.jpg", "https://cdn.instructables.com/F2A/WILT/JTT5LJ1X/F2AWILTJTT5LJ1X.LARGE.jpg"], "step_title": "Step 5: Using the Filter Slide"}, {"step": 6, "steps_text": "The key to successful Maxwell-Sutton image composition is insuring that each of the images is taken from exactly the same vantage point and orientation. For the method to work, you are taking three identical photographs through each of the different filters, so you don't want the camera to move between shots. Since I'm doing this with my smartphone, I use a small table-top \"Gorillapod\" tripod from Joby.\nSet-up your camera with your still life well lit up -- the camera flash will be behind your colored filters and will not illuminate the scene; I recommend turning the flash OFF so it doesn't fire and glare off the inside of the filter.\nSlide your filter into the sleeve to the first color (red for me) and take the first shot -- make sure you tap to focus! Carefully slide to the next color (green for me) and take a photo, then slide to the last color (blue for me) and take a photo.\nYou may experiment with different exposure settings in your camera, to see how the resulting filtered images look.", "step_imgs": ["https://cdn.instructables.com/FB6/NVVD/JTT5LKJF/FB6NVVDJTT5LKJF.LARGE.jpg", "https://cdn.instructables.com/FBN/0DZS/JTT5LKIN/FBN0DZSJTT5LKIN.LARGE.jpg", "https://cdn.instructables.com/FJO/MYEO/JTT5LKI2/FJOMYEOJTT5LKI2.LARGE.jpg", "https://cdn.instructables.com/F9G/9VAA/JTT5LJMW/F9G9VAAJTT5LJMW.LARGE.jpg"], "step_title": "Step 6: Photography Setup"}, {"step": 7, "steps_text": "One difference between what we are doing and what Maxwell did is we are taking COLOR photographs through filters, then recombining them directly. Maxwell took BLACK AND WHITE photos through filters, then shined the pictures through the correct color filters to recombine them.\nEach of your filtered images will look somewhat like the still-life, but not exactly. In the first image above I show a colored ribbon I used (I did not have a Maxwell family tartan ribbon!), and the three printed images taken through each of my filters.\nOn a piece of transparency, print out each of the red, green, and blue images separately.\nAs noted above, it is not perfect as the filters themselves are not perfectly balanced against one another; experimenting with different filters can make the color return more true to the original. As we will see below, all of the color information is in the filtered images, and software processing can make up for color imbalances.", "step_imgs": ["https://cdn.instructables.com/FBX/KPFW/JTT5LKQB/FBXKPFWJTT5LKQB.LARGE.jpg", "https://cdn.instructables.com/FCK/TEZL/JTT5LKU3/FCKTEZLJTT5LKU3.LARGE.jpg", "https://cdn.instructables.com/FAA/X1L4/JTT5LKTK/FAAX1L4JTT5LKTK.LARGE.jpg", "https://cdn.instructables.com/F7J/742D/JTT5LKTL/F7J742DJTT5LKTL.LARGE.jpg", "https://cdn.instructables.com/FL2/Q147/JTT5LKUL/FL2Q147JTT5LKUL.LARGE.jpg"], "step_title": "Step 7: Printing the Modern Maxwell Ribbon"}, {"step": 8, "steps_text": "Stack the three images on top of each other, and carefully align them. You'll notice in my ribbon, I had a small paper clip holding the ribbon in its shape, which was very useful for alignments!\nHold the stack up to a bright light and you will see the recombined color image!\nUsing random color filter material, it is hard to get a perfectly accurate color image out. It is complex combination of the color filters you use, your printer's interpretation of those colors, and the quality of the print. But you can clearly see the color pattern and the trends in the colors. In this particular case, I think the blue needed to be even darker.\nThe quality of your lightsource also matters. A light-table would be ideal, as would sunlight. The day I was doing this project was cloudy, but if I get a sunny day someday soon, I'll add a picture viewing with bright sunlight.", "step_imgs": ["https://cdn.instructables.com/F8D/GQM0/JTT5MABV/F8DGQM0JTT5MABV.LARGE.jpg", "https://cdn.instructables.com/FSM/K9MB/JTT5LLF7/FSMK9MBJTT5LLF7.LARGE.jpg"], "step_title": "Step 8: Viewing the Modern Maxwell Ribbon"}, {"step": 9, "steps_text": "Modern printing methods use a variant of the Maxwell technique to generate color on the printed page or screen, breaking images up into color channels (like RGB or CMYK) that when mixed give the full color images you are used to seeing; this is why your color printer has different color ink cartridges. In the first image above, I've put a 20x magnifying loupe up against a white space on my monitor, and you can see the individual pixels are lit up in combination of Red, Blue, and Green!\nIn software like Photoshop, the color separation information is stored in \"channels.\" We can have the software combine our color filter images into a full color image using the channels.\nWhich color channels you have in Photoshop depends on the image Mode you are using. In my version of Photoshop (CS6) you can find this under the menu Image > Mode, as shown in the second image above (we're using RGB for this Instructable).\nSelecting under the menu Windows > Channels will bring up the separated channels. In the third image above you can see I've opened a full color RGB image. The channels shows the combined RGB result, and then separate R layer, G layer, and B layer. They act just like layers do in any document -- you can turn individual ones on and off, or change them. This is what we will exploit in the following steps.\nIf you don't have access to Photoshop, there are also good openSource image manipulation software packages, such as GIMP (Gnu Image Manipulation Program) for all platforms.", "step_imgs": ["https://cdn.instructables.com/FJB/9TRY/JTT5MDO8/FJB9TRYJTT5MDO8.LARGE.jpg", "https://cdn.instructables.com/FEX/X8N0/JTT5LM32/FEXX8N0JTT5LM32.LARGE.jpg", "https://cdn.instructables.com/FAD/0KRF/JTT5LM2K/FAD0KRFJTT5LM2K.LARGE.jpg"], "step_title": "Step 9: Using Software for Recombination"}, {"step": 10, "steps_text": "Open up all three of your filtered images in Photoshop, and note down the dimensions. Open up a new document with the same dimensions as each of the filtered images.\nGo to the red image. Select the entire image (\"Select All\"), and copy it. Switch to the new image file, and view the channels described in the last step.\nNow we're going to copy the individual color filtered images into the correct color channel:\nSelect the RED channel, and paste. You'll see a greyscale version of the red image in the red channel layer.\nRepeat the process by copying the blue image file, and pasting it into the blue channel of the new image.\nLastly, copy the green image file and paste it into the green channel of the new image.\nYou can see the result in the last image above -- nothing has been done to rebalance this, but it looks very good! There is an excess of green, which you can see in the white background -- this is because the green of my clear cellophane is not what Photoshop thinks the basic green filter should be. Never-the-less, the color response you see is excellent -- your screen display, on a pixel by pixel basis, is much better and showing good combined color response than overlaying the fine grains of ink or laser toner on printed sheets!", "step_imgs": ["https://cdn.instructables.com/FH2/KRFI/JTT5LKQO/FH2KRFIJTT5LKQO.LARGE.jpg", "https://cdn.instructables.com/FXQ/FP1Z/JTT5LKQZ/FXQFP1ZJTT5LKQZ.LARGE.jpg", "https://cdn.instructables.com/FLV/FWLA/JTT5LKRR/FLVFWLAJTT5LKRR.LARGE.jpg", "https://cdn.instructables.com/FR7/0IFC/JTT5LMO1/FR70IFCJTT5LMO1.LARGE.jpg"], "step_title": "Step 10: Software and the Modern Maxwell Ribbon"}, {"step": 11, "steps_text": "As we noted above, software is good at rebalancing color, and can make up for the relative strength in the color of our individual filters. Photoshop has an auto-balancing feature that does its best to rebalance how much each of the color channels influences the overall image combination. Above, I've shown a rebalanced color combination, and the original full color ribbon for comparison. With the balancing, you can see the green background is closer to the truer white it is in real life.", "step_imgs": ["https://cdn.instructables.com/FE1/DLEH/JTT5LMYM/FE1DLEHJTT5LMYM.LARGE.jpg", "https://cdn.instructables.com/FGJ/BHKK/JTT5LMYY/FGJBHKKJTT5LMYY.LARGE.jpg"], "step_title": "Step 11: Software Color Balancing"}, {"step": 12, "steps_text": "I'm experimenting with this technique, but would like to settle on a good set of filters and good printing process so I can print a piece to hang in my house as art. The need for illumination is making me think about a shadow box with LED strips and a light diffuser behind the printed transparency stack. It will make for good conversation!\nBeyond that, there is a well developed science around color which you can learn about and exploit, but the ability to play around creatively can lead to unexpected and interesting artistic results. For instance, consider the color balanced collection of Rubik's style puzzles in the first image above, created using the process outlined in this Instructable. In the second and third images I took the red, green, and blue images and pasted them in different channels -- this makes strikingly different, and clearly not correctly colored images! In the last image, I took the red and blue channel and left them alone. For the green channel, I did a \"color inversion,\" replacing the green with it's color \"opposite\" (a kind of pink palette; Photoshop can do this automatically). The result is a very alien glowy green image! Awesome!\nI hope you enjoyed this remix of a photographic history, and experiment some on your own with creating your own images of the world!", "step_imgs": ["https://cdn.instructables.com/FJP/7RJM/JTT5M368/FJP7RJMJTT5M368.LARGE.jpg", "https://cdn.instructables.com/FF3/2IX1/JTT5M369/FF32IX1JTT5M369.LARGE.jpg", "https://cdn.instructables.com/FOV/4LHA/JTT5M36A/FOV4LHAJTT5M36A.LARGE.jpg", "https://cdn.instructables.com/F63/2CG6/JTT5M36H/F632CG6JTT5M36H.LARGE.jpg"], "step_title": "Step 12: Last Thoughts & Artistic Games"}], "channel": ""}, {"category": "", "description": "This dancing ballerina was created for my granddaughter.\nThe idea was so create a ballerina that rotated slowly while an RGB LED ring flashed and a waltz was played.\nI wish to thank Maitan for his Ballet Dancer which I modified ever so slightly for this project.\nThe video animation attached gives an idea (less the LEDs) for what I was trying to achieve.\nParts\nATtiny85 (initially I wanted to use a ATtiny13 but it could not handle the music)\nATtiny socket adaptor\nPiezo Passive Buzzer\nTurbine Worm Gear Motor (5-12V, 5-12rpm)\nRGB LED Ring (12bit WS2812)\nDC Socket\nRDP30N06LE Mosfet\n1N4001 Diode\nSelf-locking/latching push button\nPCB Stripboard\nTwo self-tapping screws\nResistor: 300-500\u03a9 & 10k\u03a9\nCapacitor: 1000 \u00b5F, 6.3V or higher\nWire\nHeat shrink tubing\nEpoxy Glue\nSuper Glue\n5V power supply\nSoftware\nBlender\nFreeCAD\nFrtizing\nMusescore\nArduino IDE\nTools\n3D Printer\nSoldering Iron & Solder\nWire strippers\nATtiny shield for Arduino\nDrill\nMultimeter\nHacksaw\nThis project cost me under $10 (USD) to build.", "title": "Dancing Ballerina - Light, Music, Action", "url": "https://www.instructables.com/id/Dancing-Ballerina-Light-Music-Action/", "section": "technology", "steps": [{"step": 1, "steps_text": "I include this merely to detail some of my learning. The original design was as shown in the photos i.e. the motor was to be mounted from below with the LED holder being glued into position. This however did not give a good finish with respect to how the LED holder lay and also did not allow enough space for me to secure the circuitry.\nAlso initially the part for securing the ballerina to the turning shaft was all one piece but unfortunately the structure was not strong enough and the model broke at the ankle as well as the point of the attaching section. I was able to glue the foot back on but try as I may I could not reattach the bottom part.\nI could have redesigned and reprinted the entire ballerina but in the end decided on different approach which I feel worked out even better in the end.", "step_imgs": ["https://cdn.instructables.com/FZ4/G9WY/JPX4C7BQ/FZ4G9WYJPX4C7BQ.LARGE.jpg", "https://cdn.instructables.com/F27/RTL3/JPX4C7BM/F27RTL3JPX4C7BM.LARGE.jpg", "https://cdn.instructables.com/FCO/O8HG/JPX4C7BJ/FCOO8HGJPX4C7BJ.LARGE.jpg"], "step_title": "Step 1: Original Concept"}, {"step": 2, "steps_text": "Using Blender I edited Maitan's dancer, removing the base and adding the small pedestal that would be used to attach the motor. Here I found a design flaw (or maybe it was as a result of my limited knowledge in the area of 3D printing). As you will see from my photos, while cleaning up the printed dancer both the foot and pedestal broke off. Using epoxy I managed to successfully stick the foot back but I could not re-secure the pedestal part. I therefore printed a separate cylinder that would attach tightly to the motor's shaft and into which the ballerinas foot could be glued. Before fixing the cylinder to the shaft, a dome was printed and placed over and around the shaft to finish it all off.\nThe Base, Ballerina and connecting dome parts where done in contrasting colours which helped add to the overall effect.\nInitially the motor mount was round but I then discovered that once the switches where attached to the main cone that this design did not give me enough room to insert the motor mount into position. I therefore made it square by slicing the round edges off (see comments on the pictures to get a better idea as to what I mean).\nExcept for the ballerina, FreeCAD was used to create the 3D printed parts (the FreeCAD files, together with the exported SLT file, are attached).\nNote: The Ballerina is not the correct size therefore it needs to be scaled in the 3D printing software so that the span between the tips of her hands is approximately 140mm wide.", "step_imgs": ["https://cdn.instructables.com/F9U/44EX/JTWS5H0U/F9U44EXJTWS5H0U.LARGE.jpg", "https://cdn.instructables.com/F18/MIYU/JTWS5H5F/F18MIYUJTWS5H5F.LARGE.jpg", "https://cdn.instructables.com/FOL/D3OY/JTWS5H75/FOLD3OYJTWS5H75.LARGE.jpg", "https://cdn.instructables.com/FUL/SMRT/JTWS5H5Z/FULSMRTJTWS5H5Z.LARGE.jpg"], "step_title": "Step 2: Printing the Parts"}, {"step": 3, "steps_text": "Disclaimer: I am no musician and so do not know the names of the notes or part of music scores hence please bear with my poor description below.\nLoad the MIDI file into MuseScore (or a program that will allow you to edit MIDI files) and then edit the music as follows:\nWhenever there are notes in the same column, keep only the top note, remove all notes beneath it.\nRemove the bottom set of notes. In this way you would have reduced the music to single notes.\nExport the new music score to a new MIDI file.\nThis file will now needed to be converted to the appropriate Arduino code. This can be achieved using: https://extramaster.net/tools/midiToArduino/\nThe resulting code can then incorporated into your final code.\nNOTE\nI have attached both audio files so that you can compare them (in MuseScore). This will hopefully help explain my above steps better.\nWaltz_No._2_by_Shostakovich.mid (original file)\nWaltz_No._2_by_Shostakovich-editted.mid\nBecause the ATtiny85 has only limitted memory, I had to also truncate the music so that all my desired code would fit on the chip.", "step_imgs": [], "step_title": "Step 3: Preparing the Music"}, {"step": 4, "steps_text": "Using an Arduino Uno and a ATtiny shield, upload the attached code to your ATtiny13.\nThe library that I used for the ATtiny85 was http://drazzy.com/package_drazzy.com_index.json. Add this to you additional boards (under file, preferences) and then install ATTinyCore by Spence Konde.\nThe basic points are as follows:\nThe LEDs were driven from pin 3.\nThe piezo speaker was driven from pin 1.\nThe motor was driven from pin 0 and set up this way so that I could slow it down to the desired speed. I used the following tutorial to learn how to use a mosfet to achieve this.\nOnce done the chip can be inserted into the ATtiny socket on the stripboard.\nThe ATtiny85 pinout can be found here.", "step_imgs": [], "step_title": "Step 4: Uploading the Code"}, {"step": 5, "steps_text": "Solder your wires into the LED ring. I used black wire so that they would not be noticeable (make sure the wires are long enough to run under the LED holder, down the inside of the Cone and then around the inside of the bottom of the base). Because they were all the same colour, I wrapped the ends with different coloured insulation tape so that I would know which points they connected to. Thread the wires through this hole and then glue the LED ring in place using epoxy.\nTo date this is the most complex circuit that I have put together and so I am sure that there is probably a much better and tidier way to have done this. I cut two pieces of stripboard as per the diagram. One to hold the ATtiny85 and one the mosfet and associated components.\nThe steps that I followed were as below:\nAttach the wires to the LED ring\nUsing epoxy glue, glue the LED wring into the LED holder.\nSecure the motor by screwing it into the holder\nGlue the piezo speaker to the base-plate (this, including all other glued fixtures where done using superglue)\nInsert the switches and power socket into the main cone and solder connecting wires to them. The contact on the switches need to be bent in order to make room for the motor mount to be inserted (take care when doing this as I landed up breaking a number of switches when doing this). It is very important to check that you have wired up your power socket correctly. It is therefore worth plugging your power supply into the plug and then using a multimeter to check that you have the polarity correct before connecting this to your circuit board.\nAssemble the ATtiny85 board\nAssemble the Mosfet board\nGlue the two stripboards to the baseplate\nBefore the motor and baseplate can be inserted into position, the ATtiny85 needs to be programmed (see the previous step). Once done the following steps can be completed:\nInsert the programmed ATtiny85\nInsert the motor and baseplate. This is a very tight fit but can be achieved without breaking anything if one takes care.\nUsing super glue, the base is then glued in place\nBefore attaching the finishing dome on top of the LED holder, us a hacksaw to cut the motor's shaft down to the right size so that the cylinder used to attach the ballerina will be sitting at the correct height i.e. more or less level with the top of the finishing dome.\nGlue the the dome in place\nGlue the ballerinas foot into the connecting cylinder\nPush the connecting cylinder into place on the motor's shaft.\nLast pointers:\nWhen needed, a small drill bit can be used to break the required sections on the stripboards. Simply hold the bit between your figures, rotating it so that the copper is removed from the board\nWhenever necessary, heat shrink tubing was used to protect connections from accidental shorting", "step_imgs": ["https://cdn.instructables.com/FWC/SP9F/JTWS5H2D/FWCSP9FJTWS5H2D.LARGE.jpg", "https://cdn.instructables.com/FN3/5SRS/JTWS5H3E/FN35SRSJTWS5H3E.LARGE.jpg", "https://cdn.instructables.com/FWY/CD5I/JTWS5H2R/FWYCD5IJTWS5H2R.LARGE.jpg", "https://cdn.instructables.com/FYV/CET8/JTWS5H6J/FYVCET8JTWS5H6J.LARGE.jpg", "https://cdn.instructables.com/FUO/OHGU/JTWS5H16/FUOOHGUJTWS5H16.LARGE.jpg", "https://cdn.instructables.com/FT6/VHAM/JTWS5H1I/FT6VHAMJTWS5H1I.LARGE.jpg", "https://cdn.instructables.com/F65/LH7I/JTWS5H49/F65LH7IJTWS5H49.LARGE.jpg", "https://cdn.instructables.com/F29/7M76/JTWS5H4T/F297M76JTWS5H4T.LARGE.jpg"], "step_title": "Step 5: Assembling the Project"}, {"step": 6, "steps_text": "As a prototype, I am very happy with the final product. This said, if I were to do this again, I would make the following changes:\nDo better FreeCAD drawings (for me, CAD is still a very real work in progress and I still have much to learn).\nLook at a way to better hide the wiring and components. While not obvious it is possible to look into the top of the cone and see some of the wires, switches and motor screws (which detracts from the overall effect). A quick fix would have been to spray-paint the internal parts black before final assembly. A better solution would have been to spend more time on the internal layout.\nI used the FastLED library together with part of the DemoReel example to achieve the LED effect. I am sure that there are more efficient ways to have achieved my final result but in this instance this worked for me. If I were to do this again I would probably spend more time trying to improve this section.\nI can't decide if the ballerina is still moving too fast. I am inclined to want to slow it down still a little further but alas it is too hard to get to the ATtiny85 to reprogram it.\nThe switch used to turn the sound off is very close to the power socket. Its position makes it hard to turn it on again while the power is plugged in. This switch should probably be changed to one that is similar to the on/off button used in this project.\nI should have changed the startup sequence so that the lights start-up, then the music and then the ballerina starts moving. Right now the the movement starts first.\nLast but not least I wish to thank the Unleash Space (and their amazing team) for opening the world of 3D printers, laser cutters, electronics etc to me and setting my creative juices abuzz with endless possibilities (to date virtually all of my projects are as a result of me being able to work in this space). I also wish to thank Instructables for making it possible for me to share my journey into the amazing Makerspace world.", "step_imgs": [], "step_title": "Step 6: Final Notes"}], "channel": ""}, {"category": "", "description": "What is a picoballoon and why would I want to build it?! I hear you ask. Let me explain. You all probably know what a HAB (High Altitude Balloon) is. It's a bunch of weird electronics stuff connected to a balloon. There are soooo many tutorials regarding HABs here on Instructables.\nBUT, and that's a very big BUT what they don't tell you most times in the tutorial is the cost of the filling gas. Now, you can build a decent HAB tracker under 50\u20ac, but if it weighs 200g (which is a pretty optimistic guess with the batteries, cameras, etc.) the helium to fill the balloon can cost you 200\u20ac or more, which is just too much for many makers like me.\nSo, as you can guess, picoballoons solve this problem by just not being bulky and heavy. Picoballoon is just a word for a light HAB. Light, what do I mean by light? In general, picoballoons are lighter than 20g. Now, just imagine that a processor, transmitter, a PCB, GPS, antennas, a solar panel and also a battery with a mass same as a disposable coffee cup or a spoon. Isn't that just insane?\nAnother reason (apart from the cost) why you would want to build this is its range and endurance. Classic HAB can fly for up to 4 hours and travel for up to 200km. A Picoballoon on the other hand, can fly for up to a couple of months and travel for up to tens of thousands of kilometres. One Polish guy got his picoballoon to fly around the globe multiple times. This of course also means that you will never see your Picoballoon again after launching it. That's why you want to transmitt all the data needed and of course keep the costs as low as possible.\nNote: This project is a collaboration with MatejHantabal. Be sure to check out his profile too.\nWARNING: This is a hard-to-do advanced level but also very fun project. Everything from PCB design to SMD to soldering will be explained here. That said, let's get to work.\nUPDATE: We had to remove the GPS module last minute because of its big power consumption. It probably can be fixed but we didn't have the time for that. I'll leave it in the instructable but beware that it's untested. You can still get location from TTN metadata so you shouldn't worry about that.", "title": "How to Make a Picoballoon", "url": "https://www.instructables.com/id/How-to-Make-a-Picoballoon/", "section": "technology", "steps": [{"step": 1, "steps_text": "So, when building a device like this, there are many variations and choices but every tracker needs a transmitter and a power supply. Most of the trackers will likely include these components:\n- a solar panel\n- a battery (lipo or supercapacitor)\n- a processor/microcontroller\n- a GPS module\n- a sensor/s (temperature, humidity, pressure, UV, solar radiation...)\n- a transmitter (433MHz, LoRa, WSPR, APRS, LoRaWAN, Iridium)\nAs you can see, there are many sensors and transmitters that you can use. What sensors you use is up to you. It doesn't really matter but most common are the sensors of temperature and pressure. Selecting a transmitter is much more difficult though. Every technology has some pros and cons. I won't break it down here because that'd be a very long discussion. What's important is that I chose LoRaWAN and I think that it's the best (because I didn't have a chance to test the others yet). I know that LoRaWAN has probably the best coverage though. You're welcome to correct me in the comments.", "step_imgs": ["https://cdn.instructables.com/FLQ/FH79/JSUOVQT0/FLQFH79JSUOVQT0.LARGE.jpg", "https://cdn.instructables.com/F3U/5TGP/JSUOVQTA/F3U5TGPJSUOVQTA.LARGE.jpg"], "step_title": "Step 1: The Principle"}, {"step": 2, "steps_text": "So, you'll need these things for this project:\nAdafruit Feather 32u4 RFM95\nUblox MAX M8Q (We didn't use this at the end)\nBME280 temperature/humidity/pressure sensor\n2xSupercapacitor 4.7F 2.7V\nSolar panel with output 5V\nCustom PCBs\nIf are launching by yourself, you also need this:\nAt least 0.1m3 of helium (search: \"helium tank for 15 balloons\") buyed locally\nQualatex 36\" self-sealing foil balloon\nEstimated project cost: 80\u20ac (only the tracker) / 100\u20ac (including balloon and helium)", "step_imgs": ["https://cdn.instructables.com/FH6/GNDL/JSUP0EYH/FH6GNDLJSUP0EYH.LARGE.jpg"], "step_title": "Step 2: Needed Parts"}, {"step": 3, "steps_text": "These tools could come in handy:\nwire stripper\nsoldering iron\nSMD soldering iron\npliers\nscrewdrivers\nglue gun\nmultimeter\nmicroscope\nhot air gun\nYou'll also need soldering paste.", "step_imgs": ["https://cdn.instructables.com/FUV/HT8F/J2UPFUP5/FUVHT8FJ2UPFUP5.LARGE.jpg"], "step_title": "Step 3: Recommended Tools"}, {"step": 4, "steps_text": "We had a hard time selecting the right microcontroller for the balloon. The Adafruit Feather turned out the best for the job. It fits all the required criteria:\n1) It has all the necessary pins: SDA/SCL, RX/TX, digital, analog\n2) It has the RFM95 LoRa transmitter.\n3) It's lightweight. It's mass is only 5.5g.\n4) It has very low power consumption while in sleep mode (only 30uA).\nBecause of this, we think that the Adafruit Feather is the best microcontroller for the job.", "step_imgs": ["https://cdn.instructables.com/FAB/MHLX/JTENA9C4/FABMHLXJTENA9C4.LARGE.jpg"], "step_title": "Step 4: Adafruit Feather 32U4"}, {"step": 5, "steps_text": "I'm truly sorry for what I'm going to tell you. We're going to need to make a custom PCB. It's going to be hard and frustrating, but it's necessary, so let's get started. Also, to understand the following text properly, you should read this awesome PCB design class by Instructables.\nSo, at first you will need to make a schematic. I made both the schematic and the board in EAGLE PCB design software by Autodesk. It's free, so download it!\nIt was my first time designing a PCB and I can tell you that it's all about getting hang of the Eagle interface. I designed my first board in 6 hours, but my second board took me less than an hour. Here is the result. A pretty nice schematic and a board I would say.\nWhen you have the board file ready, you need to create the gerber files and send them to the manufacturer. I ordered my boards from jlcpcb.com but you can choose any other manufacturer you like. I set the PCB thickness to 0.8mm instead of the standard 1.6mm because the board needs to be light. You can see my settings for JLC PCB in the screenshot.\nIf you don't want to download Eagle, you can just download \"Ferdinand 1.0.zip\" and upload it to JLC PCB.\nWhen you order the PCBs, just sit down comfortably in your chair and wait two weeks for them to arrive. Then we can continue.\nNote: You can notice that the schematic is a bit different from the actual board. That's because I noticed that the bare BME280 IC is too hard to solder so I changed the schematic for a breakout.", "step_imgs": ["https://cdn.instructables.com/F97/E3QJ/JTENA7DN/F97E3QJJTENA7DN.LARGE.jpg", "https://cdn.instructables.com/FF3/MQUB/JTENA7A0/FF3MQUBJTENA7A0.LARGE.jpg", "https://cdn.instructables.com/FM6/QAUN/JSUP0FN0/FM6QAUNJSUP0FN0.LARGE.jpg", "https://cdn.instructables.com/FHY/BY5N/JSUP0FN1/FHYBY5NJSUP0FN1.LARGE.jpg", "https://cdn.instructables.com/F8D/2XGP/JTON2U0M/F8D2XGPJTON2U0M.LARGE.jpg"], "step_title": "Step 5: PCB Design and Manufacturing"}, {"step": 6, "steps_text": "Another sad announcment: SMD soldering is not easy. Now really, it's fricking hard. May the lord be with you. But this tutorial should help. You can solder either using a soldering iron and a solder wick, or a soldering paste and a hot air gun. Neither of these methods was convenient enough for me. But you should get it done within an hour.\nPlace the components either according to the silkscreen on the PCB or according to the schematic.", "step_imgs": ["https://cdn.instructables.com/F64/CTUL/JTEN9RIV/F64CTULJTEN9RIV.LARGE.jpg", "https://cdn.instructables.com/FYT/MV5H/JTEN9RHM/FYTMV5HJTEN9RHM.LARGE.jpg", "https://cdn.instructables.com/F4M/KJS9/JTEN9RNW/F4MKJS9JTEN9RNW.LARGE.jpg", "https://cdn.instructables.com/FNN/K3TJ/JTENANMZ/FNNK3TJJTENANMZ.LARGE.jpg"], "step_title": "Step 6: SMD Soldering"}, {"step": 7, "steps_text": "After the SMD soldering is done, the rest of the solder job is basically a piece of cake. Almost. You've probably soldered before and I hope you'll want to solder again. You just need to solder the Adafruit Feather, antenas, the solar panel and the supercapacitors. Pretty straightforward I would say.\nPlace the components either according to the silkscreen on the PCB or according to the schematic.", "step_imgs": ["https://cdn.instructables.com/FQ8/1JCR/JTEN9WLH/FQ81JCRJTEN9WLH.LARGE.jpg", "https://cdn.instructables.com/F6Y/CUBN/JTEN9WRI/F6YCUBNJTEN9WRI.LARGE.jpg", "https://cdn.instructables.com/F0W/1GZG/JTEN9WPH/F0W1GZGJTEN9WPH.LARGE.jpg"], "step_title": "Step 7: Soldering"}, {"step": 8, "steps_text": "This is how the complete tracker should look. Weird. Nice. Interesting. Those are the words that come to my mind right away. Now you just need to flash the code and test if it's working.", "step_imgs": ["https://cdn.instructables.com/FEN/GJNB/JTENA1I7/FENGJNBJTENA1I7.LARGE.jpg", "https://cdn.instructables.com/FUJ/7S0A/JTENA0PA/FUJ7S0AJTENA0PA.LARGE.jpg", "https://cdn.instructables.com/F1O/DQCM/JTENA0VI/F1ODQCMJTENA0VI.LARGE.jpg", "https://cdn.instructables.com/FID/R2OT/JTENA0I2/FIDR2OTJTENA0I2.LARGE.jpg"], "step_title": "Step 8: Complete Tracker"}, {"step": 9, "steps_text": "The Things Network is a global city centered community LoRaWAN network. With more than 6887 gateways (receivers) up and running it's the biggest global IoT network in the world. It uses the LoRa (Long Range) communication protocol which is generaly at frequencies 868 (Europe, Russia) or at 915MHz (USA, India). It's most widely used by IoT devices sending short messages in cities. You can only send up to 51 bytes, but you can easily get a range from 2km to 15km. That is ideal for simple sensors or another IoT devices. And best of all, it's free.\nNow, 2-15 certainly isn't enough, but if you get to higher ground, you should have a better connection. And our balloon will be very high. At 10km above sealevel, we should get a connection from 100km. A friend launched a HAB with LoRa 31km up in the air and he got a ping 450km away. So, that's pretty reasonable.\nSetting up the TTN should be easy. You just need to create an account with your email and then you need to register the device. At first, you have to create an application. An application is the whole project homepage. From here you can change the decoder code, view the incoming data and add/remove devices. Just pick a name and you're ready to go. After that is done, you'll have to register a device in the application. You need to input the MAC adress of the Adafruit Feather (with the Feather in the packaging). Then you should set the activation method to ABP and you should disable frame counter checks. Your device should now be registered in the application. Copy the Device Adress, the Network Session Key and the App Session key. You'll need them in the next step.\nFor a more wholesome explanation, visit this tutorial.", "step_imgs": ["https://cdn.instructables.com/FGC/JOHE/JTON2Z2N/FGCJOHEJTON2Z2N.LARGE.jpg"], "step_title": "Step 9: TTN Setup"}, {"step": 10, "steps_text": "The Adafruit Feather 32U4 has an ATmega32U4 AVR processor. That means that it doesn't have a separate chip for USB communication (as Arduino UNO), the chip is included in the processor. That means that uploading to Adafruit Feather can be a bit harder compared to a typical Arduino board, but it works with Arduino IDE so if you follow this tutorial it should be fine.\nAfter you have setup the Arduino IDE and sucessfully uploaded the \"blink\" sketch you can move onto the actual code. Download \"LoRa_Test.ino\". Change the Device Adress, the Network Session Key and the App Session key accordingly. Upload the sketch. Go outside. Point the antenna to the city centre or in the direction of the nearest gateway. You should now see data popping up on the TTN console. If not, comment below. I don't want to put everything that could've happened here, I don't know if the Instructables server could handle such ammount of text.\nMoving on. If the previous sketch works, you can download \"Ferdinand_1.0.ino\" and change the things you were supposed to change in the previous sketch. Now test it again.\nIf you're getting some random HEX data on the TTN console, don't worry, it's supposed to do that. All the values are encoded in HEX. You're going to need a different decoder code. Download \"decoder.txt\". Copy it's contents. Now go to TTN console. Go to your application/payload formats/decoder. Now remove the original decoder code and paste in yours. You should now see all the readings there.", "step_imgs": ["https://cdn.instructables.com/FAT/7JRB/JTENACJZ/FAT7JRBJTENACJZ.LARGE.jpg"], "step_title": "Step 10: Coding"}, {"step": 11, "steps_text": "Now this should be the longest part of the project. Testing. Testing in all kinds of conditions. In extreme heat, stress and with a strong light (or outside on the sun) to mimick the conditions up there. This should take at least a week so there will be no surprises in terms of the tracker behavior. But that is an ideal world and we didn't have that time because the tracker was built for a competition. We did some last minute changes (literally like 40 minutes before launch) so we didn't know what to expect. That is noot good. But you know, we still won the competition.\nYou'll probably need to do this part outside because the sun isn't shining inside and because the LoRa won't have the best reception in your office.", "step_imgs": ["https://cdn.instructables.com/F06/PSER/JTENANSM/F06PSERJTENANSM.LARGE.jpg", "https://cdn.instructables.com/FOJ/MAQB/JTENANSP/FOJMAQBJTENANSP.LARGE.jpg", "https://cdn.instructables.com/FII/NCDK/JTENANTQ/FIINCDKJTENANTQ.LARGE.jpg", "https://cdn.instructables.com/F0X/ERTJ/JTENANTR/F0XERTJJTENANTR.LARGE.jpg"], "step_title": "Step 11: Testing"}, {"step": 12, "steps_text": "Picoballoons are very sensitive. You can't just fill them with helium and launch them. They really don't like that. Let me explain. If the buoyant force is too low the balloon will not rise up (obviously). BUT, and this is the catch, if the buoyant force is too high, the balloon will fly too high, the forces on the balloon will be too big and it will pop and fall on the ground. That is the main reason why you really want to do these calculations.\nIf you know physics a bit, you shouldn't have a problem understanding the formulas above. There are some variables that you need to input into the formula. This includes: filling gas constant, thermodynamic temperature, pressure, mass of the probe and mass of the balloon. If you follow this tutorial and use the same balloon (Qualatex microfoil 36\") and the same filling gas (helium) the only thing that will actually differ is the mass of the probe.\nThese formulas should then give you: the volume of helium needed to fill up the balloon, the speed at which the balloon rises, the altitude at which the balloon flies and also the free lift weight. These are all very useful values. The rising speed is important so the balloon doesn't hit obstacles because it's too slow and it's really nice to know how high will the balloon fly. But the most important of them is probably the free lift. The free lift is required when you will be filling the balloon in step 14.\nThanks to TomasTT7 for help with the formulas. Check out his blog here.", "step_imgs": ["https://cdn.instructables.com/F1K/0H9X/JTIYHXPP/F1K0H9XJTIYHXPP.LARGE.jpg", "https://cdn.instructables.com/FKB/N0MS/JTON2YWB/FKBN0MSJTON2YWB.LARGE.jpg"], "step_title": "Step 12: Some Funky Formulas"}, {"step": 13, "steps_text": "So, your tracker works. That piece of shit you've worked on for two months actually works! Congratulations.\nSo let's review what risks your probe child can encounter up in the air:\n1) There will not be enough sunlight hitting the solar panel. The supercapacitors will drain. The probe will stop working.\n2) The probe will get out of range and no data will be received.\n3) Strong wind gusts will destroy the probe.\n4) The probe will pass through a storm during ascent and rain will short the circuit.\n5) An ice coating will form on the solar panel. The supercapacitors will drain. The probe will stop working.\n6) Part of the probe will break under mechanical stress.\n7) Part of the probe will break under extreme heat and pressure conditions.\n8) An electrostatic charge will form between the balloon and air forming a spark, which will damage the probe.\n9) The probe will get hit by lightning.\n10) The probe will get hit by a plane.\n11) The probe will be get hit by a bird.\n12) Aliens will hijack your probe. Can happen especially if the balloon will be above area 51.", "step_imgs": [], "step_title": "Step 13: Risks"}, {"step": 14, "steps_text": "So, that's it. It's the D-day and you're gonna launch your beloved picoballoon. It's always good to know the terrain and all possible obstacles. Also you must monitor the weather (mainly the wind speed and direction) constantly. That way, you minimize the chances of your 100\u20ac worth of equipment and 2 months of your time hitting into a tree or into a wall. That'd be sad.\nInsert a pipe in the balloon. Tie the balloon to something heavy with nylon. Put the heavy thing on a scale. Reset the scale. Secure the other end of the pipe on your helium tank. Start slowly opening the valve. You should now see negative numbers on the scale. Now is the time to use the free lift value you calculated in step 12. Shut off the valve when the negative number reaches the mass of the balloon + free lift. In my case it was 15g + 2.4g so I shut off the valve at exactly -17.4g on the scale. Remove the pipe. The balloon is self-sealing, it should seal automatically. Untie the heavy object and replace it with the probe. You're now ready to launch.\nJust watch the video for all the details.", "step_imgs": [], "step_title": "Step 14: Launch!"}, {"step": 15, "steps_text": "Ohh, I remember the feeling we had after the launch. The stress, the frustration, a lot of hormones. Will it work? Will our work be worthless? Did we just spend so much money on something that doesn't work? These are the kind of questions we were asking ourselves after the launch.\nLuckily, the probe responded about 20 minutes after the launch. And then we received a packet every 10 minutes. We lost contact with the probe at 17:51:09 GMT. It could have been better, but it's still fine.", "step_imgs": ["https://cdn.instructables.com/FC3/N1TO/JTENACE7/FC3N1TOJTENACE7.LARGE.jpg"], "step_title": "Step 15: Receiving the Data"}, {"step": 16, "steps_text": "This was one of our most difficult projects up to date. Not everything was perfect but that's OK, it's always like that. It was still very successful. The tracker worked flawlessly. It could've done that for a lot longer but that doesn't matter. And, we ended up second in the Picoballoon competition. Now you might say that being second in a contest with 17 people is not such a success BUT keep in mind that this an adult engineering/construction contest. We're 14 years old. The ones we were competing with were adults with engineering and possibly even aerospace background and with much more experience. So yeah, overall, I would say that it was a big success. We got 200\u20ac, which was approximately double of our expenses.\nI'm certainly going to build a version 2.0. It's going to be much better, with smaller components (barebone processor, RFM95) and it's going to be more reliable so stay tuned for the next instructable.\nOur main goal now is to win the Epilog X contest. Fellow makers, if you liked this instructable, please consider voting for it. It would really help us. Thank you soooooo much!", "step_imgs": [], "step_title": "Step 16: Further Plans"}], "channel": ""}, {"category": "", "description": "Introduction\nDid you run out of input pins? Don't worry, here is a solution without any shift registers. In this video, we are going to learn about connecting more than 100 switches to a single pin of Arduino.", "title": "100+ Switches in a Single Pin of Arduino", "url": "https://www.instructables.com/id/100-Switches-in-a-Single-Pin-of-Arduino/", "section": "technology", "steps": [{"step": 1, "steps_text": "Take a look at the circuit diagram first, otherwise, you won't be able to understand what I'm saying. Whenever I press a switch the circuit will be completed through a different number of resistors,\nIn the circuit, if we press the 5th switch then the circuit is completing through all the 4 resistors,\nIf we press the 4th switch the circuit is completing through 3 resistors,\nIf we press the 3rd switch the circuit is completing through 2 resistors,\nIf we press the 2nd switch the circuit is completing through 1 resistor,\nAnd if we press the 1st switch the circuit is completing without any resistors.\nThat means the voltage reaching the analog pin A1 will be different for each switch, so we will use analogRead() function to read the values from the pin A1 and then we use an if else if condition to perform different operations for each switch.", "step_imgs": [], "step_title": "Step 1: Working Theory"}, {"step": 2, "steps_text": "First connect five push switches to a breadboard.\nOf course, you can connect maximum of 1023 switches theoretically to a 8-bit microcontroller like Arduino.\nThen interconnect resistors in between the push switches as shown in the diagram.\nConnect the other end of all the switches to 5v of Arduino, as you can see here I have connected the in such a way that one end is connected to the blue line of the beard board which is connected to the 5v.\nThen from the end of the final switch connect a wire to analog pin A1 of Arduino.\nThen connect a resistor across A1 and GND of Arduino, which is for pull down, That is to keep the value to zero when no switch is pressed.", "step_imgs": ["https://cdn.instructables.com/FF8/61FH/JTT5QCPC/FF861FHJTT5QCPC.LARGE.jpg"], "step_title": "Step 2: Let's Build"}, {"step": 3, "steps_text": "Let's connect some LEDs to check the functioning of our circuit.\nConnect the LEDs as shown in the circuit,\nConnect all the positive terminal all LEDs to the 5v.\nConnect the negative terminal of each LEDs to the digital pin D12 to D8 of Arduino, respectively.\nPractically we have to connect the LEDs through resistors for good life time.", "step_imgs": ["https://cdn.instructables.com/F5U/8GGC/JTT5QCQK/F5U8GGCJTT5QCQK.LARGE.jpg"], "step_title": "Step 3: Connect Some LEDs"}, {"step": 4, "steps_text": "Take a look at the program. All the lines are commented properly.\nNow let's upload the code and see it in action.", "step_imgs": [], "step_title": "Step 4: Coding"}, {"step": 5, "steps_text": "Keypad\nFull-sized keyboard for Arduino.\nCustom mini keyboard for your Raspberry Pi tablet, etc..", "step_imgs": [], "step_title": "Step 5: Applications"}, {"step": 6, "steps_text": "Multiple switches won't work in a single instant. If you can think of another application post it in the comments.\nThanks.", "step_imgs": [], "step_title": "Step 6: Drawbacks"}], "channel": ""}, {"category": "", "description": "If you are a Maker like me, and there is a good chance you are since you are here on Instructables reading this project, you may have the following problem. If you are working in your office/workshop/garage or elsewhere in your home, and someone rings your doorbell, it can be difficult to hear the doorbell ring. You might be using power tools or have other machines that make a lot of noise. You might be listening to headphones or a Bluetooth speaker. You might just be far away from your doorbell chime.\nSo, in this Instructable, we will build an small IoT device that connects to your doorbell and delivers a notification to your phone when someone rings your doorbell. The project, called Wello 3, connects to your home WiFi network and is powered by your doorbell transformer. When someone rings your doorbell, the chime inside your house will still ring, but the Wello 3 will also send a notification to an app on your phone so that you don\u2019t miss the doorbell ringing.\nThe project is made from a Particle Photon microcontroller/WiFi module, a power conversion and regulation system, a doorbell detection system, an Android application, and firmware running on the Photon. The project will also involve building a custom PCB and using reflow soldering to assemble the board.", "title": "Build a Cloud-Connected WiFi Doorbell", "url": "https://www.instructables.com/id/Build-a-Cloud-Connected-WiFi-Doorbell/", "section": "technology", "steps": [{"step": 1, "steps_text": "Building your own cloud-connected doorbell is a moderately complex project involving several different skills, techniques, and technologies. Therefore, before we get started with the build, it will be useful to have an overview of the steps involved that will act as a roadmap for the rest of this Instructable:\nOrder your PCB\nThe hardware for this project will be built on a custom PCB. We will start by ordering the PCB because it will take a little while to get delivered. We will also discuss the PCB design in much greater detail in a later step.\n\nOrder your Solder Paste Stencil\nWe will be using solder paste and a reflow skillet to build the PCB for this project. While it is possible to apply solder paste to the PCB manually using a syringe, the PCB is small and the parts are spaced close together. Therefore, it will make the process much, much easier to use a stencil for applying solder paste. In this step we will get the stencil ordered.\nGo Shopping for Parts\nOnce we have the PCB ordered, we will also need to order all the remaining electrical components and hardware needed to build the project.\n3D Print or Order the Base\nWe will use a 3D printed base for this project to hold the electronics. If you own a 3D printer, the design files needed to print the enclosure are provided in this step. Otherwise, if you don\u2019t have access to a 3D printer, this step also discusses ordering your enclosure from a 3D printing service.\nPopulate and Reflow the PCB\nThe PCB is designed using a number of surface mount components. We will need to apply solder paste to the PCB, populate it with components, and reflow the board using a \u201creflow skillet.\u201d\nAssemble the Enclosure\nOnce we\u2019re done assembling the PCB, we will put it into the enclosure to complete the physical build portion of this project.\nInstall the Device\nThe device receives power from the transformer that runs your doorbell. This step discusses how to find your doorbell transformer and safely install your cloud-connected dongle.\nProgram the Controller\nWith the PCB assembled and the device powered by the doorbell transformer, the onboard controller, a Particle Photon, will need to be flashed with the firmware that will make the device operate.\nDownload the App\nThis step is an easy one to complete. The Wello 3 app can be downloaded from the Play Store. In this section of the Instructable though, we will also discuss how the app functions.\nReceive Notifications\nWhen your Doorbell Rings With the build complete, controller flashed, and the app download, you can finally use your Wello 3 to receive notifications on your phone when somebody rings your doorbell. Furthermore, you can use services like IFTTT to extend your cloud-connected doorbell to controlling other devices in your home.", "step_imgs": ["https://cdn.instructables.com/F7P/JPVB/JTMSWPHB/F7PJPVBJTMSWPHB.LARGE.jpg", "https://cdn.instructables.com/FX8/YDZN/JTMSWPIP/FX8YDZNJTMSWPIP.LARGE.jpg", "https://cdn.instructables.com/FAI/7OMA/JTON4BNJ/FAI7OMAJTON4BNJ.LARGE.jpg", "https://cdn.instructables.com/FBG/RQVN/JTT5OIMB/FBGRQVNJTT5OIMB.LARGE.jpg", "https://cdn.instructables.com/F0B/ECMP/JTT5OKSN/F0BECMPJTT5OKSN.LARGE.jpg", "https://cdn.instructables.com/FGF/VME8/JTT5JQ8I/FGFVME8JTT5JQ8I.LARGE.jpg"], "step_title": "Step 1: Project Overview"}, {"step": 2, "steps_text": "Ordering your PCB\nThere are a number of parts we will need to order for this project. First is the PCB that will form the main part of the Wello 3 cloud-connected doorbell. You can download the PCB design files for this project from the website I created to host all the various design assets needed to complete this Instructable, toglefritz.com/wello.\nThe PCB design is available as SCH/BRD files for use in Autodesk Eagle. We will only need the BRD file to order the PCB, but the schematic will be useful in case you wish to modify the design or in case we need to troubleshoot the PCB after assembling it. As for ordering the PCB, there are a number of PCB fabhouses with the capabilities necessary to make the board; I highly recommend OSH Park. I\u2019ve used OSH Park for dozens of projects and I\u2019ve always been satisfied. The service offers high-quality boards, great customer service, and quick turnaround times.\n[PCB images]\nTo get your order placed, head over to the OSH Park website. At the very top of the page, there is a button allowing you to upload your BRD file. It will take just a moment for OSH Park to upload and process the file.\nAfter uploading the PCB design file, OSH Park will present a series of views for previewing the PCB before placing your order. If you were designing your own PCB from scratch, this is an extremely useful page for ensuring the PCB will turn out the way you want.\nThe next and final page of the ordering process will give you a few options for your order. The only option you might optionally select for this project is the Super Swift Service which will get your PCBs delivered more quickly for a higher per inch price.\nIt will take around two weeks for the PCB to come in (unless you upgrade to the Super Swift Service) but in the meantime, we can order the other parts for this project.\nUnderstanding the PCB Design\nYou can certainly just order your PCBs, wait for them to arrive, and move on with the rest of this project. But if you\u2019d like to learn a little more about the electronics\u2019 design, this section goes over many of the details. The PCB holds a couple subsystems: the power system, a Particle Photon microcontroller and WiFi chip, user-interface components, and a circuit used to detect when the doorbell is pressed.\nThe Power System\nOne of the biggest challenges for this project is powering the Particle Photon (more on that later) off the doorbell transformer. The transformer provides between 16V and 21V AC. The Particle Photon requires 5V DC. Therefore, it will take a couple different components to run the Photon off the transformer. First we will convert the alternating current from the doorbell transformer into direct current using a bridge rectifier. A bridge rectifier made from a set of diodes that basically allow current to flow through the device in only one direction. The bridge rectifier connects to the transformer output and delivers DC voltage to the rest of the Wello 3 system.\nSo now we have direct current voltage from the bridge rectifier, but this conversion actually causes two more challenges. First, the way a bridge rectifier transforms AC voltage into DC voltage is as if you applied an absolute value to the AC voltage. If you graph AC voltage, it looks like a sine wave, alternating between positive and negative current. The bridge rectifier makes all the current positive.\nThis results in a \u201cchoppy\u201d DC voltage, called ripple. This will cause the Particle Photon not to operate correctly. Therefore, a smoothing capacitor is used to even out the peaks and valleys in the voltage. You can see the smoothing capacitor in the schematic above.\n\nThe second issue, which is a little more complex to explain, so I will leave the explanation to Wikipedia, is that the voltage conversion from AC to DC will result in a higher voltage on the DC side. In fact, the DC voltage will be about 1.414 times greater than the AC voltage. So, converting and smoothing our 21V AC input from the doorbell transformer to DC will give us about 30V DC. This is obviously much too high for the Particle Photon and it would let all the magic smoke out of the chip if we connected the microcontroller directly to the bridge rectifier output.\nSo that brings us to the next component in the Wello 3 power system, a voltage rectifier. We can\u2019t just use a simple linear voltage regulator though. The Particle Photon operates (estimating on the high side for safety) at 100mA. We need to step down the voltage from 30V to 5V. Therefore, a linear voltage regulator would dissipate (25V \u00d7 0.1A =) 2.5W of power. This would just overheat a linear regulator.\nSo, we will use a switching voltage regulator, also called a DC/DC converter, which provides a way of stepping down the voltage much, much more efficiently than a linear voltage regulator. This means that the DC/DC converter can deliver 5V without producing dangerous heat. For this project we will use a switching regulator module from RECOM Power.\nSo now, from the bridge rectifier, to a smoothing capacitor, to a switching voltage regulator, we get a clean 5V source to run the Photon from a doorbell transformer.\nThe Particle Photon\nWe mentioned the Particle Photon several times in the last section, but what is it? The Particle Photon is one of my favorite development platforms. The board integrates a powerful microcontroller along with WiFi functionality and an amazing cloud platform to allow communication between the controller and a smartphone app. Programming the Particle Photon is done via an online IDE but if you\u2019ve ever used an Arduino, the code will look extremely familiar. Furthermore, the Particle Photon can be programmed over the air, meaning we do not need it plugged into a computer to upload code (although we can flash firmware that was too).\nThe User Interface\nThe user-interface physically on the board is part of the Particle Photon. First we have a button that will again be familiar if you\u2019ve worked with Arduino boards. The Reset button allows the Photon to be rebooted in the event that an error of some kind causes the system to become unresponsive.\nThere is a second button on the Particle Photon, the setup button. This button is used to place the Photon into a couple different modes including Listening mode in which the Photon can be connected to a WiFi network or the network connection can be changed. Plus, the setup and reset buttons can be used together to put the Photon into some more advanced modes used for troubleshooting.\nWe should not need those modes for this project though, but just in case you want to explore, the PCB includes a set of header pins that can be used to interface the controller to a computer via USB.\nThe board also has an RGB LED used to indicate the status of the Photon. The LED will illuminate with different colors and different animation patterns to indicate the device mode and any errors. Particle has a guide explaining all the LED codes for the Particle P1.\n\nDoorbell Detection\nIf running the Particle Photon off a doorbell transformer is the most difficult part of the electrical design for the Wello 3, allowing the controller to detect when the doorbell is pressed is the second biggest challenge. The Wello 3 doesn't connect to the doorbell button on the outside of the house. Rather, it connects directly to the transformer output. Therefore, we cannot detect when the button is pressed like we would a normal button in a basic Arduino tutorial.\nWe will need to get a bit clever to allow the Photon to detect a button press indirectly and without getting fried by the AC current. The circuit to make this happen takes advantage of the way the doorbell transformer delivers power. This type of transformer is designed to deliver a constant current to the system, not a constant voltage. When somebody presses your doorbell, the transformer energizes a solenoid that makes the doorbell ring. When this happens, the voltage delivered by the transformer drops from 21V AC to about 16V AC. It is this voltage drop that the Particle Photon will detect and interpret as the doorbell button being pressed.\nThe doorbell detection circuit has two main parts. First, as discussed in the power system above, the DC voltage off the bridge rectifier is high, about 30V. So the first part of the design uses a classic voltage divider to drop the voltage down to a safe level. SparkFun has a great article if you want to learn more about voltage dividers. When the doorbell button is not pressed, the output from the voltage divider will be about 1.59V. When somebody presses the doorbell button, this voltage drops to 0.84V.\nThis setup (with a little bit of modification) could be connected directly to a GPIO pin on the Particle Photon and detected as HIGH or LOW states. However, the transformer output is a little \u201cdirty\u201d and prone to high voltage transients. So, to protect the Particle Photon we will use an optoisolator (also called a phototransistor) between the controller and the voltage divider. An optoisolator allows the Particle Photon to detect the state of the transformer through the voltage divider without being connected directly to the power source.\nThe voltage divider is designed such that, when the doorbell button is not closed, and the transformer is at 21V, the power off the voltage divider is sufficient to activate the optoisolator. However, when the doorbell is pressed, and the voltage drops, it is no longer enough to power the optoisolator, so it turns off. The optoisolator will be connected to GPIO pin D4 on the Particle Photon.", "step_imgs": ["https://cdn.instructables.com/FT5/N4O8/JTMSX2ZZ/FT5N4O8JTMSX2ZZ.LARGE.jpg", "https://cdn.instructables.com/FZ6/9R6G/JTMSJQ72/FZ69R6GJTMSJQ72.LARGE.jpg", "https://cdn.instructables.com/FQS/95QR/JTMSJQ2X/FQS95QRJTMSJQ2X.LARGE.jpg", "https://cdn.instructables.com/F1L/H6N0/JTMSJPZC/F1LH6N0JTMSJPZC.LARGE.jpg", "https://cdn.instructables.com/FNY/X6IF/JTMSWSV1/FNYX6IFJTMSWSV1.LARGE.jpg", "https://cdn.instructables.com/FVT/ATRW/JTMSWRY5/FVTATRWJTMSWRY5.LARGE.jpg", "https://cdn.instructables.com/FDQ/5DIJ/JTMSWSOS/FDQ5DIJJTMSWSOS.LARGE.jpg", "https://cdn.instructables.com/FS8/OIT6/JTMSWSOU/FS8OIT6JTMSWSOU.LARGE.jpg", "https://cdn.instructables.com/FV9/PBJ4/JTMSWSF1/FV9PBJ4JTMSWSF1.LARGE.jpg", "https://cdn.instructables.com/FJI/9JYD/JTMSWUNY/FJI9JYDJTMSWUNY.LARGE.jpg", "https://cdn.instructables.com/FFN/NP44/JTMSWUYN/FFNNP44JTMSWUYN.LARGE.jpg", "https://cdn.instructables.com/F5A/HOLU/JTMSWWD2/F5AHOLUJTMSWWD2.LARGE.jpg", "https://cdn.instructables.com/FVM/QIZR/JTMSWWHS/FVMQIZRJTMSWWHS.LARGE.jpg", "https://cdn.instructables.com/F4Y/CZ9F/JTMSWX9G/F4YCZ9FJTMSWX9G.LARGE.jpg", "https://cdn.instructables.com/FFK/SK85/JTMSX1EL/FFKSK85JTMSX1EL.LARGE.jpg", "https://cdn.instructables.com/FBV/ZK2U/JTMSX1HI/FBVZK2UJTMSX1HI.LARGE.jpg", "https://cdn.instructables.com/FI8/BEUK/JTMSX25H/FI8BEUKJTMSX25H.LARGE.jpg"], "step_title": "Step 2: Order Your PCB"}, {"step": 3, "steps_text": "Now that we\u2019ve ordered the PCB, we will move on to the next item on our shopping list, a tool that will be basically essential for assembling the PCB later on. The PCB design uses several SMD components. Therefore, the easiest way to assemble the board will be with reflow soldering. The process will be covered in much greater detail once we get to assembling the PCB.\nFor now, we need to order a solder paste stencil that will be used to accurately, quickly, and easily apply solder paste to the blank PCB. If you\u2019ve never worked with solder paste in the past, don\u2019t worry. It is not a difficult technique to master, but knowing how to reflow PCBs with solder paste will pay dividends in later projects as the skill can be used to prototype professional-looking PCBs that can be transitioned directly to manufacturing. Solder paste is a thick slurry made from soldering flux mixed with extremely tiny particles of solder.\nSolder paste typically comes in syringes when ordered in small quantities. It is certainly possible to apply solder paste manually by carefully using the syringe to apply a small dollop of solder paste onto each SMD pad on the PCB. However, having done this on quite a few prototype PCBs in the past, I highly, highly recommend, just spending a bit of extra cash to get a solder paste stencil. It will save you a bunch of time, frustration, eye strain, and it will produce much better results.\nA solder paste stencil is a thin sheet of metal (typically stainless steel) or plastic polyamide film, with little holes cut out for each SMD pad in your PCB design.\nTo get your stencil ordered, I recommend OSH Stencils. Like OSH Park, OSH Stencils provides a painless ordering process that does not require you to work with confusing sets of Gerber files. The service also offers fair prices, and, in my experience, OSH Stencils makes and ships stencils remarkably quickly. The process for ordering your solder paste stencil is similar to the process used to order the PCB in the previous step.\nFirst, head over to the OSH Stencils website. There is a button at the top of the page that will allow you to upload the SCH schematic file just like we did on OSH Park.\nNext, OSH Stencils will process the file. The next page you will be presented with allows you to verify that OSH Stencils has correctly assigned each layer in your design. I\u2019ve never had an issue with the service misidentifying any layers, but it could happen if you use custom layers in any PCB designs you might make in the future. As long as the layers have the correct file type, you can click the Generate Stencils button in the upper-right corner of the page.\nThe next screen allows you to customize how your stencil will be made. First of all, you will need to select the type of material that will be used for the stencil. There are two material types: stainless steel and polyamide film. Even though it costs more, I prefer using stainless steel stencils because they are stiffer and easier to use without a frame. However, if you\u2019d like to save a bit of money on your stencil, polyamide will work just fine as well. As for the thickness of the material, the recommended 4 mil thickness will work just fine for this project. Once you select a material, you will get a preview of what your stencil will look like.\nThen, with your stencil generated and material selected, you only need to fill in your shipping information and submit payment to complete your order. OSH Stencils makes and ships stencils in a remarkably short time so you should have your stencil within a week or so.", "step_imgs": ["https://cdn.instructables.com/FPG/PIZ5/JTMSX34H/FPGPIZ5JTMSX34H.LARGE.jpg", "https://cdn.instructables.com/FXP/0ZR3/JTMSX34I/FXP0ZR3JTMSX34I.LARGE.jpg", "https://cdn.instructables.com/FRR/GQPL/JTMSX35I/FRRGQPLJTMSX35I.LARGE.jpg", "https://cdn.instructables.com/FQY/FQWB/JTMSX3DI/FQYFQWBJTMSX3DI.LARGE.jpg", "https://cdn.instructables.com/FEZ/5INM/JTMSX474/FEZ5INMJTMSX474.LARGE.jpg", "https://cdn.instructables.com/FC4/GT70/JTMSX8DW/FC4GT70JTMSX8DW.LARGE.jpg", "https://cdn.instructables.com/FTR/4R7G/JTMSX81U/FTR4R7GJTMSX81U.LARGE.jpg", "https://cdn.instructables.com/F9W/51V4/JTMSX86M/F9W51V4JTMSX86M.LARGE.jpg", "https://cdn.instructables.com/F79/PIJ1/JTMSX88A/F79PIJ1JTMSX88A.LARGE.jpg", "https://cdn.instructables.com/FH0/O66T/JTT5MRTX/FH0O66TJTT5MRTX.LARGE.jpg"], "step_title": "Step 3: Order Your Solder Paste Stencil"}, {"step": 4, "steps_text": "We\u2019ve ordered the two most complex parts of this project, the PCB and the solder paste stencil, but there is still a whole list of other components and parts we will need to order, and also we will be 3D printing some parts. There are two tables below. The table below lists all of the electronic components and mechanical parts needed to complete the build. I also included links for each of the parts to Mouser for the electronic components, and McMaster Carr for the mechanical parts. You can feel free to get your parts from other vendors if you like others better.\nIn the case of the passive electronic components, you can substitute the parts linked in the table with any other generic part of the same specifications.\nElectrical Components\nPart Quantity Approx. Cost Link\nParticle P1 1 $18 Mouser\nBridge Rectifier 1 $0.66 Mouser\nDC/DC Converter 1 $4.91 Mouser\nOptoisolator 1 $1.35 Mouser\n10k Resistor 0805 1 $0.57 Mouser\n10k Resistor 1W 2512 1 $0.28 Mouser\n560 Resistor 6332 1 $0.67 Mouser\n1.3 Resistor 1W 2512 1 $0.47 Mouser\nScrew terminal 1 $0.75 SparkFun\n$27.66\nMaterials and Tools\nIn addition to the list of components and parts in the table above, you will need some materials and tools to complete this project. I am leaving out common tools like a screwdriver and masking tape.\nSolder paste The PCB is designed with all SMD components and we will assemble the board using reflow soldering. Therefore, we will need solder paste. For this project, we will only need a small amount of solder paste, which can be purchased in syringes. I prefer using lead-free solder even though it is slightly more difficult to work with.\nESD Safe Tweezers Another essential tool for working with SMD components is a good set of tweezers. Tweezers make it much easier to pick up, manipulate, and accurately place components on a board. Tweezers built for this purpose are built with a coating that prevents static buildup in order to protect sensitive electronic components.\nMagnifier There are a couple parts that need to be oriented in specific ways, that are also very small parts. A magnifying glass or loupe makes it much easier to identify the correct orientation for small SMD parts.\nElectric hotplate There are a number of different tools we could use to reflow the PCB, which means melting the solder paste in order to connect all the components electrically to the board. There are professional reflow ovens, some Makers use modified toaster ovens, but in this Instructable we will use an electric hotplate/skillet. Using a \u201creflow skillet\u201d is a common technique used for one-off PCB assembly. Compared with the other reflow tools, using a skillet has the advantage of being extremely cheap, and leaving the PCB visible for inspection during the reflow process. I use a cheap hotplate from Amazon, but you can really use just about any electric hotplate as long as you never plan on using it for food ever again.\nFume extractor As the solder paste melts on the reflow skillet, the flux it contains will boil off. While the fumes this produces are not extremely hazardous, they are still not the best thing to breathe or get into your eyes. Therefore, as an extra safety precaution, it is recommended to use a fume extractor during the reflow process. A fume extractor is simply a fan that sucks air through a filter. There are several different designs; I use a simple model available from Amazon. Just a quick note to address a common misconception about soldering fumes, there is absolutely no risk of inhaling lead while soldering. First of all, in this Instructable, we are using lead-free solder. But even if you are using solder than contains lead, the boiling temperature of lead is 3180oF, which is way, way, way hotter than anything we will be doing in this project. The fumes produced by soldering are just flux and rosin boiling out of the solder.", "step_imgs": ["https://cdn.instructables.com/FSD/XEMQ/JTMSY4Z4/FSDXEMQJTMSY4Z4.LARGE.jpg", "https://cdn.instructables.com/FGM/C3PZ/JTMSY56C/FGMC3PZJTMSY56C.LARGE.jpg", "https://cdn.instructables.com/FT2/D7JF/JTMSY571/FT2D7JFJTMSY571.LARGE.jpg", "https://cdn.instructables.com/FTF/0YWO/JTMSY574/FTF0YWOJTMSY574.LARGE.jpg", "https://cdn.instructables.com/FD7/W63X/JTMSY577/FD7W63XJTMSY577.LARGE.jpg", "https://cdn.instructables.com/FOP/XN6F/JTMSY57C/FOPXN6FJTMSY57C.LARGE.jpg", "https://cdn.instructables.com/FXN/EXD8/JTMSY57F/FXNEXD8JTMSY57F.LARGE.jpg", "https://cdn.instructables.com/FS4/L263/JTMSY58T/FS4L263JTMSY58T.LARGE.jpg"], "step_title": "Step 4: Gather Your Parts"}, {"step": 5, "steps_text": "The Wello 3 PCB will be mounted on a plastic base we will 3D print in this step. The base is a simple design consisting of a plate with a hole on either end, along with two upright tabs. The Wello 3 PCB will mount into the base by snapping into the tabs. The base can be mounted to a wall or other surface using small screws or nails.\nThe design files for the part are available on the Wello 3 website just like the PCB design files. The files are available in STL format so that you can simply download the parts and get printing straight away. Otherwise, if you want to make any modifications to the design, you can also download the design files as Fusion 360 archive files (.f3d) or in STEP file format.\nIf you own a 3D printer, the Wello 3 base is not a demanding part to print. I used a Monoprice MP Select Mini V2 (which costs under $200) to print the enclosure pictured in this step. Just about any material will work fine for this project. I used black PLA, but ABS or even nylon would work perfectly well. As for print settings, I recommend a layer height of 0.1mm so that your printer will capture the small ridges on the tabs.\nIf you don\u2019t have a 3D printer, there are several 3D printing services from which you can order your parts, have them professionally 3D printed, and delivered right to your door. I recommend 3D Hubs because the service has affordable pricing and is extremely easy to use.", "step_imgs": ["https://cdn.instructables.com/F8N/VV0F/JTOMZHJU/F8NVV0FJTOMZHJU.LARGE.jpg", "https://cdn.instructables.com/FZF/1PK0/JTOMZHJW/FZF1PK0JTOMZHJW.LARGE.jpg", "https://cdn.instructables.com/FZK/S4LH/JTOMZHJX/FZKS4LHJTOMZHJX.LARGE.jpg", "https://cdn.instructables.com/FS2/VZB8/JTON4BEM/FS2VZB8JTON4BEM.LARGE.jpg", "https://cdn.instructables.com/FV9/53QN/JTON4BEQ/FV953QNJTON4BEQ.LARGE.jpg", "https://cdn.instructables.com/FJ1/JZD2/JTON4BNC/FJ1JZD2JTON4BNC.LARGE.jpg", "https://cdn.instructables.com/FGK/2CK2/JTON4BND/FGK2CK2JTON4BND.LARGE.jpg", "https://cdn.instructables.com/FAI/7OMA/JTON4BNJ/FAI7OMAJTON4BNJ.LARGE.jpg"], "step_title": "Step 5: 3D Print the Base"}, {"step": 6, "steps_text": "Alright, now that we\u2019ve spent quite a bit of time getting all the parts ordered and the enclosure 3D printed, it is finally time to begin building. In this step, we will begin the process of assembling the Wello 3 PCB. The first phase of this process is to apply solder paste onto the board using the solder paste stencil.\nWe will begin by securing the blank PCB to the table. One of the issues we will need to address as we set up our work environment is that, because the Wello 3 PCB is so small, it can be difficult to get the solder paste stencil to sit completely flat on top of the PCB. It will have a tendency to bend over the PCB. In the image below, you can see that the solder paste stencil bows up slightly in the middle because the stencil is wider than the PCB.\nTo correct this issue, I like to arrange a couple PCBs around the one we will be working on to create a larger flat plane of PCBs. If you ordered your PCB from OSH Park, you should have at least three copies of the PCB. You can place the extras on either side of the PCB you will be using. I simply used a couple other PCBs from a past project. By arranging PCBs like this, it will be much easier to keep the solder paste stencil flat on top of the PCB, which is important for applying an even, accurate layer of solder paste.\nThen, to keep your platform of PCBs in place, use masking tape to tape the PCBs onto the table. Of course, you will need to leave your main PCB open so we can apply solder paste.\nNext, carefully position the solder paste stencil on top of the PCB. You will need to make certain that all the gold pads on the PCB line up perfectly with the holes in the stencil. Once you have the stencil in exactly the right place, apply a strip of tape onto one side of the stencil. This tape will serve two purposes. First, it will keep the solder paste in place. Second, after we apply the solder paste, we will be able to use this strip of tape like a hinge. This will make it easier to remove the stencil from the PCB without smearing any of the solder paste.\nNow it\u2019s time to apply the solder paste. Now, solder paste is a fairly expensive material. So, in order to minimize waste, I like to use the solder paste syringe to apply a small drop of solder paste next to each of the holes in the PCB. I find that this technique works better than loading up a solder paste squeegee with paste and running it across the PCB because we will not be able to get the solder paste back into the syringe. You should dispense the solder paste on the same side of each hole because we will be using the squeegee in one direction on the first pass.\nThe final step is to use a solder paste squeegee to wipe the solder paste across the stencil, which will deposit solder paste onto each pad on the PCB. If you ordered your stencil from OSH Stencils, it should have come with a solder paste spreader that looks like a credit card. Starting from the side of the stencil closest to the tape holding it down, hold the solder paste spreader at a 45 degree angle and slowly move it across the stencil. Ideally you will be able to get the solder paste into each hole in one pass. However, with the DIY setup we are using, I find that it almost always takes two or three passes with the solder paste spreader before each hole in the stencil will be perfectly filled.\nOnce you get the solder paste evenly applied to the PCB through the stencil, carefully remove the stencil from the board. You will want to make certain not to move the stencil laterally or it will smear the solder paste. Fortunately, if you do make a mistake, you can just clean the solder paste off the board with rubbing alcohol and start again.\nIn the video below, you can see one pad in the middle with a bit too much solder paste, but the rest of the board turned out well. Once it melts during the reflow process, the surface tension of the molten solder is very high. So if you have little mistakes like the one in the video, don\u2019t worry about it too much. Solder paste has a way of self-correcting small issues with amount and alignment.\nSo now you should have a PCB with a perfect rectangle of solder paste applied to each pad.", "step_imgs": ["https://cdn.instructables.com/F5W/7M9I/JTMSXPJL/F5W7M9IJTMSXPJL.LARGE.jpg", "https://cdn.instructables.com/FL4/B039/JTMSXPIG/FL4B039JTMSXPIG.LARGE.jpg", "https://cdn.instructables.com/FJW/VJ16/JTMSXPLY/FJWVJ16JTMSXPLY.LARGE.jpg", "https://cdn.instructables.com/FJ8/SLZ6/JTMSXSI6/FJ8SLZ6JTMSXSI6.LARGE.jpg", "https://cdn.instructables.com/F3U/XD4V/JTMSXSIH/F3UXD4VJTMSXSIH.LARGE.jpg", "https://cdn.instructables.com/FUS/QVJO/JTMSXSK5/FUSQVJOJTMSXSK5.LARGE.jpg", "https://cdn.instructables.com/FBU/XH0F/JTMSXU2M/FBUXH0FJTMSXU2M.LARGE.jpg", "https://cdn.instructables.com/FFG/MMXH/JTMSXW6E/FFGMMXHJTMSXW6E.LARGE.jpg", "https://cdn.instructables.com/FHO/6R89/JTMSXWMU/FHO6R89JTMSXWMU.LARGE.jpg"], "step_title": "Step 6: Apply Solder Paste to Your PCB"}, {"step": 7, "steps_text": "The next step in assembling the PCB is to place all the electronic components onto the board in the correct places. This process can be a little bit tedious, but if you just put on some good music, it can be fun too. To help you put the parts in the right places, especially all the passive components, I created a visual guide. The guide has all the passive components on it so you know which resistor and capacitor values go where on the PCB.\nThere is a strategy to populating a PCB. First of all, since I am right handed, I like to populate the board from left to right. This way, I can avoid reaching over existing parts and risking accidentally bumping them. I started on the side of the board opposite the place for the Particle Photon by placing the three large resistors used as part of the voltage divider circuit. These resistors are not polarized, so their orientation does not matter. In fact, none of the resistors or capacitors in this design are polarized.\nNext, again working from left to right, I placed the two smaller passive components. Next up are the two larger components, the optoisolator and the bridge rectifier. We will start with the optoisolator. This component is asymmetrical so it must be oriented in the correct way. If you take a look at the PCB where the optoisolator goes, you will notice a small line next to one of the pins on the outside edge of the board. Then, if you look at the optoisolator, it has a round dot in one corner. That round dot should be positioned closest to the line on the PCB. Finally, we have the bridge rectifier. This part also needs to be oriented correctly. Fortunately, the way the bridge rectifier should be oriented is quite obvious. On the PCB, there are two pins with ~ marks next to them, one with a + symbol and one with a - symbol. On the top of the bridge rectifier, you will find the same symbols. Simply orient the part so that the symbols match up.", "step_imgs": ["https://cdn.instructables.com/F4U/1MPI/JTMSY0RW/F4U1MPIJTMSY0RW.LARGE.jpg", "https://cdn.instructables.com/FGH/V7N2/JTMSY1Q6/FGHV7N2JTMSY1Q6.LARGE.jpg", "https://cdn.instructables.com/FYH/LH89/JTMSY1AX/FYHLH89JTMSY1AX.LARGE.jpg", "https://cdn.instructables.com/FR7/WRZ8/JTMSY17K/FR7WRZ8JTMSY17K.LARGE.jpg", "https://cdn.instructables.com/FEM/TW5G/JTMSY18Y/FEMTW5GJTMSY18Y.LARGE.jpg", "https://cdn.instructables.com/F9Z/XL7H/JTT5OW7I/F9ZXL7HJTT5OW7I.LARGE.jpg"], "step_title": "Step 7: Populate the PCB"}, {"step": 8, "steps_text": "Now it\u2019s time to don your chef\u2019s hat because it is time to cook a PCB. Right now, we have the board populated with components and covered in solder paste. To melt the solder paste and complete the PCB assembly process, we will use a reflow skillet. A reflow skillet is simply an electric hotplate onto which we will place the PCB to heat it up to the point that the solder paste melts. The Chip Quik solder paste I am using in this Instructable has a relatively low melting temperature around 300oF.\nThe setup for reflow soldering is simple. Just plug in your hotplate with the fume extractor positioned just behind the hotplate. I also like to get a small cardboard box about the same height as the hotplate onto which we will be able to slide the PCB after all the solder reflows to let the PCB cool.\nThe actual process of reflowing the PCB is simple as well. First, being careful not to bump any of the components, place the PCB onto the cold hotplate and turn on the solder fume extractor. Then, turn the hotplate to a medium setting (also, if you have a space heater and a bunch of powerful photography lighting, you might want to turn those off to avoid tripping a breaker like I did). As the PCB heats, you will see the solder paste go through a couple phases. First, the paste will liquify and flow outward from the pads a little bit. Then you will start to see fumes come off the board as the flux inside the solder paste beings to boil. Next, you will see the paste turn more silver like liquid metal (which is what it is) and it will begin to contract onto the pads again. As the solder melts, I like to move the PCB around slightly just to help with even heating. The smaller pads on the PCB will reflow more quickly than the largest ones. The pads on the bridge rectifier will likely be the last to reflow so keep an eye on those pads. Once you see that all the pads on the PCB are covered by a shiny layer of liquid solder, gently slide the PCB off the hotplate onto a cardboard box or other surface that will not be damaged by the heat. Let the PCB cool completely before touching it again.\nIn the video below, you can see the process of reflowing the Wello 3 PCB. The video starts with a cold hotplate and ends with the finished PCB being removed from the hotplate and placed on a cardboard box to cool.", "step_imgs": ["https://cdn.instructables.com/F20/QETR/JTMSY4LU/F20QETRJTMSY4LU.LARGE.jpg", "https://cdn.instructables.com/FKC/PFV9/JTT5OXYS/FKCPFV9JTT5OXYS.LARGE.jpg"], "step_title": "Step 8: Reflow Your Board"}, {"step": 9, "steps_text": "We have all the SMD parts added to the PCB now. Next we will solder on the through-hole components in order to complete the PCB assembly. There are three different PTH parts we need to add: the DC/DC converter module, the screw terminal, and the Particle Photon.\nWe will begin with the screw terminal. This part should be placed on the end of the board opposite the \u201cWello 3\u201d label. The openings of the screw terminal should face the outside of the board so that the wires we will connect to the terminal in a later step will not go over the rest of the PCB.\nNext we will add the DC/DC converter. This part needs to be oriented in the correct direction. If you take a look at the PCB, you will find a dot next to one of the pins for the DC/DC converter. The converter itself also has a dot above one of the pins. The converter should be oriented with the dots matching up. Finally, we can add the Particle Photon.There are two sets of pads for the Photon. The inner set of pads will be used to connect the Photon. The outer set breaks out all of the Photon pins in case you want to add to the design or incorporate other components. The Photon board should be oriented with the USB port opposite the power circuitry we just added. To connect the Particle Photon, just solder on each of the pins.", "step_imgs": ["https://cdn.instructables.com/FDY/A80N/JTMSKCPJ/FDYA80NJTMSKCPJ.LARGE.jpg", "https://cdn.instructables.com/FAZ/ZDLD/JTMSKCNO/FAZZDLDJTMSKCNO.LARGE.jpg", "https://cdn.instructables.com/FS6/LT28/JTMSKCMU/FS6LT28JTMSKCMU.LARGE.jpg", "https://cdn.instructables.com/FES/J9B2/JTMSKCNS/FESJ9B2JTMSKCNS.LARGE.jpg", "https://cdn.instructables.com/F3O/O3F1/JTMSKCLZ/F3OO3F1JTMSKCLZ.LARGE.jpg", "https://cdn.instructables.com/FJ9/6AHF/JTMSKCBC/FJ96AHFJTMSKCBC.LARGE.jpg", "https://cdn.instructables.com/FN9/42AL/JTMSKCEO/FN942ALJTMSKCEO.LARGE.jpg", "https://cdn.instructables.com/FO4/WHRT/JTMSKCJF/FO4WHRTJTMSKCJF.LARGE.jpg", "https://cdn.instructables.com/FKV/8BNC/JTMSKC7Z/FKV8BNCJTMSKC7Z.LARGE.jpg", "https://cdn.instructables.com/FQW/W0ON/JTMSKC1P/FQWW0ONJTMSKC1P.LARGE.jpg", "https://cdn.instructables.com/FM9/B0KR/JTMSKBZM/FM9B0KRJTMSKBZM.LARGE.jpg", "https://cdn.instructables.com/FGZ/5F9S/JTMSKC5I/FGZ5F9SJTMSKC5I.LARGE.jpg", "https://cdn.instructables.com/FUQ/ZU0L/JTMSKCB4/FUQZU0LJTMSKCB4.LARGE.jpg", "https://cdn.instructables.com/FNS/VWKD/JTMSKBLI/FNSVWKDJTMSKBLI.LARGE.jpg", "https://cdn.instructables.com/FC8/1QS1/JTMSKBNE/FC81QS1JTMSKBNE.LARGE.jpg", "https://cdn.instructables.com/FA0/I4SW/JTMSKBPB/FA0I4SWJTMSKBPB.LARGE.jpg", "https://cdn.instructables.com/F67/5P6A/JTMSKBT8/F675P6AJTMSKBT8.LARGE.jpg", "https://cdn.instructables.com/FO6/0E82/JTMSKBXP/FO60E82JTMSKBXP.LARGE.jpg"], "step_title": "Step 9: Add Through-Hole Components"}, {"step": 10, "steps_text": "The only parts missing from the PCB at this point are the wires that will connect the system to the doorbell transformer. In this step we will add those wires. The wires connect to the screw terminal. Installing the wires is nothing special. Simply loosen both pins on the screw terminal, install the wires, and tighten the screw terminal again.\nOn the opposite ends of the wires, strip off about one inch of insulation so that enough wire is exposed to wrap around the screws on the doorbell transformer. Then, twist the wires together so that they do not fray too much when we install the device.", "step_imgs": ["https://cdn.instructables.com/F1F/PF2E/JTMSKF0H/F1FPF2EJTMSKF0H.LARGE.jpg", "https://cdn.instructables.com/F9E/SC35/JTMSKEYJ/F9ESC35JTMSKEYJ.LARGE.jpg", "https://cdn.instructables.com/FLW/Y74Q/JTMSKEPM/FLWY74QJTMSKEPM.LARGE.jpg", "https://cdn.instructables.com/FGD/0AXK/JTMSKENN/FGD0AXKJTMSKENN.LARGE.jpg", "https://cdn.instructables.com/FCX/BFTV/JTMSKEE6/FCXBFTVJTMSKEE6.LARGE.jpg", "https://cdn.instructables.com/F4H/UO9L/JTMSKEI0/F4HUO9LJTMSKEI0.LARGE.jpg"], "step_title": "Step 10: Add Transformer Connection Wires"}, {"step": 11, "steps_text": "At this point, we are done assembling the PCB. Yay! The next step is to mount the Wello 3 PCB assembly into the base before installing it onto the doorbell transformer. Mounting the PCB into the 3D printed base is an easy step. Start by placing the end of the PCBs with the wires into the mounting base. Then, using moderate pressure, snap the other end of the PCB into the other tab on the base.", "step_imgs": ["https://cdn.instructables.com/F4H/M560/JTON4EKT/F4HM560JTON4EKT.LARGE.jpg", "https://cdn.instructables.com/FA6/DX9I/JTON4EKU/FA6DX9IJTON4EKU.LARGE.jpg", "https://cdn.instructables.com/FA3/5QX8/JTON4ELC/FA35QX8JTON4ELC.LARGE.jpg", "https://cdn.instructables.com/FHT/W9UC/JTON4EMS/FHTW9UCJTON4EMS.LARGE.jpg", "https://cdn.instructables.com/F4G/PU35/JTON4ENT/F4GPU35JTON4ENT.LARGE.jpg", "https://cdn.instructables.com/FTO/MGN4/JTON4EOU/FTOMGN4JTON4EOU.LARGE.jpg"], "step_title": "Step 11: Assemble the Base"}, {"step": 12, "steps_text": "We are completely finished now with the physical build portion of this Instructable. The next phase of the project is to flash firmware to the Particle Photon on board the Wello 3, download the app on your phone, and enjoy our cloud-connected doorbell. Before any of this can happen, however, we will need to connect the Wello 3 to power.\nCutting Power to and Locating your Transformer\nThe Wello 3 runs directly off your doorbell system\u2019s transformer, which was discussed in great detail previously. Before we start working with any electrical systems though, we make safety our top priority by turning off the power to your doorbell. Even though the voltage output of the transformer is not high enough to hurt you, the transformer does still connect to mains voltage so we can\u2019t be too careful. So, locate and turn off the circuit breaker to your doorbell. Your doorbell may have its own breaker or it could piggyback off another system. For example, my doorbell is tied to the circuit for my AC. You can test to make sure the power has been cut to the doorbell by pressing the button outside and seeing if the doorbell rings.\nWith the power turned off, the next challenge is to locate your doorbell transformer. Yours is likely somewhere in the vicinity of your electrical panel. The transformer in my house is connected to one of the lights on the ceiling. Another common spot is mounted directly to the side of the electrical panel. Your doorbell transformer may also be mounted to the furnace or AC system. Take a look at the doorbell transformer below to get an idea about how the transformer looks.\nTo make it easier to understand this Instructable, I made a small bench with a doorbell transformer, button, and chime. It is difficult to take photos of the basement rafters looking straight into a light bulb so this platform will make the photos much more clear.\nConnecting the Wello 3 to the Transformer\nYou should find two wires coming from the doorbell transformer on two screws. The Wello 3 will connect to these two screw terminals. Because the output of the transformer is AC current, there is no polarity to worry about when connecting the Wello 3\u2019s wires to the transformer. The wires can connect in either order.\nConnect the Wello 3 to the transformer by loosening each screw and adding the wires from the Wello 3.\nOnce you get the Wello 3 connected to the transformer, turn back on the circuit breaker to power the doorbell and the Wello 3.", "step_imgs": ["https://cdn.instructables.com/FKY/D9DN/JTON77G6/FKYD9DNJTON77G6.LARGE.jpg", "https://cdn.instructables.com/FYS/11H4/JTON795B/FYS11H4JTON795B.LARGE.jpg", "https://cdn.instructables.com/FKL/9BMC/JTON78ZQ/FKL9BMCJTON78ZQ.LARGE.jpg", "https://cdn.instructables.com/F6E/RRHZ/JTON78X9/F6ERRHZJTON78X9.LARGE.jpg", "https://cdn.instructables.com/F98/RBEI/JTON77R4/F98RBEIJTON77R4.LARGE.jpg", "https://cdn.instructables.com/FHY/9ZHN/JTON780H/FHY9ZHNJTON780H.LARGE.jpg", "https://cdn.instructables.com/FHF/0Q5A/JTON7864/FHF0Q5AJTON7864.LARGE.jpg", "https://cdn.instructables.com/FVS/CJJ3/JTON77LD/FVSCJJ3JTON77LD.LARGE.jpg", "https://cdn.instructables.com/FBI/5C31/JTON78EN/FBI5C31JTON78EN.LARGE.jpg", "https://cdn.instructables.com/FT2/16EO/JTON78K2/FT216EOJTON78K2.LARGE.jpg", "https://cdn.instructables.com/FJR/6DX5/JTON78Q7/FJR6DX5JTON78Q7.LARGE.jpg"], "step_title": "Step 12: Connect Wello 3 to Your Doorbell System"}, {"step": 13, "steps_text": "Before we can flash firmware to the Particle Photon on the Wello 3, first we need to \u201cclaim\u201d the board. Claiming a Particle board is the terminology the Particle platform uses for managing device ownership. Only devices you claim can interact directly with your Particle Cloud account. Also, as the owner of the board, only you can flash firmware onto the Photon.\nThere are a few different ways to claim the Particle Photon. The easiest is the use the Particle app.\n1) Log into the Particle app\nWith the app downloaded and open on your phone, we will get started by logging into your Particle account. If you don\u2019t have a particle account, you can create one.\n2) Add a new Particle Photon\nNext we need to add the Photon to the Particle account. To do this, tap the + button in the lower-right corner of the screen. You will be presented with a small menu with different types of Particle devices. Select the option to Set up a Photon.\n\n3) Choose the Photon\nOn the next screen, click the Ready button and the app with begin searching for your Particle Photon. After a short moment, you should see the default name of your device appear in the list. It will be formatted like \u201cPhoton-xxxx\u201d. Tap the name of the device to start the pairing process.\n4) Connect the Photon to WiFi\nThe Photon communicates with the outside world over WiFi. The next step in setting up the Photon is to connect it to your WiFi network. The Particle app will search for nearby WiFi networks. Once your home network appears, select it and enter your WiFi password to allow the Photon to connect.\n5) Name your Photon\nWith the Photon connected to WiFi, the final step in the setup process is to name the device. You can choose any name you\u2019d like but the only important step is that the name of your Particle Photon must contain the string \u201cWello.\u201d The Wello app will search for devices on your Particle account the name of which contains the string \u201cWello\u201d in order to identify which devices are the connected doorbell ones versus any other Particle devices you might have on your account.", "step_imgs": ["https://cdn.instructables.com/FTR/C1ZE/JTON7RRX/FTRC1ZEJTON7RRX.LARGE.jpg", "https://cdn.instructables.com/FHK/5TGT/JTON7RRS/FHK5TGTJTON7RRS.LARGE.jpg", "https://cdn.instructables.com/FWO/ZTA6/JTON7RRV/FWOZTA6JTON7RRV.LARGE.jpg", "https://cdn.instructables.com/F0L/KBYL/JTON7RRQ/F0LKBYLJTON7RRQ.LARGE.jpg", "https://cdn.instructables.com/F88/T9B0/JTON7RRC/F88T9B0JTON7RRC.LARGE.jpg", "https://cdn.instructables.com/FC7/DVO0/JTON7RPV/FC7DVO0JTON7RPV.LARGE.jpg", "https://cdn.instructables.com/FMC/CE2A/JTON7RQZ/FMCCE2AJTON7RQZ.LARGE.jpg", "https://cdn.instructables.com/FUD/S1G1/JTON7RPD/FUDS1G1JTON7RPD.LARGE.jpg", "https://cdn.instructables.com/F7N/V6W6/JTON7RPY/F7NV6W6JTON7RPY.LARGE.jpg", "https://cdn.instructables.com/FIN/T1VS/JTON7RPF/FINT1VSJTON7RPF.LARGE.jpg"], "step_title": "Step 13: Claim the Wello 3 Particle Photon"}, {"step": 14, "steps_text": "With the Wello 3 fully assembled and the Particle Photon claimed, we will move on to flashing the firmware that will make the system run. One of the most powerful features offered by the Particle platform is the ability to flash firmware to the boards over WiFi rather than requiring the board to be plugged into your computer via USB like most other microcontrollers (although the Photon can be programmed this way if you want).\nParticle has an online IDE for writing the code that will run on the Photon: https://build.particle.io. If you\u2019ve ever worked with Arduino boards, the code will look extremely familiar, in fact it is almost the same. There are just a few functions and features unique to the Particle platform that are discussed in more detail below.\nSo, begin by opening the Particle IDE and logging into it with your Particle account. Then we will need to copy/paste the code into the IDE. You can download the firmware from the Wello 3 website either as a .ino file, the same type used in the Arduino IDE, or in a text file. Once you download the code, copy/paste it into the Particle IDE.\n/*\n   Project: Wello 3, IoT Doorbell Button\n   Author: Toglefritz\n*/\n/*  //////////////////\n    ///    INFO    ///\n    //////////////////\n*/\n/*\n  DESCRIPTION: \n    This code, written for the Particle Photon, controls an Internet-connected doorbell. The hardware consists\n    of a Particle Photon module, a power delivery system, and an optoisolator used to detect when the doorbell\n    circuit is closed (when the doorbell gets pressed). The Particle Photon connects to the \n    Internet and pushes a notification when the button is triggered. Other devices listen for the notification that the button\n    was pressed and respond in different ways depending upon the device.\n*/\n\n/*  \n   /////////////////////////\n   ///    CONNECTIONS    ///\n   /////////////////////////\n\n   This section defines to which pins various components are connected.\n*/\n\nconst int buttonPin = 4;       // The optoisolator is connected to digital pin 4\n\n/*  \n   /////////////////////\n   ///    GLOBALS    ///\n   /////////////////////\n\n   This section contains global variables used throughout the sketch, including those\n   used for configuration options from the Wello app.\n*/\n\nbool cloudRing;     // This variable is ued to check that the ring notification was published to the cloud successfully\n\n/*  \n   ////////////////////\n   ///    SKETCH    ///\n   ////////////////////\n*/\n\nunsigned long previousRing = 0;     // This variable is used to track when the doorbell was last rung. The code compares this time\n                                // to the current time to make sure somebody does not ring the doorbell repeatedly. \n\nvoid setup() {\n    // Define pin modes\n    pinMode(buttonPin, INPUT);\n}\n\nvoid loop() {\n    // Disable the doorbell until the Particle Photon is fully booted\n    if(millis() > 5000) {\n        // If the button is pressed, and it has been more than ten seconds since the last time it was pressed,\n        // send a notification to the Particle Cloud\n        if(digitalRead(buttonPin) == LOW && millis() - previousRing > 10000) {\n            // Send a notification to the cloud\n            cloudRing = Particle.publish(\"WelloConnectedDoorbellRing\");\n            if (!cloudRing) {\n                // get here if event publish did not work\n                Particle.publish(\"Error: failed to ring\");\n            }\n            \n            // Get the time of the current ring event\n            previousRing = millis();\n        }\n        \n        // The millis() function resets to zero after it hits a maximum value of 4,294,967,295. So, if the \n        // current value of millis() is within 10000 ms of this value, we need to set the previousRing variable\n        // back to zero, otherwise, the millis() - previousRing will never be greater than 5000 and the doorbell\n        // will stop working.\n        if(4294962295 - millis() <= 10000) {\n            previousRing = 0;\n        }\n    }\n}\nWith the code copied into the Particle IDE, we first need to make sure the Photon has an Internet connection before moving on. The status LED on the Particle Photon should be breathing a cyan color to indicate it is connected to the Internet.\nOnce you verify that a connection has been established, the first step in flashing code to the board is to \u201ctarget\u201d the Particle Photon. Targeting a board is how the Particle IDE knows to which board you want to upload firmware. In the menu on the left side of the screen, click the Devices tab near the bottom corner of the window. The icon looks like crosshair. In the list of devices, find the name you gave your Particle Photon earlier, the one containing the string \u201cWello\u201d. To target that device, click the star icon next to the name of the Photon. Finally, to flash the firmware to the board, click the lightning bolt icon in the upper-left corner of the screen. When you do this, you will see the status LED on the Photon flash a few different colors while the firmware upload progresses. After the upload is complete, the status LED on the Photon will return to breathing cyan and you will be presented with a confirmation message in the Particle IDE.\nUnderstanding the Firmware\nThe firmware running on the Particle Photon to make the Wello 3 connected doorbell work is not too complex. Most of the code will be familiar if you have any experience working with Arduino boards or other Arduino-compatible microcotrollers. There are only a few parts that are specific to the Particle platform.\nFirst we have the pin definition for the GPIO pin on the Photon to which the optoisolator is connected. This line is exactly the same as you would use for Arduino.\nconst int buttonPin = 4;       // The optoisolator is connected to digital pin 4\nThen, skipping down a little in the firmware, inside the setup function, the D4 pin is designated as an input.\nvoid setup() {\n    // Define pin modes\n    pinMode(buttonPin, INPUT);\n[...]\nNext up, inside the body of the firmware, the loop function, is the code that responds to the doorbell button being pressed. This section of code begins with a if statement that checks to make certain the Wello 3 does not send you too many notifications in a short time, because that would be annoying. Each time the doorbell button is pressed, the firmware records when that took place in terms of the length of time the program has been running. This is stored in a variable that is defined at the beginning of the code.\nunsigned long previousRing = 0;     \n/* This variable is used to track when the doorbell was last rung. The code compares this time\nto the current time to make sure somebody does not ring the doorbell repeatedly. */\nThe firmware will only send a notification once every ten seconds. In other words, if it has been less than ten seconds since that last time the Photon pushed an event that the button was pressed, the firmware does nothing. Assuming that more than ten seconds has elapsed since the previous doorbell ring, the firmware then uses one of the unique features of the Particle Cloud platform. The Photon will publish an event to the Particle Cloud indicating that the doorbell has been pressed. That event can be received by other devices. In this case, it will be received by your smartphone running the Wello app.\n// If the button is pressed, and it has been more than ten seconds //since the last time it was pressed, send a notification to the //Particle Cloud\n        if(digitalRead(buttonPin) == LOW && millis() - previousRing > 10000) {\n            // Send a notification to the cloud\n            cloudRing = Particle.publish(\"WelloConnectedDoorbellRing\");\n            if (!cloudRing) {\n                // get here if event publish did not work\n                Particle.publish(\"Error: failed to ring\");\n            }\n            \n            // Get the time of the current ring event\n            previousRing = millis();\n        }\nYou can also see at the end of that if statement that the firmware updates the timestamp of the most recent ring each time it sends a notification. The last bit of code inside the loop function is a bit of a safeguard to prevent a potential bug. The firmware tracks each doorbell press by recording the time according to millis() when the doorbell was pressed. However, the value of millis can only get so large. Its maximum value is 4,294,967,295. So, when the millis gets close to that value, the timestamp on the doorbell ring will be set closer to that value than 10000. When this happens, it will effectively prevent the system from ever sending another notification. It would break your doorbell because, as far as the program logic is concerned, it will never be over ten seconds since the last ring.\n// The millis() function resets to zero after it hits a maximum value of 4,294,967,295. So, if the \n// current value of millis() is within 10000 ms of this value, we need to set the previousRing          // variable back to zero, otherwise, the millis() - previousRing will never be greater than 5000     // and the doorbell will stop working.\n        if(4294962295 - millis() <= 5000) {\n            previousRing = 0;\n        }", "step_imgs": ["https://cdn.instructables.com/FQU/0TGK/JTT5JQ9A/FQU0TGKJTT5JQ9A.LARGE.jpg", "https://cdn.instructables.com/FI3/PTQT/JTT5JQ8J/FI3PTQTJTT5JQ8J.LARGE.jpg", "https://cdn.instructables.com/FGF/VME8/JTT5JQ8I/FGFVME8JTT5JQ8I.LARGE.jpg", "https://cdn.instructables.com/FD6/ROC8/JTT5JQ9B/FD6ROC8JTT5JQ9B.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FNF/0FCV/JTT5JQA0/FNF0FCVJTT5JQA0.LARGE.jpg"], "step_title": "Step 14: Flash the Firmware"}, {"step": 15, "steps_text": "The very last step before this project is complete is installing the app that allows your phone to receive notifications from the Wello 3 and give you the heads up when somebody rings your doorbell. The app is available for Android and can be downloaded from the Google Play Store. The app is currently in beta (I only have two phones to test it on so it may have some issues depending upon what phone you use - if you run into any errors, let me know).\nWith the app installed on your phone, when someone rings your doorbell, you will receive a high-priority notification so that you will not miss that visitor.\nUnderstanding the App\nThe Wello 3 Android application is a bit more complex than the firmware in the previous step, but it is still not too complex to understand. There are two main parts of the application: the login activity, and the main activity. The login activity is fairly simple. Before the app will be able to receive notifications published by your Wello 3, you will need to log into your Particle account inside the app so that it can subscribe to notifications from your Particle Cloud account. The login functionality is provided by the Particle Android SDK, the same with the majority of the functions in the app. Before we can do anything with the Particle SDK, we must first initialize it.\n// Initialize the Particle Cloud SDK\nParticleCloudSDK.init(LoginActivity.this.getApplicationContext());\nThen, with the SDK initialized, we can log into the Particle account.\n// Log in to Particle Cloud using username and password\nParticleCloudSDK.getCloud().logIn(username, password);\nreturn true;\nSo, logging into the Particle account requires only one method from the SDK. Here, the username and password information is provided from a pair of EditText elements on the page.\n// Get the username and password from the editTexts\nfinal EditText usernameField = findViewById(R.id.username);\nfinal String username = usernameField.getText().toString();\n\nfinal EditText passwordField = findViewById(R.id.password);\nfinal String password = passwordField.getText().toString();\nOnce you click the Login button at the bottom of the activity, the app will switch to the main activity. The login activity will pass the login credentials to the main activity.\n// Go to the WelloMainActivity activity\nIntent intent = new Intent(LoginActivity.this, WelloMainActivity.class);\nintent.putExtra(\"username\", username);\nintent.putExtra(\"password\", password);\nstartActivity(intent);\nSo, then we arrive at the main activity which is where the majority of the hard work in getting the app to receive notifications from the Particle Cloud takes place. The first thing the activity does, after some basic setup, is to use the Particle Android SDK to retrieve a list of all the Particle devices on your account. Note that these might be devices other than the Particle Photon used in the Wello 3 - that will be addressed in a moment.\ndevices = ParticleCloudSDK.getCloud().getDevices();\nNext, the app will look through the list of devices and grab those whose name contains the substring \u201cWello\u201d. This is why it was so important to name the Photon something containing the string \u201cWello\u201d earlier when we were claiming the board. This method also allows you to have multiple Wello 3 devices in case your house has more than one doorbell, like one on the front door and one on the side door.\nfor (int ct = 0; ct < devices.size(); ct++) {\n   // If the device is a doorbell (product id=####)\n   //if (devices.get(ct).getProductID() == ####) {\n   if (devices.get(ct).getName().contains(\"Wello\")) {\n       welloDevices.add(devices.get(ct));\n   }\n}\nWith the list of Wello 3 devices, the app then subscribes to events published by those devices. This way, the app can react when the Wello 3 publishes an event to say the doorbell rang. This function is fairly large. These first few lines simply subscribe the app to events.\n// Subscribe to an event\nlong subscriptionId = ParticleCloudSDK.getCloud().subscribeToDeviceEvents(\n       null, \"\",\n       new ParticleEventHandler() {\n           // Trigger this function when the doorbell event happens\n           public void onEvent(String eventName, ParticleEvent event) {\nFinally, the app sets up a notification channel on your phone. This allows the app to deliver notifications to the system that will show up regardless of whether or not you have the Wello app open on your phone.\nNotificationCompat.Builder mBuilder =\n       new NotificationCompat.Builder(WelloMainActivity.this);\nNotificationManager mBuilder_O = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\nString channelId = \"Wello_Doorbell_Notifications\";  // The id of the channel\n\nif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n   CharSequence channelName = \"Wello Doorbell Notifications\";  // The user-visible name of the channel\n   String description = \"An alert when your Wello doorbell rings.\";\n   int importance = NotificationManager.IMPORTANCE_HIGH;\n   NotificationChannel mChannel = new NotificationChannel(channelId, channelName, importance);\n   mChannel.setDescription(description);\n   mChannel.enableVibration(true); //TODO change from settings\n   mChannel.setVibrationPattern(new long[]{100, 200, 300, 400, 500, 400, 300, 200, 400});\n   mBuilder_O.createNotificationChannel(mChannel);\n}", "step_imgs": ["https://cdn.instructables.com/FMB/8WGH/JTT5JXG2/FMB8WGHJTT5JXG2.LARGE.jpg", "https://cdn.instructables.com/FRT/WHDW/JTT5JXGY/FRTWHDWJTT5JXGY.LARGE.jpg", "https://cdn.instructables.com/F18/K9A2/JTT5JXG6/F18K9A2JTT5JXG6.LARGE.jpg", "https://cdn.instructables.com/FVC/FKV4/JTT5JXED/FVCFKV4JTT5JXED.LARGE.jpg", "https://cdn.instructables.com/F2E/3Y3Z/JTT5JWNZ/F2E3Y3ZJTT5JWNZ.LARGE.jpg", "https://cdn.instructables.com/FW7/8SBX/JTT5JWO0/FW78SBXJTT5JWO0.LARGE.jpg", "https://cdn.instructables.com/FFO/H2ZL/JTT5JWO1/FFOH2ZLJTT5JWO1.LARGE.jpg", "https://cdn.instructables.com/FP7/QVUK/JTT5JWO3/FP7QVUKJTT5JWO3.LARGE.jpg", "https://cdn.instructables.com/FNT/MCCN/JTT5JWOB/FNTMCCNJTT5JWOB.LARGE.jpg", "https://cdn.instructables.com/F3G/8Q2P/JTT5JWOD/F3G8Q2PJTT5JWOD.LARGE.jpg"], "step_title": "Step 15: Install the App"}], "channel": ""}, {"category": "", "description": "After seeing Wei Chieh Shi's laser jacket design, I wanted to create my own. These instructions show how to modify a jacket to add laser diodes and control them electronically to produce different laser light patterns. The laser diodes give the jacket an appearance of being \"spiky\", like having metal spikes but with red laser light. The effect is especially striking in environments with fog or smoke as the laser light path shows a trail from where it originates.\nThe concept and execution is relatively simple but care has to be taken to make sure that the electronics, wiring and other aspects of the jacket don't fail when in use. Much of the subtlety and complexity of the project is providing proper wire routing and making sure that strain relief for the electronics and connections is provided so that it's resilient under normal wear.\nAssuming the basic parts are available (soldering iron, multimeter, wire strippers, laser cutter, etc.) I would estimate that this project is about $300 in raw materials and about 20 hours worth of labor. What follows is the way I created the jacket you see here and the design, sourcing and implementation is open for improvement.\nDepending on the battery used, the jacket can operate for about an hour or two continuously. Spare batteries can be carried around and used to replace the depleted batteries if need be.", "title": "Laser Spiked Jacket", "url": "https://www.instructables.com/id/Laser-Spiked-Jacket/", "section": "technology", "steps": [{"step": 1, "steps_text": "Jacket (Amazon)\nSoldering Iron (Amazon)\nMultimeter (Amazon)\nSolder (Amazon)\nWire Cutter (Amazon)\nWire Strippers (Amazon)\nFlux (Amazon)\nHelping Hands (optional) (Amazon)\nSoldering Braid (optional) (Amazon)\nNitrile Gloves (optional) (Amazon)\nArduino Nano (Amazon, EBay)\nJoystick Module (Amazon, EBay)\nMicrophone (Amazon)\n128x Laser Diode Module (Amazon, EBay)\n2x PCA9685 16 channel PWM drivers (EBay)\n5V Buck Converter (Amazon)\n5V 3A BEC (Amazon, EBay)\n7.4V 850mAh LiPo battery (Amazon)\nXT30 Connectors (Amazon)\n20 gauge in line fuse holder (Amazon)\nRocker switch (Amazon)\n2s LiPo charger (Amazon)\n2x Gikfun Proto-Boards (Amazon)\n1x protoboard (Amazon)\n1x small protoboard (Amazon)\n50x 2pin male/female JST 2.5mm connectors (Amazon, EBay)\n5x 6pin male/female JST connectors (Amazon)\n150x JST 1.25mm male/female pair (Amazon, EBay)\n6 colors of 24 AWG wire, stranded 300V (10ft) (Amazon)\n2 colors of 24 AWG wire, stranded 300V (200ft) (Amazon, Amazon)\n2 colors of 24 AWG wire, solid core (10ft) (Amazon)\nEngineer PA-21 Universal Crimping Pliers (Amazon)\n1/4\" braided cable sleeve (Amazon)\nHeat Shrink Tubing (Amazon)\nHeat Gun (Amazon)\n12x 30mm M3 bolt & 20x 6mm M3 bolt (Amazon)\n100x M3 nut (Amazon)\n400x 25mm M2 black hex cap bolt (Amazon)\n1000x M2 nut (Amazon)\nTubing (Amazon)\n24\"x36\"x1/16\" Black Acrylic Sheet (Amazon)\n3x 12\"x12\"x1/8\" Wood Sheet (Amazon)\nLaser Cutter (Amazon)\nVelcro tie (Amazon)\nSnaps (optional) (Amazon)\nScissors (Amazon)\nCable ties (Amazon)\nCable clamp (Amazon)\nA quick note: Amazon generally offers quicker shipping than the EBay alternative but often at 2-10 times the cost.\nI've found there's often minimal difference in quality between the items I order on Amazon and EBay.\nI prefer to crimp my own connectors but if you don't mind paying a bit extra, you can buy pre-crimped connectors. I also have a preference for angled female connectors though having a good mix of straight and angled provides more options.", "step_imgs": ["https://cdn.instructables.com/F80/DXUP/JTT5LQW5/F80DXUPJTT5LQW5.LARGE.jpg", "https://cdn.instructables.com/F6B/JIVB/JTT5LQW1/F6BJIVBJTT5LQW1.LARGE.jpg", "https://cdn.instructables.com/F1C/ZHUW/JTT5LQU4/F1CZHUWJTT5LQU4.LARGE.jpg", "https://cdn.instructables.com/F02/16DI/JTT5LQZ3/F0216DIJTT5LQZ3.LARGE.jpg", "https://cdn.instructables.com/FWN/VKL4/JTT5LQY1/FWNVKL4JTT5LQY1.LARGE.jpg", "https://cdn.instructables.com/FEV/8FMA/JTT5LQY5/FEV8FMAJTT5LQY5.LARGE.jpg", "https://cdn.instructables.com/FVM/JQS3/JTT5LQW6/FVMJQS3JTT5LQW6.LARGE.jpg", "https://cdn.instructables.com/FAR/X924/JTT5LQX3/FARX924JTT5LQX3.LARGE.jpg", "https://cdn.instructables.com/F7I/HBPY/JTT5LQY0/F7IHBPYJTT5LQY0.LARGE.jpg", "https://cdn.instructables.com/FNS/LUN1/JTT5LQY4/FNSLUN1JTT5LQY4.LARGE.jpg", "https://cdn.instructables.com/F1Q/RB0E/JTT5LQV2/F1QRB0EJTT5LQV2.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "The basic design is to attach 128 laser diodes to the arms, shoulders and upper back of a 'moto' jacket and provide power and control to the laser diodes with electronics. The electronics are put into a housing and all wires, electronics and their housing are hidden in the interface between the outer jacket shell and the inner lining.\nA joystick and microphone are used for input. Power is provided by a LiPo rechargeable battery.\nIn the above schematic, LEDs are used in place of the laser diodes. The laser diode modules have their own internal circuitry so don't need current limiting resistors like an LED normally would.\nThe basic components are:\nLaser diode housing and attachment\nElectronics\nElectronics Housing\nWiring and connection\nThe basic workflow is roughly as follows:\nAssemble the laser diodes with their connectors and housing\nAttach the laser diodes to the jacket Solder the electronics and assemble them in their housing\nCreate the cabling and connect the laser diodes to the electronics\nWear it", "step_imgs": ["https://cdn.instructables.com/F0S/51A1/JTT5LQ3R/F0S51A1JTT5LQ3R.LARGE.jpg", "https://cdn.instructables.com/FI4/GRWF/JTT5MM0R/FI4GRWFJTT5MM0R.LARGE.jpg"], "step_title": "Step 2: Design Overview"}, {"step": 3, "steps_text": "The laser diodes are attached to the outside of the jacket by a laser cut 'housing'. Each laser diode housing is a stack of laser cut acrylic, fit together with M2 screws. The base of the housing is put under the outer jacket shell to provide support for the laser diode and relief for the laser diode wires.", "step_imgs": ["https://cdn.instructables.com/FX1/25KR/JTT5LQ0X/FX125KRJTT5LQ0X.LARGE.jpg"], "step_title": "Step 3: Laser Diode Assembly"}, {"step": 4, "steps_text": "After testing each laser diode to make sure they work, solder a male JST 1.25mm 2pin header to each of the ends of the laser diode. I've found best results by cutting the edge of the wires off, stripping them and then wrapping and soldering them.\nAs much as possible, I try to make a 'lineman splice' when connecting wires to make sure there's a good connection. Make sure to put the heat shrink tubing on before soldering.\nBefore soldering, apply a healthy drop of flux to make sure the solder will flow well. Once the wires are soldered together, put the heat shrink tube on and heat with the heat gun to give a good fit.\nUse caution when using the heat gun to shield the laser diode and the end of the JST connector. I've had trouble with the connectors not fitting properly and I believe I was sloppy in not protecting the laser diode JST connector from the heat. The laser diode also is sensitive to extreme temperature and could fail from excess heat applied to it.\nIf there's any exposed wires, cover with electrical tape. If for some reason the heat shrink tube is loose, you can always put another, larger, heat shrink tube around both and shrink to fit.\nBe gentle when handling the laser diodes as the wires connected to the laser come off easily.\nDo this for each of the 128 laser diodes. As much as possible, test the laser diodes after attaching the cabling. This might mean making a 'test cable' to test each of the laser diodes.", "step_imgs": ["https://cdn.instructables.com/F8I/JD8W/JTT5LQQB/F8IJD8WJTT5LQQB.LARGE.jpg", "https://cdn.instructables.com/F5W/8PDM/JTT5LQR8/F5W8PDMJTT5LQR8.LARGE.jpg", "https://cdn.instructables.com/FCW/T1JF/JTT5LQR9/FCWT1JFJTT5LQR9.LARGE.jpg", "https://cdn.instructables.com/F8H/FL1P/JTT5LQRA/F8HFL1PJTT5LQRA.LARGE.jpg", "https://cdn.instructables.com/F8U/6MHF/JTT5LQRB/F8U6MHFJTT5LQRB.LARGE.jpg", "https://cdn.instructables.com/FSJ/7XBE/JTT5LQS8/FSJ7XBEJTT5LQS8.LARGE.jpg"], "step_title": "Step 4: Attach Laser Diode Cabling"}, {"step": 5, "steps_text": "Use your laser cutter to cut the laser diode housing. I used 1/16\" black acrylic. My laser cutter has an effective work area of 8\"x12\" which allows a sheet of black acrylic to cut out approximately 20 laser diode housings per run.\nThough probably obvious to people who use laser cutters more than I do, make sure to take off the paper protection for the acrylic sheets. The acrylic cut is clean and often doesn't produce a flame, so any paper protection isn't necessary. Leaving the paper on also tends to cause the work to catch fire.\nI've found that my laser cutter only has about 30 minutes of operation before the water cooling becomes too hot for the laser cutter to keep functioning properly. This is highly dependent on the type of laser cutter and cooling system that's installed but it's something to keep an eye on.\nAfter the housing has been cut, I've found that it's necessary to remove smaller interior pieces with a small pick. I like to prepare the acrylic pieces by putting them into groups depending on whether it's and outer, inner or backing piece, for ease of assembly later.", "step_imgs": ["https://cdn.instructables.com/F8G/LMJQ/JTT5LPO3/F8GLMJQJTT5LPO3.LARGE.jpg"], "step_title": "Step 5: Laser Cut Laser Diode Housing Module"}, {"step": 6, "steps_text": "After the laser diodes have been cabled and the laser diode housings have all been laser cut, it's time to assemble the laser diode in it's housing. This won't be the complete housing as there's a final backing piece that won't be put on until the laser diode is attached to the jacket but most of the laser diode assembly is done in this step.\nPrepare the 128 cabled laser diodes along with the pile of acrylic housing pieces and the M2 25mm screws and nuts. One by one, put each of the laser diodes into the assembled laser housing.\nI've found the best way to proceed is to put two M2 screws through the top housing plate then progressively add the six middle plates. I try and put the two M2 screws in a position that is perpendicular to the rectangular slot in the middle stacked plates. When stacking the middle plates, make sure that the rectangular slots line up.\nI loop each laser diode through a bottom plate. This loop is done to provide strain relief for the wire so that moderate force won't disconnect the soldered wires from the laser diode. Once the laser diode is looped through the bottom plate, I then position the laser diode onto the stack.\nOnce the laser diode is seated in the laser diode housing stack, I then insert the third M2 screw and put a nut on each of the three M2 screws. The idea is to screw the bottom plate on tight enough to keep the laser diode cables in place and relieve any forces that would yank on the wires coming out.\nUsing acrylic for the housing and strain relief is less than ideal as the acrylic is very brittle and cracks easily. I've found that the bottom plate often cracks when screwing the nuts in place. As long as the acrylic bottom plate provides strain relief, even if it's cracked, the housing is still doing it's job. While the brittle acrylic and potential cracking is not ideal, I've found that it works well enough.\nAny future iteration of this project should provide a better solution to housing the laser diodes.", "step_imgs": ["https://cdn.instructables.com/FL9/X4VM/JTT5LQ4O/FL9X4VMJTT5LQ4O.LARGE.jpg", "https://cdn.instructables.com/FTD/NJ4N/JTT5LQ6S/FTDNJ4NJTT5LQ6S.LARGE.jpg", "https://cdn.instructables.com/FT5/SXD3/JTT5LQ8W/FT5SXD3JTT5LQ8W.LARGE.jpg", "https://cdn.instructables.com/FIG/O7KZ/JTT5LQB0/FIGO7KZJTT5LQB0.LARGE.jpg", "https://cdn.instructables.com/FNB/UT1B/JTT5LQBX/FNBUT1BJTT5LQBX.LARGE.jpg", "https://cdn.instructables.com/FIW/NGVY/JTT5LQBY/FIWNGVYJTT5LQBY.LARGE.jpg", "https://cdn.instructables.com/F8D/7UCM/JTT5LQEZ/F8D7UCMJTT5LQEZ.LARGE.jpg", "https://cdn.instructables.com/FBZ/QWUA/JTT5LQFW/FBZQWUAJTT5LQFW.LARGE.jpg"], "step_title": "Step 6: Assemble Laser Diode Housing"}, {"step": 7, "steps_text": "Once the 128 laser diodes have been put in their housing, it's time to attach them to the jacket. First, open up the jacket lining to get access to the inner jacket shell. It's best to keep as much of the lining intact as possible as the lining provides shielding from the cabling to your skin when wearing the jacket and also provides a convenient place to put the electronics out of sight.\nI've found that taking the stitches out of the middle back is best. The opening can be closed off later with snaps or Velcro.\nA pattern is first marked on the outside of the jacket to decide where to place each of the laser diodes. I initially did this with tape. After the first few rows had been placed, I found the tape was mostly not necessary as it's easy to judge where the to place the laser diodes by eye.\nUse a middle plate of the laser housing as a guide to poke four holes per laser diode in the jacket. The outer three holes are for the M2 screws to hold the housing in place and the center hole is for the laser diode wiring to go through. I use an antique walnut cracker but any sharp pointed object will do to create the holes in the jacket.\nThe center hole for the cable needs to be bigger than the rest as the JST 1.25mm male header is bigger than the M2 screws. I've found that enlarging the hole with a pair of needle nose pliers works well.\nOnce the laser diode housing's cable and three M2 screws have been fed through the holes, the inside of the jacket shell needs to be accessed to attach a middle housing plate to the M2 screws that are now poking through. For the fist few rows of the laser diodes, the jacket arm might need to be turned inside out but as the laser diodes are attached further up the arm, it's possible to get access to them without completely turning the arm inside out.\nWhen turning the arm inside out, take care to try not to damage the laser diodes. The laser diodes in their housings should be moderately resilient (after all, that's one of the reasons they were designed) but it's best to still be as careful as possible.\nWhen the underside has been accessed, place a center laser housing plate on the bottom, feeding the M2 screws through the three holes and the laser diode cable through the center. Screw the plate on with three M2 screws.\nOnce all the laser diodes have been attached, if possible, test each laser diode to make sure they still function.\nTesting earlier in the process helps weed out potential problems down the line. Engineering and electronics are hard to do in general and when there's the added element of electronics attached to clothing that's bending, bumping, moving and flexing, it makes it all that much more probable that failure occurs.\nConsidering the quantity of elements involved in the project, failure can be expected, so make sure to have a few extra laser diodes on hand so that when failures are detected, the laser diodes can be replaced.\nUnderstand that component failure is part of the process and don't get demotivated when things break or don't initially work. Failure is to be expected, planned and compensated for by testing and making sure there are replacement parts handy.\nOnce all the laser diodes are attached and we have some reasonable expectation that they function, it's time to move on to creating the electronics that will drive the laser diodes.", "step_imgs": ["https://cdn.instructables.com/FMC/J1D1/JTT5LQGU/FMCJ1D1JTT5LQGU.LARGE.jpg", "https://cdn.instructables.com/F5F/O1UI/JTT5LQHV/F5FO1UIJTT5LQHV.LARGE.jpg", "https://cdn.instructables.com/FL0/VYLV/JTT5LQJG/FL0VYLVJTT5LQJG.LARGE.jpg", "https://cdn.instructables.com/FS1/7AD4/JTT5LQJJ/FS17AD4JTT5LQJJ.LARGE.jpg", "https://cdn.instructables.com/FWK/LPO8/JTT5LQMK/FWKLPO8JTT5LQMK.LARGE.jpg", "https://cdn.instructables.com/F84/5UPK/JTT5LQNI/F845UPKJTT5LQNI.LARGE.jpg", "https://cdn.instructables.com/FN0/0Z7Z/JTT5LQOF/FN00Z7ZJTT5LQOF.LARGE.jpg", "https://cdn.instructables.com/FDL/HLRQ/JTT5LQOG/FDLHLRQJTT5LQOG.LARGE.jpg", "https://cdn.instructables.com/FY9/C71L/JTT5LQPD/FY9C71LJTT5LQPD.LARGE.jpg", "https://cdn.instructables.com/FQW/DIXL/JTT5LPVS/FQWDIXLJTT5LPVS.LARGE.jpg", "https://cdn.instructables.com/F01/AOXC/JTT5LPX7/F01AOXCJTT5LPX7.LARGE.jpg", "https://cdn.instructables.com/F2F/R7BN/JTT5LPX9/F2FR7BNJTT5LPX9.LARGE.jpg"], "step_title": "Step 7: Attach Laser Diodes to Jacket"}, {"step": 8, "steps_text": "The electronics are a pair of PCA9685 PWM controllers which are themselves controlled by an Arduino Nano. A microphone is hooked up to the Nano to allow for ambient sound input, music for example, and a joystick with a button is provided for some control.\nThe joystick button is used to control which 'mode' the jacket display is in. Currently, there are three modes:\nTwinkle - loops the laser diodes in a 'twinkle' pattern\nGraphic Equalizer - use the microphone input to get graphic equalizer data to control the laser diode project pattern\nJoystick Controlled - use the joystick to control the laser diodes directly Each output line of the PWM driver is fed into four laser diodes.\nThe laser diodes are powered by a 5V 3A \"battery elimination circuit\" (BEC). The Arduino Nano and all of the logic on the peripherals are powered by a 5V buck converter. The BEC and buck converter are powered by a LiPo 2s battery. The battery has an attachment of a 3A fuse and power toggle.\nAs stated above, the fuse is a safety precaution to make sure that any accidental short circuit doesn't result in a catastrophic and potentially hazardous failure. The power toggle is provided for ease of use.", "step_imgs": ["https://cdn.instructables.com/FKS/C10F/JTT5LPIV/FKSC10FJTT5LPIV.LARGE.jpg"], "step_title": "Step 8: Electronics Assembly"}, {"step": 9, "steps_text": "For safety and convenience reasons, a cable for the 2s LiPo battery is created and connected. It's sometimes easy to accidentally create a short when soldering or prototyping. Should a short happen without a fuse in line with the LiPo battery, the battery often has the potentially to push upwards of 25A through the connection.\nWhen prototyping, I've accidentally created a short and had one of the wires heat up and explode, causing the wire shielding to catch fire. With the fuse in place, I've had no fires or explosions, so I would highly recommend putting this safety feature in.\nI've found the 20 AWG fuse holder to be a good wire size. Larger gauges become unwieldy to attach to other cables.\nSolder one end of the 20 AWG fuse holder into the positive lead of a female XT30 connector. In line with the fuse holder, on the end that isn't connected to the battery, solder a power toggle switch wire. For both, make sure to feed the heat shrink on before soldering.\nFor all attached wiring, I think the Lineman splice is a good technique to strive towards. When the wires are wrapped together well, add drop of flux and solder them together. Once soldered, give the wires a decent yank to make sure they're attached well.\nOnce the wires are attached firmly, feed the heat shrink tubing onto them and use the heat gun to shrink the tubing over the soldered joint. If you don't have any heat shrink tubing or forgot to put it on, wrap the exposed solder joint in electrical tape to make sure it's isolated.\nI put electrical tape around the bottom of the toggle switch to make sure any exposed leads are covered.\nAttach another lead to the negative end of the XT30 connector, making sure to match the length of the fuse, toggle and end connector.\nCreate a 2 wire end connector with a JST 2.5mm male end. I've found a 24 AWG stranded wire to be a good option for this.\nAs before, I believe attaching the JST 2.5mm male 2 wire connector to the battery wiring with a Lineman splice is best. Once the wires have been spliced together, add a drop of flux and solder them together, making sure to put the heat tube on before soldering. Give the connection a yank to make sure the joint is good, re-soldering if necessary.\nOnce the connector is soldered on, move the heat tubing over the exposed joint and use the heat gun to shrink the heat tubing in place.\nI've found the cabling to be a bit loose, so I put a few cable ties to keep it as clean and self contained as possible.\nMake sure to put a 3A fuse into the fuse holder.\nAttach the battery to the power cable.", "step_imgs": ["https://cdn.instructables.com/FZ5/9UZD/JTT5LR0H/FZ59UZDJTT5LR0H.LARGE.jpg", "https://cdn.instructables.com/FL1/533L/JTT5LR0I/FL1533LJTT5LR0I.LARGE.jpg", "https://cdn.instructables.com/FVW/73FM/JTT5LR0J/FVW73FMJTT5LR0J.LARGE.jpg", "https://cdn.instructables.com/F8J/W109/JTT5LR0K/F8JW109JTT5LR0K.LARGE.jpg", "https://cdn.instructables.com/FU6/7DWY/JTT5LR0P/FU67DWYJTT5LR0P.LARGE.jpg", "https://cdn.instructables.com/FJU/XSLC/JTT5LR1K/FJUXSLCJTT5LR1K.LARGE.jpg", "https://cdn.instructables.com/FPZ/QMQ2/JTT5LR1L/FPZQMQ2JTT5LR1L.LARGE.jpg", "https://cdn.instructables.com/FIQ/2Y20/JTT5LR1P/FIQ2Y20JTT5LR1P.LARGE.jpg", "https://cdn.instructables.com/FN9/GN2X/JTT5LR1S/FN9GN2XJTT5LR1S.LARGE.jpg", "https://cdn.instructables.com/FD8/4CDW/JTT5LR1O/FD84CDWJTT5LR1O.LARGE.jpg", "https://cdn.instructables.com/FIH/AXIJ/JTT5LR1W/FIHAXIJJTT5LR1W.LARGE.jpg", "https://cdn.instructables.com/FSS/1OXS/JTT5LR1Z/FSS1OXSJTT5LR1Z.LARGE.jpg", "https://cdn.instructables.com/FF7/NDDB/JTT5LR20/FF7NDDBJTT5LR20.LARGE.jpg", "https://cdn.instructables.com/FGE/AC3V/JTT5LR21/FGEAC3VJTT5LR21.LARGE.jpg"], "step_title": "Step 9: Power Cable"}, {"step": 10, "steps_text": "We'll now build the breakout board for the power regulators. I haven't measured but I suspect the laser diodes can draw up to 5mA each (which is their rating), making the whole system draw around ~.75A as an upper bound.\nSince the power draw is significant and highly variable for the laser diodes compared to the power draw of the rest of the electronics, separate regulators have been used to make sure the laser diode power and the electronics power are as isolated as possible. Without this isolation, the Arduino might star to act weird and other input devices might function incorrectly due to to the noisiness of the circuit.\nThe breakout board diverts power from the batter to a 5V buck converter and to the 5V 3A BEC. The 5V buck converter powers the Arduino Nano and other logic circuits. The 5V 3A BEC powers the laser diodes.\nSometimes regulators fail so it's nice to have them be swappable as much as possible.\nFor the 5V buck converter, solder four 2-pin headers at the appropriate positions. For the BEC, cut off the ends and re-attach two 2-pin JST 2.5mm male headers, making sure the positive lead is on the left side of the header if looking at the header with the notch side visible.\nSolder two 6x1 row female headers onto the protoboard. Make the vertical spacing of the headers a matching distance to the height of the buck converter. The headers will provide the seating for the buck converter.\nSolder five 2-pin female headers to the protoboard, one at the top for the battery power in, three on the right for the battery power out to the BEC and one last one on the left for the output of the 5V regulator.\nTwo of the three 2-pin female headers on the right are for the input and output of the BEC. The last 2-pin female header is for the output of the BEC that goes to power the laser diodes.\nUse connecting wires to make sure all power is routed to the appropriate places.", "step_imgs": ["https://cdn.instructables.com/FP0/QRTF/JTT5LR08/FP0QRTFJTT5LR08.LARGE.jpg", "https://cdn.instructables.com/FL6/SB47/JTT5LR09/FL6SB47JTT5LR09.LARGE.jpg", "https://cdn.instructables.com/FM4/K46Y/JTT5LR0A/FM4K46YJTT5LR0A.LARGE.jpg", "https://cdn.instructables.com/F7Q/VNGU/JTT5LR0B/F7QVNGUJTT5LR0B.LARGE.jpg", "https://cdn.instructables.com/F0I/E40Z/JTT5LR0C/F0IE40ZJTT5LR0C.LARGE.jpg", "https://cdn.instructables.com/F3V/CS34/JTT5LR0D/F3VCS34JTT5LR0D.LARGE.jpg", "https://cdn.instructables.com/FKO/6MUJ/JTT5LR0E/FKO6MUJJTT5LR0E.LARGE.jpg", "https://cdn.instructables.com/FMK/Z925/JTT5LR0F/FMKZ925JTT5LR0F.LARGE.jpg", "https://cdn.instructables.com/FQO/LYKK/JTT5LR0G/FQOLYKKJTT5LR0G.LARGE.jpg"], "step_title": "Step 10: Power Regulators"}, {"step": 11, "steps_text": "An Arduino Nano provides the main processing intelligence that takes input from the microphone and joystick and communicates with the PWM drivers.\nThe basic layout of the circuit is to breakout the appropriate pins to route to the I2C lines for the PWM controllers, input lines to read the joystick and button, an input line for the microphone and power routing to the various portions of the breakout that need it.\nThe only extra component is the 10k resistor to make sure the button line on the joystick floats high.\nWhen soldering, make sure to use flux as it helps solder flow and prevent cold joints. As a general rule, testing continuity with the multimeter is a good idea. As a basic precaution, make sure that power and ground are isolated by confirming there is no continuity between them.\nAfter soldering is completed, clean up the bottom by removing any excess wiring.\nOnce the breakout is ready, put two 1x15 header rows into the female headers. Put the Arduino Nano through the short end of the 1x15 headers, apply flux and solder the headers to the Arduino Nano. Seating the male header in the female header makes sure it's aligned properly.\nOnce the headers for the Arduino Nano are soldered on and placed in the breakout board, we can program it.", "step_imgs": ["https://cdn.instructables.com/FPS/FPNF/JTT5LPAO/FPSFPNFJTT5LPAO.LARGE.jpg", "https://cdn.instructables.com/FVE/1VU4/JTT5LPAP/FVE1VU4JTT5LPAP.LARGE.jpg", "https://cdn.instructables.com/F2I/L8ZS/JTT5LPAQ/F2IL8ZSJTT5LPAQ.LARGE.jpg", "https://cdn.instructables.com/FZ2/D8WB/JTT5LPCU/FZ2D8WBJTT5LPCU.LARGE.jpg"], "step_title": "Step 11: Arduino and Input Breakout"}, {"step": 12, "steps_text": "Connect the Arduino Nano to the computer with a USB cable and start the Arduino IDE. If not already installed, install the Adafruit PWM library and the Fourier transform, ffft, library. If the libraries aren't available through the IDE, download a zip of each of the libraries and place them in the Arduino library directory. See the Arduino reference on libraries for more information.\nThe Adafruit PWM servo driver is used to communicate to the PCA9685 PWM drivers. The ffft library is used in Adafruit's Piccolo music visualizer project to provide a graphic equalizer. The Piccolo project has a lot of pre-set values to make sure the graphic equalizer is visually interesting so it's a good starting point to analyze microphone data and do visualization.\nThe laser-spike program has a DEBUG flag that can be created to see serial output for debugging purposes. Later, when the breakout board for the laser diodes is created, we'll test to make sure things look good. If for some reason things aren't working down the road, uncommenting the DEBUG keyword can help track down where the error is occurring.", "step_imgs": ["https://cdn.instructables.com/FZW/45KM/JTT5LR2W/FZW45KMJTT5LR2W.LARGE.jpg", "https://cdn.instructables.com/F0C/MX6X/JTT5LR3L/F0CMX6XJTT5LR3L.LARGE.jpg", "https://cdn.instructables.com/FJK/3EGF/JTT5LR4K/FJK3EGFJTT5LR4K.LARGE.jpg"], "step_title": "Step 12: Programming the Arduino Nano"}, {"step": 13, "steps_text": "The PCA9685 PWM controllers are not directly soldered on to the protoboard, instead they are seated on headers. The laser diodes aren't directly driven by the PWM controller and are powered by 2n2222 transistors whose gate is connected to the PWM controller output.\nEach PCA9685 PWM controller sits in it's own proto-board. Each line out of the PCA9685 PWM controller feeds into the gate of a 2n2222 transistor. The transistor then provides power to the laser diode. There are 16 lines out of each PCA9685 PWM controller so 16 2n2222 transistors are needed.\nThe line coming out of the 2n2222 transistor is used to power the laser diode through a female JST 2.5mm connector. The board's laser diode power is fed by the 5V 3A BEC output. The PWM controller's logic circuitry is powered by the 5V buck converter but is provided by the 6-pin connector that's used for it's I2C connection.\nThere are two PWM controllers, each with their own proto-board. One PWM controller will be housed with the Arduino Nano breakout and the power regulator breakout. The other PWM controller will be on it's own housing and eventually placed on the other side of the jacket.\nEach PWM controller is located on either side of the jacket to provide better access to the laser diodes they will drive.\nEach of the PWM controller is in charge of controlling 64 laser diodes. Since each output line of the PCA9685 PWM controller only has 16 lines, each output line provides power to a group of 4 laser diodes (16 * 4 = 64). The two PCA9685 PWM controllers control 64 laser diodes each which drives the total 128 laser diodes.\nAs a note, even with the large proto-board the PWM controller is housed in, space is still a concern for the wiring. I've found that using the top and bottom of the proto-board helps keep wire management under control. The way I've wired the control lines from the PWM controller output to the transistors means that the solder points of the wires will fall in the middle of other lines above it. To make sure that soldering doesn't damage the wires, I've found staggering the soldering, first doing only one side of the top and bottom wires, then progressing further down, is a better method than soldering a complete top or bottom at once.", "step_imgs": ["https://cdn.instructables.com/F0H/CTBS/JTT5LPAN/F0HCTBSJTT5LPAN.LARGE.jpg", "https://cdn.instructables.com/FAD/3YOJ/JTT5LRFM/FAD3YOJJTT5LRFM.LARGE.jpg"], "step_title": "Step 13: PWM Breakout"}, {"step": 14, "steps_text": "Since there are two PCA9685 PWM controllers which are in communication with the Arduino Nano, they need to have separate addresses since they share the communication lines (also known as a 'bus'). On only one of the PCA9685 PWM controller, connect the low bit on the 'address' breakout pad. For the single PCA9685 PWM controller, this will change it's address to 0X41 (from the default 0x40) so the Arduino Nano can address it independently.\nSolder headers onto each of the two PCA9685 PWM controllers. Since we're only interested in the PWM output, only solder a single row of 1x4 headers for each of the four PWM output groupings on each of the PWM controllers. This will be the way the PCA9685 PWM controllers are seated on the breakout board. I find that using the same trick of seating the headers in the female headers where they'll eventually reside helps keep them straight when soldering.\nI use a JST 2.5mm, oriented and locking 6 pin female connector on either side of the PCA9685 module. In order to keep cable ordering the same, one female header is soldered to the top on the other to the bottom of the PCA9685 module.", "step_imgs": ["https://cdn.instructables.com/F2Q/02VX/JTT5LR5H/F2Q02VXJTT5LR5H.LARGE.jpg", "https://cdn.instructables.com/F67/SOHP/JTT5LR5L/F67SOHPJTT5LR5L.LARGE.jpg", "https://cdn.instructables.com/FSM/KKEN/JTT5LR6J/FSMKKENJTT5LR6J.LARGE.jpg", "https://cdn.instructables.com/FFX/I1ZR/JTT5LP8K/FFXI1ZRJTT5LP8K.LARGE.jpg", "https://cdn.instructables.com/F0X/EUAY/JTT5LR8E/F0XEUAYJTT5LR8E.LARGE.jpg", "https://cdn.instructables.com/FXH/LQF5/JTT5LR9B/FXHLQF5JTT5LR9B.LARGE.jpg", "https://cdn.instructables.com/FJE/H6SU/JTT5LRA8/FJEH6SUJTT5LRA8.LARGE.jpg", "https://cdn.instructables.com/F7W/MLNL/JTT5LRAA/F7WMLNLJTT5LRAA.LARGE.jpg", "https://cdn.instructables.com/F2Y/44QV/JTT5LRBA/F2Y44QVJTT5LRBA.LARGE.jpg", "https://cdn.instructables.com/F9S/VF2T/JTT5LRC7/F9SVF2TJTT5LRC7.LARGE.jpg", "https://cdn.instructables.com/FY6/T6XF/JTT5LRD4/FY6T6XFJTT5LRD4.LARGE.jpg", "https://cdn.instructables.com/F36/1WLS/JTT5LREX/F361WLSJTT5LREX.LARGE.jpg", "https://cdn.instructables.com/FKF/PQ59/JTT5LREY/FKFPQ59JTT5LREY.LARGE.jpg", "https://cdn.instructables.com/FAG/A0EE/JTT5LRF0/FAGA0EEJTT5LRF0.LARGE.jpg", "https://cdn.instructables.com/F0V/259U/JTT5LRF8/F0V259UJTT5LRF8.LARGE.jpg"], "step_title": "Step 14: PCA9685 Module Soldering and Addressing"}, {"step": 15, "steps_text": "Once the headers have been attached, create two 6 wire cables, one about 20cm in length and the other about 75cm. I used an oriented, locking JST 2.5mm 6 pin connector. Make sure the wire ordering from the breakout of the Arduino Nano cable onto the PCA9685 module lines up correctly. If for some reason the orientation was reversed or jumbled, re-order the cable wiring to accommodate.\nI like to use a cable shroud for long cables to keep them from tangling. I also try and use different colored cables to differentiate what their function is and to make it easier to determine if there was a cable ordering mismatch.", "step_imgs": ["https://cdn.instructables.com/F6X/83KS/JTT5LPYO/F6X83KSJTT5LPYO.LARGE.jpg", "https://cdn.instructables.com/F55/CO06/JTT5LPZD/F55CO06JTT5LPZD.LARGE.jpg", "https://cdn.instructables.com/F71/J5TT/JTT5LPEB/F71J5TTJTT5LPEB.LARGE.jpg"], "step_title": "Step 15: PCA9685 Module Cabling"}, {"step": 16, "steps_text": "The laser diodes are grouped into four that are powered and controlled from a single PWM driver line. The cables for this are a JST 2.5mm male header on one end that break out into 4 JST 1.25mm female headers. As much as possible, I try to use a Lineman splice and cover each connection with heat shrink tubing. Electrical tape can be used if heat shrink tubing is not available or wasn't put on before soldering.\nEach length of wire should be measured to be the approximate length of the grouping of four laser diodes to the electronics housing. This means the wires for the laser diodes at the end of the arm should be longer than the shoulders or back.\nEach of the wires is put in a cable sleeve to prevent tangling. I've found 1/4\" braided sleeving works well.\nTo help route the sleeved wires through the arm and middle interface between the outer shell jacket and inner lining, I attached cable clamps, closed off with a cable-tie, that attach to some floating excess fabric on the inside of the arm of the jacket.\nCare has to be taken to make sure the wiring is fed out of the arm properly. If the wiring loops around the lining, this will pinch the opening where an arm would go through making the jacket hard to put on and use.\nI tried labeling the wires so that I could trace back which group belonged to which wire but I didn't have much success.\nI would suggest testing the laser diodes with a CR2032 battery to make sure the laser diodes still work after installation and hookup.\nOnce all the laser diodes are connected to their respective wires, it's time to start the final assembly.", "step_imgs": ["https://cdn.instructables.com/FIB/O9PO/JTT5LRGK/FIBO9POJTT5LRGK.LARGE.jpg", "https://cdn.instructables.com/F60/UFDP/JTT5LPEC/F60UFDPJTT5LPEC.LARGE.jpg", "https://cdn.instructables.com/FEF/TN6Q/JTT5LPFT/FEFTN6QJTT5LPFT.LARGE.jpg"], "step_title": "Step 16: Wiring and Routing for the Laser Diodes"}, {"step": 17, "steps_text": "Before going further we need to pause and make sure things are working properly. Before now, we could only really get a sense for whether things had worked by doing continuity or testing individual components. This will be a full 'integration test' that will test nearly the whole system before a full installation.\nThe test is imperfect but helps track down some common errors early on. The final test is, of course, whether it works after full assembly. The tests here are designed to make sure we're confident that the system is behaving well enough to proceed to the next step.", "step_imgs": [], "step_title": "Step 17: Testing"}, {"step": 18, "steps_text": "Pick a spare laser diode out of the pile that's handy. Take a CR2032 battery and use it to make sure the laser diode is functional by pressing the exposed leads of the laser diode to the top and bottom of the battery. The red wire should be on the 'top' of the CR2032 (the positive lead) and the black or blue wire should be on the bottom (negative) end of the battery. The laser diode should dimly light up.\nMake a temporary test cable that consists of a JST 2.5 2pin male header with two disconnected wires coming out on the end. Strip the ends of these two wires and take a spare laser diode.\nThe exposed leads of the stripped ends of the header cabling will be used to test the laser diode on each of the connections out of the PCA9685 breakout boards.", "step_imgs": [], "step_title": "Step 18: Testing Prep"}, {"step": 19, "steps_text": "Make sure the Arduino Nano and other electronics are powered. After the power is turned on, an LED on the Arduino Nano should show as well as various LEDs on the BEC and the PCA9685 modules to indicate they are working.\nConnect the JST 2.5 2pin header and wires created above to an output header on the PWM driver breakout board. Connect the laser diode to the exposed wires and confirm that it's being powered.\nThe default mode of the Arduino Nano should be the 'twinkle', so the laser diode should run through a cycle of ramping up power then going dim. Wiggle the laser diode connection gently to make sure there are no loose connections that would cause a power outage.\nGo through each connection to make sure they all work.\nIntermittent failures here will most likely crop up into outright failures down the road. Putting electronics into clothing and jostling them around provide ample opportunity for intermittent failures in a stable testing and development environment to become permanent failures in a real world environment.\nFixing issues at this stage, even if intermittent or hard to reproduce, will save heartache down the line when disassembly and debugging will be even more difficult.\nSee the \"Common Errors\" section on help tracking down problems should any occur.", "step_imgs": ["https://cdn.instructables.com/F85/Q564/JTT5LRF9/F85Q564JTT5LRF9.LARGE.jpg", "https://cdn.instructables.com/FKK/MMF9/JTT5LRFF/FKKMMF9JTT5LRFF.LARGE.jpg"], "step_title": "Step 19: Laser Diode Connector Testing"}, {"step": 20, "steps_text": "Routing and giving structural support for cables in the jacket helps with wear and wearability.\nAll wires that aren't soldered directly to proto-boards are stranded. With the exception of some of the battery wiring, all wire is 25 AWG. Where possible wires are put into a wire shroud to make sure they don't get tangled.\nExcept for the direct connections to the lasers, all headers are JST 2.5mm, locking and oriented. As previously stated, the locking is necessary to prevent disconnection from strain or movement. The orientation provides a safety check to make sure shorts or improper connections don't occur.\nMultiple layers of strain relief are provided to try and minimize the possibility of wire fraying or solder joint breakage. The electronics housing have strain relief supports to route cables through to provide strain relief from the soldered connectors. The jacket have cable clamps to guide the cables and provide support. The laser diode housing provides strain relief for the laser diodes.\nEven with all the strain relief and cable routing, it's possible to tear wires or break connections. Some care has to be taken when putting on the jacket to not catch fingers on wires through the lining. The jacket is resilient enough to wear and dance around in but motions that are too jarring or impact that is too high will cause damage.", "step_imgs": ["https://cdn.instructables.com/FM9/ZVX8/JTT5M88H/FM9ZVX8JTT5M88H.LARGE.jpg", "https://cdn.instructables.com/FJX/47DW/JTT5M88C/FJX47DWJTT5M88C.LARGE.jpg"], "step_title": "Step 20: Cabling and Connections"}, {"step": 21, "steps_text": "Power from the regulators needs to get to the Arduino and PWM controllers. The Arduino Nano also needs to communicate to the PWM drivers. The joystick and microphone need extension cables.\nThe laser diode power cabling is a group of four 2-pin JST 2.5mm male connectors. At least one length should be 75cm with the rest being in the range of 20cm. The Arduino Nano power cable is a short 20cm cable of 2-pin JST 2.5mm male connectors. The right PWM controller also needs a short 20cm 2-pin JST 2.5mm male connector cable.\nThe joystick connector is a length of about 50cm of a five wire JST 2.5mm pair of male headers.\nThe microphone connector is a length of about 50cm of a 3pin JST 2.5mm pair of male headers.\nThe PWM controllers need two cables of 6 wires, one of length about 20cm and the other of length about 75cm. They each have ends that are 6 pin male JST 2.5mm headers.\nAll headers are oriented and locking.\nAll cables should be made out of 25 AWG stranded wire. Solid core wire is too stiff and not only restricts movement but has the potential to fray and break. The stranded wire is much more moveable and is better suited to providing power and communication between elements that don't reside on the same proto-board.", "step_imgs": ["https://cdn.instructables.com/FOL/FO6Y/JTT5LQZ4/FOLFO6YJTT5LQZ4.LARGE.jpg", "https://cdn.instructables.com/F6X/7PS2/JTT5LR03/F6X7PS2JTT5LR03.LARGE.jpg", "https://cdn.instructables.com/FMA/PI8L/JTT5LR07/FMAPI8LJTT5LR07.LARGE.jpg"], "step_title": "Step 21: Power, I2C, Joystick and Microphone Connections"}, {"step": 22, "steps_text": "The PWM driver, along with other electronic components, such as the power converters and Arduino Nano, are seated in a laser cut electronic housing, consisting of two laser cut wood panels that have plastic tubing in the middle for spacing. The electronic housing is joined with various M3 screws. The M3 screws provide double duty, acting as spacers for the two housing panels and also provide support for the proto-board.\nThe other PWM driver will be located closer to the other arm and has it's own housing.\nBefore closing the electronics housing make sure all wires are attached. This means the microphone, joystick, power cable, I2C cable and all the laser diode connections for the left arm are attached.\nIt's a good idea to do a test run of the all the electronics connected to the laser diode to make sure things are working properly before the electronics housing is closed off and installed in the jacket.", "step_imgs": ["https://cdn.instructables.com/FJG/BVTU/JTT5LPKD/FJGBVTUJTT5LPKD.LARGE.jpg", "https://cdn.instructables.com/FBL/SYMU/JTT5LPLV/FBLSYMUJTT5LPLV.LARGE.jpg", "https://cdn.instructables.com/FW2/630N/JTT5LPMM/FW2630NJTT5LPMM.LARGE.jpg", "https://cdn.instructables.com/F2Y/W09K/JTT5LPQW/F2YW09KJTT5LPQW.LARGE.jpg", "https://cdn.instructables.com/FTF/NE84/JTT5LPIS/FTFNE84JTT5LPIS.LARGE.jpg", "https://cdn.instructables.com/FYN/3ZDM/JTT5M95P/FYN3ZDMJTT5M95P.LARGE.jpg"], "step_title": "Step 22: Electronics Housing"}, {"step": 23, "steps_text": "Once the electronic housing enclosures are bolted together, the wires should be wrapped around the strain relief gadgets on the top of the housing. This is necessary because stresses from normal movement will wear the connectors on the protoboard and could cause loose connections, breaks in power and other failures.\nThe clamp should be screwed down so that it can withstand a decent yank from the wires.\nEventually, blue loctite should be put on all the bolts that need to be kept in place. This shouldn't be done until there's enough confidence that the jacket is ready to wear as the nuts are hard to get off after the loctite is applied.", "step_imgs": ["https://cdn.instructables.com/F1A/626B/JTT5LPIT/F1A626BJTT5LPIT.LARGE.jpg"], "step_title": "Step 23: Strain Relief"}, {"step": 24, "steps_text": "Place the electronics enclosures in the middle between the jacket outer shell and the inner jacket lining. Use Velcro ties to make sure the electronics enclosures are securely in place.\nFeed the microphone out to a place that can be exposed to sound, puncturing a hole if need be. The joystick can be fed through the arm or be kept on the inside of the jacket, depending on preference.\nUse either Velcro or snaps to close the lining that was cut open.\nOnce all the components are in place, try wearing the jacket to make sure things are working properly. The connections should be resilient to moderate use but a little care should be taken to make sure no excessive wear or strain is put on the components.\nIf there are any failures, either in the whole system or individual laser diodes, work through each until everything is working as expected. See the section \"Common Errors\" to work through some problems I tend to encounter.", "step_imgs": ["https://cdn.instructables.com/FG9/LRWS/JTT5LPSH/FG9LRWSJTT5LPSH.LARGE.jpg", "https://cdn.instructables.com/FV9/F873/JTT5LPTF/FV9F873JTT5LPTF.LARGE.jpg", "https://cdn.instructables.com/F7D/VJMX/JTT5LPTG/F7DVJMXJTT5LPTG.LARGE.jpg", "https://cdn.instructables.com/FO4/G9YB/JTT5LPTI/FO4G9YBJTT5LPTI.LARGE.jpg", "https://cdn.instructables.com/FMC/NURR/JTT5LPUA/FMCNURRJTT5LPUA.LARGE.jpg", "https://cdn.instructables.com/FUN/1JDZ/JTT5LPUB/FUN1JDZJTT5LPUB.LARGE.jpg", "https://cdn.instructables.com/FML/V1VY/JTT5LPUC/FMLV1VYJTT5LPUC.LARGE.jpg", "https://cdn.instructables.com/FX8/WBLD/JTT5LPV1/FX8WBLDJTT5LPV1.LARGE.jpg"], "step_title": "Step 24: Final Placement and Installation"}, {"step": 25, "steps_text": "Once all the issues are worked out, wear it!", "step_imgs": [], "step_title": "Step 25: Wear It"}, {"step": 26, "steps_text": "There are some major points of interest that I believe are worth mentioning. Here is a list, in no particular order:\nThe laser diodes are 5mW and don't pose a significant risk to people's eyesight. Though people shouldn't stare directly into the laser diode, it's akin to staring straight into a flashlight...bad if done without looking away but no real danger of being blinded by accident.\nStrain relief is a must for all components involved. Without it, wires coming out of the laser diodes would be pulled off and connections on the protoboard would weaken.\nMaking sure the proto-board is backed onto a more stable substrate, like the laser cut wood housing, prevents flexing from the proto-board, which helps mitigate breaks, weak joints and other failures from occurring.\nThe LiPo battery has a fuse in line with it preventing more than 3A to be produced. A friend suggested I do this after setting many of my projects on fire. Since I've been using the fuse in line with the LiPo, I'm happy to report that I haven't had one wire explode or any of my jackets catch on fire.\nWithout putting the main driving electronics on a separate regulator from the main power draw I've had the noise cause major problems, especially when there's communication or audio sensing involved. In this project and others, I make sure to power the electronics components (the Nano, PWM controllers, etc.) from a 5V regulated buck converter and the main power components, in this case the laser diodes, from another regulator, in this case the 5V 3A BEC.\nIn general, I like oriented and locking headers, especially for power connections. The orientation prevents accidentally inverting the ground and power. The locking mechanism prevents connections from coming loose. Since the electronics are to be worn, the locking mechanism prevents the headers from coming out if the assembly is jostled. If it's necessary to make connections in the field, the orientation helps prevent mis-wiring.\nFor anyone attempting this project, understand what you're getting into. I have enough of a risk affinity to not mind the dangers but for others who might be more risk averse, understand that the LiPo batteries involved in this project could cause severe bodily damage.\nThe LiPo battery has enough power to catch fire, explode and otherwise cause potentially sever bodily damage.\nI personally believe the technology is safe enough to use (I am happy to wear the jackets I make) but shorts can cause fires, water exposures can cause shorts or other potentially hazardous situations and battery puncture or rupture could cause severe bodily damage.\nBefore I started using fuses as a safety measure, I've had wires explode and jackets catch fire because of shorts in my wiring (only in development, never while actually wearing them out to events).\nDo your research to make sure you understand the risks involved and what level of risk you are comfortable with.\nHere's a short list of what I think were the major drawbacks that I ran into with my approach and what I would do differently:\nThe housing for the laser diodes is laser cut out of black 1/16\" acrylic sheets. The acrylic is brittle and breaks easily. The strain relief plate often cracks when screwing the housing in place. In any potential future iteration, I would try to use either 3d printing a housing or laser cut wood which then could be spray painted for color and wear resistance.\nThe protoboards are large and clunky. I would try to fabricate a custom PCB to reduce size, cost and time.\nOn one arm, I put each PWM line into it's own sheathing and for the other I put two PWM lines through a single sheath. Doubling up the PWM lines per housing sheath uses a lot less space and the right arm is significantly easier to move and put my arm into.\nThe Arduino has intermittent crashes which are hard to replicate and debug. In the future, I would try to put in a watchdog timer to make sure it doesn't get into a bad state as well as put ferrite cores onto critical lines to try to help reduce noise introduced by other components.\nFastening the electronics housing to the jacket is done in a haphazard way. In the future I would try and come up with a solution that more securely fastens each housing onto the jacket.\nThe laser diode wires were loose, to a certain degree, in the jacket lining interface. It might be better to staple these to the jacket to make sure they're more secure and won't interfere with hands or arms.\nThe screws that poke through the jacket aren't comfortable and take up unnecessary space. Either choosing an appropriate length for the screw or cutting them to size as well as providing a blunt end to make sure they aren't poking into the wearer might be worthwhile.", "step_imgs": [], "step_title": "Step 26: Final Design Notes"}, {"step": 27, "steps_text": "Things catch fire:\nA potential cause could be a short causing wires to heat up and catch their insulation or surrounding flammable material on fire.\nMake sure to install a fuse on the battery so that the fuse will blow on a short condition instead of wires or other electronics.\nTest continuity to track down the short. Make sure all the solder joints and area are clean of wire trimmings.\nThings don't power on:\nThis could be caused by a short or break in the power lines. Another possible source is a bad regulator or low battery. It's good practice to also make sure the battery is fully charged and seeing if a fully charged battery fixes the problem before trouble-shooting further.\nTo track down where the error is, consider the following steps:\nTest the batter is producing the voltage you expect (in this case the 2-3s battery output voltage should be in the 7.4V to 11.1V range). If not, charge the battery or use another that is fully charged.\nTest to make sure the fuse hasn't blown. If it has this could indicate a short in the power line so test for continuity to track down if there is a short in the power line. If not, replace the fuse and try again.\nMake sure the breakout board for power has the proper voltages at points you expect. This means testing with the multi-meter that the voltage on the board before the regulator is what's expected to come out of the battery. Test the output of each of the regulators to make sure the voltage is the expected 5V. Often regulators die or are bad so they might need to be replaced. Also make sure the regulators orientation is correct (there should be an 'input' side that connects to the battery side and an 'output' side that connects to the rest of the electronics).\nTest for continuity for the ground and power rails. That means every point on the other breakout boards that is power and ground should have continuity to the appropriate points on the source power output breakout board. If not, this could mean a bad connection on the breakout board in question or a wire that connects the power output.\nMost of the soldering is essentially power management and making sure the proper power and ground rails get to where they need to go. This means that the most common error is a short or break in the power lines (at least that's what I've found in my experience).\nIf power outages are still causing confusion, try disconnecting everything and then progressively connecting components until the failure occurs. For example, disconnect the power breakout board from the other electronics and make sure the regulators in isolation are being powered correctly. Once that's confirmed as working, add only the Arduino Nano breakout, then a single PCA9685 PWM module breakout, etc.\nThings power on intermittently:\nTo rule out the obvious, make sure the battery is fully charged to rule out an empty battery as a possibility. If the intermittent failures disappear with a full battery, this could mean the electronics is 'browning' and is easily fixed with replenishing the battery.\nIf recharging the battery does not solve the problem, this can be one of the more frustrating problems and is hard to track down and debug because the problem is often hard to reproduce. The most likely cause, in my experience, is a bad solder connection. A deformation of the proto-board or too much strain on the connectors causes the solder joint to weaken or crack. In certain orientations, there is physical contact creating the illusion of a proper functioning circuit, but if stresses are applied, the joint falls out of contact and components stop working or power as a whole is broken.\nIf this can be reproduced 'on the bench' then this can give a clue as to where the bad joint is. In general, it's good practice to go over the solder connections to make sure they look good. This means making sure there is plenty of solder on the joints and that through holes are filled with solder.\nI've also found light wiggling to help track down weak connections. In the end, the electronics need to be housed and strain relief needs to be provided or these types of failures will almost surely occur but even with minimal stress on the circuit, sometimes loose connections cause intermittent failures and should be tracked down as soon as possible to prevent headaches later on.\nThe Arduino keeps resetting:\nIn my experience, this is most likely to intermittent power and so the above strategy of looking for loose or bad connections should be used. In rarer occasions, electrical noise sometimes causes the Arduino and other problems in the peripheral electronics. Making sure the power is isolated by their own regulators is a good start but in the worst case, ferrite beads can be attached at choice locations to try and mitigate the noise.\nIf the failure can be reproduced consistently, this can give a good indication of what the underlying cause is.\nAlso, make sure the battery is fully charged to rule out an empty battery as a possibility.\nThe microphone/joystick isn't working:\nThe symptoms are that the joystick won't do anything (for example, not being able to change 'modes') and/or the graphic equalizer mode doesn't display anything. The first thing to check is that the microphone or joystick is connected on both ends. That is, check the cable is connected to the input device and the other end of the cable is connected to the Arduino breakout. If they are connected, make sure the wiring has been done correctly to ensure the wires on one end of the cable match to the wires being fed into the Arduino.\nIf the obvious troubleshooting techniques don't work, further investigation is needed.\nFor the joystick, connect the Arduino to your computer and turn on debugging. There should be output of what the joystick state is and make sure it's reading from the joystick.\nIf it looks like the Arduino still isn't seeing the joystick, make sure the cable and connections have continuity. Sometimes joysticks fail or are bad to begin with so in the worst case, use an Arduino in isolation to try and read from the analog pin that's connected to one of the joystick's axies to determine if it's the connection or the joystick that's failing.\nFor the microphone, do similar as above. Check the cabling for continuity and make sure to test continuity to test that the input pin is being fed to the proper Arduino pin and that power is being provided to the microphone module. The debug output for the Arduino Nano should also have microphone output so you can get a sense of whether there is something being read.\nThe graphic equalizer has a dynamic volume in software to make sure it's trying to be insensitive to volume differences and still produce output but it's limited in what it can do. Sometimes fiddling with the microphone volume meter will work better to create a more satisfying light show.\nMicrophone's fail or are sometimes bad, so a simple test is to try replacement to see if that fixes the issue. If things still aren't working, test the microphone in isolation with an Arduino that's hooked up to read from it.\nSome laser diodes don't work:\nThe scale of the project is such that failures will occur. Individual components could fail either because of loose connections, broken connections, burnt out electronics or other issues.\nFor the case of laser diodes, it's good practice to keep a few spare on hand so that if they do fail for whatever reason, they can be replaced easily. I've found it easier to remove non-working laser diodes and replace them outright than to fix broken laser diodes.\nWhen tracking down individual laser diode failures, make sure to test the laser diode to confirm it's not working, or working intermittently. If the replacement laser diode is still not functioning, this could point to a bad cable connection and so testing continuity on the cable is a good next step.\nIf the cable is the issue, replace that portion of it.\nSometimes the cabling is tight in the arms and through use the stresses of normal movement cause connections to break. Since the laser diodes are connected by a small JST 1.25mm connector, the connector should disengage rather than wire snapping or housing cracking. In this case, the connection can be re-established by re-connecting the laser diode to it's cable.\nIf the laser diode connection keeps getting disconnected, it might be good to choose a different connection, either positioning the cable differently, soldering an extension cable onto it or swapping connections with a neighboring laser diode, so that normal movement won't put as much strain on the connection.", "step_imgs": [], "step_title": "Step 27: Troubleshooting and Common Errors"}, {"step": 28, "steps_text": "This idea has been around for upwards of ten years (as of this writing). From what I can understand, the artist Wei Chieh Shih was the original artist that came up with the idea. It's been used by other celebrities like Bono and Rihanna. I decided to build my own since I thought the idea was interesting and I hadn't seen a 'DIY' version around, nor any source, schematics or building instructions.\nAll source code is available under a free/libre license (either AGPL, GPL, MIT or CC0). All design files, where appropriate, are available under a free/libre license (CC-BY, CC-BY-SA or CC0). These instructions themselves are available under a CC0 license.\nWhere appropriate, please feel free to modify, improve or use any of the assets described here. No credit is necessary.\nHappy Hacking!", "step_imgs": [], "step_title": "Step 28: Conclusion"}, {"step": 29, "steps_text": "Arduino Sketch\nFritizing Schematic\nLaser Housing OpenSCAD Design File\nElectronics Housing OpenSCAD Design File", "step_imgs": [], "step_title": "Step 29: Digital Artifacts"}, {"step": 30, "steps_text": "adafruit_products_MultiBoard_bb-1024.jpg by Bill Earl (CC-BY-SA) (src)\nadafruit_products_2012_10_13_IMG_0692-1024.jpg by Bill Earl (CC-BY-SA) (src)\nlaser-club-stage.png by Taimur Gibson (CC-BY-SA)", "step_imgs": [], "step_title": "Step 30: Credits"}, {"step": 31, "steps_text": "Make\n200 Laser Diode Stage Suite (behance)\nKazuya Yoshii\nWei Chieh Shih\nU2 - 360 at the rose bowl\nAdafruit PCA9685 PWM module (GitHub)\nAdafruit Piccolo Music Visualizer (GitHub)\nWestern Union Splice\nLeigh Buckley", "step_imgs": [], "step_title": "Step 31: References"}], "channel": ""}, {"category": "", "description": "What has 114 LEDs and is always running? As you may know the answer is a word clock. What has 114 LEDs + 114 servos and is always moving? The answer is this servo controlled word clock.\nFor this project I teamed up with a friend of mine which turned out to be a must because of the large effort of this build. In addition, my electronic and his mechanical skillset complemented each other quite well. The idea for this adaptation of the popular word clock came to us while we were making a regular one as christmas gift. There, we noticed that it is also possible to project the letters from the back onto a white sheet of paper. At the time this was only a workaround solution to hide our crappy craftsmanship since we ended up with a lof of bubbles while attaching a vinyl sticker with the letters to the back of a glass plate. We then noticed that one can achieve interesting effects when bending the sheet of paper since the letters change size and become blurred. This made us come up with the idea to make a word clock where the letters are projected from the back onto a screen and can be moved back and forth to change the size of the projected image. At first we were a bit reluctant to build this project because of the costs and effort it takes when you want to move each of the 114 letters individually. So we tossed with the idea to make a version where just every word that is used to display the time can be moved back and forth. However, after seeing that the Epilog contest was coming up on Instructables asking for epic projects, and also after finding relatively cheap servo motors, we decided to go all the way and make a proper version where each letter is individually controlled by a servo.\nATTENTION: This is not a one-day build!\nTo give you an idea about the effort that was involved in this project consider the following numbers. The finished clock contains\n798 individual 3D printed models (total printing time ~ 200 hours)\n~600 screws + ~250 nuts and washers\n~500 wires (total length ~ 50 m). Not counting the wires which were already attached to the servos.", "title": "Word Clock Controlled by 114 Servos", "url": "https://www.instructables.com/id/Word-Clock-Controlled-by-114-Servos/", "section": "technology", "steps": [{"step": 1, "steps_text": "The clock was designed with Autodesk Fusion 360 and Inventor. As you can see the clock consists of 114 letterboxes which are moved by linear actuators that are in turn driven by servo motors. Each letterbox contains an LED that projects the letter onto the back of a screen made of white PVC foil. All components are housed in a wooden frame.", "step_imgs": ["https://cdn.instructables.com/FED/3ESE/JTT5KFM6/FED3ESEJTT5KFM6.LARGE.jpg", "https://cdn.instructables.com/F9X/QFI7/JTT5KFLW/F9XQFI7JTT5KFLW.LARGE.jpg", "https://cdn.instructables.com/FT3/ULZC/JTT5KFLM/FT3ULZCJTT5KFLM.LARGE.jpg", "https://cdn.instructables.com/F3I/RUXO/JTT5KFLC/F3IRUXOJTT5KFLC.LARGE.jpg", "https://cdn.instructables.com/F8N/YW21/JTT5JSR4/F8NYW21JTT5JSR4.LARGE.jpg"], "step_title": "Step 1: Design"}, {"step": 2, "steps_text": "Electronic components\n114x SG90 micro servo motors (ebay.de)\nAlthough the servos were labeled with the name of the popular brand \"Tower Pro\" they are most certainly cheaper knockoffs. However, as the price of the knockoff is about 1 EUR compared to 3 EUR for the original this makes the whole project way more affordable. Apparently, the knockoffs also draw less current (of course this also implies less torque) which made it more easy to find a suitable power supply for the whole project.\n5 m WS2812B LED strip, 60 LEDs/m (ebay.de)\n8x 16 Ch PWM servo driver PCA9685 (ebay.de)\nDS3231 RTC module (ebay.de)\nArduino nano (ebay.de)\nVS1838B IR receiver + remote (ebay.de)\n5 V, 10 A power supply (ebay.de)\n20x 15 cm servo extension cable (ebay.de)\ncable DC socket to bare wire (conrad.de)\n300-500 Ohm resistor\n1000 \u00b5F capacitor (> 5 V)\nMaterials for frame\nwooden slats\n2 pcs 40 x 10 x 497 mm\n2 pcs 12 x 12 x 461 mm\n2 pcs 12 x 12 x 20 mm\nmultiplex\n2 pcs 12 x 77 x 481 mm\n2 pcs 12 x 84 x 489 mm\nwhite PVC foil (700 x 1000 x 0.3 mm) (modulor.de)\n500 x 500 mm HDF plate, 3mm thick\nScrews, cables, etc.\n228x M2 screws, 8 mm long + washers + hex nuts\n228x self tapping screws M2.2, 6.5 mm long\nvarious wood screws\n50 m, 0.22 mm2 (24 AWG) wire\nIn addition, this project required an extensive amount of 3D printing and soldering. The back plate was produced via laser cutting. The frame was build with a circular saw, jigsaw and drill. As for every decent project we also used a lot of hot glue, also some epoxy and plastic glue.\nThe total costs for this project came to about 350 EUR.", "step_imgs": ["https://cdn.instructables.com/FPC/XV7K/JTIYLSFC/FPCXV7KJTIYLSFC.LARGE.jpg", "https://cdn.instructables.com/FXX/UWQC/JTIYLS2G/FXXUWQCJTIYLS2G.LARGE.jpg"], "step_title": "Step 2: Gathering Materials"}, {"step": 3, "steps_text": "Letter Boxes\nEach letter box consists of a 3D printed cover that acts as shadow mask and a base plate onto which an LED will be attached. The base plate includes four dowel pins to help alignment onto the actuator and six holes for feeding through the LED cables. In total this makes 228 models which were all printed from black PLA (Formfutura EasyFill PLA) with 0.4 mm layer height. Total printing time on my Anycubic Kossel Linear Plus was about 23 hours for the letter covers and 10 hours for the base plates. All stl files can be found in the attached zip file.\nActuators\nThe actuator design was adapted from the Linear Servo Extender by Roger Rabbit which came in very helpful. Since the parts fit tightly together they should be printed on a decent 3D printer. Small layer height is not as important (0.2 mm is fine) as a small nozzle diameter (we recommend 0.4 mm). The parts should be printed in the shown orientation. Each actuator consists of 5 individual parts, since we needed 114 actuators this means 570 parts (!) in total. To print these we used the combined power of several professional 3D printers (Ultimaker S2+, Ultimaker S5, Lulzbot TAZ6, Sindoh 3D Wox DP200). Still we had a lot of failed prints on the parts and I included some pictures for your amusement. The total printing time was about 150 hours (!). Again the stl files can be found in the attached zip file.", "step_imgs": ["https://cdn.instructables.com/FWY/LTJO/JTIYLS52/FWYLTJOJTIYLS52.LARGE.jpg", "https://cdn.instructables.com/FTU/TTXR/JTIYLSLK/FTUTTXRJTIYLSLK.LARGE.jpg", "https://cdn.instructables.com/FAS/W7FS/JTIYLTEP/FASW7FSJTIYLTEP.LARGE.jpg", "https://cdn.instructables.com/FDS/AKNN/JTIYLU01/FDSAKNNJTIYLU01.LARGE.jpg", "https://cdn.instructables.com/FI1/XMKK/JTIYLU05/FI1XMKKJTIYLU05.LARGE.jpg", "https://cdn.instructables.com/FLW/SPIH/JTT5KIS7/FLWSPIHJTT5KIS7.LARGE.jpg", "https://cdn.instructables.com/FJZ/IRXF/JTT5KI3Q/FJZIRXFJTT5KI3Q.LARGE.jpg", "https://cdn.instructables.com/FRC/D9Z1/JTT5KFMM/FRCD9Z1JTT5KFMM.LARGE.jpg", "https://cdn.instructables.com/FSE/QTA9/JTT5KFNN/FSEQTA9JTT5KFNN.LARGE.jpg", "https://cdn.instructables.com/F88/ST8D/JTT5KFNS/F88ST8DJTT5KFNS.LARGE.jpg", "https://cdn.instructables.com/F52/MYBT/JTT5KFOU/F52MYBTJTT5KFOU.LARGE.jpg", "https://cdn.instructables.com/FHS/M9WW/JTT5KFQJ/FHSM9WWJTT5KFQJ.LARGE.jpg"], "step_title": "Step 3: 3D Printed Components"}, {"step": 4, "steps_text": "The frame was contructed from wooden slats and multiplex board. The parts were cut using a circular saw and a jigsaw and then fixed together using wood glue and wood screws. The top and bottom cover was also stained to give it a nicer look. A detailed description of the parts including all the dimensions can be found in the attached drawings.", "step_imgs": ["https://cdn.instructables.com/FQM/8H4U/JTT5JJTM/FQM8H4UJTT5JJTM.LARGE.jpg", "https://cdn.instructables.com/F9U/VYBX/JTT5JJTS/F9UVYBXJTT5JJTS.LARGE.jpg", "https://cdn.instructables.com/F6J/N1VC/JTIYLTU1/F6JN1VCJTIYLTU1.LARGE.jpg", "https://cdn.instructables.com/FKL/H4UU/JTT5KIVS/FKLH4UUJTT5KIVS.LARGE.jpg"], "step_title": "Step 4: Constructing the Frame"}, {"step": 5, "steps_text": "Assembling the letterboxes was a lot of work and took a very long time, especially the soldering. This is because every step you make has to be repeated 114 times.\nCut 114 individual pieces from the LED strip\nTin all LED pads\nAttach each LED to the 3D printed backplate of a letterbox. The LED should be centered. We also secured it with hot glue.\nNext we prepared 3x114 = 442 wires, i.e. cutting to length, stripping the ends and tinning them. The length of each wire was 10 cm each except for the wires connecting the last letter to the dots which has to be longer (~25 cm). Also the wires connected to the first letter that will be connected to the arduino and power supply should be longer.\nDiasy chain LEDs using wires. The wires are fed through the holes in the 3D printed backplate of each letterbox.\nThe front cover of the letter box was attached with glue\nParts of the linear rack for the actuator need to be glued together\nLinear rack gets attached to the back of the letterbox using glue", "step_imgs": ["https://cdn.instructables.com/F0D/XJZW/JTIYLSLP/F0DXJZWJTIYLSLP.LARGE.jpg", "https://cdn.instructables.com/FE1/9LIU/JTIYLSLM/FE19LIUJTIYLSLM.LARGE.jpg", "https://cdn.instructables.com/FWI/QZQE/JTIYLSLN/FWIQZQEJTIYLSLN.LARGE.jpg", "https://cdn.instructables.com/FHP/VL17/JTIYLSLQ/FHPVL17JTIYLSLQ.LARGE.jpg", "https://cdn.instructables.com/F0Q/ZAIC/JTIYLSTC/F0QZAICJTIYLSTC.LARGE.jpg", "https://cdn.instructables.com/FQC/AQO8/JTIYLT6Z/FQCAQO8JTIYLT6Z.LARGE.jpg", "https://cdn.instructables.com/FO4/Y0HU/JTIYLTWR/FO4Y0HUJTIYLTWR.LARGE.jpg"], "step_title": "Step 5: Assembling the Letter Boxes"}, {"step": 6, "steps_text": "Again assembling the actuators was a very tedious procedure that took a long long time.\nAttach servo to 3D printed housing using the included screws\nThe round gear is attached to the servo using the included plastic cross but first the cross needs to be cut to shape and attached to the gear using epoxy.\nAttach gear to servo using the included screw\nBefore inserting the linear rack each servo was zeroed to the same position\nInserting the linear rack with the letterbox\nInserting two M2 hexnuts in the 3D printed housing which will be used to attach it to the backplate later\nClose housing with 3D printed cover using the M2.2 self tapping screws\nIn the end we ended up with a big chunky mess of diasy chained actuators as shown in the picture above", "step_imgs": ["https://cdn.instructables.com/F9C/L9VY/JTIYLU0A/F9CL9VYJTIYLU0A.LARGE.jpg", "https://cdn.instructables.com/FBM/ZVWR/JTIYLU12/FBMZVWRJTIYLU12.LARGE.jpg", "https://cdn.instructables.com/FO1/OGKY/JTIYLU2X/FO1OGKYJTIYLU2X.LARGE.jpg"], "step_title": "Step 6: Assembling the Actuators"}, {"step": 7, "steps_text": "The back plate was laser cut from 3 mm thick HDF wood using a CO2 laser cutter from our local maker space. At first we tried plywood but it turned out to be much too flimsy to support the weigth of all the components. It would have been even better to use aluminum in this case but it is of course more expensive and cannot be cut with a CO2 laser. The dxf file for the backplate is attached.", "step_imgs": ["https://cdn.instructables.com/F4Z/WDBM/JTT5JKEL/F4ZWDBMJTT5JKEL.LARGE.jpg", "https://cdn.instructables.com/FSZ/V6R5/JTIYLU3M/FSZV6R5JTIYLU3M.LARGE.jpg"], "step_title": "Step 7: Making the Backplate"}, {"step": 8, "steps_text": "At first the PCA9685 boards should be attached to the backplate using PCB standoffs. Then the Arduino nano and RTC module can be placed as shown in the picture above. For the latter two we used 3D printed holders that were attached with hot glue. Components were connected as shown in the wiring diagram. Note that it is best to power every PCA9685 separately via the terminal block. At first we daisy chained also the V+ and GND connectors and connected only the terminal block of the first board (as suggested on the adafruit page), however, in this case all current is going through the first board and we ended up burning the MOSFET of the reverse protection circuit. There is also a spreadheet attached showing the cabling of the servos. Extension cables for the servos where used whenever needed. Note that you have to assign different I2C addresses to each PCA9685 as explained on the adafruit page.\nThe actuators were then attached to the backplate using 228x M2 screws. The work was again very monotonous but after it was finished the clock was already starting to take shape. We also tried to organize the servo cables as good as possible but in the end the cabling was still very messy.\nPower was supplied by feeding the DC cable through the backplate and connecting it to a terminal block.", "step_imgs": ["https://cdn.instructables.com/FJ3/JGU4/JTIYLU3N/FJ3JGU4JTIYLU3N.LARGE.jpg", "https://cdn.instructables.com/F5Y/DKZZ/JTT5KQ1I/F5YDKZZJTT5KQ1I.LARGE.jpg", "https://cdn.instructables.com/FTF/PUXD/JTT5KQ2X/FTFPUXDJTT5KQ2X.LARGE.jpg", "https://cdn.instructables.com/F7U/GXII/JTT5KQ3D/F7UGXIIJTT5KQ3D.LARGE.jpg", "https://cdn.instructables.com/FJH/CNT8/JTT5JFNH/FJHCNT8JTT5JFNH.LARGE.jpg"], "step_title": "Step 8: Attach Components to Backplate and Wiring"}, {"step": 9, "steps_text": "After all components were mounted and the cables organized, we attached the backplate to the frame using 6x M4 screws. Unfortunately, we left very little space for all the cables to fit so they had to be squeezed in a little.", "step_imgs": ["https://cdn.instructables.com/FEU/L449/JTIYLU3U/FEUL449JTIYLU3U.LARGE.jpg", "https://cdn.instructables.com/F15/3H16/JTT5JHLZ/F153H16JTT5JHLZ.LARGE.jpg"], "step_title": "Step 9: Attaching Backplate to Frame"}, {"step": 10, "steps_text": "Since the height of all letterboxes was slightly different after mounting we used the attached code to calibrate all servos so that the letterboxes have the same minimum and maximum positions. For the maximum position we tried to place the letterbox as close as possible to the screen. The calibrated min/max positions for every servo are then later entered into the main code.", "step_imgs": ["https://cdn.instructables.com/FH5/IH4B/JTT5JHTD/FH5IH4BJTT5JHTD.LARGE.jpg"], "step_title": "Step 10: Calibrating the Servos"}, {"step": 11, "steps_text": "Attached is the main code for the word clock. There are three type of effects for showing the time.\nQuickly move all letters to back (one after another) and light LEDs with equal random color. Then quickly move letters that display the time to the front one after another and light each word in a random color.\nQuickly move all letters to back (one after another) and light LEDs with equal random color. Slowly move each word that displays the time to the front (all letters simultaneuosly) and fade color from background color to a random value.\nQuickly move all letters to a random position (one after another) and light LEDs with different random color. Then slowly move all letters to back and fade the color. Continue with 1. or 2.\nI also wanted to implement an effect where the dot that is showing the current minute is gradually moving forward and fading color so that it is at the front positon with the correct color when the minute is finished. Unfortunately, I did not get it working yet because it seems to make the IR receiver unresponsive.", "step_imgs": [], "step_title": "Step 11: Uploading the Code"}, {"step": 12, "steps_text": "At first we wanted to use white fabric as screen. The problem was that after attaching it to the frame the fabric bent down in the center and we ended up with a pincushion distortion. We then decided to instead use a thin white PVC foil for the screen. The foil is also advertised for making lamp shades so it has a reasonable transmission but it is not seethrough so the black letterboxes stay hidden. In our first trial we attached the foil using epoxy but it did not stick too well so we switched to hot glue. Be careful though that if the glue is too hot it can actually melt the foil. Excess foil was removed with an exacto knife.", "step_imgs": ["https://cdn.instructables.com/FX1/6RQ0/JTT5JN30/FX16RQ0JTT5JN30.LARGE.jpg", "https://cdn.instructables.com/F9V/4NOE/JTT5KGP8/F9V4NOEJTT5KGP8.LARGE.jpg"], "step_title": "Step 12: Attaching the Screen"}, {"step": 13, "steps_text": "Finally the stained wood covers were attached to the top and bottom. The dark colour makes a nice contrast to the white screen. The IR receiver was fed through the hole in the backplate and fixed to the top cover with hot glue.", "step_imgs": ["https://cdn.instructables.com/F7L/PPEC/JTT5JOHO/F7LPPECJTT5JOHO.LARGE.jpg", "https://cdn.instructables.com/FML/3M6K/JTT5JOIH/FML3M6KJTT5JOIH.LARGE.jpg", "https://cdn.instructables.com/FJV/4819/JTT5JTKV/FJV4819JTT5JTKV.LARGE.jpg", "https://cdn.instructables.com/F31/BFS0/JTT5JTI3/F31BFS0JTT5JTI3.LARGE.jpg"], "step_title": "Step 13: Attaching the Top and Bottom Cover"}, {"step": 14, "steps_text": "After two months of intensive the work the clock was finally finished and working. Overall we are very happy with the result. Moving the letters behind the screen paired with changing the colors of the LEDs produces very cool looking effects. In the end the letters did not line up perfectly and the screen was not 100% flat but this almost makes it look even nicer. There are certainly things which can be improved but I do not think that there will be a version 2.0 because of the monumental effort of this build, unless next time we outsource the production to China.\nIf you like this build and managed to scroll down all the way to the bottom please vote for us in the Epilog Contest.", "step_imgs": ["https://cdn.instructables.com/F9R/PPUJ/JTT5KEWE/F9RPPUJJTT5KEWE.LARGE.jpg", "https://cdn.instructables.com/FTY/3BVP/JTT5KEXD/FTY3BVPJTT5KEXD.LARGE.jpg", "https://cdn.instructables.com/FDH/LG6D/JTT5KEVN/FDHLG6DJTT5KEVN.LARGE.jpg", "https://cdn.instructables.com/F37/DRGN/JTT5KEWV/F37DRGNJTT5KEWV.LARGE.jpg"], "step_title": "Step 14: Finished Clock and Summary"}], "channel": ""}, {"category": "", "description": "This is my 3rd Fizzle Loop Synth circuit and it builds on the previous 2 which can be found here and here.\nThe heart of the synth is 3, 555 Timer IC's which are used to make some really interesting beeps and boops. The difference between this version and the others is; I have reduced the number of IC's down to 3 (version 2 have 4!), the rhythms and sounds you can make from this version are in my opinion are better and lastly, there is a drum sound option which gives some really cool beats.\nI also have shrunk this synth into a pocket sized one. By placing some of the capacitors directly onto switches and shrinking the prototype board down, I managed to stuff all of the pots, switches and components into a small flashlight case.\nYou could probably use something like an altoids tin as a substitute case.\nI have also been playing around with designing schematics and have included a circuit diagram which (I hope!) is easy to understand. I've also decided not to do a step by step guide to making the circuit as I don't really think it helps too much. However, if I'm wrong let me know and I'll do it in the future. What I have done instead is described some of the trickier sections and have added explanations where necessary. Such as what a Vactrol is and how to make one.\nFinally - I've made a video of the synth in action so check that out to hear how it sounds.", "title": "Fizzle Loop Synth V3 (555 Timer)", "url": "https://www.instructables.com/id/Fizzle-Loop-Synth-V3/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts:\n1. Resistors.\nUse metal film ones \u2013 they are better quality and cost about the same as other ones. Also, buy them in assorted lots on eBay\n- 4.7K X 2\n- 3.3K X 2\n- 7.5K\n- 3.6K\n- 1.5K\n2. Capacitors\nYou can also buy these in assorted lots on eBay, which I suggest you do\n- 100uf X 2\n- 220uf\n- 22uf\n- 47uf\n- 2.2uf\n3. Making a vactrol\n- 5mm white LED X 2 \u2013 eBay\n- LDR (Light Dependent Resistor) X 2 - eBay\n- Heat shrink (needs to be able to fit over the LED so 5 mm should be fine.\n4. 10K Potentiometers X 6 \u2013 eBay\n5. Potentiometer knobs X 6 - eBay\n6. 555 Timer X 3 \u2013 eBay\n7. 3mm LED X 2 \u2013 eBay\n8. SPDT Switches X 2 \u2013 eBay.\n9. 0.5W 8ohm speaker \u2013 eBay. You can use a larger one if you want to I used a small one as my case was small.\n10. 3.5mm output jack socket \u2013 eBay\n11. 9v Battery\n12. 9V battery holder \u2013 eBay\n13. Prototype Board \u2013 eBay\n14. Momentary Switches X 2 \u2013 eBay\nIf you also want to add a amp to increase the volume \u2013 then you will also need the following parts\n14. Small amp module \u2013 eBay\n15. 10K pot (This is one of the 6 that I have included above)\n16. Some type of case to add everything into. I used an old torch I had lying around.", "step_imgs": ["https://cdn.instructables.com/FXP/QHX1/JSUOV6ID/FXPQHX1JSUOV6ID.LARGE.jpg", "https://cdn.instructables.com/FJH/KC9G/JSUOV6IM/FJHKC9GJSUOV6IM.LARGE.jpg", "https://cdn.instructables.com/FVQ/H2RB/JSUOV6KH/FVQH2RBJSUOV6KH.LARGE.jpg", "https://cdn.instructables.com/FMG/LY69/JSUOV6KQ/FMGLY69JSUOV6KQ.LARGE.jpg", "https://cdn.instructables.com/FNH/HYBK/JSUOV6KR/FNHHYBKJSUOV6KR.LARGE.jpg", "https://cdn.instructables.com/FF1/36NC/JSPAEPF2/FF136NCJSPAEPF2.LARGE.jpg", "https://cdn.instructables.com/FDL/1U0Z/JSPAEK6X/FDL1U0ZJSPAEK6X.LARGE.jpg", "https://cdn.instructables.com/FE6/DQS0/JSPAEISE/FE6DQS0JSPAEISE.LARGE.jpg"], "step_title": "Step 1: Parts"}, {"step": 2, "steps_text": "At first glance, the circuit might look a little complicated but it's really pretty simple. The best way to make this synth is in stages which is how I will explain each step in making the circuit. You'll also notice that I have included 2 schmatics, the 2nd one includes a amp module and volume pot. It's not necessary to add this but it will dramatically increase the volume. However, I did add an output socket so you can just plug it into a portable speaker to increase the colume. If you also download Fritzing you can play around with the schematics yourself.\nI'll go through what each 555 timer does and will try to explain some of the features and how the synth works.\n555 Timer 1 & 2\n1. Both 1 & 2 timers are basically a flashing LED circuits. To be able to control the speed of the LED on each 555 IC, there are 2 different capacitor values. These are connected to a SPDT switch which allows you to change the speed of the LED's\n2. Also connected to each IC is a 10K pot. This also allows you to control the speed of the LED's.\nVacrol\n1. IC timers 1 & 2 are also connected to a vacrol. Inside the vactrol is an LED and a Light dependant resistor (LDR). There is a pot connected to each which controls the brightness of the LED's which changes the pitch and tone\n2. Check out the next step on what a vacrol is.\n555 Timer 3\n1. Lastly, IC 3 generates different sounds depending on the brightness of light. There is also a pot that controls pitch.\n2. IC 3 is connected to IC's 1 and 2 via 2 vactrols. When you connect the LED's to the LDR's (which is what a vacrol is) you have a fizzle loop synth!\nSo to summarise - LED's blink at different rates and brightness's which create rhythms and beats controlled by various pots and switches.", "step_imgs": ["https://cdn.instructables.com/FFZ/UYTA/JT91SGJM/FFZUYTAJT91SGJM.LARGE.jpg", "https://cdn.instructables.com/FFU/XQ2V/JT91SGLL/FFUXQ2VJT91SGLL.LARGE.jpg", "https://cdn.instructables.com/F4T/A9SA/JTYNFA0C/F4TA9SAJTYNFA0C.LARGE.jpg"], "step_title": "Step 2: About the Circuit"}, {"step": 3, "steps_text": "A vacrtol is made from 2 common component, an LED and a Light Dependant Resistor (LDR). The parts are incorporated into one package and face each other. I use heat shrink which seems to work well as a casing.\nIt\u2019s important that the only light that the photo cell can detect is from the LED. If outside light is able to reach the photo cell, then it will interfere with the performance and sound, that\u2019s why you need to add something like heat shrink to protect them.\nWhen wired-up, the Vactrol acts like a potentiometer - applying a voltage to the Vactrol's LED has the same effect as turning up the knob on the potentiometer. Now if you dim the LED or flash it (like in the Fizzle Loop Synth) and hook it up to a 555 timer, then you can generate different tones and rhythms.\nNext I'll go through how to easily make your own vacrol. You will need 2 for this project", "step_imgs": ["https://cdn.instructables.com/FHH/38C9/JSL397O9/FHH38C9JSL397O9.LARGE.jpg", "https://cdn.instructables.com/FYG/L923/JSPAF5DV/FYGL923JSPAF5DV.LARGE.gif"], "step_title": "Step 3: What's a Vacrol?"}, {"step": 4, "steps_text": "Steps:\n1. Cut a small length of heat shrink tube. The LED and photo cell need to be able to fit inside snuggly. You also want to have a little excess heat shrink so you can pinch it together once heated and ensure no light can enter the vacrol.\n2. Place the LED into the heat shrink with the legs facing out and also do the same for the photo cell. Make sure that they are touching inside the heat shrink. Also mark the ground leg on the LED so you know which one is which\n3. Heat the heat shrink and start to shrink it. Start with the LED end first and when it has shrink enough, grab some pliers and flatten the end of the heat shrink so it is sealed shut.\n4. Do the same for the LDR\n5. Make 2 of these\n6. That\u2019s it! You have made an important component to the fizzle loop synth", "step_imgs": ["https://cdn.instructables.com/FIY/E3V7/JSUOV4W3/FIYE3V7JSUOV4W3.LARGE.jpg", "https://cdn.instructables.com/FP6/RM3I/JSUOV4W4/FP6RM3IJSUOV4W4.LARGE.jpg", "https://cdn.instructables.com/F2O/PNK0/JSUOV4W6/F2OPNK0JSUOV4W6.LARGE.jpg", "https://cdn.instructables.com/FMD/XBWM/JSUOV4W8/FMDXBWMJSUOV4W8.LARGE.jpg", "https://cdn.instructables.com/FXW/SVG0/JSUOV4W9/FXWSVG0JSUOV4W9.LARGE.jpg", "https://cdn.instructables.com/F0O/ABL1/JSUOV4WA/F0OABL1JSUOV4WA.LARGE.jpg", "https://cdn.instructables.com/FMY/ACLV/JSUOV4WB/FMYACLVJSUOV4WB.LARGE.jpg"], "step_title": "Step 4: Making a Vactrol"}, {"step": 5, "steps_text": "As mentioned earlier, I'm not going to go through a step by step process on how to add each component to the circuit. I'm going to assume you have put circuits together and my schematic makes some sense. I will go through a few interesting parts of building this section of the circuit. The first 2 timers are pretty much identical in how they are connected to the board. The only difference is a switch connected to the 2nd IC.\nThe LED\nYou may have noticed that there is an LED by itself, connected to pin 3, along with the vactol. This LED acts as a visual when creating tunes and flashes at the same time as the LED inside the vacrol\nWires\nYou'll need to add wires to the circuit board which will be connected to the pots and switches later on. I use computer ribbon cable wire for this as it's strong, thin and you can pick it up for free at most ewaste recycle places. Add all of the wires to the circuit board first and make sure you give yourself enough length on each as they will need to be connected later on once the circuit is completed.\nAdding the Vactrol\n1. Solder the legs of the LED's and LDR directly to the prototype board\n2. Ensure that the LED legs are facing down and the positive leg is closest to the timer\n3. Connect the positive LED leg to pin 3 and the ground to ground on the prototype board\n4. Connect one of the legs of the LDR to positive, the other will be connected to pin 6 on 555 timer 3\nCheck out the next step on how the caps are attached to the SPDT switches", "step_imgs": ["https://cdn.instructables.com/F7Q/0CH2/JSPABZ4M/F7Q0CH2JSPABZ4M.LARGE.jpg", "https://cdn.instructables.com/F59/BT9I/JSPAEIZF/F59BT9IJSPAEIZF.LARGE.jpg", "https://cdn.instructables.com/FFS/ZMID/JSPAEIZJ/FFSZMIDJSPAEIZJ.LARGE.jpg", "https://cdn.instructables.com/F0H/AHUK/JSPAEIZL/F0HAHUKJSPAEIZL.LARGE.jpg", "https://cdn.instructables.com/F2I/VEY0/JSPAEJ2Z/F2IVEY0JSPAEJ2Z.LARGE.jpg", "https://cdn.instructables.com/FHO/VG1R/JSPAEJ4O/FHOVG1RJSPAEJ4O.LARGE.jpg"], "step_title": "Step 5: Making the Circuit - IC Timer 1 and 2"}, {"step": 6, "steps_text": "555 IC 3 is the timer that gives you your tunes. It's actually a basic light thermin based on the slidersynth by Deno which I have also built here. I've taken it a few steps further with the fizzle loop synth but basically it uses the same concepts. I'll go through a few highlights of this section of the build\nSteps:\n1. There's a 10K pot that is connected to pin 6 and ground. This is used to control the overall pitch of the synth. You could use a 5K pot as well for this section. Just experiment and work out what works best for you.\n2. You will also notice that there is a momentary switch connected to the vactol on the 2nd IC and also connected to pin 7 on IC 3. This momentary switch should always be on and is only off when you push it down. It changes the tone when pushed down\n3. After experimenting a little I worked out that connecting pins 3 on both both IC 2 and 3 you can get an interesting drum type sound. Adding a switch to this section allows you to change between rythum and drums.\n4. Lastly I included a 3.5mm jack socket. This allows you to plug it into an amp for a louder sound. I definitly suggest you add an output socket so you can really pump up the volumne.", "step_imgs": ["https://cdn.instructables.com/FIM/SYPJ/JSPAEJ4R/FIMSYPJJSPAEJ4R.LARGE.jpg", "https://cdn.instructables.com/F25/CV3V/JSPAEJ4X/F25CV3VJSPAEJ4X.LARGE.jpg", "https://cdn.instructables.com/FH6/4YG2/JSPAEJ6P/FH64YG2JSPAEJ6P.LARGE.jpg", "https://cdn.instructables.com/FNL/MK5Q/JSPAEJA3/FNLMK5QJSPAEJA3.LARGE.jpg"], "step_title": "Step 6: Making the Circuit - IC Timer 3"}, {"step": 7, "steps_text": "One of the aims in making the circuit was to try and reduce the size as most as possible. I had to if I wanted it to fit inside a small case such as the flashlight case that I used in this project. Because of this I decided not to solder the capacitors connected to pin 2 to the prototype board but directly to the SPDT switch.\nSteps:\n1. Solder the positive legs of the 100uf cap to the first pin on the switch, the 220uf to the middle pin and the 330uf cap to the last pin\n2. Do the same again for the other caps for 555 timer 2. There are different cap values for this timer - you just need to make sure that they are connected in descending order, 10k 22k and 47k\n2. For each switch, connect all of the ground legs of the caps together. These will be connected to pin 2 on 555 timers later on\n3. The other pins on each of the switches can also be connected together. These will be connected to ground on the prototype board later.", "step_imgs": ["https://cdn.instructables.com/FF1/36NC/JSPAEPF2/FF136NCJSPAEPF2.LARGE.jpg", "https://cdn.instructables.com/F54/ZI4K/JSPAEPIE/F54ZI4KJSPAEPIE.LARGE.jpg", "https://cdn.instructables.com/F16/5AMO/JSPAEPJK/F165AMOJSPAEPJK.LARGE.jpg", "https://cdn.instructables.com/FBX/CMYC/JSPAEPLD/FBXCMYCJSPAEPLD.LARGE.jpg", "https://cdn.instructables.com/F2H/5R2A/JSPAEPO6/F2H5R2AJSPAEPO6.LARGE.jpg", "https://cdn.instructables.com/FV4/MPVU/JSPAEPUG/FV4MPVUJSPAEPUG.LARGE.jpg"], "step_title": "Step 7: Adding Capacitors Directly to the Switches"}, {"step": 8, "steps_text": "The case I used is an old flashlight that I had lying around. The lens section was a perfect spot to add a small speaker. The case is a tight fit for all of the electronics but I wanted tpo make a pocket sized flzzle loop synth this time.\nSteps:\n1. First you need to design the layout of the pots and switches. This is an important part, especially if you are using a small case like I did in thsis build.\n2. You'll also need to take into consideration how everything will fit inside the case. Wires, battery and the circuit board will need to be cramed inside so make sure you plan this out too.\n3. Once you have planned out the build it's then time to start to add the components. Drill the holes in the case and attach all of the pots, switches and LED's needed for the build.", "step_imgs": ["https://cdn.instructables.com/FE6/DQS0/JSPAEISE/FE6DQS0JSPAEISE.LARGE.jpg", "https://cdn.instructables.com/F4L/LZJM/JSPAEISF/F4LLZJMJSPAEISF.LARGE.jpg", "https://cdn.instructables.com/F29/Q2W1/JSPAEIS9/F29Q2W1JSPAEIS9.LARGE.jpg", "https://cdn.instructables.com/F7Y/U27K/JSPAEISG/F7YU27KJSPAEISG.LARGE.jpg", "https://cdn.instructables.com/F0C/KR4H/JSPAEISH/F0CKR4HJSPAEISH.LARGE.jpg", "https://cdn.instructables.com/FO9/KW61/JSPAEISI/FO9KW61JSPAEISI.LARGE.jpg", "https://cdn.instructables.com/FMO/KDO7/JSPAEISK/FMOKDO7JSPAEISK.LARGE.jpg", "https://cdn.instructables.com/FJG/6WQJ/JSPAEISL/FJG6WQJJSPAEISL.LARGE.jpg", "https://cdn.instructables.com/F8J/NW2L/JSPAEISM/F8JNW2LJSPAEISM.LARGE.jpg", "https://cdn.instructables.com/FBY/6VUC/JSPAEISN/FBY6VUCJSPAEISN.LARGE.jpg", "https://cdn.instructables.com/F7C/8AH4/JSPAEK6T/F7C8AH4JSPAEK6T.LARGE.jpg"], "step_title": "Step 8: Making the Case - Adding the Components"}, {"step": 9, "steps_text": "The case should now have all of the components added to it ready for wiring. Wire for some odd reason takes up a fair amount of space inside a case so you should try to make the wires a short as possible. Also, it's good practice to be able to remove the circuit board out of the case so you can fix any issues with the connections if necessary.\nSteps:\n1. Place the circuit board inside the case. Also place the battery in the case to make sure you have enough room for everything.\n2. Start to connect each of the compents to the wires on the circuit board. Take your time and make sure that each wire is connected correctly.\n3. Trim the excess wire before soldering onto each component.\n4. If you want to add an audio amp and volume pot - check out the next step.\n4. Once all the wires are connected add the battery and test. If nothing happens, you'll have to check over your connections and see if any are incorrect. If it works then congrats, you have made your very own fizzle loop synth. Now to add the knobs and work out how this thing works", "step_imgs": ["https://cdn.instructables.com/FCF/TC3M/JSPAEIZK/FCFTC3MJSPAEIZK.LARGE.jpg", "https://cdn.instructables.com/FWV/810K/JSPAEIXQ/FWV810KJSPAEIXQ.LARGE.jpg", "https://cdn.instructables.com/F8V/QAA9/JSPAEIUC/F8VQAA9JSPAEIUC.LARGE.jpg", "https://cdn.instructables.com/FVM/QPWN/JSPAEIW1/FVMQPWNJSPAEIW1.LARGE.jpg", "https://cdn.instructables.com/F1B/LAU6/JSPAEJBV/F1BLAU6JSPAEJBV.LARGE.jpg", "https://cdn.instructables.com/FPX/7SQ4/JSPAEJDK/FPX7SQ4JSPAEJDK.LARGE.jpg", "https://cdn.instructables.com/FOO/NK6L/JSPAEJGY/FOONK6LJSPAEJGY.LARGE.jpg", "https://cdn.instructables.com/FYG/CNCO/JSPAEJKB/FYGCNCOJSPAEJKB.LARGE.jpg", "https://cdn.instructables.com/FFI/4DW1/JSPAEK3E/FFI4DW1JSPAEK3E.LARGE.jpg"], "step_title": "Step 9: Wiring-up the Circuit"}, {"step": 10, "steps_text": "Once I had built the synth I decided that adding a small amp and volume pot would allow me to really annoy everyone in the house. It's a easy add-on and definitely worth including in the build. The amp I used can be picked-up on eBay for cheap and I have included a link in the parts section.\nSteps:\n1. Check out the schematic. I have highlighted the added amp and pot and also where they are connected. In the schematic the symbol for the amp is missing the ground wires for input and output. Check out the other schematic which I did which will also help work out hownto wire this up\n2. Connect the ground and positive on the amp to the 9v battery.\n3. The input section on the amp should be connected as follows: positive to pin 3 on the 3rd 555 IC and ground to the ground section on the circuit board\n4. The output should be connected as follows: positive to the positive solder point on the speaker and the ground to the ground solder point on the speaker\n5. To add a volume pot I found that the best place to connect it is to the output socket. If you add it directly to the speaker I found that it caused some interference to the synth and changed the sound. Adding it to the socket isolates it from the speaker and stops the interference.", "step_imgs": ["https://cdn.instructables.com/FTF/GZ8I/JSPAELAH/FTFGZ8IJSPAELAH.LARGE.jpg", "https://cdn.instructables.com/FDL/1U0Z/JSPAEK6X/FDL1U0ZJSPAEK6X.LARGE.jpg", "https://cdn.instructables.com/F8U/YHH6/JSPAEK71/F8UYHH6JSPAEK71.LARGE.jpg", "https://cdn.instructables.com/F7Q/YC4N/JSPAEK72/F7QYC4NJSPAEK72.LARGE.jpg", "https://cdn.instructables.com/FOL/PYP5/JSPAEK7R/FOLPYP5JSPAEK7R.LARGE.jpg"], "step_title": "Step 10: Adding an Audio Amp and Volume Pot"}, {"step": 11, "steps_text": "The final part of the build is to add some knobs to the build. You are now ready to start experimenting and making some awesome sounds.\nCheck out the image attached which shows what each knob and switch does.\nDon\u2019t be afraid to experiment with different capacitor values on the switches or different resistor values on the LED\u2019s. These are a tonne of different options on these parts and you can get many different sounds by changing them. You could also look at changing the potentiometer values as well, which would give you a different range of sounds.\nYou could even add another flashing LED 555 timer and tie this into the light Theremin 555 timer (timer 3 on the schematic). Maybe add a switch to each 555 timer so you can turn it off or no.\nThere are a tonne of mods you could do, so make sure you try some different set-ups before you build your own", "step_imgs": ["https://cdn.instructables.com/F4T/A9SA/JTYNFA0C/F4TA9SAJTYNFA0C.LARGE.jpg", "https://cdn.instructables.com/F24/8W5J/JSPAEK8I/F248W5JJSPAEK8I.LARGE.jpg", "https://cdn.instructables.com/F91/X29L/JTEN8MRD/F91X29LJTEN8MRD.LARGE.jpg", "https://cdn.instructables.com/FKO/22Z5/JTEN8MRO/FKO22Z5JTEN8MRO.LARGE.jpg", "https://cdn.instructables.com/FD3/45K2/JTEN8MR9/FD345K2JTEN8MR9.LARGE.jpg"], "step_title": "Step 11: Adding the Knobs and How to Play the Synth"}], "channel": ""}, {"category": "", "description": "I've been using laser printers for decades now and am always shocked at how much printer companies charge for new toner cartridges. Fortunately there is a quick and inexpensive way to refill your cartridges. I bought a new Brother HL-L2300D laser printer online for $80 (March 2019), but the replacement toner cartridge was over $50! I'll show you how to refill your cartridge for more like $5. This is the 'starter' cartridge that comes with the printer by the way. Cartridges are supposed to be able to be refilled at least twice before replacement. With my old HP printer cartridge I must have refilled it closer to 6 to 10 times for 4-6 years before the optical drum finally just wore out and I couldn't find a new replacement cartridge.", "title": "Refill Your Laser Printer Toner Cartridge the Easy Way", "url": "https://www.instructables.com/id/How-to-Refill-Your-Printer-Toner-Cartridge-the-Eas/", "section": "technology", "steps": [{"step": 1, "steps_text": "Most laser printer cartridges contain a big hollow space called the 'hopper' filled with a very fine dry powder that we call toner. The hopper transfers the toner to other components that ultimately wind up fusing the toner to the printer paper. Printers have various ways of determining when the toner has been used up. Some Brother printers pass a light through the cartridge to detect low toner and can be fooled by placing a piece of black tape over a 'window' in the side of the cartridge. In my case though the cartridge uses a different method that is more complicated and just stopped printing when the toner got low. I was able to keep it printing for awhile longer by using a procedure suggested online though.", "step_imgs": ["https://cdn.instructables.com/FHI/5R60/JTT5GV14/FHI5R60JTT5GV14.LARGE.jpg"], "step_title": "Step 1: Anatomy of a Toner Cartridge"}, {"step": 2, "steps_text": "Toner is sold in bottles that you can use to refill your cartridge yourself. Be certain that you get the correct toner made for your printer. One way of replacing the toner in some Brother cartridges involves removing the gears on the end, pulling out a plug and then replacing everything and resetting the gears so the printer thinks it is a new cartridge. Sometimes you even have to buy new parts to use when you refill the cartridge this way. But there is an even easier and faster way to replace the toner. You simply melt a hole in the top of the hopper, pour the new toner in and tape over the hole.", "step_imgs": ["https://cdn.instructables.com/F7T/HV0R/JTT5GWD8/F7THV0RJTT5GWD8.LARGE.jpg"], "step_title": "Step 2: Get Some Toner"}, {"step": 3, "steps_text": "Using a 'toner refill kit tool' found online with replacement toner you can melt a hole in a few seconds directly into the hopper without having to disassemble and reassemble any gears. The tool is basically a soldering iron that heats up a round tip that melts through the top of the hopper. Why not just drill a hole? Because then plastic bits would contaminate the hopper ruining your cartridge. You could also use a soldering iron or a heated nail to make an opening if you had to. Make sure that none of the melted plastic falls into the hopper though. I used a tooth pick to remove the plastic disc from the hot tool tip. Make sure the hole is as far to the side of the hopper as you can so that you can stand it on its edge when you are refilling it. If you make the hole in the middle you will have to keep shaking the toner sideways to fill the hopper evenly.", "step_imgs": ["https://cdn.instructables.com/FDF/LJ1W/JTT5GVD1/FDFLJ1WJTT5GVD1.LARGE.jpg", "https://cdn.instructables.com/FAQ/3N7N/JTT5GVOJ/FAQ3N7NJTT5GVOJ.LARGE.jpg", "https://cdn.instructables.com/FJE/04XU/JTT5GVW4/FJE04XUJTT5GVW4.LARGE.jpg"], "step_title": "Step 3: Make a Hole.."}, {"step": 4, "steps_text": "Even though the printer says you are out of toner there will still be some left in the hopper. Gently shake it out of the hole you just made so the new toner does not mix with the old. The photo shows how much toner was left even after my printer told me to replace the cartridge. Use a flashlight to look inside. I bought a half gallon jug of toner for $30 which I estimate contains 6-8 complete fills for my cartridge. That's about $5 or less to refill my cartridge vs. the $50 the printer manufacturer wanted for a brand new cartridge. It is possible to find third party cartridge makers for much less but still a lot more than refilling it yourself. Also I was able to completely fill my hopper to the very top, which probably isn't the case with manufacturer cartridges.", "step_imgs": ["https://cdn.instructables.com/FFV/RTJ3/JTT5GVW9/FFVRTJ3JTT5GVW9.LARGE.jpg", "https://cdn.instructables.com/FOB/U5J2/JTT5GVX3/FOBU5J2JTT5GVX3.LARGE.jpg"], "step_title": "Step 4: Empty the Hopper"}, {"step": 5, "steps_text": "If you've never worked with toner a few words of caution. Make sure you shake the old toner out and add the new toner outside. Toner easily gets all over everything so change into some old clothes. When toner spills you can usually just blow it off with your breath. Don't clean it up with a really wet cloth because you do not want water\ngetting into the hopper. When the toner comes out of the bottle it can be a little unpredictable. Pour the toner for a few seconds, then allow some air into the container. Don't be tempted to squeeze the bottle like ketchup or it will wind up blowing all over everything. One thought is to make a small hole in the empty space on top of the container to let air in (easier to do when the bottle isn't full). That should allow a smoother continuous pour. Just put a piece of tape over the hole in the bottle when you are finished.\nFor this step I've stood the cartridge securely on its side with the hole up. That way I can fill the hopper from the top. Using a flashlight you will be able to see the toner filling up the hopper and you can tap the cartridge to settle the toner more evenly. Once the toner level is up to the hole then gently lay it down, put a piece of duct tape over it and write the date on the tape so you know when it was last filled. Don't use masking tape because it won't seal around the edges of the hole like duct tape. Use your finger to press the duct tape down around the hole to get a good seal.", "step_imgs": ["https://cdn.instructables.com/FO5/HII1/JTT5K3U5/FO5HII1JTT5K3U5.LARGE.jpg", "https://cdn.instructables.com/FJP/DTVQ/JTT5GW8X/FJPDTVQJTT5GW8X.LARGE.jpg"], "step_title": "Step 5: Pour in the Toner."}, {"step": 6, "steps_text": "Once you've taped over the hole and gently cleaned the outside of the cartridge with a slightly moist paper towel you can insert it back into the printer. However sometimes you may have to trick the printer into thinking that the refilled cartridge is a brand new one. Searching the internet for your model of printer or looking through online reviews should tell you how. In my case I had to turn the printer off and press the power button several times to get it to start working again. Good luck and together we can stick it to the Big Toner lobby!", "step_imgs": ["https://cdn.instructables.com/F0Y/NZ39/JTT5GWCL/F0YNZ39JTT5GWCL.LARGE.jpg"], "step_title": "Step 6: Reinserting the Cartridge Back in the Printer"}], "channel": ""}, {"category": "", "description": "If you follow my Instructables projects you know that I am a big fan of the JAL programming language in combination with the PIC Microcontroller. JAL is a Pascal like programming language developed for the 8-bit PIC microcontrollers of Microchip. Most people know the Arduino using the ATMEL microcontroller. One of the nice things of an Arduino board is that you can program the microcontroller without the need of a separate programmer.\nThis absence of the need for a programmer brought me to this project. I wanted to make an Arduino Uno like board for the PIC microcontroller developing the software for that board with in the JAL programming language. The board did not need to have the exact size of the Arduino Uno board but the connectors on the board should have \u2013 where possible \u2013 the same connections as the connections of an Arduino Uno. And so the JALPIC One development board was born.", "title": "JALPIC One Development Board", "url": "https://www.instructables.com/id/JALPIC-One-Development-Board/", "section": "technology", "steps": [{"step": 1, "steps_text": "Before I started the design, I had a good look at the Arduino design and decided the following:\nI wanted the board to be built with standard components so no Surface Mount Design (SMD). Reason for this is that it would be easier for hobbyists to assemble the board.\nThe connectors should carry as much as possible the same functionality as the Arduino Uno. In the front-picture I did not yet assemble the connectors.\nThe control of the board had to be done by a PIC and this PIC should be programmed using the JAL programming language.\nFor testing purposes the board should have a LED that you can control from the PIC that runs the application. This feature is also present on the Arduino Uno.\nThe PIC that runs the application should have sufficient memory and RAM for easy application development.\nIn the attached schematic diagram you find the design of the JALPIC One development board. I also included a screenshot of the PCB. Just like the Arduino the board can be powered by the USB port of by an external DC power supply when used stand alone.\nI added a picture that shows the Arduino and the JALPIC One development board.\nThe application PIC on the board is programmed using the hex file that is created by the JAL compiler.", "step_imgs": ["https://www.instructables.com/files/deriv/FZX/1SQ1/JU31TLJI/FZX1SQ1JU31TLJI.LARGE.jpg", "https://cdn.instructables.com/F4N/G2LK/JTT5L9M0/F4NG2LKJTT5L9M0.LARGE.jpg"], "step_title": "Step 1: Designing the Board"}, {"step": 2, "steps_text": "You need to have the following components for this project next the board itself:\nIC\n1 * LM2940CT-5.0: IC1\n1 * LM3940IT-3.3: IC2\n1 * PIC16F18557P: IC3 (application PIC)\n1 * PIC16F1455P: IC4 (control PIC)\nCrystal\n1 * 20 MHz: Q1\n1 * 12 MHz: Q2\nDiode\n1 * 1N4004: D1\n1 * 1N4148: D2\nLED\n1 * Yellow LED: LED1\n1 * Amber LED: LED2\n1 * Red LED: LED3\nConnector\n1 * Power Jack: J1\n1 * USB Connector: X1\n2 * 6-pin header: SV2, SV5\n2 * 8-pin header: SV1, SV4\n1 * 10-pin header: SV3\n1 * 3-pin jumper: JP1\n1 * 2-pin jumper: JP2\nCapacitor\n4 * 22 pF: C1, C3, C11, C13\n5 * 100 nF: C2, C6, C7, C8, C 9\n1 * 220 nF: C10\nElectrolytic Capacitor\n3 * 10 uF/25V: C4, C5, C12\nResistor\n2 * 22 Ohm: R10, R11\n2 * 330 Ohm: R1, R8\n6 * 1 kOhm: R2, R3, R4, R5, R6, R7\n1 * 33 kOhm: R9\nSwitch\n1 * Omron Pushbutton: S1\nIn the attached layout of the board you can see where each component should go.", "step_imgs": ["https://cdn.instructables.com/FFT/TJQF/JTT5L9PC/FFTTJQFJTT5L9PC.LARGE.jpg"], "step_title": "Step 2: Required Components"}, {"step": 3, "steps_text": "Most of the work was the development of the control software for the control PIC on the board. The board has a simple command set to erase the application PIC, program the application PIC and some more commands. As mentioned it was written in JAL. There are 3 main components in the software:\nThe main program that provides the interface with the USB, interprets the commands and sends the responses.\nThe hex file parser which checks the contents of the hex file, extracts the address and data to be programmed.\nThe programmer that erases the memory of the application PIC and programs the application PIC with the data coming from the parser.\nSince the control PIC does not have a large internal memory, parsing of the hex file is done real-time and on a line by line basis after which the data is passed on to the programming software who then also programs the application PIC on a line by line basis.\nThe attached hex file can be used to program the controller PIC.", "step_imgs": [], "step_title": "Step 3: The Board Software"}, {"step": 4, "steps_text": "Since the hardware of the application PIC is known, a simple include file can be used to define all kind of settings needed for the application PIC to operate. The person writing the program can then focus on the program itself. A simple blink-a-led program in JAL then looks as follows:\ninclude jalpic_one -- include the board definition file\nenable_digital_io() -- make all pins digital I/O\nalias led is pin_a0 -- alias for pin with LED\npin_a0_direction = OUTPUT\nforever loop\nled = ON\n_usec_delay(100_000)\nled = OFF\n_usec_delay(400_000)\nend loop\nThis program uses the LED which is present on the JALPIC One development board. When the program is done, only 1 click on a button in an editor called JalEdit is sufficient to compile the program and download it to the board. The short video shows how this works.", "step_imgs": [], "step_title": "Step 4: What an Application Program Looks Like"}, {"step": 5, "steps_text": "I could not describe everything in this Instructable but the whole board design, software and documentation can be downloaded from one of the Jallib releases under the folder \u2018project\\jalpic_one\u2019.\nSince this new development is not yet officially released in a new version Jallib, it has to be downloaded using the latest \u2018bee-package\u2019 from the JAL download site.\nThe download site can be found at: Just Another JAL Website\nHave fun building your own project and looking forward to your reactions.", "step_imgs": [], "step_title": "Step 5: Building the Board Yourself"}], "channel": ""}]