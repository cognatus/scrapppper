[{"category": "Technology", "description": "Most socks can't talk. Without your help that is.", "title": "SockBot Sidekick", "url": "https://www.instructables.com/id/SockBot-Sidekick/", "steps": [{"step": 1, "steps_text": "Take your sock and flip it inside out. Lay it down so the heel is facing up. Take a marker and draw a curve just above the heel towards the opening", "step_imgs": ["https://cdn.instructables.com/FS5/LYJY/JTON8XS9/FS5LYJYJTON8XS9.LARGE.jpg"], "step_title": "Step 1: Prep Your Sock"}, {"step": 2, "steps_text": "If your needle is not threaded, then we will need to do that now. Cut about an arm\u2019s length of the thread. Thread it through the eye of the needle and pull it so there\u2019s an even length on both sides. Take both sides of thread and knot them together at the ends. You can double or triple knot for a bigger knot if you wish. Now you can thread a needle!", "step_imgs": ["https://cdn.instructables.com/FO2/54R4/JTON8XSA/FO254R4JTON8XSA.LARGE.jpg"], "step_title": "Step 2: Thread the Needle"}, {"step": 3, "steps_text": "Now you will back stitch along the line you drew on the sock. Start off by pushing the needle through the start of the line pulling it through almost until the end, then slip the needle through the two threads just inside the knot at the end.", "step_imgs": ["https://cdn.instructables.com/FPU/9N9E/JTON8XW1/FPU9N9EJTON8XW1.LARGE.jpg"], "step_title": "Step 3: Start Backstitching"}, {"step": 4, "steps_text": "Start off with a single stitch. Push the needle through the sock from the back side to the front along the start of the line you drew. Now push it through the sock continuing on the line about a quarter of an inch forward. Then come back up through the sock the same distance along the line. Now from the topside, push the needle back through at the end of the last stitch. Continue this process until the end of the line. Consider using a metaphor like a dolphin jumping in and out of water. Also try holding one arm horizontal and your other hand to trace the path of the needle going below and above your arm.", "step_imgs": ["https://cdn.instructables.com/FTI/Z9S1/JTON8XZ5/FTIZ9S1JTON8XZ5.LARGE.jpg"], "step_title": "Step 4: How to Back Stitch"}, {"step": 5, "steps_text": "Knot the sting a few times just like you did at the start . Push the Needle through but not all the way so that you can bring the needle around the edge of the sock and between the two threads just inside the knot at the end. Cut the excess string off from the needle.", "step_imgs": ["https://cdn.instructables.com/F5S/T9XS/JTON8Y0U/F5ST9XSJTON8Y0U.LARGE.jpg"], "step_title": "Step 5: Finish Your Stitch"}, {"step": 6, "steps_text": "Cut off the sock just outside the line on the open side. This is going to be the body of your sockbot!", "step_imgs": ["https://cdn.instructables.com/FY5/QRIU/JTON8Y1J/FY5QRIUJTON8Y1J.LARGE.jpg"], "step_title": "Step 6: Create Your Sockbot Body"}, {"step": 7, "steps_text": "Now cut an opening somewhere on the body so you can flip it outside back out.", "step_imgs": ["https://cdn.instructables.com/FCU/YWZ7/JTON8Y29/FCUYWZ7JTON8Y29.LARGE.jpg"], "step_title": "Step 7: Flip Your Sock Inside Out"}, {"step": 8, "steps_text": "Come up with a message for your sock pal to say. You can always change it later. Push the button to record and the other button to play back.\nPlace the recording unit on the foam pad and secure it down with tape. Cut the foam to be about the size of the recording unit. Retape if necessary.", "step_imgs": ["https://cdn.instructables.com/FGW/F6TL/JTON8Y6K/FGWF6TLJTON8Y6K.LARGE.jpg"], "step_title": "Step 8: Prepare Your Talkbox"}, {"step": 9, "steps_text": "Now place your recording unit on the foam pad over the sock body. Determine where you want to place these three parts; the record button, the microphone, and the playback button. In this example, we've placed the microphone near the ear, and the record and playback buttons in the hands. Retape anything that needs to be fixed and cut to shape the foam better to fit inside the sock body. Then slip the recording unit inside the sock body. Make slits for the microphone and buttons to access outside of the body.", "step_imgs": ["https://cdn.instructables.com/FMJ/QI4T/JTON8Y4Q/FMJQI4TJTON8Y4Q.LARGE.jpg"], "step_title": "Step 9: Place Your Talkbox"}, {"step": 10, "steps_text": "Pick out a new foam pad to use for ears and hands. We will hide the microphone with the ears and the play and record buttons with the hands. When you design the ears and hands, make sure to mark off a tab where they can be sewn into the sock bot. You can make them any shape they want so feel free to get creative!", "step_imgs": ["https://cdn.instructables.com/FRP/UX2J/JTON8Y6L/FRPUX2JJTON8Y6L.LARGE.jpg"], "step_title": "Step 10: Design Your Sockbot's Ears and Hands"}, {"step": 11, "steps_text": "After drawing the designs onto the foam pad. Cut them out. Remove the recording unit from the sock body, and flip it inside out. Adjust the slits for the ears and hands to be the size you designed them. Then insert the ears and hands and sew the tabs in between both sides of the sock body with a back stitch.", "step_imgs": ["https://cdn.instructables.com/F4Z/OSKP/JTON8Y8U/F4ZOSKPJTON8Y8U.LARGE.jpg"], "step_title": "Step 11: Attach Your Ears and Hands"}, {"step": 12, "steps_text": "Make sure to leave enough room in the middle for the buttons or microphone to come out. Repeat this process for each ear and hand. When you\u2019re done, flip the body right side out.", "step_imgs": ["https://cdn.instructables.com/FDO/S8YK/JTON8YB9/FDOS8YKJTON8YB9.LARGE.jpg"], "step_title": "Step 12: Flip the Body Inside Out"}, {"step": 13, "steps_text": "Decide what you want for the face of the sockbot. Typically eyes and a mouth will do. You can use remaining foam pad or sew a design for each. This Sockbot has circles of foam for the eyes sewed with an \u201cx\u201d to secure them on. The mouth was created using a back stitch. You can use markers, pipe cleaners, feathers -- whatever you want!", "step_imgs": ["https://cdn.instructables.com/FWE/026D/JTON8YCT/FWE026DJTON8YCT.LARGE.jpg"], "step_title": "Step 13: Make a Face!"}, {"step": 14, "steps_text": "Once you have the ears, hands and face on the sockbot, you can now reinsert the recording unit and put the stuffing inside. Put stuffing in front of and behind the recording unit so it is soft all around.", "step_imgs": ["https://cdn.instructables.com/F6J/U3PX/JTON8YDI/F6JU3PXJTON8YDI.LARGE.jpg"], "step_title": "Step 14: Stuff It"}, {"step": 15, "steps_text": "Now we need to close up the hole in our sockbot\u2019s body with a different type of stitch, the running stitch which will allow us to pull the opening closed like a drawstring on a bag.", "step_imgs": ["https://cdn.instructables.com/F2Y/U4PU/JTON8YEA/F2YU4PUJTON8YEA.LARGE.jpg"], "step_title": "Step 15: Finishing Up"}, {"step": 16, "steps_text": "To make a running stitch, start off by knotting your thread somewhere on the edge of the opening. Now push the needle through the sock near the edge of the opening and come back up the other side an equal distance away from the first stitch. Continue this pattern along the edge of the hole until you get back to the initial knot.", "step_imgs": ["https://cdn.instructables.com/FZS/KBI6/JTON8YEB/FZSKBI6JTON8YEB.LARGE.jpg"], "step_title": "Step 16: Learn the Running Stitch"}, {"step": 17, "steps_text": "Push any remaining sock material inside and pull the stitch tight to close off the hole. Add a few more stitches to seal and knot it off. Cut the string when you're done.", "step_imgs": ["https://cdn.instructables.com/F0G/7TF3/JTON8YFQ/F0G7TF3JTON8YFQ.LARGE.jpg"], "step_title": "Step 17: Sew Up the Bottom"}, {"step": 18, "steps_text": "Now you are equipped to fight for liberty and justice with your loyal Sockbot by your side.", "step_imgs": ["https://cdn.instructables.com/FCG/77CO/JTON8YGG/FCG77COJTON8YGG.LARGE.jpg"], "step_title": "Step 18: The End"}], "channel": "Robots"}, {"category": "Technology", "description": "I have previously built a TARDIS model. One of the defining characteristics of the TARDIS is that it's bigger on the inside than it is on the outside. Obviously I can't do that, but in this Instructable I adapt the model to try and make it look bigger on the inside. I'm going to do this by adding some mirrors and LEDs on the inside. This same idea should also work with other TARDIS models.\nIf you would like to see the Instructable for the TARDIS Model that I'm using, here is the link to that Instructable: https://www.instructables.com/id/Make-a-TARDIS-Model/\nIf you would like to see a video version of this Instructable, you can view that here: https://youtu.be/0v8eq0jQdS0\nHere is what I used in this Instructable:\nTools:\nRuler\nFile\nSand Paper\nSanding Block\nDrill\n1/16\" Drill Bit\n3/16\" Drill Bit\nUtility Knife\nHot Glue Gun\nHot Glue Sticks\nMarking Pen\nParts:\nA TARDIS Model\nAluminum Sheet Metal\nPlexiglass\nOne Way Mirror Window Tint, Silver\nThumb Tacks\nAddressable RGB Led Strip\nConnector Plugs\nAddressable RGB LED Controller #1\nAddressable RGB LED Controller #2\n5vdc Power Supply\nPlastic Tubing", "title": "Make a TARDIS Infinity Box", "url": "https://www.instructables.com/id/Make-a-TARDIS-Infinity-Box/", "steps": [{"step": 1, "steps_text": "For the mirrors on the inside there are several options, I'll be showing 2 of them starting with a piece of polished aluminum. I measure the place on the panel where I want the mirror. I want to be able to still see through the windows so I measure below those. Then I mark and cut 4 pieces out of the aluminum. After cutting, I file down the edges so they aren't as sharp. This can also be done with sand paper and a sanding block.", "step_imgs": ["https://cdn.instructables.com/FLX/0XED/JTON5KUN/FLX0XEDJTON5KUN.LARGE.jpg", "https://cdn.instructables.com/FKW/77GH/JTON5KYR/FKW77GHJTON5KYR.LARGE.jpg", "https://cdn.instructables.com/FTG/KDPI/JTON5KZX/FTGKDPIJTON5KZX.LARGE.jpg", "https://cdn.instructables.com/F7M/CWPT/JTON5L2W/F7MCWPTJTON5L2W.LARGE.jpg", "https://cdn.instructables.com/FY0/OM7M/JTON5L8U/FY0OM7MJTON5L8U.LARGE.jpg"], "step_title": "Step 1: Cutting the Aluminum Mirrors"}, {"step": 2, "steps_text": "I remove the window I added previously, I'll show my replacement later. I turn the side over so that I can use the front for reference. I'll be using thumb tacks to hold the mirrors in place and I want them to be lined up with the thicker parts of the side. I mark out where my options are on the mirror. I decide to try using 2 thumbtacks so I drill a couple 1/16\" holes in the mirror. For the next mirror I use the first mirror as a template for drilling the holes. Then using a larger, sharp drill bit I ream out the holes by hand. Now I can mount the mirror onto the inside of the panel.", "step_imgs": ["https://cdn.instructables.com/FSJ/BU4W/JTON5LOG/FSJBU4WJTON5LOG.LARGE.jpg", "https://cdn.instructables.com/FOA/PCTU/JTON5LPM/FOAPCTUJTON5LPM.LARGE.jpg", "https://cdn.instructables.com/FOY/MKRM/JTON5LPO/FOYMKRMJTON5LPO.LARGE.jpg", "https://cdn.instructables.com/FBC/72WC/JTON5LPP/FBC72WCJTON5LPP.LARGE.jpg", "https://cdn.instructables.com/FFP/H8HL/JTON5LQV/FFPH8HLJTON5LQV.LARGE.jpg", "https://cdn.instructables.com/F0A/FEBZ/JTON5LX6/F0AFEBZJTON5LX6.LARGE.jpg", "https://cdn.instructables.com/F8Z/QC1U/JTON5LZY/F8ZQC1UJTON5LZY.LARGE.jpg", "https://cdn.instructables.com/FDD/W1R9/JTON5M0G/FDDW1R9JTON5M0G.LARGE.jpg", "https://cdn.instructables.com/FP5/KZN3/JTON5M1D/FP5KZN3JTON5M1D.LARGE.jpg"], "step_title": "Step 2: Mounting the Mirrors to the Sides"}, {"step": 3, "steps_text": "Doing this with the door will be similar, the main difference will be splitting the mirror into 2 pieces. To help prevent light from leaking out I overlap the mirror for the inner door with the outer door. Once I put the mirrors in place I test the doors to make sure they still open.", "step_imgs": ["https://cdn.instructables.com/F86/YLRM/JTON5M3U/F86YLRMJTON5M3U.LARGE.jpg", "https://cdn.instructables.com/FR2/B68M/JTON5M5B/FR2B68MJTON5M5B.LARGE.jpg", "https://cdn.instructables.com/FYI/D762/JTON5M5C/FYID762JTON5M5C.LARGE.jpg"], "step_title": "Step 3: Mounting the Mirrors to the Doors"}, {"step": 4, "steps_text": "I put these polished aluminum mirrors on all of the sides. I'm going to put my LEDs only on the left and right sides, not the doors or the back. I figure out how many LEDs I need and cut my LED strip at the proper length. My camera wouldn't focus well enough to see, but since I'm using addressable LEDs there is an arrow showing me the direction of orientation. At each end of the strip I'm soldering on 3 pin connectors, making sure the first LED is getting the connector that will connect to my LED controller. I do this with 4 strips of LEDs, then after I decide how I want the directions to flow I attach them to the sides.", "step_imgs": ["https://cdn.instructables.com/F1N/CAEH/JTON5RFA/F1NCAEHJTON5RFA.LARGE.jpg", "https://cdn.instructables.com/FQC/08EO/JTON5RHG/FQC08EOJTON5RHG.LARGE.jpg", "https://cdn.instructables.com/F3E/JC75/JTON5RHX/F3EJC75JTON5RHX.LARGE.jpg", "https://cdn.instructables.com/FQ7/Z9AY/JTON5RIH/FQ7Z9AYJTON5RIH.LARGE.jpg", "https://cdn.instructables.com/FQU/789D/JTON5RJR/FQU789DJTON5RJR.LARGE.jpg"], "step_title": "Step 4: Adding the LEDs"}, {"step": 5, "steps_text": "Next I test fit the 4 sides onto the base, but as you can see the wires are all over the place inside. I want the bottom wires to go under the base, so I hold each side in place and mark where I need to make a gap in the base for the wires to pass through. After trimming out a groove for the wires, I pass them through the base and make sure everything lines up.", "step_imgs": ["https://cdn.instructables.com/F3S/RNAG/JTON5RRS/F3SRNAGJTON5RRS.LARGE.jpg", "https://cdn.instructables.com/FZO/83KX/JTON5RSX/FZO83KXJTON5RSX.LARGE.jpg", "https://cdn.instructables.com/FDV/QIMA/JTON5RU0/FDVQIMAJTON5RU0.LARGE.jpg", "https://cdn.instructables.com/FKA/X1N1/JTON5RUL/FKAX1N1JTON5RUL.LARGE.jpg", "https://cdn.instructables.com/F08/RNNZ/JTON5RX9/F08RNNZJTON5RX9.LARGE.jpg", "https://cdn.instructables.com/FES/HOP5/JTON5RZT/FESHOP5JTON5RZT.LARGE.jpg", "https://cdn.instructables.com/FOA/5VTR/JTON5RZU/FOA5VTRJTON5RZU.LARGE.jpg"], "step_title": "Step 5: Wire Management"}, {"step": 6, "steps_text": "Next I'm going to show another option for the mirrors. Using a piece of plastic, I attach some partially transparent mirror film. I remove the piece of polished aluminum and put this other mirror in it's place. Since this is a bit transparent, I made it tall enough to goto the top of the side, even though it covers the windows. As you can see, I've already pre-drilled the holes for the thumb tacks. I also did the same for the doors, but not the sides with the LEDs.", "step_imgs": ["https://cdn.instructables.com/F2A/ZL0H/JTON5STZ/F2AZL0HJTON5STZ.LARGE.jpg", "https://cdn.instructables.com/FMJ/9JCM/JTON5SVM/FMJ9JCMJTON5SVM.LARGE.jpg", "https://cdn.instructables.com/F6Q/8TR7/JTON5SXI/F6Q8TR7JTON5SXI.LARGE.jpg", "https://cdn.instructables.com/F4C/ORW0/JTON5SY3/F4CORW0JTON5SY3.LARGE.jpg", "https://cdn.instructables.com/FVL/2J9O/JTON5SYK/FVL2J9OJTON5SYK.LARGE.jpg", "https://cdn.instructables.com/F1Y/QGHT/JTON5SZL/F1YQGHTJTON5SZL.LARGE.jpg", "https://cdn.instructables.com/F4B/AKML/JTON5T0A/F4BAKMLJTON5T0A.LARGE.jpg"], "step_title": "Step 6: Using Plastic Mirrors W/Film"}, {"step": 7, "steps_text": "For these other 2 sides I'm going to cut out a piece of packaging plastic to go over the windows, and attach some of that same partially transparent mirror film to it. Here you can see the difference between the mirror film and the polished aluminum. The aluminum bent a bit when cutting it and the plastic I used for those windows is very thin, so there is some warping where the thumb tacks are. For the other sides with full length plastic, the plastic itself is much thicker and more solid, so there is not much warping at all.", "step_imgs": ["https://cdn.instructables.com/FHM/LAYX/JTON5TH2/FHMLAYXJTON5TH2.LARGE.jpg", "https://cdn.instructables.com/FYA/3C9N/JTON5TH9/FYA3C9NJTON5TH9.LARGE.jpg", "https://cdn.instructables.com/FRU/DO6Q/JTON5TIF/FRUDO6QJTON5TIF.LARGE.jpg", "https://cdn.instructables.com/FKA/40S6/JTON5TJE/FKA40S6JTON5TJE.LARGE.jpg", "https://cdn.instructables.com/F9J/K4JS/JTON5TJV/F9JK4JSJTON5TJV.LARGE.jpg"], "step_title": "Step 7: Window Alternative"}, {"step": 8, "steps_text": "I also made a change to the light. Originally I used clear tubing, but white tubing works better with LEDs. I also used a much shorter piece of tubing with a piece of reflective tape on the top. This seems to work a bit better with the LED that I used. I used a bit of hot glue to hold this LED in place under the light. Now all of the parts are ready to be reassembled.", "step_imgs": ["https://cdn.instructables.com/F2X/U9U1/JTON5U5F/F2XU9U1JTON5U5F.LARGE.jpg", "https://cdn.instructables.com/FB3/6XSW/JTON5U5U/FB36XSWJTON5U5U.LARGE.jpg", "https://cdn.instructables.com/FIR/2L93/JTON5U5Z/FIR2L93JTON5U5Z.LARGE.jpg", "https://cdn.instructables.com/FX5/NEKV/JTON5U64/FX5NEKVJTON5U64.LARGE.jpg", "https://cdn.instructables.com/FGK/FJBM/JTON5U6B/FGKFJBMJTON5U6B.LARGE.jpg", "https://cdn.instructables.com/FRQ/N6KX/JTON5U6G/FRQN6KXJTON5U6G.LARGE.jpg", "https://cdn.instructables.com/FNE/5I4M/JTON5U79/FNE5I4MJTON5U79.LARGE.jpg"], "step_title": "Step 8: Changes to the Light on the Roof"}, {"step": 9, "steps_text": "And here it is! Looking through the windows you can see the infinity box effect that I was trying for. Opening the door the effect goes even deeper since it doesn't have to go through the tinted windows. And the light on the top looks awesome! I was thinking that if I had a strip of LEDs go along the floor, that would help the effect. I tried that out and it does look better, but also gets in the was when trying to open the doors. More adjustment may be needed, but it's good for now.\nFor this size of TARDIS it worked pretty good. I think it would work even better with a full sized TARDIS. And like always, any advice or comments are more than welcome!", "step_imgs": ["https://cdn.instructables.com/FN9/7DZA/JTON5VAJ/FN97DZAJTON5VAJ.LARGE.jpg", "https://cdn.instructables.com/F76/J5UE/JTON5VAS/F76J5UEJTON5VAS.LARGE.jpg", "https://cdn.instructables.com/FOT/I28F/JTON5VAT/FOTI28FJTON5VAT.LARGE.jpg", "https://cdn.instructables.com/FEB/OWN3/JTON5VAY/FEBOWN3JTON5VAY.LARGE.jpg", "https://cdn.instructables.com/FLP/O7X6/JTON5VB9/FLPO7X6JTON5VB9.LARGE.jpg", "https://cdn.instructables.com/FKT/I2LL/JTON5VB3/FKTI2LLJTON5VB3.LARGE.jpg"], "step_title": "Step 9: And That's It!"}], "channel": "LEDs"}, {"category": "Technology", "description": "This is for everyone that has a K40 or K50 and higher quality laser cutter and is tired of losing money on Tubes that seem to die faster than they should. This is also for the winner of the Epilog Laser Contest I hope this helps you out on your journey with laser cutting!\nFor those that don't know, adding a Analog Milliamp Meter to your laser cutting system helps you keep an eye on how much power is running through your CO2 tube. If you run too much power, it deteriorates the lifespan of the Tube. It also can help you diagnose potential problems in your system, like a dying Tube, or a faulty Power Supply.\nThis presentation will show how I installed my own Analog Milliamp Meter into my Orion Motor Tech 50W Laser and will cover proper Wiring Techniques, Hole Cutting and Proper Laser Testing.\nPlease be safe if you choose to do this yourself.", "title": "Adding a Analog Milliamp for Your Laser Cutter", "url": "https://www.instructables.com/id/Adding-a-Analog-Milliamp-for-Your-Laser-Cutter/", "steps": [{"step": 1, "steps_text": "LASER CUTTERS USE HIGH LEVELS OF ELECTRICITY!!!\nThere is always a risk of shock or electrocution when dealing with any electronic device. When dealing with a class IV laser that risk becomes higher.\nMake sure to wear well insulated clothing/safety items. (Gloves)\nKeep the machine turned off and unplugged. (leave unplugged for 12 hours to be safe)\nDouble check connections to make sure they are secure to reduce risk of arcing.\nNot all laser cutters are the same. Different makers use different color wires, different power supplies so connections may not be the same.\nAttempt at your own risk, please only attempt with proper electronics training and knowledge of your laser cutter.!!!!", "step_imgs": ["https://cdn.instructables.com/FVG/F74E/JTON9EA4/FVGF74EJTON9EA4.LARGE.jpg"], "step_title": "Step 1: SAFETY"}, {"step": 2, "steps_text": "3\" twelve gauge wire (black or black and another color)\n1 Wire cutter\n1 Wire stripper (or knife)\n4 Ways to connect wire (Electrical tape, 4 pieces of heat shrink, 2 ring connectors, liquid electrical tape)\n1 DC Analog Milliamp Meter (MAKE SURE YOU GET DC!)\n1 Two inch BiMetal Hole Saw + Drill\n1 Roll Painters Tape (or a Magnet)\n1 Plastic Bag\n1 Pencil\n2 Sheets Sand Paper\nI already had most the supplies like the electrical tape and the tools. All I needed to purchase was the Analog Milliamp Meter and I got it from Amazon for under 10$. Try to look for one that doesn't go any higher than 30 milliamp cause you will get a more accurate read on your power and you should never go over 20 milliamps power.", "step_imgs": [], "step_title": "Step 2: Materials"}, {"step": 3, "steps_text": "For safety concerns wait 12 hours after you have turned off and unplugged your laser before touching wires\nFirst you must locate the ending terminal wire of your laser tube. Depending on your laser this could be different color wires but for the majority they are going to be BLACK PURPLE or YELLOW wires. Orion Motor Techs \"50W Laser Cutter\" is going to be BLACK\nIf there is conduit covering all the wires go ahead and take it off, it will make much much easier.\nFor other laser cutters you can figure out which wire it is by looking at the power supply. It will be plugged into the L terminal. If you will look at the power supply it will be the leftmost wire on the power supply wire panel. Trace it from the power supply to the negative end of the tube for confirmation if needed.\nThere are very heavy gauge wires in your laser cutter case. DO NOT TOUCH THESE! They most likely lead to the positive end of your laser cutter, and can KILL YOU!", "step_imgs": ["https://cdn.instructables.com/FFN/ZZRU/JTON9XKN/FFNZZRUJTON9XKN.LARGE.jpg", "https://cdn.instructables.com/F1O/I5H7/JTON9YFO/F1OI5H7JTON9YFO.LARGE.jpg", "https://cdn.instructables.com/FR4/X7UM/JTON991L/FR4X7UMJTON991L.LARGE.jpg", "https://cdn.instructables.com/F40/YRU3/JTON9955/F40YRU3JTON9955.LARGE.jpg", "https://cdn.instructables.com/F0Q/885G/JTON996I/F0Q885GJTON996I.LARGE.jpg", "https://cdn.instructables.com/FQI/0JC8/JTON99AX/FQI0JC8JTON99AX.LARGE.jpg"], "step_title": "Step 3: Finding the Right Wire"}, {"step": 4, "steps_text": "Go about halfway along the BLACK Wire and make a precise cut. Make sure both (now cut) wires have lots of flexibility to move.\nLook at where you want the analog meter to sit and measure out how much NEW Wire you will need to reach that, then add an extra foot.\nMake sure the NEW Wire you are using is the size of, or larger wire than what is provided by the laser, 12 gauge should do.\nFor the wire the is still attached into the L Terminal, strip about 1/2 inch - 1 inch of insulation of the free end of the wire.\nRepeat step 4 for the wire that leads FROM the Negative End of Laser Tube.\nFor both the New Wires that you have measured out and cut, strip both ends about 1/2 inch - 1 Inch.\nYou should now have six wire ends that have all been stripped of insulation. One leading FROM the Negative End of Laser Tube. One leading TO the L Terminal. Four from the NEW Wire extenders.", "step_imgs": ["https://cdn.instructables.com/FNC/ZVKE/JTON99CA/FNCZVKEJTON99CA.LARGE.jpg", "https://cdn.instructables.com/FW9/2FQ2/JTON99LU/FW92FQ2JTON99LU.LARGE.jpg", "https://cdn.instructables.com/FJO/53QG/JTON99NF/FJO53QGJTON99NF.LARGE.jpg", "https://cdn.instructables.com/F0R/N262/JTON99P1/F0RN262JTON99P1.LARGE.jpg"], "step_title": "Step 4: Cutting the Wires and Prepping"}, {"step": 5, "steps_text": "Figure out where you want your Analog Milliamp Meter.\nMark the Top and Bottom of space to be cut.\nPlace a Plastic Bag on the INSIDE of laser to protect circuits from metal dust\nPut painters tape on the BOTTOM of where you will cut (makes it easy to see where you have cut all the way through and will stop some metal bits from falling down)\nUse Two Inch Bi-Metal Hole Saw to punch through metal.\nUse high speed for drill but push down slowly and firmly to cut hole. Stay level.\nDon't overwork drill, stop periodically and use painters tape/magnet to clear away debris.\nOnce the hole has been cut, use sandpaper or other deburring tool to dull the edges of cut.\nCheck to see if meter fits.\nMark and drill holes necessary for securing Analog Milliamp Meter.\nThe hole you cut is based off the back end of the Meter. Make the smallest hole you can so it fits nice and snug and doesn't move around or allow you to see into the machine.", "step_imgs": ["https://cdn.instructables.com/FJV/SCL7/JTON99S9/FJVSCL7JTON99S9.LARGE.jpg", "https://cdn.instructables.com/F61/1WHB/JTON99TU/F611WHBJTON99TU.LARGE.jpg", "https://cdn.instructables.com/F51/75V1/JTON99WR/F5175V1JTON99WR.LARGE.jpg", "https://cdn.instructables.com/FX8/98QH/JTON9A0B/FX898QHJTON9A0B.LARGE.jpg", "https://cdn.instructables.com/FQ3/V1M9/JTON9A3A/FQ3V1M9JTON9A3A.LARGE.jpg", "https://cdn.instructables.com/FEO/BHJR/JTON9A6R/FEOBHJRJTON9A6R.LARGE.jpg", "https://cdn.instructables.com/FVA/B3G2/JTON9A8L/FVAB3G2JTON9A8L.LARGE.jpg", "https://cdn.instructables.com/F7N/89UF/JTON9AB3/F7N89UFJTON9AB3.LARGE.jpg", "https://cdn.instructables.com/FOW/PJXI/JTON9ACO/FOWPJXIJTON9ACO.LARGE.jpg"], "step_title": "Step 5: Cutting the Holes"}, {"step": 6, "steps_text": "There are a few ways to connect wires. I will first say how I did it. Then I will tell the proper electricians way.\nMy Way To Wire\nTake the wire from the L terminal and weave the wire strands together with one of the NEW Wire extensions.\nTwist the two wire ends together.\nCut one piece of electrical wire a little longer then the length of exposed wire and wrap it LENGTHWISE.\nNow wrap over that electrical tape at a diagonal angle and make sure that it is tight and well insulated and covers both edges of bottom layer of tape.\nRepeat steps 1 - 4 except with with the wire from the Negative End of Laser Tube and the second NEW Wire extension.\nWeave the wires back into the conduit and up towards the hole to keep things neat.\nPush both wires through the hole.\nAttach the wire from the L Terminal to the POSITIVE Terminal of the Analog Meter by wrapping it around the screw and tighten the nut.\nAttach the wire from the Negative End of Laser Tube to the NEGATIVE Terminal of the Analog Meter by wrapping it around the screw and tighten the nut.\nThe \"Correct\" Way To Wire\nPut a piece of Heat Shrink around one end of wire.\nFollow steps 1 and 2 and 4 from above.\nUse a flame or heat gun to shrink the Heat Shrink around the electrical tape and wire ends.\nRepeat steps 1 - 3 for other wire.\nFollow steps 6 - 9 from above.\nInstead of wrapping the wire around the screw use a piece of heat shrink to attach a ring connector to the ends of both NEW Wire Extensions.\nPut the screw from the Analog Meter through the ring connector and screw it down securely.\nLather over every connection with liquid electrical tape.\nUsing heat shrink is usually more secure and \"airtight\" of a connection. Using the ring connectors also keep the circuit more enclosed and makes a easier and safer attachment to the Analog Meter.", "step_imgs": ["https://cdn.instructables.com/FO4/3PFM/JTON9AE9/FO43PFMJTON9AE9.LARGE.jpg", "https://cdn.instructables.com/FOZ/QWN3/JTON9AH6/FOZQWN3JTON9AH6.LARGE.jpg", "https://cdn.instructables.com/FOC/EIHN/JTON9AJF/FOCEIHNJTON9AJF.LARGE.jpg", "https://cdn.instructables.com/FLM/BE0Y/JTON9AOJ/FLMBE0YJTON9AOJ.LARGE.jpg", "https://cdn.instructables.com/F7C/GKPP/JTON9ARP/F7CGKPPJTON9ARP.LARGE.jpg", "https://cdn.instructables.com/FT1/T9PQ/JTONADD8/FT1T9PQJTONADD8.LARGE.jpg", "https://cdn.instructables.com/FBG/4JWH/JTON9ARR/FBG4JWHJTON9ARR.LARGE.jpg", "https://cdn.instructables.com/F0C/ZQKO/JTONADD3/F0CZQKOJTONADD3.LARGE.jpg", "https://cdn.instructables.com/F2R/VRMP/JTONADD5/F2RVRMPJTONADD5.LARGE.jpg", "https://cdn.instructables.com/FG7/SKAO/JTON9ATL/FG7SKAOJTON9ATL.LARGE.jpg", "https://cdn.instructables.com/FWN/PSWP/JTON9ATX/FWNPSWPJTON9ATX.LARGE.jpg", "https://cdn.instructables.com/F6C/P6R2/JTON9AU9/F6CP6R2JTON9AU9.LARGE.jpg"], "step_title": "Step 6: Wiring the Meter Up"}, {"step": 7, "steps_text": "Checklist Before Test\nWe are all wired up.\nThe Wire is well insulated\nWire has been pushed into the conduit neatly\nWe have secured the Analog Meter to the machine.\nThe correct wires are attached to the right terminals.\nMake sure your machine is properly grounded.\nMake sure you are still wearing protective equipment.\nCarefully plug in your machine.\nCarefully turn on your machine. (I used a piece of wood from a distance (I'm cautious))\nDon't use the pulse button.\nStart up a simple test file and do it at LOW power.\nIf the meter dial goes LEFT instead of RIGHT the wires are backwards. (if it goes Right skip to step 8)\nIf it goes LEFT, turn machine off, unplug, wait for capacitors to discharge and switch wires on the back of the Analog Meter.\nRepeat steps 1 and 2.\nIf problem persists (or any other problem occurs) then check to see that you have a DC Analog Meter.\nIf problem persists (or any other problem occurs) then check to see the wires from the Tube and Power Supply are correct.\nIf problem persists (or any other problem occurs) then check to see that the wires are well insulated and connected properly.\nIf problem persists (or any other problem occurs) then test the Analog Meter with another DC circuit (like a computer fan)\nDo multiple tests, slowly raise the power until you reach about 18 milliamps.\nNever go higher than 18 Milliamps for \"50W or 40W Chinese Lasers\"\nCOMMON PROBLEMS\nProblem Group One\nWires are not connected properly and circuit is not complete.\nWires are not connected properly and causes a short or creates arc.\nWrong wires from power supply were cut.\nNEW Wire extensions are too small a gauge for circuit.\nWires are backwards on the AC Analog Meter\nSolution\nConnect Wires Properly\nProblem Group Two\nYou have a AC Analog Meter instead of a DC analog Meter.\nYou have a faulty Analog Meter\nYou have a Faulty Power Supply\nYou have a Faulty Co2 Tube\nSolutions\nReplace Hardware (start from cheapest to most expensive)\nTest without new hardware or separate from laser i.e. Test DC Analog Meter with another circuit", "step_imgs": ["https://cdn.instructables.com/FTG/5QPH/JTON9AWH/FTG5QPHJTON9AWH.LARGE.jpg"], "step_title": "Step 7: Securing and Testing"}, {"step": 8, "steps_text": "When it comes to Laser Cutters, especially Chinese Laser Cutters you have to monitor how much power you are pushing through your tube and system.\nMost Chinese Laser Cutters exaggerate the wattage of their tubes.\nA \"40W\" tube is most likely a 35W tube.\nA \"50W\" tube is most likely a 40W tube.\nA \"60W\" tube is most likely a 45W-50W tube\nReal tube lengths-ish\n55 x 800mm = 40\n55 x 1000mm = 50\n55 x 1200mm = 60\n80 x 1200mm = 80\n80 x 1400mm = 100\nThe exaggeration comes from the \"Max Power\" not \"Rated Power\" and running at the Max power will kill the tube a lot faster than if you run at the Rated Power.\nEven knowing the Rated Power you still need to make sure you don't push too much power through your tube so you need to monitor the Current. For some 60W tubes you want around 22 mA or less and you want less and less mA for lower wattage tubes. Most people have around a 45W tube so try and keep the Current around 18 mA or around what the manufacture has suggested or even go by your own tests if you have the time. Just keep in mind lower Current = Long Lifespan", "step_imgs": [], "step_title": "Step 8: Extra Info"}], "channel": "Lasers"}, {"category": "Technology", "description": "This post about convert famous headphone Sony MDR-7506 and its fake copies to DIY Bluetooth modification.\nI had headphone Sony MDR with very great sound and comfortable design. And also quite thick cable is with it. That was well when I used one on my office. Use it during walk to home or job difficult, because cable dangle, pulled down, tangled in clothing. That actually annoyed me. Therefore, I decided to detach cable and convert headphone to Bluetooth version.\nCurrently there are many BT modules fit for sound DIY project. Some of ones support APT-X. I chose stereo CSR8645 module with amplifier board. Module also support microphone and I add this feature to MDR BT mod.", "title": "DIY Bluetooth Modification Sony MDR-7506 Headphone", "url": "https://www.instructables.com/id/DIY-Bluetooth-Modification-Sony-MDR-7506-Headphone/", "steps": [{"step": 1, "steps_text": "Here is part list:\n- Bluetooth 4.0 CSR8645 module with amplifier board\n- Charge LiPo battery module TP4056\n- LiPo battery LP602030 overall dimensions 6\u044520\u044530 mm\n- microphone ECM-10C diameter 6 mm\n- tact push button high 9.5 mm (KLS7-TS6601-9.5-180) \u2013 5 pieces\n- mini slide switch appropriated size\n- some tools and materials\u2026", "step_imgs": [], "step_title": "Step 1: Parts"}, {"step": 2, "steps_text": "First I disassembled left and right ear cups and measure inside dimensions, then each of ones was created 3d models. Also I did it for other parts of set. Then I spent some time try to assemble and after few attempts I had acceptable result. All models you can find here \u2013 https://grabcad.com/delirium-1/models\nI developed two kind of circuit board for right and left ear cup to place parts. Bluetooth module with buttons are soldered on custom circuit board and putting in left ear cup. Before it i drill holes for buttons and extended former hole for cable until diameter 6.5 mm then inserted microphone in it then soldered to circuit board too.\nCharge module TP4056 and slide switch are placed on circuit board inside right ear cup. There is LiPo battery there too. Also i must cut two slot on a side ear cup. One for switch and another for micro usb charged cable. Dimensions right circuit board is on picture (previous design board with sensor switch, but it has same size as new).", "step_imgs": ["https://cdn.instructables.com/F6P/VUJ3/JTON85IO/F6PVUJ3JTON85IO.LARGE.jpg", "https://cdn.instructables.com/F2C/UNFL/JTON85LK/F2CUNFLJTON85LK.LARGE.jpg", "https://cdn.instructables.com/FQP/K3SG/JTON85MD/FQPK3SGJTON85MD.LARGE.jpg", "https://cdn.instructables.com/FY9/FN95/JTON85LN/FY9FN95JTON85LN.LARGE.jpg"], "step_title": "Step 2: Modelling"}, {"step": 3, "steps_text": "Then I made circuit boards.I used male pin header to solder parts on boards and\nthen cropped they a little to make \"sandwich\" less thick.\nHere is ready Bluetooth board assembly.", "step_imgs": ["https://cdn.instructables.com/F10/K280/JTON85WZ/F10K280JTON85WZ.LARGE.jpg", "https://cdn.instructables.com/FP1/U4AG/JTON85VW/FP1U4AGJTON85VW.LARGE.jpg", "https://cdn.instructables.com/FSZ/IFTB/JTON85W6/FSZIFTBJTON85W6.LARGE.jpg", "https://cdn.instructables.com/FUT/IDWV/JTON85WG/FUTIDWVJTON85WG.LARGE.jpg"], "step_title": "Step 3: Make Circuit Boards"}, {"step": 4, "steps_text": "First time test.. great, it\u2019s working! Module pair to phone easily and sounds well. Assembly boards is ready to placed into ear cups. I used melt plastic gun to fix they.", "step_imgs": ["https://cdn.instructables.com/FFQ/86EV/JTON85WD/FFQ86EVJTON85WD.LARGE.jpg"], "step_title": "Step 4: Test and Mount"}, {"step": 5, "steps_text": "At the end, I replaced original cable (two wires) between earpiece by usb cable (four wires) to connect sound and power line. I obtained quite similar on previous result. DIY BT mod MDR-7506 headset done.\nLeft ear cup. I drilled hole diameter 1.5 mm for amplifier red led that indicate work headset, and dripped a little melt plastic.\nRight ear cup. Red led is bright if charge on. When charge full blue led is bright.", "step_imgs": ["https://cdn.instructables.com/FCC/SI1L/JTON85UV/FCCSI1LJTON85UV.LARGE.jpg", "https://cdn.instructables.com/F8P/YPPA/JTON85UY/F8PYPPAJTON85UY.LARGE.jpg", "https://cdn.instructables.com/FRD/2TY6/JTON85V5/FRD2TY6JTON85V5.LARGE.jpg", "https://cdn.instructables.com/FFG/50P2/JTON85WI/FFG50P2JTON85WI.LARGE.jpg"], "step_title": "Step 5: Finish"}, {"step": 6, "steps_text": "Here is view on microphone and buttons. Unfortunately,\nI worked dremel carelessly\u2026 However, that doesn't matter, because ultimate result is pretty well.", "step_imgs": ["https://cdn.instructables.com/FYI/WAT1/JTON85VU/FYIWAT1JTON85VU.LARGE.jpg"], "step_title": "Step 6: Result"}, {"step": 7, "steps_text": "Thanks for your attention!\nAnd warning! If you want to make same with you Sony MDR-7506 you will most definitely void any warranty you might have for your headphones. You might also damage your headphones if you are not careful, so please do not accuse me!\nIf you need more information such as electrical schemes, print circuit boards, some explanations, etc, contact me.", "step_imgs": [], "step_title": "Step 7: The End"}], "channel": "Audio"}, {"category": "Technology", "description": "I am currently working on a replica of the Minivac 601, an electro-mechanical computer from 1961 (see the Wikipedia entry for details). For this project I require a rotary switch with the following characteristics:\n1P16T\nContinuous Rotation\nNon-Shorting\nPanel Mount\nMotorized\nThis last requirement is the kicker. Without having to drive the switch via a motor, a fair number of parts meet the remaining criteria. However I was unable to see how any of them could be easily motorized. Some are physically too small, and most require a fair amount of torque to switch between positions.\nSo I came up with the following 3D printable design that uses reed switches and magnets.", "title": "Mostly 3D Printed Rotary Switch", "url": "https://www.instructables.com/id/Mostly-3D-Printed-Rotary-Switch/", "steps": [{"step": 1, "steps_text": "I printed the parts with the following settings:\nPrint Resolution: .2 mm\nInfill: 20%\nFilament: AMZ3D PLA\nNotes: No supports\nTo make the basic rotary switch you need the following parts:\nRS Body\nRS Knob (optional)\nRS Magnet Mount\nRS Rotor Gasket (optional)\nRS Rotor", "step_imgs": [], "step_title": "Step 1: Print the Parts"}, {"step": 2, "steps_text": "In addition to the printed parts you will need the following:\n16 Reed Switches - Digi-Key part number 2010-1087-ND\n18 Disk Magnets - 6 mm (diameter) x 3 mm (height)", "step_imgs": ["https://cdn.instructables.com/FQL/B1F4/JTON9XBY/FQLB1F4JTON9XBY.LARGE.jpg"], "step_title": "Step 2: Obtain the Other Hardware"}, {"step": 3, "steps_text": "Start by inserting the reed switches into the slots around the RS Body. The pins for the switches should pass easily through the holes from the inside to the outside of the body, and can be carefully bent from the outside to keep the switch in place. I tried cheaper glass encased reed switches for my first prototype and found them to be inconsistent when operating the switch", "step_imgs": ["https://cdn.instructables.com/FEX/VPI0/JTON9QYM/FEXVPI0JTON9QYM.LARGE.jpg"], "step_title": "Step 3: Add the Reed Switches to the Body"}, {"step": 4, "steps_text": "Insert 16 disk magnets into the RS Magnet Mount. Be sure that the polarity of all 16 magnets is the same. You can use a bit of glue to hold them in if they don't grab sufficiently on their own. They should be flush with the top of the RS Magnet Mount when inserted.", "step_imgs": ["https://cdn.instructables.com/FUK/DYGP/JTON9QYN/FUKDYGPJTON9QYN.LARGE.jpg"], "step_title": "Step 4: Populate the Magnet Mount"}, {"step": 5, "steps_text": "Insert the 2 remaining disk magnets into the RS Rotor. It's very important that the polarity of the magnet that will be on the bottom of the RS Rotor disk is the opposite of the polarity of the magnets secured in the RS Magnet Mount. In other words they should attract! Note that in the picture above the RS Rotor is upside down to show both the reed actuator magnet on the side of the disk and the one that will \"lock\" the rotor into one of sixteen positions.", "step_imgs": ["https://cdn.instructables.com/FOZ/D445/JTON9R0L/FOZD445JTON9R0L.LARGE.jpg"], "step_title": "Step 5: Add the Rotor Magnets"}, {"step": 6, "steps_text": "Carefully slide the RS Magnet Mount to the bottom of the RS Body making sure that the small tab on the edge of the RS Magnet Mount is inserted into a grove on the inside bottom of the RS Body (below a reed switch) first and that the magnets are facing up. This will ensure the the magnets are lined up properly with the switches.", "step_imgs": ["https://cdn.instructables.com/FCP/OB20/JTON9R1Y/FCPOB20JTON9R1Y.LARGE.jpg"], "step_title": "Step 6: Install the Magnet Mount in the Body"}, {"step": 7, "steps_text": "Add the RS Rotor Gasket into the RS Body now. I think that it helps the switch rotate more easily.", "step_imgs": ["https://cdn.instructables.com/FLM/ZSD1/JTON9R4P/FLMZSD1JTON9R4P.LARGE.jpg"], "step_title": "Step 7: Add the Rotor Gasket"}, {"step": 8, "steps_text": "For testing purposes you can temporarily attach the RS Knob centered onto the RS Rotor with two sided tape. Note that the point on the knob should align with the magnet on the side of the RS Rotor.", "step_imgs": ["https://cdn.instructables.com/F9B/HMBC/JTON9R80/F9BHMBCJTON9R80.LARGE.jpg"], "step_title": "Step 8: Add the Knob"}, {"step": 9, "steps_text": "Carefully slide the RS Rotor into the RS Body. The magnet on the RS Rotor disk should be facing down. As you slowly turn the knob you should be able to feel the switch snap to the 16 magnetic \"detents\". There is even a satisfying click as the magnets come together.", "step_imgs": ["https://cdn.instructables.com/FWH/J93A/JTON9XBX/FWHJ93AJTON9XBX.LARGE.jpg"], "step_title": "Step 9: Insert the Rotor Into the Body"}, {"step": 10, "steps_text": "Connect a multimeter to the leads of each reed switch. When the arrow is pointing at the connected reed switch the multimeter should indicate that the circuit is closed. Conversely if not pointed at the connected reed switch it should show an open circuit.", "step_imgs": ["https://cdn.instructables.com/FAW/VCFR/JTON9RBM/FAWVCFRJTON9RBM.LARGE.jpg", "https://cdn.instructables.com/FYS/NY63/JTON9RBP/FYSNY63JTON9RBP.LARGE.jpg"], "step_title": "Step 10: Testing"}, {"step": 11, "steps_text": "So the switch is now ready for the next part of my Minivac 601 project. I'll be running a 4 mm shaft through the RS Rotor. One end of the shaft will come up from the bottom of the Decimal Input-Output panel seen above and be attached to the RS Knob for manual input. The other end will be attached to a low speed high torque motor via a couple of gears for automatic manipulation.\nI'd be very surprised if anyone actually needed a rotary switch exactly like the one I have described here (unless of course they end up building a Minivac 601). I do hope however that the ideas outlined here will be generally useful for anyone with a similar need.", "step_imgs": ["https://cdn.instructables.com/FY4/H8PC/JTON9YJO/FY4H8PCJTON9YJO.LARGE.jpg"], "step_title": "Step 11: Final Thoughts"}], "channel": "3D Printing"}, {"category": "Technology", "description": "As a teacher, I have always had a passion for creating and sharing maker projects and techy resources that help make the day to day classroom stuff better. I also really love using Google Education tools!\nGoogle does an amazing job of creating tools that simplify our lives in and out of the classroom and Google Forms is a perfect example.\nIf you haven't used Forms in the classroom, no worries! Forms is a tool that allows you to digitally collect and store all sorts of classroom data and it's really user-friendly.\nI made this Instructable to share a few of my favorite ways to use Google Forms in the classroom and provide you with some resources that I created to help jumpstart your creation and use of Forms in the classroom.\nFeel free to make a copy and then edit all of the templates I've included to fit your classroom needs and if you have any fun or unique ways that you use Google Forms please share them in the comments so we can keep the ideas flowing. :)", "title": "Google Forms in the Classroom", "url": "https://www.instructables.com/id/Google-Forms-in-the-Classroom/", "steps": [{"step": 1, "steps_text": "Teach, Assess, Repeat\u2026 It\u2019s the classroom loop we often find ourselves in as we navigate this world of data-driven instruction. So let\u2019s get this one out of the way!\nGoogle Forms is a great tool for assessing students. It\u2019s easy to create Forms to assess the standards in almost every subject and the quizzes feature with auto-grading is a teacher time saver.\nI like to create quick checks and exit tickets for math that provide formative data to help me scaffold and support students through the concepts we cover.\nHere\u2019s an example Math Exit Ticket.", "step_imgs": ["https://cdn.instructables.com/F62/60AO/JTON0ZG3/F6260AOJTON0ZG3.LARGE.jpg"], "step_title": "Step 1: Assessments"}, {"step": 2, "steps_text": "Back to School Registration and Open House events are when we collect all that important parent/student information and a perfect opportunity to use Google Forms to simplify the process and save time.\nCreating a Back to School Form is easy and the same form can be used year after year with minimal tweaks as different information is needed.\nOnce you create your Parent/Student Information form, you can set up a computer station for parents to fill it out as they stop by your room during your registration or open house meet the teacher events. You can also share it with parents via email or a class newsletter.\nBonus: By having parents fill out the form digitally, all the important information you collect can populate into a Google Sheet that is stored and accessible through Google Drive from anywhere you are. It also saves you time by not having to copy the paper information into a digital document.\nHere\u2019s a great example you can use or modify to fit your needs: Back to School Form", "step_imgs": ["https://cdn.instructables.com/FFQ/PWSS/JTON11JX/FFQPWSSJTON11JX.LARGE.jpg"], "step_title": "Step 2: Collecting Parent/Student Information"}, {"step": 3, "steps_text": "When I started teaching, I created a Word Doc for parent conferences and I would print copies of it for every parent meeting so I could keep a record of the parent info, date/time of the meeting, conference notes, and any action plan or goals we set.\nAfter the parent conference, I would add the form to the \u201cParent Conferences\u201d tabbed section of my nifty teacher binder for quick reference when needed.\nIf any of that sounds familiar, you need Google Forms in your life!\nSave some trees and use this Parent Conference Notes Log! Feel free to copy and make it your own. :)", "step_imgs": ["https://cdn.instructables.com/FGB/O3SV/JTON11KS/FGBO3SVJTON11KS.LARGE.jpg"], "step_title": "Step 3: Organized Parent Conference Data Collection"}, {"step": 4, "steps_text": "Student Surveys will vary greatly depending on the grade level(s) and subjects you teach, but they can be created and given to students in just about every grade level.\nIf you have never given a survey to your students, now is a great time to start and Google Forms is a perfect survey creation tool to use.\nNeed student survey ideas? Here\u2019s an example Student Interest Survey and here's a few classroom ideas for inspiration:\nMath Data- Collect student data for use in math charts/graphs. For example, survey your students to find out their favorite breakfast cereals or candy and then use that data for students to graph.\n\nStudent Interest Surveys - At the beginning of the year, I like to give interest surveys to help me learn more about my new group of students. When I taught upper elementary students, I asked general questions (i.e. How many brothers and/or sisters do you have?, What hobbies do you have?) and a lot of \u201cfavorite\u201d questions (i.e. What\u2019s your favorite book?, movie?, video game?, Sport/Sports Team?, Ice Cream flavor? etc.).\nWhen I taught 6th grade STEM, I asked students questions that were more geared to their interests in different STEM subjects and how comfortable they were with different tools. I also asked them what they were most excited to learn in STEM that year which really helped inform some of my lesson planning. Then, at the end of the year, I gave a STEM exit survey with some of the same questions so I could compare the data and see how their ideas and opinions changed during the year.", "step_imgs": ["https://cdn.instructables.com/FIV/EE5T/JTON0ZFN/FIVEE5TJTON0ZFN.LARGE.jpg"], "step_title": "Step 4: Student Surveys"}, {"step": 5, "steps_text": "If you plan to use a lot of rubrics with your students, then peer reviews/rating activities are a terrific way to teach students how rubrics function and why they are important.\nAfter group projects and/or student presentations you can have students use a Google Form that you create using the scaled rating question options in Forms.\nThen, students can record their scale responses based on a peer review rubric or the rubric you plan to use to grade their assignment/presentation. I prefer the later so the students really understand what they will be graded on.\nHere's a Sample Peer Review Rating Form template.", "step_imgs": ["https://cdn.instructables.com/FN5/JT52/JTON0ZCH/FN5JT52JTON0ZCH.LARGE.jpg"], "step_title": "Step 5: Peer Review/Rating Activities"}, {"step": 6, "steps_text": "This is for all my elementary teacher friends! :)\nTypically, reading logs are sent home as part of the \"Read 20+ Minutes a Day\" type of homework, but digital reading logs can also become part of your 90 minute ELA Block and/or Reading Centers/Stations.\nUsing Google Forms, you can create reading logs that students complete after reading independently or after reading with you during small group.\nReading Logs can provide a quick check-in point for students to log where they are in the book or passages and they can also be a wonderful way for students to monitor their own understanding of the content.\nHere\u2019s a sample log I created: Digital Reading Log This Form is broken into sections that allow students to choose whether they are reading fiction or nonfiction and answer questions about their book based specifically on that factor. I seriously love the tools and features in Google Forms! :D", "step_imgs": ["https://cdn.instructables.com/FWM/0RI1/JTON0ZDN/FWM0RI1JTON0ZDN.LARGE.jpg"], "step_title": "Step 6: Digital Reading Logs"}, {"step": 7, "steps_text": "Whether you\u2019re trying to keep track of parent donated snack sign-ups or students leaving the classroom, Google Forms makes it easy. With just a few clicks of your mouse and strokes on the keyboard, you can have a quick Form that will log the needed information into a spreadsheet for all your data tracking needs.\nHere\u2019s an example for each of these situations:\nSnack Sign-Up Form\nClass Sign-Out Form\nDon't forget to share the ways you use Google Forms in the classroom in the comments below and if you use any of the examples in this instructable to make your own classroom Form please take a picture and post it as an \u201cI Made It\u201d. :)", "step_imgs": ["https://cdn.instructables.com/FF8/DPII/JTON0Z6J/FF8DPIIJTON0Z6J.LARGE.jpg", "https://cdn.instructables.com/F73/QW3Z/JTON0Z99/F73QW3ZJTON0Z99.LARGE.jpg"], "step_title": "Step 7: Sign Up or Sign Out Sheets"}], "channel": "Software"}, {"category": "Technology", "description": "When I got my first 3D printer I was extremely happy with all the new possibilities to create things but after some time I noticed the limitations of 3D printing. Plastic is easy to melt, sometimes it's not mechanically resistant enough and most importantly sometimes doesn't look good. Don't take me wrong here, I love 3D printing and I like plastic (except plastic waste) but there are things that look, work or feel way better when made out of nonplastic material. Imagine all your furniture made out of plastic. Sometimes I prefer wood, when I need strength, metal (mostly aluminum) is a way to go. That's where CNC milling machines are used. Usually, the cost of such machine is really high, most of the hobbyist, small makers can't afford such expensive equipment. That's why the idea of building my own CNC machine sparked in my head. Of course building with bare hands wasn't an option for me, that's hard not only to make but also to document. I wanted to create an easy to replicate machine that anyone can make. I spent a lot of time on the design of it to make assembly simple and keep the price low. Then there was a lot of testing, redesigning and modifying to make it the best I could. I used as popular and easy to buy components as I could: Dremel, LMU12 bearings, Nema17 motors, Arduino, aluminum profiles and only free software. That's how I managed to keep the price of my machine under $300. I already published 6 youtube videos about this project and it is quite popular on Thingiverse so you may ask why I am posting instructable that late? That's because I wanted to finish my machine completely and make the most detailed instructable I have ever done. This project is the biggest one for me for a lot of reasons, I will talk about them through this instructable. Enjoy :)", "title": "DIY 3D Printed Dremel CNC", "url": "https://www.instructables.com/id/DIY-3D-Printed-Dremel-CNC/", "steps": [{"step": 1, "steps_text": "This instructable is as detailed as it could be but it's always good to see a video of how to make something or how stuff works. Above you can find my 6 videos about DIY Dremel CNC, maybe I will make some more in the future, I will also add them here, but you can subscribe to my channel to don't miss any of this videos and my fututre projects.", "step_imgs": [], "step_title": "Step 1: Watch All of the Videos!"}, {"step": 2, "steps_text": "Here you can find an Excel sheet with all of the parts, quantities, various links and comments. Below you can find a complete list of everything we need\nMechanical components:\nAluminum profiles 20x20mm 600mm long (X2)\nAluminum profiles 20x20mm 300mm long (X5)\n12mm rod 310mm (X2)\n12mm rod 530mm (X2)\n12mm rod 140mm (X2)\nLead screw 500mm (X2)\nLead screw 280mm (X1)\nLead screw 120mm (X1)\n12mm linear bearing (X12)\n608zz bearing (X4)\nT nut M5 (X36)\nM6 x 25mm screws (X4)\nM5 x 10mm screws (X34)\nM5 x 16mm screws (X10)\nM3 x 20mm screws (X8)\nM3 x 12mm screws (X32)\nElectronics components:\nStepper motors (X4)\nCNC shield (X1)\nStepper drivers (X4)\nArduino (X1)\nPower supply (X1)\nDC connector (X1)\nJumpers (X14)\nDremel 3000 (X1)", "step_imgs": ["https://cdn.instructables.com/F07/VOEO/JTOMZNDP/F07VOEOJTOMZNDP.LARGE.jpg", "https://cdn.instructables.com/FG4/COR1/JTOMZNE8/FG4COR1JTOMZNE8.LARGE.jpg", "https://cdn.instructables.com/FNK/6MAK/JTOMZNEU/FNK6MAKJTOMZNEU.LARGE.jpg", "https://cdn.instructables.com/F4H/Y8YR/JTOMZNGX/F4HY8YRJTOMZNGX.LARGE.jpg", "https://cdn.instructables.com/FCK/2JIS/JTOMZNHT/FCK2JISJTOMZNHT.LARGE.jpg"], "step_title": "Step 2: Parts"}, {"step": 3, "steps_text": "3D printed parts are very important in this project so I would like to talk more about how to print and post-process them.\nA lot of people may say that it's extremely important to keep infill super high but from what I noticed using very high infill doesn't help a lot, of course, there's nothing wrong with using high infill but in my opinion infill of about 20-40% is fine.\nI printed all of my parts with PLA but it's better to print them with PETG cost of PETG is almost the same and both of them are easy to print but PETG is a little bit more flexible so it's harder to break it.\nFor some of the files, you need to use supports, make sure to put them in the proper orientation so that there is not a lot of support material to remove and that you are able to remove it.\nYou don't have to print parts labeled as OLD, those are old versions of some files that I shared in case someone wants to use them.\nYou can also find .f3d, .iges and .step files so you can easily edit my project.\nBe careful while post-processing those parts, it's easy to break them. Also, make sure that you are able to fit all of the bearings inside, you should use a vise to put them in place so it should be tight. You may also need to sand slightly those pins that go into aluminum profiles it depends on the accuracy of your 3D printer.\nThere are also two \"tools\" those are not part of the CNC but are very useful to drill holes in aluminium profiles and wooden bed.", "step_imgs": ["https://cdn.instructables.com/F6I/BKNO/JTON3DTO/F6IBKNOJTON3DTO.LARGE.jpg"], "step_title": "Step 3: 3D Printing"}, {"step": 4, "steps_text": "Before assembling all of the components you may need to cut them to the proper length. Thanks to modular design it's up to you how long you want those components to be. I used 60cm and 30cm long aluminum profiles and 12mm rods. If you want to make a bigger machine you just have to use longer aluminum profiles, rods and lead screws, 3D printed parts stay the same. If you bought all of the parts cut to the length you wanted just skip this step.\nIf you have access to a miter saw use it to cut aluminum profiles that way you will have a perfectly straight edge of cut. I found those rods and lead screws impossible to cut with a hand saw so you need to use an angle grinder to do that.\nAt this point, it's also a good idea to put in place all of the bearings. I did it using a small vise, as I said depends on the quality of your 3D prints you may need to sand those slightly be careful because you don't want to break any part :)", "step_imgs": ["https://cdn.instructables.com/FW5/0RO6/JT4TTBME/FW50RO6JT4TTBME.LARGE.jpg", "https://cdn.instructables.com/FQR/UJX2/JT4TTCIB/FQRUJX2JT4TTCIB.LARGE.jpg", "https://cdn.instructables.com/FN4/R8MG/JT4TTCNN/FN4R8MGJT4TTCNN.LARGE.jpg", "https://cdn.instructables.com/F6A/HQJF/JT4TTCMH/F6AHQJFJT4TTCMH.LARGE.jpg", "https://cdn.instructables.com/FBS/73IY/JT4TTCLC/FBS73IYJT4TTCLC.LARGE.jpg", "https://cdn.instructables.com/FRV/UPUJ/JT4TTCJI/FRVUPUJJT4TTCJI.LARGE.jpg", "https://cdn.instructables.com/FPK/NOD1/JT4TTBUU/FPKNOD1JT4TTBUU.LARGE.jpg", "https://cdn.instructables.com/FV2/KI60/JTOMZNN6/FV2KI60JTOMZNN6.LARGE.jpg", "https://cdn.instructables.com/FQH/9L4H/JTOMZNP4/FQH9L4HJTOMZNP4.LARGE.jpg", "https://cdn.instructables.com/FL0/0WBA/JTOMZNR1/FL00WBAJTOMZNR1.LARGE.jpg", "https://cdn.instructables.com/F5I/JQBS/JTOMZNNH/F5IJQBSJTOMZNNH.LARGE.jpg"], "step_title": "Step 4: Prepare for Assembly"}, {"step": 5, "steps_text": "To make things easier we will start with the assembly of the Z axis. Put two rods in Z-axis carriage but not all the way through we have to put there Dremel holder too. Dremel holder should move freely on the linear bearings. 608zz beating should be already in place in the hole on the bottom of Z-axis carriage. Now we can install a stepper motor with a lead screw and 3D printed coupler. Fix the motor with M3 screws and make sure that both rods are secured with a screw at the bottom. To make it easier for further use point the stepper motor connector backward because that's where we will install electronics.", "step_imgs": ["https://cdn.instructables.com/FAA/U7ET/JTOMZNRR/FAAU7ETJTOMZNRR.LARGE.jpg", "https://cdn.instructables.com/FXG/7CFF/JTOMZNKM/FXG7CFFJTOMZNKM.LARGE.jpg", "https://cdn.instructables.com/FIX/CC31/JTOMZNS7/FIXCC31JTOMZNS7.LARGE.jpg", "https://cdn.instructables.com/FWZ/T5Y9/JTOMZNSN/FWZT5Y9JTOMZNSN.LARGE.jpg", "https://cdn.instructables.com/FFB/DX2R/JTOMZNSW/FFBDX2RJTOMZNSW.LARGE.jpg", "https://cdn.instructables.com/FO2/HLVC/JTOMZNTC/FO2HLVCJTOMZNTC.LARGE.jpg", "https://cdn.instructables.com/FU9/CTJT/JTOMZNTR/FU9CTJTJTOMZNTR.LARGE.jpg", "https://cdn.instructables.com/FPC/AKAW/JTOMZNU4/FPCAKAWJTOMZNU4.LARGE.jpg"], "step_title": "Step 5: Z Axis"}, {"step": 6, "steps_text": "Tighten brass nuts to both 3D printed parts. Grab one of the X-axis carriages and join two rods to it. Then put a Z-axis carriage on those rods and close with the other X-axis carriage on the opposite side. Attach a motor with a lead screw to 3D printed part with M3 screws.", "step_imgs": ["https://cdn.instructables.com/F9R/MD4Y/JTOMZNIJ/F9RMD4YJTOMZNIJ.LARGE.jpg", "https://cdn.instructables.com/FFM/W75W/JTOMZNJ8/FFMW75WJTOMZNJ8.LARGE.jpg", "https://cdn.instructables.com/FOZ/0BLZ/JTOMZNUT/FOZ0BLZJTOMZNUT.LARGE.jpg", "https://cdn.instructables.com/F3M/VXKV/JTOMZNV8/F3MVXKVJTOMZNV8.LARGE.jpg", "https://cdn.instructables.com/F8Y/JAO8/JTOMZNVS/F8YJAO8JTOMZNVS.LARGE.jpg", "https://cdn.instructables.com/F95/I3XA/JTOMZNW0/F95I3XAJTOMZNW0.LARGE.jpg", "https://cdn.instructables.com/F6G/NYZ8/JTOMZNW5/F6GNYZ8JTOMZNW5.LARGE.jpg", "https://cdn.instructables.com/FRE/4TI6/JTOMZNWY/FRE4TI6JTOMZNWY.LARGE.jpg", "https://cdn.instructables.com/FPT/ZIJ2/JTOMZNXC/FPTZIJ2JTOMZNXC.LARGE.jpg"], "step_title": "Step 6: X Axis"}, {"step": 7, "steps_text": "Y-axis is directly connected to the main frame of this machine. It's made out of 20x20mm aluminum extrusion profiles connected together with screws to ensure rigidity. I choose 20x20mm profiles because those are easy to get (at least here in Poland), not that expensive and fit the size of this machine. Bigger profiles could be used but for such a small machine it wouldn't make a lot of difference. Because this machine is modular you don't have to use specific lengths of the profiles. Do you want to make a big machine? -> use longer profiles. Do you want to make a smaller machine? -> use shorter profiles. I cut my profiles to 60cm (we need two of them) and 30cm (we need 4). Once you have profiles cut to a length that you want we can start drilling holes. We need to drill holes on the ends of longer profiles, to make that easier I designed 3D printable tool that you can put on the profile and then drill a hole with 6.5mm drill bit. It's 3D printable so made out of plastic, it's easy to drill it out but we only need to make 4 holes with this tool so that shouldn't be a big problem. On both ends of 2 shorter profiles, we have to make a thread with a tap. It's a good idea to pre-drill a hole for the tap with 5.2mm drill bit and then create an M6 thread.\nLet's start by attaching stepper motors to 3D printed parts with M3 screws. We can also fix couplers to the motors. Put in place M5 screws with hammer nut to make it easier to assemble. You can slide 3D printed part with a motor on to the longer aluminum profile. On the other side, you can fix a shorter profile as shown on the pictures. Tighten the screws with hammer nuts. Also, don't forget to tighten an M6 screw on the side of the longer aluminum profile. Do the same on the other side. Attach middle brackets (you can install as many as you want (2 or 3) with corner connectors, M5 screws and hammer nuts.\nWe already installed Y-axis motor supports and lead screw support, right now we have to attach lead screws and Y-axis rods. Again thanks to the modularity of this machine it's up to you how long rods and lead screws will be (You have to figure out good length so that it will work with the length of your aluminum profiles).\nIt's time to connect X axis with the Y-axis, grab the X-axis (with Z-axis already installed) and put it on the rods and lead screws, you will have to rotate lead screws with your fingers to push the X-axis back a little bit", "step_imgs": ["https://cdn.instructables.com/FWZ/DE20/JTOMZNXK/FWZDE20JTOMZNXK.LARGE.jpg", "https://cdn.instructables.com/FLL/JY63/JTOMZNXL/FLLJY63JTOMZNXL.LARGE.jpg", "https://cdn.instructables.com/FYB/6PB3/JTOMZNXO/FYB6PB3JTOMZNXO.LARGE.jpg", "https://cdn.instructables.com/FFB/8WUU/JTOMZNXV/FFB8WUUJTOMZNXV.LARGE.jpg", "https://cdn.instructables.com/FPG/IBJR/JTOMZNYX/FPGIBJRJTOMZNYX.LARGE.jpg", "https://cdn.instructables.com/FF3/8EK6/JTOMZNZG/FF38EK6JTOMZNZG.LARGE.jpg", "https://cdn.instructables.com/FMY/I7NV/JTOMZO3M/FMYI7NVJTOMZO3M.LARGE.jpg", "https://cdn.instructables.com/FVM/VC9X/JTOMZO1K/FVMVC9XJTOMZO1K.LARGE.jpg", "https://cdn.instructables.com/F4Z/O5V6/JTOMZO6X/F4ZO5V6JTOMZO6X.LARGE.jpg", "https://cdn.instructables.com/FTP/SWKW/JTOMZO74/FTPSWKWJTOMZO74.LARGE.jpg", "https://cdn.instructables.com/FC3/5TRE/JTOMZO7G/FC35TREJTOMZO7G.LARGE.jpg", "https://cdn.instructables.com/FZQ/HOZ9/JTOMZO7U/FZQHOZ9JTOMZO7U.LARGE.jpg", "https://cdn.instructables.com/FIB/VVZU/JTOMZO90/FIBVVZUJTOMZO90.LARGE.jpg", "https://cdn.instructables.com/FXQ/U24O/JTON4846/FXQU24OJTON4846.LARGE.jpg", "https://cdn.instructables.com/F5U/IAR7/JTOMZO97/F5UIAR7JTOMZO97.LARGE.jpg", "https://cdn.instructables.com/FG0/YVZV/JTOMZO9E/FG0YVZVJTOMZO9E.LARGE.jpg", "https://cdn.instructables.com/F5K/6QDO/JTOMZO9P/F5K6QDOJTOMZO9P.LARGE.jpg", "https://cdn.instructables.com/F43/A8AF/JTOMZOA2/F43A8AFJTOMZOA2.LARGE.jpg", "https://cdn.instructables.com/FLU/P2Z6/JTOMZOAW/FLUP2Z6JTOMZOAW.LARGE.jpg", "https://cdn.instructables.com/FIP/V92S/JTOMZOB0/FIPV92SJTOMZOB0.LARGE.jpg", "https://cdn.instructables.com/F46/1OVB/JTOMZOB9/F461OVBJTOMZOB9.LARGE.jpg", "https://cdn.instructables.com/F4B/XPQK/JTOMZOBJ/F4BXPQKJTOMZOBJ.LARGE.jpg", "https://cdn.instructables.com/FRF/0VOJ/JTOMZOC4/FRF0VOJJTOMZOC4.LARGE.jpg", "https://cdn.instructables.com/FZ9/FF21/JTOMZOC9/FZ9FF21JTOMZOC9.LARGE.jpg", "https://cdn.instructables.com/FH3/PP6P/JTOMZOCH/FH3PP6PJTOMZOCH.LARGE.jpg"], "step_title": "Step 7: Y Axis and Aluminium Frame"}, {"step": 8, "steps_text": "I had to find something that would be good for a table of the CNC. Table with slots would be great but it is expensive. I could make it out of aluminum plate or even steel but that's hard to cut (especially to cut it straight with an angle grinder). As most of us (makers) I don't have a huge CNC plasma, waterjet or laser that can cut such materials but I have a jigsaw so I can make it out of plywood. I finally used table saw to cut it straight but corners should be cut with jigsaw or handsaw. Plywood is strong enough, it's easy to cut and you can easily buy it anywhere so it seems to be a perfect choice.\nWith another 3D printed tool, I drilled holes on the edge of this plywood to attach it to an aluminum frame with M5x10mm screws and hammer nuts.\nBecause I don't want to destroy this plywood I added a wasteboard (MDF) on the top so that I can cut all the way through the material.\nI also added threaded inserts to the table so that I can use M5 screws to attach material to the table of CNC. You can buy something like this online, you need to drill a hole and put it in place with a hammer, simple and cheap upgrade that is really useful.\nWasteboard - a piece of material that you can mill in when you mill all the way through the material and you don't want to destroy table of your CNC. It should be replaced after some time.", "step_imgs": ["https://cdn.instructables.com/FL7/J87C/JTOMZNH5/FL7J87CJTOMZNH5.LARGE.jpg", "https://cdn.instructables.com/FO0/WR4L/JT4TTB6V/FO0WR4LJT4TTB6V.LARGE.jpg", "https://cdn.instructables.com/FCI/UKD5/JT4TTB6W/FCIUKD5JT4TTB6W.LARGE.jpg", "https://cdn.instructables.com/FMD/GSVP/JT4TTCH5/FMDGSVPJT4TTCH5.LARGE.jpg", "https://cdn.instructables.com/F3M/WDR5/JT4TTCH4/F3MWDR5JT4TTCH4.LARGE.jpg", "https://cdn.instructables.com/FOV/OTZP/JTOMZOCN/FOVOTZPJTOMZOCN.LARGE.jpg", "https://cdn.instructables.com/FTN/QDUZ/JTOMZOCT/FTNQDUZJTOMZOCT.LARGE.jpg", "https://cdn.instructables.com/FEU/352P/JTOMZOEQ/FEU352PJTOMZOEQ.LARGE.jpg", "https://cdn.instructables.com/FIB/COR9/JTOMZOEZ/FIBCOR9JTOMZOEZ.LARGE.jpg", "https://cdn.instructables.com/FYG/LSGQ/JTOMZOFJ/FYGLSGQJTOMZOFJ.LARGE.jpg", "https://cdn.instructables.com/FBT/4SGV/JTOMZOFN/FBT4SGVJTOMZOFN.LARGE.jpg", "https://cdn.instructables.com/FUJ/V81A/JTOMZOGW/FUJV81AJTOMZOGW.LARGE.jpg", "https://cdn.instructables.com/FTZ/XEDU/JTOMZOH6/FTZXEDUJTOMZOH6.LARGE.jpg"], "step_title": "Step 8: Table"}, {"step": 9, "steps_text": "As the name of this project insists as a spindle I use a Dremel tool model 3000, there are already some people that successfully use a different model like 4000 or even completely different spindles. At the end of this instructable, I also write a little bit about the different spindle that I want to use with this machine. That's because Dremel limit's you only to 1/8 inch bits and also because of high rpm and low torque it's not ideal for machining for example aluminum (but it's possible). As long as you only want to machine wood, MDF, acrylic and even for delicate aluminum job Dremel works fine but there is no way to use bigger bit's for faster machining, there are not as many bits with a 1/8 inch shank as others and Dremel is relatively hard to mount.\nBut still, this is a super cheap entry-level solution for your first CNC with speed control and it's really good quality. You can always upgrade it later.\nAt the beginning of this project I wanted to add a relay to turn on and off the Dremel with a G-code command but because of some problems (I would have to add a socket to plug in a Dremel and then connect that to a wall outlet and protect all of that so that it would be safe, it's not worth it and it's hard to fit all of that on such small machine) I decided not to use it.\nI was thinking a lot about the way of how Dremel should be attached to the spindle holder. Here is how I did it. There is a nut on the bottom of the Dremel, I thought that I can use it to fix it to the 3D printed part. That didn't work as good as I wanted to. So I added a support structure in the middle of the Dremel with a clamp so that you can squeeze it with M3 screws and nuts.\nSo every time I am machining something I have to remember to turn on the Dremel, I can also easily control the RPM of the Dremel with the slider on the top of it.", "step_imgs": ["https://cdn.instructables.com/FCI/26AF/JTON47LA/FCI26AFJTON47LA.LARGE.jpg", "https://cdn.instructables.com/F0Z/CATH/JTON47LB/F0ZCATHJTON47LB.LARGE.jpg", "https://cdn.instructables.com/F96/XV47/JTON47LC/F96XV47JTON47LC.LARGE.jpg", "https://cdn.instructables.com/FTU/RM9C/JTON47LD/FTURM9CJTON47LD.LARGE.jpg", "https://cdn.instructables.com/FHH/F8J7/JTON47MW/FHHF8J7JTON47MW.LARGE.jpg", "https://cdn.instructables.com/FME/4OTG/JTON47MX/FME4OTGJTON47MX.LARGE.jpg"], "step_title": "Step 9: Spindle"}, {"step": 10, "steps_text": "I got a lot of questions about how to install GRBL on Arduino. Don't worry that's very simple. We will need an Arduino with a USB cable and software that you can download here: https://github.com/grbl/grbl\nOnce you have a .ZIP file downloaded from a link above you can add to Arduino IDE as a library. Go to file examples and open an example from GRBL tab. You should see just one line of code, nothing more, that's ok. Connect Arduino to the computer and upload a program just like any normal program. And that's it GRBL is installed on Arduino, you don't have to modify any code. If you have problems with this step try to google \"how to install GRBL on Arduino\" you will find tons of tutorials on how to do that and how to troubleshoot your problems.\nThere is also one thing to change, you can do this through the serial monitor in Arduino IDE or console in CNCjs. All we have to do is send 3 simple commands:\n$100 = 400\n$101 = 400\n$102 = 400\nSend those commands separately. Depends on the resolution of your stepper motors and microstepping that you used you may need to use a different value than 400.", "step_imgs": ["https://cdn.instructables.com/FOU/SS5T/JTON3FE0/FOUSS5TJTON3FE0.LARGE.jpg", "https://cdn.instructables.com/FHN/U474/JTON4JDA/FHNU474JTON4JDA.LARGE.jpg", "https://cdn.instructables.com/FLH/2RS4/JTON4JDB/FLH2RS4JTON4JDB.LARGE.jpg", "https://cdn.instructables.com/F8B/959D/JTON4JE4/F8B959DJTON4JE4.LARGE.jpg"], "step_title": "Step 10: Install GRBL"}, {"step": 11, "steps_text": "That was a really hard part for a lot of people, it's hard to make a schematic of connection between a CNC shield and stepper motors because there is no such part as CNC shield in almost any software. Almost any. I found a CNC shield part for fritzing! Isn't that great, fritzing is the easiest schematic software out there so anyone can understand it :) I found the CNC shield right here.\nBefore we will plug 4 stepper drivers to the CNC shield (there are only three on the schematic but we need 4), we need to connect jumpers because connectors for those are under stepper drivers. Those jumpers enable micro stepping we need to have all 3 connectors connected so that's the total of 12 jumpers but we also need 2 of them to mirror the movement of Y axis motor to the A motor and we can do so by putting two jumpers on the left side of the shield. Now you can plug stepper drivers and then stepper motors. How to plug stepper motors? It depends on the motors that you have there is no easy answer. If you notice that your motor is going in the oposite direction than it should you need to plug the motor the other way around (disconnect it, rotate 180 degrees around Z axis and plug back in place). Some people also use endstops in their Dremel CNC but I don't, if you want you can connect endstops to the right side of the CNC shield. And in the end, we can connect the power supply or the connector to the shiled to the screw terminal labeled as 12-36V. And that's all for the connection, really not that hard :)", "step_imgs": ["https://cdn.instructables.com/FL8/JSKJ/JSYZE0HO/FL8JSKJJSYZE0HO.LARGE.jpg", "https://cdn.instructables.com/FXU/7SU1/JTON47MZ/FXU7SU1JTON47MZ.LARGE.jpg", "https://cdn.instructables.com/FOK/A82U/JTON47N2/FOKA82UJTON47N2.LARGE.jpg", "https://cdn.instructables.com/FJQ/RIDD/JTON47N3/FJQRIDDJTON47N3.LARGE.jpg", "https://cdn.instructables.com/FT2/DEWD/JTON47N5/FT2DEWDJTON47N5.LARGE.jpg", "https://cdn.instructables.com/FM1/2TGC/JTON47N6/FM12TGCJTON47N6.LARGE.jpg", "https://cdn.instructables.com/FJY/YB13/JTON47O4/FJYYB13JTON47O4.LARGE.jpg", "https://cdn.instructables.com/FEG/9YX1/JTON47O7/FEG9YX1JTON47O7.LARGE.jpg", "https://cdn.instructables.com/F08/C7MK/JTON47XC/F08C7MKJTON47XC.LARGE.jpg", "https://cdn.instructables.com/FEH/HIGD/JTON47YR/FEHHIGDJTON47YR.LARGE.jpg", "https://cdn.instructables.com/FPL/6J98/JTON47ZE/FPL6J98JTON47ZE.LARGE.jpg"], "step_title": "Step 11: Electronics"}, {"step": 12, "steps_text": "Initially, I used a 12V 30A power supply, but that was overkill for this project. I swap this power supply with my lab bench power supply to see how much current is needed to run it. I found out that max current consumption is smaller than 2A so I bought a 12V 3A power supply. Generally, there is nothing wrong with having too powerful power supply but there is no need to spend the extra money and this huge, bulky, 30A beast is just ugly. Right now I have a simple power supply with DC plug so I can easily connect it to the machine. Keep in mind that depends on the motors and other electronics that you use you may need a stronger power supply than 3A.", "step_imgs": ["https://cdn.instructables.com/F62/71D1/JTOMZNF8/F6271D1JTOMZNF8.LARGE.jpg"], "step_title": "Step 12: Power Supply"}, {"step": 13, "steps_text": "It's always good to keep your cables tidy. You can find a lot of different ways to do the cable management, I prefer to use this cable wrap thing it's inexpensive and works well for various cables. You may also use cable drag chain but then you have to figure out how to mount it to the machine, it's more professional but harder to use. Keep in mind that cable management is very important in CNC machine because you don't want to cut cables while milling and you also don't want those cables to jam your machine and destroy your material while milling.", "step_imgs": ["https://cdn.instructables.com/FIM/N7C5/JTON47VE/FIMN7C5JTON47VE.LARGE.jpg", "https://cdn.instructables.com/FDU/49F5/JTON47WD/FDU49F5JTON47WD.LARGE.jpg", "https://cdn.instructables.com/FRO/XTXE/JTON47WR/FROXTXEJTON47WR.LARGE.jpg"], "step_title": "Step 13: Cable Management"}, {"step": 14, "steps_text": "That's the software for the computer, through it we will control our machine, send gcode and change some parameters through its console in GRBL. There is a lot of different gcode sender options like GRBL controller, mach3 and path pilot but I chose CNCjs because it's free and unlike every other software it looks incredibly good and is easy to control! You can install it on mac, windows and Linux another great advantage! You can even install it on a raspberry pi and control through browser away from the machine! All of that for free in an open source software! Sound's like a perfect solution and it really is so far for me. You can download it here:\nhttps://cnc.js.org\nIf you have problems with connecting to the machine: most likely that's because wrong baud rate try to change the baud rate in CNCjs to 11520.", "step_imgs": ["https://cdn.instructables.com/FO3/V5J6/JTON3F1R/FO3V5J6JTON3F1R.LARGE.jpg", "https://cdn.instructables.com/FAE/Z97S/JTON480Z/FAEZ97SJTON480Z.LARGE.jpg"], "step_title": "Step 14: CNCjs"}, {"step": 15, "steps_text": "Fusion 360 do I have to explain what is it? If you have ever designed anything with CAD software you probably heard about Fusion 360. And to keep it short that's the best software ever! You can do anything with this (CAD, CAM, render, animations, simulations, collaborative design and even more) and it works both on mac and windows. I used Fusion to design Dremel CNC and right now I use Fusion to create Gcode and mill things with this machine. Above you can find my video about how to use Fusion360 and CNCjs with Dremel CNC. If you need some more info on that check out NYC CNC, great YouTube channel about CNC machining.", "step_imgs": ["https://cdn.instructables.com/FND/A7CP/JTON3EM3/FNDA7CPJTON3EM3.LARGE.jpg"], "step_title": "Step 15: Fusion 360"}, {"step": 16, "steps_text": "Safety is a very important aspect of CNC machining, there is a lot of dangerous things that can damage you, you don't want to be damaged so here are my tips on how to stay safe with such machine. Fortunately, NEMA 17 motors aren't crazy fast and torque is as great as with some servo motors used in industrial CNC machines. But there is still a fast spinning spindle and danger of crushing your fingers. While machining there are chips flying all over the place so we need to have a safety glasses (because safety is number one priority) and depends on the material that we are machining (wood, MDF) we may need a mask. It's also a good idea to build an enclosure for DIY Dremel CNC and some people already build one, I am also planning to do this in the near future. Another safety improvement would be to add a big red safety switch so that in case something bad happens you can easily stop the machine (we can also do that in CNCjs but it takes more time and isn't that reliable). Keep in mind that material and bit may be hot after machining and make sure that machine finished its operation before putting your hands in the working area. Machining for a longer period of time is very uncomfortable for ears so some kind of hearing protection is recommended. I also thought about using active noise canceling headphones, should be perfect for a CNC machine because noise is very consistent but I don't have any headphones like this and those are quite expensive. Keep in mind that those are just some tips from me about safety while dealing with a CNC machine, there is a lot of things that can go wrong and you always have to be careful and think in order to be safe.", "step_imgs": [], "step_title": "Step 16: Safety"}, {"step": 17, "steps_text": "The result of this project just blows my mind! When I started it I just wanted to see if it is possible to create a 3D printed CNC machine, I wanted to build a tool that I will be able to use in my further projects. Right from the beginning of it, I knew that I will publish online all of the files and the instruction but I had never thought that this project will be so popular and that so many people will build it (check out next step). That's the biggest project of mine so far! Because of some problems and a lot of upgrades and tweaks that I did to the machine, it took me a long time before finishing this instructable, but I wanted it to be perfect and as detailed as possible so that everyone will be able to easily build an inexpensive CNC machine. Above you can see the newest images of the Dremel CNC with nice cable management and some small upgrades. There are also images of stuff that I milled on my machine. If you want to see what others made on Dremel CNC joint the Facebook group!", "step_imgs": ["https://cdn.instructables.com/F1T/8QHN/JTON48JA/F1T8QHNJTON48JA.LARGE.jpg", "https://cdn.instructables.com/FB1/P1K7/JTON48JC/FB1P1K7JTON48JC.LARGE.jpg", "https://cdn.instructables.com/FIM/BIQ1/JTON4A8B/FIMBIQ1JTON4A8B.LARGE.jpg", "https://cdn.instructables.com/FWB/WEH0/JT4TTBY4/FWBWEH0JT4TTBY4.LARGE.jpg", "https://cdn.instructables.com/FQ3/45YF/JT4TTBW6/FQ345YFJT4TTBW6.LARGE.jpg"], "step_title": "Step 17: Result"}, {"step": 18, "steps_text": "Choosing proper feeds and depth of cut is really just about experimenting. Start slow and shallow, slowly increase the speed and see what happen. Be careful, it's easy to break a milling bit. Keep in mind that going slow is as bad as going too fast, you need to be in between for best results. Here are the settings that I use:\nWood, MDF:\nFeed: 800mm/min\nDepth of cut: 3mm\nUsually, I use adaptive clearing for everything and 2d contour for contour cut\nDremel switch 8/10\nAcrylic:\nFeed: 500mm/min\nDepth of cut: 1mm\nDremel switch 6/10\nAluminum:\nFeedrate: 800mm/min\nDepth of cut: 0.2mm\nDremel at full speed\nKeep in mind that depends on your setup those values may not work at all!!!\nAnd here are milling bits that I am using:\nFor wood\nFor aluminum/acrylic", "step_imgs": ["https://cdn.instructables.com/FGG/GF74/JTON7D38/FGGGF74JTON7D38.LARGE.jpg", "https://cdn.instructables.com/FE5/66UU/JTON7D5W/FE566UUJTON7D5W.LARGE.jpg"], "step_title": "Step 18: How to Mill?"}, {"step": 19, "steps_text": "When I noticed that there is quite a lot of people on YouTube and Facebook asking for help regards to this project I decided to start a Facebook group so that everyone can help each other and share experiences. Starting a Facebook group was a great decision. Right now (March 2019) there are over 1200 people in the group, a lot of questions asked every week and even more great answers. There were also some good ideas about the project so according to the people from the group I did some changes to this machine. It's really amazing to see that many people from all over the world hyped about my project that started just as a small idea in my head. I even asked people in the group, where they are from and created a map with all of those places (see it above) AMAZING! All of the continents except Antarctica and I don't expect Dremel CNC to show up right there soon :)\nThe community behind this project is incredible! If you have some problems and want to ask a question - ask on the Facebook group.\nHuge thanks to everyone in the group for helping each other!", "step_imgs": ["https://cdn.instructables.com/FPC/7D3X/JTON3FTE/FPC7D3XJTON3FTE.LARGE.jpg", "https://cdn.instructables.com/FXA/Y0R8/JTON6U1B/FXAY0R8JTON6U1B.LARGE.jpg", "https://cdn.instructables.com/F7B/SXKW/JTON6YJ1/F7BSXKWJTON6YJ1.LARGE.jpg", "https://cdn.instructables.com/FHY/1WWV/JTON6YKJ/FHY1WWVJTON6YKJ.LARGE.jpg", "https://cdn.instructables.com/FJM/15GH/JTON6YM0/FJM15GHJTON6YM0.LARGE.jpg", "https://cdn.instructables.com/F35/Q9AL/JTON6YNH/F35Q9ALJTON6YNH.LARGE.jpg", "https://cdn.instructables.com/FEK/I6LP/JTON6YS3/FEKI6LPJTON6YS3.LARGE.jpg", "https://cdn.instructables.com/FSZ/X9GB/JTON6YOZ/FSZX9GBJTON6YOZ.LARGE.jpg", "https://cdn.instructables.com/FQ7/NYU0/JTON6YQH/FQ7NYU0JTON6YQH.LARGE.jpg", "https://cdn.instructables.com/FNP/H2MC/JTON6YTS/FNPH2MCJTON6YTS.LARGE.jpg", "https://cdn.instructables.com/F23/W7KX/JTON6YVI/F23W7KXJTON6YVI.LARGE.jpg", "https://cdn.instructables.com/FFH/S33M/JTON6YX1/FFHS33MJTON6YX1.LARGE.jpg"], "step_title": "Step 19: Community"}, {"step": 20, "steps_text": "This project grew so much that you can find a lot of different versions of my design online, there are holders for different tools like a laser or vinyl cutter. I also redesigned some of the files so those are a little bit different from the original version that I still use. I will try to put all of the links below to the remixes and everything that is relevant:\nRemix by FrancescoF\nTighter Tolerances and easier assembly by David Dienhart\nGeneric mount by Sletan\n52mm Spindle Mount\nVinyl cutter mount by MAILLERE Brigitte\nX axis holder with an additional aluminum profile.\nDremel 395 Mount by Chrome98\nDremel 395 Z Axis Carriage by cadbury204\nDIY Dremel CNC - X Axis remix by Bob123bob\nDIY Dremel CNC_Tool_Holder by MarkBinary\nI also upgraded the CNC with threaded inserts embedded in the table of the CNC and covers for lead screw to protect it from dust and chips.", "step_imgs": ["https://cdn.instructables.com/FFA/JINV/JTON47L2/FFAJINVJTON47L2.LARGE.jpg", "https://cdn.instructables.com/FPJ/DB7D/JTON47L6/FPJDB7DJTON47L6.LARGE.jpg"], "step_title": "Step 20: Updates & Upgrades"}, {"step": 21, "steps_text": "That's it for this project! I hope you enjoyed this instructable :) If you have any question ask them in the Facebook group or in the comments below! I would also love to hear what you think about the project :D\nHappy making!", "step_imgs": ["https://cdn.instructables.com/FEZ/YR5E/JTON48JK/FEZYR5EJTON48JK.LARGE.jpg"], "step_title": "Step 21: Conclusion"}], "channel": "CNC"}, {"category": "Technology", "description": "https://youtu.be/Ma4QnfQ7Dxo\nWell... I'm pretty sure that you don't want a phone that just plays hold music...\nBut there are countless other exciting projects you can make with this very basic hack of these readily available \"desk\" phones.\nExcited to see what other projects come out of this Instructable : )\nHave fun!", "title": "Greatest Holdies: I Hacked an Old Phone to Play the Greatest Hold Music.", "url": "https://www.instructables.com/id/Greatest-Holdies-I-Hacked-an-Old-Phone-to-Play-the/", "steps": [{"step": 1, "steps_text": "Parts:\nArduino Mega\nAdafruit Music Maker Shield w/ 3W Amp\nUltrasonic Rangefinder\n3W Speaker\nPotentiometers\nPower Supply\nMicro SD\nAnd of course, an old phone! For reasons I can't quite understand there are many cheap options for phones like this on Amazon. Who is buying them, and why? Here are some Amazon options:\nOld phone A (used in this hack)\nOld phone B\nTotal cost for this project will be ~130$", "step_imgs": ["https://cdn.instructables.com/FYB/STFD/JTON44OH/FYBSTFDJTON44OH.LARGE.jpg"], "step_title": "Step 1: Parts Parts Parts"}, {"step": 2, "steps_text": "Open it up.\nWe can throw out the bell.\nSee that little white plastic lever on the circuitboard? That is what detects if the phone is hung up. We are going to use that because it is quite annoying to build our own switch for this.\nAlso note the color of the wires which connect to the handset speaker: red and green. (yellow and black are for the mic).", "step_imgs": ["https://cdn.instructables.com/F05/PX0Q/JTON44OP/F05PX0QJTON44OP.LARGE.jpg", "https://cdn.instructables.com/F6Y/XZ0B/JTON44OS/F6YXZ0BJTON44OS.LARGE.jpg", "https://cdn.instructables.com/F5S/PPRH/JTON44OQ/F5SPPRHJTON44OQ.LARGE.jpg", "https://cdn.instructables.com/FLG/N7H5/JTON44P2/FLGN7H5JTON44P2.LARGE.jpg"], "step_title": "Step 2: Check It Out"}, {"step": 3, "steps_text": "In replace of the bell, glue in your 3W speaker.\nI cut away the supports that were in the way.", "step_imgs": ["https://cdn.instructables.com/FC8/FVL9/JTON44OX/FC8FVL9JTON44OX.LARGE.jpg"], "step_title": "Step 3: Install Our 3W Speaker"}, {"step": 4, "steps_text": "These are the points that we need to solder on the existing PCB to intercept the hangup switch. I connected my two green wires to them.\nDon't worry if you have a slightly different phone. All phones will have a switch similar to this and you can use a multimeter tool to detect which pins go HIGH/LOW when the switch is pressed.", "step_imgs": ["https://cdn.instructables.com/F3E/DD0X/JTON44P1/F3EDD0XJTON44P1.LARGE.jpg"], "step_title": "Step 4: Intercept the Hangup Trigger"}, {"step": 5, "steps_text": "Great instructions on the Adafruit page for building your MP3 Shield: https://learn.adafruit.com/adafruit-music-maker-shield-vs1053-mp3-wav-wave-ogg-vorbis-player\nRemember to close the 3pins that enable it to be used on an Arduino Mega.\nAnd I also closed the pins that give it a +12db sound boost. It sounds like hell once these are closed, but whatever, this is hold music, right?", "step_imgs": ["https://cdn.instructables.com/F4B/7FKD/JTON44OI/F4B7FKDJTON44OI.LARGE.jpg", "https://cdn.instructables.com/FAN/PEIU/JTON44OK/FANPEIUJTON44OK.LARGE.jpg"], "step_title": "Step 5: Build the MP3 Shield"}, {"step": 6, "steps_text": "Thankfully on my keypad the rows and columns were numbered on the circuitboard.\nSometimes keypads have 8 wires. Sometimes they have 7.\nMake note of these numbers and what Arduino pins they are plugged into. You will need to enter this into the code later.", "step_imgs": ["https://cdn.instructables.com/FK6/QZ0I/JTON44P8/FK6QZ0IJTON44P8.LARGE.jpg"], "step_title": "Step 6: Intercept the Keypad"}, {"step": 7, "steps_text": "Well, sadly, the LED on my phone was bust. But I am sure it works on other phones. Why not put it to use? You may want to add a resistor because I didn't see one on the tiny circuitboard the LED is mounted on.", "step_imgs": ["https://cdn.instructables.com/FQV/ZVFP/JTON44PA/FQVZVFPJTON44PA.LARGE.jpg"], "step_title": "Step 7: Intercept the LED"}, {"step": 8, "steps_text": "We use the proximity sensor to detect if someone is standing in front of the phone, and if so, it starts ringing. This is a great way to get people interacting with your phone without you being there. Who can resist an ambiguous bright red ringing phone? The answer is, no one.\nDrill a hole carefully (start with a small bit and increase size). You can mount these ultrasonic rangefinders on the back side and even cover them up a bit and they will work just fine. I added a small acrylic piece for cosmetic purposes but if your drilling is good you shouldn't need it.", "step_imgs": ["https://cdn.instructables.com/F7H/C0GD/JTON44PN/F7HC0GDJTON44PN.LARGE.jpg", "https://cdn.instructables.com/F16/EW6X/JTON44PF/F16EW6XJTON44PF.LARGE.jpg", "https://cdn.instructables.com/FHN/O3OZ/JTON44PX/FHNO3OZJTON44PX.LARGE.jpg"], "step_title": "Step 8: Install Our Proximity (Motion) Sensor"}, {"step": 9, "steps_text": "Left goes to the handset. Right goes to the speaker. Don't mix them up!", "step_imgs": ["https://cdn.instructables.com/F6A/IC9P/JTON44PB/F6AIC9PJTON44PB.LARGE.jpg"], "step_title": "Step 9: Connect the Audio: Speaker and Handset"}, {"step": 10, "steps_text": "These are not essential but nice to have in case you want to tune some variables without having to re-upload the code every time.\nI added two tuning dials. One for the distance (proximity) at which the phone is triggered.\nThe second is the duration before it starting ringing again after hung up.", "step_imgs": ["https://cdn.instructables.com/FT1/5BY5/JTON44PD/FT15BY5JTON44PD.LARGE.jpg", "https://cdn.instructables.com/FJY/WJYD/JTON44PU/FJYWJYDJTON44PU.LARGE.jpg", "https://cdn.instructables.com/FHZ/M4Y8/JTON44PJ/FHZM4Y8JTON44PJ.LARGE.jpg", "https://cdn.instructables.com/F6V/QWC3/JTON44Q1/F6VQWC3JTON44Q1.LARGE.jpg"], "step_title": "Step 10: Add the Tuning Dials"}, {"step": 11, "steps_text": "There is a very convenient screw hole that allows you to screw in the Arduino Mega right in between the speaker and the existing circuit board. It's like this phone wants to be hacked, right?\nAlso I spliced the power supply and soldered it directly to the Vin on the board. This saves space a bit.\nEverything fits in there nicely.", "step_imgs": ["https://cdn.instructables.com/FIH/YCZ6/JTON44RD/FIHYCZ6JTON44RD.LARGE.jpg", "https://cdn.instructables.com/FAN/MOC4/JTON44P4/FANMOC4JTON44P4.LARGE.jpg", "https://cdn.instructables.com/FYJ/KSTS/JTON44RB/FYJKSTSJTON44RB.LARGE.jpg"], "step_title": "Step 11: Get 'Em All in There"}, {"step": 12, "steps_text": "The Arduino Code and MP3 files are attached.\nPlease read the Arduino code for instructions and comments.", "step_imgs": ["https://cdn.instructables.com/F6P/F6QF/JTON8XCF/F6PF6QFJTON8XCF.LARGE.jpg"], "step_title": "Step 12: Upload the Code & Audio"}, {"step": 13, "steps_text": "Yay. You a Wizard Harry. Sail away sail away sail away...", "step_imgs": ["https://cdn.instructables.com/FCB/TLD6/JTON44SJ/FCBTLD6JTON44SJ.LARGE.jpg", "https://cdn.instructables.com/FAI/12CZ/JTON44SL/FAI12CZJTON44SL.LARGE.jpg", "https://cdn.instructables.com/FZB/ZDK5/JTON44TR/FZBZDK5JTON44TR.LARGE.jpg"], "step_title": "Step 13: Finished!"}], "channel": "Audio"}, {"category": "Technology", "description": "This is a 3d printed NES portable built using an NES on a chip retrobit NES. It is 129*40*200mm. it has 8 hours battery life, digital volume control and stylish(maybe) green case. It is not emulated, it is hardware run off an original cartridge so you can still play your original cartridges or test cartridges at games fairs. It was printed in green PLA at 0.2mm layer height. At 129x40x200mm it is as far as I know the thinnest and narrowest NES ever made.", "title": "The Thinnest & Narrowest Portable Nes?", "url": "https://www.instructables.com/id/The-Thinnest-Narrowest-Portable-Nes/", "steps": [{"step": 1, "steps_text": "I wanted to play NES games, but I didn't want it to be tv connected. The original NES takes up so much space in your living room that by the time you have routed the cables and the controllers you have aged significantly assuming you don't have a permanent setup. This is the desire to build a portable NES, playing the games available but in a portable form so you don\u2019t trip over trailing cables every time you want to play Tetris or Super Mario. The NES is old and simple, this means that there are many games that are available and homebrew games that have been recently released, this console without the flawed connector and lockout chip means that dirty cartridges are more likely to play. The instructable is not entirely chronological and the pictures are not as detailed as I would like, if you would like pictures of specific parts that I haven't shown then please tell me.", "step_imgs": [], "step_title": "Step 1: Why Did I Build It?"}, {"step": 2, "steps_text": "Because cartridges are cool, you cannot argue with that and I don\u2019t have a smartphone. looking on instructables the amount of NES cartridge projects is amazing, this shows that the NES cartridge is still popular. Nintendo still uses cartridges now for the switch, although they taste worse than the NES cartridges not that I have tried though.\nRoms are illegal, virtually everywhere in the world it is illegal to download roms.\nSmartphone touchscreen controls are useless and are impossible to use because you can\u2019t feel them (unless you can see through your skin, I lack this ability though.)\nIt is true that Nintendo did make the NES classic edition and this is licensed but this uses emulation and does not have all the games I would want to play. The NES classic also has HDMI video which makes it a bit harder to use and a more complex controller. A raspberry pi portable could be constructed like this one but again that requires roms and has been done so many times", "step_imgs": ["https://cdn.instructables.com/F82/G8NQ/JTOMYTZC/F82G8NQJTOMYTZC.LARGE.jpg"], "step_title": "Step 2: Why Not Emulate It Using a Raspberry Pi or Smartphone?"}, {"step": 3, "steps_text": "I chose the retrobit NES for the console, this is much smaller than the original huge NES and most of the circuitry is contained in a tiny ASIC (Application Specific Integrated Circuit). The console uses very little power, I haven\u2019t measured it but it is far less than an original NES would use (the whole portable uses 380ma at 5v probably the same as an original but that had no screen). The console can also be modified to run at 5v which is useful as this is what USB uses and is far better than the 9v that it originally used.\nThe screen chosen is a 4.3\u201d screen that is used for car backup cameras, if they made cars that weren't the size of the death star then that wouldn't be necessary. This is also modifiable to 5v so the entire console can run on 5v which means that I can use the Adafruit Powerboost 1000c to power the unit. I have previously used powerbank circuits for similar purposes though\nLooking at the retrobit it is clear that it can be made smaller, once opened there are three circuit boards in the console and only one of them is actually necessary. The first board just contains the controller ports and the power and reset switch, no actual circuitry. The reset switch was not used although I think that it may be necessary to use the reset button for some Zelda games, please correct me if this is wrong. The second board contains circuitry to step the 9v from the power supply down to 5v, I am not quite sure how this circuit works at a guess it uses a zener diode to provide a reference 5.1v and then a transistor as a voltage follower.\nThe other things on the board are some audio and video ports which are unnecessary also, so this board, like the other one can be removed. This is an iterative process remove one board and rewire then test, always test everything because then you know what it is that doesn\u2019t work if you have only changed one thing.", "step_imgs": ["https://cdn.instructables.com/FQU/7C5B/JTOMYTVD/FQU7C5BJTOMYTVD.LARGE.jpg", "https://cdn.instructables.com/FW3/ZFED/JTOMYUBY/FW3ZFEDJTOMYUBY.LARGE.jpg"], "step_title": "Step 3: The Console/NES Clone"}, {"step": 4, "steps_text": "The screen uses an xl1509 (click to see datasheet) switching regulator to step the 9-36v stated voltage down to the 5v used internally, this regulator is 83% efficient according to the datasheet so removal or bypass is beneficial to the battery life of the unit. Connecting the 5v in to either pin 2 or the capacitor that is fed by it allows the screen to work of 5v and reduces the power consumption. Double win, a more useful voltage and better battery life.\nSo both units are now more efficient and use 5v. I also made the screen thinner by rewiring the surface mount capacitors sideways, this wasn\u2019t necessary but I wanted to practice how to do it and to see if it would still work. This made the screen 2mm thinner, a lot of work for 2mm but it was an experiment and a learning experience so it was okay. This involves lots of testing, change one bit and then test and change another.\nThinner is usually better with handheld and portable devices but I think that thinness is optimal at about 19mm, the thickness of my phone (old Nokia), any thinner and it gets so thin that it bends, iPhone 6, or gets dropped. Although making things textured instead of the slick back that they put on phones now may help, I cannot tell you how many times I dropped my PSP because it was so slick.", "step_imgs": ["https://cdn.instructables.com/FQX/TQV3/JTOMZA8D/FQXTQV3JTOMZA8D.LARGE.jpg", "https://cdn.instructables.com/F3C/9185/JTOMYVJ2/F3C9185JTOMYVJ2.LARGE.jpg", "https://cdn.instructables.com/FZB/BE2Y/JTOMYUIB/FZBBE2YJTOMYUIB.LARGE.jpg", "https://cdn.instructables.com/FPB/3IVE/JTOMYUL3/FPB3IVEJTOMYUL3.LARGE.jpg", "https://cdn.instructables.com/FGK/1TR4/JTOMYVJ6/FGK1TR4JTOMYVJ6.LARGE.jpg"], "step_title": "Step 4: Modification of the Screen (screen If You Want to Go Flatter)"}, {"step": 5, "steps_text": "Now we have the screen running of 5v and the NES running of 5v we can start building the controller. The controller is relatively simple by modern standards, not like the PS4 which has more controls than the Buran, although it still requires a lot of wiring, each button needs 5v, ground, and a signal wire.\nWith 8 buttons that is 24 separate solder connections and that isn\u2019t including the connections to the 4021 shift register or the NES. I used perfboard for this with copper pads on one side, this is easier than cutting or drilling stripboard and is quicker and makes my solder joints look better.\nThe tact switches used were soldered in place and then the various wires were connected. The solder joints should be conical and slightly concave like the image. I can\u2019t stress enough that the choice of solder and iron is important here, I built two controllers before this one that didn\u2019t work, partly because I was not as good at soldering but partly because I was using plumbing solder and a large chisel tip iron. So choose the correct tools, that doesn\u2019t mean you need a really expensive solder station but don\u2019t use bad tools or solder.", "step_imgs": ["https://cdn.instructables.com/FXT/VTFY/JTOMZIUM/FXTVTFYJTOMZIUM.LARGE.jpg", "https://cdn.instructables.com/FTM/PP8M/JTOMYTLI/FTMPP8MJTOMYTLI.LARGE.jpg", "https://cdn.instructables.com/FBE/7M00/JTOMZIE2/FBE7M00JTOMZIE2.LARGE.jpg", "https://cdn.instructables.com/FO3/H01I/JTOMZA8A/FO3H01IJTOMZA8A.LARGE.jpg"], "step_title": "Step 5: Building the Controller"}, {"step": 6, "steps_text": "After wiring the controller and double checking the connections it can be test wired to the unit, as this instructable is not entirely chronological, and I actually have a spare screen and NES, the image of me testing it is with those unmodified. If you decide to build one I would suggest you build the controller first as this gives some non-heat critical practice on soldering. I could end this step here and claim it all worked first time but read on and hear my errors.\nWhen I first attempted to solder to the PCB with my plumbing solder and awful iron I lifted traces and broke the console so learn from my mistakes and use a fine point iron and electrical solder, also try not to overheat the parts. It worked, sort of anyway, the down and left buttons didn\u2019t function, after checking the 5v and ground connections and pressing them a few times I realised that I had connected them to the wrong pins on the shift register, after connecting this properly it worked. This is my fourth NES controller that I have hand wired and only the second to work so be patient, practice and try again", "step_imgs": ["https://cdn.instructables.com/FB1/ROC1/JTOMYUBX/FB1ROC1JTOMYUBX.LARGE.jpg", "https://cdn.instructables.com/F35/S2Z6/JTOMYU63/F35S2Z6JTOMYU63.LARGE.jpg", "https://cdn.instructables.com/FLA/INCW/JTOMYTRE/FLAINCWJTOMYTRE.LARGE.jpg", "https://cdn.instructables.com/F9H/10K5/JTOMYTK5/F9H10K5JTOMYTK5.LARGE.jpg", "https://cdn.instructables.com/F3O/7395/JTOMYVG5/F3O7395JTOMYVG5.LARGE.jpg", "https://cdn.instructables.com/FZV/Y855/JTOMYTK2/FZVY855JTOMYTK2.LARGE.jpg", "https://cdn.instructables.com/F0T/R22B/JTOMYT6P/F0TR22BJTOMYT6P.LARGE.jpg"], "step_title": "Step 6: Test Again and Again"}, {"step": 7, "steps_text": "So we now have everything we need for a compact nes, the screen, controller, cartridge and nes. But we want a portable nes and so we need batteries. The unit uses 380ma when operational but this is after my power modifications and with the screen at 4:3 and 30% brightness. Originally I didn\u2019t measure this and I thought it would come out at around 700ma. But that turned out to be wrong and I could have probably used the cheaper powerboost 500c but we learn as we go so if I make another I may use the 500c or even a powerbank circuit. The batteries are two 18650 lithium cells in parallel to give a 3.7v 5200mah nominal output. Using the 1000c board to boost that to 5v should give a runtime of about 9 hours although I am yet to test this. The wires were extended using thick cable because these need to be able to carry a lot of current, around 1A so the ribbon cable would not be able to cope with that. As a general rule use the same wire or thicker keep the cables short and as neat as possible for troubleshooting because you will definitely need to do that. Be very careful when soldering live battery wires, and make sure you don\u2019t short circuit the battery with your iron tip. This is why I said to use a fine tipped iron, wide irons increase the possibility of shorts. I actually broke a powerboost in the process of doing this procedure by shorting the output with my iron.", "step_imgs": ["https://cdn.instructables.com/FGO/65KY/JTOMYVD9/FGO65KYJTOMYVD9.LARGE.jpg", "https://cdn.instructables.com/FVW/9E62/JTOMYV7C/FVW9E62JTOMYV7C.LARGE.jpg", "https://cdn.instructables.com/FWR/RL8Q/JTOMYV7B/FWRRL8QJTOMYV7B.LARGE.jpg", "https://cdn.instructables.com/FR6/UD3I/JTOMYVG1/FR6UD3IJTOMYVG1.LARGE.jpg", "https://cdn.instructables.com/FG8/ZECS/JTOMYV7E/FG8ZECSJTOMYV7E.LARGE.jpg", "https://cdn.instructables.com/F4J/CS3J/JTOMYVAC/F4JCS3JJTOMYVAC.LARGE.jpg", "https://cdn.instructables.com/FKR/LOOJ/JTOMYV7D/FKRLOOJJTOMYV7D.LARGE.jpg"], "step_title": "Step 7: Small NES, But No Power and Case"}, {"step": 8, "steps_text": "The powerboost, unlike most powerbanks, seems to have no load sensing circuitry and so needs a switch to turn it off, this connects the en pin to the gnd pin and the unit shuts off. While you could use a switch after the 5v output, the powerboost would still have its blinding blue led on wasting all your power which we want for gaming. I wired a temporary switch because I didn\u2019t have the correct slide switch to fit. This was temporary but incorporated into the actual design, it doesn't work properly sometimes but I wanted to finish the unit.", "step_imgs": ["https://cdn.instructables.com/FCT/TCWZ/JTOMZGHF/FCTTCWZJTOMZGHF.LARGE.jpg", "https://cdn.instructables.com/F99/NYBB/JTOMYV7A/F99NYBBJTOMYV7A.LARGE.jpg"], "step_title": "Step 8: Oh No, It Won\u2019t Turn Off"}, {"step": 9, "steps_text": "The amplifier is a simple lm386 based amplifier, this runs off 5v like the rest of the unit. But be careful, not all lm386 amplifiers can run off 5v. I used the version ending n-3, and an 8 ohm speaker. The unit was wired like in the diagram above, however I added a power line capacitor for noise reduction and the sound quality improved from shockingly bad to just bad. After a lot of time listening to the menu music of super Mario 3 and getting more annoyed I had an idea.\nI suspected that audio clipping (when an waveform has the top clipped because the maximum voltage that the amplifier can output has been reached) was the issue here and so I wired a potentiometer to test my theory, it may have not been clipping but the potentiometer solved the sound quality issue and now it just sounds poor. I think this is bad sound generation by the asic in the unit rather than my design but I can tell you this and you will probably believe it. I wired three 3.3kohm resistors to form a potential divider to reduce the volume to tolerable levels. This reduced the maximum volume of the unit to 1/3 of the original but because of the weird way that humans perceive sound it was not that much quieter but far less annoyingly distorted.", "step_imgs": ["https://cdn.instructables.com/FF6/QOOU/JTOMZ2PS/FF6QOOUJTOMZ2PS.LARGE.jpg", "https://cdn.instructables.com/FMO/TRUE/JTOMZ9WO/FMOTRUEJTOMZ9WO.LARGE.jpg"], "step_title": "Step 9: Amplifier"}, {"step": 10, "steps_text": "The sound was then wired to an x9511 digital 32 step potentiometer, this turns the volume down and allows me to use buttons to reduce the volume from maximum to minimum. This is not logarithmic as would be ideal but it works to reduce the volume using buttons. There is a ground connection and a signal wire for the volume buttons, no pull ups necessary. Because the digital volume control was an afterthought the wiring was very tight near the shift register. I put the wires over the top of the circuit board because there was nowhere else.\nThe digital volume was an afterthought, therefore I didn\u2019t have the buttons printed and I didn\u2019t want to pay the huge price of postage for such a tiny part. If I make another I will get the volume buttons printed at the same time. I made the volume button out of some plywood, filler, card and paint. It is not perfect but time and money restrictions meant I just stuck with the non-optimal for now.", "step_imgs": ["https://cdn.instructables.com/FO3/H01I/JTOMZA8A/FO3H01IJTOMZA8A.LARGE.jpg", "https://cdn.instructables.com/FUB/SZSH/JTOMYT4A/FUBSZSHJTOMYT4A.LARGE.jpg", "https://cdn.instructables.com/F17/PJR3/JTOMX7B3/F17PJR3JTOMX7B3.LARGE.jpg", "https://cdn.instructables.com/FLT/AHJW/JTOMYVKO/FLTAHJWJTOMYVKO.LARGE.jpg"], "step_title": "Step 10: Turn It Down"}, {"step": 11, "steps_text": "I have no images of the designing of the case as this was designed in March, April and May 2018. This was assembled in march 2019. However I can give you some details into how it was designed, I used paper to draw a rough outline, laying the various components on top of each other to get the rough layout. Add space for wires, they can be the reason the unit doesn't close\nI wanted a portrait console for two reasons, size, the nes cartridge is huge, making a landscape console makes the height have to be at least 145mm and because I wanted the console to conform to the golden ratio of 1.618 that makes it about 230mm for the correct ratio. As the console pcb is the thickest part it would have interfered with the screen and the unit would be even thicker.\nPortrait is better unless you need shoulder buttons, I think it looks better, and it means I can keep the same control spacing as an original NES controller. The case is 129mm wide because that is the thickness of the cartridge port mount plus the case thickness and 200mm because that is a convenient number that is close enough to the golden ratio to look good. Studies have shown that the golden ratio is not actually preferred but it is in the range of preferred rectangles, about square root 2 to about square root 3 (if anyone can point me to the study that found this I will be grateful). The speaker has holes arranged in a pattern and my initials in the middle. Those clever screw holes keep the unit as thin as possible. The case was assembled using m2 screws because I wanted small screws. Americans reading may think \u201cwhy didn\u2019t you just use screws in inches\u201d, well because I am not American and inches are generally fractional and that is difficult to input in a decimal environment like cad.\nI used calipers a lot to measure things repeatedly, and remember that 3d printers are not accurate, so leave tolerances. The prints you see here are the fifth try and the second unit, I have built another one before but without sound or such a nice design. When designing cases, use paper templates to check fit. Paper is cheaper and quicker than a 3d printer. It sometimes takes 20 attempts to get the measurement right. At least it did when I was making the controller mounts, but that was because I had to guess how many tenths of an inch the spacing should be (the holes on perfboard are 0.1\u201d or 2.54mm apart) and multiplying it, rounding it and then checking it lined up. I refused to use inches in my design because it would mess up all my measurements done in millimetres.", "step_imgs": ["https://cdn.instructables.com/FT6/6MR3/JTOMZ6GW/FT66MR3JTOMZ6GW.LARGE.jpg", "https://cdn.instructables.com/FCY/U6R3/JTOMZGH0/FCYU6R3JTOMZGH0.LARGE.jpg", "https://cdn.instructables.com/FL9/FZ7V/JTOMZ6GX/FL9FZ7VJTOMZ6GX.LARGE.jpg", "https://cdn.instructables.com/F66/G0QE/JTOMZ6ZK/F66G0QEJTOMZ6ZK.LARGE.jpg", "https://cdn.instructables.com/FUU/7QEO/JTOMZ6GZ/FUU7QEOJTOMZ6GZ.LARGE.jpg", "https://cdn.instructables.com/F1I/7DGM/JTOMZ6H1/F1I7DGMJTOMZ6H1.LARGE.jpg"], "step_title": "Step 11: The Case"}, {"step": 12, "steps_text": "The holes in the perfboard needed to accept a 2mm screw so I used a 2mm drill to enlarge the holes to mount the controller amplifier board. The screen was hot glued in, and hot glue was used to secure the wires to the prints to keep them neat. The cartridge port was friction fitted and holds itself in place. Hot glue is very useful in situations like this, no-one will see the inside so use the glue gun to hold things in. the case was printed in pla at 200mm layer height. Because I didn\u2019t have a 3d printer I sent them to a company who printed them, I specified the same colour but as you can see the colours don\u2019t match. The screws thread into undersized holes in the plastic but the holes I used were a bit big so the screws had little hold. The battery was glued in with, can you guess, hot glue.", "step_imgs": ["https://cdn.instructables.com/FTK/1ZR9/JTOMYT94/FTK1ZR9JTOMYT94.LARGE.jpg", "https://cdn.instructables.com/FO3/H01I/JTOMZA8A/FO3H01IJTOMZA8A.LARGE.jpg"], "step_title": "Step 12: Mounting It All"}, {"step": 13, "steps_text": "The final unit I am very happy with and it plays the games I want it to. There are some games that the clone console can\u2019t play but I don\u2019t know where the list of them is. the screen is in 4:3 to reduce the lag on the unit to an acceptable amount and with an 8 hour battery life, you can complete most games without recharging. The unit is and I will claim it now, the thinnest (40mm) and narrowest (129mm) nes portable ever (that takes an entire nes cartridge). Unless anyone can prove otherwise.\nIt is far from perfect obviously, the case could have been finished better, such as painting. the controls are not as I wanted either, I wanted them in different colours to what they are in now with the A and B inlayed.\nI have definitely learnt a lot during this project but I have a portable nes, something I can show to many people and amaze them with the 8-bit graphics and the 3d printed case. If you would like the stl files or a step by step guide then say in the comments and I may do a step by step guide, but at a cost because I already have one so I would have to make another specifically to take many photos that takes time and requires a new set of components, I would need enough people willing to pay for it to be worth my time and investment. Also if more pictures or clarification is needed, or any other editing of the instructable, then let me know in the comments.", "step_imgs": ["https://cdn.instructables.com/F5W/M4JY/JTOMZDC9/F5WM4JYJTOMZDC9.LARGE.jpg", "https://cdn.instructables.com/FFI/SVED/JTOMZDEM/FFISVEDJTOMZDEM.LARGE.jpg"], "step_title": "Step 13: Conclusion"}, {"step": 14, "steps_text": "Will you make me one\nNo, if i make one for the plans then maybe that one I will sell\nWhat are the dimensions\n129mm x 200mm x 40mm or in imperial 6x10^-3 ch x 9.9x10^-3ch x 1.99x10^-3ch\nBut those aren\u2019t the imperial dimensions I wanted\n5.079x7.87x1.57\" happy now?\nI could do better\nPlease show me, I would like to see it. Or to use the modern parlance \u201cpics or it didn\u2019t happen\u201d\nWhat is the hole for at the bottom of the unit\nThe top square one is for an expansion port and the bottom round one is for headphones, I didn\u2019t have a jack with a disconnect in so I left it.\nWhy did you make the screen smaller\nTo reduce the lag, it was unplayable\nWhy didn\u2019t you use a 3.5\u201d screen like this\nThe image scrolled vertically constantly, I think it was some v-sync issue. it wasn\u2019t n-sync\nCan you add\u2026\nThat is probably what the exp port is for, second controller, av out etc, charge port\nUse a raspberry pi\nRead the instructable\nUse a real nes\nNo, it is huge\nPlans please\nLet me know in the comments, there may be a cost\nWill you build a portable n64\nNo, see Ben Heck's videos on that. Ben is more skilled than me and hugely struggled with it.\nHow long did it take to build it?\nAbout 20 hours to assemble, about 300 hours designing and redesigning the case. That was due to inexperience though so I could do it much quicker now. Probably about 50 hours to design a new portable of similar complexity.", "step_imgs": [], "step_title": "Step 14: Questions I May Get"}], "channel": "3D Printing"}, {"category": "Technology", "description": "Animatronic dragon created in order to have a first approach to animatronics. This dragon is going to be taking care of its treasure and whenever it feels someone approaching, it will want to protect it, so that it won\u2019t be stolen. For doing so it will open its wings, its mouth and it will change the color of its eyes to scare the possible thief.\nWITH THIS INSTRUCTABLE YOU WILL LEARN ABOUT:\n- Making a two-piece plaster mold\n- Creating figures with latex\n- Some electronics with Arduino\n- Creating a mechanism to make the dragon\u2019s wings and mouth open a close\nYou don\u2019t really need to make a dragon, you can apply these instructions to any kind of creature you want to create, your imagination is the limit!\n\nYOU WILL NEED:\nFOR THE MOLD AND THE LATEX DRAGON:\n- Stick (20 cm)\n- wood for the base (30 x 20 cm)\n- Screw (to attach the stick to the board)\n- Polystyrene balls\n- Plaster type 3 (it provides excellent detail)\n- Water\n- Bowl (To mix the plaster with water)\n- Acetate\n- Tape\n- Liquid Latex\n- *Calcium chloride (Not mandatory)\n- Wire\n- Polymer clay\n- 2 small glass balls (for the eyes)\n- Paint for latex (I found it in Colombia as paint for balloons)\n- Fabric Clothes\n- Rubber glue (you can use contact cement)\n- Vaseline\n- Rope\nFOR THE MECHANISM:\n- Two folding umbrella arms\n- A piece of acrylic (10 x 10 cm)\n- Wire\n- 2 small metal sheets (like 1,5 x 5 cm, for making the jaws)\n- A plastic tube (similar to a Straw, but stronger)\nFOR THE ELECTRONICS:\n- Arduino UNO\n- Servomotor SG-5010\n- Red LED\n- Resistor 220 \u03a9\n- Motion detector hc-sr501\n- Cables\nFOR THE BASE AND TREASURE:\n- Old coins\n- Beads\n- Small Trunk (Approx. 12 x 9 x 11 cm)\n- Wood sheet (For using as a base of our animatronic)\n- Terracotta color paints", "title": "DIY Animatronic Dragon!", "url": "https://www.instructables.com/id/DIY-Animatronic-Dragon/", "steps": [{"step": 1, "steps_text": "1. We join with a screw the stick to the board (this will help us as a base to model the clay)\n2. With polystyrene balls and wire, create the basic shape of the dragon, attached to the stick attached to the board.\n3. Take your polystyrene-wire figure and build up layers of clay, making it at least 1.5 cm thick.\n4. Now, start sculpting the dragon (or creature) the way you want it.\n5. Create the scales.\n6. Add all the missing details. (Such as the eyes and nose)", "step_imgs": ["https://cdn.instructables.com/FI8/U9BA/JTON2UWA/FI8U9BAJTON2UWA.LARGE.jpg"], "step_title": "Step 1: SCULPTING THE BODY"}, {"step": 2, "steps_text": "It would be really difficult to make just one mold for the whole dragon, so if your creature has complex parts on the design it is better you create it separated and mold them on their own, as I did with the legs and tail.\n1. Follow the same instructions from \u201cStep 1\u201d, but this time creating 2 legs and a tail. This time the wood for the base and the stick are not needed.\nYou only need to sculpt 2 legs and after creating the molds you can use them twice for creating the 4 latex-legs.", "step_imgs": ["https://cdn.instructables.com/FY3/BVD6/JTON2UYI/FY3BVD6JTON2UYI.LARGE.jpg"], "step_title": "Step 2: SCULPTING LEGS AND TAIL"}, {"step": 3, "steps_text": "1. Carefully add pieces of acetate through the center of the dragon, joining these together with tape. (This will help us to divide the mold into two parts)\n2. Mix the plaster with water and began to apply it to one side of the dragon. (Several layers must be applied)\n3. Everything is covered in plaster except (in the lower part) a hole that is left, through which we will pour the latex.\n4. The plaster should cover part of the acetate.\n5. Let it dry very well.\n6. The pieces of acetate are removed.\n7. Apply Vaseline on the plaster so that half of the mold is not stuck to the other half.\n8. Start to apply plaster as we did with the first half part.\n9. Let it dry.\n10. Open the mold and clean the clay.", "step_imgs": ["https://cdn.instructables.com/F4E/4W9C/JTON2V0L/F4E4W9CJTON2V0L.LARGE.jpg"], "step_title": "Step 3: TWO PIECE PLASTER MOLD"}, {"step": 4, "steps_text": "1. The same way we learned to make molds in plaster, molds are made for the legs and tail.", "step_imgs": ["https://cdn.instructables.com/FXI/Q6DR/JTON2V4B/FXIQ6DRJTON2V4B.LARGE.jpg"], "step_title": "Step 4: MOLD OF LEGS AND TAIL"}, {"step": 5, "steps_text": "1. Strap both parts of the mold together with the lace.\n2. Pour a little unthickened liquid latex into the mold then swish it all around the mold and leave it until set, then repeat for at least 5 times if not more.\n3. * You can add some calcium chloride diluted in water (16 oz water \u2013 1 spoon calcium chloride) After the 5 previous layers, pour some of it in to the mold and swish it all around, then you can alternate 2 o 3 layers more \u2013 1 made of latex \u2013 1 made of calcium chloride.\n* (This is not a needed step, you can use just latex, but if you use calcium chloride it will help you to obtain thicker latex layers, therefore making faster the process.)\n4. Let it dry for at least 48 hours and then open the mold.\n5. Cut off excess material.\n6. Repeat the same process with the legs and the tail (Remember to make 4 legs).", "step_imgs": ["https://cdn.instructables.com/FAX/A146/JTON2V5U/FAXA146JTON2V5U.LARGE.jpg"], "step_title": "Step 5: LATEX"}, {"step": 6, "steps_text": "1. To add details to the dragon such as some horns and nails, create basic shapes with wire and attach them to the dragon\u2019s body.\n2. Cover them with polymer clay and create the shapes you want.\n3. To join the legs and the tail, holes are made in the body of the dragon in which the legs and tail enter (This can be done with scissors). Also, open the holes for its mouth and eyes.\n4. Insert the legs and the tail into the corresponding holes. Apply glue from the inside (Could be Contact Cement. I used one called \u201cBoxer\u201d, I bought it in Colombia).", "step_imgs": ["https://cdn.instructables.com/F77/Y91J/JTON2VE8/F77Y91JJTON2VE8.LARGE.jpg"], "step_title": "Step 6: ADDING SOME DETAILS, AND THE LEGS AND TAIL TO THE BODY"}, {"step": 7, "steps_text": "(Don\u2019t worry too much, Read the steps and then watch the video in the next step, it will help you understand it all better)\n1. Laser cut the base for the mechanism. (pdf attached)\n2. Connect the servomotor to the base with screws.\n3. Attach the plastic tube to the base (possibly with wire).\n4. MANDIBLE MECHANISM the jaws are created giving a U shape to the metal sheets.\nThe upper jaw is fixed to the tube so that it doesn\u2019t move. (It is not necessary to add the teeth in this step; I took the photo when I had already added them, but we will see this step later.)\n5. The lower jaw joins the upper jaw with shafts that allow it to move.\n6. The lower jaw is attached to the servo motor with a wire to control its movement.\n7. Two umbrella arms are attached to the base of the mechanism (possibly with wire).\n8. They are tied with wire on the back in the points that make them open and close and are joined to another wire in the vertical perforation that has the base.\n9. This last wire is attached to the servo to control the movement of the wings.", "step_imgs": ["https://cdn.instructables.com/FW2/U5ZZ/JTON2VHE/FW2U5ZZJTON2VHE.LARGE.jpg"], "step_title": "Step 7: MECHANISM"}, {"step": 8, "steps_text": "Don\u00b4t worry about the electronics, we will see that later.", "step_imgs": [], "step_title": "Step 8: VIDEO - HOW THE MECHANISM SHOULD WORK"}, {"step": 9, "steps_text": "1. Place the mechanism of the wings on fabric.\n2. Draw the outline.\n3. Leave a larger space marked in those parts where the mechanism bents.\n4. Draw the desired shapes of the wings from the basic lines.\n5. It is necessary to create a bag with the shape of the mechanism of the wings that covers the mechanism when they are covered with latex, otherwise, the mechanism will be latex covered and will not be able to move.\n6. For this, I cut two plastic bags with the form marked in red and I joined them with tape where the yellow dotted line is seen in the image, creating a bag for the mechanism.\n7. The bag created to cover the mechanism is covered with cloth and the wing is sewn.\n8. The mechanism is inserted into the bag/wing.\n9. The sticks that I put to create the wing divisions are not necessary. I noticed that when the dragon was finished, and I took them off.\nThe same steps are repeated with the other wing.\n10. The mechanism of the wings should already be attached to the base of mechanisms as we saw in previous steps.\n11. We prove that the wings can be closed.\n12. And open again.\nIf necessary, we make adjustments.", "step_imgs": ["https://cdn.instructables.com/FST/LG2E/JTON2WL8/FSTLG2EJTON2WL8.LARGE.jpg"], "step_title": "Step 9: WINGS (FIRST PART)"}, {"step": 10, "steps_text": "1. Open holes in the body of the dragon to join the wings. (Prove that the mechanism enters there)\n2. Glue the wings to the dragon\u2019s body. (Do so from the inside, you may use Contact cement)\n3. Cover the wings with latex and let them dry. (You can use the latex as if it was paint and apply it with a brush)", "step_imgs": ["https://cdn.instructables.com/FMV/QXGU/JTON2WZ3/FMVQXGUJTON2WZ3.LARGE.jpg"], "step_title": "Step 10: WINGS (SECOND PART)"}, {"step": 11, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FP3/OL43/JTON2XAL/FP3OL43JTON2XAL.LARGE.jpg"], "step_title": "Step 11: HOW THE MECHANISM SHOULD GO INSIDE OUR DRAGON"}, {"step": 12, "steps_text": "Connect the elements to the arduino as shown in the image. And see how it all should go inside our Dragon so you leave long enough the cables for them to work.", "step_imgs": ["https://cdn.instructables.com/FIX/D2RJ/JTON2XHW/FIXD2RJJTON2XHW.LARGE.jpg", "https://cdn.instructables.com/FAA/EGIP/JTON2XHP/FAAEGIPJTON2XHP.LARGE.jpg"], "step_title": "Step 12: ELECTRONICS"}, {"step": 13, "steps_text": "(Don\u2019t worry about the text after the two slashes // it won\u2019t affect the code, it is there just to explain you what are we doing in every line of the code, if you prefer, you can delete that part and just leave the code in bold)\nUpload the code:\n#include //we declare the pins we are going to use\nServo myservo; // create servo object to control a servo\nint analogPin = A5; //Analogic A5 for the sensor\nint ledPin = 10; //Digital 10 for the LED\nint val = 0; // variable to store the servo position\nvoid setup()\n{\nSerial.begin(9600); // initialize serial communication at 9600 bits per second\npinMode(ledPin, OUTPUT); //declare pin 10 to be an output\npinMode(analogPin, INPUT); //declare pin A5 to be an input\nmyservo.attach(9); // attaches the servo on pin 9 to the servo object\n}\nvoid loop()\n{\nval = analogRead(analogPin); // read the input on analog pin\nif(val > 100) // if the value is more than 100 then:\n{\nSerial.println(val);\ndigitalWrite(ledPin,HIGH); // Turns on the LED\nmyservo.write(5); // sets the servo position according to the number in the brackets, you should change the number inside the brackets according to the mechanism\u2019s movement. Try this number first and then try changing it to other numbers, you will find the best for your dragon.\ndelay(15); // delay in between reads for stability\n}\nelse //if the value is less than 100 then:\n{\nSerial.println(val);\ndigitalWrite(ledPin,LOW); // Turns off the LED\nmyservo.write(175); // sets the servo position according to the number in the brackets, you should change the number inside the brackets according to the mechanism\u2019s movement. Try this number first and then try changing it to other numbers, you will find the best for your dragon.\n}\n}", "step_imgs": ["https://cdn.instructables.com/FK2/DFY4/JTON2XRV/FK2DFY4JTON2XRV.LARGE.jpg", "https://cdn.instructables.com/F3Z/XRXV/JTON2XSD/F3ZXRXVJTON2XSD.LARGE.jpg"], "step_title": "Step 13: PROGRAMMING"}, {"step": 14, "steps_text": "The red led should get turned on and the servo's axis should rotate when the sensor feels someone approaching.", "step_imgs": [], "step_title": "Step 14: TESTING THE ELECTRONICS"}, {"step": 15, "steps_text": "", "step_imgs": [], "step_title": "Step 15: JOIN THE MECHANISM WITH THE ELECTRONICS"}, {"step": 16, "steps_text": "Don\u2019t cut the dragon this way! I had to open it and now the pictures work for explaining how it works from the inside.\n1. Create the teeth with polymer clay, you can add them to the mouth\u2019s mechanism as shown in the picture.\n2. If you want you can add a tongue too.\n3. Add the glass balls, gluing them to the edges of the eyes.\n4. Put the red LED between the two glass balls (the two eyes).", "step_imgs": ["https://cdn.instructables.com/F9Y/JP14/JTON2ZJA/F9YJP14JTON2ZJA.LARGE.jpg"], "step_title": "Step 16: EYES AND MOUTH"}, {"step": 17, "steps_text": "Paint it the way you want it.", "step_imgs": ["https://cdn.instructables.com/FEU/BOTV/JTON3280/FEUBOTVJTON3280.LARGE.jpg"], "step_title": "Step 17: PAINT THE DRAGON"}, {"step": 18, "steps_text": "1. Open a hole in one of the legs, through which the wires will be passed to the dragon.\n2. Open a hole in the trunk, which will be attached to the leg of the dragon, through which the cables will also pass.\n3. Stick old coins and beads to the lid of the trunk, so that it seems full of treasures and jewels, among these is the motion sensor, to make it look like another jewel.\n4. Put the arduino inside the trunk.\n5. It can be placed on a previously painted table if desired.", "step_imgs": ["https://cdn.instructables.com/FBB/5W90/JTON32LZ/FBB5W90JTON32LZ.LARGE.jpg"], "step_title": "Step 18: LAST DETAILS"}, {"step": 19, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FXY/8ZTG/JTON32X2/FXY8ZTGJTON32X2.LARGE.jpg", "https://cdn.instructables.com/F9L/JT3O/JTON32ZC/F9LJT3OJTON32ZC.LARGE.jpg", "https://cdn.instructables.com/FNZ/XFG5/JTON32X3/FNZXFG5JTON32X3.LARGE.jpg", "https://cdn.instructables.com/FE6/YXYX/JTON330N/FE6YXYXJTON330N.LARGE.jpg", "https://cdn.instructables.com/FSE/F8Y8/JTON3318/FSEF8Y8JTON3318.LARGE.jpg", "https://cdn.instructables.com/FT2/ELUX/JTON32YR/FT2ELUXJTON32YR.LARGE.jpg", "https://cdn.instructables.com/FPF/LVRA/JTON32XY/FPFLVRAJTON32XY.LARGE.jpg", "https://cdn.instructables.com/FCG/XJDD/JTON32XX/FCGXJDDJTON32XX.LARGE.jpg", "https://cdn.instructables.com/FVU/BV90/JTON32XI/FVUBV90JTON32XI.LARGE.jpg", "https://cdn.instructables.com/FFH/HI28/JTON32X6/FFHHI28JTON32X6.LARGE.jpg", "https://cdn.instructables.com/F4T/D93K/JTON32ZP/F4TD93KJTON32ZP.LARGE.jpg", "https://cdn.instructables.com/FGJ/X026/JTON3302/FGJX026JTON3302.LARGE.jpg"], "step_title": "Step 19: SOME PICTURES"}, {"step": 20, "steps_text": "", "step_imgs": [], "step_title": "Step 20: SEE IT WORKING"}], "channel": "Robots"}, {"category": "Technology", "description": "This instructables show how to use micro:bit to make a simple digital compass.", "title": "Micro:bit Compass", "url": "https://www.instructables.com/id/Microbit-Compass/", "steps": [{"step": 1, "steps_text": "If you not yet have a micro:bit, you may get a micro:bit here: https://microbit.org/resellers/", "step_imgs": ["https://cdn.instructables.com/FCB/F407/JTON2WYK/FCBF407JTON2WYK.LARGE.jpg"], "step_title": "Step 1: Get a Micro:bit"}, {"step": 2, "steps_text": "If you want to make the digital compass portable, you may consider get a battery holder.\nAny 3V battery holder with JST connector should be ok. The battery can be CR2032, 2 x AAA batteries, 2 x AA batteries, etc.", "step_imgs": ["https://cdn.instructables.com/FV1/87NT/JTON2WZ0/FV187NTJTON2WZ0.LARGE.jpg"], "step_title": "Step 2: Optional: Battery Holder"}, {"step": 3, "steps_text": "I feel direct view the SMD LED light is not so comfort, so I have made a 3D printed cover diffuse the light and make every LED like a perfect square pixel :>\nIf you also like the pixels, you can download and print the cover here:\nhttps://www.thingiverse.com/thing:3511591", "step_imgs": ["https://cdn.instructables.com/FAN/6JKM/JTON2WZ1/FAN6JKMJTON2WZ1.LARGE.jpg", "https://cdn.instructables.com/FM7/2H59/JTON2WZ2/FM72H59JTON2WZ2.LARGE.jpg"], "step_title": "Step 3: Optional: 3D Printed Cover"}, {"step": 4, "steps_text": "Input\nmicro:bit have a magnetic field sensor, just like a normal compass needle, it can sense the magnetic field produced inside Earth. micro:bit library translate the field value into 360 degrees relative to north.\nOutput\nmicro:bit have 5 x 5 LED matrix, it is good enough to show an arrow in 8 directions. (North, NE, East, SE, South, SW, West, NW)\nRef.: https://tech.microbit.org/hardware/", "step_imgs": ["https://cdn.instructables.com/FBA/15WW/JTON32ZD/FBA15WWJTON32ZD.LARGE.jpg"], "step_title": "Step 4: How Does Digital Compass Work?"}, {"step": 5, "steps_text": "Please reminded that the magnetic field sensor and the LED are placed on different side of the PCB. So when you look at the LED side the magnetic field reading is flipped. Or you can treat the reading is counter-clockwise start from North.", "step_imgs": ["https://cdn.instructables.com/FN3/4DMB/JTON32VA/FN34DMBJTON32VA.LARGE.jpg"], "step_title": "Step 5: Note on the Magnetic Field Direction"}, {"step": 6, "steps_text": "The input is a 360 degrees value and the output is 8 directions arrow, here is the angle mapping:\n 23 -  68 NW\n 68 - 113 West\n113 - 158 SW\n158 - 203 South\n203 - 248 SE\n248 - 293 East\n293 - 338 NE\nOthers    North", "step_imgs": ["https://cdn.instructables.com/FER/3QWJ/JTON2X3O/FER3QWJJTON2X3O.LARGE.jpg"], "step_title": "Step 6: Angle Mapping"}, {"step": 7, "steps_text": "Here is my sample block code:\nhttps://makecode.microbit.org/_RfA4jH2Rae78\nSimply download and copy to micro:bit drive to run.\nIf you are not yet familiar with using micro:bit please read the official quick start guide first:\nhttps://microbit.org/guide/quick/", "step_imgs": ["https://cdn.instructables.com/F2Y/XKOP/JTENEL3R/F2YXKOPJTENEL3R.LARGE.jpg"], "step_title": "Step 7: MakeCode"}, {"step": 8, "steps_text": "If you are first time using the micro:bit magnetic field sensor, the LED matrix will scroll the words TILT TO FILL SCREEN.\nPlease follow the support page video to calibrating the micro:bit compass:\nhttps://support.microbit.org/support/solutions/art...", "step_imgs": ["https://cdn.instructables.com/FSJ/D4TQ/JTON36WI/FSJD4TQJTON36WI.LARGE.jpg"], "step_title": "Step 8: Calibrating the Micro:bit Compass"}, {"step": 9, "steps_text": "micro:bit compass is just a very simple example, micro:bit have much more can be done.\nLet's explore more ideas here:\nhttps://microbit.org/ideas/", "step_imgs": ["https://cdn.instructables.com/FJF/YANX/JTON2X46/FJFYANXJTON2X46.LARGE.jpg"], "step_title": "Step 9: Happing Coding!"}], "channel": "Microcontrollers"}, {"category": "Technology", "description": "This is an Instructables on how I Remixed my old CNC Laser engraver and made a Stable version of an Arduino based Laser CNC engraver and thin paper cutter using old DVD drives and using 250mW laser.\nOld Version of My CNC :https://www.instructables.com/id/Mini-CNC-Laser-Wood-Engraver-and-Paper-Cutter/\nOld version was not much stable and had some wobble due to uneven parts, so I decided to make a stable version of it using 3D printed parts. Which gave me excellent results in laser engraving even in very tiny details, this machine is cable of doing the work well. You can see the details in the eye of the engraved picture.\nPlaying area is 40mm x 40mm max.", "title": "DIY Mini CNC Laser Engraver.", "url": "https://www.instructables.com/id/DIY-Mini-CNC-Laser-Engraver/", "steps": [{"step": 1, "steps_text": "Arduino Nano (with USB cable)\n2x DVD drive stepper mechanism\n2x A4988 stepper motor driver modules (or GRBL shield)\n250mW Laser with adjustable lens (or above)\n12v 2Amps power supply minimum\n1x IRFZ44N N-CHANNEL Mosfet\n1x 10k resistor\n1x 47ohm resistor\n1x LM7805 voltage regulator (with heatsink)\nBlank PCB Board\nMale and Female Headers\n2.5mm JST XH-Style\n2pin male connector\n1x 1000uf 16v capacitor Jumper cables\n8x small neodymium magnets ( which I have salvaged from DVD lens mechanism)\n1x 2pin plug in screw terminal block connector\nZip ties (100mm)\nSuper Glue\n6x M3x12 screws\n8x M2x5 screws\nLaser Safety Glasses\n\"LASER SAFETY GLASSES are must needed in this project\".", "step_imgs": [], "step_title": "Step 1: Parts and Materials Required"}, {"step": 2, "steps_text": "STL files, see the attached file or go to : https://www.thingiverse.com/thing:3521286\nAll Parts are printed in ABS material.\nPrint Settings:\nLayer height: 0.2mm\nInfill: < 25%\nSupports: No", "step_imgs": ["https://cdn.instructables.com/FWE/X7OM/JSYZ92NT/FWEX7OMJSYZ92NT.LARGE.jpg"], "step_title": "Step 2: Printed Parts"}, {"step": 3, "steps_text": "Two DVD driver mechanism are required, one for the X-Axis and the second for the Y-axis.\nUsing a small Phillips head screw driver I removed all the screws and detached stepper motor, the sliding rails and the follower.\nThe stepper motors are 4-pin Bipolar Stepper Motor.\nThe small size and low cost of a DVD motor mean that you can't expect\nhigh resolution from the motor. That is provided by the lead screw. Also, not all such motors do 20 steps/rev. 24 is also a common spec. You'll just have to test your motor to see what it does.\nProcedure for calculating the resolution of the CD Drive Stepper motor:\nIn order to measure the resolution of the CD/DVD drive stepper motor,\na digital micrometer was used. The distance along the screw was measured. The total length of the screw using a micrometer, which turned out to be 51.56 mm. To determine the lead value which is the distance between two adjacent threads on the screw. The threads were counted to be 12 threads within this distance. Lead = distance between adjacent threads = ( total length / number of threads = 51.56 mm) / 12 = 4.29mm/rev. The step angle is 18 degrees which corresponds to 20 steps/revolution. Now that all the information needed is available, the resolution of the stepper motor could be calculated as shown below: Resolution = (Distance between adjacent threads) / (N Steps/rev) = (4.29mm/rev) / (20 steps/rev) = 0.214 mm/step. Which is 3 times better the resolution required which is 0.68mm/step.", "step_imgs": ["https://cdn.instructables.com/FW2/79K6/JSYZ7D9J/FW279K6JSYZ7D9J.LARGE.jpg", "https://cdn.instructables.com/FEL/TG5H/JSYZ7D9S/FELTG5HJSYZ7D9S.LARGE.jpg"], "step_title": "Step 3: Taking Apart the DVD Drive Stepper Mechnaism"}, {"step": 4, "steps_text": "Using Super Glue I've glued the slider and the guide into one part. Spring is attached to maintain the tension between the guide and the lead screw to avoid black-lash.", "step_imgs": ["https://cdn.instructables.com/FOD/T1H2/JSYZ92P1/FODT1H2JSYZ92P1.LARGE.jpg", "https://cdn.instructables.com/FDQ/8EFH/JSYZ92P7/FDQ8EFHJSYZ92P7.LARGE.jpg", "https://cdn.instructables.com/F7L/IV2I/JSYZ92PD/F7LIV2IJSYZ92PD.LARGE.jpg", "https://cdn.instructables.com/FBL/IGTG/JSYZ92PO/FBLIGTGJSYZ92PO.LARGE.jpg", "https://cdn.instructables.com/FJ3/8XCZ/JSYZ92PP/FJ38XCZJSYZ92PP.LARGE.jpg"], "step_title": "Step 4: Preparing the Slider."}, {"step": 5, "steps_text": "Here, using super glue and screw I've attached the guiding mechanism to the laser housing.\nAttached the stepper motor onto the place using the screws and afterwards inserted the smooth rods and guiding part into the holes given by keeping in mind that slider is moving freely not too hard. And attached the side frame pillars to it.", "step_imgs": ["https://cdn.instructables.com/FV7/URE0/JSYZ92NN/FV7URE0JSYZ92NN.LARGE.jpg", "https://cdn.instructables.com/F94/UVRY/JSYZ92OT/F94UVRYJSYZ92OT.LARGE.jpg", "https://cdn.instructables.com/FOK/UDEO/JSYZ92TU/FOKUDEOJSYZ92TU.LARGE.jpg", "https://cdn.instructables.com/FBE/2GSP/JSYZ92UY/FBE2GSPJSYZ92UY.LARGE.jpg", "https://cdn.instructables.com/FV3/BAMD/JSYZ92U2/FV3BAMDJSYZ92U2.LARGE.jpg", "https://cdn.instructables.com/F1X/7EOH/JSYZ92UZ/F1X7EOHJSYZ92UZ.LARGE.jpg", "https://cdn.instructables.com/F6R/ZN2Y/JSYZ92V0/F6RZN2YJSYZ92V0.LARGE.jpg"], "step_title": "Step 5: Assembling the Slider Rails for the X-Axis"}, {"step": 6, "steps_text": "Before assembling the slider into the base I've glued 4x small neodymium magnets ( which I have salvaged from DVD lens mechanism) into the X-plate. This magnets will helps in holding the work piece to the working area.\nThe smooth rod will keep the sliding mechanism intact to the base.", "step_imgs": ["https://cdn.instructables.com/FJ9/1NPF/JSYZ92QT/FJ91NPFJSYZ92QT.LARGE.jpg", "https://cdn.instructables.com/FOW/3MG1/JSYZ92RV/FOW3MG1JSYZ92RV.LARGE.jpg", "https://cdn.instructables.com/FHD/GZLB/JSYZ92RY/FHDGZLBJSYZ92RY.LARGE.jpg", "https://cdn.instructables.com/FVU/HVP1/JSYZ92SD/FVUHVP1JSYZ92SD.LARGE.jpg", "https://cdn.instructables.com/F8T/4BCM/JSYZ92T1/F8T4BCMJSYZ92T1.LARGE.jpg", "https://cdn.instructables.com/FVB/KGBG/JSYZ92QX/FVBKGBGJSYZ92QX.LARGE.jpg", "https://cdn.instructables.com/FL5/NTV1/JSYZ92TI/FL5NTV1JSYZ92TI.LARGE.jpg"], "step_title": "Step 6: Assembling the Slider Rails for the Y-Axis"}, {"step": 7, "steps_text": "For the stepper motors I've used old usb cable, because it has 4 wire inside and have a cover on it, and it is more flexible and easy to work with.\nUsing continuity mode in Multimeter determine determine 2 Coil, Coil A and Coil B.\nI made 2pairs of wire by selecting colours, one pair for the Coil A and second for the Coil B.\nSoldered them and used heat shrink tube on it.", "step_imgs": ["https://cdn.instructables.com/FE9/1XUP/JSYZ92PZ/FE91XUPJSYZ92PZ.LARGE.jpg", "https://cdn.instructables.com/F0G/N1CE/JSYZ92Q8/F0GN1CEJSYZ92Q8.LARGE.jpg", "https://cdn.instructables.com/F18/A2GE/JSYZ92XM/F18A2GEJSYZ92XM.LARGE.jpg"], "step_title": "Step 7: Wiring of Stepper Motors"}, {"step": 8, "steps_text": "Using 4x M3x12 screws, combined the base and two side frame into one assembly.", "step_imgs": ["https://cdn.instructables.com/FLM/FT3H/JSYZ92V8/FLMFT3HJSYZ92V8.LARGE.jpg", "https://cdn.instructables.com/F9D/8YUR/JSYZ92VI/F9D8YURJSYZ92VI.LARGE.jpg"], "step_title": "Step 8: Combing the X and Y Axis"}, {"step": 9, "steps_text": "PARTS USED FOR THE DRIVER ARE:\nArduino Nano.\n2x A4988 Stepper motor drivers.\n1x IRFZ44N N-CHANNEL MOSFET.\n1x LM7805 Voltage regulator with Heatsink.\n1x 47ohm and 1x 10k resistor.\n1x 1000uf 16V capacitor.\n1x 2.5mm JST XH-Style 2pin male connector.\nMALE and FEMALE Header Pins.\n1x (20mm x 80mm blank PCB).\nIn GRBL the digital and analog Pins of Arduino are reserved. The\n'Step' pin for the X and Y axes is attached to digital pins 2,and 3 respectively. The 'Dir' pin for the X and Y axes is attached to digital pins 5 and 6 respectively. D11 is for laser Enable. The Arduino gets power through the USB Cable. The A4988 Drivers through external power source. All ground share common connections. VDD of A4988 are connected to 5V of Arduino. The laser I've used runs on 5V and has built in constant current circuit. For the constant 5V source from the external power supply LM7805 voltage regulator is used. Heatsink is compulsory. The IRFZ44N N-CHANNEL MOSFET works as an elelctronic switch when receives digital high signal from pin D11 of Arduino. NOTE: 5V from Arduino nano can't be used beause the laser draws more than 250mA and the Arduino Nano is not capable of delivering that much of current.\nConfiguring Micro Stepping for Each Axis.\nMS0 MS1 MS2 Microstep Resolution.\nLow Low Low Full step.\nHigh Low Low Half step.\nLow High Low Quarter step.\nHigh High Low Eighth step.\nHigh High High Sixteenth step .\nThe 3 pins (MS1, MS2 and MS3) are for selecting one of the five step\nresolutions according to the above truth table. These pins have internal pull-down resistors so if we leave them disconnected, the board will operate in full step mode. I've used the 16th step configuration for smooth and noise free. Most (but certainly not all) stepper motors do 200 full steps per revolution. By appropriately managing the current in the coils it is possible to make the motor move in smaller steps. The Pololu A4988 can make the motor move in 1/16th steps - or 3,200 steps per revolution.The main advantage of microstepping is to reduce the roughness of the motion. The only fully accurate positions are the full-step positions. The motor will not be able to hold a stationary position at one of the intermediate positions with the same position accuracy or with the same holding torque as at the full step positions.Generally speaking when high speeds are required full steps should be used.", "step_imgs": ["https://cdn.instructables.com/FKQ/CSBX/JSYZ7DA1/FKQCSBXJSYZ7DA1.LARGE.jpg", "https://cdn.instructables.com/FIQ/2SKI/JSYZ7DAA/FIQ2SKIJSYZ7DAA.LARGE.jpg", "https://cdn.instructables.com/FMG/9D3I/JSYZ7DB3/FMG9D3IJSYZ7DB3.LARGE.jpg", "https://cdn.instructables.com/F19/4M7Q/JSYZ7DB4/F194M7QJSYZ7DB4.LARGE.jpg", "https://cdn.instructables.com/F38/RR3I/JSYZ7DB0/F38RR3IJSYZ7DB0.LARGE.jpg", "https://cdn.instructables.com/FYE/53Q7/JSYZ7DB1/FYE53Q7JSYZ7DB1.LARGE.jpg", "https://cdn.instructables.com/F4N/0URU/JSYZ7DAZ/F4N0URUJSYZ7DAZ.LARGE.jpg", "https://cdn.instructables.com/FTD/IQ0X/JSYZ7DB2/FTDIQ0XJSYZ7DB2.LARGE.jpg", "https://cdn.instructables.com/FMF/DQ1K/JSYZ7DB8/FMFDQ1KJSYZ7DB8.LARGE.jpg"], "step_title": "Step 9: The Electronics"}, {"step": 10, "steps_text": "Assembled the driver board on the back plate using 2x M2 screws and to the frame of the machine using 2x M3x12 Screws. Plugged in the connections for the Stepper motors X ,Y and the Laser.", "step_imgs": ["https://cdn.instructables.com/F16/OK0K/JT91MTXG/F16OK0KJT91MTXG.LARGE.jpg", "https://cdn.instructables.com/FRX/8FD5/JSYZ92X9/FRX8FD5JSYZ92X9.LARGE.jpg"], "step_title": "Step 10: Assembling the Electronics to Frame."}, {"step": 11, "steps_text": "To achieve high step rates, the motor supply is typically much higher than would be permissible without active current limiting. For instance, a typical stepper motor might have a maximum current rating of 1A with a 5\u03a9 coil resistance, which would indicate a maximum motor supply of 5 V. Using such a motor with 12 V would allow higher step rates, but the current must actively be limited to under 1A to prevent damage to the motor. The A4988 supports such active current limiting, and the trimmer potentiometer on the board can be used to set the current limit. One way to set the current limit is to put the driver into full-step mode and to measure the current running through a single motor coil without clocking the STEP input. The measured current will be 0.7 times the current limit (since both coils are always on and limited to 70% of the current limit setting in full-step mode). Please note that changing the logic voltage, Vdd, to a different value will change the current limit setting since the voltage on the \u201cref\u201d pin is a function of Vdd. Another way to set the current limit is to measure the voltage directly on top of the potentiometer and to calculate the resulting current limit (the current sense resistors are 0.1\u03a9). The current limit relates to the reference voltage as follows: Current Limit = VREF \u00d7 1.25 So, for example, if the reference voltage is 0.6 V, the current limit is 0.75A. As mentioned above, in full step mode, the current through the coils is limited to 70% of the current limit, so to get a full-step coil current of 1A, the current limit should be 1A/0.7=1.4A, which corresponds to a VREF of 1.4A/1.25=1.12 V. See the A4988 datasheet for more information. Note: The coil current can be very different from the power supply current, so you should not use the current measured at the power supply to set the current limit. The appropriate place to put your current meter is in series with one of your stepper motor coils.", "step_imgs": ["https://cdn.instructables.com/F35/T7OB/JT91MVGT/F35T7OBJT91MVGT.LARGE.jpg", "https://cdn.instructables.com/FL0/0FHI/JT91MVGY/FL00FHIJT91MVGY.LARGE.jpg"], "step_title": "Step 11: Adjusting the Stepper Driver Current"}, {"step": 12, "steps_text": "The laser I've used is Focusable Laser Module 200-250mW 650nm. The outer metal housing work as a Heatsink for the laser diode. It has focusable lens for the adjustment of laser dot. Connect the laser wire terminal to the laser socket on the driver board.\nYou can get one Here.", "step_imgs": ["https://cdn.instructables.com/FOE/Y8LU/JSYZ7DB6/FOEY8LUJSYZ7DB6.LARGE.jpg", "https://cdn.instructables.com/FET/2YLY/JSYZ92VX/FET2YLYJSYZ92VX.LARGE.jpg", "https://cdn.instructables.com/FKX/LDZG/JSYZ92WT/FKXLDZGJSYZ92WT.LARGE.jpg"], "step_title": "Step 12: Laser Assembly"}, {"step": 13, "steps_text": "Using four small Neodymium magnets lock the working piece on the working bed and set the X and Y-axis to initial position (home). Power up the driver board through External power source, and Arduino Nano to Computer through a USB A to USB Mini B Cable.\nAlso power the board through a external power source.\nSAFETY FIRST.\nLASER SAFETY GLASSES ARE MUST NEEDED", "step_imgs": ["https://cdn.instructables.com/F3C/7DTQ/JSYZ92YI/F3C7DTQJSYZ92YI.LARGE.jpg", "https://cdn.instructables.com/F35/XJ7P/JTON79D7/F35XJ7PJTON79D7.LARGE.jpg"], "step_title": "Step 13: Getting Ready!"}, {"step": 14, "steps_text": "Download the GRBL , Here\nExtract on the desktop the grbl-master folder, you find it in the file master.zip\nRun the Arduino IDE\nFrom the application bar menu, choose: Sketch -> #include Library -> Add Library from file.ZIP\nSelect the folder grbl that you can find inside the grlb-master folder and click on Open\nThe library now is installed and the IDE software will show you this message: The library is added to your library. Check the \u201clibraries Inclusion\u201d menu.\nThen open an example called \"grbl upload\" and upload it to your arduino board.", "step_imgs": ["https://cdn.instructables.com/FTA/AMBP/JT91LIW2/FTAAMBPJT91LIW2.LARGE.jpg", "https://cdn.instructables.com/FK3/6T2R/JT91LIW4/FK36T2RJT91LIW4.LARGE.jpg", "https://cdn.instructables.com/F78/Z97O/JT91LIW3/F78Z97OJT91LIW3.LARGE.jpg", "https://cdn.instructables.com/FS4/35NP/JT91LJHP/FS435NPJT91LJHP.LARGE.jpg", "https://cdn.instructables.com/F2S/BXTC/JT91LIW6/F2SBXTCJT91LIW6.LARGE.jpg", "https://cdn.instructables.com/FQ5/OZ2E/JT91LIW5/FQ5OZ2EJT91LIW5.LARGE.jpg"], "step_title": "Step 14: GRBL Firmware"}, {"step": 15, "steps_text": "Also we need a software to send G-Code to CNC for that I've used the LASER GRBL\nLaserGRBL is one of the best Windows GCode streamer for DIY Laser\nEngraver. LaserGRBL is able to load and stream GCode path to arduino, as well engrave images, pictures and logo with internal conversion tool.\nLASER GRBL Download.\nLaserGRBL constantly checks for COM ports available on the machine. The list of ports allows you to select the COM port which your control board is connected on.\nPlease select the proper baud rate for the connection according to your machine firmware configuration (default 115200).\nGrbl Settings:\n$$ - View Grbl settings\nTo view the settings,type $$ and press enter after connecting to Grbl. Grbl should respond with a list of the current system settings, as shown in the example below. All of these settings are persistent and kept in EEPROM, so if you power down, these will be loaded back up the next time you power up your Arduino.\n$0=10 (step pulse, usec)\n$1=25 (step idle delay, msec)\n$2=0 (step port invert mask:00000000)\n$3=6 (dir port invert mask:00000110)\n$4=0 (step enable invert, bool)\n$5=0 (limit pins invert, bool)\n$6=0 (probe pin invert, bool)\n$10=3 (status report mask:00000011)\n$11=0.020 (junction deviation, mm)\n$12=0.002 (arc tolerance, mm)\n$13=0 (report inches, bool)\n$20=0 (soft limits, bool)\n$21=0 (hard limits, bool)\n$22=0 (homing cycle, bool)\n$23=1 (homing dir invert mask:00000001)\n$24=50.000 (homing feed, mm/min)\n$25=635.000 (homing seek, mm/min)\n$26=250 (homing debounce, msec)\n$27=1.000 (homing pull-off, mm)\n$100=314.961 (x, step/mm)\n$101=314.961 (y, step/mm)\n$102=314.961 (z, step/mm)\n$110=635.000 (x max rate, mm/min)\n$111=635.000 (y max rate, mm/min)\n$112=635.000 (z max rate, mm/min)\n$120=50.000 (x accel, mm/sec^2)\n121=50.000 (y accel, mm/sec^2)\n$122=50.000 (z accel, mm/sec^2)\n$130=225.000 (x max travel, mm)\n$131=125.000 (y max travel, mm)\n$132=170.000 (z max travel, mm)", "step_imgs": ["https://cdn.instructables.com/FU7/5WXY/JT91LJVX/FU75WXYJT91LJVX.LARGE.jpg", "https://cdn.instructables.com/FAW/GT9V/JT91LJVW/FAWGT9VJT91LJVW.LARGE.jpg", "https://cdn.instructables.com/F3C/SYQS/JT91LJVT/F3CSYQSJT91LJVT.LARGE.jpg", "https://cdn.instructables.com/FUO/Q9BH/JT91LJVV/FUOQ9BHJT91LJVV.LARGE.jpg", "https://cdn.instructables.com/F5B/TLXN/JT91LJVU/F5BTLXNJT91LJVU.LARGE.jpg", "https://cdn.instructables.com/F5O/9VEZ/JT91LJW0/F5O9VEZJT91LJW0.LARGE.jpg"], "step_title": "Step 15: Software to Send G-CODE"}, {"step": 16, "steps_text": "Here comes the Most Difficult part of the Project.\n-Adjusting the laser beam into the smallest dot possible on the work piece. This is the Trickiest part which require time and patience using trail and error method.\n-Tweaking the GRBL settings for $100, $101, $130 and $131\nMy setting for the GRBL is,\n$100=110.000\n$101=110.000\n$130=40.000\n$131=40.000\nI tried engraving a square of 40mm sides and after so many error and tweaking the setting of grbl, I get the proper 40mm line engraved from the both X and Y-axis. If the resolution of X and Y-Axis are not same the image will scale in either direction.\nKeep in mind not all Stepper motor From DVD Drives are the same.\nIt is lengthy and time consuming process but the results are so satisfying when tweaked.\nLaserGRBL user interface.\nConnection control: here you can select serial port and properbaud rate for connection, according to grbl firmware configuration.\nFile control: this show loaded filename and engraving process progress. The green \u201cPlay\u201d button will start program execution.\nManual commands: you can type any G-Code line here and press \u201center\u201d. Commands will be enqueued to command queue.\nCommand log and command return codes: show enqueued commands and their execution status and errors.\nJogging control: allow manual positioning of the laser. The left vertical slider control movement speed, right slider control step size.\nEngraving preview: this area show final work preview. During engraving a small blue cross will show current laser position at runtime.\nGrbl reset/homing/unlock: this buttons submit soft-reset, homing and unlock command to grbl board. On the right of unlock button you can add some user defined buttons.\nFeed hold and resume: this buttons can suspend and resume program execution sending Feed Hold or Resume command to grbl board.\nLine count and time projection: LaserGRBL could estimate program execution time based on actual speed and job progress.\nOverrides status an control: show and change actual speed and power override. Overrides is a new feature of grbl v1.1 and is not supported in older version.", "step_imgs": ["https://cdn.instructables.com/F1J/SNYJ/JT91MVK2/F1JSNYJJT91MVK2.LARGE.jpg", "https://cdn.instructables.com/FYJ/YTSI/JT91MVKB/FYJYTSIJT91MVKB.LARGE.jpg", "https://cdn.instructables.com/FRV/BQAC/JSYZ7DB7/FRVBQACJSYZ7DB7.LARGE.jpg"], "step_title": "Step 16: Tweaking the System"}, {"step": 17, "steps_text": "Raster import allows you to load an image of any kind in LaserGRBL and turn it GCode instructions without the need of other software. LaserGRBL supports photos, clip art, pencil drawings, logos, icons and try to do the best with any kind of image.\nIt can be recalled from \u201cFile, Open File\u201d menu by selecting an image of type jpg, png or bmp\nThe setting for engraving is different for all materials.\nDefine the engraving speed per mm and Quality- lines per mm Video Attached is the time-lapse of the whole process.", "step_imgs": ["https://cdn.instructables.com/FIL/ZAZC/JTON6MMA/FILZAZCJTON6MMA.LARGE.jpg", "https://cdn.instructables.com/F21/MV5A/JTON6N73/F21MV5AJTON6N73.LARGE.jpg", "https://cdn.instructables.com/F1O/0YS0/JTON6NWY/F1O0YS0JTON6NWY.LARGE.jpg", "https://cdn.instructables.com/FEH/79P0/JTON6O1K/FEH79P0JTON6O1K.LARGE.jpg"], "step_title": "Step 17: Wood Engraving"}, {"step": 18, "steps_text": "This 250mW Laser is Also capable of cutting thin papers, but the speed should be very low i.e. not more than 15mm/min and laser beam should be properly adjusted.\nVideo Attached is the time-lapse of the whole process.", "step_imgs": ["https://cdn.instructables.com/FJ4/C84O/JTON6NZ8/FJ4C84OJTON6NZ8.LARGE.jpg"], "step_title": "Step 18: Thin Paper Cutting"}, {"step": 19, "steps_text": "I have made some Custom vinyl sticker. Boarder speed changes with respect to the colour of the vinyl used.\nDark colours are the easy to work with while the Lighter colours are some tricky.\nThe above Images demonstrate how to use vinyl sticker which are made using the CNC.\nBut keep in mind that burning vinyl releases carcinogenic fumes. They smell really bad.\n\u2665 Special thanks to the GRBL Developers :)\nI hope you liked this project, let me know in the comments if any queries, I would like to see photos of your CNC machines too!\nThanks!! for Your support.", "step_imgs": ["https://cdn.instructables.com/FYW/AEOA/JTON6NWJ/FYWAEOAJTON6NWJ.LARGE.jpg", "https://cdn.instructables.com/FNP/U6ZM/JTON6NU9/FNPU6ZMJTON6NU9.LARGE.jpg"], "step_title": "Step 19: Vinyl Cutting and Making Custom Stickers"}], "channel": "Arduino"}, {"category": "Technology", "description": "At the end of last year I saw a Thor Mjolnir Rattle popup by IJustLikeMakingThings. Having just had a baby boy I knew I wanted to make one of these on my 3D printer. To design this I used Solidworks and built it full scale using reference material from the internet. I plan on printing a full scale version of this later but as a fun test print I built one scale down to be a baby rattle. The .STL files I included will be at full scale. I scaled them down to 30% for the baby rattle.", "title": "Mjolnir Baby Rattle", "url": "https://www.instructables.com/id/Mjolnir-Baby-Rattle/", "steps": [{"step": 1, "steps_text": "The printer I used is a Creality CR-10 and I used Cura to slice each part.\nI used the following settings for each part:\nLayer Height: 0.1mm\nInfill: 25%\nExtruder Temp: 200 degrees celsius\nBuild Plate Temp: 65 degrees celsius\nFlow: 100%\nBuild Plate Adhesion: Brim (I used a raft for the handle to give it a more stable base)\nSupports: Triangles\nRemoving supports is fairly straight forward. Use cation removing the supports from the handle because they surround most of the handle.", "step_imgs": ["https://cdn.instructables.com/FXU/Z6X4/JTON11T0/FXUZ6X4JTON11T0.LARGE.jpg", "https://cdn.instructables.com/FMH/2F43/JTON11V2/FMH2F43JTON11V2.LARGE.jpg", "https://cdn.instructables.com/FSW/JLVW/JTON11VV/FSWJLVWJTON11VV.LARGE.jpg", "https://cdn.instructables.com/FDA/4G5H/JTON11WO/FDA4G5HJTON11WO.LARGE.jpg", "https://cdn.instructables.com/FD8/MWDP/JTON121K/FD8MWDPJTON121K.LARGE.jpg", "https://cdn.instructables.com/F31/N3BX/JTON125P/F31N3BXJTON125P.LARGE.jpg"], "step_title": "Step 1: Printing"}, {"step": 2, "steps_text": "Before glue any of the parts together, be sure to do a dry fit. You might need to shave off of little bit a the portion that fits into the body of the hammer. Use a x-acto knife or a file to knock down those small edges. If need be, use a file to open up the hole in the body. Take care not to remove to much on the handle or the hole for the handle. That needs to be nice and tight.\nI used a Locite epoxy plastic bonder. This was my first time using it and it bonded everything real nice. Use small amounts evenly applied to the contacting surfaces.\nThe first glue up will be the cap and two hammer heads to the body. Painters tape does great holding it together.\nLet that glue set up, my epoxy takes 20 minutes. Before gluing the handle on, pour in a tablespoon of rice through the hole for the handle. You could use anything one want for the rattle noise.\nFinally glue on the handle and secure it with tape making sure that it sits square to the hammer.", "step_imgs": ["https://cdn.instructables.com/F6A/0ZX3/JTON12T5/F6A0ZX3JTON12T5.LARGE.jpg", "https://cdn.instructables.com/FAW/3TLD/JTON126L/FAW3TLDJTON126L.LARGE.jpg", "https://cdn.instructables.com/F4H/6YE6/JTON12BL/F4H6YE6JTON12BL.LARGE.jpg", "https://cdn.instructables.com/F7N/92XS/JTON12D2/F7N92XSJTON12D2.LARGE.jpg", "https://cdn.instructables.com/F8S/MEJE/JTON12ES/F8SMEJEJTON12ES.LARGE.jpg", "https://cdn.instructables.com/F7T/1EJU/JTON12GE/F7T1EJUJTON12GE.LARGE.jpg", "https://cdn.instructables.com/F84/D2CC/JTON12I5/F84D2CCJTON12I5.LARGE.jpg", "https://cdn.instructables.com/F08/2D9M/JTON12I1/F082D9MJTON12I1.LARGE.jpg", "https://cdn.instructables.com/FHP/P4A1/JTON12MM/FHPP4A1JTON12MM.LARGE.jpg", "https://cdn.instructables.com/FWD/PEPW/JTON12PA/FWDPEPWJTON12PA.LARGE.jpg", "https://cdn.instructables.com/F2Q/85UK/JTON13GS/F2Q85UKJTON13GS.LARGE.jpg"], "step_title": "Step 2: Assembly"}, {"step": 3, "steps_text": "At this point I was done and my son loves it. I wanted to give it a nice paint job to give it that authentic Mjolnir look but I figured my son would be putting this in his mouth and I didn't want paint coming off.\nLike I said I plan to make a full scale version of this design and I will painting that one.\nThank you for your interest in my little project for my son and thanks to IJustLikeMakingThings for giving me the inspiration.\nIf you feel that it is worthy, I would be grateful for your vote in the Remix Contest", "step_imgs": ["https://cdn.instructables.com/FGL/S98H/JTON17JW/FGLS98HJTON17JW.LARGE.jpg", "https://cdn.instructables.com/F5H/ZO9S/JTON13F8/F5HZO9SJTON13F8.LARGE.jpg", "https://cdn.instructables.com/FMP/WU7E/JTON13FF/FMPWU7EJTON13FF.LARGE.jpg"], "step_title": "Step 3: Finished-Final Thoughts"}], "channel": "3D Printing"}, {"category": "Technology", "description": "There are few things that are more frustrating than spending an evening taking photos of the heavens with your telescope, only to find that all of your photos are slightly out of focus...\nFocussing a telescope for astrophotography is very difficult, the diffraction patterns around stars mean that they never really focus to a point; it is difficult to say when they are smallest, and difficult to keep track of which way the focus needs adjusting.\nFortunately Pavel Bahtinov invented a great solution back in 2005. The best way to achieve a sharp focus is to use a diffractive mask (a Bahtinov mask) to give great visibility of both how well focussed the telescope is and the direction with which it is out of focus.\nYou can buy these or make them yourself (I will write an instructable on laser cutting one as soon as I get around to lasering one myself!), but in this instructable I will show you how to use the principle to focus your telescope quickly, simply and almost for free... using only electrical tape.\nFor the avoidance of doubt, once the telescope is focussed, the tape is removed to give a sharp image.\nFor this you will require:\nSome electrical tape. Any opaque tape that doesn't leave a gluey mess behind will work, but PVC electrical tape is what I use.\nA reflector telescope. I used an 8 inch Schmidt Cassegrain (Nexstar 8SE), but it should work equally well with most Newtonians or Maks. You might be able to do this with a refractor but it is less easy and risks getting the tape on the lens.\nA camera with suitable adapter. Not strictly necessary, as you can focus for direct viewing with this technique. I used a Sony Alpha a6000 on a 1.25\" eyepiece adapter.\nNote: Telescopes are fragile, so don't go putting big forces on things or you'll de-collimate (or worse) your telescope!\nAll photos are from my telescope, focussed using this method, and not photoshopped beyond brightness/contrast adjustment (not even photo stacking)", "title": "Focus a Telescope Using Tape", "url": "https://www.instructables.com/id/Focus-a-Telescope-With-Tape/", "steps": [{"step": 1, "steps_text": "Tear a strip of tape slightly longer than the radius of your telescope. Very gently stick one end of this to the centre secondary support with the tape held taut horizontally coming out to the rim at the 9 o'clock position. At all times make sure the tape is held away from the corrector plate lens to avoid getting any residue on the lens. Stick the far end carefully on the rim with the tape taut enough to bridge without touching the corrector, while being careful not to pull hard enough to either unstick the tape or affect collimation of the secondary.\nIn the same way, carefully add two pieces of tape to the other side, angled around 20\u00b0 either side of horizontal (i.e. below 2 o'clock and above 4 o'clock). See the pictures for details.\nIf attempted on a refractor, this Y would need adding in one go!", "step_imgs": ["https://cdn.instructables.com/FMV/1YGY/JTON1PP4/FMV1YGYJTON1PP4.LARGE.jpg", "https://cdn.instructables.com/F7U/SFRU/JTON1PP5/F7USFRUJTON1PP5.LARGE.jpg"], "step_title": "Step 1: Carefully Add Strips of Tape to Form a 'Y'"}, {"step": 2, "steps_text": "Now add 4 more strips, two each side, parallel with the previous strips.\nThe aim here is to form two horizontal slots approximately 5m wide one side, and two angled slots (again 5mm wide) the other side. It is important to get the tape as parallel as possible such that the slot is constant width all the way along. The exact width of the slot is less critical. Again see the image for details.\nIf attempted on a refractor a small vertical length of tape would be needed to tie all the tape together in the middle so it is held taut. I haven't tried this, and expect this would be tricky but not impossible!", "step_imgs": ["https://cdn.instructables.com/FMJ/XXUO/JTON1PON/FMJXXUOJTON1PON.LARGE.jpg"], "step_title": "Step 2: Add Further Strips to Create Narrow Slots"}, {"step": 3, "steps_text": "Point the telescope at a bright star. Polaris may be a good choice if you don't have a tracking mount. Centre the star in the camera's view and focus the telescope until the star looks like a spiky white dot. If you have a focus-assist magnifier view, use it now to make things easier to see.\nThe spikes are caused by the narrow slots diffracting the star light. The side with the horizontal slots makes a vertical 'I' spike, while the two angled slots make two angled spikes forming an 'X'. As the focus is changed near the optimal focus, the I and X slide sideways relative to each other.\nAdjust the focus until they overlap, noting which way the I moves when the focuser is turned clockwise.", "step_imgs": ["https://cdn.instructables.com/FAA/4YZX/JTON1POM/FAA4YZXJTON1POM.LARGE.jpg", "https://cdn.instructables.com/F0X/0WBZ/JTON1TIF/F0X0WBZJTON1TIF.LARGE.jpg"], "step_title": "Step 3: Point the Telescope at a Bright Star and Coarsely Focus"}, {"step": 4, "steps_text": "As you get closer to centralised, you will have to visualise the crossing point of the two spikes that form the X, and try to get the I as well centred as possible. This will require minute changes, and you'll need to wait for the vibrations to settle after each adjustment.\nFortunately, with this method you have a good read out which way the focuser needs turning, and how far from perfection you are. You will notice that the adjustments become far finer than you'd be making focussing by eye as this method gets a very accurate focus.\nOnce you cannot centre things any better you have achieved a really good focus! Carefully remove the tape so you no longer get the diffraction spikes.", "step_imgs": ["https://cdn.instructables.com/F1N/PBLC/JTON1VCH/F1NPBLCJTON1VCH.LARGE.jpg", "https://cdn.instructables.com/F65/BS5W/JTON1PJK/F65BS5WJTON1PJK.LARGE.jpg"], "step_title": "Step 4: Make Fine Adjustments to Centre the I Within the X"}, {"step": 5, "steps_text": "Here's the pay off... you get to take awesome photos of whatever you fancy!\nI'm pleased with these photos.\nThey are of:\nM65, M66 from the Leo Triplet\nM51 Whirlpool Galaxy in Canes Venatici\nM42 Orion Nebula\nThe Moon\nAll four are in perfect focus. Any apparent blur will be down to at least one of: atmospheric distortion (poor seeing), tracking error (over 10-30s exposures on an Alt-Az mount), overexposure of stars, or the diffraction limit of resolution of my telescope.\nStill they aren't bad for single photos taken in my back garden with a telescope I can easily lift! If you want to eliminate tracking error and some atmospheric distortion, stacking multiple short exposures can improve quality significantly.\nI hope you have found this instructable interesting/useful. If so please vote for me in the Tape Contest!", "step_imgs": ["https://cdn.instructables.com/F6V/FBP9/JTON257Q/F6VFBP9JTON257Q.LARGE.jpg", "https://cdn.instructables.com/FK4/SEVJ/JTON252J/FK4SEVJJTON252J.LARGE.jpg", "https://cdn.instructables.com/FT5/N7OJ/JTON2555/FT5N7OJJTON2555.LARGE.jpg", "https://cdn.instructables.com/FS0/TOL6/JTON25A5/FS0TOL6JTON25A5.LARGE.jpg"], "step_title": "Step 5: Take Some Awesome, in Focus Photos!"}], "channel": "Photography"}, {"category": "Technology", "description": "If you've seen the videos of amazing robot dogs and wanted one for your home--maybe this (for less than $600. in parts and material) is a place to start.", "title": "Mike's Robot Dog", "url": "https://www.instructables.com/id/Mikes-Robot-Dog/", "steps": [{"step": 1, "steps_text": "Let's start with a list of materials needed. First, there are the 3d printed parts (files available on this site).\nBill of Materials\n(4) Super Servo Holder\n(4) Axle Shorter Thread\n(8) Back Bearinga\n(4) Fat Pieceb\n(4) Bearing Linear\n(4) Axle Nut\n(4) Upper LegA\n(4) Super Servo Combo\n(36) Axle Bolt\n(4) Ankle Servo Conn\n(4) Lower Leg\n(4) Foot Holdera\n(4) Axle\n(4) Foot\n(4) Wire Guide\nOther Parts:\n(32) m3 x 16mm bolts\n(32) flat washers for m3 bolts\n(48) m3 nuts\n(8) FT 5335M servo motors (Pololu.com)\n(8) aluminum horn for FT 5335M servo (pololu.com)\n(20) 2-56 x 7/16\" bolts\n(28) 2-56 nuts\n(24) m3 x 8mm bolts\n(4) 20 kg-cm servo motor (amazon.com)\n(1) Arduino Uno\n(1) 8 volt 3.2 amp hr. sealed lead acid battery (amazon.com)\n(1) digital voltmeter (amazon.com)\n(2) heavy duty toggle switch (amazon.com)\n(16) m3 x 12 mm bolts\n(8) 2-56 x 3/4\" bolts\n(8) lockwashers for 2-56 bolts\n(1) plywood body 1/2\" plywood 28\" x 10\"\n(1) paint for plywood body\n(16) #6 x 1 1/4\" wood screws\n(24) #6 x 3/4\" wood screws\n(4) 5 position terminal blocks\n(4) number 4 x 1/2\" wood screw\n(4) servo extension cable\n(1) aluminum duct tape (or any other tape)\n(4) small tie wrap\n(1) 8\" diameter styrofoam ball\noval styrofoam, glue, paint, google eyes, brown faux fur fabric, brown giant chenille stem For the body, I examined several materials and decided to go with 1/2\" plywood.\nThe body requires about 200 square inches of material.\nBelow are some of the materials considered:\n1/4\" plywood 2.15 grams per square inch\n1/2\" plywood 4.3 grams per square inch\n1/4\" acrylic 4 grams per square inch\n5 mm foam board .59 grams per square inch\n1/4\" plywood is too flexible--I had bending problems requiring support on the early dog versions. 5 mm foam board looks great in theory, but I had doubts about the stiffness and my ability to connect things securely. 1/4\" acrylic would look \"cool,\" but it's not so easy for me to work with. I examined carbon fiber sheets, but that looked like a project unto itself. I cut the plywood in a shape to reduce the weight.", "step_imgs": ["https://cdn.instructables.com/F6M/NS1I/JTON1UGN/F6MNS1IJTON1UGN.LARGE.jpg"], "step_title": "Step 1: Materials Needed"}, {"step": 2, "steps_text": "I painted the plywood.", "step_imgs": ["https://cdn.instructables.com/FY5/JV2M/JTON1TAE/FY5JV2MJTON1TAE.LARGE.jpg"], "step_title": "Step 2:"}, {"step": 3, "steps_text": "Here's the pieces for a leg.", "step_imgs": ["https://cdn.instructables.com/FKA/DH38/JTON1TAG/FKADH38JTON1TAG.LARGE.jpg"], "step_title": "Step 3:"}, {"step": 4, "steps_text": "Attach a servo motor to \"Super Servo Holder\" using (4) m3 x 16 mm bolts, nuts and flat washers. Set the left front shoulder servo to the ccw rotation maximum, 150 degrees.", "step_imgs": ["https://cdn.instructables.com/FMI/6KE5/JTON1TAI/FMI6KE5JTON1TAI.LARGE.jpg"], "step_title": "Step 4:"}, {"step": 5, "steps_text": "To the four axles, attach the servo horns.", "step_imgs": ["https://cdn.instructables.com/FPE/B2KQ/JTON1TAK/FPEB2KQJTON1TAK.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "I slide this piece through the linear bearing.", "step_imgs": ["https://cdn.instructables.com/FR1/2Z2P/JTON1TBE/FR12Z2PJTON1TBE.LARGE.jpg"], "step_title": "Step 6:"}, {"step": 7, "steps_text": "Thread \"fat pieceb\" onto this.", "step_imgs": ["https://cdn.instructables.com/FIX/GVIN/JTON1TC8/FIXGVINJTON1TC8.LARGE.jpg"], "step_title": "Step 7:"}, {"step": 8, "steps_text": "Drill holes 25 mm deep using a 7/64 inch drill bit. Install (4) 20 mm M3 machine screws.", "step_imgs": ["https://cdn.instructables.com/F6N/KB8M/JTON1TF8/F6NKB8MJTON1TF8.LARGE.jpg"], "step_title": "Step 8:"}, {"step": 9, "steps_text": "Set Servo Twist Motor to 90 degrees. Attach \"Servo Twist Holder\" to \"Upper Lega\" using (4) m3 x 12 mm bolts and nuts.", "step_imgs": ["https://cdn.instructables.com/FCC/05VT/JTON1TG1/FCC05VTJTON1TG1.LARGE.jpg"], "step_title": "Step 9:"}, {"step": 10, "steps_text": "Install motor in \"Super Servo Combo\" using (4) m3 x 16 mm bolts, nuts and flat washers.", "step_imgs": ["https://cdn.instructables.com/FL7/Z485/JTON1TG6/FL7Z485JTON1TG6.LARGE.jpg"], "step_title": "Step 10:"}, {"step": 11, "steps_text": "Attach \"Super Servo Combo\" to \"Upper Lega\" using (4) 3d printed \"axle bolts.\"\nSet \"Super Servo Combo\" motor to cw max--30 degrees.", "step_imgs": ["https://cdn.instructables.com/F9T/J0W8/JTON1TGX/F9TJ0W8JTON1TGX.LARGE.jpg"], "step_title": "Step 11:"}, {"step": 12, "steps_text": "Attach \"back bearinga\" to \"Ankle Servo Conn\" using (3) m3 x 8 mm bolts.", "step_imgs": ["https://cdn.instructables.com/FR4/V83E/JTON1THO/FR4V83EJTON1THO.LARGE.jpg"], "step_title": "Step 12:"}, {"step": 13, "steps_text": "Attach aluminum servo horn to \"Ankle Servo Conn\" using (2) 2-56 x 3/4\" bolts, nuts and lockwashers.", "step_imgs": ["https://cdn.instructables.com/FI1/R68I/JTON1TIW/FI1R68IJTON1TIW.LARGE.jpg"], "step_title": "Step 13:"}, {"step": 14, "steps_text": "Connect \"Ankle Servo Conn\" to \"Lower Leg\" using (1) \"Axle Bolt.\"", "step_imgs": ["https://cdn.instructables.com/FPC/GMA6/JTON1TKJ/FPCGMA6JTON1TKJ.LARGE.jpg"], "step_title": "Step 14:"}, {"step": 15, "steps_text": "Connect \"Foot Holdera\" to \"Lower Leg\" using (2) \"Axle Bolts.\"", "step_imgs": ["https://cdn.instructables.com/FAX/CBS5/JTON1TLK/FAXCBS5JTON1TLK.LARGE.jpg"], "step_title": "Step 15:"}, {"step": 16, "steps_text": "Place \"Axle\" in \"Foot.\" It's a loose fit.", "step_imgs": ["https://cdn.instructables.com/F3A/8L7U/JTON1TMJ/F3A8L7UJTON1TMJ.LARGE.jpg"], "step_title": "Step 16:"}, {"step": 17, "steps_text": "Insert foot/axle into \"Foot Holdera.\"", "step_imgs": ["https://cdn.instructables.com/FCP/7YIT/JTON1TMY/FCP7YITJTON1TMY.LARGE.jpg"], "step_title": "Step 17:"}, {"step": 18, "steps_text": "Secure foot using (2) \"Axle Bolts.\"", "step_imgs": ["https://cdn.instructables.com/FGP/0WO5/JTON1TN7/FGP0WO5JTON1TN7.LARGE.jpg"], "step_title": "Step 18:"}, {"step": 19, "steps_text": "Connect lower leg assembly to upper leg assembly by attaching \"Ankle Servo Conn\" to servo motor. Leg should be in sitting position. Insert servo horn screw and tighten.", "step_imgs": ["https://cdn.instructables.com/FKO/FXXX/JTON1TNI/FKOFXXXJTON1TNI.LARGE.jpg"], "step_title": "Step 19:"}, {"step": 20, "steps_text": "Adjust \"fat pieceb\" so that leg will be in sitting position. Insert servo horn screw and tighten.\nPlace \"Servo shoulder holder\" and \"Bearing Linearb\" on plywood body. Assume sitting position for dog. Secure using (4) number 6 x 1 1/4\" screws and (4) number 6 x 3/4\" screws.", "step_imgs": ["https://cdn.instructables.com/F57/MX6F/JTON1TOH/F57MX6FJTON1TOH.LARGE.jpg"], "step_title": "Step 20:"}, {"step": 21, "steps_text": "Insert servo twist motor into \"fat pieceb.\" Install and tighten servo horn screw.", "step_imgs": ["https://cdn.instructables.com/F30/LKBP/JTON1TR4/F30LKBPJTON1TR4.LARGE.jpg"], "step_title": "Step 21:"}, {"step": 22, "steps_text": "Install 5 position terminal block using (2) number 6 x 3/4\" wood screws.", "step_imgs": ["https://cdn.instructables.com/F2T/VREC/JTON1TRV/F2TVRECJTON1TRV.LARGE.jpg"], "step_title": "Step 22:"}, {"step": 23, "steps_text": "Install wire guide. Use (1) number 4 x 1/2\" wood screw.", "step_imgs": ["https://cdn.instructables.com/FCQ/1YI1/JTON1TTD/FCQ1YI1JTON1TTD.LARGE.jpg"], "step_title": "Step 23:"}, {"step": 24, "steps_text": "Connect servo extender cable to \"Super Servo Combo\" servo motor.", "step_imgs": ["https://cdn.instructables.com/FU0/4X6R/JTON1TUT/FU04X6RJTON1TUT.LARGE.jpg"], "step_title": "Step 24:"}, {"step": 25, "steps_text": "Route cable and secure using duct tape. Secure servo wire to \"Servo Twist Holder\" using a tie wrap.", "step_imgs": ["https://cdn.instructables.com/FN6/S0I2/JTON1TWA/FN6S0I2JTON1TWA.LARGE.jpg"], "step_title": "Step 25:"}, {"step": 26, "steps_text": "Secure wires in terminal blocks. From outside looking in, position number 1 (left most) is upper servo control wire. Position 2 is \"servo twist\" control wire. Position 3 is lower (\"super servo combo\") control wire. Position 4 is positive. Position 5 is negative.", "step_imgs": ["https://cdn.instructables.com/F6G/0NM3/JTON1TZW/F6G0NM3JTON1TZW.LARGE.jpg"], "step_title": "Step 26:"}, {"step": 27, "steps_text": "Do this three more times. Left front and right rear legs are the same.\n\nRight front and Left rear legs are set up with the \"Servo shoulder motor\" set to the maximum cw limit (30 degrees) instead of 150 degrees.", "step_imgs": ["https://cdn.instructables.com/FQ5/IVHM/JTON1TZX/FQ5IVHMJTON1TZX.LARGE.jpg"], "step_title": "Step 27:"}, {"step": 28, "steps_text": "To make the dog move, power and control must be provided. The legs are attached to an Arduino and battery as shown in the schematic diagram.\nConnect the motor power terminal blocks using #18 AWG wire.", "step_imgs": ["https://cdn.instructables.com/F9Z/1FE2/JTON1UMU/F9Z1FE2JTON1UMU.LARGE.jpg", "https://cdn.instructables.com/F7S/Z7QI/JTON1U45/F7SZ7QIJTON1U45.LARGE.jpg"], "step_title": "Step 28:"}, {"step": 29, "steps_text": "Add the Arduino.", "step_imgs": ["https://cdn.instructables.com/FNI/DPXE/JTON1U6A/FNIDPXEJTON1U6A.LARGE.jpg"], "step_title": "Step 29:"}, {"step": 30, "steps_text": "Connect the left front leg to the Arduino.", "step_imgs": ["https://cdn.instructables.com/FMG/U7X5/JTON1U71/FMGU7X5JTON1U71.LARGE.jpg"], "step_title": "Step 30:"}, {"step": 31, "steps_text": "Add control to the right front leg from the Arduino.", "step_imgs": ["https://cdn.instructables.com/FHZ/O0MW/JTON1UAM/FHZO0MWJTON1UAM.LARGE.jpg"], "step_title": "Step 31:"}, {"step": 32, "steps_text": "Add control to the right rear leg.", "step_imgs": ["https://cdn.instructables.com/F4M/2D4F/JTON1UBG/F4M2D4FJTON1UBG.LARGE.jpg"], "step_title": "Step 32:"}, {"step": 33, "steps_text": "Finally, connect the left rear leg.", "step_imgs": ["https://cdn.instructables.com/F7S/W5PX/JTON1UCB/F7SW5PXJTON1UCB.LARGE.jpg"], "step_title": "Step 33:"}, {"step": 34, "steps_text": "The power supply is a combination of an 8 volt lead acid battery (sealed), a voltmeter and two switches. Lugs slide onto the battery--they can be removed for recharging. The power supply is mounted on 1/4 inch plywood and the plywood is attached to the body using Velcro. A disconnect plug from the power supply enables the entire supply to be quickly removed or swapped.", "step_imgs": ["https://cdn.instructables.com/FVU/9G9M/JTON1UEG/FVU9G9MJTON1UEG.LARGE.jpg"], "step_title": "Step 34:"}, {"step": 35, "steps_text": "Walking requires a sketch--here's my approach.\nMove RR leg toward body\nMove LF leg forward\nReturn RR leg to stand position\nMove LF leg toward body\nMove RR leg forward\nReturn LF leg to stand position\nMove LR leg toward body\nMove RF leg forward\nReturn LR leg to stand position\nMove RF leg toward body\nMove LR leg forward\nReturn RF leg to stand\nReturn all legs to start position (this moves the body forward)\nRepeat.", "step_imgs": ["https://cdn.instructables.com/FVC/XPQR/JTON1UHE/FVCXPQRJTON1UHE.LARGE.jpg"], "step_title": "Step 35:"}, {"step": 36, "steps_text": "The head and tail reduce the \"uncanny valley\" effect and increase the \"doglike\" look. The head was formed using an 8 inch diameter foam ball (carved for shape). The muzzle is a styrofoam oval--the nose a small circle. The neck was carved from a styrofoam oval. The ears are brown faux fur fabric (craft store) and the tongue is pink foam. Add google eyes, paint and glue for the head. A 1\" x 2\" rectangle of wood was inserted into the neck (square hole cut out first) and that is used to mount the head to the dog. The tail is a \"brown giant chenille stem\" (doubled).", "step_imgs": ["https://cdn.instructables.com/FN7/SMII/JTON1UI6/FN7SMIIJTON1UI6.LARGE.jpg"], "step_title": "Step 36: Head and Tail"}], "channel": "Robots"}, {"category": "Technology", "description": "This project is an remix of my Coke Machine Can Level detector, (https://www.instructables.com/id/Coke-Machine-Can-Level-Detector/) with new sensors, and the addition of spoken sound!\n\nAfter I made my first level detector, I added a piezo buzzer to give audible feedback for the visually impaired. It worked, but was kind of, meh\u2026 What did each particular sound mean? It needed explaining so wasn\u2019t too practical as a solution. I left it and went off to do other things.\nRecently, I made some Portal Turrets that used the DFPlayer Mini MP3 player (or MP3-TF-16P). That project worked out pretty well, and when getting a beverage out of my Coke machine one day, it dawned on me: I could use the DFPlayer chip with a speaker and finally get the solution I originally wanted to help the visually impaired! It would do what it originally did, but would now SPEAK the level in the machine as well!\nI also wanted to use the VL53LOX sensors to change things up. I knew that they used the I2C bus, and they all used the same address, so it was an additional challenge to use 2 of them, along with the LCD screen on the same bus.\nSo now, this version provides the same graphical display when approaching the machine, but when you get a little closer, it will also tell you how many cans are left! I set it up this way with a relatively short speaking distance to avoid nuisance trips when I\u2019m working around the machine.\nIn my mind, this is a cheap platform to provide audible information from various sensors. There is lots more room in the box and on the Nano for other sensory inputs. Now it\u2019s just a matter of coming up with other applications!", "title": "Coke Machine Level Detector - Now With Speech!", "url": "https://www.instructables.com/id/Coke-Machine-Level-Detector-Now-With-Speech/", "steps": [{"step": 1, "steps_text": "The physical design of the box is pretty much the same as the previous design, but I had to move things around to include the DFPlayer chip and the 4cm speaker as used in the Turret project.\nThe components are printed in the same way as my previous build, with the red/white faceplate printed using the Prusa multi colour print website: (https://www.prusaprinters.org/color-print/). I still don't know if this gcode inclusion will work on other printers without the multi-colour add-ons, but I like the result!\nThe dimensions are the same as the previous build, which means that you could interchange the printed parts (faceplate and sensor holder) and use whatever sensor combinations you like: HC-SR04 or VL53LOX. The difference will come down to code!\nThe top and bottom shown here work together, so they are not interchangeable with the old design.", "step_imgs": ["https://cdn.instructables.com/FDX/3C3F/JTON0O87/FDX3C3FJTON0O87.LARGE.jpg"], "step_title": "Step 1: Printed Parts"}, {"step": 2, "steps_text": "Here is a list of the inner parts on this build:\nArduino Nano\nKuman 0.96 Inch 4-pin Yellow Blue IIC OLED (SSD 1306 or similar).\nVL53LOX (qty: 2 for this version)\ngeneric 5.5mm x 2.1mm DC Socket Panel Mounting connector (see image)\n4cm speaker, 4Ohm, 3Watt (part # CLT1026 or EK1794 on Amazon)\nDFPlayer Mini MP3 player (or MP3-TF-16P)\nA little bit of wiring\nThe 2.1 plug connector is optional, as the unit is wired such that it can be powered through the Nano.\nGiven the power draw for the speaker and other components, a good power supply is needed now as compared to the previous design.", "step_imgs": ["https://cdn.instructables.com/F7W/JGB1/JTON0NSO/F7WJGB1JTON0NSO.LARGE.jpg"], "step_title": "Step 2: Electronics"}, {"step": 3, "steps_text": "Most connections are soldered together directly with wire. The areas that require multiple connections are the 5V power feeds and GND connections to sensors and devices from the Nano. The same applies for the I2C bus to the sensors and LCD screen. I soldered them together and used shrink-wrap to keep it somewhat tidy and to prevent shorts.\n\nI like to pre-wire the individual components, then make the connections between them and to the Nano. In the end, I made some of the connections using plug in connectors, like to the LCD screen. It means I can replace them easily if they burn out, but since the display only comes on when someone is in front, it should be a long while.", "step_imgs": ["https://cdn.instructables.com/FJK/WLGH/JTON0O86/FJKWLGHJTON0O86.LARGE.jpg", "https://cdn.instructables.com/FMZ/H3U9/JTON0O8T/FMZH3U9JTON0O8T.LARGE.jpg", "https://cdn.instructables.com/FCT/S8ER/JTON0O83/FCTS8ERJTON0O83.LARGE.jpg", "https://cdn.instructables.com/FLU/RS2L/JTON0O82/FLURS2LJTON0O82.LARGE.jpg", "https://cdn.instructables.com/F37/ZYUR/JTON0O81/F37ZYURJTON0O81.LARGE.jpg", "https://cdn.instructables.com/F38/QAUP/JTON0O80/F38QAUPJTON0O80.LARGE.jpg", "https://cdn.instructables.com/F16/AYW8/JTON0O5S/F16AYW8JTON0O5S.LARGE.jpg"], "step_title": "Step 3: Wiring"}, {"step": 4, "steps_text": "This device is designed to be assembled with no fasteners. The little nibs or pins on the top cover are delicate and may break off. I designed it this way so that you could drill them out and use 2mm or similar screws if desired. I only add the cover once I\u2019m finally done and haven\u2019t had to resort to screws (even though I\u2019ve broken a few locating pins) as the locking hooks do their job.\nThe top cover with hooks is designed such that you squeeze the bottom sides where the hooks engage the bottom plate a little bit to disengage them and remove the cover. To make this easier, you could drill out the holes a little bit where the pins go in. That would make assembly/disassembly easier.\nThe nano and the DFPlayer will snap into location pretty easily. The power connector is pushed through and the nut locks it into place. The speaker just slips into the printed cradle. The VL53LOX is press fit into the cover and the separate sensor holder. Once they\u2019re pressed in, they don\u2019t move. (don't forget which way the sensor has to point, and don't forget to remove the little plastic film on the sensor before installing!) The same is true for the LCD screen, but it may need some finagling if the PCB dimensions from the supplier are a little different than the ones I use. (I\u2019ve tried some which have slightly different dimensions.) I might add a version that will use 2 screws and a strap as I\u2019ve done with my Master Turret Controller.", "step_imgs": ["https://cdn.instructables.com/FXA/LRMK/JTON0NSQ/FXALRMKJTON0NSQ.LARGE.jpg", "https://cdn.instructables.com/F7P/4U0M/JTON0O85/F7P4U0MJTON0O85.LARGE.jpg", "https://cdn.instructables.com/FZE/2HXB/JTON0O3K/FZE2HXBJTON0O3K.LARGE.jpg", "https://cdn.instructables.com/FIT/WWKT/JTON0O3J/FITWWKTJTON0O3J.LARGE.jpg", "https://cdn.instructables.com/F4W/8LN1/JTON0O84/F4W8LN1JTON0O84.LARGE.jpg"], "step_title": "Step 4: Mechanical Assembly"}, {"step": 5, "steps_text": "The code started out as from my first build, but then got changed around. I use the same libraries for the LCD screen, but needed to incorporate the VL53LOX and the DFPlayer libraries. I originally tried the Adafruit library for the VL53LOX sensors, but they consumed ALL of the memory on the Nano before I could finish my code! I had to abandon that library and go with something that consumed less memory. The resulting libraries used are much leaner and leave room for more sensors! A much better outcome.\nI tried to break up and comment the code where it makes sense, so hopefully it should be pretty apparent as to what\u2019s going on in there. As usual, this project took a bit of research to figure out how to make the libraries do what I wanted. When searching for answers, I find the search results are mostly the problems people are having and not examples of solutions to their problems. Hopefully you will find these examples useful. I've included some as comments in the code.\nThe sounds I use are attached as a zip file. They are just recordings of me saying \"You have...\" [number of cans] \"remaining.\" The files are used the same way as my previous projects, with the files saved as 0001.mp3, 0002.mp3, etc. In this case 0001 is just a reading of the number \"one\" to correspond to the number read aloud.\nI started looking for good quality sound files of someone reading from 1 through 30, but the goods ones I found were behind paywalls and such, so I just grabbed an old Mic, plugged it in and recorded myself counting. Then I cut up and saved them as mp3's using Audacity. Pretty straightforward to make a simple solution. The fun is in incorporating other recordings or sounds! Have fun here!", "step_imgs": [], "step_title": "Step 5: Code"}, {"step": 6, "steps_text": "This was a pretty quick redesign, since it came off the back of the Portal Turret project, and I kept much from the original design. While originally made to keep tabs on my beverage supply, I hope that this simple box can be used for other purposes where sensory information is needed, either displayed or spoken.\nLet me know if you come up with other uses for this simple platform!", "step_imgs": [], "step_title": "Step 6: Final Thoughts"}], "channel": "Audio"}, {"category": "Technology", "description": "Ever tried to get out of bed quietly at night only to trip over something and wake up the whole house?\nMotion sensing night lights installed discreetly under your bed provide low-level light bright enough to guide you around those stray LEGO bricks but dim enough so you're not woken up fully. As well as sensing motion, it's also possible to programme the lights to a colour of your choice for a fixed (or indefinite) length of time. They add a cool glow and ambiance to any bedroom.\nWith some basic kit, a couple of extra bits and our T3ch Flicks tutorial and video, you can install these lights with relative ease in a couple of hours.\nMaterials:\nPower supply (5V 6A) Amazon\nAddressable LED strip Amazon\nArduino Nano Amazon\nWire clips Amazon\nMotion Sensors Amazon\nRocker switch Amazon\nAC Plug\nWire\nFiles (https://gitlab.com/t3chflicks/night-light-leds):", "title": "Motion Sensing Under Bed Lighting", "url": "https://www.instructables.com/id/Motion-Sensing-Under-Bed-Lighting/", "steps": [{"step": 1, "steps_text": "", "step_imgs": [], "step_title": "Step 1: Watch This!"}, {"step": 2, "steps_text": "Turn the bed onto its side so the base is readily accessible. Find an appropriate location for the control box, we chose the slightly higher area near the head of the bed (see diagram). Measure the perimeter of your bed and its length and width (see diagram). Note down your measurements.\nDetermine a location for the three sensors. You want one facing each of the three sides of the bed which are not against the wall. We chose locations which were close to the edge of the bed, but not visible. Measure the distance from the sensor location to the control box.", "step_imgs": ["https://cdn.instructables.com/F7G/INKA/JTOMWVW0/F7GINKAJTOMWVW0.LARGE.jpg"], "step_title": "Step 2: Measure the Bed"}, {"step": 3, "steps_text": "Cut the LED stip to the length of the bed perimeter.\nNext, cut the wires: you will need three for each sensor and three for the LED strip, each leading back to the control box - 12 in total. Taking three lengths of differently coloured wire, cut to size. We used yellow, green and orange - the accepted convention is red for power, black for ground and another (bold) colour for signal. It doesn\u2019t really matter which colours you use as long as you know which is which.", "step_imgs": [], "step_title": "Step 3: Cut the Wires and LED Strip"}, {"step": 4, "steps_text": "We housed our motion sensors in 3D-printed cases (you can find the file link below). It\u2019s not completely necessary to have these, but they make the sensors tidier and easier to put on the bottom of your bed.\nIf you are using the 3D-printed case, start by threading the three differently coloured wires through the lid. The motion sensors have three different pins: ground (GND), power (VCC), and signal (S) (shown above). When holding the sensor as shown in the diagram above (i.e. with the pins on the bottom edge of the module), attach the three different coloured wires their respective pins and solder them into place. Then, cover the wires using heat shrink. Repeat this for the wires cut for each of the three sensors.\nPush the dome of the motion sensor through the hole in the main case. It should click into place. Close the case, leaving the three coloured wires trailing through the rear hole.", "step_imgs": ["https://cdn.instructables.com/FUF/99U5/JTOMWVXK/FUF99U5JTOMWVXK.LARGE.jpg", "https://cdn.instructables.com/FIN/GG99/JTOMWVUF/FINGG99JTOMWVUF.LARGE.jpg", "https://cdn.instructables.com/F61/F5C2/JTOMWVNU/F61F5C2JTOMWVNU.LARGE.jpg"], "step_title": "Step 4: Solder Cables to Motion Sensor"}, {"step": 5, "steps_text": "The LED strip has the three same connections: power, signal and ground - except the signal pin is an input.\nThese LEDs take instructions from the Arduino, each one of them addressable. We can change colour (RGB) and brightness. Solder three coloured wires to the LED strip, these will be used to connect to the Arduino later.", "step_imgs": ["https://cdn.instructables.com/FI0/ILPV/JTOMWVSW/FI0ILPVJTOMWVSW.LARGE.jpg"], "step_title": "Step 5: Wire the LED Strip"}, {"step": 6, "steps_text": "If you are using the 3D-printed control box, you will need to install the power switch and connect it up to the wires.\nFirst, ensure there\u2019s nothing on the end of your plug, if there is, cut it off. Thread the wire through the hole in the front of the box and out again through the hole for the switch immediately next to it. Strip the outer covering of the AC wire so that 10cm of the three inner wires (Live, Neutral and Earth) can be seen.\nThen, cut and remove 8cm of the live (red) and neutral (blue) wires and set aside for later. Using the remaining 2cm of the end of the AC plug wire, solder the live (red) and neutral (blue) wires to the switch on the bottom two prongs (as shown in the diagram).\nNext, take the 8cm pieces of live (red) and neutral (blue) wires you cut earlier and solder them onto the two prongs on the top of the switch (as shown in the diagram) - these wires will attach to the power box within the control box. Pulling the wires through first, push the switch into its hole in the box.", "step_imgs": ["https://cdn.instructables.com/FAS/47KK/JTOMWVM8/FAS47KKJTOMWVM8.LARGE.jpg", "https://cdn.instructables.com/FFZ/XAXF/JTOMWVKO/FFZXAXFJTOMWVKO.LARGE.jpg"], "step_title": "Step 6: Power Switch"}, {"step": 7, "steps_text": "Put the power supply in the box so the wire connection points face the switch.\nConnect the live (red) and neutral (blue) wires from the switch to the live and neutral connection point (marked l and n respectively) on the power supply. The connection points on the power supply are screws, ensure these are done up tightly once the wires are in place.", "step_imgs": ["https://cdn.instructables.com/FKE/PW9J/JTOMWVJ4/FKEPW9JJTOMWVJ4.LARGE.jpg"], "step_title": "Step 7: Connect Power Supply"}, {"step": 8, "steps_text": "The power supply has output connections for 5V and ground (see diagram). Take the Arduino and cut a power wire (conventionally red, but whatever colour you are using) approximately 8cm long.\nConnect the Arduino to the power supply by screwing one end of the power wire into the \u20185V\u2019 connection point and soldering the other end to the \u2018VIn\u2019 on the Arduino.\nRepeat the process with a ground (black, or whatever colour you have chosen) wire, connecting \u2018GND\u2019 on the power supply and Arduino.", "step_imgs": ["https://cdn.instructables.com/FMN/L3MS/JTOMWVRQ/FMNL3MSJTOMWVRQ.LARGE.jpg", "https://cdn.instructables.com/FZQ/SSE6/JTOMWVSB/FZQSSE6JTOMWVSB.LARGE.jpg"], "step_title": "Step 8: Connect the Arduino"}, {"step": 9, "steps_text": "Thread the LED strip\u2019s wires through the remaining empty hole in the box.\nStrip the LED strip\u2019s power and ground wires. Connect the power (red) wire to the power supply\u2019s \u20185V\u2019 connection point (the Arduino is already attached to this) and the ground (black) wire to the power supply \u2018GND\u2019 connection point (the Arduino is already attached to this, too).\nSolder the LED strip\u2019s signal wire to the digital pin 9 of the Arduino.", "step_imgs": [], "step_title": "Step 9: Connect LED Strip to Power Supply and Arduino"}, {"step": 10, "steps_text": "Thread the motion sensors\u2019 wires (9 in total) through the hole where the LED strip\u2019s wires are.\nSolder the three power wires to the +5V of the Arduino, the ground wires to the gnd of the Arduino and solder the individual signal wires to Arduino pins 10, 11 and 12.", "step_imgs": [], "step_title": "Step 10: Connect Motion Sensors to Arduino"}, {"step": 11, "steps_text": "Download the code below called \u2018motion_sensing_lights.ino\u2019. Then, using the Arduino software downloadable form here, upload the code to your Arduino module. If you are unsure about how to do this, check out here.\nThe code is pretty simple: it continuously checks if the motion sensors have outputted a signal and if so, starts a timer and turns on the led strip to glow up, stay on a minute and then glow down.", "step_imgs": [], "step_title": "Step 11: Programme the Arduino"}, {"step": 12, "steps_text": "Shut the control box - the only things outside it should be the LED strip and the AC plug.\nStick the box to the bottom of the bed in your chosen location - we did this using strong double sided tape.\nThen, attach the motion sensors to the bottom of the bed using double sided tape. The motion sensors should face outwards along the three sides of the bed which are not along the wall. Next, mount the LED strip around the perimeter of the bed.\nAlthough the LED strip has a sticky back, this is not strong enough to hold its weight. Therefore, we held it in place using plastic wire clips which we hammered into the bottom of the bed. Plug in and turn on the control box and turn the bed the right way up.", "step_imgs": ["https://cdn.instructables.com/FTX/TGM0/JTOMWZGD/FTXTGM0JTOMWZGD.LARGE.jpg", "https://cdn.instructables.com/FZV/3R0H/JTOMWZH2/FZV3R0HJTOMWZH2.LARGE.jpg"], "step_title": "Step 12: Put on Bed"}, {"step": 13, "steps_text": "Test out your motion-sensing underbed lighting. You can adjust the motion sensor sensitivity by putting a screwdriver through the top hole of the case and twisting the sensitivity resistor.", "step_imgs": ["https://cdn.instructables.com/F9I/FYAW/JTOMXO9V/F9IFYAWJTOMXO9V.LARGE.jpg"], "step_title": "Step 13: Adjust, Test and Admire"}, {"step": 14, "steps_text": "Using an ESP8266 module (Amazon) instead of the Arduino, it is possible to control the LED strip with your phone or with Alexa by linking it to the open source home automation platform Home Assistant. There\u2019s already been a great tutorial on how to do this, and you can find it here.", "step_imgs": ["https://cdn.instructables.com/FFY/0RMK/JTOMWZGC/FFY0RMKJTOMWZGC.LARGE.jpg"], "step_title": "Step 14: Taking It Further"}, {"step": 15, "steps_text": "This product already exists, and you can buy from amazon here. But where's the fun in that?!", "step_imgs": [], "step_title": "Step 15: If You Can't Be Bothered"}], "channel": "Arduino"}, {"category": "Technology", "description": "Everyone knows that time is both fleeting and limited. And yet we still forget this simple truth and continue to waste time on unimportant things.\nI created a watch that would vibrate every 5 minutes to constantly remind me to not waste precious time procrastinating. This watch is different from a traditional watch as it only informs the wearer on the passage of time instead of the current exact time.\nI now wear this watch all the time and it has improved my daily productivity. I hope that this instructable would also help you in making better use of your time.\nNote:\nThis instructable was inspired by the Vibrating Timekeeper instructable. I have improved upon the design to meet my specific needs for this project.", "title": "Vibrating Watch to Remind Wearer Not to Waste Time", "url": "https://www.instructables.com/id/Vibrating-Watch-to-Remind-Wearer-Not-to-Waste-Time/", "steps": [{"step": 1, "steps_text": "Here are the parts and tools that you'll be needing for this project. Some are optional and their use will be explained throughout this instructable.\nElectronic parts:\nATTiny85\nDisc vibrating motor (Or any kind of vibrating motor, look for low powered ones)\nCR2032 Battery (Or any kind of coin cell battery)\n1N4001 Diode (Or any other general purpose diode)\nPN2222A Transistor (Or any kind of general purpose NPN transistor)\n47 Ohm Resistor (1/4 watts)\n100 Ohm Resistor (Optional)\nMisc parts:\nCoin cell battery holder\nBreadboard\nPerfboard\nConnecting Wires\nSlide switch\nCrimp wire terminal (Optional but recommended)\n8 pin chip socket (Optional but recommended)\nTools:\nATTiny85 Programmer using Arduino (Or other programmers if you have them)\nMultitester\nWire stripper\nSoldering iron\nSoldering wire\nDouble sided tape", "step_imgs": ["https://cdn.instructables.com/FBQ/15WY/JTMSIV1O/FBQ15WYJTMSIV1O.LARGE.jpg"], "step_title": "Step 1: Prepare Parts and Tools"}, {"step": 2, "steps_text": "Build the circuit by following the diagrams and the images above. Take special note of the orientations otherwise the circuit might not work correctly. Be sure to check out the annotations on the image above for more information about specific details.\nOnce you finish building it, you would notice that nothing would happen. This is because the ATTiny85 has not been programmed yet. We will be dong this on the next step.\nTips for this step:\nI personally prefer cutting down wires so that they are flat on a breadboard. This makes the board look cleaner and easier to visually debug if there are any problems.\nNote:\nNote that on the picture of the breadboard I've built you may notice that the slide switch is missing. I forgot to add it when I took the picture. This is okay though as the circuit would still work without it.", "step_imgs": ["https://cdn.instructables.com/FC9/7006/JTENIBNN/FC97006JTENIBNN.LARGE.jpg", "https://cdn.instructables.com/FV5/M97C/JTMSIWE0/FV5M97CJTMSIWE0.LARGE.jpg", "https://cdn.instructables.com/FR5/XR2Z/JTIYFILQ/FR5XR2ZJTIYFILQ.LARGE.jpg"], "step_title": "Step 2: Build the Circuit on a Breadboard"}, {"step": 3, "steps_text": "Before the circuit could work we need to program the ATTIny85 using a programmer.\nIf you don't have a programmer yet you can easily make one by following one of these instructables: one is a breadboard version if you want to have a programmer quickly. The other one is in the form of an arduino shield which is more permanent for future use. Any of the two will work.\nCopy the code below and upload it using your programmer:\n#include \n#include \n#include \n#include \n\nconst byte motorPin = 0;\n\nvolatile unsigned long wdCounter = 0; // Volatile tells compiler to reload each time instead of optimizing\n\nunsigned long motorDuration = 500000;\nunsigned long waitDuration = 0;\nunsigned long wdCounterTarget = 75;\nunsigned long timeDelayStarted = 0;\n\nbool isInDelay = false;\n\nvoid setup () {\n pinMode ( motorPin, OUTPUT );\n\n ADCSRA = 0; // Turn off the ADC\n\n startMotorSequence(); // Run the motor once on startup\n sleepNow();\n}\n\nvoid loop () {\n if ( wdCounter == wdCounterTarget ) { // Check if counter has reached target.\n  wdCounter = 0;\n  timeDelayStarted = micros();\n  isInDelay = true; // Now in delay mode\n }\n\n // Continue to loop until enough time has passed to reach waitDuration\n if ( isInDelay\n    && micros() - timeDelayStarted >= waitDuration) {\n  startMotorSequence(); // Run the motor sequence\n  wdCounter = 0;\n  isInDelay = false; // End delay mode\n }\n\n if ( !isInDelay ) {\n  sleepNow();\n }\n}\n\nvoid startMotorSequence() {\n digitalWrite( motorPin, HIGH );\n _delay_us(motorDuration); // Blocking function delay\n digitalWrite ( motorPin, LOW );\n}\n\nvoid sleepNow () {\n set_sleep_mode ( SLEEP_MODE_PWR_DOWN ); // set sleep mode to Power Down. The most energy efficient setting.\n\n power_all_disable (); // Turn power off to TIMER 1, TIMER 2, and Serial Interface\n\n noInterrupts (); // Turn off interrupts as a precaution. Timed sequence follows\n resetWatchDog (); // Reset watchdog, making sure every flag is properly set\n sleep_enable (); // Allows the system to be commanded to sleep\n\n interrupts (); // Turn on interrupts. Guarantees next instruction is executed\n sleep_cpu (); // Goodnight, ATTiny85\n\n sleep_disable (); // Returns here after Watchdog ISR fires.\n power_all_enable (); // Turn on power to TIMER1, TIMER 2, and Serial Interface\n}\n\nvoid resetWatchDog () {\n MCUSR = 0; // Clear various \"reset\" flags\n WDTCR = bit ( WDCE ) | bit ( WDE ) | bit ( WDIF ); // Allow changes, disable reset, clear existing interrupt\n WDTCR = bit ( WDIE ) | 1 << WDP3 | 0 << WDP2 | 0 << WDP1 | 0 << WDP0; // 4s timeout\n\n wdt_reset (); // Reset the watchdog using the parameters\n}\n\nISR ( WDT_vect ) {\n wdt_disable(); // Disable the watchdog timer\n wdCounter++; // Increase the watchdog firing counter.\n}\nOnce the code is successfully upgraded, plug the ATTiny85 chip back on the breadboard. The vibration motor should start to vibrate for around 0.5 seconds. It would then count down for roughly 5 minutes and then vibrate again.\nTips for this step:\nIf there are uploading errors make sure to double check the connections of your programmer. To help with troubleshooting, just copy the error code from Arduino and search for the answers.\nIf there are any unexpected behaviors make sure that there were no changes to the code you downloaded.\nIf there are still problems, consider uploading a simple blink circuit just to test if your programmer is working as intended.\nIf the motor is not vibrating or it is vibrating continuously, make sure to double check your connections from the previous step. You can also try to cut off the power and turn it on back again using the slide switch to restart the program.", "step_imgs": ["https://cdn.instructables.com/FJ6/46G1/JTMSIXIC/FJ646G1JTMSIXIC.LARGE.jpg", "https://cdn.instructables.com/FZ0/T0YS/JTON1185/FZ0T0YSJTON1185.LARGE.jpg"], "step_title": "Step 3: Program the ATTiny85 With an Arduino"}, {"step": 4, "steps_text": "Find a watch case that will house your circuit. You need a lot of room as you'll be fitting all of the components in the breadboard in it except the wires. You can also 3D print your own case, if you prefer.\nOn my end, I used a broken kids watch that has a lot of room inside. I removed all the existing components, hollowed it out, and tried to estimate if the space is enough for everything to fit in it.\nTips for this step:\nTo help approximate if your circuit will fit the case, try and build the circuit found on the next step without soldering the components and then fitting the circuit inside.\nAt the very least, you'll need a size that would not be smaller than your CR2032 battery.", "step_imgs": ["https://cdn.instructables.com/FFP/6MD4/JTIYFMQO/FFP6MD4JTIYFMQO.LARGE.jpg"], "step_title": "Step 4: Get a Watch Case"}, {"step": 5, "steps_text": "Use a ruler to measure the dimensions of the available space inside your chosen case. Cut off a piece of perfboard based on these measurements.\nThe diagram/layout from the images above is the same circuit from that we did using the breadboard only made more compact. It has 10 holes horizontally and 6 holes vertically. This is the smallest version of this circuit that I can come up with. If this layout does not fit your chosen case then you may need to change the layout on your own, or find a bigger case.\nTips for this step:\nBend the legs of the components as seen in the images to keep them in place before you start soldering.\nIf the board is a tight fit sanding down the sides of the board with sandpaper is also an option.", "step_imgs": ["https://cdn.instructables.com/FGW/LUW5/JTMSJ0SQ/FGWLUW5JTMSJ0SQ.LARGE.jpg", "https://cdn.instructables.com/FHO/U8G1/JTMSJ0UO/FHOU8G1JTMSJ0UO.LARGE.jpg"], "step_title": "Step 5: Prepare the Perfboard Layout"}, {"step": 6, "steps_text": "Now it's time to start soldering. This should be straightforward provided that you follow the circuit diagram.\nHere's an instructable in case you don't know how to solder yet.\nNote:\nThe first image showing the circuit diagram above is using a top down view. Which means, if you'll be soldering the components from below, the orientation would be flipped as seen on the second image. It's easy to get confused!\nTips for this step:\nSolder the component in place first before cutting the legs off. This helps in keeping them in place while soldering\nMake sure to check the continuity of the connections with a multimeter as you go along.\nIf you don't want to use too much solder, you could use the legs of the components you recently cut off for straight lines as seen in the image above.", "step_imgs": ["https://cdn.instructables.com/F8F/3ZI6/JTMSJ1M5/F8F3ZI6JTMSJ1M5.LARGE.jpg", "https://cdn.instructables.com/FL7/810L/JTMSJ0UP/FL7810LJTMSJ0UP.LARGE.jpg", "https://cdn.instructables.com/FD0/RGEE/JTMSJ0UT/FD0RGEEJTMSJ0UT.LARGE.jpg"], "step_title": "Step 6: Solder the Components in Place"}, {"step": 7, "steps_text": "To be able to connect the battery with our circuit we first need to use a battery holder. We could use the battery holder we had when we did the circuit on a breadboard but that might not fit in your chosen case.\nOne solution is to attach the end of a wire to a crimp wire terminal as seen in the first image above. Make two of them and then have them in contact with the positive and negative sides of the battery and wrap them using an electrical tape.\nSolder the wires to the circuit and to the slide switch. Be sure to test out the circuit by triggering the slide switch. Just like last time, the vibrating motor should run for 0.5 seconds signifying that your connections are correct and working.\nTips for this step:\nUse a multimeter to check if the end of your wires is getting a voltage reading out of the battery.\nMake sure to double check that your contacts are firmly in place.\nNote:\nThe crimp wire terminals help in making the contact points larger and are easier to secure in place.\nIf you don't have crimp wire terminals, just stripping off the end of the wire and using that as contact would still work.\nYou may have noticed that the slide switch is on the negative wire of the battery. This would still work no matter if it is on the positive side or the negative side. I did the latter because it makes sense when placed inside my own watch case.", "step_imgs": ["https://cdn.instructables.com/FSP/G2E6/JTMSJ1O1/FSPG2E6JTMSJ1O1.LARGE.jpg", "https://cdn.instructables.com/F0M/ULCP/JTMSJ1OF/F0MULCPJTMSJ1OF.LARGE.jpg", "https://cdn.instructables.com/FKZ/0BHT/JTMSJ1OX/FKZ0BHTJTMSJ1OX.LARGE.jpg"], "step_title": "Step 7: Connect the Battery and the Switch"}, {"step": 8, "steps_text": "Test the circuit that you built to see if everything is working fine. Then carefully place your circuit to your chosen watch case, secure the components in place with double sided tape.\nCover it up, add a watch strap, put it on, and you are done!\nTips for this step:\nDon't forget to paint your watch case before you add your circuit. I chose color black because pink is not really my style.\nUse the thick and soft kind of sticky tape, especially for securing the sticky motor in place. I find that it's more able to withstand the vibrations and keep the motor in place.", "step_imgs": ["https://cdn.instructables.com/F9S/8ABE/JTMSJ1WG/F9S8ABEJTMSJ1WG.LARGE.jpg"], "step_title": "Step 8: Place the Circuit in the Case and Cover It Up"}, {"step": 9, "steps_text": "Here are some final notes about the project. It's quite a lot but are important if you want to know why I made certain decisions in this project. It also includes notes on how to modify and improve the circuit to your own preferences:\nThe code is optimized to use as little power as possible. More info on how I did it here.\nThe watch I'm currently wearing right now has been running for 2 weeks already (At 2019-03-26, I'll update this statement whenever I can). I am hoping that the watch will last for a minimum of 3 months.\nThe R1 100 ohm resistor is used to lower down the current passing through the vibrating motor. This makes the motor weaker but saves battery life. If you feel that the vibration is too weak while inside your chosen case, you can remove this resistor and replace it with a wire.\nI have mentioned in one of the steps that the delay between vibrations is \"roughly\" 5 minutes. This project relies on the ATTiny85's internal clock for timing which is not very accurate (Believe me, I tested it). Expect an offset of 100ms to 1s every 5 minutes but this will depend on the current temperature of the room and current voltage of the battery. Don't be bothered by this though. I found that accuracy does not matter too much. Remember, that this project tells us the passage of time, and not the current exact time. If it still bothers you, consider adding an external crystal to the circuit.\nThe 5 minute wait time can be changed by modifying the code. Only do this if you understand the code and you know what you are doing. To those confident enough, check out the variables waitDuration and wdCounterTarget, and also line 71 where the watchdog timeout is set.\nBe sure to check out the Github repository for the latest version of this code just in case there are updates or improvements.\nFinally, check out and follow the project page. I have a lot of improvements planned for this project like making the watch smaller using SMD components and adding an external crystal for more accurate timings. So keep an eye out for that.\nIf you have questions and comments feel free to leave a comment below!\nEnjoy your new watch and savor every precious second!", "step_imgs": ["https://cdn.instructables.com/FXK/AYEH/JTMSJ1VD/FXKAYEHJTMSJ1VD.LARGE.jpg", "https://cdn.instructables.com/F47/IMZF/JTON012H/F47IMZFJTON012H.LARGE.jpg"], "step_title": "Step 9: Final Notes"}], "channel": "Wearables"}, {"category": "Technology", "description": "It is always convenient to have a bright light while riding bicycle at night for clear vision and safety. It also caution others in dark places and avoid accidents. So in this instructable I will demonstrate how to build and install a 100 watt LED projector Headlight similar to ones that you find in Modern Motor cycles. I have installed this in my bicycle and have been using this for a couple of months now. And the best part is it is very easy to make and does not include any fancy tools.\nPlease watch the following video for easy understanding.", "title": "How to Make High Power LED Headlight for Bicycle", "url": "https://www.instructables.com/id/How-to-Make-High-Power-LED-Headlight-for-Bicycle/", "steps": [{"step": 1, "steps_text": "20 to 100 Watt LED Chip 12V\n60 degree LENS + Reflector\nHeat Sink 100x100mm\nLi-po battery 3s (drone Battery)\nSwitch\nXT 60 Connector\n2-Part Epoxy Glue (Araldite)\nWires- 1.5 sq.mm\nZip-Ties\nSoldering Kit(Iron,Flux,Solder,etc)\nBasic Tools (Drill,Nut-bolt,Screwdriver,Clamps,pliers, etc)\nHeat Sink Paste", "step_imgs": ["https://cdn.instructables.com/F42/6T1S/JTMSVJ5D/F426T1SJTMSVJ5D.LARGE.jpg", "https://cdn.instructables.com/FU8/BFC5/JTMSVJ64/FU8BFC5JTMSVJ64.LARGE.jpg", "https://cdn.instructables.com/FF5/EAY4/JTMSVJ50/FF5EAY4JTMSVJ50.LARGE.jpg", "https://cdn.instructables.com/FA3/Q8A3/JTMSVJ3J/FA3Q8A3JTMSVJ3J.LARGE.jpg", "https://cdn.instructables.com/FEZ/1MZV/JTMSVJ13/FEZ1MZVJTMSVJ13.LARGE.jpg", "https://cdn.instructables.com/F1F/K4J3/JTMSVJ1I/F1FK4J3JTMSVJ1I.LARGE.jpg", "https://cdn.instructables.com/FA4/Y2II/JTMSVJ3D/FA4Y2IIJTMSVJ3D.LARGE.jpg", "https://cdn.instructables.com/FT1/6EJS/JTMSVJ1X/FT16EJSJTMSVJ1X.LARGE.jpg", "https://cdn.instructables.com/F50/0OB8/JTMSVIZX/F500OB8JTMSVIZX.LARGE.jpg"], "step_title": "Step 1: List of Materials"}, {"step": 2, "steps_text": "Mark the appropriate place for the holes on the heat-sink and using a hand drill make holes. Apply heat sink paste and place the LED chip on the heat-sink.\nPrepare the Epoxy glue by mixing the 2 parts in 1:1 ratio. Using a tooth pick apply the glue mixture on the reflector, LED and LENS.\nPlace the Reflector and LENS on the LED carefully and let it dry overnight.(Cure time depends on type of epoxy)\nThen cut holes to fit the switch. The position of the switch depends on your preference.", "step_imgs": ["https://cdn.instructables.com/F84/9DVS/JTMSVFMG/F849DVSJTMSVFMG.LARGE.jpg", "https://cdn.instructables.com/FQK/NADI/JTMSVFLC/FQKNADIJTMSVFLC.LARGE.jpg", "https://cdn.instructables.com/FAN/PF0K/JTMSVC7R/FANPF0KJTMSVC7R.LARGE.jpg", "https://cdn.instructables.com/FV5/LCUX/JTMSVC4A/FV5LCUXJTMSVC4A.LARGE.jpg", "https://cdn.instructables.com/FVD/WP3N/JTMSVC7Q/FVDWP3NJTMSVC7Q.LARGE.jpg", "https://cdn.instructables.com/FJS/J97R/JTMSVC7T/FJSJ97RJTMSVC7T.LARGE.jpg", "https://cdn.instructables.com/F00/CK86/JTMSVC7S/F00CK86JTMSVC7S.LARGE.jpg", "https://cdn.instructables.com/FBI/3EOP/JTMSVFQ3/FBI3EOPJTMSVFQ3.LARGE.jpg", "https://cdn.instructables.com/FV7/69P8/JTMSVFNP/FV769P8JTMSVFNP.LARGE.jpg", "https://cdn.instructables.com/F5L/RNXL/JTMSVK2S/F5LRNXLJTMSVK2S.LARGE.jpg", "https://cdn.instructables.com/FYL/GQ3F/JTMSVK2T/FYLGQ3FJTMSVK2T.LARGE.jpg"], "step_title": "Step 2: Heat-sink and Fitting the LENS"}, {"step": 3, "steps_text": "Apply Flux to ends of the wires and tin the ends using the soldering iron. Follow the circuit diagram for connections. The polarity of the LED is important.\nMake sure to insulate all the connections using insulation tape or heat-shrink tube.\nNote: Do not short circuit the Battery which is very Dangerous\nConnect the Bullet connectors or XT60 connectors to the LED terminals and connect the Battery.\nSafety Equipment: Connect a 10A fuse in Series with the battery and connect the Ground of battery to the Body of bicycle to avoid any electrostatic shock. Also a Battery Management System(BMS) can be used with the Battery for protection.", "step_imgs": ["https://cdn.instructables.com/FC1/V5VY/JTMSVGMR/FC1V5VYJTMSVGMR.LARGE.jpg", "https://cdn.instructables.com/FFV/SHRO/JTMSVHHM/FFVSHROJTMSVHHM.LARGE.jpg", "https://cdn.instructables.com/FCC/1QFW/JTMSVHHY/FCC1QFWJTMSVHHY.LARGE.jpg", "https://cdn.instructables.com/FJG/CEZE/JTMSVHHX/FJGCEZEJTMSVHHX.LARGE.jpg", "https://cdn.instructables.com/F2C/083O/JTMSVHHS/F2C083OJTMSVHHS.LARGE.jpg", "https://cdn.instructables.com/FW7/QBS8/JTMSVHHO/FW7QBS8JTMSVHHO.LARGE.jpg", "https://cdn.instructables.com/FJL/8YQE/JTMSVHHP/FJL8YQEJTMSVHHP.LARGE.jpg", "https://cdn.instructables.com/FOL/PEGA/JTMSVGJG/FOLPEGAJTMSVGJG.LARGE.jpg", "https://cdn.instructables.com/FDP/3RVB/JTMSVHHN/FDP3RVBJTMSVHHN.LARGE.jpg", "https://cdn.instructables.com/FW9/AH5M/JTMSVI01/FW9AH5MJTMSVI01.LARGE.jpg", "https://cdn.instructables.com/F4N/3OOZ/JTMSVGKK/F4N3OOZJTMSVGKK.LARGE.jpg", "https://cdn.instructables.com/FOL/Z1FG/JTMSVGNX/FOLZ1FGJTMSVGNX.LARGE.jpg"], "step_title": "Step 3: Electrical Connections"}, {"step": 4, "steps_text": "Use a small clamp and nut-bolt to fit the LED-Assembly on the Bicycle. The battery can be placed under the seat but i chose to place it on the frame. Use Zip-ties to hold all the wires and batteries in place. You might want to place the switch on the handle for easy access.\nIt is important to have sufficient size heat-sink for cooling the LED.A fan can also be installed for better performance. Also since the LED is high power the battery didn't last long, so it is better to have 2 batteries or use a smaller wattage LED as i did later on. So I later installed a 50 watt led.\nTherefore this was a easy build and took me about 2 hours to complete. Please feel free to leave a comment below if you have any suggestions or queries.\nThank you\nHS Sandesh", "step_imgs": ["https://cdn.instructables.com/FI2/GHPD/JTMSWMF6/FI2GHPDJTMSWMF6.LARGE.jpg", "https://cdn.instructables.com/F8N/15X7/JTOMWNY7/F8N15X7JTOMWNY7.LARGE.jpg", "https://cdn.instructables.com/FIR/MTHK/JTMSVJWC/FIRMTHKJTMSVJWC.LARGE.jpg", "https://cdn.instructables.com/FST/7C8A/JTMSVJV8/FST7C8AJTMSVJV8.LARGE.jpg", "https://cdn.instructables.com/F8T/N6EG/JTMSVJVZ/F8TN6EGJTMSVJVZ.LARGE.jpg", "https://cdn.instructables.com/F2H/NW5Z/JTMSWMFY/F2HNW5ZJTMSWMFY.LARGE.jpg", "https://cdn.instructables.com/FBO/X5XO/JTMSVJX3/FBOX5XOJTMSVJX3.LARGE.jpg", "https://cdn.instructables.com/FV8/5JKL/JTMSWMF9/FV85JKLJTMSWMF9.LARGE.jpg"], "step_title": "Step 4: Install on the Bicycle and Testing"}], "channel": "LEDs"}, {"category": "Technology", "description": "I used to have these kind of four round pipe metal speaker stands and i really loved the design. But when i was moving to different place they got \"magically\" lost. I recently got repaired my old hifi and wanted same speaker stands but couldn't get them. So i decided to make some, hoping to be as similar as i remember the original.\nNo welding, just ordered pipes and metal plates. There is metal screw inside, attaching top plate to bottom and that's it. I used CNC to help myself with the shape but, paper print would do similar job, maybe even better.\nSo lets start", "title": "Metal Speakes Stands, No Welding", "url": "https://www.instructables.com/id/Metal-Speakes-Stands-No-Welding/", "steps": [{"step": 1, "steps_text": "8x Pipes\nI ordered 750mm long 60mm wide.\n2xPlates\ntop plate is 140x140x4mm\n2xPlates\nbottom 250x250x4mm\n16x coupling nuts M8\n16x flat head screws M8\n16x normal M8 nut\n8x screw rod 8mm\nYou might need some other screws and nuts if u want them to be used instead of speaker spikes or you can buy them. If you want similar setup as mine you will be able to see what i used there easily from images.\nThe plate design with hole positions atc. are in dxf file attached.\nYou will also need to make little wooden circles like u see on the image with hole in the middle. These will hold pipes centered. I used cnc to make them but it is doable using saw or circular cutter for your drill. Be CAREFUL diameter of these disks should be little less as inside diameter of your pipe which may vary depending on pipe wall thickness so it might be different as in plans.\nNote: Mine are not circles they have little four cuts from sides, that is only that there are holding tabs when i was making them on cnc and if the tabs are not on outside diameter then i dont need to cut them carefully as outside diameter is clean.", "step_imgs": ["https://cdn.instructables.com/F8Z/NTU5/JTMSK337/F8ZNTU5JTMSK337.LARGE.jpg"], "step_title": "Step 1: Material"}, {"step": 2, "steps_text": "For marking the shape i used my cnc and cut wooden parts but printout redrawn to the metal plates would do same job.\nSo cutting the shape is done on grinder. Rounding corners is the main job.\nIn My case i attached the metal plate to the wooden piece, drilled holes and attached them together temporarily with screws so i can grind the edges to same shape as wood.\nThen i made all holes bigger, exactly 8mm, that was my plan for the pipe holding screws and the speaker spike holes (on outside of the plates) the speaker spike holes... you might want them smaller if u going to buy spikes, possibly M6.\nI used sand paper to finish the details on rounded corners and then tapered the edges of holes.", "step_imgs": ["https://cdn.instructables.com/FM2/9G7E/JTMSK54V/FM29G7EJTMSK54V.LARGE.jpg", "https://cdn.instructables.com/F58/08WC/JTMSK56I/F5808WCJTMSK56I.LARGE.jpg", "https://cdn.instructables.com/FKI/MQUX/JTMSK59M/FKIMQUXJTMSK59M.LARGE.jpg", "https://cdn.instructables.com/F6N/SI5O/JTMSK5BC/F6NSI5OJTMSK5BC.LARGE.jpg", "https://cdn.instructables.com/FF9/FH4J/JTMSK6CQ/FF9FH4JJTMSK6CQ.LARGE.jpg", "https://cdn.instructables.com/FE7/TA02/JTMSK5BN/FE7TA02JTMSK5BN.LARGE.jpg", "https://cdn.instructables.com/F9G/X7GD/JTMSK5ER/F9GX7GDJTMSK5ER.LARGE.jpg"], "step_title": "Step 2: Making Top and Bottom Plates1"}, {"step": 3, "steps_text": "The top and bottom center screws are the flat head so we need to flush them with the metal surface. So we need countersink bit and make holes like on images. On all plates 4 center holes.", "step_imgs": ["https://cdn.instructables.com/F5E/9IG1/JTMSK9KO/F5E9IG1JTMSK9KO.LARGE.jpg", "https://cdn.instructables.com/F62/E9WD/JTMSK9LT/F62E9WDJTMSK9LT.LARGE.jpg", "https://cdn.instructables.com/FCW/QBUG/JTMSK9MH/FCWQBUGJTMSK9MH.LARGE.jpg"], "step_title": "Step 3: Making Top and Bottom Plates2"}, {"step": 4, "steps_text": "So this is where the magic happens.\nFirst image shows the finished screws\nSecond how the flat head screws will be attached to this center threaded rod and\nthe last image shows how they will hold the metal pipes in place.\nnice, isn't it?\nso how do we do this, in next steps", "step_imgs": ["https://cdn.instructables.com/F1R/6GHG/JTMSK9SE/F1R6GHGJTMSK9SE.LARGE.jpg", "https://cdn.instructables.com/FYF/JZTH/JTMSK9T0/FYFJZTHJTMSK9T0.LARGE.jpg", "https://cdn.instructables.com/FNS/SAUD/JTMSK9WG/FNSSAUDJTMSK9WG.LARGE.jpg"], "step_title": "Step 4: Center Rods 1"}, {"step": 5, "steps_text": "First we make little setup like on image.\nThe wooden circle is held from one side by normal screw and we keep maybe 5mm of thread on the other side so we can attach the coupling nut. 5mm because we want as much space for the flat head nut so we do not run out of thread when we will be tightening them up.\nlast image just shows where the flat head screw will go", "step_imgs": ["https://cdn.instructables.com/F0M/LQMU/JTMSKAWX/F0MLQMUJTMSKAWX.LARGE.jpg", "https://cdn.instructables.com/FXY/OS9I/JTMSKAZV/FXYOS9IJTMSKAZV.LARGE.jpg", "https://cdn.instructables.com/FK9/EQJM/JTMSKB0H/FK9EQJMJTMSKB0H.LARGE.jpg"], "step_title": "Step 5: Center Rods 2"}, {"step": 6, "steps_text": "The bottom plate is put on flat surface and the center road is fully screwed down to one of the bottom screws.\nThen i just place two pipes and the top plate near to this rod, let one screw hanging trough hole from top plate and positioned the wooden disk to place, so i could see the flat head screw will have space to go in to the nut.\nthen i cut the threaded rod 5mm from the wooden disk.\nSo this should give you the correct length.", "step_imgs": ["https://cdn.instructables.com/FID/HSX3/JTMSKBP9/FIDHSX3JTMSKBP9.LARGE.jpg", "https://cdn.instructables.com/F8I/6ES7/JTMSKBPC/F8I6ES7JTMSKBPC.LARGE.jpg", "https://cdn.instructables.com/FIM/1TAY/JTMSKCBA/FIM1TAYJTMSKCBA.LARGE.jpg", "https://cdn.instructables.com/FVK/MDJN/JTMSKCDB/FVKMDJNJTMSKCDB.LARGE.jpg"], "step_title": "Step 6: Center Rods 3"}, {"step": 7, "steps_text": "Now we cut all the rods to same length and attach the wooden disks.\nThen we screw fully just by hand the rods to the bottom plate and slide the pipes on.", "step_imgs": ["https://cdn.instructables.com/F5B/6FIE/JTMSKCMT/F5B6FIEJTMSKCMT.LARGE.jpg", "https://cdn.instructables.com/F6E/LOXX/JTMSKCNR/F6ELOXXJTMSKCNR.LARGE.jpg", "https://cdn.instructables.com/FOC/SELP/JTMSKCMV/FOCSELPJTMSKCMV.LARGE.jpg", "https://cdn.instructables.com/FUS/VWL6/JTMSKCNL/FUSVWL6JTMSKCNL.LARGE.jpg", "https://cdn.instructables.com/FYE/0PN7/JTMSKCNQ/FYE0PN7JTMSKCNQ.LARGE.jpg"], "step_title": "Step 7: Center Rods 4"}, {"step": 8, "steps_text": "Now we put the top plate on the top of the pipes and add all four screws, tighten them up and also check if top and bottom plates are aligned as my pipes weren't cut exactly and there was bit of angle on some cuts but when during tightening you keep top and bottom plate aligned it will stay like that.\ni turned them up side down and tighten the bottom screws too.\nAnd that's it! now buy or make some speaker spikes.", "step_imgs": ["https://cdn.instructables.com/FQ2/U5OA/JTMSKDUW/FQ2U5OAJTMSKDUW.LARGE.jpg", "https://cdn.instructables.com/FWJ/436V/JTMSKDUZ/FWJ436VJTMSKDUZ.LARGE.jpg", "https://cdn.instructables.com/F4V/AJKS/JTMSKDV7/F4VAJKSJTMSKDV7.LARGE.jpg", "https://cdn.instructables.com/F6Q/VPEU/JTMSKDV5/F6QVPEUJTMSKDV5.LARGE.jpg"], "step_title": "Step 8: Center Rods 4"}, {"step": 9, "steps_text": "I didnt buy the spikes.... yet... maybe i will not, we will see how i will feel.\nSo this is what i use now, i bought some thin nuts, M8 screws, coupling nuts and the whatever it is called the thing you attach on bottom of chairs so you don't scratch the floor.\nAnd the rest is pretty much self explanatory from images. I just stacked them in whatever manner i thought will look nice.\nHope you enjoyed this instructable", "step_imgs": ["https://cdn.instructables.com/FKS/V442/JTMSKH8I/FKSV442JTMSKH8I.LARGE.jpg", "https://cdn.instructables.com/FCE/LUMU/JTMSKFKQ/FCELUMUJTMSKFKQ.LARGE.jpg", "https://cdn.instructables.com/FKK/2I1K/JTMSKFGZ/FKK2I1KJTMSKFGZ.LARGE.jpg", "https://cdn.instructables.com/FEX/ETFP/JTMSKF0I/FEXETFPJTMSKF0I.LARGE.jpg", "https://cdn.instructables.com/F20/G6UM/JTMSKF6M/F20G6UMJTMSKF6M.LARGE.jpg", "https://cdn.instructables.com/F6M/L3TQ/JTMSKFAW/F6ML3TQJTMSKFAW.LARGE.jpg", "https://cdn.instructables.com/F7Q/T7IJ/JTMSKFKO/F7QT7IJJTMSKFKO.LARGE.jpg", "https://cdn.instructables.com/FBV/MBJ7/JTMSKH8O/FBVMBJ7JTMSKH8O.LARGE.jpg"], "step_title": "Step 9: Speaker Spikes"}], "channel": "Speakers"}, {"category": "Technology", "description": "One of my friends came to me with his DJI a spark drone and said it was not working as it was supposed to be so after powering it on one of the motors started to heat up an LED won't blink and after connecting the drone to DJI app it says cannot take off and when I tried to take off it says ESC status error which means ESC is broken so in this video tutorial I will show you how you can fix this ESC status error only for 14 US dollars so let's fix it this!", "title": "How to Fix DJI Spark ESC Status Error! | Replacement", "url": "https://www.instructables.com/id/How-to-Fix-DJI-Spark-ESC-Status-Error-Replacement/", "steps": [{"step": 1, "steps_text": "You can watch the Video Tutorial if you don't want to read all the stuff", "step_imgs": [], "step_title": "Step 1: Watch the Video!"}, {"step": 2, "steps_text": "The first step before performing any kind of repair is powering off the drone and for that click and hold the power button of DJI spark and then we need to disconnect the battery which is very straight forward.", "step_imgs": ["https://cdn.instructables.com/F4S/IJBJ/JTMSZWP1/F4SIJBJJTMSZWP1.LARGE.jpg", "https://cdn.instructables.com/F7G/Q75Y/JTMSZWLN/F7GQ75YJTMSZWLN.LARGE.jpg"], "step_title": "Step 2: Disconnect the Battery!"}, {"step": 3, "steps_text": "Since we only have a problem with our ESC we don't need to open the entire drone to reveal the ESC inside take a flat head screwdriver and open this lid be careful and don't use much pressure.\nESC is held in its place with two screws which are normal Phillips head while removing the screws make sure not to use an oversized screwdriver else it will damage the screw head after removing the bracket which held the ESC I reconnected the battery and power the drone an entire ESC started to heat up now instead of wasting time trying to find which component of ESC was broken I went on ebay and found this replacement ESC which was only 14 US dollars", "step_imgs": ["https://cdn.instructables.com/FL0/KGT1/JTMSZXJK/FL0KGT1JTMSZXJK.LARGE.jpg", "https://cdn.instructables.com/FF0/J13C/JTMSZX71/FF0J13CJTMSZX71.LARGE.jpg", "https://cdn.instructables.com/F5M/460G/JTMSZX91/F5M460GJTMSZX91.LARGE.jpg", "https://cdn.instructables.com/FDV/968C/JTMSZXB1/FDV968CJTMSZXB1.LARGE.jpg", "https://cdn.instructables.com/FLQ/G0AR/JTMSZXEP/FLQG0ARJTMSZXEP.LARGE.jpg", "https://cdn.instructables.com/FHF/PLQN/JTMSZXH4/FHFPLQNJTMSZXH4.LARGE.jpg"], "step_title": "Step 3: Get to the ESC!"}, {"step": 4, "steps_text": "First I used my soldering iron to heat up the solder and then used a soldering wick to remove all the excess\nsolder and disconnected the wires from the ESC\nOnce old ESC was removed I soldered the new one for that I highly recommend using a helping hand and a tweezer as it is not possible for one person to do this job", "step_imgs": ["https://cdn.instructables.com/FAI/K482/JTMSZYCJ/FAIK482JTMSZYCJ.LARGE.jpg", "https://cdn.instructables.com/FFE/JFHK/JTMSZYGL/FFEJFHKJTMSZYGL.LARGE.jpg", "https://cdn.instructables.com/F9E/PASN/JTMSZYJN/F9EPASNJTMSZYJN.LARGE.jpg", "https://cdn.instructables.com/F14/RI34/JTMSZY9P/F14RI34JTMSZY9P.LARGE.jpg", "https://cdn.instructables.com/FRG/3YQ5/JTMSZYAK/FRG3YQ5JTMSZYAK.LARGE.jpg", "https://cdn.instructables.com/FN1/IWM2/JTMSZYAL/FN1IWM2JTMSZYAL.LARGE.jpg", "https://cdn.instructables.com/FUY/IKZ6/JTMSZYER/FUYIKZ6JTMSZYER.LARGE.jpg"], "step_title": "Step 4: Desoldering and Replacing the ESC!"}, {"step": 5, "steps_text": "Once ESC was replaced before putting everything back together I tested the drone by powering it on and all the LEDs this time turned on as it was supposed to be just to make sure I tried to fly this drone inside and it worked flawlessly but I don't recommend flying a drone inside the house as it can be dangerous and you can easily crash it after the test I powered of the drone remove the battery put everything back together and this drone was fixed so why not let's take it outside and test it", "step_imgs": ["https://cdn.instructables.com/F99/1VHO/JTMSZZ82/F991VHOJTMSZZ82.LARGE.jpg", "https://cdn.instructables.com/F7E/9B4H/JTMSZZ3D/F7E9B4HJTMSZZ3D.LARGE.jpg", "https://cdn.instructables.com/F4D/5ISM/JTMSZZ6E/F4D5ISMJTMSZZ6E.LARGE.jpg", "https://cdn.instructables.com/FAN/7ME8/JTMSZZAF/FAN7ME8JTMSZZAF.LARGE.jpg"], "step_title": "Step 5: Testing!"}, {"step": 6, "steps_text": "So that's How you can fix and DJI Spark ESC status error!\nIf you like my work\nFeel free to check out my YouTube channel for more awesome stuff: https://www.youtube.com/c/Nematics_lab\nYou can also follow me on Facebook, Twitter etc for upcoming projects\nhttps://www.facebook.com/NematicsLab/\nhttps://www.instagram.com/nematic_yt/\nhttps://twitter.com/Nematic_YT", "step_imgs": ["https://cdn.instructables.com/FGU/KYLY/JTMT00D7/FGUKYLYJTMT00D7.LARGE.jpg"], "step_title": "Step 6: Done!"}], "channel": "Electronics"}, {"category": "Technology", "description": "I've never had a dedicated shop space.\nAlso, my projects are rarely on a very large scale.\n\nThat's why I love small and compact things: they don't take much space and can be stowed away when not in use. The same goes for my tools.\nI've wanted a circular saw for a while. But all the standard offerings are large and frankly they are overkill for my purposes.\n\nSmall (cordless) saws are perfect for hobby grade use and occasional projects, and they are really cute.\nThey were popular like 10-20 years ago, but today not as much (certainly not on a budget).\nThe latter gives us an opportunity to make a modern version with a tiny investment.\nMaking it Lithium powered and charged via USB makes it the perfect choice for a small scale DIYer like myself.\n\nDo you want one? Follow along!\nAnd if you liked this instructable, consider voting for it in the Build a Tool Contest. Thank you!", "title": "Perfect Compact Circular Saw From a Dinosaur", "url": "https://www.instructables.com/id/Perfect-Compact-Circular-Saw-From-a-Dinosaur/", "steps": [{"step": 1, "steps_text": "This particular tool comes in two flavors:\n1. Craftsman model 900.112650\n2. Black&Decker VP600\n\nIt's the same saw just different colors, you can get either.\nIt uses a 3 3/8\" blade and supposed to be powered with 7.2V (2x3.6V VersaPaks) - an ancient NiCd batteries.\n\nYou can find tons of listings on ebay, here are several examples:\nBlack&Decker\nCraftsman\n\nMine was 6$ w/o shipping, so it's very cost effective.\nMine came in descent shape, but there may be variations.\nAlso, you might have one laying around and collecting dust, in this case it's free.\n**Note: There are other tools which use 2 VersaPak sticks, this instructable will also apply there.", "step_imgs": ["https://cdn.instructables.com/F5R/LYI5/JTENJV37/F5RLYI5JTENJV37.LARGE.jpg", "https://cdn.instructables.com/FYF/MSM6/JTENJV4O/FYFMSM6JTENJV4O.LARGE.jpg", "https://cdn.instructables.com/FLZ/3UBC/JTENJVC1/FLZ3UBCJTENJVC1.LARGE.jpg", "https://cdn.instructables.com/FC9/DTJL/JTENJVLQ/FC9DTJLJTENJVLQ.LARGE.jpg", "https://cdn.instructables.com/F19/7YSM/JTENJVZ9/F197YSMJTENJVZ9.LARGE.jpg", "https://cdn.instructables.com/FCI/HWH2/JTENJW1J/FCIHWH2JTENJW1J.LARGE.jpg", "https://cdn.instructables.com/F2Z/CWO5/JTENJW5T/F2ZCWO5JTENJW5T.LARGE.jpg"], "step_title": "Step 1: Getting Your Saw"}, {"step": 2, "steps_text": "1. The saw :)\n2. Two 18650 Lithium Ion cells. Something like this, or this.\n3. 2s USB charger, like this one. I used it in this build, and it works surprisingly well.\n4. 2s bms (optional). I used this one, but it's not recommended (more on this later)\n5. Female charging jack, here or here.\nSome loose wiring.\nAccess to 3d printer.\nT10 screwdriver (for disassembly)\nHot glue gun.\nSoldering iron.\nHand tools.", "step_imgs": [], "step_title": "Step 2: What You'll Need"}, {"step": 3, "steps_text": "First thing first: Take the blade off! (seriously do it) it will be much safer this way.\n\nKeep the two washers and the blade retainer bolt somewhere safe. The bolt is left threaded and can't be replaced easily once lost.\n\n1. Push out the two c-pins that hold the base plate to the body (one is longer). Wide enough screwdriver and light hammer taps will do the trick.\n2. Unscrew 8 T10 bolts that hold two case pieces together.\n\nThere isn't much to do inside, just clean the dust/dirt from years of storage.\nMake sure the on/off unit is functional.", "step_imgs": ["https://cdn.instructables.com/FW9/SL75/JTENJWAS/FW9SL75JTENJWAS.LARGE.jpg", "https://cdn.instructables.com/FF2/MLVT/JTENJWCY/FF2MLVTJTENJWCY.LARGE.jpg", "https://cdn.instructables.com/FDZ/VTX3/JTENJWF7/FDZVTX3JTENJWF7.LARGE.jpg", "https://cdn.instructables.com/FG8/WM00/JTENJWGO/FG8WM00JTENJWGO.LARGE.jpg", "https://cdn.instructables.com/FAE/W1G5/JTENJWIU/FAEW1G5JTENJWIU.LARGE.jpg", "https://cdn.instructables.com/FGG/5GQC/JTENJWO2/FGG5GQCJTENJWO2.LARGE.jpg", "https://cdn.instructables.com/F24/P8HC/JTENJX0R/F24P8HCJTENJX0R.LARGE.jpg"], "step_title": "Step 3: Open It"}, {"step": 4, "steps_text": "You can find the .stl files here - Thing: 3512505\ncap1.stl is required\ncap2.stl gives it a little more bling :) and it's optional.\n\nThe lithium batteries will be placed in the same compartment as the old ones.\nBut they are smaller in diameter, so an adapter is needed.\nThe locations for lithium cells are not centered, this is done on purpose.", "step_imgs": ["https://cdn.instructables.com/FDV/XFG1/JTENJX1K/FDVXFG1JTENJX1K.LARGE.jpg", "https://cdn.instructables.com/FY5/13HO/JTENJX32/FY513HOJTENJX32.LARGE.jpg", "https://cdn.instructables.com/F9J/3FFE/JTENJX5S/F9J3FFEJTENJX5S.LARGE.jpg", "https://cdn.instructables.com/FLH/NXMM/JTENJX88/FLHNXMMJTENJX88.LARGE.jpg"], "step_title": "Step 4: Print the Cap(s)"}, {"step": 5, "steps_text": "It's time to make the juice unit that will drive the saw into the future.\nTake your female charging port, solder wires and secure it in place, see pic. Route the wires out.The nut is a bit challenging to operate, but it's manageable and you can add hot glue for final fix.\nSolder pieces of wire to the batteries. One cell to the positive side, one cell to the negative side.\nPush these in the 3d printed adapter with the wired ends in. There is a channel to route the wires in between the cells.Secure with hot glue.\nThese two leads come together to the BM pad on the BMS unit.\nSecure the BMS unit to one of the cells with hot glue.\nRun the other ends of the batteries to the B+/- pads.\n\n**Side note about this BMS unit: Ideally charging leads and those that go to the motor should be connected to +/-P pads on the unit. However, this one is probably faulty (for me or the basic model). So I ended up connecting everything to +/-B pads. Effectively this cancels the functionality of the BMS - so it's entirely optional.\n\n***Please let me know if there is a 2s BMS unit that worked for you. Thanks!", "step_imgs": ["https://cdn.instructables.com/FBB/D2YU/JTENJX9W/FBBD2YUJTENJX9W.LARGE.jpg", "https://cdn.instructables.com/F2M/ZFHK/JTENJXCV/F2MZFHKJTENJXCV.LARGE.jpg", "https://cdn.instructables.com/FDB/OQUE/JTENJXVD/FDBOQUEJTENJXVD.LARGE.jpg", "https://cdn.instructables.com/FAA/K46F/JTENJXQL/FAAK46FJTENJXQL.LARGE.jpg", "https://cdn.instructables.com/FTK/GC0S/JTENJY1J/FTKGC0SJTENJY1J.LARGE.jpg", "https://cdn.instructables.com/FYP/K6CM/JTENJXLT/FYPK6CMJTENJXLT.LARGE.jpg"], "step_title": "Step 5: Make the Power Unit"}, {"step": 6, "steps_text": "Take the charger unit and snip off the black connectors.\n\nI've found a piece of power cord with correct plug, you'll probably have something like this laying around.\nIf not, get something like this.\n\nSolder the leads to appropriate pads.\nThen put some hot glue on the interface between the cord and the charger.\n\nHeat shrink it all, you're done.\n\nFor heat shrinks, various sizes, just get this. You'll thank me later.\nIt's a good idea to charge your newly assembled unit and check that everything works.", "step_imgs": ["https://cdn.instructables.com/FEK/PONR/JTENJY7P/FEKPONRJTENJY7P.LARGE.jpg", "https://cdn.instructables.com/FNH/ZYHW/JTENJYKN/FNHZYHWJTENJYKN.LARGE.jpg", "https://cdn.instructables.com/FUM/13J4/JTENJYIH/FUM13J4JTENJYIH.LARGE.jpg", "https://cdn.instructables.com/FO4/KT32/JTENJYMC/FO4KT32JTENJYMC.LARGE.jpg", "https://cdn.instructables.com/FYN/F0BJ/JTENJYRO/FYNF0BJJTENJYRO.LARGE.jpg", "https://cdn.instructables.com/FD5/9QJF/JTENJYXZ/FD59QJFJTENJYXZ.LARGE.jpg"], "step_title": "Step 6: Make the Charger"}, {"step": 7, "steps_text": "As long as the unit is open, we might just go ahead and give the gears a treat.\n\nThere are two stages to the gearbox. Each one is enclosed in separate compartment and held by it's own bolts.\nOpen them up and grease the gears with generous amount.", "step_imgs": ["https://cdn.instructables.com/FVI/T9SZ/JTENJZ0E/FVIT9SZJTENJZ0E.LARGE.jpg", "https://cdn.instructables.com/FF9/XO40/JTENJZ1E/FF9XO40JTENJZ1E.LARGE.jpg", "https://cdn.instructables.com/F77/SV2T/JTENJZ2E/F77SV2TJTENJZ2E.LARGE.jpg", "https://cdn.instructables.com/F2B/8GUB/JTENJZ7W/F2B8GUBJTENJZ7W.LARGE.jpg"], "step_title": "Step 7: Grease It (if You Are Already Here)"}, {"step": 8, "steps_text": "Take your power assembly and put it in the case where it should be.\nThen take the output wires and solder them to the contact leafs inside the saw\n\nPositive goes to white and negative to the black.\nPut several blubs of hot glue to secure it in place\nClose it and you are done with the hard stuff.\n\nNow, you can add the \"vanity plate\" to the end. Just for fun.\nAfter all, it's not an ordinary saw now.", "step_imgs": ["https://cdn.instructables.com/FMR/B84H/JTENJZLX/FMRB84HJTENJZLX.LARGE.jpg", "https://cdn.instructables.com/FT6/0BSC/JTENJZOD/FT60BSCJTENJZOD.LARGE.jpg", "https://cdn.instructables.com/F5W/BSZW/JTENJZZO/F5WBSZWJTENJZZO.LARGE.jpg", "https://cdn.instructables.com/FH3/ZFY9/JTENK04R/FH3ZFY9JTENK04R.LARGE.jpg"], "step_title": "Step 8: Wire It Up"}, {"step": 9, "steps_text": "Depending on the condition of your plate, you might want to get it clean.\nI cleaned the rust with dremel tool and these wire heads.\nThen cleaned it with alcohol and sprayed with black paint.\n\nTo place it back, push it in and re-insert the c-pins\nYou are done.\n\nNow you can use your saw with the original blade.\nHowever, to get better results and cleaner cuts you can get much better one.\nI've got this one, and it's definitely worth the 6$.\n\nEnjoy,\nDani\n\nIf you liked this instructable, consider voting for it in the Build a Tool Contest. Thank you!", "step_imgs": ["https://cdn.instructables.com/F8N/VAQH/JTENK09C/F8NVAQHJTENK09C.LARGE.jpg", "https://cdn.instructables.com/FBS/VBXZ/JTENK0FO/FBSVBXZJTENK0FO.LARGE.jpg", "https://cdn.instructables.com/FGG/0JBC/JTENK0GQ/FGG0JBCJTENK0GQ.LARGE.jpg", "https://cdn.instructables.com/F9Y/63QQ/JTENK0LI/F9Y63QQJTENK0LI.LARGE.jpg", "https://cdn.instructables.com/F0G/V87J/JTENK0QY/F0GV87JJTENK0QY.LARGE.jpg", "https://cdn.instructables.com/FTB/49Y0/JTENK0VQ/FTB49Y0JTENK0VQ.LARGE.jpg", "https://cdn.instructables.com/FK6/3MSU/JTENK162/FK63MSUJTENK162.LARGE.jpg", "https://cdn.instructables.com/FVU/PJ4S/JTENK10K/FVUPJ4SJTENK10K.LARGE.jpg", "https://cdn.instructables.com/FWS/QOEF/JTENK1AN/FWSQOEFJTENK1AN.LARGE.jpg"], "step_title": "Step 9: Put the Plate Back & Optional New Blade"}], "channel": "Tools"}, {"category": "Technology", "description": "This is not your another Nixie clock, it is quite different from all that being posted on instructables, both visually \u2013 no steampunk, please, electronically \u2013 no dreaded SN74141, shift registers or other ancient ICs. And even more, full source code is provided and it is based on BASIC programming language!\nBelow you can read a little intro about this clock, how I came to this idea, how parts were sourced and so on. If you just want to build it, you can safely skip this and go to next step.\nA friend of mine asked for a Nixie clock for his birthday. I checked instructables and internet in general, and as some author says, Nixie clocks are \u00abplagued\u00bb with steampunk style \u2013 all these dangling wires, exposed boards and other oddities are maybe cool, but friend just wants to have a Nixie clock which will just look like a clock, no strings attached. I've checked internet, to find out, how \u00abreal\u00bb, factory made Nixie clocks do look, but I was not able to find any. I was only able to find this clock by Longines: https://www.pinterest.com/pin/594897432006033516/ It definitely looked cool, but my friend was already poisoned by instructables, he liked design from these two instructables: https://www.instructables.com/id/Huge-wood-nixie-clock/ and https://www.instructables.com/id/simple-user-adjustable-DIY-Nixie-Clock/ , but asked me to \u00abrewind a bit\u00bb and make it more in 50s style, without falling into dreaded steampunk design. So here it is, and as you can see, my design is loosely based on them. However, I decided to do everything from the scratch \u2013 including design, circuit schematics and even software. Furthermore, I'm making source code available for free, so anyone can modify it and expand or change functionality according to his needs. Software is written in PicBasic Pro, and you can download free trial of compiler from melabs.com, in case you want to tinker with code by yourself, or just flash included HEX files \u2013 no programming skills are required.\nAnd in addition, a bit about \"Instructables\" logo. Initially, my idea was to put my friend's name on it, but after seeing draft, he refused, saying \" - I'm too young to be embellished into metal and stone yet\" :D So his idea was to put \"Instructables\" logo instead, to show our appreciation to this amazing website. :)\nP.S. This particular clock is not for sale, it was birthday gift, and no way I can sell it. However, due to popular demand, I've asked a friend to host it on his Etsy homepage (Just search for \"mid century modern nixie clock\") - I have some extra nixie tubes available, so can make 3 more of such clocks. Please note, I'm not an established manufacturer, so it may take up to 1 month for me to make them. Thanks for understanding.", "title": "Mid Century Modern Nixie Clock", "url": "https://www.instructables.com/id/Mid-Century-Modern-Nixie-Clock/", "steps": [{"step": 1, "steps_text": "OK, so now I have plans and idea how to do things, but what about parts? I needed Nixie tubes and some high quality wood for casing. So I went to local flea market, sometimes, very weird and strange things do pop up there. There were some offers for used Russian IN-4, IN-14, IN-16 and even IN-18 tubes, but my eye caught this beauty \u2013 Czech Tesla made impulse counter (integrator IT2), which used East Germany made ZM-560 Nixie tubes. The seller was asking only $30 for whole impulse counter, which was absurdly cheap, but there was a good reason behind it, as it turned out, counter was already salvaged, so no electronics left inside, besides Nixie tubes and power transformer. Since I don't needed counter cabinet and transformer, we settled down on $20 for 9 Nixie tubes with sockets. Alternatively, you can use Tesla ZM-1020 tubes or Soviet IN-4 tubes \u2013 clock design allows this, and separate drawings for front panel and chassis for each tube type are included.\nNext, I needed some fine wood, and here we have issues with that \u2013 common hardware stores only have pine, oak and other, less luxurious woods, and fine woods, properly aged and dried are rarity (and expensive!). But I was lucky again, I've spotted this beautiful microscope on flea market too \u2013 it has beautiful mahogany wood case, and badge said that it was manufactured in 1936, so wood should become very dry and machining-friendly. Since microscope also was salvaged for parts and thus, not working properly, seller agreed to sell it, including it's box, for another $20. I really liked it, because it is made of solid brass and has some mechanical parts which I might re-use in another projects. So I bought it to my workshop, along with Nixie tubes and started working. Box was carefully taken apart, to recover as much usable wood as possible, and I've cut apart, using lathe, microscope tube, to make brass inserts for clock's face. I even took red plexiglass insert from frequency counter, and re-used it for clock front panel insert. (as it turned out, one box wood was not enough, because I've built 4 different prototypes, before settling on the final design, so I had to go and buy another microscope box - you might notice that feet and front panel are made from different piece of wood, they slightly differ in color).\nList of materials I've used:\n1. 18mm plywood sheet (can use any other thickness or other wood material)\n2. Some nice wood for front and back panel (I've used mahogany)\n3. Dark red plexiglass sheet, 3mm thickness (smoked glass color will also work fine)\n4. M3 screws and rods\n5. M3 brass standoffs (I've used 20mm long ones, you can use different ones, it depends of material thickness you've used for clock cabinet).\n6. Plexiglass, fiberglass or any other rigid material sheet, which will serve as clock's \"mainframe'\n7. Retro style speaker cloth \u2013 I've used beige, but you can choose any color you found pleasing and matching your wood color too.\n8. Wood glue\n9. Epoxy glue\n10. Wood wax, Danish oil, lacquer or any other wood coating (depending on your taste)\n11. Brass tubing with 1mm wall thickness and 35mm diameter. Or just round brass earrings\n12. Clear silicone glue\nOptional materials, in case if you decide to replicate \"Instructables\" logo and badge:\n1. 0.8mm thick brass sheet, approximately 80x20 mm for logo and 75x45mm for the badge.\n2. FolkArt Copper acrylic paint\n3. Rotary tool with felt tip and polishing compound (I've used ABRO wheel polishing mix)\nAs you can see, above list does not shows quantities or dimensions. This is because there is not much of materials needed. I've used some scrap materials remaining from previous projects, and speaking about dimensions again, You won't need any material in size bigger than 20x30cm (A4 sheet size).\nElectronics components:\nRFT ZM560 or Tesla ZM1020 or IN-4 Nixie tubes \u2013 4 pcs\nMatching sockets for these Nixie tubes \u2013 4 pcs\nPIC16F1519 microcontroller \u2013 1 pcs\nDIP-40 socket \u2013 1 pcs\nDS1302 clock module \u2013 1 pcs\nMPSA42 transistors - 30 pcs (MJE13001 will also work fine)\n10K 1/8W resistors \u2013 32 pcs\n4.7K 1/8W resistor - 1 pc\n1K 1/8W resistor - 2 pcs\nPanel mounted push button \u2013 1 pcs\n100x70mm PCB \u2013 1 pcs (you can even use proto board)\nNixie high voltage power supply - 1 pcs\n12V 0.5A power supply \u2013 1 pcs\nAC cord with plug \u2013 1 pcs\nOptional electronics components:\nDS18B20 temperature sensor \u2013 1 pcs\nBuzzer \u2013 1 pcs\n1N4002 diode \u2013 1 pcs\nXS8 Aviation plug and socket \u2013 1 set\nTools:\nOf course you will need screwdriver, soldering iron, saw, pliers, wire cutters and other tools, typical workshop should have. So below I will list only this task specific tools, which you might not have readily available at hands.\n1. Programmer for PIC microcontrollers. Almost any will work, PicKit 2, PicKit 3, MicroBrn \u2013 any of them supporting PIC16F1519 microcontroller, will work. They are cheap, and can be bought off ebay for less than $10.\n2. Although all wooden parts can be manufactured using band saw and handheld router, usage of CNC is highly recommended. Sure, it won't be wise to buy or make it for just this purpose, but if you can, I suggest you to outsource front and rear panel manufacturing to properly equipped facility.\n3. You will also need lathe, if you decide to make brass inserts by yourself, but you can simply buy brass earrings of needed diameter.", "step_imgs": ["https://cdn.instructables.com/FTV/EJRY/JTIYO5JN/FTVEJRYJTIYO5JN.LARGE.jpg", "https://cdn.instructables.com/FDM/1ZFJ/JTIYO5KU/FDM1ZFJJTIYO5KU.LARGE.jpg", "https://cdn.instructables.com/FLW/PIYH/JTIYPBGH/FLWPIYHJTIYPBGH.LARGE.jpg", "https://cdn.instructables.com/FZ1/LRBS/JTOMXQKY/FZ1LRBSJTOMXQKY.LARGE.jpg", "https://cdn.instructables.com/F1L/46Q7/JTOMXQLC/F1L46Q7JTOMXQLC.LARGE.jpg", "https://cdn.instructables.com/FXP/WJ08/JTIYO5CA/FXPWJ08JTIYO5CA.LARGE.jpg", "https://cdn.instructables.com/F5Z/4CH1/JTIYO4YP/F5Z4CH1JTIYO4YP.LARGE.jpg"], "step_title": "Step 1: Bill of Materials and Tools Used"}, {"step": 2, "steps_text": "The firmware for clock works in the following way:\nDuring startup, it checks whenever button is pressed. If button is pressed, then clock enters into \u00abdebug & refresh\u00bb mode, where it enables each segment of each digit sequentially, so you can test your Nixie tube wiring and also use this code to \u00abrefresh\u00bb tubes, if not all segments lit up properly. Leave this code for couple of hours and tubes should recover. To exit this code, cycle the clock power.\nIf no button was pressed during startup, the clock displays alternating \u00ab1\u00bb and \u00ab2\u00bb in all digits 5 times. During this time, you can press button to enter adjustment menu. If you don't, clock will go into standard, time display mode.\nIf you entered the config menu, it works in the following way \u2013 press button to set the year, to advance, you have to release and press it again, keeping it pressed won't help. After you've set the proper year, just release button and leave it for about 2 seconds \u2013 dots will blink, showing that now clock is in month setting mode. Again, set the month by pressing the button, release it and keep released until dots flash and you enter date set mode. Repeat it for hours and minutes, too.\nAfter set-up is finished, clock enters standard time display mode. During that time, if you press button, clock will first show year, then month and date and then return to time display. I have not implemented any further functionality yet, but of course, more features will be added, like setting 12/24 hour mode, screen dimming during night time, alarm and temperature measurement functions, fine RTC calibration and so on. Since some folks prefer 12 hour display, instead of 24 hour display, I've compiled two versions of firmware, so you can directly flash one you need.\nIf you want to make your own modifications to clock's firmware, I'm including fully commented source code as well, so you can tweak it as much as you need it.", "step_imgs": [], "step_title": "Step 2: Clock Firmware and Source Code"}, {"step": 3, "steps_text": "Clock circuit is quite simple and is based on PIC16F1519 micro-controller. Technically, it can be compiled for any other Microchip PIC16 controller in DIP40 package, which has same pinout and also uses internal oscillator. For example, PIC16F887. For timekeeping, DS1302 module is being used. You can upgrade to DS3231 module if desired, but of course, you'll need to modify the source code for that. I've also included DS18B20 sensor for temperature measurement and buzzer for alarm function, but these functions currently are not implemented in software, I'm working on code right now.\nNixie cathodes are direct driven, using MPSA42 transistors (30 cascades total). Each transistor drives own cathode, no multiplexing, shift registers, special IC and so on. While this might appear a bit complex, it has two features which gives this clock major edge over competitors. 1. Since direct drive is used, there are no zener diodes for clamping cathodes, as in SN74141 chip, so there are no blue dots, which means more worn and used nixies still can be used. 2. Using direct drive allows for some unique display effects, which simply are not possible using another driving methods.\nThere are two orange LED's used as time separator. If you want, you can replace them with neon bulbs (Just will need to wire them to high voltage rail and increase resistor from 1K to 1M), and I initially was planning to use them, but all Russian neon tubes which I bought off ebay for that purpose, were too dim when powered from 170V, so I used LED's instead.\nPCB is approximately 100x70mm in size and uses all thru-hole components, no SMD or other, tiny or fragile parts. As you can see, all tube connections are routed to PCB sides and PCB has clear marking, showing which group of cathodes where to be connected (A - tens of hours, B - ones of hours, C - tens of minutes, D - ones of minutes). This was done in such way, because in initial design, I had another PCB on top of main PCB, which housed IN-14 Nixies, so clock would have typical nixie clock design. But since that design was abandoned, new Nixie tubes were directly connected to main PCB. Please note: You might have to mirror PCB image, depending on the method of PCB manufacturing.\nI decided to use factory made high voltage converter for nixie anode power supply \u2013 this is much simpler and safer way to get desired voltages. You can use any available, or make your own \u2013 that is not critical. Just search ebay for \"Nixie tube power supply\". I've used UC3845 based one, but you can pick up another, say MC34063A based.\nTo power things up, I'm using some cheap 12V 0.5A power supply. Of course, you can use one with higher output current and voltage, but I suggest not to use weaker one. Any DC power supply, capable of delivering 12-15 volts with at least 0.5A of output current will be just fine.\nAssembly\nFirst, I started with tube socket wiring. To make things easier, I decided to use same color wire for same digit on each tube \u2013 red wires for anode, blue wires for digit \"3\" and so on. This will make things lot more easier later. After that, I've started building the main PCB. As you can see, on that build I have not installed thermometer and buzzer, since my friend don't needed it, but my debug prototype do has them, so code support should be available shortly. If you don't need alarm or temperature meter functions, simply don't install these parts. Also, pay attention to your DS1302 module, some come with male plug, some come with female socket, you will need to solder the appropriate side on your PCB. From the picture of assembled PCB you can see that ICSP connector is missing a central, 5V pin. This is done to purpose \u2013 it serves as a key, so connector will be inserted in proper way. If you don't plan to use ICSP, or plan to program micro-controller in another programmer, you can skip installing this header too. In that case, you can also skip diode installation and solder a jumper instead of it.\nFor the DS1302 modules, they usually come in two variations, one with rechargeable battery and one without. I suggest to use one with rechargeable battery, so you won't have to take clock apart and replace the battery.\nAnode resistors are installed on separate PCB, I used piece of protoboard there. Resistance of these resistors adjusts brightness of Nixie, but don't install too low value resistors (below 10k), brightness only will increase slightly, but tube life will be considerably reduced. As from my personal experience, 33k is good for RFT tubes. For Tesla and Soviet tubes you will need lower resistance resistors, in 10-22k range.\nHigh voltage supply.\nYou have to adjust it to deliver at least 150 volts. Please note, high voltage can be lethal, so observe all precautions when working with high voltage. You might need to increase voltage to 170 or even 180 volt in case if your tubes are old or worn out. For example, my RFT and Soviet tubes were fine with 150 volts, but Tesla's required at least 170 volts, to light up all segments properly.\nInstalling power supply and HV converter.\nI've used some brackets and protoboard pieces, along with nylon standoffs, to mount things together. If you have no experience with AC wiring, I strongly suggest you to use external 12VDC power supply, so you won't have to deal with AC circuitry, which can be very dangerous and lethal, if not handled properly.\nFirst run.\nAfter all parts are soldered, wires connected and MCU programmed, there's time for first run. Either press and hold button on startup, or solder a jumper instead of it and start looking at display. The clock will enter into segment test mode, so all digits will show all possible numbers in the sequence. If wiring is correct, then this sequence will look like this:\n0 1 2 \u2013 first digit (tens of hours)\n0 1 2 3 4 5 6 7 8 9 \u2013 2nd digit (ones of hours)\n0 1 2 3 4 5 \u2013 3rd digit (tens of minutes)\n0 1 2 3 4 5 6 7 8 9 \u2013 4th digit (ones of minutes)\nIf it is not following this sequence or some digits are not showing up, re-check your wiring, most likely you're having some issues with it. In case if some digits light up only half, or are very dim, don't worry \u2013 just allow this code to run for hour or so \u2013 many old tubes need \"refresh\" after long time of no use. If that does not helps, try to increase anode voltage a bit, maybe in 10 volt steps, not more.\nAs you can see, some parts on finished PCB are not installed, this is because my friend did not wanted alarm or temperature sensor functionality, so these parts were not installed. Also, if you plan to not update your clock firmware, you can also skip installation of ICSP header. Note it has Vdd pin removed \u2013 because clock is being powered from mains, so we don't need it, and also it serves as key for inserting connector in correct direction. 7805 IC can be replaced with 78L05 or 78M05 if desired \u2013 current consumption is really low.", "step_imgs": ["https://cdn.instructables.com/FF7/DIBZ/JTIYPDZA/FF7DIBZJTIYPDZA.LARGE.jpg", "https://cdn.instructables.com/FB7/PRLL/JTT5KIOX/FB7PRLLJTT5KIOX.LARGE.jpg", "https://cdn.instructables.com/FP1/QUYI/JTIYO5M4/FP1QUYIJTIYO5M4.LARGE.jpg", "https://cdn.instructables.com/F0U/2NPC/JTIYO5LB/F0U2NPCJTIYO5LB.LARGE.jpg", "https://cdn.instructables.com/FTN/POVE/JTIYO5M3/FTNPOVEJTIYO5M3.LARGE.jpg", "https://cdn.instructables.com/F01/9V5P/JTON5YQO/F019V5PJTON5YQO.LARGE.jpg", "https://cdn.instructables.com/FN8/4ZB9/JTIYO5U5/FN84ZB9JTIYO5U5.LARGE.jpg", "https://cdn.instructables.com/FRK/2L3P/JTIYO5U9/FRK2L3PJTIYO5U9.LARGE.jpg", "https://cdn.instructables.com/F2P/CYYD/JTIYO5RO/F2PCYYDJTIYO5RO.LARGE.jpg", "https://cdn.instructables.com/F2K/21MD/JTIYO4VV/F2K21MDJTIYO4VV.LARGE.jpg", "https://cdn.instructables.com/F8U/RMAO/JTIYO5MV/F8URMAOJTIYO5MV.LARGE.jpg"], "step_title": "Step 3: Electronics"}, {"step": 4, "steps_text": "Clock case is made from pre-cut and glued plywood sheets, which are covered with retro style speaker cloth. Front and rear panels are cut out from wood and plexiglass sheet. Another plexiglass sheet serves as \"chassis\" for nixie tube sockets and PCBs. Location and alignment of internal components are not critical, you can re-arrange them whatever way you like.\nI've cut out clock body parts from plywood sheet, and glued them together with wooden glue. After it all dried, case was sanded from outside, using 600 grit sandpaper, to smooth surfaces and remove glue residue. As I said above, in parts description, you can use plywood or wood material of any thickness, but total thickness of assembled frame should be about 80mm, to fully accommodate both PCB, mounting frame and have adequate space for Nixie tube installation. Also please note, one plywood panel, one that goes to front side, is different from others \u2013 it has cutouts in shape of mainframe, so it can be installed from the front.\nAfter body assembly was completed, cloth was glued around it, but used epoxy to fix it on clock body. The reason is that I wanted cloth to be stretched finely, so it won't move. To achieve this, I did the gluing process in the following way: Glued one edge of cloth to body from below side, let it dry for 24 hours. Stretched it around, and while holding it stretched, glued with 5 minute quick dry epoxy glue. After it dried, I've glued front and rear sides with wooden glue, as I did in my previous instructable about DIY Bluetooth speaker.\nFront and rear panel are CNC cut from the mahogany wood, but you can use any hardwood you like \u2013 walnut, sapele, beech, all will look just great. As description says, you can use different types of Nixie tubes within this design, but since all of them have different outer side, you will need to expand holes in front panel, to fit Tesla or Soviet Nixies. You will also need different \"chassis\" to mount tube sockets on it, but since Tesla and RFT nixie tubes use same sockets, included chassis design can be used for both, but you will need to modify it for IN-4.\nWhen assembling the clock, you will need to glue hex standoffs with epoxy at the areas marked on the picture. If you don't do so, once clock is assembled and you need to take it apart for whatever reason it is, you won't be able to do so \u2013 standoff will unscrew, and you won't be able to separate panels apart.\nStand.\nIt is cut from the same wood as clock front and rear inserts. Small piece of wood has one plane sanded at about 30 degrees, so it gives clock main body tilted look.\nFront panel insert.\nThe front panel insert was CNC cut from the red plexiglass sheet I've got from that impulse counter. The brass inserts for it were cut using lathe, from microscope lens tube. After cutting, I've slightly polished them and coated with nitrocellulose lacquer before gluing to insert. I did this to avoid oxidation, since after time, brass will darken and won't look so cool, and it will be impossible to polish it, when glued. Actually, this microscope looks so cool, because brass parts are already covered by lacquer, which protects them from dark spots and oxidation. I've used transparent silicone glue to glue the insert to front panel.\nRear side.\nAs you can see, rear insert is made from acrylic sheets of different colors. I just don't had enough red acrylic, so cut it from material I had at hands. You can go with any kind of acrylic for it, or just make it plain wood \u2013 it is on rear, so no one will see. For the same purpose, you can use cheaper M3 screws, ones I've used are gold plated and are remnants from previous, \"audiophile-grade\" project.\nI've placed a 4 pin mini socket on rear side for software update needs. In most cases, you won't need it, so there's no need to install it. This means, you now can have button on top, and use existing hole to wire AC cord.", "step_imgs": ["https://cdn.instructables.com/FW8/LKB1/JTIYO5U6/FW8LKB1JTIYO5U6.LARGE.jpg", "https://cdn.instructables.com/FX5/D9GO/JTIYO5I2/FX5D9GOJTIYO5I2.LARGE.jpg", "https://cdn.instructables.com/FZ0/MEU6/JTIYO4YQ/FZ0MEU6JTIYO4YQ.LARGE.jpg", "https://cdn.instructables.com/FME/VUOL/JTIYO51R/FMEVUOLJTIYO51R.LARGE.jpg", "https://cdn.instructables.com/FBX/8HH9/JTIYO5SG/FBX8HH9JTIYO5SG.LARGE.jpg", "https://cdn.instructables.com/FGK/9K5I/JTIYO5SH/FGK9K5IJTIYO5SH.LARGE.jpg", "https://cdn.instructables.com/FIH/K25S/JTIYO5SK/FIHK25SJTIYO5SK.LARGE.jpg", "https://cdn.instructables.com/FWA/FP82/JTIYO59I/FWAFP82JTIYO59I.LARGE.jpg", "https://cdn.instructables.com/FZ6/QXP1/JTIYO54E/FZ6QXP1JTIYO54E.LARGE.jpg", "https://cdn.instructables.com/FMN/GLN8/JTIYO5OP/FMNGLN8JTIYO5OP.LARGE.jpg", "https://cdn.instructables.com/F84/HIXN/JTIYO572/F84HIXNJTIYO572.LARGE.jpg", "https://cdn.instructables.com/F4K/D06S/JTIYPF2G/F4KD06SJTIYPF2G.LARGE.jpg"], "step_title": "Step 4: Woodworking and Inserts"}, {"step": 5, "steps_text": "Instructables logo was CNC manufactured from 0.8mm thick brass sheet. I've designed it based on 60's design ideas, based on so called \"refrigerator fonts\", and one of my main source of inspiration was this \"Starlite JETRA TRN-60C\" radio, which I've found on Pinterest. The logo is made in the following way: I draw design in Corel Draw, exported as PDF, imported to Roland Engrave Studio (software for my CNC) and machined it. After, I polished it using Dremel with felt wheel and polishing compound. After that, I've cleaned it with alcohol, and covered with FolkArt copper acrylic paint. Let it dry for a day, and then, scrape paint over letters gently with fingernail, so it remains only in cutouts. After finishing, I've baked it in hot air oven at 250C for 1 hour. Paint fuses to brass and becomes solid \u2013 logo is ready. Initially, I wanted to use fusible glass paint on it, but it did not went in the proper way - no matter how hard I try, after drying it will become brittle and chip off, as you can see on 3rd photo. Nameplate is made from similar brass sheet, but no painting jobs this time \u2013 just engraving. Both were glued to their locations using epoxy glue.", "step_imgs": ["https://cdn.instructables.com/F90/H2X3/JTIYO5H8/F90H2X3JTIYO5H8.LARGE.jpg", "https://cdn.instructables.com/F75/497G/JTIYO4XY/F75497GJTIYO4XY.LARGE.jpg", "https://cdn.instructables.com/FM4/0ZQ0/JTIYO5ER/FM40ZQ0JTIYO5ER.LARGE.jpg", "https://cdn.instructables.com/FLD/IJ0V/JTMSSJLH/FLDIJ0VJTMSSJLH.LARGE.jpg"], "step_title": "Step 5: Instructables Logo and Nameplate"}, {"step": 6, "steps_text": "This instructable comes with additional files, which you will need to download and use, to assemble this clock. These files are:\nparts.pdf - contains all mechanical outline and drawings in vector format, 1:1 scale, with additional text notes regarding machining and finishing.\npcb.jpg - PCB picture, in case you will make it using laser transfer method.\ncircuit.jpg - Circuit schematics, to assist you during assembly.\npcb.lay6 - PCB design source file in Sprint Layout format.\ncircuit.spl7 - Circuit schematics in Splan7 format.\n12hr.hex - firmware for 12 hour time display\n24hr.hex - firmware for 24 hour time display\npcb.gbr - PCB drawing in gerber format\nsourcecode.pbp - Source code in PicBasic Pro 3.0 format\npcb.drl - PCB hole drilling map", "step_imgs": [], "step_title": "Step 6: List of Included Files With Drawings and Circuitry"}, {"step": 7, "steps_text": "We hope you will like our nixie clock, it took us more than 4 months to design, program and build it. Also, we'd like to thank community at www.picbasic.co.uk - without your help guys, this project would not be possible!\nPlease let us know your opinion and suggestions, this is very important for us. Have fun and be active!\n29.03.2013 - PCB design had been updated, removed unnecessary holes and adjusted distances for more engraver-friendly design. New layout PCB manufactured and tested.", "step_imgs": [], "step_title": "Step 7: Final Words & Changelog"}], "channel": "Electronics"}, {"category": "Technology", "description": "After being accidentally locked out of my house on more than one occasion, I decided that there had to be better way to entering my home that did not involve breaking and entering (and without hiding a key outside somewhere).\nOn taking a look at my garage door set-up I noticed that the motor to open the garage door could be activated by simply short-circuiting two contacts. On seeing this I realised that a very simply solution would be to connect an esp8266 to a relay that I could then trigger (to open or close the door) by connecting to the esp8266 controller using my mobile phone.", "title": "Simple Garage Door Hack", "url": "https://www.instructables.com/id/Simple-Garage-Door-Hack/", "steps": [{"step": 1, "steps_text": "Materials\nNodeMCU\n1 Channel 5V relay module\nUSB outlet/charging device\nScrews(M2*8)\nmin USB cable\nTools\nSoldering Iron\nSolder\nHeat-shrink tubing\nWire-strippers\nConnecting wire\n3D Printer\nStar screwdriver\nPliers\nSoftware\nArduino IDE\nFritzing\nFreeCAD", "step_imgs": [], "step_title": "Step 1: Materials, Tools & Software"}, {"step": 2, "steps_text": "The following library was added to the Arduino IDE: https://github.com/Links2004/arduinoWebSockets.git. Also if you have not already added the esp8266 library then this needs to be done as follows:\nGo to File > Preferences. In the \"Additional Boards Manager URLs\" field, type (or copy-paste) http://arduino.esp8266.com/stable/package_esp8266... and click ok.\nThen go to Tools > Board > Board Manager. Type \"esp8266\"\nin the search field. The entry \"esp8266 by ESP8266 Community\" should appear. Click that entry and look for the install button on the lower right.\nNot much more needs to be added here other than the code I used (GarageDoorHack-Final attached) was taken from https://gist.github.com/bbx10/667e3d4f5f2c0831d00b and modified slightly to accommodate what I needed to do i.e. to briefly trigger a relay when a button was click.\nWith reference to the code, make sure that you update the following lines to reflect your wireless SSID and PASSWORD:\nstatic const char ssid[] = \"SSID\";\nstatic const char password[] = \"PASSWORD\";\nusing the serial monitor (once you have uploaded the code) you will be able to see what IP is allocated to the NodeMCU.\nOne last point that is worth noting is that my NodeMCU board appeared to have the pins assigned differently to what is mentioned online i.e. my GPIO05 was pin 5 where as the the online reference that I was using said that it was 1 (or maybe my GPIO pins where assembled in a different order). Whatever the case, I had to use some trial and error before a could determine which pin was actually GPIO5.", "step_imgs": [], "step_title": "Step 2: Coding"}, {"step": 3, "steps_text": "Steps followed:\nI clipped off all the NodeMCU pins that I was not using (yes I could have unsoldered them but I found this easier).\nSoldered connecting wires onto the relevant pins (as be diagrams and photos above), using heat-shrink tubing to insulate the connections.\n3D Printed the case (STL files attached; the FCSTD file is the FreeCAD file).\nScrewed the NodeMCU board down. The screws that I had were too long and so a used pliers to snip them shorter.\nPushed the top of the relay into the square holder in the lid which held it firmly in place. The orientation was such that the relay contacts faced the wire exit hole in the lid.\nAttached the lid and screwed it closed.\nConnected the relay wires to the garage door motor terminals.\nPlugged the project into the USB power source.\nWaited for the NodeMCU to authenticate with the wireless.\nBrowsed to the IP address from my phone.\nTested by pressing the button.\nThe threaded screws that I had worked well but self-tapping ones would have been easier to work with.", "step_imgs": ["https://cdn.instructables.com/FS1/CMTL/JTENHT61/FS1CMTLJTENHT61.LARGE.jpg", "https://cdn.instructables.com/F5D/EXYW/JTMSVHT4/F5DEXYWJTMSVHT4.LARGE.jpg", "https://cdn.instructables.com/F08/XOOL/JTMSVHUF/F08XOOLJTMSVHUF.LARGE.jpg", "https://cdn.instructables.com/FVL/WOTU/JTMSVHTQ/FVLWOTUJTMSVHTQ.LARGE.jpg", "https://cdn.instructables.com/FQM/T65A/JTMSVHWB/FQMT65AJTMSVHWB.LARGE.jpg", "https://cdn.instructables.com/FKW/D0T4/JTMSVHVP/FKWD0T4JTMSVHVP.LARGE.jpg"], "step_title": "Step 3: Putting It All Together"}, {"step": 4, "steps_text": "The following falls outside the scope of this Instructable but are worth discussing:\nIP Address\nBy default your router will issue random IP Addresses meaning that your device might not always have the same IP which would then make it very difficult to find and access from your phone. It is therefore important that you assign it a fixed IP. There are two main ways to do this, each with their own pros and cons. My preference is to allow the router's DHCP server to do this. The general steps to follow when using this method are:\nLog onto your router as an admin.\nLook at the DHCP logs and record the MAC address associated with the IP address that was issued to your NodeMCU.\nFind the menu option that allows you to set IP reservations. Here you will be able to specify a MAC address and the IP that you wish this MAC address to always to get.\nI usually do the above as early as possible in my projects.\nCreating a shortcut on your phone\nMake sure that you are connected to the same wireless network as your device.\nWith the IP address now fixed you should be able to browse to it on your phone.\nSave the IP as a bookmark.\nSave the bookmark to your phone's home page.\nSecurity\nAnyone connected to your wireless network will be able to browse to this IP and trigger the relay. To do this they will then have to know your Wireless SSID and password. For the average user this is probably enough security. If you wanted a higher level of security you could implement some sort of MAC filtering on your router or a standalone server or you could try a two-factor authentication approach. This said, if someone knows how to hack your network then they probably know how to hack all of the above solutions too. Further if they are really that keen to get in they will probably simply break in.\nIn short if you live in a low risk environment then you probably have nothing to fear. On the other hand if you live in a high risk environment then you probably have more important things to worry about and a garage door hack.\nHaving said all of this, the following project is more of a proof-of-concept project and not meant as a full-scale production implementation. Anyone implementing this project does so at their own risk.\nClosing comments\nSometimes the connection to the NodeMCU appears to get lost. When this happens you just need to refresh the webpage and it should reconnect successfully.\nAnd lastly, instead of connecting the controller directly onto the door motor, I could have wired it in parallel with the manual switch in the garage. While this would have enabled me to hide the circuitry in the wall, I would have then had to make another plan with respect to powering the device. The power issue would have been relatively easy to solve but for the time being I did not feel that the effort would be worthwhile.\nAll in all this is a simple and cheap project that I enjoyed completing.", "step_imgs": [], "step_title": "Step 4: Final Comments"}], "channel": "Arduino"}, {"category": "Technology", "description": "The following describes the process by which I create PC circuit boards for one-offs and prototype use. It is written for a person who has created their own boards in the past and is familiar with the general process.\nAll of my steps may not be optimal for your situation. I have developed this process by trial and error incorporating techniques from various sources. Please take whatever works for you and discard that which does not.\nA production note: I am old school and learn best from written instruction and pictures, they form the bulk of this instructable, I have included a couple of videos for some of the more complex steps.", "title": "Printed Circut Boards - Complete Process", "url": "https://www.instructables.com/id/Circuit-Boards-My-Way/", "steps": [{"step": 1, "steps_text": "The following list is lengthy but, if you are already making your own PC boards, you may have some of these items. Most of the rest, with the exception of the UV exposure Box, can be purchased on-line.\n\nYou will need:\nCopper clad PCB material\nCircuit board design software (I use Eagle freeware).\nGerber file translator - convert Gerber files to graphic format Gerber2PDF\nGraphics editing software (PhotoShop)\nLaser Printer w toner suitable for toner transfer technique.\nGlossy laser printer paper (Staples #633215).\nTransparency film for Laser Printers (C-Line no60837).\nWater soluble glue stick, cyanoacrylate glue, painters tape.\nThin floral wire (~ 26 gage) and straight pins.\nHand tools to cut, shape and drill PC boards.\nA standard clothes Iron.\nCircuit board cleaning materials ( paper towels, sponges, detergent, Bar Keepers Friend, solvents).\nFerric Chloride liquid (40%).\nCitric Acid, powdered (nuts.com).\nOld CrockPot w/ ceramic or glass liner (not metal).\nQt. size plastic Freezer bag with zip closure.\nUV curable solder mask paint (ebay or amazon).\nUV exposure Box (Home-Made?).", "step_imgs": [], "step_title": "Step 1: Materials Needed"}, {"step": 2, "steps_text": "I use the Eagle free ware version since board sizes are fairly modest and limited to 2 sides. I am generous with the sizes of my traces and the distances between them ( 24 mil min trace size and 15 mil between).\nMost of my components are through the hole but I do use SMD or a combination occasionally. I try to route traces to any pin headers on the bottom of the board. I do not use plated through holes so I add additional vias connecting the top traces to the bottom where component cannot be soldered on both sides. These will be filled with short pieces of thin wire soldered in place.\nWhen I am finished with the layout and routing, I add several large vias near the corners of the board to serve as mounting holes and registration indicators for 2 sided boards.\nWhen you are done I suggest you print out a large copy of the board for reference in placing components and marking holes.\nI use Eagles' CAM Processor to create the board images that will be printing on paper for the copper and on laser transparency film for the solder masks.", "step_imgs": ["https://cdn.instructables.com/FL0/CP0B/JTMSW1ZY/FL0CP0BJTMSW1ZY.LARGE.jpg"], "step_title": "Step 2: Design Your Circuit Board"}, {"step": 3, "steps_text": "I like to use fill polygons to create a Ground plane on bottom and V+ on the top, thus I do not print the board image(s) directly but use Eagle's CAM output. I have not been using solder paste stencils since I hand-solder the few SMD components I use to my boards.\nTo facilitate the creation of the CAM images I created a custom template for single and dual sided CAM output containing the output files I need . I always add the board shape to the copper Gerbers but not to the masks.\nI usually put the Gerber files into the Project folder when processing the job so they may be accessed if needed at a later date.", "step_imgs": ["https://cdn.instructables.com/FO8/KUOY/JTMSW775/FO8KUOYJTMSW775.LARGE.jpg"], "step_title": "Step 3: Output Gerbers"}, {"step": 4, "steps_text": "Creating the output using Eagle's CAM processor introduces several impediments to creation of the copper and solder masks.\nYou need to convert the Gerber files into printable images.\nThe Cam processor removes the component and via hole indicators.\nThe first step is to convert the Gerber files into some sort of image file which I can then edit and print. I use a utility named Gerber2PDF Gerber2PDF link.\nThe downloaded .exe is placed in the Eagle CAM directory. I then transfer the Gerber files I wish to convert from the Project directory to the CAM directory before running Gerber2PDF from the Windows command line.\nSee the Gerber2pdf documentation for the syntax to select and convert specific files.\n\nI have included the text file I use to run the gerber2pdf process that you should download.\nFeel free to edit this file to suit your needs. Cut the commands and paste them into the DOS command line utility to convert the Gerbers.\nOnce I have individual PDFs one for each copper and solder mask I need, I address the issue of the missing holes in board's components, vias and registration holes. I use PhotoShop to import the PDFs and edit the copper files to add the needed holes as small filled white circles.", "step_imgs": ["https://cdn.instructables.com/FW0/B4H1/JTMSW22Q/FW0B4H1JTMSW22Q.LARGE.jpg"], "step_title": "Step 4: Converting CAM Images"}, {"step": 5, "steps_text": "I use PhotoShop to import the PDFs and edit the copper files to add the needed holes as small filled white circles. You can use your own graphic conversion and editing software following the directions below.\nEdit the PDFs to add registration hole marks (see Arrows) to both sides of 2- sided boards. Keep the registration holes extra small to make registration more exact but large enough to see when you print the copper images. I only add the component holes to the top since I will be drilling mainly from this side. Note the top copper image must be flipped horizontal (mirror) at this point so the pads will match after it is etched. You may also add printed text at this point. Be sure that any text you add appeared mirroredon both top and bottom copper so they will transfer to your board correctly(see above examples).\nCopy and paste each copper and mask image into a blank, full page master sheet (at the same resolution as the PDFs) this will be printed on a your laser printer. You may also wish to add board identification text to the master sheet.\nPutting multiple copies of the copper images on the master sheet will conserve paper and allow for mistakes in the toner transfer process. Do the same for the solder mask files adding at least 2 copies of each mask, they will be combined later.", "step_imgs": ["https://cdn.instructables.com/FB7/927P/JTMSW94G/FB7927PJTMSW94G.LARGE.jpg", "https://cdn.instructables.com/FFW/OGRK/JTMSW22H/FFWOGRKJTMSW22H.LARGE.jpg", "https://cdn.instructables.com/FXN/FNSV/JTMSW21V/FXNFNSVJTMSW21V.LARGE.jpg"], "step_title": "Step 5: Editing Images"}, {"step": 6, "steps_text": "The printed Master Sheet copper images will be transferred to the prepared PCBs using toner heat transfer. I use Premium Color Laser Gloss Paper from Staples (#633215) for the transfer process. It is reliable, low cost and clearly visible (not like magazine pages). It accepts the Laser toner with little or no errors, transfers the toner to the copper quickly and releases cleanly with just a few minutes of soaking in warm water. If solder masks are to be generated at least two copies of each masks are printed on Laser Printer Transparency Film (C-Line no60837) .\nBefore you print on the gloss paper or transparencies print a copy of the images on plain paper. This copy will be used for board sizing and 2 sided copper alignment. It is a good idea to check for correct distances between pads for SMD and other components (see above photo). Do this for both the copper and mask images. I have made mistakes in the copy and paste process more than once and, after etching, masking and drilling the PCB, could not populate the finished boards", "step_imgs": ["https://cdn.instructables.com/FNI/IPHI/JTMSW242/FNIIPHIJTMSW242.LARGE.jpg", "https://cdn.instructables.com/FU0/83U4/JTMSWD1S/FU083U4JTMSWD1S.LARGE.jpg"], "step_title": "Step 6: Print the Master Sheet"}, {"step": 7, "steps_text": "The copper boards (single or dual sided) are cut to rough shape (~ half inch all arround) using an image from the plain paper printout as a guide (I use a Dremel tool with a cut-off wheel).\nThe edges are filed smooth to flatten them and the corners rounded. I then file the top and bottom edges at a 45 degree angle to remove any burrs or sharpness (check with your finger after filing).\nThe next step is to clean the boards to remove any oils or grease. Detergent and warm water will do the trick. Finally to remove oxidation and create a surface that will accept the transfer and be easy to solder, I sprinkle the copper with a little \"Bar Keepers Friend\" compound and scrub gently with a damp sponge, then rinse before drying with a paper towel.\nIf the boards are 2-sided, the images will need to be registered exactly. I found the best way for me is to temperarely glue a plain paper copy of the bottom copper image to one side of the board (paradoxically this will be the top) and carefully drill the centers of the registration vias with a #70 drill. A drill press with a drill vice to hold the bit works well.", "step_imgs": ["https://cdn.instructables.com/F4R/HZ5G/JTMSWF9Z/F4RHZ5GJTMSWF9Z.LARGE.jpg", "https://cdn.instructables.com/FCH/0PCZ/JTMSWFBA/FCH0PCZJTMSWFBA.LARGE.jpg", "https://cdn.instructables.com/FQN/BQVB/JTMSWFHM/FQNBQVBJTMSWFHM.LARGE.jpg", "https://cdn.instructables.com/FI4/4YXO/JTMSWFL7/FI44YXOJTMSWFL7.LARGE.jpg", "https://cdn.instructables.com/FDV/5BP4/JTMSWFNQ/FDV5BP4JTMSWFNQ.LARGE.jpg", "https://cdn.instructables.com/F96/N8EF/JTMSWFWG/F96N8EFJTMSWFWG.LARGE.jpg", "https://cdn.instructables.com/FVP/RREV/JTMSWERS/FVPRREVJTMSWERS.LARGE.jpg", "https://cdn.instructables.com/FU8/KXOL/JTMSWFWY/FU8KXOLJTMSWFWY.LARGE.jpg", "https://cdn.instructables.com/FCN/DFRI/JTMSHJ6Z/FCNDFRIJTMSHJ6Z.LARGE.jpg", "https://cdn.instructables.com/FOJ/XZPU/JTMSHIXW/FOJXZPUJTMSHIXW.LARGE.jpg", "https://cdn.instructables.com/F45/3HLD/JTMSHJS4/F453HLDJTMSHJS4.LARGE.jpg", "https://cdn.instructables.com/F2A/56M3/JTMSHK19/F2A56M3JTMSHK19.LARGE.jpg"], "step_title": "Step 7: Prepare Copper Coated Board"}, {"step": 8, "steps_text": "For single sided boards the process is fairly simple. Just cut out a copy of the copper image from the glossy paper and gently tape it to the board image side down using painters tape (blue tape). I then place the board on a piece of plywood covered with 2 layers of paper toweling and cover the board with another two layers.\n\nFor two sided boards the process is more complicated. I first clear the registration holes in the board with a straight pin. The next step is to cut out one copper top and one bottom image from the glossy paper and exactly pierce the center of all the registration holes with a straight pin.\nNext I cut pieces of thin ( ~ 26 gage) florist or craft wire small enough to pass through the registration holes (about 3/4 inch in length). I pass this wire first through the back of one of the registration holes in the top paper, then through the board. At this point I bend the wire and use a small piece of painters tape to prevent the wire from dropping through when I flip the board over. Finally push it through the front of the bottom paper holes so that the images are facing the copper.\nEach wire is then bent to hold the papers and board together. When all the holes are completed, follow the procedure for the single sided board above.", "step_imgs": ["https://cdn.instructables.com/FAY/R6FE/JTMSHN8V/FAYR6FEJTMSHN8V.LARGE.jpg", "https://cdn.instructables.com/FD2/V8VD/JTMSHN52/FD2V8VDJTMSHN52.LARGE.jpg", "https://cdn.instructables.com/FIL/P38R/JTMSHNC0/FILP38RJTMSHNC0.LARGE.jpg", "https://cdn.instructables.com/F1S/J9A8/JTMSHNG5/F1SJ9A8JTMSHNG5.LARGE.jpg", "https://cdn.instructables.com/FA4/87N0/JTMSHNL7/FA487N0JTMSHNL7.LARGE.jpg"], "step_title": "Step 8: Register Copper Images"}, {"step": 9, "steps_text": "Now that the board is ready for the toner transfer. This video of the transfer process may make the following instructions clearer.\nI apply a dry clothes Iron set to just under the highest temperature to tack down the paper to the board using the pointed tip of the iron. Be careful to place the tip between the wires on two-sided boards and tack down both sides so that the paper does not separate from the board when handled. Warning the board gets burning hot. On two sided boards I snip the wires flush on one side then pull the other ends through the paper and board before the next step.\nRemove any tape before applying the iron with pressure on each side for about 1 minute no movement unless the board is to big for full iron coverage. This will heat soak the board and tack on the toner. To assure toner transfer I remove the paper towel on the top side and hold the edge of the iron at a 45 degree angle to the board then apply pressure while moving across the board . I do this on each side at least several times. At this point you should see a slight image of the toner on the back of the paper.\nThe next step is to soak the board and paper in water till the paper floats off. I usually gently rub the back of the paper to remove the clay coating to facilitate the process and gently peel the paper off after a few minutes, A light brushing under water with a soft bristle brush or your fingers will insure the clay coating of the glossy paper is removed from the copper before etching. The water will cloud-up with microscopic clay particles.\nDry, inspect and touch-up with a Sharpee Marker and knife if needed. If extensive repair is needed at this stage you might want to remove the toner and reapply before etching (be sure to clean the board again).", "step_imgs": [], "step_title": "Step 9: Toner Transfer"}, {"step": 10, "steps_text": "My etching process is perhaps the most unconventional. It requires a crock pot filled 1/2 way with water set on the high setting and heated( at least 1 Hr) until hot. The next unusual step is to etch the board inside a good quality freezer bag with a zip lock. Finally I use a Ferric Chloride based Edinburgh Etch which is prepared as follows: Obtain some dry Citric Acid (also know as Sour Salt often used as a food preservative} from an on-line (NUTS.com) or local source. Prepare a solution of Citric acid by dissolving 1/4 cup the powder in 3/4 cup of warm water,set aside to cool. To make the etchant add 1/2 cup of this solution to 2 cups of 40% ferric chloride solution. Add the acid to the chloride. This is the Edinburgh etch. The etching solution is twice as fast as plain Ferric Chloride etch and will not self clog or form the sludge.\n\nWARNING: Do NOT use a Hydrogen Peroxide based etchant with this method. It generates Hydrogen gas that is explosively flammable and will burst the bag open.\nBe sure to use gloves and clothing protection (a waterproof apron) before mixing or using the etchant. It will still stain and eat cloth and skin! Open the bag with the circuit board, I usually add water to the bag first to test for leaks then dump that water out. Add etchant sufficient to etch your circuit, do not overfill, you can always add more later but, it can be messy. You will find that you will use less etchant than with other methods and since it is discarded after use, the etchant is always fresh. Squeeze as much air as possible out of the bag without spillage then the securely seal it closed so it is air tight.\nTurn off the crock pot. Now place the bag in the hot water till the board is submerged and flat. Check on the progress of the etching at least every 5 minutes till all the exposed copper is completely cleared (the clear bag allows inspection). There is no need for constant agitation since the Edinburgh Etch does not clog. When complete (no copper visible), remove the bag and carefully open it, discard the etchant in a waste container, do not pour it down the drain! I use a large plastic container with a wide mouth that I take to my community hazardous waste collection to discard.\nRinse the bag out with water, also discard into your waste container and remove the board before discarding the bag. Rinse the board under running water to clean before removing your protective gear.\nRemoving the toner as usual by wiping with a paper towel dipped in acetone or lacquer thinner.", "step_imgs": ["https://cdn.instructables.com/F15/AP1V/JTMSIED2/F15AP1VJTMSIED2.LARGE.jpg", "https://cdn.instructables.com/F5D/RWT2/JTMSIEFA/F5DRWT2JTMSIEFA.LARGE.jpg", "https://cdn.instructables.com/FGI/XX22/JTMSIEJN/FGIXX22JTMSIEJN.LARGE.jpg", "https://cdn.instructables.com/F0V/0P12/JTMSIEJQ/F0V0P12JTMSIEJQ.LARGE.jpg", "https://cdn.instructables.com/FT0/C26V/JTMSIEQB/FT0C26VJTMSIEQB.LARGE.jpg", "https://cdn.instructables.com/FBR/5VST/JTMSIET8/FBR5VSTJTMSIET8.LARGE.jpg", "https://cdn.instructables.com/FPQ/M5S5/JTMSIEZR/FPQM5S5JTMSIEZR.LARGE.jpg", "https://cdn.instructables.com/FDE/GM1R/JTMSIF47/FDEGM1RJTMSIF47.LARGE.jpg", "https://cdn.instructables.com/FQF/6AGD/JTMSIFFS/FQF6AGDJTMSIFFS.LARGE.jpg", "https://cdn.instructables.com/FIX/TN0C/JTMSIFK7/FIXTN0CJTMSIFK7.LARGE.jpg", "https://cdn.instructables.com/F8L/7JS6/JTMSIFK8/F8L7JS6JTMSIFK8.LARGE.jpg", "https://cdn.instructables.com/FUK/KG9Q/JTMSIFLU/FUKKG9QJTMSIFLU.LARGE.jpg", "https://cdn.instructables.com/FBS/WU0A/JTMSIFO9/FBSWU0AJTMSIFO9.LARGE.jpg", "https://cdn.instructables.com/FH4/8UVX/JTMSIEAT/FH48UVXJTMSIEAT.LARGE.jpg", "https://cdn.instructables.com/F25/42FY/JTMSIEAU/F2542FYJTMSIEAU.LARGE.jpg"], "step_title": "Step 10: Etch Your Board"}, {"step": 11, "steps_text": "Once the board is dry, it is time to apply a Solder mask. This is an optional step but it will help to protect the copper from oxidation , looks more professional and improves the SMD component placement.\nAgain since the description of this process does not convey all the nuances necessary for success I have included a video.\nFilm mask is hard to find and very expensive so I use the tubes of UV curable solder mask obtained from various sources on the internet. No matter if you use film or paint you will need a source of UV light. I built a UV Exposure Unit using a roll of Purple/UV LED strips.:\nIt is important for protection of your eyesight that the UV source be enclosed inside a light tight box. There are many directions for the construction of other UV exposure devices on instructables.com, build one suitable for you. I use an electronic timer capable of seconds measurement and activating a relay to turn on and off the DC current to the UV source.\nSince Laser printers do not print an image of sufficient density, you'll need to combine 2 images. Cut out two copies of each solder mask from the film and carefully align them to form the mask for each side. I permanently glue them together with a small dot of \"Super Glue\" on opposite corners away from the printed image.\nThe next step is most heuristic and will require testing your exposure setup (see instructions below) as well as some experimentation with your paint application.\nTesting your UV exposure device - I do not know what sort of UV levels your device will output or your paint thickness, there are just too many variables. You need to establish the exposure timing suitable to your particular setup and paint density. To do this prepare a sample exposure guide and cover a blank PCB board with paint following the below instructions ( I have attached a striped exposure image which you can print on acetate and use as your test mask don't forget to double up and glue it).\nStart out with a time of 10 minutes total, divide it into four 2 1/2 minutes periods and expose a sample board moving a piece of carboard each 2 1/2 minutes so that one segment is exposed for 2 1/2 minutes next for 5 minutes, then 7 1/2 and finally the full 10 minutes. Remove and clean the board using paper towels and paint thinner to see which areas became hard and which have not. If it is almost all hard or all removed, double or half the times and try again with a clean piece of PC board. Use these timings to determine a suggested exposure time for your first board.\n\nWarning! Once the mask has hardened it is almost impossible to remove, determine your exposure times carefully before committing your circuit board to this process. Warning! Once the mask has hardened it is almost impossible to remove, determine your exposure times carefully before committing your circuit board to this process. If you are consistent in preparing your boards you should not have to change the exposure times.\nUsing the timings you derived from the test, expose your mask. After exposure of your finished board remove it from the UV box, remove the solder mask and peel back the acetate cover sheet. You should see the paint sticking to this sheet where the pads appear on your mask but not elsewhere on the board . Now using paper toweling and remove the unexposed paint with paint thinner. All the paint should be removed from the copper pads and vias but not the traces, clean the board back and front and dry with paper toweling. To finish hardening your mask first inspect the unexposed areas and using sharp tool remove any paint from unwanted areas. Then place the board in your UV exposure box and expose for at least twice to 3 times the original exposure time. Process the second side, if needed, in the same manner.", "step_imgs": ["https://cdn.instructables.com/FLC/PG3U/JTMSIREY/FLCPG3UJTMSIREY.LARGE.jpg", "https://cdn.instructables.com/FOE/V3AW/JTMSIRHY/FOEV3AWJTMSIRHY.LARGE.jpg", "https://cdn.instructables.com/FSN/9JAG/JTMSIRD2/FSN9JAGJTMSIRD2.LARGE.jpg", "https://cdn.instructables.com/F6J/E6P2/JTMSIR9P/F6JE6P2JTMSIR9P.LARGE.jpg", "https://cdn.instructables.com/FUO/QQJQ/JTMSIRHZ/FUOQQJQJTMSIRHZ.LARGE.jpg", "https://cdn.instructables.com/FPG/A5LS/JTMSW219/FPGA5LSJTMSW219.LARGE.jpg"], "step_title": "Step 11: Apply Solder Mask"}, {"step": 12, "steps_text": "Drill out the holes for vias, through-the-hole components and mounting holes. I use a drill press with a drill vice for the wire size bits. I find that the board is easier to handle if it is drilled before cutting to final size.", "step_imgs": ["https://cdn.instructables.com/FGN/S419/JTMSIVPA/FGNS419JTMSIVPA.LARGE.jpg", "https://cdn.instructables.com/FTG/S18B/JTMSIVP9/FTGS18BJTMSIVP9.LARGE.jpg"], "step_title": "Step 12: Drill Your Board"}, {"step": 13, "steps_text": "Using the board profile lines as a guide, trim the board using a rotary tool and cutoff wheel, File edges and round corners", "step_imgs": ["https://cdn.instructables.com/FSI/EKFN/JTMSIVPC/FSIEKFNJTMSIVPC.LARGE.jpg", "https://cdn.instructables.com/F7Q/33L5/JTMSIVPB/F7Q33L5JTMSIVPB.LARGE.jpg", "https://cdn.instructables.com/FTA/Q4G8/JTMSIVPF/FTAQ4G8JTMSIVPF.LARGE.jpg"], "step_title": "Step 13: Cut to Final Size"}, {"step": 14, "steps_text": "I usually hand solder the SMD parts first, then the vias and finally through-the-hole components.\nI made this device to hold down SMD components when soldering from couple of dowels some washers boles and nuts. I apply a little liquid flux to the SMD pads hold the component down then solder in place.\nA trick for the vias is to flatten a bit of the wire end with a pair of plyers so they do not drop through the via hole. Solder on the front side then bend the wire over and solder on the back.\nYour board is complete and ready to test.\nI hope this instructable though long was helpful. Please feel free to provide constructive comments or ideas.\nThanks for taking the time to look at my process and have fun building your electronic projects.", "step_imgs": ["https://cdn.instructables.com/FS2/SEQH/JTMSIXKT/FS2SEQHJTMSIXKT.LARGE.jpg", "https://cdn.instructables.com/FWS/2CME/JTMSIXKZ/FWS2CMEJTMSIXKZ.LARGE.jpg", "https://cdn.instructables.com/FA2/67ZF/JTMSIXKW/FA267ZFJTMSIXKW.LARGE.jpg", "https://cdn.instructables.com/FZH/CLUH/JTMSIXLT/FZHCLUHJTMSIXLT.LARGE.jpg", "https://cdn.instructables.com/FU6/0GOW/JTMSIXLX/FU60GOWJTMSIXLX.LARGE.jpg", "https://cdn.instructables.com/FWB/EXMJ/JTMSIXM0/FWBEXMJJTMSIXM0.LARGE.jpg", "https://cdn.instructables.com/FMK/XW85/JTMSIXNU/FMKXW85JTMSIXNU.LARGE.jpg"], "step_title": "Step 14: Populate Your Board"}], "channel": "Electronics"}, {"category": "Technology", "description": "For hiking, I wanted a small lightweight raft for crossing\nrivers and creeks, that I can easily toss into my backpack and carry with me. The design should be very basic, just two layers of fabric welded together to from the tube and floor, with a valve added, like the Klymit design or the Halkett boat (https://en.wikipedia.org/wiki/Halkett_boat).", "title": "Laserweld Your Own Inflatables", "url": "https://www.instructables.com/id/Laserweld-Your-Own-Inflatables/", "steps": [{"step": 1, "steps_text": "Nowadays you don`t have to sacrifice your rain cloak, as\nthere is TPU coated fabric available that can easily be welded together using a heat sealing iron.\nBut before building the actual raft based on my design, I\nwanted to make some prototypes (inflatables sometimes behave strange I had to find out).", "step_imgs": [], "step_title": "Step 1: Introduction"}, {"step": 2, "steps_text": "I didn`t want to use the expensive TPU material, so I\nstarted using LDPE film (100 my thickness) I had lying around. But heat sealing iron didn`t work as expected, gluing doesn`t work with LDPE, so what could I do?", "step_imgs": ["https://cdn.instructables.com/FH3/209R/JTMSJ83D/FH3209RJTMSJ83D.LARGE.jpg"], "step_title": "Step 2: LDPE"}, {"step": 3, "steps_text": "Having access to a CO2 laser cutter, I thought that it might\nbe possible to reduce the cutting power to near zero and increase the speed to weld two sheets of LDPE together- but it either had no effect on the material at all or the laser beam cut right through it.", "step_imgs": [], "step_title": "Step 3: The Problem.."}, {"step": 4, "steps_text": "Then it dawned on me: if I set the laser beam to be out of focus, it\nautomatically widens the beam, thus affecting a larger area and also reducing the amount of energy applied per mm\u00b2. In my first try, the two sheets of LDPE film were welded nicely together.\nAll I had to do was move the lens holder to the top position and play around with the power and speed settings. And make sure the material lied really flat, as wrinkles affect the quality of the seam.\nIt is also possible to weld and cut with the same file, no\nneed to stop and refocus for cutting- just use more power to cut through the material, the cutting edge won`t be perfect as the beam is out of focus, but in my case it didn`t matter.", "step_imgs": ["https://cdn.instructables.com/FFH/0LQQ/JTMSJ83Y/FFH0LQQJTMSJ83Y.LARGE.jpg", "https://cdn.instructables.com/FXP/OHB2/JTMSJ85D/FXPOHB2JTMSJ85D.LARGE.jpg", "https://cdn.instructables.com/FXE/P0CC/JTMSJ85G/FXEP0CCJTMSJ85G.LARGE.jpg", "https://cdn.instructables.com/F5J/7CSY/JTMSJ886/F5J7CSYJTMSJ886.LARGE.jpg"], "step_title": "Step 4: Solution"}, {"step": 5, "steps_text": "I didn`t stop with making prototypes for my\nraft, but made all kind of oddly shaped inflatables, as you can see. You can also fill them with water, make lamp shades,wearables or ice\u201dcubes\u201d... there is no limits.\nI use an old 60 watt CO2 laser, so the settings provided in the file attached might not work with your machine, but it is a good starting point.\nHope, you enjoyed my instructable. And packraft is next.", "step_imgs": ["https://cdn.instructables.com/F8H/9XKW/JTMSJ88I/F8H9XKWJTMSJ88I.LARGE.jpg", "https://cdn.instructables.com/F9Z/0EBC/JTMSJ865/F9Z0EBCJTMSJ865.LARGE.jpg", "https://cdn.instructables.com/FE7/RANL/JTMSJ86L/FE7RANLJTMSJ86L.LARGE.jpg", "https://cdn.instructables.com/FIN/CCWC/JTMSJ87U/FINCCWCJTMSJ87U.LARGE.jpg", "https://cdn.instructables.com/FUK/TCI0/JTMSJ87V/FUKTCI0JTMSJ87V.LARGE.jpg"], "step_title": "Step 5:"}], "channel": "Lasers"}, {"category": "Technology", "description": "A 3D printed electric motor with a built in AA battery holder. The last step has the necessary .STL files.\nMaterials needed:\n14 gauge wire (or large paper clip)\n3x12mm neoydynium magnet\n2-3 feet of enameled magnet wire\nAA Battery\nM3 Bolts", "title": "3D Printed Electric Motor", "url": "https://www.instructables.com/id/3D-Printed-Electric-Motor/", "steps": [{"step": 1, "steps_text": "An electric motor has two primary parts: A permanent magnet and a coil loop of some kind. When an electric current passes through the coil, the coil produces a magnetic field which interacts with the permanent magnet.\nThe coil ring experiences a torque causing it to rotate. The coil ring's magnetic field wants to line up with the permanent magnet's magnetic field. If the current stayed on, the coil ring would just find that position and stay there. The trick is turning off the current at just the right time and having momentum carry the ring until the current switches on again, torque is applied to the ring, and it does it over and over.", "step_imgs": [], "step_title": "Step 1: Introduction \u2014 How It Works"}, {"step": 2, "steps_text": "One of the hardest parts of making a homemade electric motor is making a symmetric loop so it doesn't wobble. A 3D printed ring makes it much easier.\nYou will need maybe two feet of enameled magnet wire\nFirst thread about two inches through the center hole and wrap the ring, fish about 3 inches back through the top or bottom hole on the other side, and fish through the center hole\nCompletely sand one shaft end, but only sand the bottom of the other. See illustration above for clearer instructions.", "step_imgs": ["https://cdn.instructables.com/FT6/YHSV/JTIYMNDG/FT6YHSVJTIYMNDG.LARGE.jpg", "https://cdn.instructables.com/FBP/TICP/JTIYMOH8/FBPTICPJTIYMOH8.LARGE.jpg"], "step_title": "Step 2: The Coil Ring"}, {"step": 3, "steps_text": "Please note: The version shown is without a switch holder.\nThe blue rods is where the 14 gauge wire is inserted. The metal rod of a large paper clip would likely work as well.\nThe shafts of the coil ring (shown in green) rotated very well in the cavity.\nThe battery is held in place with two M3 bolts gently applying pressure. The battery could also be held in place with some aluminum foil making electrical contact with both ends of the battery.\nElectrically it is very simple: The circuit simple connects the positive and negative ends of the battery to the 14 gauge wire ends (the blue rods in the diagram)", "step_imgs": ["https://cdn.instructables.com/FVK/SMAG/JTIYMQ55/FVKSMAGJTIYMQ55.LARGE.jpg"], "step_title": "Step 3: The Base"}, {"step": 4, "steps_text": "The STL file contains a model without the holder for the switch.", "step_imgs": [], "step_title": "Step 4: The Files"}], "channel": "3D Printing"}, {"category": "Technology", "description": "I have made a survival, emergency pocket power bank. As we are now so much surrounded by our gadgets especially cell phones all requiring power on the go. Often we land up into the situation wherein we need to make that one call or reach out to someone or in a situation of panic or distress this pocketable power bank comes in handy. It is made just to charge your dead mobile phone to about 7 to 8 % so that you can make that urgent emergency contact or a call in such kind of situation. This power bank then discharges after that life saving 7 to 8% of charge to your cell phone. It can then be recharged once again for that kind of situations or emergency situation. There are just a handful of components required to make one on your own.", "title": "DIY Emergency Pocket Power Bank", "url": "https://www.instructables.com/id/DIY-Emergency-Pocket-Power-Bank/", "steps": [{"step": 1, "steps_text": "I made a body of this power bank form pieces of acrylic. Sadly though I do not have access to the 3d printer yet else I could have printed the enclosure. I measured the components and cut a few pieces of acrylic form an old registration plate of a car. Then I superglued all together making sure that the sides are perfect right angles else it won't hold together for long and would look ugly too.", "step_imgs": ["https://cdn.instructables.com/FMW/7KCI/JTMSW0VW/FMW7KCIJTMSW0VW.LARGE.jpg", "https://cdn.instructables.com/FU7/WJ2Z/JTMSW0VV/FU7WJ2ZJTMSW0VV.LARGE.jpg"], "step_title": "Step 1: Making a Enclosure of Power Bank Form Acrylic Pieces"}, {"step": 2, "steps_text": "We will need just three main components. 1S lipo battery that is typical of RC hobby drone. You can easily get hold of one of them to form an RC hobby store. One I am using here is of capacity 400 mA. A most important component that you will need is a 1S power bank module that supports charging of connected 1S battery via micro USB port on board and it has full-fledged USB port wherein we will connect our dead mobile phone to charge it with any available USB cable. I am going to keep one short length USB cable always connected as in panic or emergency situation it should be handy and one should not feel helpless, that though having a power bank in your pocket you couldn't make that call as there was no USB cable to charge your phone. We will also require some miscellaneous wire to wire it up and a slider switch to power on and off our power bank.", "step_imgs": ["https://cdn.instructables.com/FTV/41RM/JTMSW0VX/FTV41RMJTMSW0VX.LARGE.jpg", "https://cdn.instructables.com/FTH/GMXG/JTMSW0VY/FTHGMXGJTMSW0VY.LARGE.jpg", "https://cdn.instructables.com/F0A/0AT5/JTMSW0WG/F0A0AT5JTMSW0WG.LARGE.jpg"], "step_title": "Step 2: Electronics Required and Battery"}, {"step": 3, "steps_text": "Soldering electronics in this project was like a child's play. I have connected switch a battery and power bank module as shown in the picture, that completes this step.", "step_imgs": ["https://cdn.instructables.com/FMX/WTNY/JTMSW0WH/FMXWTNYJTMSW0WH.LARGE.jpg"], "step_title": "Step 3: Soldering Electronics"}, {"step": 4, "steps_text": "I made a slot for the charge in-out ports as shown in the picture above in one of the side plates of acrylic and hot glued power bank module in place. In the other plate, I made a slot for sliding switch and hot glued it in place. Then I placed the battery and arranged the wires and super glued all together. You can see the completed unit in one of the pictures.", "step_imgs": ["https://cdn.instructables.com/FRM/D8MC/JTMSW0WI/FRMD8MCJTMSW0WI.LARGE.jpg", "https://cdn.instructables.com/FML/CKXB/JTMSW0WJ/FMLCKXBJTMSW0WJ.LARGE.jpg", "https://cdn.instructables.com/F1B/I3MX/JTMSW0WK/F1BI3MXJTMSW0WK.LARGE.jpg", "https://cdn.instructables.com/FLB/MREA/JTMSW0W3/FLBMREAJTMSW0W3.LARGE.jpg", "https://cdn.instructables.com/FBW/H8QQ/JTMSW0WL/FBWH8QQJTMSW0WL.LARGE.jpg", "https://cdn.instructables.com/FGW/ELOT/JTMSW0W1/FGWELOTJTMSW0W1.LARGE.jpg", "https://cdn.instructables.com/FSR/4JVY/JTMSW3JR/FSR4JVYJTMSW3JR.LARGE.jpg"], "step_title": "Step 4: Assembling and Putting All Together"}, {"step": 5, "steps_text": "I got my hands on to the leopard skin pattern self-adhesive wrap. This is just not by coincidence it's symbolic. Just like panther runs so fast for a short distance and then gets exhausted in the same way this power bank will just boost your phone for that life-saving call and it will then get exhausted ha ha ha I think my analogy was a bit too weird. But I wrapped so that it looks good and then I carefully cut out the openings for the ports and switch in the wrapped power bank. Now it's time to test.", "step_imgs": ["https://cdn.instructables.com/FVF/5WGX/JTMSW0VN/FVF5WGXJTMSW0VN.LARGE.jpg", "https://cdn.instructables.com/FX2/DXDW/JTMSW0VO/FX2DXDWJTMSW0VO.LARGE.jpg", "https://cdn.instructables.com/FC5/L030/JTMSW0VP/FC5L030JTMSW0VP.LARGE.jpg", "https://cdn.instructables.com/FX9/R59I/JTMSW0VQ/FX9R59IJTMSW0VQ.LARGE.jpg"], "step_title": "Step 5: Applying Leopard Pattern Film or Wrap"}, {"step": 6, "steps_text": "As shown in the pictures this power bank is truly compact and portable and you can easily place it in your pocket or in your backpack while going hiking or some adventure trip. This will easily fit into any of your trouser regular pockets. Finally, I have shown that it functions well as expected and the phone I am holding is getting charged easily by power bank. I have tested it and I found that form total discharge state of say about (4000 mAh capacity of phone battery) it can boost your phone up to about 7 to 8% with this 400 mAh battery (used in power bank) and that is what the purpose of this power bank is all about. I hope that many of you would find this project useful. Thank you all for your time and do not forget to give this instructable a heart It will be a great motivation for me.", "step_imgs": ["https://cdn.instructables.com/FNK/J8E6/JTMSW0VR/FNKJ8E6JTMSW0VR.LARGE.jpg", "https://cdn.instructables.com/FH3/QYIE/JTMSW0VS/FH3QYIEJTMSW0VS.LARGE.jpg", "https://cdn.instructables.com/FYJ/LNVA/JTMSW0VT/FYJLNVAJTMSW0VT.LARGE.jpg"], "step_title": "Step 6: Usability and Test"}], "channel": "Electronics"}, {"category": "Technology", "description": "Hello!\nMy name is David, I am a 14-year-old boy living in Spain and this is my first Instructable. I have been building robots and fixing old computers for some time now and my robotics teacher told me that it was good time to start sharing with other people what I have learnt. So here we go!\nOne day a friend of mine gave me a 3D model to build a robot and some components: One arduino nano microcontroller and two servo motors, with these 3 things I started to build my little robot.\nIn this Instructable I am going to share with you how to make this robot, also I will include the 3D model and the code that I have written, so you can have all that it is needed to make your own robotic rat!", "title": "Robotic Rat", "url": "https://www.instructables.com/id/Robotic-Rat/", "steps": [{"step": 1, "steps_text": "- Arduino Nano microcontroller\n- 2 SG90 servo motors (You can find them in Amazon, or in some online shops)\n- You will have to print the 3D model or you can build a structure with cardboard or plastic. I used this model: https://www.tinkercad.com/things/12eU8UHtMSB from Tinker Robot Labs\n- Some wires, and a small breadboard\n- A 9 Volt battery and a connector\nAlso you will need to use the arduino IDE, you can download it in the next link: https://www.arduino.cc/en/Main/Software", "step_imgs": ["https://cdn.instructables.com/F6N/5P18/JTMSFS8H/F6N5P18JTMSFS8H.LARGE.jpg"], "step_title": "Step 1: What You Need:"}, {"step": 2, "steps_text": "Before starting the robot you have to do one previous step. You need to find the middle position of the servo. A servo can turn 180 degrees (half a circumference), and you need to find where is the 90 degree position first to be able to put the legs perpendicular to the body. To do this I wrote a program that puts the servos in the 90\u00ba position. Once the servos are at 90\u00ba you will have a reference point of where the servo will be at the beginning of the program.\nThis is the program that I use to center the servos:\n#include\nServo Front;\nServo Back;\nvoid setup() {\nFront.attach(9);\nBack.attach(6);\n}\nvoid loop(){\nFront.write(90);\nBack.write(90);\n}\nYou will have to make small adjustments to the software or the hardware to improve the movement of the robot and get a perfect gait, but first let's make the robot move, and at the end of the project, you will be able to do these adjustments.", "step_imgs": ["https://cdn.instructables.com/FFL/BQQ3/JTMSFXU7/FFLBQQ3JTMSFXU7.LARGE.jpg", "https://cdn.instructables.com/F9A/DGWS/JTMSFXUV/F9ADGWSJTMSFXUV.LARGE.jpg"], "step_title": "Step 2: Calibrating the Servos"}, {"step": 3, "steps_text": "After this you have to take the shafts of the servos and put it into the legs of the robot, to make this easier you can cut a little of the material around the hole in the legs to enter there the shafts.\nSecondly you will need to screw in the shafts with the 3D legs into the servos, when you have all in the right position, put a little dot of hot glue between the shaft and the legs to secure them in place. Be sure to put the legs at 90 degrees as seen in step 2.", "step_imgs": ["https://cdn.instructables.com/F2S/1R17/JTMSG0B0/F2S1R17JTMSG0B0.LARGE.jpg", "https://cdn.instructables.com/FC0/VOYY/JTMSG0B3/FC0VOYYJTMSG0B3.LARGE.jpg", "https://cdn.instructables.com/F3W/YVR1/JTMSG0B5/F3WYVR1JTMSG0B5.LARGE.jpg", "https://cdn.instructables.com/FR6/85XP/JTMSG0BU/FR685XPJTMSG0BU.LARGE.jpg"], "step_title": "Step 3: Assembling the Legs"}, {"step": 4, "steps_text": "Now you have to install the servos in the body of the robot, to do this you have to take the body in one hand and push in the servo, with the legs, into a hole that you have for the servo. Be sure that the wires of the servo goes in the right position, if not the servo will not fit in the chassis. There is a small slot on one of the sides of the servo hole. Use that slot for the wires.\nRepeat this step with the other set of legs.", "step_imgs": ["https://cdn.instructables.com/FVR/Y5H0/JTMSG2V1/FVRY5H0JTMSG2V1.LARGE.jpg", "https://cdn.instructables.com/FV3/H64C/JTMSG2YQ/FV3H64CJTMSG2YQ.LARGE.jpg", "https://cdn.instructables.com/FB0/7ID4/JTMSG2ZQ/FB07ID4JTMSG2ZQ.LARGE.jpg"], "step_title": "Step 4: Installing the Servos"}, {"step": 5, "steps_text": "After all these steps you will have the robot hardware finished. Now we are entering in the final part, the electronics and wiring. First, take the Arduino Nano and push it into the breadboard, then you'll have to remove the paper in the bottom side of the breadboard and glue the breadboard in the 3D model.", "step_imgs": ["https://cdn.instructables.com/F29/CN74/JTMSG39X/F29CN74JTMSG39X.LARGE.jpg", "https://cdn.instructables.com/FHC/ACY2/JTMSG3EZ/FHCACY2JTMSG3EZ.LARGE.jpg", "https://cdn.instructables.com/FOA/H6DI/JTMSG3JH/FOAH6DIJTMSG3JH.LARGE.jpg"], "step_title": "Step 5: Adding the Arduino"}, {"step": 6, "steps_text": "Let\u2019s do the wiring! In this step in which you will connect all the wires from the breadboard, to the servos.\nAll the servos have three wires, so one is for the information that the arduino sends, the orange one, other is for the +5v current, the red one, and finally the GND (or ground) wire, that is the brown one.\nTo connect the wires you may want to look at the code we have used to center the servos. In the code we can see that the servo for the front legs it is connected to the pin D9 and the other servo, the one for the back legs and tail it is connected in the port D6. this means that the orange wire of the front servo goes to the D9 pin, and the orange wire of the servo for the back legs is connected to the D6 pin. The red cable of both servos go to 5V and the brown wires of both servos go to GND (any of the GND pins of the Arduino Nano).", "step_imgs": ["https://cdn.instructables.com/FG9/KXIZ/JTMSG425/FG9KXIZJTMSG425.LARGE.jpg", "https://cdn.instructables.com/F2C/IPKR/JTMSG435/F2CIPKRJTMSG435.LARGE.jpg"], "step_title": "Step 6: Wiring"}, {"step": 7, "steps_text": "To finish the robot you have to bring it alive!, so here comes my favourite part, the code.\nHere below, I share with you the code. The key to make your robot walk with a perfect gate is to modify the program to perfectly adapt it to the weight and balance of your rat, but I only recommend this if you know a little bit of arduino's programmation. If your rat struggles to walk, write a comment and I can help you to make your rat walk with some style!.\nHere you have the code that I used:\n#include <Servo.h>\nServo Front;\nServo Back;\nvoid setup() {\nFront.attach(9);\nBack.attach(6);\nFront.write(92); // my front servo, at 90 degrees was not perfectly straight, so I had to modify the angle to 92 degrees.\nBack.write(90);\ndelay(1000); //the robot puts all legs perpendicular to the body and waits one second\n}\nvoid loop() {\n// This loop will run till you unplug the robot\n// You can modify the angles or the delay time between movements to make your robot walk quicker or slower or make bigger or smaller steps\nFront.write(132);\ndelay(100);\nBack.write(50);\ndelay(300);\nFront.write(50);\ndelay(100);\nBack.write(130);\ndelay(300);\n}\nAfter writing the program in the arduino's programming platform you can upload it in the robot and see how it moves.", "step_imgs": ["https://cdn.instructables.com/F86/R9Z7/JTMSG6W0/F86R9Z7JTMSG6W0.LARGE.jpg"], "step_title": "Step 7: And Some Code"}, {"step": 8, "steps_text": "This robot is super simple to assemble, and the program is also quite simple. It is easy to make it move... but quite complicated to make it move gracefully. If you want to start building and programming walking robots, this is a good project for you. You will learn with this project how to program a \u201cgait\u201d, the sequence of instructions to make your robot walk.\nI hope you have enjoyed my first instructables and please, if you need any help with your robot, I will be happy to assist you in English, French or Spanish.\nDavid", "step_imgs": [], "step_title": "Step 8: You Are Done!"}], "channel": "Arduino"}, {"category": "Technology", "description": "All the versions of ultrasonic radars I have found using ultrasonic detectors with arduino devices (Arduino - Radar/Ultrasonic Detector, Arduino Ultrasonic Radar Project) are very nice radars but all of them are \"blind\" radars, I mean, the radar detects something but what is it.\nSo I propose myself to develope a system able to detects objets and identyfy them. In other words a positioning system without using GPS devices but ultrasonic detectors.\nThis is the result I hope you like.", "title": "Positioning System", "url": "https://www.instructables.com/id/Positioning-System/", "steps": [{"step": 1, "steps_text": "The positioning systems is formed by three sensors stations with ultrasonic detectors and id_node 1,2 and 3 forming a rectangle or square that sweep an angle of 90\u00ba and where the distances between them are known as shown on picture 1.\nconst float distancebetween1and2 = 60.0;\nconst float distancebetween2and3 = 75.0;\nThese sensors measurement the distance and angle of other objects with id_node greater than 3 that also have an ultrasonic detector that sweeps an angle of 170\u00b0.\nAll of them send the distances, angles measured and the id_node to another master station using wireless communicactions to analyze, calculate the position of the objects using trigonometry calculation and identify them.\nTo avoid interferences the master station synchronizes all the ultrasonics detectors in that way that only one ultrasonic detector is measuring at each moment\nAfter that and using a serial communication the master station sends the information (angle, distance, id_object) to a processing sketch to plot the results.", "step_imgs": ["https://cdn.instructables.com/FYN/U7EO/JT4TLQ37/FYNU7EOJT4TLQ37.LARGE.jpg"], "step_title": "Step 1: How Does It Work?"}, {"step": 2, "steps_text": "The only function of each sensor station is to detect objects and send the list of distance, angle and id node measured to the master station.\nSo you have to update the maximum detection distance (\u201cvalid_max_distance \u201c) allowed and the minimum one (\u201cvalid_min_distance \u201c) (centimetres) to improve the detection and to limit the detection zone:\nint valid_max_distance = 80;\nint valid_min_distance = 1;\nThe id node of these sensor stations (\u201cthis_node\u201d in the code below) are 1, 2 and 3 and the id node of the master station is 0.\nconst uint16_t this_node = 01;  // Address of our node in Octal format (Node01,Node02, Node03)\nconst uint16_t other_node = 00; //Address of the master node (Node00) in Octal format\nEach sensor station sweeps and angle of 100\u00ba (\u201cmax_angle\u201d in the code below)\n#define min_angle 0\n#define max_angle 100\nAs above the only function of an object is to detect objects and send the list of distances, angles and id object measured to the master station. The id of one object (\u201cthis_node\u201d in the code below) has to be greater than 3.\nEach object sweeps and angle of 170\u00ba and as above, it is possible to update the maximum and minimum detection distance.\nconst uint16_t this_node = 04;        // Address of our node in Octal format (Node04,Node05, ...)\nconst uint16_t other_node = 00;       // Address of the master node (Node00) in Octal format\nint valid_max_distance = 80;\nint valid_min_distance = 1;\n#define min_angle 0\n#define max_angle 170", "step_imgs": ["https://cdn.instructables.com/FOW/WF58/JTIYPGXS/FOWWF58JTIYPGXS.LARGE.jpg", "https://cdn.instructables.com/FTI/EJ4A/JTMSW8ML/FTIEJ4AJTMSW8ML.LARGE.jpg"], "step_title": "Step 2: How to Configure the Three Sensor Stations and the Objects"}, {"step": 3, "steps_text": "The function of the master station is to receive the transmissions of the sensor stations and the objects and send the results using the serial port to a processing sketch to plot them. Moreover synchronizes all the objects and the three sensor stations in that way that only one of them is measuring at each time to avoid interferences.\nFirstable you have to update the distance (centimetres) between sensor 1 and 2 and the distance between 2 and 3.\nconst float distancebetween1and2 = 60.0; \nconst float distancebetween2and3 = 70.0;\nThe sketch calculates the position of the objects in the following way:\nFor all the transmissions of the objects (id_node greater than 3) look for the same distance in each transmission of the ultrasonic sensors (id_node 1, 2 or 3).\nAll these points form a list of \u201ccandidates\u201d (distance, angle, id_node) to be the position of one object (\u201cprocess_pointobject_with_pointssensor\u201d in the sketch).\nFor each \u201ccandidate\u201d of the previous list, the function \u201ccandidate_selected_between_sensor2and3\u201d calculates from the point of view of the ultrasonic sensor 2 and 3 which of them match the following trigonometry condition (see the pictures 2 and 3)\nfloat distancefroms2 = sin(radians(angle)) * distance;\nfloat distancefroms3 = cos(radians(angle_candidate)) * distance_candidate;\n\n// Trigonometry condition 1\nabs(distancefroms2 + distancefroms3 - distancebetween2and3) <= float(max_diference_distance) \nAs above, for each \"candidate\" of the previous list, the function \u201ccandidate_selected_between_sensor1and2\u201d calculates from the point of view of the ultrasonic sensor 1 and 2 which of them match the following trigonometry relation (see the picture 2 and 3)\nfloat distancefroms1 = sin(radians(angle)) * distance;<br>float distancefroms2 = cos(radians(angle_candidate)) * distance_candidate;\n\n// Trigonometry condition 2\nabs(distancefroms1 + distancefroms2 - distancebetween1and2) <= float(max_diference_distance)\nOnly the candidates (distance, angle, id_node) that matches the trigonometry conditions 1 and 2 are identified objects detected by the sensor stations 1,2 and 3.\nAfter that the results are sending by the master station to a processing sketch to plot them.", "step_imgs": ["https://cdn.instructables.com/FVI/ELKC/JT4TLQ1I/FVIELKCJT4TLQ1I.LARGE.jpg", "https://cdn.instructables.com/F03/566K/JTIYPH1L/F03566KJTIYPH1L.LARGE.jpg", "https://cdn.instructables.com/FYF/9AZV/JTMSULBI/FYF9AZVJTMSULBI.LARGE.jpg"], "step_title": "Step 3: How to Configure the Master Station"}, {"step": 4, "steps_text": "The list of material needed for one sensor station or one object is the following:\nNano board\nUltrasonic sensor\nMicro servo motor\nNRF24L01 wireless module\nNRF24L01 adapter\nand the list of material for the master station is the following:\nNano board\nNRF24L01 wireless module\nNRF24L01 adapter", "step_imgs": ["https://cdn.instructables.com/FPA/85M8/JTIYPH2I/FPA85M8JTIYPH2I.LARGE.jpg"], "step_title": "Step 4: List of Material"}], "channel": "Arduino"}, {"category": "Technology", "description": "Have you calculated the number of alkaline batteries we throw every year, around the world. It's enormous... !\nThe battery market in France is 600 million units sold each year, 25,000 tons and 0.5% of household waste. According to Ademe, this number is 1 billion and 90 million for batteries ... 80% of batteries are not recycled in Europe in 2009.\nIn France, in 2006, 2 out of 3 piles ended up in the trash: only 9,000 tons of used batteries were collected while at the same time 30,000 tons of new batteries were sold. 80% of the batteries used in Europe in 2009 are not recycled!\nWe all need to do something to make this change .... for example, to start by reducing the number of alkaline batteries used.\nA few years ago, I found a document from a French manufacturer \"Wonder\" of alkaline batteries that had surprised me. He explained how to recharge them several times ... hallucinating. Here it is.\nIn summary, here's what you need to respect to recharge an alkaline battery:\nThe terminal voltage must be greater than 1.25V for a 1.5V battery.\nThe battery should be discharged only partially (20-30%) to increase this life and are possible recharge number.\nWhen charging, the voltage at the battery terminals must not exceed 1.7V.\nThe charging current must not exceed C / 15. \"C\" is the theoretical capacity of the battery. for example C = 1100mAh for an R6 battery.\nA dozen recharge possible if this point is respected.\nIn 2017, I had enough to throw away the batteries used in the toys of my young children. So I started to test chargers (No. 1 and No. 2) batteries for so called alkaline batteries. But none of them met the load conditions explained in the Wonder manufacturer's document. In the end, the batteries recharged by these chargers were good to throw.\nI had no choice then. I had to design one myself.", "title": "Smart Charger for Alkaline Batteries", "url": "https://www.instructables.com/id/Smart-Charger-for-Alkaline-Batteries/", "steps": [{"step": 1, "steps_text": "Charge 4 1.5v AA and AAA 1.5v alkaline batteries.\nLimit the load to 1.7V per element.\nCharging current of C / 15, about 80mAh for a 1200mAh / 1.5V battery.\nDetect if the battery can be recharged.\nDetect if the battery is fully charged.\nAs a bonus, transmit the voltages of the batteries by serial link.", "step_imgs": [], "step_title": "Step 1: The Functions He Has to Fulfill"}, {"step": 2, "steps_text": "I used a box 4 batteries the cheapest possible, found on Aliexpress to use its mechanical system of fixing batteries and LEDs.\nThe electronic PCB consists only of 5 resistors for the LEDs and the battery charge. I modify this ultra simple card by cutting tracks to isolate LED power supplies and mechanical contacts to use them.\nTo be able to integrate the electronic card, I printed a box extension, which sticks on the high part of the box and is screwed on the bottom of the box. The file STL is available here.", "step_imgs": ["https://cdn.instructables.com/FCH/6MLR/JTIYMHRH/FCH6MLRJTIYMHRH.LARGE.jpg", "https://cdn.instructables.com/F1T/PD5D/JTIYMHSL/F1TPD5DJTIYMHSL.LARGE.jpg", "https://cdn.instructables.com/FDH/NHHX/JTIYMHRL/FDHNHHXJTIYMHRL.LARGE.jpg", "https://cdn.instructables.com/F06/6N4D/JTIYMHRM/F066N4DJTIYMHRM.LARGE.jpg", "https://cdn.instructables.com/FNO/L776/JTIYMHRN/FNOL776JTIYMHRN.LARGE.jpg", "https://cdn.instructables.com/F6U/71XJ/JTIYMHRO/F6U71XJJTIYMHRO.LARGE.jpg"], "step_title": "Step 2: The Box"}, {"step": 3, "steps_text": "The charger is designed around a 28 pin dsPIC30F2010.\nThese inputs / outputs will allow to:\nMeasure the battery voltages.\nControl the charge of each battery.\nControl the charge state LEDs of the batteries.\nTransmit voltages by serial link.\nThe charge of each 1.5V battery is achieved by the PWM control of a transistor 2N2222 (T1 to T4) and a resistor (R2, R5, R8, R11) limiting the current to C / 15, 83mAh. A diode 1N4148 (D1 to D4) protects the battery and the charging circuit from a possible error of setting up the battery in the case.\nThe values of resistors R2, R5, R8 and R11 can be changed to charge more + or - significant batteries. But be careful not to exceed the heat dissipation power of transistors T1 to T4.\nThe card is equipped with an ICSP connector to program the dsPIC30F2010.\nA LM317 regulator is provided to charge 9V batteries at 38mAh @ 10.2V. But the tests showed that it did not work. I do not use this function.\nThe analog inputs of the dsPIC measure the voltage across the battery when the transistors (T1 to T4) are in the off state. Thus, we know the voltage at their terminals.\nThe LEDs (DS1 to DS5) indicate the charge / discharge status of each 1.5V (DS1 to DS4) and 9V (DS5) battery.\nThe board is powered by a 12V / 1.6Ah power supply.\nThe 5V is produced by a 12v- 5V DC / DC switching board.", "step_imgs": ["https://cdn.instructables.com/FTI/2EC4/JTIYMHRK/FTI2EC4JTIYMHRK.LARGE.jpg"], "step_title": "Step 3: Electronics"}, {"step": 4, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FWR/U23K/JTIYMHSM/FWRU23KJTIYMHSM.LARGE.jpg"], "step_title": "Step 4: Schematic"}, {"step": 5, "steps_text": "The status of the LEDs indicates whether the battery is charged / discharged / not rechargeable.\nLED off: no battery or battery not rechargeable Flashing LED: charged battery LED on: battery charging\nIf the LED remains steady after 12 hours of charging, the battery is considered charged. It must be removed from the charger.", "step_imgs": ["https://cdn.instructables.com/FNW/4KUP/JTIYMHSK/FNW4KUPJTIYMHSK.LARGE.jpg"], "step_title": "Step 5: Operation"}, {"step": 6, "steps_text": "They are designed to charge 4 1.5V batteries and a 9V battery.\nUnfortunately the 9V battery charging tests were inconclusive: the 9V batteries are discharging instead of charging. So I did not use this function later, even though the program measures the voltage of the 9V battery and transmits it by serial link.\nIts dimensions are: 68x38mm.\nThe DC / DC power adapter must be configured as follows: solder the ADJ connectors together. Then adjust the potentiometer to output a voltage of 5V. The \"5V\" pre-setting of the card does not work properly.", "step_imgs": ["https://cdn.instructables.com/FCS/VDTR/JTIYMHRQ/FCSVDTRJTIYMHRQ.LARGE.jpg", "https://cdn.instructables.com/FEF/VLZS/JTIYMHRT/FEFVLZSJTIYMHRT.LARGE.jpg", "https://cdn.instructables.com/FCK/MAUV/JTIYMHRI/FCKMAUVJTIYMHRI.LARGE.jpg"], "step_title": "Step 6: The PCB"}, {"step": 7, "steps_text": "1 case for 4 batteries\n1 PCB + components\n1 power supply card 12vDC / 5Vdc 0.8Ah\n1 block 220Vac socket (or 110Vac) to 12V / 1.6Ah\n1 case extension (3D printing)\nThe complete component nomenclature is available here.", "step_imgs": [], "step_title": "Step 7: Nomenclature"}, {"step": 8, "steps_text": "The configuration of the communication is as follows: 9600 bauds, 1 start bit, 1 stop bit, no parity.\nThe output voltage levels are TTL.", "step_imgs": [], "step_title": "Step 8: Serial Communication"}, {"step": 9, "steps_text": "You want to do it, no worries, I propose several kits depending on the budget you want to put.\nThey are available in the shop of my website.\nAll files are available here.", "step_imgs": [], "step_title": "Step 9: Do It Yourself"}], "channel": "Electronics"}, {"category": "Technology", "description": "hey before I talk about myself and why I decided to go on this journey, I will like to say please check out my vid for an epic riding montage and my practices of making also importantly please subscribe it will really help my college course, because my lecture challenged me to get 1000 subscribers by the end of this college year to show improvement and continuous progress,\nokay, now we got that boring stuff out the way lets talk about why I did this?\nI've been making wooden longboards for years which you can actually see the first one I made here https://www.instructables.com/id/How-to-Make-a-Lo... (they are much better now) ;-) but I wanted to try something new which would give me the next rush, so I wanted an electronic longboard which could get me going 30mph + and at least a 12 mile range and a hand made carbon fibre deck which I also never done before , also it had to get me to college to save my dads car from potholes so it had to get up some mean hills, so lets get started\nthis instructable was inspired from this build https://www.instructables.com/id/DIY-Electric-Longboard/ who promoted it being a budget build, this was definitely something that I wanted to copy and steal use quality components, but I wanted mine to be even faster and much more range!", "title": "Insane Electric Longboard Budet With Carbon Fiber Deck", "url": "https://www.instructables.com/id/Insane-Electric-Longboard-Budet-With-Carbon-Fiber-/", "steps": [{"step": 1, "steps_text": "so to start any good project you will need some materials, I've brought the materials to form a range of suppliers including hobbyking aliexpress ebay and homebase\n6374 192kv motor , this motor was chosen because 192kv is the perfect hotspot for torque(= hill climbing) and speed and 63mm 74mm motor because it only being used singlely not dual hub and bigger motor = better colling which should therefore last longer \u00a364.11 Hobbyking\nHobbyKing motor mount, this connects motor to truck \u00a36.74\nxt-90 anti spark connectors, these are great for the loop key switches to turn of the long board and to connect battery pack to the vesc \u00a34.51 HobbyKing\nxt 60 connectors, i used these as the charger port to create an diferncial between the xt90 loop key switch \u00a32.19 HobbyKing\n12 awg wire buy red and black for positive and negative HobbyKing \u00a33.20\n4mm bullet connectos for connecting vesc cables to motor HobbyKing\u00a32.22\nflipsky vesc 4.12 this is proberllry one of the most important parts of an electronic longboard build because this is the brains behind the longboard this tells the motor what to do and helps protect the battery also adds alot of satey nets includeing if the remote cuts out the longboard will break and turns of board if something oveer heats Ebay \u00a345\n10s 35a bms, this also super important because this will keep the 18650 batteries in ballence which is crucicial otherwise the pack will eventalley break and it may be a fire risk also this allows the pack to charge safely Ebay \u00a38.99\n106xl belt Ebay \u00a32.27\ninsulation paper this is really important helps stop short circuits and fires Ebay \u00a32.68\n2.4ghz remote Ebay \u00a321\n18650 battery samsung 30q, it is crucial you buy these batteries from nkon youll need 30 around euro 3.60\n10s 36v output 42v charger , i only reconmend a 4 amp max charger or lower to prolong the life of battery pack as they are expenisve this will take longer to charge thogh Aliexpress\n83mm wheels these wheels are important as they are the only cheap ones which fit the thingverse gear Ebay \u00a317\ntrucks 180mm Aliexpress \u00a324\n16t 8mm gear aliexpress \u00a32.82\npine board from home base \u00a310\ngriptape ebay \u00a32.95\n18650 battery holder\n3d printed gears\n---------------------------------------------------------------------------------------\ntools\njig saw\nsandpaper\nsander or spokeshave\nfiles and rasps\ndrill\nrouter (optional)\nepoxy resin\ncarbon fiber fabric\nbattery spot welder (optional)\n3d printer (optional)", "step_imgs": ["https://cdn.instructables.com/F2D/K8X1/JSOZ3BFD/F2DK8X1JSOZ3BFD.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "the reason why I used pine for the longboard deck is because my local timber shop was closed , I wanted to use poplar wood because of its lightweight properties , but then again this pre-prepared pine board makes it more available for anyone to do at home easily who may not have expensive tools like tables saws and thicknessers, they took a lot of selling models and makes to save up for\nnow you got your timber ready you will want to draw your design or print out a template of the deck mine is 39\" long and 26cm wide i recommend a more rectanlear design so you have room to store your container for the batteries and vesc\none mistake that i did make is that i did not mark out the rebates for the batterys and the coves for cool aerodynamic looks before it was cut so it was really hard to mark it all out sqaure when the board was alleady cut in a curvy shape so markeing yp guised for the router was hard to jue there not being a stright esdge to mark ot from,\nonece etherything has been marked out you will be ready to router in detail or compartments for batterys then cut the template with the jig saw use a fine cut balde, and if your desighn has samll complex curvrs in i recon mend useing a thiner blade to enable you to get around them curves and to reduce burning and heat stress which will mean your blades last longer\nafter its cut you will want to refine your beatiful shape, i used a range of tools , like a spoke shave which is allways a plesure to use and a files vareious sanding blocks, and just shape away untill its all symetrical\ni aslo wanted to add in some wheel wheels which i thought whould add a allmost formula car vibe to my deck, to get this i used a rasp then further refined it with a sander\nthen round over all the coners for the grip tape side i just used a round over bit on an router then for the bootom , the ends are round over then the sides i used a chamfer to give it extra style\ngive it a final sand to around 120 grit, if you did not want to carbon fiber it and keep the deck costing \u00a310 just varnish it now or paint it then varnish and your finnsih the deck", "step_imgs": ["https://cdn.instructables.com/FUO/V808/JTMSFCF0/FUOV808JTMSFCF0.LARGE.jpg", "https://cdn.instructables.com/F1C/3VJC/JTMSFCFF/F1C3VJCJTMSFCFF.LARGE.jpg"], "step_title": "Step 2: Maneufacture of the Deck"}, {"step": 3, "steps_text": "now for a modern aesthetic to too ad strength to the pla 3d prints will cover all the parts in carbon fibre, check out my video on good methods\nhttps://youtu.be/caJs6WLj5MA\nNow your deck is completed your ready to carbon fibre the board and make it look modernly cool, I used a 1 to 2 part epoxy resin, if you want to save money you can you a polyester resin but its a super strong solvent and will make any room stink and its corrosive to skin, also you'll want to grab some carbon fibre , I just bought the generic sort from eBay properly not the cheapest place\nI recommend spraying your deck with a coat of matte black spray paint because as we are only doing a one layer skin of carbon fibre there is a tendency of the fabric being slightly transparent and you could see the grain underneath which will just ruin the general aesthetic\nthrough trial and error I found the easiest method is to spay a contact adhesive on both parts then lay the fabric on top to get a instant pain free bound, it took a lot of hassle when I just put the fabric directly on top of the epoxy resin, hard to get it to stick to curves, but the contact adhesive gets rid of that, then your ready to apply your first coat of resin\nonce you applied your first coat you'll want to do the next one in like an hours time whilst it was still slightly tacky this is best for layer adhesion, you should have 3 coats of resin then wait 2 days for it to dry otherwise when you wet sand the water will cause a reaction with the curing epoxy and turn it cloudy\njust sand whilst increasing the grits recommend starting on 120 and go to the finest possible grit you have, I went up to 2000 but more would be better\nnow your ready to polish I first used a cutting compound which is used in cars, sort of like a whigting thooth paste for your paint work, i buffed it with a orbital sand posilshing whell i made my self by placeing vecro on a lambs wall pad\nthen after its buffed up you want to apply a car wax on the carbon fiber t give it a bright glossy shine, this board whould be perfect for mirrors a permimant black mirror that goes 30mph", "step_imgs": [], "step_title": "Step 3: Aplicattion of Carbon Fibre"}, {"step": 4, "steps_text": "this is by far the most dangerous step of any electronic longboard build so please do a ton of research on the esk8 forum about the 18650 batteries, they are super dangerous if done poorly ill give you a brief guide as I want you do read on this subject from more experienced people than myself. soon I'm making a detailed video on batteries, I prefer videos due to being heavily dyslexic\nhttps://youtu.be/od9hAs69crk\nso first things first you'll want to buy genuine 18650 batteries, I'm going to tell you something which would have saved me a lot of time and money, only go for Samsung 30q's from nkon https://eu.nkon.nl/samsung-inr-18650-30q-3000mah.h... they grantee all the batteries are genuine and ship worldwide for a super reasonable cost, beware there are a lot of fakes, also Samsung 30q are a tried and tested battery they have a great current output (15a) which gets you the speed and a good capacity of (3000mah) which gives you the range , I once made the mistake of buying 2nd laptop batteries thinking it would save me money but no it actually wasted money because they are only like 2 amps which will not get you the speed, not all 18650 are created equal so please get Samsung 30q from nkon, then there will be no problems,\nI create a 10s3p battery pack which basically means 3 batteries welded in parallel which increases the amperage giving you a capacity of 9000 mah, like 1 set then you make 10 of them sets and welded in series giving you a the higher voltage of 42 volts which will get your motor zooming down the roads of 30mph\nfirst, you will have to prepare your batteries, you will want to make sure the voltage difference is no more than 0.05 volts, you need a voltmeter for this build. also, you will want to place some insulation paper on the top of every battery (positive side) to save any risk of shortages and the fire,\nnow the battery is prepared you are ready to connect them together you can use my battery holders here https://www.thingiverse.com/thing:3499015 which I designed to dovetail together and use mechano as connections or you can just spot weld\nonce your battery is glued or connected together in 10 sets of 3 you are ready to start connecting the nickel strip. so with the sets of 3 just put a nickel strip across the negative and positive terminal and repeat this step to all the sets are done,\nthen connect each part like in the 2nd diagram each positive to negative\nnow you're ready to wire the bms leads to follow the first diagram\nblack one goes on the first negative then the red ones go on each positive of the 10 groups,\nnext wire the other wires to your bms instructions and add an xt60 for the charge port and test each connection to make sure everything is connected with a voltmeter if each battery is 3,2 volts the whole pack should be 32volts", "step_imgs": ["https://cdn.instructables.com/FWH/1NI9/JTCRHUAQ/FWH1NI9JTCRHUAQ.LARGE.jpg", "https://cdn.instructables.com/FSB/CT8X/JTEN2Q6F/FSBCT8XJTEN2Q6F.LARGE.jpg", "https://cdn.instructables.com/FG4/TE5Y/JTMSFCG5/FG4TE5YJTMSFCG5.LARGE.jpg", "https://cdn.instructables.com/F2N/3AKP/JTMSFCH0/F2N3AKPJTMSFCH0.LARGE.jpg", "https://cdn.instructables.com/FU0/1A05/JTMSFCHG/FU01A05JTMSFCHG.LARGE.jpg"], "step_title": "Step 4: Battery Makeing"}, {"step": 5, "steps_text": "now your battery is made its relatively straight forward to put together as you can see from my diagram above, its more simple than an RC car, so lets start with making the lop key, a loop key is an anti-spark XT-90 with a piece of wire connecting both terminals together, then female part is soldered between the negative part of the battery so when you plug it in it creates a full circuit, this saves the need of the expensive switches that can support the amout of high amps necessary (dont use normal 12v switches on eBay they will not work), lets sort out the charging port used an xt60 to void confusion with the xt90 loop key because that would definitely create a short circuit which can case fire.\nnow the switches and charge port is sorted you're ready to connect the vesc, I recommend using an xt90 to connect the vesc to the power source. then you are ready to connect the receiver to the vesc this is relatively straight forward it will come with instructions on how to use your specific model, you will also have to bind it to the remote.\nthen you'll have to connect the phase wires of the motor just make sure the middle wire of the vesc is connected to the middle wire of the motor then nothing is gonna break, when you use your board if it reverses when you throttle, it means you got the 2 outside phase wires wrong way round.\nnow its all connected you're ready to download the vesc tool https://vesc-project.com/node/17 this is a free programme, which helps you configure your vesc this makes sure your not pushing too much or too little amps to your motor which can break your motor, just use the motor setup wizard and input wizard to set it up properly", "step_imgs": ["https://cdn.instructables.com/FN1/6SGO/JTMSDUGY/FN16SGOJTMSDUGY.LARGE.jpg", "https://cdn.instructables.com/FFQ/7N15/JTMSDX86/FFQ7N15JTMSDX86.LARGE.jpg", "https://cdn.instructables.com/FLW/SZY3/JTMSEKFU/FLWSZY3JTMSEKFU.LARGE.jpg"], "step_title": "Step 5: Connecting Board"}, {"step": 6, "steps_text": "once you've put your esk8 parts in the enclosure, and installed your loop key your part of the eks8 team if you have any questions please feel free to ask me and I really hope you liked this instructable and please give me feedback! and please vote for me", "step_imgs": ["https://cdn.instructables.com/FKC/N635/JTMSFCLE/FKCN635JTMSFCLE.LARGE.jpg"], "step_title": "Step 6: Your Ready to Ride!!"}], "channel": "Electronics"}, {"category": "Technology", "description": "For quite a while I have been working with Arduino. It is easy, cheap and gets the job done. But lately I have been inclining more towards IoT projects. So I started using ESP development board and it worked perfectly. But now I want to move towards bigger projects like image processing etc. And the best board for this purpose is Raspberry Pi.\nIn this post I will be sharing basic information about Raspberry Pi and how to get started. So you can start making cool projects along with me.", "title": "Beginners Guide to Raspberry Pi", "url": "https://www.instructables.com/id/Beginners-Guide-to-Raspberry-Pi/", "steps": [{"step": 1, "steps_text": "First question that arise in mind is \"What really is Raspberry pi?\" so let me start with introducing Pi to all the beginners.\nRaspberry Pi is a cheap single board computer introduced in 2012 by Raspberry Pi Foundation. This credit card sized computer is very popular among the maker community. There are may models of raspberry pi Raspberry Pi 3 model B+ being the latest. There is also a smaller version named Raspberry Pi Zero and Zero W these are incredibly small boards.\nBelow I have listed specifications of the two popular boards.\nRaspberry Pi 3 Model B+:\nARM cortex-A53 1.4GHz processor\n1GB RAM\nIntegrated WiFi 2.4GHz/5GHz\nBluetooth 4.2\n300Mbps Ethernet\n4 USB ports, 1 HDMI , 1 earphone jack and a micro USB power port.\nRaspberry Pi Zero W:\nBCM2835 1GHZ processor\n512MB RAM\nIntegrated WiFi 2.4GHz\nBluetooth 4.0\n2 USB ports, 1 mini HDMI\nYou can learn more about these boards and other, Check out Raspberry Pi Foundation's official website raspberrypi.org.", "step_imgs": ["https://cdn.instructables.com/FIT/O51B/JTEN9JZ6/FITO51BJTEN9JZ6.LARGE.jpg", "https://cdn.instructables.com/F4F/CYI8/JTEN9JZW/F4FCYI8JTEN9JZW.LARGE.jpg"], "step_title": "Step 1: What Is Raspberry Pi ?"}, {"step": 2, "steps_text": "Here I have listed all the materials you will be needing to get started.\nHardware Components:\nRaspberry Pi\nRaspberry Pi Zero W (Amazon Link)\nOR\nRaspberry Pi 3 Model B+ (Amazon Link)|\nMicro SD card (Amazon Link)\nMicro SD card Reader (Amazon Link)\nOTG cable (for Pi Zero w) (Amazon Link)\nHDMI cable (Amazon Link)\n\nOR\nHDMI to mini HDMI (Amazon Link)\nOR you can get a Raspberry Pi Starter kit (Amazon Link)\nMini Wireless Keyboard (Amazon Link)\nSoftware Requirements:\nRaspbian\n7-Zip\nWin32diskimager", "step_imgs": ["https://cdn.instructables.com/FQO/0WM5/JTIYHRG2/FQO0WM5JTIYHRG2.LARGE.jpg"], "step_title": "Step 2: Requirements:"}, {"step": 3, "steps_text": "Raspberry Pi is a computer and every computer requires an Operating System to work. There are may OS available for Raspberry Pi but I will be using Raspbian which is the official OS by Raspberrypi Foundation.\nTo get started:\nFirst download the Raspbian Stretch\nNext download and install 7-Zip\nExtract the Raspbian Zip file using 7-Zip\nNext download and install Win32diskimager\nInsert the SD card into the card reader and plug it in the computer\nNote the name of drive, in my case it is (I:) drive.\nOpen the disk imager and select the SD card drive.\nClick on the file icon and navigate to the folder where Raspbian image is extracted.\nSelect the image and click on \"write\".\nNow it will take few minutes for the completion of burning process. Make sure you do not cancel it in between.", "step_imgs": ["https://cdn.instructables.com/FRT/8VL0/JSYZ7LZ5/FRT8VL0JSYZ7LZ5.LARGE.jpg", "https://cdn.instructables.com/FPL/HP8Y/JSYZ7M9V/FPLHP8YJSYZ7M9V.LARGE.jpg", "https://cdn.instructables.com/F7D/VO2R/JSYZ7MW2/F7DVO2RJSYZ7MW2.LARGE.jpg", "https://cdn.instructables.com/F97/KEMB/JSYZ7N0V/F97KEMBJSYZ7N0V.LARGE.jpg", "https://cdn.instructables.com/FM0/6YN2/JSYZ7MYS/FM06YN2JSYZ7MYS.LARGE.jpg"], "step_title": "Step 3: Installing Operating System:"}, {"step": 4, "steps_text": "Once the Raspbian image is burned on to the card successfully. Insert the SD card into Raspberry Pi. Now follow the steps given below.\nConnect HDMI to the port on board and a monitor.\nConnect the wireless module of keyboard into the USB port of Rpi, if you have Pi Zero W use an OTG adapter.\nFinally power the board using a micro USB. Make sure you use proper power supply. I used a 5v 2A smartphone charger which works perfectly.\nThe Pi will take a while for the first boot so be patient and do not power it off or remove the SD card.\nOnce the boot is successful, you will see the home screen of Raspbian. You can use a mouse or track pad to navigate.", "step_imgs": ["https://cdn.instructables.com/FU5/7P8W/JTIYGS1M/FU57P8WJTIYGS1M.LARGE.jpg"], "step_title": "Step 4: First Boot:"}, {"step": 5, "steps_text": "As we will be using the Pi for robotics we will need to enable some features of Pi. These features will allow us to operate I/O pins and interface devices like LED, Servo, Motors, etc to Raspberry Pi.\nClick on the Raspberry icon on top left corner.\nFrom the drop-down menu select \"Preferences\" and click on \"Raspberry Pi Configuration\".\nFrom the Configuration window select \"Interfaces\" tab.\nNext Enable GPIO, I2C, SSH, Camera and Serial Port. These are the features we will be needing mostly.", "step_imgs": ["https://cdn.instructables.com/FVL/A78J/JTIYP4M2/FVLA78JJTIYP4M2.LARGE.jpg", "https://cdn.instructables.com/FCS/SW42/JTIYP4M1/FCSSW42JTIYP4M1.LARGE.jpg"], "step_title": "Step 5: Enabling Interfaces:"}, {"step": 6, "steps_text": "That is all for this tutorial. Now you can boot an OS into any Raspberry Pi. In next tutorial I will be sharing how to use Raspberry Pi to control your projects.\nIf you are interested in robotics and still in the learning process , Check out my first eBook \"Mini WiFi Robot\" where you will learn everything you need to get started with robotics.\nIf you want to get a certified robotics course check out this e-course\nI hope you liked the post and learned from it.\nIf you faced any problem or difficulty, please leave a comment below.\nThank you", "step_imgs": [], "step_title": "Step 6: Final Note:"}], "channel": "Raspberry Pi"}, {"category": "Technology", "description": "Watch the video too and subscribe to 3DSage for more fun videos! Thank you.\nLink to the Makers Muse project I remixed: https://www.youtube.com/watch?v=Le-PVXUCl0M\nI saw a video about the Geneva Drive by Makers Muse on youtube and on Instructables but it was only used as a demonstration. The Geneva Drive holds it's position before quickly turning to the next position. I was inspired by this and I did my best to redesign and remix this 6 position Geneva Drive into a 3D printed 12 frame automatic projector!", "title": "3D Printed Projector | Geneva Drive", "url": "https://www.instructables.com/id/3D-Printed-Projector-Geneva-Drive/", "steps": [{"step": 1, "steps_text": "This is what the Geneva Drive looks like and what I remixed into. I had to figure out how to double the number of positions and attach a spinning wheel on top for the slides. I am not an engineer so I am happy that this works and how the final design turned out!", "step_imgs": ["https://cdn.instructables.com/FYE/UQGL/JTIYKGR3/FYEUQGLJTIYKGR3.LARGE.jpg", "https://cdn.instructables.com/FML/M6YK/JTIYKDAP/FMLM6YKJTIYKDAP.LARGE.jpg", "https://cdn.instructables.com/FRM/WSPY/JTIYKDBO/FRMWSPYJTIYKDBO.LARGE.jpg"], "step_title": "Step 1: The Geneva Drive... Remixed"}, {"step": 2, "steps_text": "LS-3006 Servo Motor 360 degrees\n3CH Digital Multi Servo Tester\n4x AA Battery Holder with 6 Inch Wired 2P Connector. (Jameco Part: 2278463)\nNebo 6272-A Micro Redline OC LED Flashlight - 360 LUX\nPendant Magnifier 5x 1 3/4\"\n3D print the files attached. The template image is also in the zip file.\nYou could make some variations. Any bright flashlight roughly the same size should work. The servo can be controlled with a mircrocontroller or components on a breadboard, but these materials listed are what I used. and if you don't have a 3D printer, search \"local 3d printing service.\" Print at 0.2mm and no supports", "step_imgs": ["https://cdn.instructables.com/FD5/8YQG/JTIYKDQM/FD58YQGJTIYKDQM.LARGE.jpg", "https://cdn.instructables.com/F8O/J64R/JTIYKQVB/F8OJ64RJTIYKQVB.LARGE.jpg"], "step_title": "Step 2: Shopping List"}, {"step": 3, "steps_text": "The servo and batteries will connect to the servo controller. Pay attention to the wire colors, black-negative and red-positive. 3D Print the redesigned Geneva Drive and assemble the parts together as shown.\nGive this a test run by plugging in the batteries and rotate the nob on the controller. The controller will make it spin forwards or backwards and the speed can be adjusted.", "step_imgs": ["https://cdn.instructables.com/FTC/CQ6H/JTIYKDAU/FTCCQ6HJTIYKDAU.LARGE.jpg", "https://cdn.instructables.com/FWZ/NFXE/JTIYKDAV/FWZNFXEJTIYKDAV.LARGE.jpg", "https://cdn.instructables.com/FVH/S44F/JTIYKDAY/FVHS44FJTIYKDAY.LARGE.jpg"], "step_title": "Step 3: I Like to Move It Move It"}, {"step": 4, "steps_text": "The wheel comes in two parts. (It was easier to print it this way)\nOne side will friction fit into the other. Possibly print these parts slower since thin vertical part need more time and care when printing.\nI created this PNG image and added pictures with a high contrast so the light and dark areas will really show up when projected. Then I took the image to a near by print center and asked to have it printed on transparency. These slides will also help wedge and hold the wheel parts together.", "step_imgs": ["https://cdn.instructables.com/FYY/VE8M/JTIYKD9E/FYYVE8MJTIYKD9E.LARGE.jpg", "https://cdn.instructables.com/FKJ/AAO8/JTIYKDBN/FKJAAO8JTIYKDBN.LARGE.jpg", "https://cdn.instructables.com/F88/BMDU/JTIYKD9J/F88BMDUJTIYKD9J.LARGE.jpg"], "step_title": "Step 4: The Wheels on the Drive Go Round and Round"}, {"step": 5, "steps_text": "When you turn on the flashlight, the image will be very blurry when projected on the wall. We need to focus the light. You might notice that the image is upside down.\nThe slide can be flipped vertically so the projected image is correct.\nThis 5X magnifying lens will fit in the 3D printed holder and can be positioned around until the projected image is in focus. I later tried two 5X magnifying lenses for a larger image.", "step_imgs": ["https://cdn.instructables.com/FB8/3V74/JTIYKD9I/FB83V74JTIYKD9I.LARGE.jpg", "https://cdn.instructables.com/FTV/F5MN/JTIYKD9Q/FTVF5MNJTIYKD9Q.LARGE.jpg", "https://cdn.instructables.com/F8V/LU7R/JTIYKD9N/F8VLU7RJTIYKD9N.LARGE.jpg"], "step_title": "Step 5: Through the Looking Glass"}, {"step": 6, "steps_text": "Everything is set up, now time to make it work. Turn it on and the light will project the image on the wall and is focused by the magnifying lens. It looks better in a very dark room.\nI see this as a fun and educational device and I hope you enjoyed it! Thank you so much for watching!", "step_imgs": ["https://cdn.instructables.com/FO2/LH89/JTIYKD9R/FO2LH89JTIYKD9R.LARGE.jpg", "https://cdn.instructables.com/FHL/00W7/JTIYKD9U/FHL00W7JTIYKD9U.LARGE.jpg", "https://cdn.instructables.com/F2Z/N6PY/JTIYKILX/F2ZN6PYJTIYKILX.LARGE.jpg"], "step_title": "Step 6: Grab the Popcorn! It's Showtime"}], "channel": "3D Printing"}, {"category": "Technology", "description": "This is a short project that I created as part of a larger RC build of a Lightweight Land Rover. I decided that I fancied having a working speedometer in the dashboard, but I knew that a servo wouldn't cut it. There was only one reasonable option: deploy the arduino!\nA bit of background to begin with... I am not a coding or electronics person. I still think of electricity in terms of water flow and am somewhat mystified by resistors. That said, if even I was able to make this work, then you should be able to as well!\nPARTS LIST:\nMicrocontroller: I used an ATTiny85 chip, which cost about \u00a31 each.\nMicrocontroller Programmer: In order to get the code onto the chip, you need a way to program it. With regular arduino this is just a USB cable, but for the ATTiny chip, you need something extra. You can use another arduino to do this or, like me, you can use a Tiny AVR programmer from Sparkfun.\nhttps://learn.sparkfun.com/tutorials/tiny-avr-prog...\nI would recommend this, as I've tried programming them with various methods and this one is the easiest. The board is a bit expensive, but a good investment if you do a lot of ATTiny projects.\n8 Pin Chip Socket: If you put the chip in a socket rather than soldering it directly, you can afford yourself some mistakes in assembly. Spoken from experience - nobody wants to desolder chips to reprogram them.\nCapacitor: A decoupling capacitor of 100nF (code 104) is used. I don't understand quite why, but I read that decoupling capacitors are important on the internet, so it must be true...\nResistor: A 10k\u03a9 resistor is used to pull down the line into the arduino. Again, yet another mystery of electronics.\nPerfboard/Stripboard: Some baseboard upon which to assemble your circuit.\nWinding Wire: Regular sheathed wire is too thick to solder onto the motor. Using fine enamelled wire will reduce the stress on the motor terminals and make your life a lot easier.\nServo Wire: A three wire ribbon terminating in a 3-pin JR female plug. I got mine from a burnt out servo that I was 'modifying'.\nStepper Motor: I used a 6mm bipolar Nidec stepper motor. Any small stepper should work, although keep them small, as the stepper is being driven directly from the Arduino.\nHeader Pins: Not essential, but if you wire your stepper to 4 header pins and put a socket on your circuit, you can easily unplug your dashboard for ease of installation.\nComputer: To program your board, you'll need a computer. Possibly with the Arduino IDE. And maybe a USB cable. If it has a power cable as well, then even better.", "title": "Working RC Car Speedometer", "url": "https://www.instructables.com/id/Working-RC-Car-Speedometer/", "steps": [{"step": 1, "steps_text": "The basic outline of the system I created was a method whereby the Pulse Width Modulation (PWM) signal coming from the RC receiver is converted into a stepper motor sweep via an ATTiny 85 microcontroller (uC).\nHere is a resource on PWM signals and RC, but to replicate this you don't strictly need to understand it.\nhttps://en.wikipedia.org/wiki/Servo_control\nThe ATTiny is my favorite flavour of Arduino because it's small with still enough I/O pins to do basic things, so fits perfectly into small models and RC projects. The main downside of the ATTiny is that it requires a bit more setup in order to program one, but once you've got it set up they are so cheap you can buy stacks of them for all sorts of projects.\nThe size of the speedometer dial is too small to have a geared motor with feedback, so in order to have a proportional response a stepper motor had to be used. A stepper motor is a motor that is moved in discrete amounts (or steps...!), which makes it ideal for a no-feedback system like this. The only caveat is that the 'steps' will cause the resultant movement to be jerky as opposed to smooth. If you get a stepper with enough steps per rotation, that isn't noticeable, but with the stepper that I used in this project having only 20 or so steps in a full rotation, the angle jump is quite bad.\nThe system, on power-up, will run the stepper backwards for two revolutions, so as to zero the needle. The speedometer needs a resting pin where you want the zero mark to be, or else it will just spin forever. Then it maps the forward and reverse PWM signals to a set number of steps of the motor. Easy, right...?", "step_imgs": [], "step_title": "Step 1: The System"}, {"step": 2, "steps_text": "Disclaimer: I'm not a programmer. For this project I am the digital equivalent of Dr. Frankenstein, assembling something working out of various found bits of code.\nSo, my heartiest thanks go to Duane B, who made the code for interpreting RC signals:\nhttp://rcarduino.blogspot.com/\nAnd to Ardunaut, who made the code for running a stepper as an analogue gauge:\nhttps://arduining.com/2012/04/22/arduino-driving-a...\nAnd to both, my most sincere apologies for what I did to your code.\nNow that's out of the way, here is what to upload to the ATTiny:\n#define THROTTLE_SIGNAL_IN 0 // INTERRUPT 0 = DIGITAL PIN 2 - use the interrupt number in attachInterrupt\n#define THROTTLE_SIGNAL_IN_PIN 2 // INTERRUPT 0 = DIGITAL PIN 2 - use the PIN number in digitalRead\n#define NEUTRAL_THROTTLE 1500 // this is the duration in microseconds of neutral throttle on an electric RC Car\n#define UPPER_THROTTLE 2000   // this is the duration in microseconds of maximum throttle on an electric RC Car\n#define LOWER_THROTTLE 1000   // this is the duration in microseconds of nminimum throttle on an electric RC Car\n#define DEADZONE 50           // this is the throttle deadzone. The total deadzone is double this.\n#include \n#define  STEPS  21      // steps per revolution (limited to 315\u00b0) Change this to adjust the maximum travel of the speedometer.\n#define  COIL1  3       // Coil Pins. The ATTiny uses pins 0,1,3,4 for the stepper. Pin 2 is the only pin that can handle interrupts so it needs to be the input. \n#define  COIL2  4       // Try changing these around if the stepper motor doesn't run properly. \n#define  COIL3  0\n#define  COIL4  1\n// create an instance of the stepper class:\nStepper stepper(STEPS, COIL1, COIL2, COIL3, COIL4);\nint pos = 0;               //Position in steps(0-630)= (0\u00b0-315\u00b0)\nint SPEED = 0;\nfloat ThrottleInAvg = 0;\nint MeasurementsToAverage = 60;\nfloat Resetcounter = 10; // time to reset while at idle throttle\nint Resetval = 0;\nvolatile int ThrottleIn = LOWER_THROTTLE;\nvolatile unsigned long StartPeriod = 0; // set in the interrupt\n// we could use nThrottleIn = 0 in loop instead of a separate variable, but using bNewThrottleSignal to indicate we have a new signal\n// is clearer for this first example\nvoid setup()\n{\n  // tell the Arduino we want the function calcInput to be called whenever INT0 (digital pin 2) changes from HIGH to LOW or LOW to HIGH\n  // catching these changes will allow us to calculate how long the input pulse is\n  attachInterrupt(THROTTLE_SIGNAL_IN, calcInput, CHANGE);\n  stepper.setSpeed(50);    // set the motor speed to 30 RPM (360 PPS aprox.).\n  stepper.step(STEPS * 2);     //Reset Position(X steps counter-clockwise).\n}\nvoid loop()\n{\n  Resetval = millis;\n  for (int i = 0; i < MeasurementsToAverage; ++i)\n  {\n    ThrottleInAvg += ThrottleIn;\n    delay(1);\n  }\n  ThrottleInAvg /= MeasurementsToAverage;\n  // Forward mapping\n  if (ThrottleInAvg > (NEUTRAL_THROTTLE + DEADZONE) && ThrottleInAvg < UPPER_THROTTLE) {\n    SPEED = map(ThrottleInAvg, (NEUTRAL_THROTTLE + DEADZONE), UPPER_THROTTLE, 0, 255);\n    Resetval = 0;\n  }\n  // Reverse mapping\n  else if (ThrottleInAvg < (NEUTRAL_THROTTLE - DEADZONE) && ThrottleInAvg > LOWER_THROTTLE) {\n    SPEED =  map(ThrottleInAvg, LOWER_THROTTLE, (NEUTRAL_THROTTLE - DEADZONE), 255, 0);\n    Resetval = 0;\n  }\n  // Out of range upper\n  else if (ThrottleInAvg > UPPER_THROTTLE) {\n    SPEED = 255;\n    Resetval = 0;\n  }\n  // Out of range lower\n  else if (ThrottleInAvg < LOWER_THROTTLE) {\n    SPEED = 255;\n    Resetval = 0;\n  }\n  // Deadzone\n  else {\n    SPEED = 0;\n    int t2 = millis;\n    if ((t2 - Resetval) > Resetcounter) {\n      stepper.step(4);        // I'm trying to tell the stepper to re-reset itself if the RC signal is in the deadzone for a long time. Not sure if this part of the code actually works. \n    }\n  }\n  int val = SPEED ;   //get the potentiometer value (range 0-1023)\n  val = map(val, 0, 255, 0, STEPS * 0.75); // map pot range in the stepper range.\n  if (abs(val - pos) > 2) {      //if diference is greater than 2 steps.\n    if ((val - pos) > 0) {\n      stepper.step(-1);      // move one step to the left.\n      pos++;\n    }\n    if ((val - pos) < 0) {\n      stepper.step(1);       // move one step to the right.\n      pos--;\n    }\n  }\n  //  delay(10);\n}\nvoid calcInput()\n{\n  // if the pin is high, its the start of an interrupt\n  if (digitalRead(THROTTLE_SIGNAL_IN_PIN) == HIGH)\n  {\n    // get the time using micros - when our code gets really busy this will become inaccurate, but for the current application its\n    // easy to understand and works very well\n    StartPeriod = micros();\n  }\n  else\n  {\n    // if the pin is low, its the falling edge of the pulse so now we can calculate the pulse duration by subtracting the\n    // start time ulStartPeriod from the current time returned by micros()\n    if (StartPeriod)\n    {\n      ThrottleIn = (int)(micros() - StartPeriod);\n      StartPeriod = 0;\n    }\n  }\n}\nRefer to this for more information on programming an ATTiny85:\nhttps://learn.sparkfun.com/tutorials/tiny-avr-prog...", "step_imgs": [], "step_title": "Step 2: The Software"}, {"step": 3, "steps_text": "Refer to the circuit diagram for building the circuit. How you assemble it is up to you, but I'd suggest using a bit of stripboard/perfboard used for circuit board prototyping, and mounting the chip in a socket.\nC1 = 100nF\nR1 = 10k\u03a9\nThe capacitor should be mounted as close to the chip as possible to be most effective.\nWhen soldering the enamelled wires to the motor, be extremely careful, as the terminals on the motors like to snap off and sever the coil wire to the motor. To remedy this, a good solution is to solder the wires on, and then put a big blob of 2-part epoxy over the joint, , let it cure, then twist the wires together. This reduces stress on individual terminal joints and should stop them snapping off. If you don't do this, they will snap off at the least convenient time, guaranteed.\nIf you make the header pin connector, and set up the pins thus: [Ca1, Cb1, Ca2, Cb2] with Ca1 standing for Coil A, wire 1 etc. This allows you to change the rotational direction of the gauge by swapping the plug around.\nThe gauge will need an endstop to calibrate the zero position against. I'd recommend making the needle out of metal if possible. This stops it flexing when it hits the endstop. A way to get the needle in a good position is to temporarily glue the needle to the axle, power up the module, let it come to rest, and then remove and re-glue the needle on the axle, with the needle resting against the endstop. This aligns the needle with the magnetic cogging of the motor, and ensures that your needle should always come to rest against the endstop.", "step_imgs": ["https://cdn.instructables.com/FMU/P3T1/JTIYKJTA/FMUP3T1JTIYKJTA.LARGE.jpg", "https://cdn.instructables.com/F2N/MF18/JTIYI5YX/F2NMF18JTIYI5YX.LARGE.jpg", "https://cdn.instructables.com/FAY/LI6F/JTIYI5ZP/FAYLI6FJTIYI5ZP.LARGE.jpg"], "step_title": "Step 3: The Hardware"}, {"step": 4, "steps_text": "Hopefully you've enjoyed this brief instructable, and found it useful. If you build one of these, do let me know!\nGood luck!", "step_imgs": [], "step_title": "Step 4: Epilogue"}], "channel": "Remote Control"}, {"category": "Technology", "description": "A pyranometer measures the sun's irradiance (power/area, basically \"brightness\") on a surface. Despite the similar names, it is completely different from a pyrometer, so stop right here if that is what you are looking for.\nThis Instructable describes how to build and test a modified version of the pyranometer kit offered by Dr. David Brooks of the Institute for Earth Science Research and Education (InstESRE):\nhttp://www.instesre.org/construction/pyranometer/pyranometer.htm\nThis version of the InstESRE pyranometer interfaces with an Arduino using an ADS1115 analog-to-digital converter (ADC) and also supports temperature correction using a TMP36 temperature sensor co-located with the photodiode.\nThe IV Swinger 2 IV curve tracer supports this pyranometer design as an optional sensor, and that was the motivation for the modifications. However, since other users of the InstESRE pyranometer may find it useful, this Instructable describes the design independently from the IV Swinger 2 project.\nThe following GitHub repository contains the documentation and software:\nhttps://github.com/csatt/ADS1115_InstESRE_Pyranometer\nPlease download and read the document before proceeding. The document contains a text-only version of the steps in this Instructable and can be used as a checklist during construction. It also describes how to order the kit from Dr. Brooks and what additional parts to buy. Those are not repeated in this Instructable.", "title": "ADS1115 InstESRE Pyranometer", "url": "https://www.instructables.com/id/ADS1115-InstESRE-Pyranometer/", "steps": [{"step": 1, "steps_text": "I used the tools shown in the photo.", "step_imgs": ["https://cdn.instructables.com/FAL/T05R/JTIYIUIZ/FALT05RJTIYIUIZ.LARGE.jpg"], "step_title": "Step 1: Gather Tools"}, {"step": 2, "steps_text": "Insert the grommet into the hole at the end of the case. Use a small blunt object such as a small screwdriver. Be careful not to cut the grommet. (The grommet is the soft rubber O-shaped item.)\n_______\nSpread a small amount of superglue around the inside of the larger of the two holes in the top of the case. Insert the bubble level from the inside of the case. Make sure the bubble level's shoulder seats firmly against the top of the case. Set the case aside, upside down, to let the glue dry for several minutes.\n\n[NOTE: the bubble level is not needed for the IV Swinger 2 application, and it is not shown in the photos.]\n_______", "step_imgs": ["https://cdn.instructables.com/F3Q/WVTK/JTENEXVT/F3QWVTKJTENEXVT.LARGE.jpg"], "step_title": "Step 2: Prepare Enclosure"}, {"step": 3, "steps_text": "Make sure the PDB-C139 photodiode leads are straight and parallel to each other, making adjustments if necessary.\n_______\nInsert PDB-C139 photodiode into the LED holder. It should snap into place. Do NOT use any superglue.\n_______\nWith the PDB-C139 photodiode leads pointing up and with the longer lead to the left and the shorter to the right, VERY SLIGHTLY bend both leads away from you.\n_______\nInsert the photodiode assembly into the housing tube from the top. Again, do NOT use any superglue. Make sure the top of the diode is clean and dust free.\n_______\nPick up the Teflon diffuser disk with a paper towel or tissue and rub both surfaces gently to remove any dust or debris that might be there. Snap the disk into its recess at the top of the housing tube. Do NOT use any superglue. If it is a very loose fit, you will have to use some superglue LATER, but NOT YET.\n_______\nFlip the assembly upside down (leads pointing up, longer one to the left). Make sure the diffuser disk didn't fall out. Use 4 pieces of tape to hold it down on a hard, smooth work surface. The tape should be below the machined rim of the tube. Wrap one more piece of tape around the tube.\n_______", "step_imgs": ["https://cdn.instructables.com/F9A/2WWX/JTENEZ3S/F9A2WWXJTENEZ3S.LARGE.jpg", "https://cdn.instructables.com/FZ6/0IC6/JTENF1KW/FZ60IC6JTENF1KW.LARGE.jpg", "https://cdn.instructables.com/F7Y/9183/JTENF3RW/F7Y9183JTENF3RW.LARGE.jpg", "https://cdn.instructables.com/FUR/VBMY/JTENF4DT/FURVBMYJTENF4DT.LARGE.jpg"], "step_title": "Step 3: Prepare Photodiode and Diffuser"}, {"step": 4, "steps_text": "Insert the TMP36 into the hole on the near side of the photodiode leads, with the flat side of the TMP36 toward the leads, and the rounded side towards the wall of the tube. Press it down by the ends of its leads. It should fit nicely with minimal deflection of the photodiode leads.\n_______\nRemove the TMP36, apply superglue to its top, flat side, and rounded side and promptly insert it back into the hole in the same position. Use only enough glue so it should stick to the LED holder, diode leads, and inside of the tube, but don't use so much that it could possibly flow around the photodiode. Make sure to press it into the hole quickly, so the glue doesn't grab it before it is all the way in.\n_______\nAdjust the two photodiode leads and the three TMP36 leads so they are all pointing as straight up as possible\n_______", "step_imgs": ["https://cdn.instructables.com/F83/EHZQ/JTENF556/F83EHZQJTENF556.LARGE.jpg", "https://cdn.instructables.com/FCP/F2XC/JTENF71M/FCPF2XCJTENF71M.LARGE.jpg", "https://cdn.instructables.com/FGH/LWST/JTIYHYPI/FGHLWSTJTIYHYPI.LARGE.jpg"], "step_title": "Step 4: Add TMP36 (optional)"}, {"step": 5, "steps_text": "Apply some superglue to the machined rim of the tube and then promptly lower the case over that, so the tube is glued into the hole in the case. The long dimension of the case should be in line with the rows of leads coming through the hole and the end hole with the grommet should be to your right. Make sure the tube is fully seated in the hole.\n_______\nUse some tape to hold the case in position so that it is level and the tube is perpendicular to it.\n_______", "step_imgs": ["https://cdn.instructables.com/FGT/XHBK/JTIYEE6Q/FGTXHBKJTIYEE6Q.LARGE.jpg", "https://cdn.instructables.com/FSZ/OM1F/JTIYEE53/FSZOM1FJTIYEE53.LARGE.jpg"], "step_title": "Step 5: Glue Sensor Tube to Case"}, {"step": 6, "steps_text": "Apply a blob of superglue to the back of the ADS1115 board right in the middle. Quickly, but carefully, lower the ADS1115 board down with the longer photodiode lead coming through hole A0 and the shorter one coming through hole A1. The three TMP36 leads will be along the edge of the ADS1115 board and may deflect slightly. Adjust the position of the ADS1115 board so the A0 and A1 holes are centered over the tube hole and hold the board in place for about a minute so it sticks to the case.\n_______\nLeave this untouched for a couple hours so the glue will be sure to have dried. Do not proceed with the following steps until then.\n_______", "step_imgs": ["https://cdn.instructables.com/F33/IMVL/JTIYEEPR/F33IMVLJTIYEEPR.LARGE.jpg", "https://cdn.instructables.com/FZQ/SJU3/JTIYEER6/FZQSJU3JTIYEER6.LARGE.jpg", "https://cdn.instructables.com/FJG/YYI9/JTIYHYZ7/FJGYYI9JTIYHYZ7.LARGE.jpg"], "step_title": "Step 6: Add ADS1115 Board"}, {"step": 7, "steps_text": "Cut both leads of the resistor to 1 cm. Bend 2mm on the end of each lead at a right angle and insert those 2mm ends into holes A0 and A1 of the ADS1115 board, alongside the photodiode leads. The reason for the 2mm length is so there's no possibility that the ends can touch the TMP36 leads or the other photodiode lead underneath the board.\n_______\nSolder the resistor and photodiode leads to holes A0 and A1.\n_______\nTrim the photodiode leads.\n_______", "step_imgs": ["https://cdn.instructables.com/F55/N90W/JTIYEFWF/F55N90WJTIYEFWF.LARGE.jpg", "https://cdn.instructables.com/F9W/6FSX/JTIYEFWS/F9W6FSXJTIYEFWS.LARGE.jpg", "https://cdn.instructables.com/F40/Y3K4/JTIYEFUC/F40Y3K4JTIYEFUC.LARGE.jpg"], "step_title": "Step 7: Add Load Resistor"}, {"step": 8, "steps_text": "Gently bend the two outer TMP36 leads away from the edge of the ADS1115 board.\n_______\nWith long-nosed pliers, carefully bend the middle TMP36 lead toward the A2 hole and solder it to the hole. You may need a small piece of stripped hookup wire in the hole to solder to if the lead isn't quite long enough to actually go into the hole. Make sure this lead is not making contact with the A1 solder joint or photodiode lead stub.\n_______", "step_imgs": ["https://cdn.instructables.com/FEA/X7AJ/JTIYEGN3/FEAX7AJJTIYEGN3.LARGE.jpg", "https://cdn.instructables.com/FU9/8KGP/JTIYEGJY/FU98KGPJTIYEGJY.LARGE.jpg"], "step_title": "Step 8: Solder TMP36 Middle Lead to A2 (optional)"}, {"step": 9, "steps_text": "Untape the whole assembly from the work surface\n_______\nShake it to make sure the Teflon diffuser disk doesn't fall out. If it does, set the disk aside for now.\n_______\nCut the female end off of the cable. Push the cut end through the grommet into the case and pull it through. Don't worry about pulling it too far, you will be able to pull it back out later. Use a drop of dish soap if it is difficult to push through.\n_______\nCut away the outer cable sheathing on the cut end to expose the four wires inside, being careful not to damage the insulation on the inner wires. Cut away at least 2 cm of the sheathing.\n_______\nStrip 8 mm of the insulation from the inner four wires and twist the ends of each.\n_______\n\u201cTin\u201d the twisted ends by heating with the soldering iron and applying some solder to the strands.\n_______\nUse a digital multimeter (DMM) to determine the connectivity between the inner wires and the four parts of the 3.5mm plug on the other end of the cable. Write down the colors:\n\nColor:\n\nTip: _________________ [+5V]\n\nRing 1: _________________ [SCL]\n\nRing 2: _________________ [SDA]\n\nSleeve: _________________ [GND]\n\nNOTE: these colors will almost certainly NOT match the colors in the connections diagram, so this is very important.\n\n_______\nPull the cable back out through the rubber grommet until the insulation of the inner wires just reaches the VDD hole of ADS1115 board.\n_______", "step_imgs": ["https://cdn.instructables.com/FQA/JN5H/JTIYHZ55/FQAJN5HJTIYHZ55.LARGE.jpg", "https://cdn.instructables.com/F2C/IAVP/JTIYI074/F2CIAVPJTIYI074.LARGE.jpg", "https://cdn.instructables.com/F96/Q0JE/JTIYHZB0/F96Q0JEJTIYHZB0.LARGE.jpg"], "step_title": "Step 9: Prepare Cable"}, {"step": 10, "steps_text": "Cut the following lengths of hookup wire (only needed forTMP36)\nBlack, 2.5cm\nRed, 2.5cm\n\nStrip 6mm from each end of each.\n_______\nSolder the cable wire that is connected to the plug Tip (+5V) to the VDD hole, along with one end of the 2.5cm red wire.\n_______\nSolder the cable wire that is connected to the plug Sleeve (GND) to the GND hole, along with one end of the 2.5cm black wire.\n_______\nSolder the cable wire that is connected to the plug Ring 1 (SCL) to the SCL hole.\n_______\nSolder the cable wire that is connected to the plug Ring 2 (SDA) to the SDA hole.\n_______", "step_imgs": ["https://cdn.instructables.com/FHF/2TZ5/JTIYI0TR/FHF2TZ5JTIYI0TR.LARGE.jpg"], "step_title": "Step 10: Solder Cable Wires and Hookup Wire to ADS1115"}, {"step": 11, "steps_text": "Solder the other end of the 2.5cm black wire (from the GND hole) to the TMP36 lead on the right. Make sure it doesn't contact the middle lead.\n_______\nSolder the other end of the 2.5cm red wire (from the VDD hole) to the TMP36 lead on the left. Make sure it doesn't contact the middle lead.\n_______", "step_imgs": ["https://cdn.instructables.com/FPW/UQVR/JTIYI11P/FPWUQVRJTIYI11P.LARGE.jpg"], "step_title": "Step 11: Solder TMP36 Power/ground Leads (optional)"}, {"step": 12, "steps_text": "Cut four hookup wires. Make them long enough for whatever enclosure you'll be putting the Arduino in (9cm for IV Swinger 2):\nBlack: __________\nRed: __________\nBlue: __________\nGreen: __________\n\nStrip 1cm from the end of each.\n_______\nInsert the cable plug into the 3.5mm jack.\n_______\nUse the DMM to determine which solder connection on the back of the 3.5mm jack is connected to the VDD hole on the ADS1115 board.\n\nTwist the RED wire to that solder connection on the jack.\n_______\nUse the DMM to determine which solder connection on the back of the 3.5mm jack is connected to the GND hole on the ADS1115 board.\n\nTwist the BLACK wire to that solder connection on the jack.\n_______\nUse the DMM to determine which solder connection on the back of the 3.5mm jack is connected to the SCL hole on the ADS1115 board.\n\nTwist the BLUE wire to that solder connection on the jack.\n_______\nUse the DMM to determine which solder connection on the back of the 3.5mm jack is connected to the SDA hole on the ADS1115 board.\n\nTwist the GREEN wire to that solder connection on the jack.\n_______\nUse DMM to confirm the connections. Test continuity from the end of the hookup wire to the ADS1115 hole. At the same time, test that there is NO CONTINUITY to the other three.\nRed to VDD: __________\nBlack to GND: __________\nBlue to SCL: __________\nGreen to SDA: __________\nSolder all four hookup wires to the 3.5mm jack\n_______", "step_imgs": ["https://cdn.instructables.com/F95/I701/JTIYI1MN/F95I701JTIYI1MN.LARGE.jpg"], "step_title": "Step 12: Cut and Solder Wires to Jack"}, {"step": 13, "steps_text": "Put the cable tie around the cable and use pliers to pull it tight right next to the grommet on the inside of the case. Trim.\n_______\nScrew the cover to the case.\n_______\nUse the small piece of fine abrasive paper included with the kit and gently abrade the surface of the Teflon with a circular motion, just enough to remove the \"shine\" from the disk.\n_______\nIf the Teflon diffuser disk did not snap tightly into its recess, use a TINY amount of superglue around the recess to hold it in. Make sure not to get any glue on the photodetector! A toothpick can be useful to apply the superglue, but move quickly. Use a small clamp to hold it in while the glue dries.\n_______\nConnect to Arduino:\nConnect the four wires from the back of the 3.5mm jack to the Arduino as shown in the photos.\n_______", "step_imgs": ["https://cdn.instructables.com/F79/7UVH/JTIYIRLO/F797UVHJTIYIRLO.LARGE.jpg", "https://cdn.instructables.com/FKC/5LFS/JTIYI1MU/FKC5LFSJTIYI1MU.LARGE.jpg", "https://cdn.instructables.com/FCZ/XSAW/JTIYIQCR/FCZXSAWJTIYIQCR.LARGE.jpg", "https://cdn.instructables.com/FHO/2EV4/JTIYIQC5/FHO2EV4JTIYIQC5.LARGE.jpg"], "step_title": "Step 13: Final Assembly"}, {"step": 14, "steps_text": "The document in the GitHub repository describes how to load and run the tests. It also describes what is required to calibrate the pyranometer.", "step_imgs": ["https://cdn.instructables.com/FWP/MFX6/JTIYIX32/FWPMFX6JTIYIX32.LARGE.jpg", "https://cdn.instructables.com/FN1/7T4F/JTIYIX10/FN17T4FJTIYIX10.LARGE.jpg", "https://cdn.instructables.com/FSA/WSZN/JTIYIX1I/FSAWSZNJTIYIX1I.LARGE.jpg"], "step_title": "Step 14: Running Tests and Calibrating"}], "channel": "Arduino"}, {"category": "Technology", "description": "Power supply units are essential tool for every person involved in electronics. It happens for me to own a Korad, that is a linear (heavy) power supply which is at good price and have received good reviews.\nWhat is a power supply and what is the problem this instructable solves.\nThe main task of a power supply is to supply a load with a configured constant voltage or constant current. However if the cables we are using are long or of bad quality, and the current of our circuit is considerable, then there will be a significant (depending on the application) voltage drop across the wires. That will result in lower voltage than specified across the load. A workaround, is to use short wires with very little resistance (good quality), but that is not always achievable.\nMany power supplies, more expensive than korad, to eliminate this issue are capable of remote sensing.\nHow remote sensing works\nI couldn't describe remote sensing better that tinbin here :\nhttps://community.keysight.com/community/keysight-...\nI highly recommend this article, so for those of you who click this link or know about the issue you can skip the following two paragraphs.\nBy default power supplies sense the voltage across the load probing the output of psu. For example if we have set the output voltage to be 5V and for whatever reason psu sense locally 4.8 volts at its output, then will increase voltage till it senses again 5V. However if there is voltage drop of 0.2 volts across wires, so in effect load \"sees\" only 4.8 volts, psu will never increase voltage at its output since it still senses 5V locally before the running wires.\nFor that reason higher end models are capable of remote sensing. That is they have an extra output port where we can plug a pair of wires for remote sensing. The other end of the sensing wires connect to the load. So if for whatever reason (including losses across wires) the voltage across the load is less than specified, the psu will sense it (at the load this time) and increase the voltage at its output until the load voltage be again the specified. For example if we see 5V volt output and voltage drop across wires is 0.2V then power supply will remotely sense 4.8 volts at load so will increase the output voltage until voltage at load be again 5V. I repeat myself I know!\nThe main idea for this instructable.\nKorad has a pair of sense wires internally that are connected locally at its output ports. The main idea is to create a new port where we can connect our sense wires, and also with the aid of just a switch to select either local sense (at the output) or remote sense (at the load)", "title": "Remote Sensing for Korad Power Supply", "url": "https://www.instructables.com/id/Remote-Sensing-for-Korad-Power-Supply/", "steps": [{"step": 1, "steps_text": "Consumables that you'll need\nWires 24awg: (Choose whatever colour you like, but I think red and black are consistent with other wires of korad)\n50 cm red wire,\n50 cm black wire\n5 cm white wire\n5 cm blue wire\n20 cm yellow wire for ground (I used again a blue one)\nSome heat shrinkables\n1 usb type A female connector, preferably vertically oriented (I used a horizontally oriented one)\n1 double pole double through (dpdt) switch with on-on\nOptionally heat shrinkables\n1 tiny FR4 board (one sided is ok, I used two sided)\nsolder, flux\nhot glue stick\n2 crocodile terminals (or whatever terminals you prefer)\n1 usb2.0 cable\nTools you will need\nSoldering iron, or soldering station\nWire stripper/cutter\nOptionally a rotary or drill tool (Maybe you can melt enclosure with soldering iron, but I don't recommend it)\nExacto knife\nHot glue gun\nMaybe you'll need a tool for cutting large FR4 board ( I use a hand metal cutter, like a big scissor)\nTotal Cost:\nCost is ZERO, I don't bother to take into account usb connector and wires or the tiny board. The most important cost here is labor time.", "step_imgs": [], "step_title": "Step 1: What Will You Need"}, {"step": 2, "steps_text": "I will not be too verbose in this step (screws are at obvious positions).\nUnplug all the wire to board connectors of the front panel\nLocate the sense wires, is the thin pair of wires that runs from port to main pcb, like shown in the image\nCut the pair of sense in middle. Don't through any part of it\nUnscrew and remove the main green pcb\nUnscrew and remove the lcd pcb\nOptionally remove the yellow pcb and optical encoder pcb (I suggest it to avoid damaging it during drilling). Note the rotary knob is easily removable, just pull it don't be afraid you won't damage it.", "step_imgs": ["https://cdn.instructables.com/F0Q/BBFN/JTIXB8SL/F0QBBFNJTIXB8SL.LARGE.jpg"], "step_title": "Step 2: Disassemple Korad, Locate and Cut Sense Wire"}, {"step": 3, "steps_text": "If you have removed the protective layer of lcd panel is now a good time\nto make a protective mask for your screen putting maybe an adhesive tape\nLooking at the image locate the spots where the usb port and switch will be accommodated\nThere is not enough room between top of the front panel and main pcb of the board. So in order to make room for the switch we have to cut a little bit the inner bezel of the panel.\nWith a switch at hand make on the panel where you will make cut. Precision is not of importance. All we need is to make enough room for the switch to fit in.\nWith a rotary tool cut horizontal lines from inner to outer surface. Rotary tool will maybe push you against the screw pole. Be careful and don't cut it like me. Scrap the pieces out of panel\nCheck with the lcd board on if switch fits. Note that you must maintain the gap between outer and inner bezel in order outer metal box fit again in when assembling back the device\nMark the position where you will make the hole for the switch. This time you have to be precise. The center of hole must be half height of switch bellow the infra surface of inner bezel (that is now missing). I suggest to make these measurements ( I didn't keep them to readily provide you). Height of switch, gap height and thichness of inner and outer bezel.\nDrill a hole. I used my rotary tool for that purpose mounted on a DIY drill bench stand. My rotary tool can't host thicker drill bits so I had to route it a little bit inside the hole to enlarge it. You can use whatever drill tool you have available, or melt a hole with your solder iron. You can make the hole slightly bigger so you have the freedom to move around the switch a little bit to center it perfectly\nMake room for the usb port\nAs you can see the location for the usb port is ideal because the white plastic is already cutted, so the drilling or melting will be easier, and also there are two poles in each side that we'll use them to secure usb port in place\nCreate extra masking with two pieces of adhesive tape before drilling or cutting\nIf you use a drilling tool drill multiple holes inside the black area in order to get a coarse opening.\nWith a precision knife smooth the edges", "step_imgs": ["https://cdn.instructables.com/FTI/BIO4/JTIYDOWL/FTIBIO4JTIYDOWL.LARGE.jpg", "https://cdn.instructables.com/FQM/REFI/JTIYDOZE/FQMREFIJTIYDOZE.LARGE.jpg", "https://cdn.instructables.com/FNV/64J2/JTIYDP04/FNV64J2JTIYDP04.LARGE.jpg", "https://cdn.instructables.com/FKM/5WPB/JTIYDP05/FKM5WPBJTIYDP05.LARGE.jpg", "https://cdn.instructables.com/FNV/B0N9/JTIYDP06/FNVB0N9JTIYDP06.LARGE.jpg", "https://cdn.instructables.com/FPT/LQID/JTIYDOYI/FPTLQIDJTIYDOYI.LARGE.jpg", "https://cdn.instructables.com/F2F/MEKK/JTIYI2MU/F2FMEKKJTIYI2MU.LARGE.jpg", "https://cdn.instructables.com/F6X/RP85/JTIYI0LB/F6XRP85JTIYI0LB.LARGE.jpg", "https://cdn.instructables.com/FO1/MS4Q/JTIYI0N4/FO1MS4QJTIYI0N4.LARGE.jpg", "https://cdn.instructables.com/FJ1/LQ7K/JTIYI0FT/FJ1LQ7KJTIYI0FT.LARGE.jpg"], "step_title": "Step 3: Drill Holes for Switch and Usb Port"}, {"step": 4, "steps_text": "The circuit will be the one shown in the first image. It is the super-cluttered collage sketch of what I describe here.\nIt is easier to cut the appropriate length of wires and solder them firstly on the switch.\nWhen switch is up will select the remote sense pair and when switch is down will select the local sense pair. For that reason the local pair will be connected to the upper switch terminals and remote pair will be connected to the bottom terminals (reverse).\nWhat will you need is about 17cm of red and black wire for the local pair. So solder this pair on the top of the switch.\nIn turn use about 8 cm of red and black wire for the pair that goes to korad pcb and solder that again in the middle terminals of the switch.\nTo complete connection use about 5 cm of blue and white wire (or whatever colors you prefer) for the pair that will connect to usb connector and solder it on the bottom terminals of the switch\nTwist slightly all the wire pairs. In that way you will have increased noise immunity\nWhen you are done the switch along with the wires should look like in the picture\nUnplug the original upper half of sense pair, twist it in the opposite\ndirection you did before and solder it with the middle pair of the switch. Cable tighteners are used to hold against untwisting during soldering\nTake a washer or a more appropriate ground terminal and solder it on a ground wire (I used the same blue wire as before) of length about 18 cm. The end result of screwed ground wire should look like in the last picture", "step_imgs": ["https://cdn.instructables.com/F1V/UAY1/JTIYIDPP/F1VUAY1JTIYIDPP.LARGE.jpg", "https://cdn.instructables.com/FIX/OPXJ/JTIYIHM5/FIXOPXJJTIYIHM5.LARGE.jpg", "https://cdn.instructables.com/FEW/Q4E0/JTIYIHGU/FEWQ4E0JTIYIHGU.LARGE.jpg", "https://cdn.instructables.com/FOD/3QRT/JTIYIJ3P/FOD3QRTJTIYIJ3P.LARGE.jpg"], "step_title": "Step 4: Make Wires"}, {"step": 5, "steps_text": "Cut an fr4 board to these dimensions (to be written soon). Drill two holes using a 4mm drill in either direction. I can't recall the exact position of screw holes.(My first instructable! Sorry)\nMark the exact position where you will solder usb port on board in the following way:\nPlace usb port into the hole\nFrom the outer side of panel plug a flash drive or a usb cable, in order to handle the port\nScrew the right side of the board, and leave it in a rotated position so you have access to underneath connector\nPut a bean of hot glue on the back side of usb port near its pins (glue will also protect pins during soldering)\nImmediately rotate board to align its left hole with left screw pole and using flash drive as handle push against board and make fast small movements to align usb port as you wish.\nLet the glue get cold, unscrew the board and lift it from behind the panel\nSecure the position of port on board with a rubber band. (During soldering hot glue will melt and if have not fixed position, usb connector will get misaligned)\nSolder the usb connector onto board.\nAt this point make sure, using continuity test, there is no short circuits between usb pins and ground (outer surface of usb connector). In such a case use another usb connector", "step_imgs": ["https://cdn.instructables.com/FO3/RAV3/JTIYIM8W/FO3RAV3JTIYIM8W.LARGE.jpg", "https://cdn.instructables.com/F53/F23E/JTIYIR9Y/F53F23EJTIYIR9Y.LARGE.jpg", "https://cdn.instructables.com/FJ9/PH2D/JTIYIREV/FJ9PH2DJTIYIREV.LARGE.jpg", "https://cdn.instructables.com/FBI/T00H/JTIYIRYU/FBIT00HJTIYIRYU.LARGE.jpg"], "step_title": "Step 5: Make the Pcb Board That Hold Usb Connector"}, {"step": 6, "steps_text": "Solder the blue(-) wire (not ground) to the second pin of usb connector (as you see it from behind\nSolder the white(+) wire to the third pin of usb connector\nSolder the other side of ground wire on board\nSolder the other end of the local sensor leads to the bottom pair of cutted original sensor cable\nPut back and screw the lcd board\nPut back and screw the yellow pcb board and rotary board with the knob\nPut switch into its hole and screw it\nPut the usb board into its position and use two self tapping screws to screw it (I borrowed two of them from the main pcb board, shhh don't tell anyone)\nPut back and screw the main green pcb board\nPut every thing back together. Don't forget to screw the new ground wire along with the old one", "step_imgs": ["https://cdn.instructables.com/FOE/7AE7/JTIYITZZ/FOE7AE7JTIYITZZ.LARGE.jpg", "https://cdn.instructables.com/FW6/24B6/JTIYIX06/FW624B6JTIYIX06.LARGE.jpg", "https://cdn.instructables.com/FOD/3QRT/JTIYIJ3P/FOD3QRTJTIYIJ3P.LARGE.jpg"], "step_title": "Step 6: Make the Rest of Soldered Connections and Reassemple"}, {"step": 7, "steps_text": "For remote sense cable you can use a ubiquitous usb2.0 cable. Most of them come with a shield and have a twisted pair.\nCut one end of the cable approximately at desired end\nThe twisted pair does not involve the thicker red and black wires (which are not twisted). In my case the twisted pair is consisted of one green(+) and one white(-) wire.\nSolder on the twisted pair the desired connectors (I prefer crocodiles for that case)\nYou can make cheaply multiple sense cables by resurrecting unused usb cables or buy new ones", "step_imgs": ["https://cdn.instructables.com/FGB/JL9Z/JTIYJ07O/FGBJL9ZJTIYJ07O.LARGE.jpg"], "step_title": "Step 7: Make a Remote Sense Cable"}, {"step": 8, "steps_text": "More than enough said, just enjoy the pictures\nNote: Since I ran into trouble for this project I changed also the output led to blue one. But that is a different story.", "step_imgs": ["https://cdn.instructables.com/FPC/YQ76/JTIYJ6QZ/FPCYQ76JTIYJ6QZ.LARGE.jpg", "https://cdn.instructables.com/F9H/7LYA/JTIYJ6DQ/F9H7LYAJTIYJ6DQ.LARGE.jpg"], "step_title": "Step 8: Enjoy Remote Sensing Capability"}], "channel": "Electronics"}, {"category": "Technology", "description": "The Ultrasonic Theremin is an Arduino project that uses a cheap theremin to teach sound waves. By changing the distance of my hand to the device, I am changing the frequency of the sound waves. Also, moving a potentiometer changes the amplitude of the wave. This can be used as a science lesson about sound waves.", "title": "Ultrasonic Theremin (Teach Sound)", "url": "https://www.instructables.com/id/Ultrasonic-Theremin-Teach-Sound/", "steps": [{"step": 1, "steps_text": "Supplies\nArduino Uno with USB Cord\nUltrasonic Sensor to change frequency (pitch)\nPiezo Buzzer to play the sound\nPotentiometer to change the amplitude (volume)\nLED with 220ohm Resistor (visual for the frequency)\nFoamcore Board for the case\nJumper Wires\nNOTE: Most of these parts came from an Arduino kit.\nTools\nComputer with Arduino Installed\nHot Glue Gun\nLaser Cutter for enclosure\nPower Bank if you want to make it portable", "step_imgs": ["https://cdn.instructables.com/F6T/D4CD/JT4TYEXV/F6TD4CDJT4TYEXV.LARGE.jpg"], "step_title": "Step 1: Tools and Supplies"}, {"step": 2, "steps_text": "The Electronics\nThe first two images, to the right, show the electronics in testing but in the third, I moved around the components around to accommodate the case. The LED and Ultrasonic Sensor use 40cm male to female jumper wires which can definitely be smaller but that was what I had on hand. I just wrapped the excess around the Arduino before casing it.\nThe Case\nThe case was made by MakerCase with dimensions that were a little small so my prototype required extra glue to piece it together. After you measure your parts on top of your Arduino, add a few millimeters to your values and insert them into MakerCase for a file that can then be laser cut on the foam-core.", "step_imgs": ["https://cdn.instructables.com/F3B/N8SV/JT91LDW9/F3BN8SVJT91LDW9.LARGE.jpg", "https://cdn.instructables.com/F6P/1O4Y/JT4TYEYC/F6P1O4YJT4TYEYC.LARGE.jpg", "https://cdn.instructables.com/F4B/0MJB/JT4TYEZ8/F4B0MJBJT4TYEZ8.LARGE.jpg", "https://cdn.instructables.com/F2A/0NFJ/JT4TYEZU/F2A0NFJJT4TYEZU.LARGE.jpg"], "step_title": "Step 2: Assembly"}, {"step": 3, "steps_text": "The code is mainly controlled by a variable called pitch. The pitch uses map to covert the values from the ultrasonic sensor to something readable by the piezo speaker and in particular to frequencies between A3 and C5. The constrain makes sure the map doesn't predict a high frequency when it sees a high distance (they were annoying). The rest of the code is to read the sensor, add an LED, and add serial messages.\npitch = constrain(map (distanceCm, 1, 40, 256, 523), 220, 523);", "step_imgs": [], "step_title": "Step 3: The Code"}], "channel": "Arduino"}, {"category": "Technology", "description": "The KUNAI is a 4 x 4 MIDI controller that uses the highest quality; Japanese SANWA buttons , has as many banks as your DAW can handle, a touch filter , and completely customizable and modular!\n\nThis is a project I have finally started to perfect after starting to work on a remix of this midi controller posted on DJTT by Kyle Mohr! https://djtechtools.com/2015/08/25/how-to-make-yo... I have since then moved from wires to a custom made circuit board to clean things up , cleaned up the code, and added a few features! :D", "title": "The KUNAI MIDI CONTROLLER", "url": "https://www.instructables.com/id/The-KUNAI-MIDI-CONTROLLER/", "steps": [{"step": 1, "steps_text": "You will need:\n-TEENSY LC Micro Controller]\n-At least 120x120mm Single Layer Copper Board (I purchase a 300x300 sheet on amazon for $20 that makes 4)\n-Male Micro-B to Female-B panel mount\n-Spectra Symbol Soft Potentiometer\n-10k Resistor\n-x16 SANWA arcade push buttons\n-x4 3mm LEDs\n-x2 12mm Tactile Push Buttons\n-x32 3577 fuse clips ( if you want the buttons to be removable from the PCB [HIGHLY recommended]\nx4 30mmx2.5mm (M3) screws\n-Ferric Chloride\n-Elmers Glue Stick\n-Soldering Iron & Solder\n-1mm drill bit\n-3D printer\n-3D printer filament in desired color\n-2mm single layer copper board\n-Glass or Plastic container\n-Hot Glue\n-Small gauge wire", "step_imgs": ["https://cdn.instructables.com/FLM/L51G/JTIYGN9I/FLML51GJTIYGN9I.LARGE.jpg"], "step_title": "Step 1: Required Materials"}, {"step": 2, "steps_text": "The best part of The KUNAI is that the enclosure is fully 3D printed, allowing it to be VERY easily customized with minimal effort.\nI have included the base files for The KUNAI which have no embossment patterns on it so you can simply drag and drop a pattern into your 3D modeling program, get a 3D stencil from that, and then subtract it from the walls of The KUNAI , causing that pattern to be engraved onto The KUNAI walls.\nTo do this simply follow these steps: -Download & install \"3D Builder\" from The Microsoft store\n-Find an image you would like to use as the pattern on The KUNAI and drag and drop it into 3D Builder\n-You will be given options at the top... Disable Textures, change the levels & smoothness until you achieve a desirable result. You can also use the \"Inverse\" option to reverse the embossment which will reverse which edges are sunk into the walls and which remain at the same level. After you are done with these options, click on \"Import Image\" at the top left, and you will be given a 3D model made from a photo.\n- Next step is to open a SECOND instance of 3D builder , and open The KUNAI base files\n-Go back to your pattern once The KUNAI base has been opened, and ctrl + A to select all, and ctrl + c to copy the model\n-Now go back to The KUNAI base model , and ctrl + v to paste the model\n-With your model now posted beside The KUNAI , select the rotate tool from the bottom that's shaped like a rotating arrow(or \"E\" if you're having trouble finding it), you will then adjust the Rolll, Pitch & Yaw of your pattern to align it with the walls of The KUNAI\n-Once you're happy with the orientation of your pattern, select the move ( or \"R\" if you're having trouble finding it)\nand move the pattern flush with the wall of The KUNAI; it should \"SNAP\" into place once it's flush.\n-Now with only the pattern selected, ctrl + c to copy it in its new position ( this will save time for each wall )\n-With only the pattern selected, we want to chose the \"SCALE\" tool ( Q if you're having trouble finding it ),\npay attention to the number under \"Z\" , as this is your patterns base thickness, and now drag the arrow facing the center of The KUNAI towards the center of The KUNAI , until the Z value is 0.5mm greater than it was originally ( this will be an embossment with a 0.5mm depth )\n-Now click on \"Edit\" at the top, and select \"Subtract\" from its secondary bar to create the embossment!\n-You will notice The KUNAI now has a pattern on ONE of the walls, but we still need the other 3! This is why we copied the pattern before editing it any further! Simply ctrl + v to paste the pattern back in the exact same spot it was in before you pulled it into the walls for embossment\n-Simply select the pattern that you just pasted ( ENSURING ONLY THE PATTERN IS SELECTED ) , and use the MOVE TOOL \"R\" , to move it to the opposite wall and repeat the process\n-For the last 2 walls ( that are facing 90 with the initial wall ) , after you do the second subtraction and paste the pattern for a third time, select the rotate tool (E) , and rotate it 90 degrees and then follow the same steps again!\nOnce you're happy with the Pattern on The KUNAI walls. Save the file as a .STL , .OBJ , or .3MF.\n-Now do all that again for the top cover >:} ( just simply put your pattern ON TOP of the cover and subtract from that )\nTADAA!!!! 3D modesl done... Now 3D print them! ( I recommend printing it with PLA @ 20% infill , 2 walls, 0.3mm layers )", "step_imgs": ["https://cdn.instructables.com/FA0/DLI9/JTIYGPF0/FA0DLI9JTIYGPF0.LARGE.jpg", "https://cdn.instructables.com/FS4/W0SI/JTIYGPER/FS4W0SIJTIYGPER.LARGE.jpg", "https://cdn.instructables.com/F5W/NYXF/JTIYGPEN/F5WNYXFJTIYGPEN.LARGE.jpg"], "step_title": "Step 2: 3D Modeling the KUNAI"}, {"step": 3, "steps_text": "So... This is where things get a little weird, especially since there's multiple ways to do this.\nIf you're lucky enough to own a 3D printer, I have already done all the brain work to turn your 3D printer into a circuit board creator extraordinaire WITHOUT having to do ANY kind of modifications!!!\nTo prepare your 3D printer for making circuit boards, simply drop the bed at least 2mm from level, and literally that's it! ( for the printer )\nNow securing your Copper Board to the printer is the little more complicated part , and where your double sided tape comes in.\n-Simply take your double sided tape, and tape the back of your Copper Board; ENSURING that the corners and the middle at least have tape on them ( the tape I use is about the thickness of duct tape, and using 3 strips only leaves a very small gap that's not covered )\n-Now remove the protective back from the tape, and drop the Copper Board onto your 3D printers bed as square as possible ( I use a 150mm sheet of copper to make a 120mm board to leave room for error due to it not being perfectly square... and because I buy my sheets in 300x300 packs :3 )\n-Now level your printer as you usually would, but instead of using the corners of the bed as reference points to flat, use the corners of the copper board ( if your using the on board level option on your 3d printer, level it to the middle, wait for it to get to the lowest point it gets, then turn your printer off , or send the \"DISABLE MOTORS\" command via your slicer, and manually move the print head and bet to get to the corners of the board)\n-Once your board is leveled, take your Elmer's Glue and cover the copper with at least 3 layers ( IMPORTANT , TOO MUCH IS BETTER THAN TOO LITTLE ) , I usually do a vertical pass, horizontal pass, and then another vertical pass, or until the glue is visibly cloudy on the copper\n-After all these steps are complete , simply load the included \"traces\" 3d model into your slicer , set your nozzle temp to the high end of the scale for your filament , set your bed to 60 degrees (Haven't tested with an unheated bed) set the walls to \"4\" , 100% infill , 0.3mm layers, solid diaphragm ever 1 layer ( if you have the option ) , and you may have to mess around with single extrusion settings to get a solid fill on the traces. I also recommend using 2/3 skirts 4-5mm away to prepare the nozzle, and also find out if your board is properly lined up on the bed.\n-Once you have the model loaded up and the print settings set, print! -Pay close attention to the skirt when the print first starts, if it prints the whole skirt onto the board , and nothing is lifting / peeling off the board, the rest of the print SHOULD go through no problem!\nOnce your board is finished printing , it's onto step 2 of 3 of the PCB making process!", "step_imgs": [], "step_title": "Step 3: The PCB ( Printed Circuit Board) Step 1/3"}, {"step": 4, "steps_text": "Once your copper board is finished printing, it's time to get ready to etch it.\n-Remove your RAW PCB from the printer bed and remove any tape still attached to it....prying with a 3D printing chisel with the bed a little warm helps!\n-Now run your board under the tap set to hot at maximum pressure ( assuming your sink doesn't shoot lasers ) to melt any of the extra glue off! It doesn't hurt to use a paint brush to try and help get any left over glue out from in between traces that run close to each other ( like the center traces and the ones along the edges ), FAILURE TO REMOVE ANY GLUE WILL RESULT IN THE COPPER NOT BEING ETCHED, AND POSSIBLY SHORTING OUT YOUR BOARD IF NOT CAUGHT EARLY ENOUGH!!!!!\n-Place your RAW PCB into a plastic container or pyrex / glass dish ( ANYTHING BUT METAL )\n-Pour some Ferric Chloride onto the RAW PCB, until its fully submerged\n-Now shake shake shake! Constantly agitate the Ferric Chloride by shaking your container, twisting it, rocking it back and forth , what ever, just keep it moving, and switching directions SEEMS to help.\n-Your board is done etching once you see NO copper left anywhere on your board ( I wouldn't bother checking on it before 10 min or so )\n-If you're unsure if it's done ( seems patchy ) , simply remove the board from the Ferric Chloride, run it under some cold water, and inspect it closely , if there's copper left, run that spot under hot water and give it a shake in the Ferric Chloride again for a few min! If that copper doesn't want to etch, it probably still has glue over it, so simply use your paint brush and warm water to remove the glue from there and either submerge it back into the Ferric Chloride , or you can dip your paint brush into the Ferric Chloride and repetitively paint of the spot that the remaining copper is to remove it without having to submerge the whole board again!\n-Once you're convinced that all the copper in the negative space ( spots with no 3D printing on it ) has been etched, simply rip off the 3D printed layer using tweezers or a chisel!\n-Now you should have a completely blank professional looking PCB you made at home for only a few dollars! (You're welcome) , now take that PCB and run it under water and rub off any glue left over on the traces.\n-Now take some steel wool , and give the traces a nice clean & shine!\nONTO STEP 3/3 of the PCB process!", "step_imgs": [], "step_title": "Step 4: The PCB Step 2 / 3"}, {"step": 5, "steps_text": "Once you have your blank PCB rinsed and polished , it's time to simply cut it to size and drill the holes for all the components!\n-Using a 1mm drill bit, prepare your eyes, hands and mind to drill 90 holes manually\n-The drill holes are a little hard to identify at first, but long story short , it's anything that looks like a nipple or circle ( attached photo with circled drill points )\n-Once you've drilled all 12982309182 holes, cut the board to size buy following the OUTSIDE edge of the big trace the runs along the edge of the board ( Ground Plane )\nNow to fill them holes ;)\nThis part is simple enough! All components should be mounted on the OPPOSITE side of the traces so that the tail end of the component is only sticking through to the side where the traces are ( picture attached ).\nThe TEENSY should be mounted with the USB port facing the LEFT EDGE of the board if you're looking at it from the blank side while it's correctly oriented.\nThe Fuse Clips should be oriented with the slit facing the bottom edge of the board if you're looking at it from the blank side while it's correctly oriented\nLED's should have the shorter end going through the trace at the edge ( GROUND ) , and the longer one onto the thinner trace the runs along the ground trace all the way around the board ( 5V )\nnow simply solder everything from the other side!\nNow rout your Micro USB to B USB to end up coming out between the top two rows of clips to the left side ( reference picture for help )\nNow onto the next step! Programming!", "step_imgs": ["https://cdn.instructables.com/FA2/6E1F/JTIYGRC9/FA26E1FJTIYGRC9.LARGE.jpg"], "step_title": "Step 5: The PCB Step 3/3"}, {"step": 6, "steps_text": "Since The KUNAI uses a TEENSY processor , it makes compiling code with ARDUINO stupid easy.\nThis code uses the \"bounce\" & \"MIDI\" libraries to look for button pushes, and then to send MIDI code * duh *\nI won't break down the code here, as it's annotated pretty well!\nYou will need the Arduino Programmer and the teensyduino libraries, which can both be found by a quick google search.\nPlug in your now \"dumb\" board into your computer and open up the ARDUINO program.\nNow simply copy and paste this code into your ARDUINO program , or open the included .ino file with the ARDUINO program and set the following settings: Tools > Boards > Teensy LC\nTools > USB Type > MIDI\nTools > Port > Which ever port shows the Teensy\nNow finally hit the arrow button top left to verify and upload the code!\nNOW TIME TO TEST!", "step_imgs": [], "step_title": "Step 6: Coding the KUNAI"}, {"step": 7, "steps_text": "So... Now you technically have a working midi instrument, but we're not 100% sure if there's any shorts , or breaks in the traces & solder, so we need to test it!\nOpen up your DAW like FL Studios or Ableton ( I will use Ableton for this example ) , and enable the Teensy MIDI device in MIDI options ( picture attached )\nNow load up a drum rack ( onto a midi channel for ableton by going to instruments in the collections menu on the left, and double clicking the drum rack to load it up.\nnow start using a button, a wire or anything conductive, short each set of 2 clips on the board and watch for your LED's to turn on , and for the drum rack pad to light up relating to the set of pads you shorted; bottom left pad ( c1 ) is located on the bottom left of The KUNAI if the board is rotated 90 degrees clockwise.\nIf every set of standoffs shorting causes a pad launch + LED glow , then the standoffs are working correctly!\nNow push the left tactile button and short the pads again , and watch for the lights in the bank of squares above the currently selected one to light up to ensure that your next pad button is working , once you have that working , press the right tactile button, which will return you to your active set of pad , short pads again, if you see the active grid light up , your bank buttons work!\nTo make sure that your touch filter works, enter midi mapping mode ctrl + m for Ableton on Windows ( command + m for Ableton on OSX ) or ctrl + j for FL Studio on windows ( Probably command j for FL Studios on OSX )\nnow click on any knob on your daw , then drag your finger along the touch filter, then exit MIDI map mode ( ctrl / command m for ableton , and I THINK FL studio automatically exists after each link ).\nNow to finally test the filter, drag your finger along it again, and you should see the knob you clicked on , correlate with the position of your finger on the filter!\nYAY!!! YOUR BOARD WORKS! NOW ONTO THE FINAL STEP OF ASSSEMBLY!", "step_imgs": ["https://cdn.instructables.com/FCT/TT0U/JTIYGSKU/FCTTT0UJTIYGSKU.LARGE.jpg"], "step_title": "Step 7: TESTING TIME"}, {"step": 8, "steps_text": "Now you should have a 3D printed KUNAI base , a 3D printed KUNAI top , and an assembled Circuit Board!\nFirst step is to put the buttons into the top panel , which is pretty self explanatory . just keep in mind that the button pins need to make *ROWS* instead of *COLUMNS* ( hard to explain ) as the board goes in turned 90 degrees, so if you have a pattern printed on the that needs to be oriented in a certain way, pay attention to that! OTHERWISE , just push the buttons in the same way so that the pins are aligned with the edges of the board creating 4 columns or row!\nNow make sure your USB connector is in the correct position, align the pins from the bottom of the buttons into the fuse clips and push them into place! It's easiest to align a whole row or column at a time and push that row or column down at the same time instead of each button individually! Keep in mind that due to the drilling being manual and the placing of the buttons being manual , everything will NOT be perfectly aligned , you may have to finesse the button pin into the clip by slightly bending and twisting the top cover!\nOnce you have the top assembled , hot glue the tactile buttons into the cut outs in The KUNAI base , let it cool, then simply slide the touch filter into the slit; with the silver part of the filter facing out, and use a little bit of hot glue to keep the resistor and little blue tab secured to the body of The KUNAI so it stays out of the way of the PCB once it's put into the base!\nNow simply drop the board and buttons into The KUNAI base , while putting the far edge in first ( edge with the tactile buttons ) and now the tricky part... Lining up the USB port with the cutout.\nI find this easiest by using tweezers or a small hard tool to push around in the port until I see on of the screw holes through the cutout holes. Once you see one, secure one side with a screw ( don't fully tighten it yet ) , and then go fishing again for the second screw hole while the first one is still being held in place with the screws; once you've found it, screw in both screws and tighten them down ( I can never get it completely perfect with my model yet )\nNow for the last steps screw the top panel into the bottom panel using the 30mm screws, and add the rubber feet to the corners on the bottom of the now finished KUNAI!", "step_imgs": ["https://cdn.instructables.com/FE4/XMDC/JTIYGVM9/FE4XMDCJTIYGVM9.LARGE.jpg"], "step_title": "Step 8: Final Assembly"}, {"step": 9, "steps_text": "Thank you for checking out my tutorial, this project has no secrets behind it, but as you can see is a very tedious and expensive project! I make and sell these from my website @ www.themidiwork.shop\nThank you for all your support , and I hope you found this tutorial informative enough to make your own, or to have inspired you to purchase one from me!", "step_imgs": ["https://cdn.instructables.com/FLS/XIOP/JTIYGUI6/FLSXIOPJTIYGUI6.LARGE.jpg"], "step_title": "Step 9: Support the Future of 3D Printed Instruments!"}], "channel": "Audio"}, {"category": "Technology", "description": "This Instructable is for Workshop Users at the Autodesk Technology Center in San Francisco\nThis Instructable explains how to use the Ultimaker S5 3D Printer. The Ultimaker is a fused deposition modeling(FDM) printer that extrudes filaments of thermoplastic material to print your model, layer by layer. Requirements for using the Ultimaker printer at Pier 9:\nTake General Workshop Safety Class\nRead through all the pages of this Instructable\nFind Shop Staff to go through Safety Check-off\nFor additional Information on how to use the Ultimaker S5, please see the support site and choose operation from the right panel options.", "title": "Autodesk Workshop Guide: Ultimaker S5 3D Printer", "url": "https://www.instructables.com/id/Autodesk-Workshop-Guide-Ultimaker-S5-3D-Printer/", "steps": [{"step": 1, "steps_text": "The Ultimaker has many moving parts that could cause injury.\nTip: While the Ultimaker is in operation never reach inside it, or open the visor or the lid.\nWhen trying to remove support, scrapers can cause injury if used incorrectly.\nTip: Always scrape away from yourself. Rest the bed in a vertical position, against a sturdy level surface when removing a part. Always use short, ramming motions to remove a part from the print bed. Always keep fingers or other body parts out of the path of the scraper when removing a part from the print bed. Keep the angle between the scraper and the print bed small while you are removing your part.", "step_imgs": [], "step_title": "Step 1: Safety Checklist"}, {"step": 2, "steps_text": "Which material should I use?\nPLA is the standard material supported on our Ultimaker. ABS, ASA, Nylon and Polycarbonate are available on the Fortus 450 machines. If you have a special material request, please speak with Shop Staff.\nWhen you select a print material, it is important to consider the characteristics of the object you want to print and the environment in which it will be used. Ideally, you will select your print material based on material characteristics such as:\ntechnical properties\naesthetic qualities\nprocessing ability\nThe following material descriptions will help you select the right material for your 3D printing application. For further information, refer to the material data sheets for technical data and the material guides for printing instructions.\nPLA (polylactic acid)\nPLA is a biodegradable polymer that is ideal for prototyping 3D models with pleasing aesthetics. It has good surface quality, is somewhat glossy, and prints details with a high resolution. PLA is a reliable and easy-to-print material that can be printed at low temperatures. It has a low shrinkage factor and does not require the use of a heated build plate. It is the perfect choice for creating concept models, visualization aids, or for use in education. Overall, PLA is not as strong as more technical materials but does have a high tensile strength. It is not recommended for functional and mechanical parts. Items printed with PLA can lose their mechanical properties and may become brittle over time.\nPVA (polyvinyl alcohol)\n\nAlthough PVA is not typically used for printed objects, it is an ideal material to choose if you\u2019re looking for removable support structures. Ultimaker PVA is biodegradable, has a good thermal stability, and is less moisture sensitive than other PVA filaments. After printing in combination with another material, PVA support structures can easily be removed by dissolving in water. This makes PVA a good support material and allows you to print models with large overhangs and complex geometries. Note: PVA is only supported on the Ultimaker 3 and is currently optimized to serve as a support structure for either PLA or Nylon.\nTPU 95A (thermoplastic polyurethane)\nTPU 95A is a semi-flexible material for use in applications that demand the qualities of rubber and plastic. TPU 95A has a score of 95 on the Shore A Hardness Scale, with an elongation break of up to 580%. TPU 95A is flexible, strong, and can withstand high impacts without deforming or breaking. It is also resistant to many common industrial oils and chemicals and easily resists normal wear and tear. Unlike other (semi-)flexible materials, Ultimaker TPU 95A is easy to use, prints quickly, and does not require a high level of expertise to use effectively. TPU 95A is not recommended for applications that will be exposed to UV light, moisture, or high temperatures for extended periods.\nABS (acrylonitrile butadiene styrene)\nABS is a well-known material used by professionals for mechanical and technical applications. It has excellent mechanical properties and can be used for objects that require toughness and durability. With a thermal resistance of up to 85 \u00b0C, ABS can be used in warm environments. These properties make ABS a good choice for prototyping and fit testing. Ultimaker ABS is specially formulated to minimize warping and ensure consistent interlayer adhesion. This makes it easier to use than standard ABS filaments. Ultimaker ABS has pleasing aesthetics and results in a matte finish when printed. Note: ABS is adversely affected by exposure to UV light, so it is strongly recommended not to use ABS for applications that are exposed to UV light for extended periods.\nCPE (co-polyester)\nCPE is a popular material for mechanical applications. It has the same strength as ABS but also has high tensile strength, dimensional stability, and chemical resistance. This means that CPE can be used in combination with most industrial oils and chemicals without adverse effects. CPE is odorless and emits few UFPs (ultrafine particles) and VOCs (volatile organic compounds) during printing. This makes it a safer choice than many other materials. Note: CPE should not be used for parts exposed to high temperatures as it may deform at temperatures above 70 \u00b0C. CPE+ (co-polyester) CPE+ is stronger than CPE, which makes it suitable for applications where the strength of the object is key. CPE+ is primarily used for functional prototyping and modeling. It has greater thermal resistance than CPE, and therefore parts printed in CPE+ can be used at temperatures up to 100 \u00b0C without deforming. Note: Printing in CPE+ is more challenging than CPE because of the high temperature required to print.\nPC (polycarbonate)\nPC can be used for various engineering applications. It\u2019s one of the toughest print materials, making it a perfect choice for printing strong objects. PC has a high mechanical strength, good UV stability, and high thermal resistance. It retains its form at temperatures up to 110 \u00b0C. In addition, PC has a good dimensional stability, is chemical resistant, and has flame-retardant characteristics. These properties make it suitable for lighting, molds, engineering parts, tools, functional prototyping, and short-run manufacturing. Note: Printing in PC can be challenging due to the high temperature required to print.\nNylon (polyamide)\nNylon is a well-known material used for printing tools, functional prototypes, and end-use parts. It combines strength, impact resistance, and flexibility. Nylon 3D prints are both strong and slightly flexible. Ultimaker Nylon is very durable due to its abrasion resistance and corrosion resistance to alkalis and organic chemicals. Unlike standard nylon filaments, Ultimaker Nylon is considerably easy to use - it features reduced humidity absorption for easy and reliable printing.\nPP (polypropylene)\nAs the second most used polymer worldwide, PP offers many possibilities for both prototypes and end-use parts. Ultimaker PP is durable with a high toughness and fatigue resistance. This means that PP retains its shape after torsion, bending, or flexing. It has very low friction, allowing parts that are in contact with each other to move smoothly over each other. PP is also semi-flexible. While it\u2019s not as flexible as TPU 95A, it can still be a good option if you\u2019re looking for a material with slight flexibility. Besides this, it has good chemical resistance and high electrical resistance, so it is ideal as an electrical insulator. Another key advantage of PP is that it has a low density, making it perfect for the creation of lightweight parts. Furthermore, it has good translucent properties.", "step_imgs": ["https://cdn.instructables.com/FCL/M2NB/JTENDFE0/FCLM2NBJTENDFE0.LARGE.jpg", "https://cdn.instructables.com/FFO/UV9U/JTENE2G7/FFOUV9UJTENE2G7.LARGE.jpg", "https://cdn.instructables.com/F57/45KZ/JTENE33Z/F5745KZJTENE33Z.LARGE.jpg", "https://cdn.instructables.com/FUW/G2BT/JTENE347/FUWG2BTJTENE347.LARGE.jpg"], "step_title": "Step 2: Material Choices"}, {"step": 3, "steps_text": "PLA (polylactic acid) is one of the most widely used 3D printing materials and also the recommended material for beginners. It prints fast, is safe, and can be used for a broad range of models and applications. The following is everything you need to know about printing with Ultimaker PLA.\nOn the Ultimaker S5 and Ultimaker 3, PLA can also be printed in combination with PVA, Breakaway or another color of PLA. This overview shows the materials PLA is compatible with.\nTemperatures\nUltimaker PLA prints at moderate temperatures, mostly around 200-210 \u00b0C, depending on the selected nozzle size and print profile. Profiles for the 0.25 mm nozzles use a slightly lower temperature though, and the 0.8 mm profiles require a higher temperature.\nFor the build plate, a temperature of 60 \u00b0C is used for heated build plates, but it is also possible to print PLA on a cold build plate using the blue tape.\nNote: The correct temperatures are automatically used based on the printer, nozzle size, and profile you select in Ultimaker Cura.\nAdhesion\nPLA usually adheres well to the heated glass plate, but for the best results, it is advised to apply a thin layer of glue (included in the accessory box of your 3D printer).\nThe PLA profiles in Ultimaker Cura use a brim as build plate adhesion type, to provide optimal adhesion on the first layer.\nA brim is made of extra lines printed around the perimeter of the initial layer of your 3D print to ensure a successful adhesion to the build plate. Once the 3D print has finished, do not remove it while the build plate is still warm. This can result in deformation of the base of your print.", "step_imgs": [], "step_title": "Step 3: Printing With PLA"}, {"step": 4, "steps_text": "You will need an .STL or .OBJ to print with CURA.\nYour model will need to be watertight, meaning it has no holes, inverted normals or other errors. You can check for errors in Autodesk's Netfabb or Meshmixer.", "step_imgs": ["https://cdn.instructables.com/FOH/V6GG/JTENE422/FOHV6GGJTENE422.LARGE.jpg"], "step_title": "Step 4: 3D Model"}, {"step": 5, "steps_text": "To print on the Ultimaker you will need to open Cura on the Desktop Computer located next to the printer.\nCURA UI:\nOpen file\nAdjustment tools\nNon-printable areas\n3D model\nView mode\nPrinter, material, print core and build plate configuration\nPrint Setup (recommended mode)\nModel information\nPrint job information (print time and material usage)\nPrint over network, or save to file or USB stick\nPrepare a File\nTo slice a model in Ultimaker Cura:\nLoad the model(s) by clicking the Open File folder icon.\nIn the sidebar (right side of the screen), check if the materials, print cores and build plate are correct.\nUse the Adjustment Tools to position, scale and rotate the model as desired.\nSelect your desired settings (layer height/print speed, infill, support and build plate adhesion) under Print Setup.\nMake sure you have the correct Tip and materials selected.\nTo view the result of the selected settings, change the view mode from Solid view to Layer view.\u0007\nIn the bottom-right corner, select Print over network, Save to file or Save to USB depending on the printing method. Read more here about sending prints to the Ultimaker.\n\u2714 Tip: Check the print heads before printing for any plastic that is dripping off the hot ends because it can some times throw off the auto height calibration.\n\u2714 Tip: \u0007When printing with support, you have the option to select the extruder that you want to use to print the support structure. This allows you to print your model with PVA support, Breakaway support or build material support on your Ultimaker S5.\n\u2714 Tip: If you create a dual-color print you have to assign material colors to the models and merge the models before finishing your slice. For more instructions on how to use Ultimaker Cura, take a look at the Ultimaker Cura manual.", "step_imgs": ["https://cdn.instructables.com/FTY/0BS6/JTENDHXV/FTY0BS6JTENDHXV.LARGE.jpg"], "step_title": "Step 5: Software: Ultimaker Cura"}, {"step": 6, "steps_text": "Print Failures", "step_imgs": [], "step_title": "Step 6: Printing"}, {"step": 7, "steps_text": "Once your 3D print is finished it must be removed from the build plate.\n\u26a0Caution: When using a brim, be aware of the danger of cutting yourself when removing the print from the build plate.\n\u26a0Caution: Take the build plate out of the printer to avoid damaging the build plate clamps.\nWait for cool down\nIf you printed directly onto the build plate, simply allow the build plate and the print to cool down after printing. The material will contract as it cools, allowing you to easily remove the print from the build plate.\nUse a spatula If your print is still adhered to the build plate after cooling, you can use a spatula to remove the print. Place the spatula under the print, and keep it parallel to the build plate, and apply a small amount of force to remove the print.\nA spatula can also be used to carefully remove remaining parts of the print from the build plate, such as the brim or support structures.\nUse water\nIf you printed on the build plate with glue and if neither of the above methods work, remove your print using water.\nRemove the build plate with print from the printer. Be careful not to burn your fingers if the build plate is still warm.\nRun cool tap water on the back side of the plate to cool it quickly. The print material will contract more than with normal cool down.\nOnce cool, the print will pop off.\nAlternatively, you can run lukewarm water over the print side of the plate to dissolve the glue. Once the glue is dissolved, it is easier to remove the print.\nIf PVA was used, place the build plate and print in water to dissolve the PVA. This makes print removal easier.", "step_imgs": ["https://cdn.instructables.com/FNL/FX89/JTENDLSW/FNLFX89JTENDLSW.LARGE.jpg"], "step_title": "Step 7: Removing Your Print"}, {"step": 8, "steps_text": "If you did not use a support structure, you may still need to use a deburring tool to remove the brim around the base of the part.\nRemove Breakaway support\nPrints using Ultimaker Breakaway as support material will require post-processing to remove the support structures. This can be achieved by breaking the support structures from the build material.\n\u26a0Caution: It is advised to wear protective gloves when the support structure contains sharp corners or when working with bigger models.\n1. \u0007Tear the inner support structure\nStart by removing the walls of the support structure with a gripping plier. This allows you to quickly tear away the majority of the inner support structure.\n2. \u0007Pull the Breakaway support from the build material\nAfter removing most of the support structure, the remaining part(s) can be pulled from the build material. Use cutting pliers to grip the Breakaway support in a corner and try to carefully get underneath it, then bend it upwards. Repeat this for several corners, so that you can loosen the support from the model around the corners. After this, pull the Breakaway support from the model.\n3. \u0007Peel the last traces from the model\nSometimes a final layer of the support material remains after pulling the Breakaway support from the build material. If this happens, use cutting pliers to peel it off from a loose edge. Any leftover traces on the model can be removed with tweezers.\n\nDissolve PVA support\nPVA support structures can be removed by dissolving the PVA in water. This takes several hours and leaves no trace afterwards.\n1. \u0007Submerge the print in water\nBy putting a print with PVA in water the PVA will slowly dissolve.\n2. \u0007Rinse with water\nAfter PVA supports are totally dissolved, rinse the print with water to remove any excess PVA.\n3. \u0007Let the print dry\nLet the print dry completely and apply additional post-processing to the build material if desired.", "step_imgs": ["https://cdn.instructables.com/FP0/YEVA/JTENDM8T/FP0YEVAJTENDM8T.LARGE.jpg", "https://cdn.instructables.com/FHE/60DY/JTENDM9N/FHE60DYJTENDM9N.LARGE.jpg", "https://cdn.instructables.com/FYK/HL3T/JTENDMCG/FYKHL3TJTENDMCG.LARGE.jpg", "https://cdn.instructables.com/FWW/VV7D/JTENDMD9/FWWVV7DJTENDMD9.LARGE.jpg"], "step_title": "Step 8: Post Process"}], "channel": "3D Printing"}, {"category": "Technology", "description": "In this DIY project, I will assemble a 2K and 4K resolution projector using 3D printers and commercially available parts. I will provide a 3D print file when I am done.", "title": "Easily 3Dprint 2k 4k Uhd Projector Part 1:the Light Source", "url": "https://www.instructables.com/id/Easily-3Dprint-2k-4k-Uhd-Projector-Part-1the-Light/", "steps": [{"step": 1, "steps_text": "Use 2 point LEDs: xhp70\nPaste it on the 3D printing bracket with instant glue and sand the back with a sandpaper", "step_imgs": ["https://cdn.instructables.com/F7R/Q9CA/JTENFD6G/F7RQ9CAJTENFD6G.LARGE.jpg", "https://cdn.instructables.com/FG0/NZIP/JTENFD7X/FG0NZIPJTENFD7X.LARGE.jpg", "https://cdn.instructables.com/FF7/OJVJ/JTENFD7V/FF7OJVJJTENFD7V.LARGE.jpg"], "step_title": "Step 1:"}, {"step": 2, "steps_text": "Each LED needs to use a constant current power supply separately, set the voltage to 6V, and set it to a constant current of 4.8A or less.", "step_imgs": ["https://cdn.instructables.com/F6G/ZLY6/JTENFD81/F6GZLY6JTENFD81.LARGE.jpg", "https://cdn.instructables.com/F7C/53MI/JTENFD9D/F7C53MIJTENFD9D.LARGE.jpg", "https://cdn.instructables.com/F6T/3SM1/JTENFD9U/F6T3SM1JTENFD9U.LARGE.jpg", "https://cdn.instructables.com/FTJ/7C19/JTENFD9V/FTJ7C19JTENFD9V.LARGE.jpg"], "step_title": "Step 2:"}, {"step": 3, "steps_text": "Each LED needs to use a constant current power supply separately, set the voltage to 6V, and set it to a constant current of 4.8A or less.", "step_imgs": ["https://cdn.instructables.com/FVY/PK4U/JTENFDA7/FVYPK4UJTENFDA7.LARGE.jpg", "https://cdn.instructables.com/FOU/YVIF/JTENFDA5/FOUYVIFJTENFDA5.LARGE.jpg", "https://cdn.instructables.com/FQJ/73IL/JTENFDA4/FQJ73ILJTENFDA4.LARGE.jpg"], "step_title": "Step 3:"}, {"step": 4, "steps_text": "It can be used as a flashlight after the battery is installed.", "step_imgs": ["https://cdn.instructables.com/FQ9/EVBZ/JTENFDAA/FQ9EVBZJTENFDAA.LARGE.jpg", "https://cdn.instructables.com/FVG/8SYV/JTENFDAH/FVG8SYVJTENFDAH.LARGE.jpg"], "step_title": "Step 4:"}, {"step": 5, "steps_text": "The interior of the 3D printed lampshade is sprayed with a reflective paint, and the Fresnel lens is placed, and the light source portion is completed.", "step_imgs": ["https://cdn.instructables.com/FUI/8CBP/JTENFDFR/FUI8CBPJTENFDFR.LARGE.jpg", "https://cdn.instructables.com/FCS/P560/JTENFDFE/FCSP560JTENFDFE.LARGE.jpg", "https://cdn.instructables.com/F0J/XPFK/JTENFDCY/F0JXPFKJTENFDCY.LARGE.jpg", "https://cdn.instructables.com/FCV/4WYJ/JTENFDAK/FCV4WYJJTENFDAK.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "It is already a handheld searchlight.\nTo be continued, thank you for watching", "step_imgs": ["https://cdn.instructables.com/FA1/FNRL/JTENFDIM/FA1FNRLJTENFDIM.LARGE.jpg", "https://cdn.instructables.com/FY7/RMIP/JTENFDJ8/FY7RMIPJTENFDJ8.LARGE.jpg"], "step_title": "Step 6:"}], "channel": "3D Printing"}, {"category": "Technology", "description": "In this IBLE, we\u2019ll take a quick tour of an IoT-powered model of a Desktop Garage Door Opener. The model simulates the workings of an actual garage door opener and I use it as a rig to test changes to the entire IoT system before I deploy them to the application that controls the garage door in my house.\nThis IBLE is one part of my book project. The book is titled Give Yourself IoT Super Powers and is available on Amazon Kindle.", "title": "An IoT-powered Desktop Garage Door Opener", "url": "https://www.instructables.com/id/An-IoT-powered-Desktop-Model-of-a-Garage-Door-Open/", "steps": [{"step": 1, "steps_text": "The Desktop Geo Model was designed entirely using the free online design software Tinkercad. The image shows the overview of the entire design with identifiable components.\nThe parts for the model were printed out using ordinary PLA.", "step_imgs": ["https://cdn.instructables.com/F8D/KVLY/JTENDLP3/F8DKVLYJTENDLP3.LARGE.jpg"], "step_title": "Step 1: The Design"}, {"step": 2, "steps_text": "Left to Right:\n1.\nThis is the aerial view of the assembled model. The WeMos D1 mini on the top-left is the heart of the model . The WeMos runs the Micro Web Server application that I can access via my cell phone or tablet to control the tiny door on the model.\nThe Servo motor on the bottom-right is powered by a separate 9V battery and moves the door to the open or closed position based on the user command received by the Web Server over local WiFi.\n2.\nAn LM2596 DC-to-DC Adjustable Step-down voltage regulator, or Buck converter has been used to step down the 9V input voltage from the battery into the 5V required by the SG-90 Servo.\n3.\nA small switch soldered in line with the power wire from the battery turns the power to the voltage regulator on or off. When not in use, this switch is in the off position.\n4.\nThe core electronics have been set up on small bread board mounted on to the top-side Cross Brace of the model.", "step_imgs": ["https://cdn.instructables.com/F7X/VRS2/JTENDJV5/F7XVRS2JTENDJV5.LARGE.jpg", "https://cdn.instructables.com/FU7/SNNN/JTENDJV7/FU7SNNNJTENDJV7.LARGE.jpg", "https://cdn.instructables.com/FW2/9UM6/JTENDJVE/FW29UM6JTENDJVE.LARGE.jpg", "https://cdn.instructables.com/FWH/SRIG/JTENDJW8/FWHSRIGJTENDJW8.LARGE.jpg"], "step_title": "Step 2: The Aerial View and Electronics"}, {"step": 3, "steps_text": "Left to Right:\n1.\nThe little SG-90 Servo motor is mounted on the Servo Mount Post . One of the screws that holds the servo mounting bracket to the mount post also holds up the Buck converter.\n2.\nThe Servo horn is attached to the Servo on one end, and the drive shaft on the other end.\n3.\nA double-ended horn locks into both the slots of the Drive Lock Ring to better transmit power from the Servo to the door. This horn also comes as part of the SG-90 package.\n4.\nThe door is mounted between two slotted flanges on either end . One of them is screwed on to the drive pin driven by the Servo motor.\n5. Why the Relay?\nThe little SG-90 servo does not require a relay and can be driven directly by the WeMos D1 mini. But the real garage door opener is triggered by the WeMos via a Relay!\nTherefore, I\u2019ve opted to wire the servo power line from the output of the Buck converter through a Relay. The WeMos turns the power on to the servo before moving the door and then cuts power soon after the door moves to the required position. This arrangement is similar to how the real garage door is wired to the IoT Server.", "step_imgs": ["https://cdn.instructables.com/FKC/GHNV/JTENDJY9/FKCGHNVJTENDJY9.LARGE.jpg", "https://cdn.instructables.com/FN7/Y5UW/JTENDJYA/FN7Y5UWJTENDJYA.LARGE.jpg", "https://cdn.instructables.com/FHY/56EG/JTENDJZ4/FHY56EGJTENDJZ4.LARGE.jpg", "https://cdn.instructables.com/FB5/EJ8O/JTENDJZY/FB5EJ8OJTENDJZY.LARGE.jpg", "https://cdn.instructables.com/FP9/SRA8/JTENDK49/FP9SRA8JTENDK49.LARGE.jpg"], "step_title": "Step 3: The Servo Drive System"}, {"step": 4, "steps_text": "Here\u2019s a shot of the model with the garage door swiveled to the Open position.\nThe two side walls of the model have been held on to the base with four L-angled brackets as shown . The separation distance between the inside faces of the walls is 115 mm.\nThe entire model is mounted on to three pieces of scrap wood. These sections of wood couldn\u2019t be glued together as I did not have clamps wide enough. Therefore, three 3D printed brackets (in Black, third image) were used to hold the wood in formation and screwed in place to these brackets.\nHowever, this is purely an optional arrangement because the base you might be using may be one solid piece of wood.", "step_imgs": ["https://cdn.instructables.com/FUG/GH3T/JTENDK22/FUGGH3TJTENDK22.LARGE.jpg", "https://cdn.instructables.com/FMV/ZDAH/JTENDK1C/FMVZDAHJTENDK1C.LARGE.jpg", "https://cdn.instructables.com/FN7/2URG/JTENDK00/FN72URGJTENDK00.LARGE.jpg"], "step_title": "Step 4: The Desktop Model"}, {"step": 5, "steps_text": "From Left to Right:\n1.\nA KY-025 Reed Switch Module is mounted above the door senses the door position in real time. A magnet mounted on the door moves closer or away from the switch. The switch is triggered by the magnetic field and sends this information to the Web Server.\n2.\nThis second image shows the KY-025 triggered by the little Black magnet on the door in the closed position . Both on-board LEDs are On indicating that the switch was activated when the door closed.\n3.\nIn contrast, the KY-025 is deactivated when the door swings to the open position in the third image.\nIgnoring Repeat User Requests\nThe KY-025 switch helps in making the door control a bit more than a simple open/close affair. The server uses the feedback from the switch to take no action if the user repeats a request.\nIn this example, the close button is hit twice, but the door is already closed as shown by the first browser screen shot.\nWhen the Close button is hit the second time, the user gets an informational message stating that no action was taken by the Server because the request was repeated. Consequently, the door remains closed.\nA similar thing happens when the Open button is hit twice.", "step_imgs": ["https://cdn.instructables.com/FPS/0BWT/JTENDK23/FPS0BWTJTENDK23.LARGE.jpg", "https://cdn.instructables.com/FWP/59C3/JTENDK3J/FWP59C3JTENDK3J.LARGE.jpg", "https://cdn.instructables.com/FDT/VPVH/JTENDK2T/FDTVPVHJTENDK2T.LARGE.jpg", "https://cdn.instructables.com/F8C/KFXE/JTENDQ5Y/F8CKFXEJTENDQ5Y.LARGE.jpg", "https://cdn.instructables.com/FZP/1GQ0/JTENDQ66/FZP1GQ0JTENDQ66.LARGE.jpg"], "step_title": "Step 5: Smart System - Sensing Door Position in Real Time"}, {"step": 6, "steps_text": "The IoT Server maintains a White list of device IPs that are allowed access to the IoT Web Server.\nThis way, when users outside the household get on to local WiFi they're by default not on the White list and therefore will not have access to the IoT Web Server. Therefore, all users not on the White list will get an Unauthorized page if they try to access the IoT Web Server.\nThis is one line of defense applied to the system because it does not control a table lamp, but a Garage Door that opens up your house to the world!", "step_imgs": ["https://cdn.instructables.com/FCJ/ANRL/JTENDQ87/FCJANRLJTENDQ87.LARGE.jpg"], "step_title": "Step 6: Regulating Access to the IoT Server"}, {"step": 7, "steps_text": "In the order of images posted in this step:\n1.\nA 4-foot view of the actual set up in my garage. The forward right of the image shows the WeMos D1 mini and the Relay mounted in proximity of the Craftsman Garage Door Opener. The wires from the mini are routed across the ceiling to the KY-025 positioned atop the garage door on the far-left very close to a magnet. The magnet is stuck to the door with double-sided tape and rolls in and out from under the KY-025 turning it ON or OFF in the process.\n2.\nA closeup of the WeMos D1 and relay installation . The rubber strap is there to hold a few wires down and as an added measure to hold the WeMos down in its case.\n3.\nA pre-installation closeup of how the 3D printed Ceiling Bracket and the WeMos case come together. The Relay is mounted to the Ceiling Bracket and is wired to the mini. Note that the male headers pins are accessible on the WeMos board even after it\u2019s closed inside the case.\n4.\nA close up of the KY-025 set up. The donut magnet is taped on to the top face of the garage door with double-sided tape. Note that the Reed switch hovers on top of the magnet and stays clear of the garage door so that the door does not crash into the KY-025 Reed switch and damage it or its mount!\n5. and 6.\nThe Reed switch is passive as the door remains closed most of the time.\nThe switch is activated when the door is open. As seen, the magnet on the door is in close proximity to the switch.\n7.\nArrows in the design sketch of the KY-025 Reed mount indicate various ways in which the Reed switch could be adjusted to be in proximity of the magnet when the door rolls up to the ceiling and comes to a stop. Based on the location, a longer arm (in Blue) could be used to extend the Reed switch closer to the magnet.", "step_imgs": ["https://cdn.instructables.com/FMP/O7X0/JTENDK6C/FMPO7X0JTENDK6C.LARGE.jpg", "https://cdn.instructables.com/FCH/QJAJ/JTENDK6E/FCHQJAJJTENDK6E.LARGE.jpg", "https://cdn.instructables.com/FNR/TK8V/JTENDK7Y/FNRTK8VJTENDK7Y.LARGE.jpg", "https://cdn.instructables.com/FY3/0BEH/JTENDK9K/FY30BEHJTENDK9K.LARGE.jpg", "https://cdn.instructables.com/F68/PX6Y/JTENDKAW/F68PX6YJTENDKAW.LARGE.jpg", "https://cdn.instructables.com/FVH/D82D/JTENDKD5/FVHD82DJTENDKD5.LARGE.jpg", "https://cdn.instructables.com/FD6/3HV9/JTENDKDX/FD63HV9JTENDKDX.LARGE.jpg"], "step_title": "Step 7: The Onsite Installation Tour"}, {"step": 8, "steps_text": "This entire project is detailed in my Book titled Give Yourself IoT Super Powers available in the Amazon Kindle Store.\nIn this book I discuss how this project has been put together by assembling small units of functionality (requiring the most fundamental knowledge) into a larger application. The code covered in this book can be downloaded along with the parts required to put the Desktop model together.\nIn addition, there is a document that illustrates the steps required to assemble the Desktop model.\nThe last Chapter of this book will explore more ideas and enhancements that readers can take on to better fine tune their project and make it more advanced.\nI hope you have fun reading my book and building the project!", "step_imgs": ["https://cdn.instructables.com/FMU/K04B/JTON5WZI/FMUK04BJTON5WZI.LARGE.jpg"], "step_title": "Step 8: Get the Book!"}], "channel": "Arduino"}, {"category": "Technology", "description": "This project is based on a research work developed at the University of California, Berkeley by Richard Zhang, Phillip Isola, and Alexei A. Efros. Colorful Image Colorization.\nThe idea of this tutorial will be to develop a fully automatic approach that will generate realistic colorizations of Black & White (B&W) photos and by extension, videos. As explained in the original paper, the authors, embraced the underlying uncertainty of the problem by posing it as a classification task using class-rebalancing at training time to increase the diversity of colors in the result. The Artificial Intelligent (AI) approach is implemented as a feed-forward pass in a CNN (\" Convolutional Neural Network\") at test time and is trained on over a million color images.\nHere a photo shoot on 1906, showing one of the first tests with Santos Dumont's plane \"14-bis\" in Paris:\nAnd its colorized version using the models developed using these AI technics:\nThe same technics could be applied to old videos. Here a 1932 B&W footage of the city of Rio de Janeiro, Brazil:\nAnd the colorized version:", "title": "Colorizing Old B&W Photos and Videos With the Help of AI", "url": "https://www.instructables.com/id/Colorizing-Old-BW-Photos-and-Videos-With-the-Help-/", "steps": [{"step": 1, "steps_text": "Usually, we are used to coding a color photo using the RGB model. The RGB color model is an additive color model in which red, green and blue light are added together in various ways to reproduce a broad array of colors. The name of the model comes from the initials of the three additive primary colors, red, green, and blue.\nBut, the model that will be used on this project is the \"Lab\".\nThe CIELAB color space (also known as CIE L*a*b* or sometimes abbreviated as simply \"Lab\" color space) is a color space defined by the International Commission on Illumination (CIE) in 1976. It expresses color as three numerical values, L* for the lightness and a* and b* for the green\u2013red and blue-yellow color components.\nThe color space L * a * b * was created after the theory of opposing colors, where two colors cannot be green and red at the same time, or yellow and blue at the same time. CIELAB was designed to be perceptually uniform with respect to human color vision, meaning that the same amount of numerical change in these values corresponds to about the same amount of visually perceived change.\nUnlike the RGB color model, Lab color is designed to approximate human vision. It aspires to perceptual uniformity, and its L component closely matches human perception of lightness. The L component is exactly what is used as input of the AI model, that was train to estimate the remained components, \"a\" and \"b\".", "step_imgs": [], "step_title": "Step 1: Lab Color Space"}, {"step": 2, "steps_text": "As commented on the introduction, the Artificial Intelligent (AI) approach is implemented as a feed-forward pass in a CNN (\" Convolutional Neural Network\") at test time and is trained on over a million color images. In other words, millions of color photos were decomposed using Lab model and used as an input feature (\"L\") and classification labels (\"a\" and \"b\"). For simplicity let's split in two: \"L\" and \"a+b\" as shown in the block diagram:\nHaving the trained model (that is available publically), we can use it to colorize a new B&W foto, where this photo will be the input of the model or the component \"L\". The output of the model will be the other components \"a\" and \"b\", that once added to the original \"L\", will return a full colorized photo as shown here:\nIn short, using a broad and diverse set of objects and scenes dataset of 1.3 Millon photos from ImageNet and applying a Deep Learning algorithm (Feed-Forward CNN), final models were generated and are available at:\nZhang et al - Colorful Image Colorization - models", "step_imgs": [], "step_title": "Step 2: The AI (Deep Learning) Process"}, {"step": 3, "steps_text": "The first thing to do is to organize an environment where we will work. Let's create a folder and name it:\nPhoto_Video_Colorization\nUnder this main created directory, let's create sub-folders:\nmodel\ninput_images\ninput_videos\ncolorized_images\ncolorized_frames\ncolorized_videos\nGo to Zhang et al - Colorful Image Colorization - models and download the 3 files and load them at the created subfolder \"/model\". The files are:\ncolorization_release_v2.caffemodel\ncolorization_release_v2_norebal.caffemodel\ncolorization_release_v1.caffemodel\nI will assume that you have Python (version 3.6) and OpenCV (4.0) installed in your machine. We will describe step by step all the process of colorization using Jupyter Notebooks. I recommend that you follow my explanation, but if you want, you can go and download the notebooks and test photos from my GitHub:\nPhoto_Video_Colorization\nI also recommend that you review the great tutorial \" Black and white image colorization with OpenCV and Deep Learning\" by Dr. Adrian Rosebrok, that was the inspiration and guide for this project.", "step_imgs": ["https://cdn.instructables.com/FLH/HZDI/JTENDEHH/FLHHZDIJTENDEHH.LARGE.jpg"], "step_title": "Step 3: The Working Envirolment"}, {"step": 4, "steps_text": "Each one of the following steps is a specific cell at Jupyter notebook.\n1. Import important Libraries:\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport cv2\n2. Define Image to be colorized:\nIMAGE = \"soldiers_1941\"\nNote: You can use any photo here. In this case, I use a 1941 B&W photo of soldiers at WWII. The photo is available on my GitHub.\n3. Define Model Paths:\nprototxt = \"./model/colorization_deploy_v2.prototxt\"\nmodel = \"./model/colorization_release_v2.caffemodel\"\npoints = \"./model/pts_in_hull.npy\"\nimage =  \"./input_images/\"+IMAGE\n4. Load serialized black and white colorizer model and cluster:\nnet = cv2.dnn.readNetFromCaffe(prototxt, model)\npts = np.load(points)\n5. Add the cluster centers as 1x1 convolutions to the model:\nclass8 = net.getLayerId(\"class8_ab\")\nconv8 = net.getLayerId(\"conv8_313_rh\")\npts = pts.transpose().reshape(2, 313, 1, 1)\nnet.getLayer(class8).blobs = [pts.astype(\"float32\")]\nnet.getLayer(conv8).blobs = [np.full([1, 313], 2.606, dtype=\"float32\")]\n6. Load the input image, scale it and convert it to Lab:\nNote that we will first convert the image to grayscale. This step is not really necessary, but I realize that some B&W photos, especially the old ones, could have some treatment during the years, so, better to clean them a little.\nimage = cv2.imread(image)\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\nimage = cv2.cvtColor(image, cv2.COLOR_GRAY2RGB)\nAt this point, we have our original image, but in order to show it straight on a Jupyter cell, we should use a pyplot library :\nplt.imshow(image)\nplt.axis('off');\n7. Extracting \"L\":\nNow, let's take our \" image\" and proceed with the colorization process, where first should be rescaled, converted to Lab in order to extract the component \"L\" and center it:\nscaled = image.astype(\"float32\") / 255.0\nlab = cv2.cvtColor(scaled, cv2.COLOR_RGB2LAB)\nresized = cv2.resize(lab, (224, 224))\nL = cv2.split(resized)[0]\nL -= 50\n8. Predicting \"a\" and \"b\":\nnet.setInput(cv2.dnn.blobFromImage(L))\nab = net.forward()[0, :, :, :].transpose((1, 2, 0))\nab = cv2.resize(ab, (image.shape[1], image.shape[0]))\n9. Creating a colorized Lab photo (L + a + b):\nL = cv2.split(lab)[0]\ncolorized = np.concatenate((L[:, :, np.newaxis], ab), axis=2)\nSame as we did with the grayscaled image, let's check how the colorized image looks like:\nplt.imshow(colorized)\nplt.axis('off');\nplt.title('colorized LAB image');\nOps, seems that Lab image cannot tell us much, let's convert it to RGB and see the result:\n10. Converting to RGB:\ncolorized = cv2.cvtColor(colorized, cv2.COLOR_LAB2RGB)\ncolorized = np.clip(colorized, 0, 1)\ncolorized = (255 * colorized).astype(\"uint8\")\nplt.imshow(colorized)\nplt.axis('off');\nUau! Pretty amazing!!!!! This is a 1941 photo that seems to really be shot in full colors! Let's save it:\n11. Saving the final RGB photo:\ncv2.imwrite(\"./colorized_images/Color_\"+IMAGE, cv2.cvtColor(colorized, cv2.COLOR_RGB2BGR))\nOne more: Charles Darwin visiting Rio in 1832:\nGreat!!!! Try with other B&W photos and see how amazing Artificial Intelligence can be!", "step_imgs": ["https://cdn.instructables.com/F20/H2SE/JTENDONY/F20H2SEJTENDONY.LARGE.jpg"], "step_title": "Step 4: Black & White Photo Colorization"}, {"step": 5, "steps_text": "Once we colorized photos, colorize videos is not a complicated task. We must follow the following general steps:\nGet B&W footage and load it on input_video/ subdirectory\nRead the video one frame at a time\nHaving a single frame, apply what we did for a photo\nHaving a colorized frame, save it on another subfolder: colorized_video_frames\nClose the OpenCv windows.\nLet's do a real case:\nDownload the notebook B_W_Video_Colorization.ipynb from my GitHub.\nThe first test that I did, was to download from Youtube a B&W movie, in this case :\nFor that, I used the free tool: VidPaw.\nApplying the steps described above, at the end we will have all colorized frames stored on the subfolder colorized_video_frames. Let's do it:\n1. Start defining the file that should be colorized (that should be at the input_video folder:\nVIDEO = \"rio_32.mp4\"\n2. Define Paths, constants, and video variables:\nprototxt = \"./model/colorization_deploy_v2.prototxt\"\nmodel = \"./model/colorization_release_v2.caffemodel\"\npoints = \"./model/pts_in_hull.npy\"\nvideo =  \"./input_video/\"+VIDEO\nwidth = 500\nvs = cv2.VideoCapture(video)\n3. Load and prepare models:\nnet = cv2.dnn.readNetFromCaffe(prototxt,model)\npts = np.load(points)\nclass8 = net.getLayerId(\"class8_ab\")\nconv8 = net.getLayerId(\"conv8_313_rh\")\npts = pts.transpose().reshape(2, 313, 1, 1)\nnet.getLayer(class8).blobs = [pts.astype(\"float32\")]\nnet.getLayer(conv8).blobs = [np.full([1, 313], 2.606, dtype=\"float32\")] \n4. Split video, frame by frame and apply model:\ncount = 0\nsuccess = True\nwhile success:\n success, frame = vs.read()\n if frame is None:\n  break\n\n frame = imutils.resize(frame, 500)\n frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n frame = cv2.cvtColor(frame, cv2.COLOR_GRAY2RGB)\n scaled = frame.astype(\"float32\") / 255.0\n lab = cv2.cvtColor(scaled, cv2.COLOR_RGB2LAB)\n\n resized = cv2.resize(lab, (224, 224))\n L = cv2.split(resized)[0]\n L -= 50\n    \n net.setInput(cv2.dnn.blobFromImage(L))\n ab = net.forward()[0, :, :, :].transpose((1, 2, 0))\n\n ab = cv2.resize(ab, (frame.shape[1], frame.shape[0]))\n L = cv2.split(lab)[0]\n colorized = np.concatenate((L[:, :, np.newaxis], ab), axis=2)\n\n colorized = cv2.cvtColor(colorized, cv2.COLOR_LAB2BGR)\n colorized = np.clip(colorized, 0, 1)\n colorized = (255 * colorized).astype(\"uint8\")\n\n cv2.imshow(\"Original\", frame)\n cv2.imshow(\"Colorized\", colorized)\n    \n cv2.imwrite(\"./colorized_video_frames/frame%d.jpg\" % count, colorized)\n count += 1\n key = cv2.waitKey(1) & 0xFF\n\n if key == ord(\"q\"):\n  break\n\nvs.release()\ncv2.destroyAllWindows()\nThe above loop process, usually takes a while. For example, the process of colorization of this video (8 minutes) having around of 14,000 frames took me around 3 hours on a MacBook Pro - 2.9GHz Core i7 with 16GB 2133MHz of RAM.\n5. Once you have the file with the frames, you must \"re-assemble\" it to create a video. The bellow function can do it:\ndef convert_frames_to_video(pathIn, pathOut, fps):\n    frame_array = []\n    files = [f for f in os.listdir(pathIn) if isfile(join(pathIn, f))]\n \n    #for sorting the file names properly\n    files.sort(key = lambda x: int(x[5:-4]))\n \n    for i in range(len(files)):\n        filename=pathIn + files[i]\n        #reading each files\n        img = cv2.imread(filename)\n        height, width, layers = img.shape\n        size = (width,height)\n        print(filename)\n        #inserting the frames into an image array\n        frame_array.append(img)\n \n    out = cv2.VideoWriter(pathOut,cv2.VideoWriter_fourcc(*'MJPG'), fps, size)\n \n    for i in range(len(frame_array)):\n        # writing to a image array\n        out.write(frame_array[i])\n    out.release()\nNote that depending on what Video Controler you have on your machine, the codec (*'MJPG'), should be changed. Please check with OpenCV documentation. At end would a \"try&error\" experience.\nNow, it only to apply the function on the colorized frames:\npathIn= './colorized_video_frames/'\npathOut = './colorized_videos/color_rio_32.avi'\nfps = 30.0\nconvert_frames_to_video(pathIn, pathOut, fps)\nThe resulting \"raw\" video can be seen here:\nNote that the video obviously has no sound. What I did was to strip the original sound from the B&W movie and add it to the colorized one, using iMovie. The result is here:\nThat's it! Very cool, isn't? ;-)", "step_imgs": [], "step_title": "Step 5: Colorizing Videos"}, {"step": 6, "steps_text": "Taking the opportunity to colorize old photos and videos, I decided to honor one of the great inventors of last century, Alberto Santos-Dumont.\nSantos-Dumont was a Brazilian inventor and aviation pioneer, one of the very few people to have contributed significantly to the development of both lighter-than-air and heavier-than-air aircraft.\nThe heir of a wealthy family of coffee producers, Santos-Dumont dedicated himself to aeronautical study and experimentation in Paris, where he spent most of his adult life. In his early career, he designed, built, and flew hot air balloons and early dirigibles, culminating in his winning the Deutsch de la Meurthe prize on 19 October 1901 for a flight that rounded the Eiffel Tower. He then turned to heavier-than-air machines and on 23 October 1906, his 14-is made the first powered heavier-than-air flight in Europe to be certified by the A\u00e9ro-Club de France and the F\u00e9d\u00e9ration A\u00e9ronautique Internationale. His conviction that aviation would usher in an era of worldwide peace and prosperity led him to freely publish his designs and forego patenting his various innovations.\nAbove you can appreciate some of the photos from the first decade of XX century that were colorized using the technics described in this tutorial. And below, a video collage is done. I hope you appreciate it.", "step_imgs": ["https://cdn.instructables.com/FI6/SOPN/JTIYDT2U/FI6SOPNJTIYDT2U.LARGE.jpg", "https://cdn.instructables.com/F4C/P2T5/JTIYDT6P/F4CP2T5JTIYDT6P.LARGE.jpg", "https://cdn.instructables.com/FZ6/J6X3/JTIYDT2D/FZ6J6X3JTIYDT2D.LARGE.jpg", "https://cdn.instructables.com/F1H/OK98/JTIYDT3D/F1HOK98JTIYDT3D.LARGE.jpg", "https://cdn.instructables.com/FZO/LVEJ/JTIYDT3U/FZOLVEJJTIYDT3U.LARGE.jpg", "https://cdn.instructables.com/FU4/PFPE/JTIYDT4B/FU4PFPEJTIYDT4B.LARGE.jpg"], "step_title": "Step 6: Homage to Santos Dumont"}, {"step": 7, "steps_text": "As always, I hope this project can help others find their way into the exciting world of technology!\nFor details and final code, please visit my GitHub repository: MJRoBot-Python4DS\nSaludos from the south of the world!\nSee you in my next instructable!\nThank you,\nMarcelo", "step_imgs": ["https://cdn.instructables.com/F8Y/193A/JGR21GEI/F8Y193AJGR21GEI.LARGE.jpg"], "step_title": "Step 7: Conclusion"}], "channel": "Photography"}, {"category": "Technology", "description": "In this instructable I will be showing you how to make your own Smart Contact Dispenser!", "title": "Smart Contact Lens Dispenser", "url": "https://www.instructables.com/id/Smart-Contact-Dispenser/", "steps": [{"step": 1, "steps_text": "", "step_imgs": [], "step_title": "Step 1: Intro"}, {"step": 2, "steps_text": "If you wear contacts then you are probably familiar with the boxes that they come in. Most people I know, including myself, use these boxes as permanent storage and we take out our contacts as needed every day. This resulted in a stack of boxes in my bathroom that was driving me crazy. I knew there had to be a better way to organize these contacts so I went searching on the internet. After only finding a contact storage dispenser that someone was trying to sell for $25, I designed up some basic ones which can be found here.\nThey worked pretty great, but I couldn't help but feel annoyed that I had to pull each contact out individually so I looked into ways to have each contact automatically dispense into my hand. Since I had a ESP8266 laying around, I decided to order an OLED display so I could display the weather forecast while I am getting ready in the morning.\nIf you want to see more of the design process and them in action check out the video above. Please consider subscribing to my YouTube channel to support me and see more videos.", "step_imgs": ["https://cdn.instructables.com/FJ8/IFH4/JTEN34Z9/FJ8IFH4JTEN34Z9.LARGE.jpg"], "step_title": "Step 2: Background"}, {"step": 3, "steps_text": "For this project the items needed are the following:\n1. 5V Power Supply\n2. IR LED and Photodiode Pair\n3. 220 Ohm Resistor (2)\n4. 10K Resistor\n5. 10K Potentiometer\n5. LM358 Op-Amp\n6. 3.3V Zener Diode\n7. Basic LED\n8. OLED Display 0.96\"\n9. 470 uF Capacitor (2)\n10. 2 FS90R Servos (Or Mod SG90 Servos)\n11. Node MCU ESP8266\n12. Access to 3D Printer (Check your local library!)", "step_imgs": ["https://cdn.instructables.com/F6N/Q5KM/JTEN330V/F6NQ5KMJTEN330V.LARGE.jpg"], "step_title": "Step 3: Items Needed"}, {"step": 4, "steps_text": "Now that you have gathered all of the required components, it is time to start assembling everything together. I would recommend wiring everything up on a breadboard first and then once everything is functioning properly go ahead and solder everything up on a perf board.\nFor those that are unfamiliar with electronics or unsure of some of the components, trust me this circuit is not too bad. I will attempt to break it down below, and if you want to know more, check out the video linked.\nOn the left we have our IR Led and Photodiode which is connected to a LM358 operational amplifier. This is our proximity circuit which detects our hand underneath to let the controller know we want our contacts dispensed. The distance you want your hand to be detected can be adjusted using a 10K potentiometer. The output from this circuit is brought into our ESP8266 microcontroller which we will program using the Arduino IDE setup for the NodeMCU ESP8266. The program will wait for the input from the proximity circuit, then trigger the right servo, wait a second to allow you to move your hand to the left dispenser, and then trigger the left servo. This way both contacts will be dispensed into your hand. The ESP8266 will also be connected over WiFi which will enable us to use a weather API to display the weather forecast for the next few days on the OLED display. I started with just a weather forecast display but over time I will definitely be adding more features.", "step_imgs": ["https://cdn.instructables.com/FVJ/OPEM/JT4TQVT0/FVJOPEMJT4TQVT0.LARGE.jpg"], "step_title": "Step 4: Electronics"}, {"step": 5, "steps_text": "Since the electronics consisted of a servo, a few LEDs, power supply, and the rest of the circuit I went ahead and designed up our auto contact dispenser. I made it in several parts that will need to be glued or taped together because I didn't feel like possibly failing a super long print.\nThe base of our contact dispensor had two holes for out 5mm IR and Photodiode Leds, a cutout for a 5V power supply, and a cutout to allow the servos to be placed sideways as they are used to dispense contacts.\nThe contact storage remained similar to my previous design but I cutout a slot at the bottom for out servo wheel to turn freely. I also increased the size to allow more contacts to be stored getting rid of those stupid boxes once and for all.\nThe case for the OLED display and the electronics is pretty basic but since I used a standard 50 x 70 mm perf board, I designed a a slot for it to slide right into place.\nThe designs can be found on Thingiverse here.", "step_imgs": ["https://cdn.instructables.com/F55/0706/JT4TQVG5/F550706JT4TQVG5.LARGE.jpg", "https://cdn.instructables.com/FEP/P9G5/JT4TQVER/FEPP9G5JT4TQVER.LARGE.jpg", "https://cdn.instructables.com/FYN/IYV1/JT4TQVHI/FYNIYV1JT4TQVHI.LARGE.jpg"], "step_title": "Step 5: 3D Design and Print"}, {"step": 6, "steps_text": "In this step, I will show you how to program the ESP8266. The code is just a simple modification of the awesome ThingPulse esp8266 weather station (Github Link) weather example. You will also need to download the following packages to the Arduino IDE:\n1. ESPWifi\n2. ESPHTTPClient\n3. JsonListener\nOnce the libraries are installed, download the program below.\nYou will need to fill in you Wifi SSID, Wifi Password, signup for weather underground and receive your API key, and also find your location ID. Once all of these are entered into the code, go ahead an upload to your NodeMCU.", "step_imgs": ["https://cdn.instructables.com/FO3/60E2/JTEN35A3/FO360E2JTEN35A3.LARGE.jpg"], "step_title": "Step 6: Programming"}, {"step": 7, "steps_text": "In this step, we will put all of the components together.\nThis includes placing the servos in their slots, pushing the IR Led and Photodiodes into their holes, soldering up everything on a perf board, inserting the perf board into the printed slot, and connect all of the other components up.", "step_imgs": ["https://cdn.instructables.com/FWT/0XH5/JTEN391L/FWT0XH5JTEN391L.LARGE.jpg", "https://cdn.instructables.com/F2J/FPIV/JTEN390P/F2JFPIVJTEN390P.LARGE.jpg", "https://cdn.instructables.com/F3C/BZ0D/JTEN3915/F3CBZ0DJTEN3915.LARGE.jpg", "https://cdn.instructables.com/F6Y/H2LH/JTEN390C/F6YH2LHJTEN390C.LARGE.jpg"], "step_title": "Step 7: Putting It All Together"}, {"step": 8, "steps_text": "After you have connected all the 3D printed parts together and mounted it to the wall, it is time to put it to the test. Fill up the left and right side contact containers, plug in power, and after waiting for the OLED screen to boot up with your local weather and test it out!\nCheck out the video for it in action!", "step_imgs": [], "step_title": "Step 8: Test It Out!"}], "channel": "Electronics"}, {"category": "Technology", "description": "Hi, Today I am making a egg turner for incubator , Birds need to rotate the egg to distribute the heat evenly and prevent the egg membrane from sticking to the shell which in artificial method by incubating the eggs need to rotate the egg by hand but this method often not suitable because of cracking of eggs sudden move could break the shell or spread bacteria through unhygienic handling and rotating eggs in incubation time,for this problem there is a method of turning the eggs by egg turner which reduced the workload and minimize the bacteria spreading.There are lot of egg turner in shapes in sizes but today I am making a roller egg turner which rotate the eggs evenly and takes small space,These egg turner are great tool in incubator system and easy to make.\nif you don't understand something please watch the video and If you like this tutorial please like,share and vote for this instructable. :)", "title": "Egg Turner Diy for Incubator", "url": "https://www.instructables.com/id/Eeg-Turner-for-Incubator/", "steps": [{"step": 1, "steps_text": "Need 20\" of two wooden and two 15\" wooden , mark 1 inches from the start on 20\" and then start marking 4.5 inches 11 times make a hole in all of them in both 20\"\nAttach the 15\" to the sides of 20\" by screws and make a rectangle", "step_imgs": [], "step_title": "Step 1:"}, {"step": 2, "steps_text": "Need another 15\" wooden pieces put them under the previous 15\" and attach them with screws", "step_imgs": [], "step_title": "Step 2:"}, {"step": 3, "steps_text": "Need 12 inches pvc pipe and it's end caps ,mark the center of cap and drill holes,take 2\" bolt and bolt and tighten it from the inside so the bolt comes out cap,do it same with other cap but this time use 1.5\" , put the caps on the pvc pipe.", "step_imgs": [], "step_title": "Step 3:"}, {"step": 4, "steps_text": "Cut the 1.5 inches lenght of L bracket and cut it in half ,place it over the 2\" bolt and tighten it so it stay at the end of bolt.", "step_imgs": ["https://cdn.instructables.com/F6L/IYQS/JTENB0AQ/F6LIYQSJTENB0AQ.LARGE.jpg", "https://cdn.instructables.com/FGQ/8LSU/JTENB0FX/FGQ8LSUJTENB0FX.LARGE.jpg", "https://cdn.instructables.com/FLL/NJFE/JTENB0JD/FLLNJFEJTENB0JD.LARGE.jpg", "https://cdn.instructables.com/FPA/2C70/JTENB0NE/FPA2C70JTENB0NE.LARGE.jpg", "https://cdn.instructables.com/FQQ/9ONG/JTENB0PY/FQQ9ONGJTENB0PY.LARGE.jpg", "https://cdn.instructables.com/F6I/H6CH/JTENB0UQ/F6IH6CHJTENB0UQ.LARGE.jpg", "https://cdn.instructables.com/F4N/C80I/JTENB0W7/F4NC80IJTENB0W7.LARGE.jpg", "https://cdn.instructables.com/FQH/U12W/JTENB12H/FQHU12WJTENB12H.LARGE.jpg", "https://cdn.instructables.com/FQ9/4E2J/JTENB18W/FQ94E2JJTENB18W.LARGE.jpg", "https://cdn.instructables.com/F5A/I4N0/JTENB1BK/F5AI4N0JTENB1BK.LARGE.jpg", "https://cdn.instructables.com/FIH/QF1V/JTENB1E9/FIHQF1VJTENB1E9.LARGE.jpg", "https://cdn.instructables.com/F43/Q8OK/JTENB1HP/F43Q8OKJTENB1HP.LARGE.jpg", "https://cdn.instructables.com/FY9/3WSI/JTENB1LD/FY93WSIJTENB1LD.LARGE.jpg", "https://cdn.instructables.com/FV2/DSBG/JTENB1M6/FV2DSBGJTENB1M6.LARGE.jpg", "https://cdn.instructables.com/FU7/CGD8/JTENB1NZ/FU7CGD8JTENB1NZ.LARGE.jpg", "https://cdn.instructables.com/FYO/TFJO/JTENB1OW/FYOTFJOJTENB1OW.LARGE.jpg", "https://cdn.instructables.com/F22/4R7O/JTENB1PP/F224R7OJTENB1PP.LARGE.jpg", "https://cdn.instructables.com/FW5/K77G/JTENB1QV/FW5K77GJTENB1QV.LARGE.jpg", "https://cdn.instructables.com/FDC/SCXL/JTENB1RO/FDCSCXLJTENB1RO.LARGE.jpg", "https://cdn.instructables.com/FFF/4IMD/JTENB1TQ/FFF4IMDJTENB1TQ.LARGE.jpg"], "step_title": "Step 4:"}, {"step": 5, "steps_text": "Make 11 pieces of pipes and put them in the holes and tighten them back with screws.", "step_imgs": ["https://cdn.instructables.com/FKU/TWHQ/JTENB1UO/FKUTWHQJTENB1UO.LARGE.jpg", "https://cdn.instructables.com/FV3/P9MC/JTENB20A/FV3P9MCJTENB20A.LARGE.jpg", "https://cdn.instructables.com/FYW/V9HT/JTENB20L/FYWV9HTJTENB20L.LARGE.jpg", "https://cdn.instructables.com/FBQ/FOGH/JTENB255/FBQFOGHJTENB255.LARGE.jpg", "https://cdn.instructables.com/FV8/VH6N/JTENB25Z/FV8VH6NJTENB25Z.LARGE.jpg", "https://cdn.instructables.com/F4A/6N4P/JTENB29G/F4A6N4PJTENB29G.LARGE.jpg", "https://cdn.instructables.com/F13/4W5X/JTENB2EH/F134W5XJTENB2EH.LARGE.jpg", "https://cdn.instructables.com/F61/J6Z1/JTENB2FB/F61J6Z1JTENB2FB.LARGE.jpg", "https://cdn.instructables.com/F3P/OXUO/JTENB2G7/F3POXUOJTENB2G7.LARGE.jpg", "https://cdn.instructables.com/FF3/TNBQ/JTENB2IA/FF3TNBQJTENB2IA.LARGE.jpg", "https://cdn.instructables.com/F8W/49L9/JTENB2JQ/F8W49L9JTENB2JQ.LARGE.jpg", "https://cdn.instructables.com/FXQ/9F89/JTENB2KV/FXQ9F89JTENB2KV.LARGE.jpg", "https://cdn.instructables.com/F6M/94NF/JTENB2MQ/F6M94NFJTENB2MQ.LARGE.jpg", "https://cdn.instructables.com/FBH/MOVQ/JTENB2PG/FBHMOVQJTENB2PG.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "Place Cutted L bracket on the ends and put 14\" narrow wooden over the it and mark the points where bolts are going placed ,make holes in them and put the narrow wood in those bolts and tighten it with nuts.", "step_imgs": ["https://cdn.instructables.com/FA4/HFFX/JTENB2WA/FA4HFFXJTENB2WA.LARGE.jpg", "https://cdn.instructables.com/FI4/BMK9/JTENB2YV/FI4BMK9JTENB2YV.LARGE.jpg", "https://cdn.instructables.com/FOE/508X/JTENB308/FOE508XJTENB308.LARGE.jpg", "https://cdn.instructables.com/FW3/MLT8/JTENB31O/FW3MLT8JTENB31O.LARGE.jpg", "https://cdn.instructables.com/F40/SBAU/JTENB33G/F40SBAUJTENB33G.LARGE.jpg", "https://cdn.instructables.com/FJY/5N1R/JTENB35N/FJY5N1RJTENB35N.LARGE.jpg", "https://cdn.instructables.com/FLW/V62I/JTENB377/FLWV62IJTENB377.LARGE.jpg", "https://cdn.instructables.com/F7P/K84Q/JTENB3BM/F7PK84QJTENB3BM.LARGE.jpg", "https://cdn.instructables.com/FTR/6LZC/JTENB3CF/FTR6LZCJTENB3CF.LARGE.jpg", "https://cdn.instructables.com/F07/5JTE/JTENB3E6/F075JTEJTENB3E6.LARGE.jpg", "https://cdn.instructables.com/FEX/1OHY/JTENB3GQ/FEX1OHYJTENB3GQ.LARGE.jpg", "https://cdn.instructables.com/F0W/D9Z0/JTENB3HH/F0WD9Z0JTENB3HH.LARGE.jpg", "https://cdn.instructables.com/FCY/UDLU/JTENB3HL/FCYUDLUJTENB3HL.LARGE.jpg", "https://cdn.instructables.com/FWQ/RZ4C/JTENB3HX/FWQRZ4CJTENB3HX.LARGE.jpg", "https://cdn.instructables.com/FK5/FF9X/JTENB3WY/FK5FF9XJTENB3WY.LARGE.jpg", "https://cdn.instructables.com/FZW/3403/JTENB3MF/FZW3403JTENB3MF.LARGE.jpg", "https://cdn.instructables.com/FSG/DAJT/JTENB41D/FSGDAJTJTENB41D.LARGE.jpg", "https://cdn.instructables.com/FMW/85HD/JTENB4A2/FMW85HDJTENB4A2.LARGE.jpg"], "step_title": "Step 6:"}, {"step": 7, "steps_text": "I am using asmo motor because of it's shaft size is attachable with the pvc pipe connector , put 1 inches connector over it and tighten it with the screws put the motor over the center roller pipe and mark it under half inches from connector, take it out and cut from the mark and place it in the connector and put it back in place.", "step_imgs": ["https://cdn.instructables.com/FSC/VWOE/JTENB4MK/FSCVWOEJTENB4MK.LARGE.jpg", "https://cdn.instructables.com/FKB/I7AQ/JTENB4O1/FKBI7AQJTENB4O1.LARGE.jpg", "https://cdn.instructables.com/FZJ/24JA/JTENB4QE/FZJ24JAJTENB4QE.LARGE.jpg", "https://cdn.instructables.com/FIE/BO6H/JTENB4RL/FIEBO6HJTENB4RL.LARGE.jpg", "https://cdn.instructables.com/FLT/L3T1/JTENB4U7/FLTL3T1JTENB4U7.LARGE.jpg", "https://cdn.instructables.com/F4K/5DUR/JTENB4UC/F4K5DURJTENB4UC.LARGE.jpg", "https://cdn.instructables.com/FCY/5N9Z/JTENB50L/FCY5N9ZJTENB50L.LARGE.jpg", "https://cdn.instructables.com/F8W/GLB6/JTENB538/F8WGLB6JTENB538.LARGE.jpg", "https://cdn.instructables.com/FLN/UV11/JTENB556/FLNUV11JTENB556.LARGE.jpg", "https://cdn.instructables.com/FR8/4TSB/JTENB586/FR84TSBJTENB586.LARGE.jpg", "https://cdn.instructables.com/FVO/FJOT/JTENB5AF/FVOFJOTJTENB5AF.LARGE.jpg", "https://cdn.instructables.com/F48/RVK9/JTENB5CD/F48RVK9JTENB5CD.LARGE.jpg", "https://cdn.instructables.com/F2K/7IR1/JTENB5G7/F2K7IR1JTENB5G7.LARGE.jpg", "https://cdn.instructables.com/FO1/6JTG/JTENB5IY/FO16JTGJTENB5IY.LARGE.jpg", "https://cdn.instructables.com/FSU/TZHO/JTENB5L7/FSUTZHOJTENB5L7.LARGE.jpg", "https://cdn.instructables.com/F2L/RJ4G/JTENB5NI/F2LRJ4GJTENB5NI.LARGE.jpg", "https://cdn.instructables.com/FTI/6E9B/JTENB5PI/FTI6E9BJTENB5PI.LARGE.jpg", "https://cdn.instructables.com/F3X/FN0H/JTENB5PS/F3XFN0HJTENB5PS.LARGE.jpg", "https://cdn.instructables.com/F4J/7LM0/JTENB5RG/F4J7LM0JTENB5RG.LARGE.jpg", "https://cdn.instructables.com/F1N/1LYM/JTENB5SD/F1N1LYMJTENB5SD.LARGE.jpg", "https://cdn.instructables.com/FAD/22W1/JTENB65B/FAD22W1JTENB65B.LARGE.jpg", "https://cdn.instructables.com/F2L/GXZG/JTENB68V/F2LGXZGJTENB68V.LARGE.jpg", "https://cdn.instructables.com/FWC/QCAS/JTENB6GQ/FWCQCASJTENB6GQ.LARGE.jpg", "https://cdn.instructables.com/FM5/WB69/JTENB6IX/FM5WB69JTENB6IX.LARGE.jpg", "https://cdn.instructables.com/FE5/70Z8/JTENB6LI/FE570Z8JTENB6LI.LARGE.jpg"], "step_title": "Step 7:"}, {"step": 8, "steps_text": "Take 3 inches length wood place it on the back of where motor will attach secure it from the bottom then place motor over it and secure it with screws.", "step_imgs": ["https://cdn.instructables.com/FXU/YGUM/JTENB6MD/FXUYGUMJTENB6MD.LARGE.jpg", "https://cdn.instructables.com/FSQ/9P3T/JTENB6PN/FSQ9P3TJTENB6PN.LARGE.jpg", "https://cdn.instructables.com/FO6/834J/JTENB6SP/FO6834JJTENB6SP.LARGE.jpg", "https://cdn.instructables.com/FA0/8DCI/JTENB6TM/FA08DCIJTENB6TM.LARGE.jpg", "https://cdn.instructables.com/F3F/8N1Z/JTENB6U5/F3F8N1ZJTENB6U5.LARGE.jpg", "https://cdn.instructables.com/F80/FUCN/JTENB6V5/F80FUCNJTENB6V5.LARGE.jpg", "https://cdn.instructables.com/FLH/F7LI/JTENB6XO/FLHF7LIJTENB6XO.LARGE.jpg", "https://cdn.instructables.com/FSV/73FN/JTENB6ZT/FSV73FNJTENB6ZT.LARGE.jpg", "https://cdn.instructables.com/FDR/AWY4/JTENB70X/FDRAWY4JTENB70X.LARGE.jpg", "https://cdn.instructables.com/FYD/BBST/JTENB722/FYDBBSTJTENB722.LARGE.jpg", "https://cdn.instructables.com/F6S/4O52/JTENB72L/F6S4O52JTENB72L.LARGE.jpg", "https://cdn.instructables.com/FHU/262Q/JTENB73T/FHU262QJTENB73T.LARGE.jpg", "https://cdn.instructables.com/FF8/TBIU/JTENB76P/FF8TBIUJTENB76P.LARGE.jpg", "https://cdn.instructables.com/FCF/2CFS/JTENB76U/FCF2CFSJTENB76U.LARGE.jpg"], "step_title": "Step 8:"}, {"step": 9, "steps_text": "Testing on the objects as they are moving smoothly and then placing eggs as they are rolling smoothly.\nIf you like this tutorial please vote for it.", "step_imgs": ["https://cdn.instructables.com/F8L/XRX0/JTENB78U/F8LXRX0JTENB78U.LARGE.jpg", "https://cdn.instructables.com/FJ1/VB51/JTENB7BI/FJ1VB51JTENB7BI.LARGE.jpg", "https://cdn.instructables.com/F8M/BHMP/JTENB7CJ/F8MBHMPJTENB7CJ.LARGE.jpg", "https://cdn.instructables.com/F9X/APG9/JTENB7EL/F9XAPG9JTENB7EL.LARGE.jpg", "https://cdn.instructables.com/F2B/NUT3/JTENB7HF/F2BNUT3JTENB7HF.LARGE.jpg"], "step_title": "Step 9:"}], "channel": "Gadgets"}, {"category": "Technology", "description": "You might have come across the Jitterbug Earth model I made for the Remix competition a few weeks ago https://www.instructables.com/id/Buckminster-Full... this took a geometric representation of the Earth and introduced some hinges so that the shape could expand and change\nIn researching and thinking about that model and where it could go further I found some really interesting papers and ideas that I'd like to share along with some of my models I used to try and wrap my head around the ideas as I think they've been under-utilised and might lead to some interesting practical (and entertainingly impractical) applications", "title": "Generalising the Jitterbug - Deployable Structures Using Geometry", "url": "https://www.instructables.com/id/Generalising-the-Jitterbug-Deployable-Structures-U/", "steps": [{"step": 1, "steps_text": "Researching the Jitterbug transformation I came across a really cool paper that takes the Jitterbug idea and runs with it https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa...\nGo download it - it'll have your head sparking with ideas for days. Joseph Clinton worked with Buckminster-Fuller and has a fascinating career in his own right https://en.wikipedia.org/wiki/Joseph_Clinton and does a nice talk about these ideas and more at https://m.youtube.com/watch?v=J19eV7Z1x3M", "step_imgs": ["https://cdn.instructables.com/FBG/XLMY/JSL33VZ0/FBGXLMYJSL33VZ0.LARGE.jpg", "https://cdn.instructables.com/FO8/ACA9/JSL34PXX/FO8ACA9JSL34PXX.LARGE.jpg"], "step_title": "Step 1: First Step in Doing Anything Cool - Find Someone Smarter Than You Who Has Done All of the Hard Thinking"}, {"step": 2, "steps_text": "In that NASA paper Clinton describes different ways of expanding tessellated shapes as a potential way to pack down and unfold structures - what was called \"The Geometric Transformation Concept\"\nThis concept was then described in both 2D and 3D\nA tessellation is essentially any arrangement of shapes that fit neatly together to cover a surface - this could be regular like a checkerboard pattern with squares or more complicated with a mix of shapes\nTransformations were described as adding animation and expansion to a tessellation. You can imagine that if you have an area covered in square tiles. If you were to rotate the square tiles a quarter turn (what he called a Face transformation) as in sketch (1) but keep the connections or relationships between corners labelled A you'd get an expansion.\nIn sketch (2) I've added 12 oval marks to show where you could place hinges between corners to achieve this\nThe paper then build further on this by showing that you needn't keep the relationship between immediately touching corners - as in sketch (3) you could have 12 struts that connect corners not to their immediate neighbour but one further along (what was termed an Edge transformation)\nYou can go further and further with this idea with other shapes and possible connections between them (Vertex transformation)", "step_imgs": ["https://cdn.instructables.com/FXK/RFXJ/JTENHV58/FXKRFXJJTENHV58.LARGE.jpg"], "step_title": "Step 2: Tessellations and Adding Moves to the Jitterbug - Different Shapes and Connections"}, {"step": 3, "steps_text": "The Clinton paper described this tessellation idea and applied it not just to shapes covering a flat plan but also to 3D shapes and set out a whole series of possible transformations\ne.g. Face Transformations:\ntetrahedron -> octahedron\noctahedron -> icosahedron -> hexoctahedron (the original jitterbug)\nhexahedron -> hexoctahedron\nicosahedron -> icosadodecahedron\ndodecahedron -> icosadodecahedron\nYou can see from his diagram and the resulting models that the Face rotation translation is the original Jitterbug while changing the connections between corners gives a whole new scope", "step_imgs": ["https://cdn.instructables.com/FO1/NM02/JTENHXUD/FO1NM02JTENHXUD.LARGE.jpg", "https://cdn.instructables.com/FQD/HSG0/JSL33VYC/FQDHSG0JSL33VYC.LARGE.jpg", "https://cdn.instructables.com/FGZ/DVHY/JSL33VZL/FGZDVHYJSL33VZL.LARGE.jpg", "https://cdn.instructables.com/F3M/SIHS/JTEN8RNS/F3MSIHSJTEN8RNS.LARGE.jpg", "https://cdn.instructables.com/FP8/FXCR/JTEN8RKT/FP8FXCRJTEN8RKT.LARGE.jpg"], "step_title": "Step 3: Taking This to 3D"}, {"step": 4, "steps_text": "Thinking about these movements I sketched up a few different variations on a hinge to hold the angle constant throughout the rotation and settled on a short 3D printed section with 2 bolts which the faces would rotate around. I later found the same hinge had already been suggested in an academic paper examining the jitterbug maths and similar models (available as a free pdf at https://www.sciencedirect.com/science/article/pii... if you want to see more)", "step_imgs": ["https://cdn.instructables.com/FB2/DERT/JTEN8R5R/FB2DERTJTEN8R5R.LARGE.jpg", "https://cdn.instructables.com/FVD/V7QL/JSL33VYA/FVDV7QLJSL33VYA.LARGE.jpg", "https://cdn.instructables.com/F3U/TB7V/JTEN8VK0/F3UTB7VJTEN8VK0.LARGE.jpg"], "step_title": "Step 4: Applying These Transformations to 3D Shapes"}, {"step": 5, "steps_text": "Translating this idea into a laser cut tetrahedron with 3D printed hinges (sized for 3mm plywood and M5 bolts - you'll need either short (6mm or thereabouts bolts) or to add washers to outside as the inside angle is quite tight)", "step_imgs": ["https://cdn.instructables.com/FUX/XRLF/JTEN8RLL/FUXXRLFJTEN8RLL.LARGE.jpg", "https://cdn.instructables.com/FP7/G6CH/JTEN8RMJ/FP7G6CHJTEN8RMJ.LARGE.jpg", "https://cdn.instructables.com/FZN/OGLI/JTEN8RJB/FZNOGLIJTEN8RJB.LARGE.jpg"], "step_title": "Step 5: Tetrahedral Transformation"}, {"step": 6, "steps_text": "... and an edge transformation laser cut octahedron with 3D printed hinges (sized for 3mm plywood and M5 bolts)", "step_imgs": ["https://cdn.instructables.com/F3M/SIHS/JTEN8RNS/F3MSIHSJTEN8RNS.LARGE.jpg", "https://cdn.instructables.com/F92/H6OI/JTEN8RH8/F92H6OIJTEN8RH8.LARGE.jpg", "https://cdn.instructables.com/FP8/FXCR/JTEN8RKT/FP8FXCRJTEN8RKT.LARGE.jpg"], "step_title": "Step 6: Edge Centred Octahedral Transformation"}, {"step": 7, "steps_text": "... and lastly a laser cut edge transformation tetrahedron with 3D printed hinges (sized for 3mm plywood and M5 bolts)", "step_imgs": ["https://cdn.instructables.com/FRT/3UPR/JTEN8RDM/FRT3UPRJTEN8RDM.LARGE.jpg", "https://cdn.instructables.com/FA5/WEUJ/JTEN8RDA/FA5WEUJJTEN8RDA.LARGE.jpg", "https://cdn.instructables.com/FE8/S3V5/JTEN8RC2/FE8S3V5JTEN8RC2.LARGE.jpg"], "step_title": "Step 7: Edge Centred Tetrahedral Transformation"}, {"step": 8, "steps_text": "The thing that has me equal parts fascinated and puzzling over these shapes and transformations is how the dihedral angle in one shape becomes a vertices angle in the next shape up leading to a series of relationships between them. An octahedron is made up of two transformed tetrahedra... and so on and so on\nIf I go a bit crazy and end up doing alchemical and astrological experiments and muttering about celestial spheres you'll know where it started", "step_imgs": [], "step_title": "Step 8: Relationships Between Shapes"}, {"step": 9, "steps_text": "I'm not sure if there are any established practical uses of these - I've seen a few sculptures and models yet but it seems like there should be more. Hopefully readers might come up with some interesting ideas\nThe closest thing that came to mind after making the edge transformation tetrahedron was that the resulting truncated tetrahedron is used for the cargo boxes in the sci-fi movie Silent Running e.g. cargo box image", "step_imgs": [], "step_title": "Step 9: Practical Applications?"}], "channel": "Science"}, {"category": "Technology", "description": "Two other tutorials I have written step you through the basics (Arduino 101) and how to create a really basic data logger (Arduino Datalogger - simple). This tutorial will step through how to attach servo motors, and use temperature sensor to move it!\nThe premise is that often, you want to respond to some input and make something happen. Most tutorials show you how to make lights come on or make a sound. Here, I want to show how you can use a simple servo motor to open something (like a window) in proportion to the ambient temperature.\nLet's get started!", "title": "Temperature and Servos", "url": "https://www.instructables.com/id/Temperature-and-Servos/", "steps": [{"step": 1, "steps_text": "For this tutorial, you're going to need:\nAn Arduino\nA Breadboard Small\nA servo motor\nAn LED\na resistor, set to 150\u03a9\na temperature sensor\nI use Tinkercad for all tutorials until I get into classes or complex libraries, so head over there and get an account! To add the components, you'll need to open the Components draw and search/scroll, making sure you have selected \"all\" instead of \"basic\" in the components drop down selector.\nIf you're not sure how to use these, or if at any time you get lost, go back to Step 1 and use the 101 and datalogger tutorial to get started. They are a good starting point.\nLet's wire these up.", "step_imgs": ["https://cdn.instructables.com/F0P/F5E4/JTEN8V3O/F0PF5E4JTEN8V3O.LARGE.jpg", "https://cdn.instructables.com/FQW/W7BI/JTEN8VI5/FQWW7BIJTEN8VI5.LARGE.jpg"], "step_title": "Step 1: Adding the Components"}, {"step": 2, "steps_text": "A reminder that all columns in a breadboard are connected, but there is a gap in the middle that disconnects the top array from the bottom.\nUse the first image as a guide on how to wire up the 5v and GND wires from the Arduino to the breadboard. Connect the 5V and GND ports on the Arduino to the breadboard. Essentially, these two power rails provide a greater number of ports to access power when prototyping.\nConnect the bottom of the board to the top. Make sure you match GND / Negative (black) to 5v / Positive (red).\nMake sure all components are on the bottom half of the breadboard, except the servo, and that they are crossing the columns. This is important so we don't cross any wires.\nAdd the LED (image 2).\nUse the resistor and connect to one of the pins (I used the anode).\nIf you used the anode (and it is easier to follow the wiring diagram in the image), then connect the cathode (negative) to the GND line on the breadboard.\n\nQuick tip! If you roll your mouse over the end of the pins on a component it'll tell you which is the anode and cathode, or signal etc.\nConnect the temperature sensor. Make sure the left leg goes to 5v. The right leg goes to GND. The middle leg must be connected to the A0 pin.\nThis is an analogue device and as such, needs an analogue pin. We could use digital and tell it to receive analogue, but we have enough pins.\nFor the servo, we have three wires. These include 5v, GND (ground) and a signal wire.\nConnect the brown wire on the servo to GND on the breadboard.\nConnect the red wire on the servo to a 5v pin on the breadboard.\nConnect the orange wire to digital pin 3 on the Arduino.\nIf you're unsure, check the images above!", "step_imgs": ["https://cdn.instructables.com/FUB/ONDW/JTEN93RL/FUBONDWJTEN93RL.LARGE.jpg", "https://cdn.instructables.com/F3Y/MJ6W/JTEN8VHC/F3YMJ6WJTEN8VHC.LARGE.jpg", "https://cdn.instructables.com/F06/IZB4/JTEN8VH9/F06IZB4JTEN8VH9.LARGE.jpg", "https://cdn.instructables.com/F8H/V2BJ/JTEN8VAS/F8HV2BJJTEN8VAS.LARGE.jpg"], "step_title": "Step 2: Wiring Up"}, {"step": 3, "steps_text": "In this example, I am assuming I have a house in a hot climate. I would like to open windows when it gets hot so I can maximise airflow, because I have a condenser air con that requires massive positive pressure in the house to cool the place down. So, we are going to automatically control the windows to maximise airflow.\nLet's get into the code nice and quickly!\n#include <servo.h>\nThis is the first time (in this series) we have used a library. A library is like a box with a series of folders in it. In each folder are sheets of paper, and each one has special instructions on how to use specific devices. You can \"include\" these folders in your code, which makes it faster for you to write your code!\nIn the past, I have written plugins for webapps and other software which are distributed free. It's a great way to give back to the community! Once you have developed a good skill base in code, it's a worthwhile opportunity to engage in open source.\nWe use the #include instruction to tell Arduino that it will use the library. If it is a global library (something you installed with the package manager or built in to the Arduino, like math.h), then you will put it between the <> symbols.\nLater, you'll learn to write your own and if you store them in the project folder, you'll put the filename between double quotes, \"like this\". That's because the compiler (the program that converts the code from something we can read to something the Arduino can read) needs to reference the file in the folder, not on the global scope.\nThe next block of code should look fairly familiar, so we'll just look at the new features.\n// Define constants\n#define temperature A0\n#define ledIndicator 2\n#define servoPin 3\n\n// Startup the servo class\nServo mainServo;\nSo, we have defined the two constants we're going to use. These are the pins connected to sensors or outputs. We also defined the servo pin.\nYou can see the line Servo mainServo - this is where we instantiate the class Servo we installed with the library. This is like turning on the coffee machine to warm it up (I love coffee....). It's ready to go! In this case, mainServo is the name we have given this new instantiation. This is important, because with classes, I could have 1, 2 or many servos running at the same time! This is why we use classes, because they are little packages on their own we can use many times and do many things with.\n// Define variables\nint position = 0;\nint previousPosition;\n\nvoid setup() {\n pinMode(temperature, INPUT);\n pinMode(ledIndicator, OUTPUT);\n\n // Tell mainServo which pin it is connected to\n mainServo.attach(servoPin);\n\n Serial.begin(9600);\n}\nThis block of code above is fairly consistent with everything else we have done. The only major note to make is of the mainServo.attach() function call. Here, we have told mainServo to run a function called attach() and inside the round braces, indicated the pin we are attaching the servo to. This helps the servo know where to send the signals later.\nIf you're wondering how we know what function calls to make inside our library, all libraries have documentation. This documentation tells you what functions exist inside the library, and how you can use them (for example, what parameters each function takes).\nvoid loop() {\n}\nThe next block of code goes within the loop() code.\n// Temperature analysis\nint tempReading = analogRead(temperature);\n// If using 5v input\nfloat voltage = tempReading * 5.0; \n// Divided by 1024\nvoltage /= 1024.0;\n//Converting from 10mv per degree\nfloat tempC = (voltage - 0.5) * 100;\n \n// This maps temperature to degrees open for the flap\nint position = map(tempC, 10, 50, 0, 180);<br>\nIn this block, we are completing temperature analysis (we saw this in the data logger tutorial). Essentially, we're taking the analog signal sent in by the temperature sensor and converting it into degrees.\nThe map() function allows us to convert this into something useable. Rather than perform complex maths that would take many lines, we convert it like this:\nmap(variableValue, fromLow, fromHigh, toLow, toHigh);\nWhat this does is take the value of the variable we have (like degrees) and convert the minimum possible value and the maximum possible value in might give us (in this case, I set the minimum to 10degrees and the maximum to 50degrees. These are the minimum and maximum values I am expecting from the temp sensor, and I also know at 10degrees, I would like the windows completely closed to keep the warmth in! Whilst at 50degrees, I want them completely open for max air flow!\nif(previousPosition != position){\n Serial.print(\"New position: \");\n Serial.println(position);\n  \n mainServo.write(position);\n digitalWrite(ledIndicator, HIGH);\n // Wait for the servo to move\n delay(2000);\n}\n\n// Turn off the indicator light\ndigitalWrite(ledIndicator, LOW);\n// set previousPosition so if we don't have to change, we don't fire the servo\npreviousPosition = position;\nIn this block, I have decided to only allow the servo to fire when the position actually changes. This shouldn't be that often, but it might be. In that case, I might need to make some changes so the code only allows movement when the temp change is over 5degrees, otherwise it might be constantly trimming the window, which might damage the servo. Anyway, a problem for another day!\nSo, if the position changes, then we will print the new position to the Serial and then, using the mainServo.write() function call, passing in the new position, the servo changes position. To alert the user that something is happening, I turn on an LED and then wait 2 seconds for the servo to move. The last two lines turn off the LED and make sure the previousPosition is stored so we can check it next loop.\nAll done!", "step_imgs": ["https://cdn.instructables.com/F7W/UC05/JTEN8VI1/F7WUC05JTEN8VI1.LARGE.jpg"], "step_title": "Step 3: The Code"}, {"step": 4, "steps_text": "That's it! If you would like to check out the circuit, please head over to Tinkercad. I have inserted the embed below.\nThanks for checking out the tutorial. As always, drop a comment if you need help or just want to say thanks!", "step_imgs": [], "step_title": "Step 4: That's It!"}], "channel": "Arduino"}, {"category": "Technology", "description": "This awesome LED clock is a quite simple project that nearly everyone can make. It can function as a Clock, can be LED decoration, or it can just be a nice piece of decoration when turned off.\nWhy I made this project/instructable\nLast year I saw quite some great projects from people that used ping pong balls as diffusers for LEDs. This inspired me to make something with ping pong balls as well. After making some sketches and ordering parts I finally finished the project. Since some people were interested in a tutorial, I decided to improve the build and make a new improved version of the ping pong ball clock. With this instructable, I hope to get others excited and inspired to build their own projects.\nDesign choices\nSince the ping pong balls are not oriented in a matrix, I had to come up with a nice way to display digits. The design I settled on uses 12 ping pong balls for each digit. After some sketching, I found that this allowed for the clearest digit representations. The length of the middle row is 20 balls (20*4 = 80cm). This size came to be because I wanted four digits next to each other, with a colon in the middle. I also wanted to have at least one row of balls between the digits to improve readability. Whilst doing this I found out that this way the total amount of balls and LEDs became to be 128.\nImprovement over the first version\nIn the images, you can see the previous version and the new one (the pictures with 2 panels, the top one is the old version). The newer version:\n- uses LED strips instead of separately soldered together Neo-Pixels.\n- has pixels orientated in a way so it is easier to program.\n- has less exposed contacts.\n- has a back panel, so you can not see through gaps.\n- allows for easier modifications and possible repair.\n- looks cleaner, since wires and electronics cannot be seen from the front.\n- Is way faster to make, since soldering 128*6 contacts, and stripping the same amount of wires takes some time\nnote:\nFor anyone building this: This project requires some repetitive work, I advise to first make a small test version of this project to see how the end result will look like. This allows you to see if the ping pong balls diffuse the light nicely. This could also prevent mistakes that otherwise might occur later on ( like having to much space between balls). I build a small piece of this display (picture) both times I build a clock, and I am glad I did.", "title": "Ping Pong Ball LED Clock", "url": "https://www.instructables.com/id/Ping-Pong-Ball-LED-Clock/", "steps": [{"step": 1, "steps_text": "Materials:\nbought locally:\n- Mdf plate (80*30 cm)\n- Wood for a frame (has to be 5 cm wide and a total length of at least 200 centimeters )\n- 128 ping pong balls (white ones preferably milky white)\n- A few (4) small nails\n- Old USB cable (one that can power the Arduino nano)\n- Power cable from old electronics\nbought online (China)\n- 5V 8A power supply (lower Amperage might also work)\n- Arduino nano (clone)\n- ws2812b LED strip (5m 30Leds/meter IP30)\n- DS3231 RTC\n- Wire with 3 cores (2+ meter)\noptional\n- Female pin connectors\n- Resistor (between 300 and 500 Ohm)\nTools:\n- Saw that can cut 30-degree angles (miter-saw)\n- Hand saw with fine teeth (metal-saw)\n- Wire strippers\n- Soldering iron\n- 12mm drill\n- 32mm hole-saw\n- Wood-glue\n- Hot-glue\n- Flashlight\n- Sandpaper\nnote:\nPicking the right type of ping pong balls is very important for this project. Ping pong balls generally have a seam where two halves were added together. This in itself is not a problem, since by making a hole in the middle one of those halves the seam will not be visible in the display. However, when the ping pong balls also have a print on one side, it is important that the print on the balls is oriented to the back. This could result in a piece of the seam being visible from the front. When buying ping pong balls, also do not buy balls that shine (reflect light). They will diffuse the light less well and it will look strange (an example of ping pong balls you should not buy).\nsummary: preferably use seamless ping pong balls without print that are white and do not reflect light.", "step_imgs": ["https://cdn.instructables.com/FI5/WOQM/JTENAK70/FI5WOQMJTENAK70.LARGE.jpg", "https://cdn.instructables.com/FK2/NI68/JTENAK9O/FK2NI68JTENAK9O.LARGE.jpg", "https://cdn.instructables.com/FPD/P5XE/JTENAKBZ/FPDP5XEJTENAKBZ.LARGE.jpg"], "step_title": "Step 1: Materials / Tools:"}, {"step": 2, "steps_text": "Each ping pong ball will have its own LED behind it. To get as much light as possible to shine through, a piece of the back side of the ping pong balls needs to be removed, so the light of the LED only has to go through one side of the ball. These holes need to be quite large (approximately 30mm) since the LEDs will not be centered behind the balls.\nMaking these large holes in the ping pong balls was a bit of a challenge. Since the balls are quite weak on their own, they need some support before holes can be made in them. I did this by drilling some 32mm holes in a piece of MDF. When sawing the balls, I provided pressure with one hand on the ping pong balls to press them against the hole. Since the hole was approximately 8mm smaller in diameter than the balls, the balls would just be pressed against the hole. Whilst providing pressure on one side, I sawed off the top of the ping pong ball on the other side, by just sawing in a straight line against the MDF.\nBefore sawing them, I made sure that the logo that was printed on the balls, was on the side that I was going to saw off. I also used my flashlight to find the seam where the two halves were added together. I turned the balls a bit more, so the logo was not visible from the front and as little from the seam was visible.\nnote: It does not matter if not all holes are exactly the same size, the size can vary a few mm. This can not be seen from any direction when the build is finished.", "step_imgs": ["https://cdn.instructables.com/FYX/3Z4V/JTON6BAJ/FYX3Z4VJTON6BAJ.LARGE.jpg", "https://cdn.instructables.com/FI6/ZSS2/JTENARUI/FI6ZSS2JTENARUI.LARGE.jpg", "https://cdn.instructables.com/F4S/BL5B/JTENB2CD/F4SBL5BJTENB2CD.LARGE.jpg", "https://cdn.instructables.com/FDC/YLRR/JTENARWD/FDCYLRRJTENARWD.LARGE.jpg", "https://cdn.instructables.com/F7M/Y80S/JTENARSM/F7MY80SJTENARSM.LARGE.jpg"], "step_title": "Step 2: Making Holes in the Ping Pong Balls."}, {"step": 3, "steps_text": "After making large holes in all the ping pong balls they need to be glued together in rows (2 rows of (17,18 and 19) and one row of 20). These rows should be as straight as possible and there should be no space between the balls. I used the wood I bought to build the frame to do this. By having the balls supported by the 2 pieces of wood I was certain that they were in one line. After placing a few balls, whilst making sure the holes were facing up and the balls were touching each other, I glued them together. A very little bit of glue is enough to do this. If you use to much glue it will be visible from the front. I used a flashlight again this tone to make sure ping pong balls did not have ugly spots on the front side (some had those since it were cheap balls).", "step_imgs": ["https://cdn.instructables.com/F2G/DI8B/JTENAKM3/F2GDI8BJTENAKM3.LARGE.jpg", "https://cdn.instructables.com/FXW/IAFJ/JTENAL71/FXWIAFJJTENAL71.LARGE.jpg", "https://cdn.instructables.com/FOM/RLWP/JTENALAK/FOMRLWPJTENALAK.LARGE.jpg", "https://cdn.instructables.com/FPD/K57O/JTENAKID/FPDK57OJTENAKID.LARGE.jpg", "https://cdn.instructables.com/FJS/PVQJ/JTENALDM/FJSPVQJJTENALDM.LARGE.jpg", "https://cdn.instructables.com/F3N/PPDA/JTENALHX/F3NPPDAJTENALHX.LARGE.jpg", "https://cdn.instructables.com/FST/4E18/JTENALLY/FST4E18JTENALLY.LARGE.jpg", "https://cdn.instructables.com/FUX/WWUM/JTENALOO/FUXWWUMJTENALOO.LARGE.jpg", "https://cdn.instructables.com/FYO/WQ0O/JTENALSL/FYOWQ0OJTENALSL.LARGE.jpg", "https://cdn.instructables.com/FEK/UKBC/JTENALUY/FEKUKBCJTENALUY.LARGE.jpg"], "step_title": "Step 3: Gluing All Balls in Rows"}, {"step": 4, "steps_text": "To do this I used the wood for the frame to keep 2 rows pressed together. Keep in mind to use small drops of glue, if you use to much it will be visible from the front. After placing glue on around 8 connections at a time, I provided pressure with my hands to make sure the balls were glued tight together.", "step_imgs": ["https://cdn.instructables.com/FXI/13Q7/JTENALXE/FXI13Q7JTENALXE.LARGE.jpg", "https://cdn.instructables.com/F4H/L4D1/JTENB4RN/F4HL4D1JTENB4RN.LARGE.jpg", "https://cdn.instructables.com/F8Y/3O3R/JTENB4U9/F8Y3O3RJTENB4U9.LARGE.jpg", "https://cdn.instructables.com/F18/38Z1/JTENALZV/F1838Z1JTENALZV.LARGE.jpg", "https://cdn.instructables.com/F0W/YA6Q/JTENAM25/F0WYA6QJTENAM25.LARGE.jpg", "https://cdn.instructables.com/FT3/EKVT/JTENAM4Y/FT3EKVTJTENAM4Y.LARGE.jpg", "https://cdn.instructables.com/FMH/GIB3/JTENB4O2/FMHGIB3JTENB4O2.LARGE.jpg", "https://cdn.instructables.com/FRW/EINR/JTENAM8K/FRWEINRJTENAM8K.LARGE.jpg", "https://cdn.instructables.com/FTW/JUOU/JTENB4XN/FTWJUOUJTENB4XN.LARGE.jpg", "https://cdn.instructables.com/F74/Y3GJ/JTENB519/F74Y3GJJTENB519.LARGE.jpg"], "step_title": "Step 4: Gluing the Rows Together."}, {"step": 5, "steps_text": "The frame exists out of 6 pieces. 2 long pieces and 4 short. All the edges of these pieces should have a 60-degree angle. Since the size of my ping pong balls wasn\u2019t exactly 40 mm, but (39,5 something), I calculated the approximate length of the frame pieces (this can be done by measuring the height or width of the panel and using a^2 + b^2 = c^2). After cutting all 6, I placed them around the ping pong ball panel, to see if it fitted well. It didn't, so I sawed a few mm more of some pieces. I glued everything together around the ping pong ball panel to make sure it was glued in exactly the right shape, this was necessary since the angles were not cut perfectly in 60 degrees but were more likely 59.5 mm.", "step_imgs": ["https://cdn.instructables.com/FGF/CQFQ/JTENB6YR/FGFCQFQJTENB6YR.LARGE.jpg", "https://cdn.instructables.com/FPM/JYPH/JTENB5PH/FPMJYPHJTENB5PH.LARGE.jpg", "https://cdn.instructables.com/FLQ/Y8A3/JTENB5PT/FLQY8A3JTENB5PT.LARGE.jpg", "https://cdn.instructables.com/FLU/Z4BD/JTENB5PK/FLUZ4BDJTENB5PK.LARGE.jpg", "https://cdn.instructables.com/FRA/SANB/JTENB70W/FRASANBJTENB70W.LARGE.jpg", "https://cdn.instructables.com/F3K/XAKT/JTENB5SA/F3KXAKTJTENB5SA.LARGE.jpg"], "step_title": "Step 5: Making the Frame"}, {"step": 6, "steps_text": "The led strip needs to be cut (one piece of 1 led, one piece of 3 LEDs, one piece of 5 LEDs and 17 pieces with 7 LEDs). The pieces of LED strip need to be wired as can be seen in the image ( first a piece of one led, then the 5 LEDs, next 17 pieces with 7 LEDs and finally the piece with 3 LEDs). The wire that connects the shorter pieces of the strip should be longer than the other pieces since it needs to cover a greater distance. I taped the strip on a piece of MDF to see if each led would be behind its own ball. After soldering all the pieces together I tested if all the solder connections were good.", "step_imgs": ["https://cdn.instructables.com/FPJ/R6B9/JTENB539/FPJR6B9JTENB539.LARGE.jpg", "https://cdn.instructables.com/FAT/5RDF/JTENB5LL/FAT5RDFJTENB5LL.LARGE.jpg", "https://cdn.instructables.com/FET/0509/JTON6QF0/FET0509JTON6QF0.LARGE.jpg", "https://cdn.instructables.com/FB2/JWBP/JTENB5AE/FB2JWBPJTENB5AE.LARGE.jpg", "https://cdn.instructables.com/FF8/OKU8/JTENB5G8/FF8OKU8JTENB5G8.LARGE.jpg", "https://cdn.instructables.com/FL2/ZYG3/JTENB558/FL2ZYG3JTENB558.LARGE.jpg", "https://cdn.instructables.com/FFM/7TRB/JTENAPF0/FFM7TRBJTENAPF0.LARGE.jpg"], "step_title": "Step 6: Soldering the LED Strip"}, {"step": 7, "steps_text": "One the frame was done I placed the frame and the ping pong ball panel over the MDF which had the LEDs taped to it. After making sure each led was after its own ball I removed the ping pong ball panel. Next, I drew along the inside of the frame on the MDF, to get the shape I needed to cut out. I did it this way because the LEDs are not centered behind the balls and this way I have the relative position of the LEDs to the frame. After removing the LEDs that were taped to the board I cut out the shape of the panel and sanded the edges, so it fitted nicely inside the frame.", "step_imgs": ["https://cdn.instructables.com/FIH/3NB5/JTENB6GW/FIH3NB5JTENB6GW.LARGE.jpg", "https://cdn.instructables.com/FD5/OC55/JTON6S22/FD5OC55JTON6S22.LARGE.jpg", "https://cdn.instructables.com/F69/R03M/JTENB65C/F69R03MJTENB65C.LARGE.jpg", "https://cdn.instructables.com/FV7/QGRL/JTON6SON/FV7QGRLJTON6SON.LARGE.jpg", "https://cdn.instructables.com/FRY/AAXO/JTENB6IU/FRYAAXOJTENB6IU.LARGE.jpg"], "step_title": "Step 7: Cutting the MDF"}, {"step": 8, "steps_text": "As could be seen previously, the wire connecting the LEDs is kinda in the way. The way it is right now, the wire will be visible from the front. I decided to solve this by drilling holes on the end of the location of each vertical strip of LEDs, so the wire can go on the backside. I weaved the led strip through the holes and temporarily taped it down. After making sure that again, each led would be behind its own ping pong ball I removed the tape and connected the LED strip to the board with the glue strip that is already on the LED strip.\nnote: When drilling holes in MDF, be really careful, you can break the board really easy.", "step_imgs": ["https://cdn.instructables.com/FB4/ER75/JTENB6TN/FB4ER75JTENB6TN.LARGE.jpg", "https://cdn.instructables.com/FX3/G5WR/JTENB6LM/FX3G5WRJTENB6LM.LARGE.jpg", "https://cdn.instructables.com/FUG/LX4R/JTENB6SB/FUGLX4RJTENB6SB.LARGE.jpg", "https://cdn.instructables.com/F83/710S/JTENB6T4/F83710SJTENB6T4.LARGE.jpg", "https://cdn.instructables.com/FQ8/SWQK/JTENB6UZ/FQ8SWQKJTENB6UZ.LARGE.jpg", "https://cdn.instructables.com/FGH/TIP1/JTON72J5/FGHTIP1JTON72J5.LARGE.jpg", "https://cdn.instructables.com/FAC/GV5C/JTENB6V4/FACGV5CJTENB6V4.LARGE.jpg"], "step_title": "Step 8: Adding Holes and LEDs to MDF"}, {"step": 9, "steps_text": "I placed the panel of ping pong balls upside down in the frame, then I applied glue on every point where the ping pong balls touched ( or barely touched the frame ).", "step_imgs": ["https://cdn.instructables.com/FQJ/5QJ5/JTENB76O/FQJ5QJ5JTENB76O.LARGE.jpg", "https://cdn.instructables.com/FXS/NADO/JTENB723/FXSNADOJTENB723.LARGE.jpg", "https://cdn.instructables.com/F2N/7MXY/JTENB72O/F2N7MXYJTENB72O.LARGE.jpg", "https://cdn.instructables.com/FDP/9P9C/JTENB74T/FDP9P9CJTENB74T.LARGE.jpg"], "step_title": "Step 9: Gluing the Balls to the Frame"}, {"step": 10, "steps_text": "I placed the led panel on top of the backside of the balls. Next, I used 4 small nails to attach the panel to the frame. I did this by placing the nails on the inside of the frame. I chose to do it this way since it allows me to fix something if it ever breaks (It also allows me to double the number of LEDs, since to many lumens does not exist)", "step_imgs": ["https://cdn.instructables.com/FDK/QFV0/JTENB76V/FDKQFV0JTENB76V.LARGE.jpg", "https://cdn.instructables.com/FOB/F7FS/JTENB7IW/FOBF7FSJTENB7IW.LARGE.jpg", "https://cdn.instructables.com/FS8/BNLB/JTENB7BL/FS8BNLBJTENB7BL.LARGE.jpg", "https://cdn.instructables.com/FCA/OG7J/JTENB78V/FCAOG7JJTENB78V.LARGE.jpg", "https://cdn.instructables.com/FRU/XAF0/JTENB7L1/FRUXAF0JTENB7L1.LARGE.jpg"], "step_title": "Step 10: Attaching the LED Panel to the Frame"}, {"step": 11, "steps_text": "Okay, I have no experience with Arduino so this might not be perfect. But I tried to do this in an as simple way as possible.\nI soldered connectors to the Arduino nano (black things in the image) (not necessary)\nI did it this way so everything can be taken apart easily again if I ever want to add Buttons and a LDR to it.\nI connected the RTC to the Arduino, just make sure the SDA and SCl of the clock module are connected to the SDA and SCL of the Arduino Nano. Then connect the resistor between pin 9 and the data in of the LED strip.\nYes, it really is that simple.\nTo provide everything with power, I cut a USB cable that could connect to the nano in half and connected the grounds of the two pieces with the ground of the led strip. I did the same with the 5V side. This allows me to power the LED strip without supplying power through the Arduino.\nI also drilled a hole in the bottom of one side of the frame for the power cable to go through. This allows the clock to be flat against a wall.\nThe only thing left to do is writing some code.", "step_imgs": ["https://cdn.instructables.com/FQH/USHL/JTENB8B5/FQHUSHLJTENB8B5.LARGE.jpg", "https://cdn.instructables.com/FQR/ARDO/JTENB7PS/FQRARDOJTENB7PS.LARGE.jpg", "https://cdn.instructables.com/FNH/WII5/JTENB80D/FNHWII5JTENB80D.LARGE.jpg", "https://cdn.instructables.com/FFW/Z7DX/JTENB86I/FFWZ7DXJTENB86I.LARGE.jpg", "https://cdn.instructables.com/FZ2/ZOW1/JTENB8ET/FZ2ZOW1JTENB8ET.LARGE.jpg", "https://cdn.instructables.com/FL2/851K/JTENB8I2/FL2851KJTENB8I2.LARGE.jpg"], "step_title": "Step 11: Electronics"}, {"step": 12, "steps_text": "To set the time on the RTC I used this code, the only thing I added was assigning 5V and ground to two pins to power the RTC. This code automatically sets the time to the system time of your PC.\nThe 2 libraries used for my program are FastLED and DS3232RTC\ncode:\n#include  <DS3232RTC.h>\n#include  <fastled.h>\n#define LED_PIN     9\n#define NUM_LEDS    128\nCRGB leds[NUM_LEDS];\nCHSV colourOfNumbers( 160, 255, 255);\nDS3232RTC myRTC(false);\ntmElements_t tm;\nint hue=0;\nconst int Digits[10][10] = \n{\n  {7,8,10,11,14,18,22,24},\n  {14,16,18,22,24},\n  {7,8,9,11,14,16,18,24},\n  {7,9,11,14,16,18,22,24},\n  {9,10,11,16,18,22,24},\n  {7,9,10,11,14,16,18,22},\n  {7,8,9,14,15,16,18,22},\n  {7,11,14,16,17,24},\n  {7,8,9,10,11,14,16,18,22,24},\n  {7,9,10,11,14,16,17,24},\n};\nvoid setup()\n{\n    pinMode(17, OUTPUT); //ground and v5 for clock module\n    pinMode(16, OUTPUT);\n    digitalWrite(17, HIGH);\n    digitalWrite(16, LOW);\n    FastLED.addLeds<ws2812, led_pin,=\"\" grb=\"\">(leds, NUM_LEDS);\n    myRTC.begin();\n}\nvoid displaynumber( int place , int number , CHSV colour){//function that displays 2 digit numbers\n  for (int i = 0 ; i < 10 ; i++) {\n    if (Digits[number/10][i] != 0) {\n      leds[(Digits[number/10][i]+place)] = colour;\n    }\n    if (Digits[number%10][i] != 0) {\n      leds[(Digits[number%10][i]+28+place)] = colour;\n    }\n  }\n}\nvoid loop(){\n  RTC.read(tm);\n  hue=(hue+1)%2550;\n  colourOfNumbers.hue = hue/10;\n  displaynumber(0,tm.Hour,colourOfNumbers);\n  displaynumber(70,tm.Minute,colourOfNumbers);\n  if ( tm.Second%2 == 0 ){\n    leds[64] = colourOfNumbers;\n    leds[66] = colourOfNumbers;\n  }\n   FastLED.show();\n   FastLED.clear ();\n}\nI think the clock code is relatively short, but it can, of course, be improved. All it does is basically look at the time and display the digit it sees. The location of the LEDs that should be lit to form a digit is hardcoded in a matrix. For example, leds[0] contains the numbers of the LEDs that should be lit to form a zero.", "step_imgs": [], "step_title": "Step 12: Code"}, {"step": 13, "steps_text": "This project can be so much more than a basic clock, you can add buttons, make it change brightness depending on the light, have it display just some colors, make it reactive to music, connect it to wifi with an ESP. It's basically an Arduino connected to a display, everything is possible", "step_imgs": ["https://cdn.instructables.com/FRI/JYD6/JTMSX3C9/FRIJYD6JTMSX3C9.LARGE.jpg", "https://cdn.instructables.com/F71/3IOO/JTMSX3C8/F713IOOJTMSX3C8.LARGE.jpg"], "step_title": "Step 13: Add Every Feature You Want"}], "channel": "Clocks"}, {"category": "Technology", "description": "I built some DIY acoustic panels to help cut down on the reverb in my room when recording audio. If you are building a home studio, this project is a great and relatively inexpensive way to make your own acoustic panels!", "title": "DIY Acoustic Panels", "url": "https://www.instructables.com/id/DIY-Acoustic-Panels-1/", "steps": [{"step": 1, "steps_text": "1x4 boards\nFabric: Pick whatever you'd like and that would match the room you are putting the panels in\nInsulation: https://thd.co/2Y5WbMS\nScreen Door Material: https://thd.co/2JqM8yO\nStapler: https://amzn.to/2TUjcDv\nStaples: https://amzn.to/2Weeq0Z\nDrywall Anchors: https://amzn.to/2TmQmHf\nD-Ring Hangers: https://amzn.to/2HD99Nt", "step_imgs": [], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "2x 48\" x 1\"x4\" per panel\n2x 23\" x 1\"x4\" per panel", "step_imgs": ["https://cdn.instructables.com/F25/YV57/JTEN886H/F25YV57JTEN886H.LARGE.jpg"], "step_title": "Step 2: Cutting the Boards to Length"}, {"step": 3, "steps_text": "I used some glue on my joints so they're a little stronger after I nail them together.", "step_imgs": ["https://cdn.instructables.com/FR6/ZMVE/JTEN88M5/FR6ZMVEJTEN88M5.LARGE.jpg"], "step_title": "Step 3: Glue Up the Boards"}, {"step": 4, "steps_text": "I used a brad nailer for this, but you could use small screws and some butt joints, or pocket hole joints, do whatever your heart desires.", "step_imgs": ["https://cdn.instructables.com/FU4/D9XM/JTEN8925/FU4D9XMJTEN8925.LARGE.jpg"], "step_title": "Step 4: Fasten Them Together"}, {"step": 5, "steps_text": "I used screen door material to hold in the insulation, I probably put on too many staples but better safe than sorry.", "step_imgs": ["https://cdn.instructables.com/FPL/VGWB/JTEN899P/FPLVGWBJTEN899P.LARGE.jpg"], "step_title": "Step 5: Add Screen Material"}, {"step": 6, "steps_text": "I just used a piece and a half of insulation in my panels, if you decide to make a different size, you may use less or more.", "step_imgs": ["https://cdn.instructables.com/FPJ/G0OR/JTEN8926/FPJG0ORJTEN8926.LARGE.jpg"], "step_title": "Step 6: Add Insulation"}, {"step": 7, "steps_text": "I added more screen on the other side as well.", "step_imgs": ["https://cdn.instructables.com/F5E/YHGF/JTEN8922/F5EYHGFJTEN8922.LARGE.jpg"], "step_title": "Step 7: Add More Screen"}, {"step": 8, "steps_text": "I stretched fabric over the front of the panels, you really gotta stretch it out and make sure to add staples frequently.", "step_imgs": ["https://cdn.instructables.com/FKU/152L/JTEN892C/FKU152LJTEN892C.LARGE.jpg"], "step_title": "Step 8: Cover in Fabric"}, {"step": 9, "steps_text": "Trim the excess fabric away, I also used hot glue to secure the little bit left so it didn't flap around.", "step_imgs": ["https://cdn.instructables.com/FKL/5ASP/JTEN89AG/FKL5ASPJTEN89AG.LARGE.jpg"], "step_title": "Step 9: Trim the Excess"}, {"step": 10, "steps_text": "I used drywall anchors and d-ring hangers to hang up the panels.", "step_imgs": ["https://cdn.instructables.com/FT0/QJ6Z/JTEN8874/FT0QJ6ZJTEN8874.LARGE.jpg", "https://cdn.instructables.com/F94/8GK0/JTEN8877/F948GK0JTEN8877.LARGE.jpg", "https://cdn.instructables.com/FBY/QZXB/JTEN88UR/FBYQZXBJTEN88UR.LARGE.jpg"], "step_title": "Step 10: Hang It Up"}, {"step": 11, "steps_text": "And that's it, enjoy some reverb reduction!", "step_imgs": ["https://cdn.instructables.com/FK0/7M9M/JTEN8863/FK07M9MJTEN8863.LARGE.jpg"], "step_title": "Step 11: You're Done!"}], "channel": "Audio"}, {"category": "Technology", "description": "Now, you can easily track attendance and clock working hours with the help of this easy and fun to make DIY fingerprint scanner! We\u2019ll be using ThingSpeak to store and retrieve the data. All you require is a cardboard piece, some colored paper, a fingerprint sensor, evive, and lots of DIYing!\nReady for some scanning and tracking? Hop on board!", "title": "IoT Based Fingerprint Attendance System Using Evive (Arduino Based Embedded Platform)", "url": "https://www.instructables.com/id/IoT-Based-Fingerprint-Attendance-System-Using-Eviv/", "steps": [{"step": 1, "steps_text": "Hardware\nevive / Arduino Board\nFingerprint Sensor\nWiFi Module (ESP8266)\nJumper Cables\nCardboard\nColor Papers\nHot Glue\nSoftware\nArduino IDE\nThingspeak", "step_imgs": [], "step_title": "Step 1: Components Required"}, {"step": 2, "steps_text": "Take the piece of cardboard and cut it in the shape of evive or your Arduino Board.\nThe box I have made just needs to be folded and glued.\nCut out the extras and you will get the shape as shown in Image2.\nTo fold the cardboard, make slight cuts at the edges drawn. Thus, helping you to fold it into the box easily.\nFinally, to keep the box stable, glue the edges using Hot Glue.\nThus, our box is almost ready.", "step_imgs": ["https://cdn.instructables.com/FSM/O52Z/JTEN8GYF/FSMO52ZJTEN8GYF.LARGE.jpg", "https://cdn.instructables.com/FIV/174A/JTEN8GYG/FIV174AJTEN8GYG.LARGE.jpg", "https://cdn.instructables.com/FQD/RWM6/JTEN8GYH/FQDRWM6JTEN8GYH.LARGE.jpg"], "step_title": "Step 2: Making the Evive Holder"}, {"step": 3, "steps_text": "Take the box that, you have made and color it according to your choice.\nI have glued the color paper on the box to make it attractive.\nFinally, keep the evive safe :) I have added a lock to it.\nI took a small string and have made a loop of it.\nI have fixed a small bolt onto the side of the box to fix the loop around it.\nFinally, as we are using the fingerprint sensor. I have 3D printed a sensor holder and have attached it to the front door of the box.", "step_imgs": ["https://cdn.instructables.com/FJR/ORWO/JTEN8GYL/FJRORWOJTEN8GYL.LARGE.jpg"], "step_title": "Step 3: Decorating the Box"}, {"step": 4, "steps_text": "Once done with the making, it's time to make the connection:\nVCC (Red wire) to evive's 3.3 V\nGND (Black wire) to evive's GND\nRx (Yellow wire) to Digital Pin 10 of evive\nTx (White wire) to Digital Pin 11 of evive", "step_imgs": ["https://cdn.instructables.com/FE9/FN40/JTEN8OOL/FE9FN40JTEN8OOL.LARGE.jpg"], "step_title": "Step 4: Circuitry"}, {"step": 5, "steps_text": "I have added the two working mode for the attendance system:\nEnroll Mode\nAttendance Mode\nLet's discuss each mode in detail.", "step_imgs": ["https://cdn.instructables.com/FTC/2PO9/JTEN8GZH/FTC2PO9JTEN8GZH.LARGE.jpg"], "step_title": "Step 5: Working Modes"}, {"step": 6, "steps_text": "All the first time user needs to first enroll themselves into the system.\nI have added some instructions so that one can enroll the fingerprints easily.\nI have added the following instructions:\nChoose the Enroll Mode\nChoose the Number on which you wanna enroll yourself.\nPlace your finger on the sensor.\nThen remove the finger and again place it for the verification\nIf the fingerprints are matched, you have now enrolled.\nIf not, have to follow the above steps again.", "step_imgs": ["https://cdn.instructables.com/FAK/0P37/JTEN8GYP/FAK0P37JTEN8GYP.LARGE.jpg", "https://cdn.instructables.com/FQD/NM2T/JTEN8GYQ/FQDNM2TJTEN8GYQ.LARGE.jpg"], "step_title": "Step 6: Enroll Mode"}, {"step": 7, "steps_text": "Once you have enrolled yourself, all you need to do is mark your attendance daily to check your working hours.\nSelect the Attendance mode and place your finger on the sensor and mark your attendance.\nYou can select the text you want to display on the screen.\nOnce you have marked the attendance, on selecting the attendance mode again and placing your finger again, will mark your exit.\nYou can again choose the exit text you want to display.", "step_imgs": ["https://cdn.instructables.com/FO6/WMA2/JTEN8GZE/FO6WMA2JTEN8GZE.LARGE.jpg"], "step_title": "Step 7: Attendance Mode"}, {"step": 8, "steps_text": "I have used Thingspeak, which is the opensource software to store and retrieve data.\nI have first created a Thingspeak account. One out of the many good things about Thingspeak is that you can store the data coming from your multiple projects in a single account. All you need to do is create a different channel for each project. You can store up to 8 fields on 1 channel. We will store 1 parameter.\nWhen a new channel is created, you can see four graphs for each parameter. Get the Channel ID of your Channel (To be used while connecting to the channel). Get the Read and Write API from the API tab:\nTo connect your project with the corresponding channel, you need to enter the Thingspeak's API of that channel into your Arduino Code.\nAll our records are being directly stored over WiFi to our account.\nYou can retrieve the data by downloading the CSV File.", "step_imgs": ["https://cdn.instructables.com/FQH/VDET/JTEN9469/FQHVDETJTEN9469.LARGE.jpg", "https://cdn.instructables.com/FGZ/FMHO/JTEN8GYC/FGZFMHOJTEN8GYC.LARGE.jpg", "https://cdn.instructables.com/FDB/O4U1/JTEN8GZA/FDBO4U1JTEN8GZA.LARGE.jpg", "https://cdn.instructables.com/F5D/9OT4/JTEN8GYE/F5D9OT4JTEN8GYE.LARGE.jpg"], "step_title": "Step 8: Storing Data"}, {"step": 9, "steps_text": "Upload the following Arduino code to evive.", "step_imgs": [], "step_title": "Step 9: Arduino Code"}, {"step": 10, "steps_text": "With this, your DIY fingerprint attendance system is all set to maintain a record for you of all those you came and went.\nBTW, did you know that is one door is closed, another somewhere is open? If you didn\u2019t you will now! Owing to overwhelming success and the love and support of DIY enthusiasts and hobbyists around the world, we\u2019ve decided to EXTEND our Indiegogo campaign! So, If you missed the opportunity before, you have the chance to take its advantage NOW! Go check out all the cool stuff that we\u2019re offering HERE and seize the day. ;)", "step_imgs": [], "step_title": "Step 10: Conclusion"}], "channel": "Arduino"}, {"category": "Technology", "description": "Turn any radio into a guitar amp.\nThis is probably one of my favourite hacks that I have ever stumbled across! It\u2019s so simple that anyone with a soldering iron and screwdriver can do it.\nAll radios have an amplifier built into them \u2013 it\u2019s how you're able to increase the volume. What this hack allows you to do is to tap into the radio\u2019s amplifier so you can play guitar through it.\nYou may be thinking why in hell would I want to do that!\nHacking a radio can give you the most amazing vintage tone. The distinct \u201cLo-fidelity\u201d sounds that come out of these vintage radio\u2019s will really surprise you. It\u2019s a real raw and dirty sound which is perfect for playing some bluesy riffs. There is also the added bonus of creating your very own sound as no 2 radios are ever alike.\nWhen you get your hands on a radio that you want to hack, there is a good chanec that its seen some miles. The speaker might hiss or rattle, the volume could jump around or it has some other left-of-centre feature which is what makes these amps so cool. You never know what sound you are going to get.\nI've made a few of these now and this version has added filters in the way of capacitors so the sound is even better. You can swap from a clean sound to a low down dirty sound at a flick of a switch.", "title": "Hack Any Radio Into a Guitar Amp V2", "url": "https://www.instructables.com/id/Hack-Any-Radio-Into-a-Guitar-Amp-V2/", "steps": [{"step": 1, "steps_text": "Parts\n1. Vintage radio. If you don't have one lying around, then try a thrift store, 2nd hand shop or eBay\n2. 220uf Cap - eBay This is a good quality audio cap. You can use a cheaper one if you want to but it might affect the sound quality.\n3. 100nf Cap - eBay\n4. SPDT Switch - eBay\n5. 10K Potentiometer - eBay\n6. 1/4 mono, input jack - eBay\n7. Prototype board - eBay\n8. Wires\nTools:\n1. Soldering Iron\n2. Guitar\n3. Guitar cord\n4. Drill\n5. Screwdriver / Phillips head", "step_imgs": ["https://cdn.instructables.com/FGF/6ZKW/JT91X79I/FGF6ZKWJT91X79I.LARGE.jpg", "https://cdn.instructables.com/FAL/GRX5/JT91XAKE/FALGRX5JT91XAKE.LARGE.jpg"], "step_title": "Step 1: Things to Gather"}, {"step": 2, "steps_text": "I'm no expert on this hack, but after some research and a little experimentation, I worked out that there are some radio's that will work better than others. I have included some notes below on what to look for when your out searching for a vintage radio to convert.\nThe trick is to find one that has some style and is large enough to pump out some decent sound. You can modify small transistor radios but you'll probably find that they aren't very loud or have any distortion. If the radio has no handle and a wrist strap or is in a little leather case it will be a bit too small to waste you time with. This is due to the small, crappy speaker that they come with.\nLook for a radio that's at least a 3 inch speaker. It will ensure the speaker is big enough to have an effect on the tone. The size and quantity of the batteries that the radio takes will also effect the tone! The bigger the size of battery the fuller the tone and the more volume the radio will have. Try and find a radio which takes \"C\" or \"D\" batteries as these will give you the best result. The radio I used takes 6 X \"D\" cell batteries so has plenty of power to drice the 5 amp speaker.\nIf your radio has extra controls like bass, tone or trebble, then you are in radio amp heaven. These will give you extra ways to change the sound and tone of the amp.\nRadios which take a 9v or AA batteries won't give you the best sound. It is definitely worth experimenting though and seeing what type of sound you can get out of the small \"transistor\" type radio's. You never know...", "step_imgs": ["https://cdn.instructables.com/FG0/S1ZH/JT91X7YX/FG0S1ZHJT91X7YX.LARGE.jpg", "https://cdn.instructables.com/FEN/NR9E/JT91XAYU/FENNR9EJT91XAYU.LARGE.jpg", "https://cdn.instructables.com/F1A/GDS0/JT91XAYX/F1AGDS0JT91XAYX.LARGE.jpg", "https://cdn.instructables.com/F1D/2K46/JT91XAYW/F1D2K46JT91XAYW.LARGE.jpg", "https://cdn.instructables.com/FN8/HJZL/JT91XAKF/FN8HJZLJT91XAKF.LARGE.jpg", "https://cdn.instructables.com/FBC/ZYXY/JT91XAMG/FBCZYXYJT91XAMG.LARGE.jpg"], "step_title": "Step 2: Finding the Right Radio"}, {"step": 3, "steps_text": "The first thing you'll need to do is to open the back of the radio. You need to be able to get to the volume potentiometer do be able to do this mod. This hack won't affect the radio's ability to play music either so you'll still be able to listen to music through it.\nSteps:\n1. Flip the radio over and remove the screws holding the back into place\n2. With a screwdriver, lever off the knobs and switches. They should pop off with some jiggling.\n3. Gently remove the cover making sure that no wires are pulled out.\n4. You should be able to see the volume pot and also the solder points.", "step_imgs": ["https://cdn.instructables.com/F0Q/YTB5/JT91XAXR/F0QYTB5JT91XAXR.LARGE.jpg", "https://cdn.instructables.com/FFW/TYU5/JT91XAXT/FFWTYU5JT91XAXT.LARGE.jpg"], "step_title": "Step 3: Open Up You Radio"}, {"step": 4, "steps_text": "The circuit is pretty simple to make. I'd prototype it first though on a breadboard and then test it first, you may have to change the value of the capacitors for your radio.\nSteps:\n1. Breadboard the circuit first then test it on the radio.\n2. To test you'll need to solder a jumper cable to a ground point on the radio - I used the ground solder point on the speaker\n3. The other jumper cable which will be the positive one will be used to probe the volume pot to determine which is gthe right solder point. Once you have found it (you will be able to hear the guitar through the speaker when strummed), then you can solder the jumper wire to it and experiment further.\n4. Put the radio onto AM and tune it so it's not on a radio station. You may hear some static or noise, if you, turn down the radio until you don't hear it any longer.\nThe next step will go through ghow to find the right solder point.", "step_imgs": ["https://cdn.instructables.com/FSO/0COX/JT91WY0U/FSO0COXJT91WY0U.LARGE.jpg", "https://cdn.instructables.com/FO2/L4BC/JT91X6UG/FO2L4BCJT91X6UG.LARGE.jpg", "https://cdn.instructables.com/FOR/ZMYF/JT91X6UP/FORZMYFJT91X6UP.LARGE.jpg", "https://cdn.instructables.com/F8I/EHRR/JT91X6R3/F8IEHRRJT91X6R3.LARGE.jpg", "https://cdn.instructables.com/FZM/F3GS/JT91X7QI/FZMF3GSJT91X7QI.LARGE.jpg"], "step_title": "Step 4: Making the Circuit - Breadboarding"}, {"step": 5, "steps_text": "When deciding on where to add the positive wire on the voltage pot, you need to do a little bit of testing. There are usually about 5 solder points that the voltage pot has, and the wire from the jack will need to be soldered to the right one for the amp to work.\nSteps:\n1. With the breadboarded circuit connected to ground on the radio and the lead plugged into the 1/4\" jack and the guitar, you can start to probe and work out where to attach the positive to the volume pot\n2. Place the jumper lead against the first solder point on the volume pot and strum the guitar. If you near nothing, move onto the next one.\n3. Once you find the right one (you'll here the guitar through the speaker) solder the jumper lead to it\n4. Experiment with different cap values if necessary until you are happy with the sound", "step_imgs": ["https://cdn.instructables.com/FOO/2SZW/JT91X6SS/FOO2SZWJT91X6SS.LARGE.jpg", "https://cdn.instructables.com/FPK/YB62/JT91X6SR/FPKYB62JT91X6SR.LARGE.jpg", "https://cdn.instructables.com/FC3/TE34/JT91X7SO/FC3TE34JT91X7SO.LARGE.jpg", "https://cdn.instructables.com/FBF/2DW3/JT91XAZZ/FBF2DW3JT91XAZZ.LARGE.jpg"], "step_title": "Step 5: Finding the Right Solder Point on the Volume Pot"}, {"step": 6, "steps_text": "I've included a schematic for the circuit along with the fritzing file in case you want to make any changes. You can download fritzing here to make your own circuit shematics.\nSteps:\n1. Use the schematic and start to build the circuit\n2. You'll need to add some wires so you can connect these to the pot, switch and 1/4' socket. Make sure that they are longer then necessary - it's easier to trim then to add.\n3. Once the curcuit is built, you then need to add the components into the radio", "step_imgs": ["https://cdn.instructables.com/FSO/0COX/JT91WY0U/FSO0COXJT91WY0U.LARGE.jpg", "https://cdn.instructables.com/FLO/O4EI/JT91X7EH/FLOO4EIJT91X7EH.LARGE.jpg"], "step_title": "Step 6: Making the Circuit"}, {"step": 7, "steps_text": "To be able to plug the guitar inot the radio, you'll need to find a good spot to add the jack (and other components). The good thing is, most radio's have empty space inside to add extra components.\nSteps:\n1. First identfy where to add the 3 components to the case of the radio. You'll also need to be able to stick the circuit down as well so make sure there's enough room inside for that as well.\n2. Drill 3 holes into the radio and secure the pot, switch and jack into the case\n3. Place the circuit inside and make sure you can secure it in place later on", "step_imgs": ["https://cdn.instructables.com/FBM/0PI7/JT91X7KO/FBM0PI7JT91X7KO.LARGE.jpg", "https://cdn.instructables.com/FI1/X5QX/JT91X7M4/FI1X5QXJT91X7M4.LARGE.jpg", "https://cdn.instructables.com/FK5/T5L5/JT91X7MF/FK5T5L5JT91X7MF.LARGE.jpg", "https://cdn.instructables.com/FGL/J1LY/JT91X7N8/FGLJ1LYJT91X7N8.LARGE.jpg", "https://cdn.instructables.com/FT5/QOES/JT91X7P5/FT5QOESJT91X7P5.LARGE.jpg"], "step_title": "Step 7: Adding the Components to the Radio"}, {"step": 8, "steps_text": "Steps:\n1. It's now time to wire-up the circuit to the components.\n2. Start with wiring-up the switch to the 100nf cap and ground on the speaker. You can attach the ground wire to any ground point on the radio\n3. Next wire-up the 10k pot. This is used for volume control and helps filter the sound\n4. Lastly, wire-up the 1/4\" jack and attach the wire to the solder point on the radio volume pot\n5. Plug in your guitar and test to make sure the curcuit is working. If everything is working you should start to hear some sweet sounds coming from the speaker.", "step_imgs": ["https://cdn.instructables.com/FKG/9YBV/JT91X7UV/FKG9YBVJT91X7UV.LARGE.jpg", "https://cdn.instructables.com/F5J/KZ7Q/JT91X7VA/F5JKZ7QJT91X7VA.LARGE.jpg", "https://cdn.instructables.com/FPK/3QDF/JT91X7VC/FPK3QDFJT91X7VC.LARGE.jpg", "https://cdn.instructables.com/F1Q/M05M/JT91X7SP/F1QM05MJT91X7SP.LARGE.jpg", "https://cdn.instructables.com/F9S/SJ95/JT91X7SU/F9SSJ95JT91X7SU.LARGE.jpg", "https://cdn.instructables.com/FS1/3F2V/JT91XAJF/FS13F2VJT91XAJF.LARGE.jpg"], "step_title": "Step 8: Connecting the Circuit"}, {"step": 9, "steps_text": "As I mentioned earlier, the hack won't damage the radio at all and you can still use it just as a radio. Using the amp is very simple but I thought I would add a couple of tips\nSteps:\n1. Don't have the volume up too loud. As a matter of fact, turn it right down and just have it on\n2. You can use either AM or FM, I don't find there is any real difference\n3. Tune in the radio so it's not on a station\n4. Plug the cord into the jack on the radio and then plug it into your guitar\n5. Try adjusting the 10K pot you added and strumming the guitar. Find the sweet spot for the volume. You can also turn it up on the radio volume pot as well. Just note that you might hear some background static if it is too loud. The radio I used can be turned right up without any noise. The amp does become too sensitive though and the sound starts to decay a little.\n6. If your radio has bass and trebble control then play around with these as well. You can get some awesome sounds by adjusting them.\n7. Try flicking the switch. You'll find that you either have a very clean sound or a grungy, lo-fi sound.\n8. Lastly, have fun playing your amp and experiment to see what other sounds you can get out of it.", "step_imgs": ["https://cdn.instructables.com/FUK/U1G8/JT91XHA2/FUKU1G8JT91XHA2.LARGE.jpg", "https://cdn.instructables.com/FTO/5MJ7/JT91XHBT/FTO5MJ7JT91XHBT.LARGE.jpg"], "step_title": "Step 9: How to Use the Amp"}], "channel": "Speakers"}, {"category": "Technology", "description": "In the past few years, a number of synthesizer manufacturers have been releasing \"desktop semi-modular\" instruments. They generally take the same form factor as the Eurorack modular synthesizer format and most are probably intended as a gateway drug into the world of modular. (As addictions go, it's one of the safer ones.)\nI fell for the marketing hard I'm afraid.\nWhile I love the Moogs and Behringers, I kept reading about the Make Noise \"0-Coast.\" At the same time I was seeing these promotional videos featuring Suzanne Ciani, Kaitlyn Aurelia Smith, Todd Barton, Allesandro Cortini, etc. that beckoned me to (what was to me anyway) a new kind of music synthesis mindset: \"West-coast synthesis,\" it was called in general.\nThe general difference between this and what I grew up on (as it is usually explained) is that Bob Moog created \"east coast\" (or subtractive) synthesis with a focus on emulating traditional instruments by creating natural, basic waveforms and filtering out ends or bands of the spectrum while shaping the volume envelope. Don Buchla, on the other hand, was working on the other side of the US to create an electronic instrument that sounded like nothing that had ever existed before, focusing on timbral enrichment and complex wave shaping. (Incidentally, the difference is often couched as a rivalry or a dichotomy between the two, but unlike Biggy and Tupac in what is probably a more familiar East Coast/West Coast rivalry, from what I can tell, Buchla and Moog felt quite warmly towards one another and spoke of each other in glowing terms. Also most artists who use Buchla or Serge instruments also have subtractive synths in the arsenal as well.)\nAnyhoo, that brings us to the Make Noise. The 0-Coast is marketed as a synthesizer which contains elements of both east- and west-coast synthesis but has \"allegiance\" to neither. However the fact that it's really the only desktop unit available with any west-coast features makes it a stand-out as representing the west-coast among desktop semi-mods. I fell in love with mine right away. It's about the closest thing to a Buchla that most of us who love synths but don't perform for a living care to afford.\nThe only thing I'd change about the 0-Coast is that (Krell patches notwithstanding) it doesn't have an on-board performance control. Most of the time it's paired with an Arturia or a Korg, but my Keystep was so much wider than the 0-Coast that I found it a little unsatisfying. Buchla is often quoted saying he wanted to avoid \"Black and white keys\" because that forces you to think like a pianist instead of a synthesist essentially, and you can see the results in the controllers he came up with. Remembering that, I was inspired to create my own tribute to Don Buchla in the form of this capacitive-touch midi controller for my 0-Coast, \"The Oceania.\"", "title": "Oceania Midi Controller (for Make Noise 0-Coast and Other Synths)", "url": "https://www.instructables.com/id/Oceania-Midi-Controller-for-Make-Noise-0-Coast-and/", "steps": [{"step": 1, "steps_text": "The materials should be pretty familiar and easy to come by for any maker-it's the process and time that are complicated. You'll need:\nMaterials\n1 Arduino Mega-I recommend the mini style (like this one at Amazon) to make it easier to mount under the sensor pads, but it's not absolutely necessary. You might even be able to use an Uno/Genuino or Mini or Feather, but that would probably require you to treat the ADC pins as digital and I don't know if the standard capacitance routine works on those. And you'd have to figure out the programming on your own.\n2 220\u03a9 resistors\n1 Stereo 3.5mm phono socket\n1 single sided sheet of copper clad (used for etching your own PCBs) at least 9\"x2 3/4\"\nStranded hookup wire (the thinner the better-I used this 30AWG, again from Amazon)\nSolder\nSomething you like and are comfortable working with to mount it on\nStereo TRS 3.5mm male-to-male cable\nTools\nA table saw (alternatively, a CNC or laser cutter would probably give you better results if you know what you're doing.)\nA soldering iron and soldering tools, including pliers, flush-cutters and wire strippers\nA printer (paper, not 3-d)(but maybe also 3-d)\nA straight-edge\nA permanent marker/markers\nA drill (a drill press or rotary tool press would be best.)\nA Rotary Tool or file\nSteel wool (optional)", "step_imgs": [], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "Print out the reversed (vertical) version of the pattern included (the one that doesn't have any note letters on it) and cut the two rows into the right and left strips. Next, cut the copper clad into two strips the same size as the two strips of paper (each should be 8 7/8\" x 1 \u215b\".) Tape the paper strips to the backs of the pieces of copper clad and, using a permanent marker, mark the corners of the triangles, parallelograms and rectangles on the edges of the copper clad, then use a straight edge to connect them so that you have something that looks like the last photo with this step.\nNext, very carefully set the table saw blade so that the blade barely cuts above the table level. The point is to remove a blade-width of the copper side of the clad but not cut through the fiberglass substrate (at least not substantially.) You may want to test it with some of the \"drop\" left over from cutting the strips of copper clad to see that the blade is neither too high nor too low. Cut the clad off using the lines drawn on the back as guides with which to line up the blade. You'll want to use an angle guide with an extension. The diagonal lines should all be at 62.5\u02da. Go slowly. As you can see, my cuts didn't quite come out as perfectly as I'd hoped. Once the channels are cut into the clad, you'll want to file down any rough copper edges (blood would really mess with the capacitance after all.) I took some steel wool to mine to give it a brushed feel.\nNeedless to say, take all the usual precautions when working with a table saw. Wear safety glasses and use a push-stick, and FOR GOD'S SAKE IF YOU DON'T KNOW WHAT YOU'RE DOING DON'T EVEN TRY THIS!\nAlternatively, I've included the PDF in hopes that if someone has a CNC machine or laser cutter they'd like to try this with that they can use the vectorized version of the layout and cut a professional looking one. (Please share the results if you do this.)\nOnce the not-keys are cut into the clad, drill holes with as small of a bit as your press can handle that will still allow you to get your hookup wire threads through into the tips or corners of the top rows of each of the not-key strips.\nOf course if you want you could avoid the hassle and artistry and cut a traditional keyboard by cutting regular straight line grooves across one strip of clad and then cutting shorter, thinner strips to sit on top of those (as the #/\u266dkeys.) Puffy double-stick tape will probably insulate enough that you wouldn't trigger the notes underneath but that's an untested conjecture. I'd be interested to see what you come up with.", "step_imgs": ["https://cdn.instructables.com/FFV/WSU2/JTCSMCIN/FFVWSU2JTCSMCIN.LARGE.jpg", "https://cdn.instructables.com/FHW/UOJT/JTCSMCIP/FHWUOJTJTCSMCIP.LARGE.jpg", "https://cdn.instructables.com/F68/45AN/JTCSMFVS/F6845ANJTCSMFVS.LARGE.jpg"], "step_title": "Step 2: The Not-keys"}, {"step": 3, "steps_text": "Solder one piece of hookup wire to each of the not-keys by running the wire through the drill holes from the back side, then flush-cut the wire off from the copper side. Without being too technical, think about how you're going to mount it, and plan to make the wire just long enough to get from each not-key in each strip to the Arduino without having more than a couple mm of extra wire. Then, very carefully, one wire at a time, solder the wire from each not-key to to the Arduino Mega pin corresponding to the number marked on each not-key in the photo. This is the make-or-break part of the operation. You may wish to skip ahead to the programming part and test the function of the keys after every few solder connections. (For example on my original version, pin 13 bridged or something and always read as though it was being touched, so I had to write code to compensate and move everything above it down a pin value.)\nNext, solder one 220\u03a9 resistor between the +5v on the Arduino and the sleeve connector of the socket, and solder the other resistor between the Pin 1/TX pin and the tip connector of the socket. (Note that the pinouts for various sockets will vary so it's up to you to determine which connection is which.) Finally, solder a piece of hookup wire between a Gnd pin on the Arduino to the ring connector on the socket.\nAs you can see I used a small piece of strip board to mount the resistors and socket, but that's not absolutely necessary.\nAfter soldering, you'll want to file/sand/rotary-tool the flush cuts of the soldered wire until smooth enough to play, and you may choose to use permanent marker to color the not-keys in any configuration you choose. I made the downward facing triangles all black as a visual cue, but I tested a red and a silver permanent marker and each worked (silver oddly diminished the capacitance readings.)", "step_imgs": ["https://cdn.instructables.com/FE5/0687/JTCSMBUC/FE50687JTCSMBUC.LARGE.jpg", "https://cdn.instructables.com/F93/XV18/JTCSMBO3/F93XV18JTCSMBO3.LARGE.jpg", "https://cdn.instructables.com/F2P/NE2I/JTEN04SB/F2PNE2IJTEN04SB.LARGE.jpg"], "step_title": "Step 3: Electronics"}, {"step": 4, "steps_text": "Let's not get too instruct-y about this part. Use whatever you feel comfortable with as a mount. I used stained solid oak for that classic synth look (a nod to the East Coast lineage) but you can use whatever you want. For example, I also made a CV version of this for my Eurorack case that's mounted on a PVC sheet construction. You might consider 3D printing a base if you have access to a printer with a wide enough bed, or even making a cardboard base for it. It really doesn't matter so long as it doesn't interfere with the electronics.\nAs you can see, I (sloppily) routed two channels for the wires on the backs of the not-keys, a recess for the electronics on the underside, and a port between the two so I could solder the wires to the copper clad pieces and the Arduino before mounting and simply pass the Arduino through the port. The piece of aluminum is what I used for mounting the electronics to (using plastic standoffs and a little hot glue for the socket strip board.) Then I screwed the metal into the base and put some EVA foot runners on the bottom.\nThe not-keys are attached to the base with strips of puffy double-stick tape, but again-use whatever you want as long as it doesn't interfere with capacitance or circuitry.", "step_imgs": ["https://cdn.instructables.com/FEX/RI28/JTCSMBIP/FEXRI28JTCSMBIP.LARGE.jpg", "https://cdn.instructables.com/FRC/HEUE/JTCSMBKU/FRCHEUEJTCSMBKU.LARGE.jpg"], "step_title": "Step 4: Mount It"}, {"step": 5, "steps_text": "If you've never programmed an Arduino before then you're on the right site-there are probably hundreds or thousands of 'ibles on the subject, so I won't cover that ground again.\nIn the attached zip file are two sketches. Download and unzip them and add them to your Arduino sketch library.\nThe first sketch(megaCapacitiveKeyboardTest) is an adaptation of the Arduino readCapacitivePin function which is here as a test that shows you what key is being pressed and the capacitance value for it while it's being pressed in the serial monitor. It will let you see some values and test the connections from the Arduino to the not-keys.\nLoad this onto the Arduino, open the serial monitor (make sure to set the serial monitor to the correct baud) and touch a few not-keys, noting the values for the heaviest and lightest touch you'd be using to play. These will be used for the minCap (lightest touch) and maxCap (heaviest) values in the second sketch (OceaniaMidi_Release), which is what you will actually load onto the controller to use it as, well, a controller. If you need to adjust the values, do so, then save the sketch again and upload it to the Oceania.", "step_imgs": [], "step_title": "Step 5: Program It"}, {"step": 6, "steps_text": "The only power required to run the Oceania is sourced to the Arduino, so you can use the same cable as you used to upload the sketch and power it from your computer, or hook it up to a phone charger or a wall wart-whatever trips your fancy and works with the Arduino you used.\nPlug the male-to-male cable into the Oceania socket and the Midi A socket of the 0-Coast or other compatible synth and have a go at it! The two keys to the far left (pins 29/28) act as pitch bend and the two to the far right (pins 30/31) will raise and lower the octave the notes are sent as.\nThe 0-Coast seems to have a tendency to hang onto some notes sent by the Arduino, but usually you can just touch the hanging tone again and it will turn off. Also if the 0-Coast is connected to the Oceania when you load the sketch it may get stuck on a low note. If that happens just power cycle the 0-Coast and it should go away.\nFinally, it occurs to me that one thing that would have made the cutting of the copper clad much cleaner would have been a laser cutter, so if you found this at all helpful, please vote for this Instructable in the Epilog X contest.\nHappy playing!", "step_imgs": [], "step_title": "Step 6: Play"}], "channel": "Arduino"}, {"category": "Technology", "description": "Dear friends, followers and DIY-enthusiasts!\nAs I announced at the end of my description of the \"Steampunk Oriental Night Light - Nur-al-Andalus\"- project, some days ago, here comes the second project (in a technical way the twin brother) using a CMH-Bulb in the center of this object called:\n\"Steampunk Voltaic Arc Spectator\" which is definitely indispensable for Mad Scientists!!!\nAfter writing so much about theory of CMB-Bulbs in my last instructable, I now just concentrate to the making of!\nBut before we can start I have to write this:\nNOTE: All producers like GE, Philips and more others, write about a possible risk that a bulb could burst when it is running in its normal use. It is said that if this tube bursts, very hot (about 500\u00b0C) glass parts will be spread. So take care and do not wreck yourself. Better cover these bulbs with a protective glass shield.\nMy personal opinion and experience is that these bulbs are quite safe when they just glowing like I used to work with, especially when you use the very low power of these flash units. It seems to me, that it is nearly the same risk like working with neon gas filled bulbs or nixie tubes. These nearly dead CMH bulbs (and also brand new ones) just start to glow and they do not heat up. I measured at different times these bulbs while glowing under here described conditions! and they showed just the same temperature as the surrounding air in the room. Conclusion: This construction works deeply under the operating temperature! Literature talks about 6 exploded bulbs while highly running! in a number of 35 billions of produced bulbs! over a time of twenty years. But it is your own decision and I please you one more time not to harm you, and to take care of your health!!!\nI hope that enjoy this constructive twin brother instructable to the Steampunk Oriental Night Light - Nur-al-Andalus project and I thank you for reading, watching, following and hopefully for voting at the trash to treasure contest 2019;-))\nYous Aeon Junophor\nSo let\u00b4s start!", "title": "Steampunk Voltaic Arc Spectator (indispensable for Mad Scientists)", "url": "https://www.instructables.com/id/Steampunk-Voltaic-Arc-Spectator-indispensable-for-/", "steps": [{"step": 1, "steps_text": "In the center of this apparatus I placed a nearly dead CMH Bulb, hooded by a half cut copper tube which is constructed for being turned 360\u00b0 around. From one side you can take a closer look through a magnifying object glass from a wrecked diascope and watch in detail the genius construction of this bulb type and on the other side there is a single glass lense which turns the picture upside down. Because of its only oft glowing of gases and metal vapors inside by using such a \"nearly dead-bulb\" (and of course only in this case!!!) -you can\u00b4t harm your eyes.\nSo you can discover the secrets of the ionized gases and take as a mad scientist a look into the depth of the universe muharr!!! muharr!!!", "step_imgs": ["https://cdn.instructables.com/FY3/BM2N/JT91UBJB/FY3BM2NJT91UBJB.LARGE.jpg", "https://cdn.instructables.com/FL9/L85H/JTEN1GS1/FL9L85HJTEN1GS1.LARGE.jpg", "https://cdn.instructables.com/FBL/C8YK/JTEN1H05/FBLC8YKJTEN1H05.LARGE.jpg", "https://cdn.instructables.com/FX5/D1LO/JTEN1H62/FX5D1LOJTEN1H62.LARGE.jpg", "https://cdn.instructables.com/F8N/0P2Z/JT91UBN7/F8N0P2ZJT91UBN7.LARGE.jpg", "https://cdn.instructables.com/FHI/292E/JT91UBJC/FHI292EJT91UBJC.LARGE.jpg", "https://cdn.instructables.com/F04/WCZA/JT91UBJ5/F04WCZAJT91UBJ5.LARGE.jpg"], "step_title": "Step 1: Short Description About This Spectator"}, {"step": 2, "steps_text": "As you know, I love it to create new things in steampunk style, mostly/only out of scrap and that makes it difficult to give you a parts-list which enables you to copy this spectator one to one. But maybe it helps you a little bit to find your own creation so here it comes:\nParts list:\n1 pc. of antique oval picture frame made of wood\nI got the antique wodden picture frame (together with some other more) as a hand-me-down from my grandpa!\nBrass and copper parts from plumber scrapyard:\n1 pc. of copper fitting 18 x 22 mm, already used\n2 pcs. of already used copper tubes 12 mm\none welded with and one pressed with fittings from central heating system\n1 pc. of magnet valve brass made body, \u00be inch\n1 pc. of coupling nut 1 inch, used\n1 pc. of coupling nut 1/2 inch, from faucet\n1 pc. of coupling ring 18 mm\n1 pc. of O-ring, 40 mm, rubber\nseveral parts to build the bulb hood top called \u201ecrown\u201c\nParts from electric scrapyard:\n1 pc. of object lense from wrecked diascope\n1 pc. of single glass lense \u00f835 mm\n1 pc. of flash unit from single use camera\n2 pc. of 1.5 V AA-batteries from single use cameras\nDifferent lengths of electric wires.\n1 pc. of CMH-bulb, Philips TCM 35 Watts, nearly broken down\n1 pc. of EDISON Screw socket E42 from 1.000 Watts incandescent bulb, made of brass\n1 pc. of screw terminal\n1 pc. of amber LED from a wrecked signal light\nParts from woodshop scrap:\n2 pcs. of Plywood plate\nProduction wastage/rejects:\n1pc. of brass tube 12 mm\n1 pc. of copper tube 18 mm milled out\n1 pc. of vulcanized fibre plate\nSamples from trading companies:\n4 ps. rubber feet 12 mm\nBought at Ebay or/and amazon:\n1 pc. of micro switch\n1pc. of micro push down button\n1 pc. of Munsenring 42 mm, (brass)\n1 pc. of Munsenring 35mm, (brass)\n1pc. of batteryholder (4xAA-battery)\n4 pcs. footplate for Munsen rings (brass)\nDifferent pcs. of brass screws and washers\n1pc. of aerosol can car finish, black", "step_imgs": ["https://cdn.instructables.com/FJ4/ARRH/JT91UBH9/FJ4ARRHJT91UBH9.LARGE.jpg", "https://cdn.instructables.com/FPT/QZ92/JTEN1G67/FPTQZ92JTEN1G67.LARGE.jpg", "https://cdn.instructables.com/FXJ/F05G/JT91UBH6/FXJF05GJT91UBH6.LARGE.jpg"], "step_title": "Step 2: Parts List"}, {"step": 3, "steps_text": "A piece of milled out copper tube from production wastage, (outer diameter 18 mm, inner diameter 15.5 mm) fits perfectly around the CMH tube. I got a handful of this tubes from production wastage and if you cut them right in the middle, you get a pair of such \"hood-bodies\". One piece of an used copper tube (15 mm) already covered with a coupling ring is fixed with a combination of one M5 brass screw, two nuts, one washer and again one covernut by epoxy resin. At the end I attached a special ball bearing cage made of laminated fabric and the top crown is ready to be glued together again with epoxy resin. These cages also had been rejected from further production of bearings and had been thrown to the srap.", "step_imgs": ["https://cdn.instructables.com/F5U/VMYO/JT91UBGD/F5UVMYOJT91UBGD.LARGE.jpg", "https://cdn.instructables.com/F1G/4GAO/JT91UBGA/F1G4GAOJT91UBGA.LARGE.jpg", "https://cdn.instructables.com/FKV/ZFGU/JT91UBI0/FKVZFGUJT91UBI0.LARGE.jpg", "https://cdn.instructables.com/FJX/FORL/JT91UBHW/FJXFORLJT91UBHW.LARGE.jpg", "https://cdn.instructables.com/F1G/K1UH/JT91UBH2/F1GK1UHJT91UBH2.LARGE.jpg", "https://cdn.instructables.com/F6J/GTKD/JT91UBG9/F6JGTKDJT91UBG9.LARGE.jpg"], "step_title": "Step 3: Hooding the Bulb"}, {"step": 4, "steps_text": "The metal body from the magnet valve made of brass, was covered by a coupling nut fixed with epoxy resin. Than worked on the 18 x 22 mm copper fitting where I just took the former copper tube out.\nI\u00b4ve just cut the rest of the former tube lengthwise with a sharp file, took a plier made one turning move and 30 seconds later I got this fitting ready for reusing here! This fitting was also attached to the valve top with epoxy resin. In this construction the prepared screw terminal fits perfectly in.\nNext step was drilling a hole at the bottom of the valve to put the wires through later.\nThen the two copper tubes with with screw fittings already on, got the prepared Munsen rings on, which later carries the single lense and the object lense, covered with the brass made Edison Screw socket E42!\nLast step was to screw these new parts left and right to the open parts of the valve body.", "step_imgs": ["https://cdn.instructables.com/FVE/W1SH/JT91UBJD/FVEW1SHJT91UBJD.LARGE.jpg", "https://cdn.instructables.com/FOM/XWM2/JTEN2NG6/FOMXWM2JTEN2NG6.LARGE.jpg", "https://cdn.instructables.com/FNF/X558/JT91UBH8/FNFX558JT91UBH8.LARGE.jpg", "https://cdn.instructables.com/FBC/O7KC/JT91UBIB/FBCO7KCJT91UBIB.LARGE.jpg", "https://cdn.instructables.com/FKY/0FYN/JT91UBIA/FKY0FYNJT91UBIA.LARGE.jpg"], "step_title": "Step 4: Metal Works"}, {"step": 5, "steps_text": "First a plate (3 mm) of red fibre was put into the old wood made picture frame from my grandpa. Then two plates of plywood had been screwed together with the frame. Next step was colouring the wooden parts with car finish(3 layers)\nThe I cut and drilled of the wooden parts to put in the switch and the push button in and also some spare place to keep the battery holder and some wires in. At the end, the former footplates of the munsen rings had been fixed with brass screws to the fibre plate.They now hold the former magnet valve body tight.", "step_imgs": ["https://cdn.instructables.com/FCB/AK1J/JT91UBHF/FCBAK1JJT91UBHF.LARGE.jpg", "https://cdn.instructables.com/F59/J5RF/JT91UBI6/F59J5RFJT91UBI6.LARGE.jpg", "https://cdn.instructables.com/FSA/8K76/JT91UBI7/FSA8K76JT91UBI7.LARGE.jpg", "https://cdn.instructables.com/FSN/FQA2/JT91UBN1/FSNFQA2JT91UBN1.LARGE.jpg", "https://cdn.instructables.com/FVD/JQOX/JT91UBN2/FVDJQOXJT91UBN2.LARGE.jpg", "https://cdn.instructables.com/FMW/3J54/JT91UBJI/FMW3J54JT91UBJI.LARGE.jpg", "https://cdn.instructables.com/FD6/GCVU/JT91UBN4/FD6GCVUJT91UBN4.LARGE.jpg", "https://cdn.instructables.com/F5N/1QJY/JT91UBN3/F5N1QJYJT91UBN3.LARGE.jpg", "https://cdn.instructables.com/FYA/OUF8/JT91UBN0/FYAOUF8JT91UBN0.LARGE.jpg", "https://cdn.instructables.com/FU5/EDV2/JT91UBJH/FU5EDV2JT91UBJH.LARGE.jpg", "https://cdn.instructables.com/FXR/ECY1/JT91UBN5/FXRECY1JT91UBN5.LARGE.jpg"], "step_title": "Step 5: Woodworking"}, {"step": 6, "steps_text": "The battery holder keeps the two needed AA-batteries (1,5 Volt each) which now supply the LED and the CMH-Bulb via flash unit as well as the flash board from the single use camera. Just some wires had to be soldered to the push button for the LED and to the switch to ignite the CMH bulb with the high voltage from the flash circuit.\nThe electronic and electric construction of this apparatus is nearly the same like the Steampunk Oriental Night Light - Nur-al-Andalus STEP 5, so I don\u00b4t want to bother you by repeating.\nI hope you enjoyed this instructable\nand if you like it please do not forget to vote for it at the trash to treasure contest 2019 !\nYours Aeon Junophor", "step_imgs": ["https://cdn.instructables.com/FY5/MRZ1/JT91UBG1/FY5MRZ1JT91UBG1.LARGE.jpg", "https://cdn.instructables.com/FZ9/2N1D/JT91UBG2/FZ92N1DJT91UBG2.LARGE.jpg", "https://cdn.instructables.com/F80/F5X2/JT91UBG3/F80F5X2JT91UBG3.LARGE.jpg", "https://cdn.instructables.com/FSX/OF7A/JT91UBG4/FSXOF7AJT91UBG4.LARGE.jpg", "https://cdn.instructables.com/F45/Y5UQ/JT91UBG5/F45Y5UQJT91UBG5.LARGE.jpg", "https://cdn.instructables.com/FB6/QIOC/JT91UBG6/FB6QIOCJT91UBG6.LARGE.jpg", "https://cdn.instructables.com/F4G/RRBR/JT91UBN6/F4GRRBRJT91UBN6.LARGE.jpg", "https://cdn.instructables.com/FJS/3766/JT91UBG0/FJS3766JT91UBG0.LARGE.jpg", "https://cdn.instructables.com/FBQ/X8PA/JT91UBG7/FBQX8PAJT91UBG7.LARGE.jpg"], "step_title": "Step 6: Wiring at the End"}], "channel": "Reuse"}, {"category": "Technology", "description": "\"Designing a Simple 3D Printed Rubber Band Car using Autodesk Fusion 360\" is an Instructable illustrating how I designed, printed and assembled a simple rubber band powered car for the kids and grandkids.\nThis little \"pocket size\" car will not win any distance or speed records, but the kids and grandkids love it for table top racing, it's quite durable, and it runs in two modes; \"power\" and \"coast\". Power mode is when the car is unwinding the rubber band from the axle. When the rubber band is completely unwound, it disconnects from the axle allowing the car to enter coast mode for additional distance.\nThe symmetrical design of the car requires eight 3D printed parts (two chassis sides, two axles, and four wheels) yet only three unique parts (chassis, axle and wheel), with all parts small enough to fit on most if not all 3D printers.\nI've included a step by step video of the design and assembly process, the Autodesk Fusion 360 cad file \"Rubber Band Car v1.f3d\" containing the design (familiarity with the Autodesk Fusion 360 environment is highly recommended), and all .STL files required to print the car.\nAs usual, I probably forgot a file or two or who knows what else, so if you have any questions, please do not hesitate to ask as I do make plenty of mistakes.\nDesigned using Autodesk Fusion 360, sliced using Cura 3.5.0, and printed in PLA on an Ultimaker 2+ Extended and an Ultimaker 3 Extended.", "title": "Designing a Simple 3D Printed Rubber Band Car Using Autodesk Fusion 360", "url": "https://www.instructables.com/id/Designing-a-Simple-3D-Printed-Rubber-Band-Car-Usin/", "steps": [{"step": 1, "steps_text": "I purchased eight \"R20\" sized O-Rings (25mm ID, 3.5mm Section) for use as the tires and a bag of assorted rubber bands to use as the \"motor\".\nI printed all parts at .15mm layer height with 50% infill. I printed two \"Axle.stl\", two \"Chassis.stl\" and four \"Wheel.stl\".\nPrior to assembly, I test fit and trimmed, filed, sanded, etc. all parts as necessary for smooth movement of moving surfaces, and tight fit for non moving surfaces. If you decide to make your own Simple 3D Printed Rubber Band Car, depending on the colors you chose, your printer model and your printer settings, more or less trimming, filing and/or sanding may be required. I carefully filed all edges that contacted the build plate to make absolutely certain that all build plate \"ooze\" was removed and that all edges were smooth. I used small jewelers files and plenty of patience to perform this step.", "step_imgs": [], "step_title": "Step 1: Purchase, Print and Prepare the Parts."}, {"step": 2, "steps_text": "As shown in the video and screen captures, I performed the following steps to assemble and test the car:\nPlaced the eight O-Rings onto the four \"Wheel.stl\" components.\nPressed the two \"Chassis.stl\" together (if the fit is loose, use a small dot of thick cyanoacrylate glue).\nPressed one \"Axle.stl\" into one wheel assembly until in was flush with the wheel outer surface, then repeated the process with the second \"Axle.stl\" and wheel assembly.\nSlid the two axle assemblies into the chassis assembly.\nPressed the remaining two wheels onto the two axle assemblies.\nChecked to make sure the wheels rotated smoothly.\nAttached a rubber band to the car as shown in the video.\nWound the car as shown in the video and let it go!\nAnd that is how I designed, printed and assembled Simple 3D Printed Rubber Band Car.\nHope you enjoy it!", "step_imgs": ["https://cdn.instructables.com/FAN/YQXK/JTEN116R/FANYQXKJTEN116R.LARGE.jpg", "https://cdn.instructables.com/F6B/X8IY/JTEN117U/F6BX8IYJTEN117U.LARGE.jpg", "https://cdn.instructables.com/F99/VRVM/JTEN11C1/F99VRVMJTEN11C1.LARGE.jpg", "https://cdn.instructables.com/FSM/F9XQ/JTEN11GF/FSMF9XQJTEN11GF.LARGE.jpg", "https://cdn.instructables.com/FON/5JHI/JTEN11HG/FON5JHIJTEN11HG.LARGE.jpg", "https://cdn.instructables.com/F7H/9G95/JTEN114P/F7H9G95JTEN114P.LARGE.jpg", "https://cdn.instructables.com/FCV/AUPO/JTEN115Q/FCVAUPOJTEN115Q.LARGE.jpg"], "step_title": "Step 2: Assembly and Test."}, {"step": 3, "steps_text": "The car can use twin rubber bands for all wheel drive!\nMount the rubber bands on both the top and bottom of the car as shown in the photograph (you may wish to tie or glue the rubber bands to the chassis to hold them in place). Hook the free ends of the rubber bands onto the axle rubber band hooks as shown, then draw the car backward and release for all wheel drive!", "step_imgs": ["https://cdn.instructables.com/F3C/FIYA/JTEN1TFN/F3CFIYAJTEN1TFN.LARGE.jpg"], "step_title": "Step 3: Oh, and Did I Forget to Mention..."}], "channel": "3D Printing"}, {"category": "Technology", "description": "Custom Coins and Medallions\nMath, Social Studies, English, Science, Grades 3 - 8\nLesson Overview Students use Tinkercad to design and create original coins, medallions, or other decorative items that depict the important features of a person, place, thing, or concept. Using a few simple design rules, students can put pictures and/or text on both the top and the bottom, reshape the coin, and easily 3D print the items without supports. For beginning Tinkercad users, coins offer easy success - the flat design doesn\u2019t require complex supports in order to print properly, and very few graphics are needed to complete the design. Once printed, custom coins can be displayed, shared, or - depending on the content of the coin - used as teaching tools.\nThis project is structured to follow the Engineering Design Process (EDP), a process that helps designers in any discipline create solutions to problems. While there are many ways that people solve problems, designers often use the EDP because it offers a clear roadmap for them to follow as they work towards a solution. First, designers Define the challenge they are facing, then Learn more about the problem and Explore existing solutions. It\u2019s tempting to skip these first few steps and head straight into brainstorming, but don\u2019t! When designers take the time to understand the problem clearly, they come up with much better solutions. The Design phase is where brainstorming happens. Designers brainstorm multiple possible solutions, then develop a few of them into more detailed plans. Encourage your students to plan at least 3 of their potential ideas before choosing a design direction and starting to Create a product based on their design. If they hit any roadblocks trying to create their first design choice, they\u2019ll be able to revisit their alternate design plans and choose a new direction - without starting from scratch. Designers then take time to Observe their design and see how they can Improve it. We strongly recommend that students have an opportunity for at least 2 Create-Observe-Improve cycles. When students feel they have to \u201cget it right the first time,\u201d they are less willing to take risks and be creative. By repeating the cycle, they have a chance to fix flaws and adopt successful ideas from classmates, and in fact, they\u2019re practicing what professional designers really do. A good design cycle builds in time for the designer to Reflect on their product and the process of making it, looking for learning habits and insights that will help in future challenges. When the work is complete, designers are ready to Share. They bring their work into the real world, by posting, publishing, presenting, or exhibiting - or giving or selling if appropriate! - what they\u2019ve made. For students working through a design process, a real audience helps students connect their learning and work experiences to the world outside the classroom. For Makerspaces and Maker projects, in particular, this is hugely important for building confidence in every student and a sense of community among Makers. To help students work through this process, be sure to build in planned \u201cstops\u201d at each step for students to record their thoughts and progress as they work through product iteration cycles.\nEssential Question(s)\nHow can we use graphic design to summarize and represent key attributes of a person, place, thing, or concept?\nHow can the design process and 3D modeling tools be useful tools in creating meaningful artifacts?\nTime Required: 2-3 Hours design time\nSkills Practiced: Critical analysis The Design Process 3D modeling in Tinkercad Symbolic Communication Materials Needed: Sketch paper and pencils Tinkercad Miscellaneous prototyping materials (paper, cardstock, foam sheets, markers, etc.) 3D Printer and filament.", "title": "Custom Coins and Medallions", "url": "https://www.instructables.com/id/Custom-Coins-and-Medallions/", "steps": [{"step": 1, "steps_text": "Context\nCoins show important slogans, symbols, and personalities from history, mythology, and nature. But why? Simple words and images allow designers to clearly communicate in a limited amount of space - pick up any coin and look at the words and images. Ask yourself: where is this coin from? What is that country\u2019s government trying to say about itself on that coin? Who are its heroes? What are their values? Does the country\u2019s image on the coin match the image in your head?\nGiving students the chance to design their own coin (or medallion, award, etc.) is a perfect opportunity for students to:\nPractice using graphic design as a communication tool.\nDevelop awareness of symbolism by using it themselves.\nDevelop awareness of visual arts and writing as works intentionally created by an artist or writer.\nSimple prompts for 2-3 hour projects allow first-time Tinkercad users to focus on learning the software - students who are already skilled with Tinkercad can be assigned complex, higher-order-thinking prompts that require additional time for intense research, collaboration, design, and sharing. Consider the example of these two social studies prompts:\nSimple: state shapes with an important landmark or product on 1 side, and a study question on the other.\nComplex: class designs a \u201ctreasure hunt\u201d game or exhibit that leads players through all 50 states, where the coin designs for each state form a portion of each clue.\nChallenge:\nStudents create a coin or medallion that commemorates something important or interesting to them, following a theme that the teacher assigns. (E.g., a real or fictional country, social group, public figure, team etc.) Students will fabricate their work using Tinkercad and 3D printers.\nCriteria:\nThe coin must memorialize or celebrate something.\nThe coin has at least 2 of the following features:\nLegible text.\n1 or more pictures.\nMeaningful shape (other than circular).\nConstraints:\nSize constraints: Max height: 0.2 in, Max area 6 square inches.\nMax print time: 30 minutes.\nStudent Product / Learning Goals\nA custom-designed, 3D printed coin or medallion.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research: Students examine and analyze a few real-life examples of the product they want to create (coins, medals, etc.). Give students examples, and prompt them to observe, document, and discuss:\nWhat images do you see?\nWhat do you think of when you see that image?\nWhat text do you see?\nWho do you think made this?\nWhat are they trying to tell you?\nHow do the text and image work together to communicate their message?\n2. Collect: Have students document their research on the coin subject. Students can keep an inspiration page such as a blog, Google Docs, a notebook, Padlet, poster, etc to save notes or images.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "REMEMBER: Be sure to provide stopping points for the class where students can observe, evaluate, and document their designs.\n1. Design: Students use their inspiration page from step 2 as a reference and use one of the following methods to create at least 3 different ideas that meet the criteria defined above.\nOption A: draw designs showing how this coin will look, naming each design element\nOption B: sculpt design drafts using clay.\nOption C: let the students try drafting directly in Tinkercad to get familiar with the program and make practice models.\n2. Choose a Direction: Have the students choose a design to model and print. Consider also checking it against the \u201cThing\u201d Checklist (this checklist can be found in the Resource section of the Lesson). Some examples:\nOne coin, two colors! Even if your machine only prints from a single filament, you can still get a multi-color effect. Pause the build and change the filament color to try this look.\n2 different coins with raised features, enhanced with permanent marker (left) and oil paint pen (right)\nThe Image on right is the front face. The image on the left is the detailed back.\nCoin commemorating the first discovery of \u201cBrontosaurus\u201d bones and their eventual re- identification as an Apatosaurus skeleton. Note holes in corners for creating a wearable necklace. State of Montana created using Tinkercad US State shape generator.", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "You can watch our video tutorial on Youtube:\nThis is a summary of the creation steps described in the video:\nCreate a body of the coin using a circle, ellipse, or other custom shapes (see in video)\nOptional: Create a rim (optional) by cutting out some of the top of the coin (see in video)\nAdd engraved/raised text or image to the top of the coin (details below) (see in video)\nAdd engraved text or image to the back/bottom of the coin (details below) (see in video)\nCheck design against size constraints\n3D printer \u201cslicer\u201d program to check against print time and volume constraints\nRefine the design and iterate through the design cycle until you meet the design criteria and constraints.\nPrint the design\nUse permanent markers or paint pens to enhance parts of the design\nAdmire and share the coins!\nAdding raised photographic images (see in video)\nMake or choose a high-contrast image\nImport to an svg app or website\nDownload the new svg file\nImport the svg file into Tinkercad workplane\nAdd height to your file\nDrag to coin body, adjust position, and group with all other parts of coin.\nNote: at one time, Tinkercad offered an Image Generator in its Shape Generator gallery. It is currently offline for debugging, but there are separate apps and sites that can perform this function for you - search online for \u201cconvert image to stl.\u201d\nAdding engravings (see in video)\nTo add words or simple images as engravings, import or create your object.\nSelect the object - in the Shape editor panel, click \u201cHole\u201d\nSet object height to desired engraving depth - 0.05\u201d or 1 mm works well\nIf adding to the front/top of the coin, align the top of the engraving to the top of the coin body\nIf adding to the back of the coin, Flip object as needed, then type \u201cD\u201d to drop the object to the workplane\nSelect all and group - you should now see a visible engraving in the coin\nAdding a raised rim to one side - works best for simple convex shapes (see in video)\nSelect the body of the coin, and make a duplicate. Select the duplicate, and turn it into a hole.\nAdjust its height to an ideal engraving depth - 0.05\u201d or 1 mm works well\nHolding \u201cshift,\u201d drag the corner of the hole to shrink its footprint slightly.\nSelect both the original coin body and the hole. Align the objects so that their footprints are centered.\nSelect only the hole. Use the handle to drag it upwards so that it erases a small amount of the main coin body. The rim should now be visible. Remember: raised features, like the rim, are best limited to .05 in or 2 mm of thickness.\nSelect the hole and the coin body - Group them to turn them into a single object.\nNeed a jumpstart? Students can go to the \u201cMaker Coin\u201d project at https://www.tinkercad.com/things/7SfuGhp2R1u and start by following these steps:\n1. Create a copy of the file for personal use by clicking \u201cTinker this\u201d\u2013 give it a new name.\n2. Ungroup the coin elements and move the pieces apart to see how each is incorporated in the object.\n3. Refer to coin drafts from Step 3: Design above, and begin to replace parts of the Tinkercad model with original graphics.", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "REMEMBER: Be sure to provide stopping points for the class where students can observe, evaluate, and document their designs.\n1. Observe and document: Students print their designs, share, observe, and document what they notice. Some possible note-taking prompts they might respond to:\nWhat do the designs look like now that they\u2019ve been printed?\nWhat parts of the design are unclear? Is anything too big? Too small? Blurry? How could the design be changed to make them clearer?\nWhen others look at the coin, do they see the ideas that the designers wanted them to? If not, what changes can designers make?\n2. Improve: Students use their observation notes to return to Tinkercad and make slight alterations to their design. If any students are feeling particularly discouraged by their first round of printing, redirect them to their alternative designs from step 3.\n3. Iterate: It\u2019s a good idea for students to have an opportunity for at least two design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\n4. Download pdf bellow with possible discussion/documentation prompts for Steps 5 and Step 6.\n5. Follow instructions in the Create Step as needed for the next iteration.", "step_imgs": [], "step_title": "Step 5: Observe, Improve, Iterate"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.\nDownload pdf with possible prompts for Steps 5 and Step 6.", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "Give the students an opportunity to share their coins with the class or some other community. Options for sharing include presentation, demonstration, blog or online post, video clip, physical display, family events, and maker fairs, or in the use for which it was intended.", "step_imgs": [], "step_title": "Step 7: Share"}, {"step": 8, "steps_text": "\u201cTHING\u201d Checklist:\nTo ensure you get a quality print, go through the list before tinkering and printing.\nMeets overall size requirements as specified in the course packet: Height, Width, Depth, Weight, Volume as specified in the challenge description.\nEmbossed features stick out no more than 1 mm (.04 in).\nEngraved features go in no more than 2 mm (.08 in).\nUnsupported features (overhangs) are angled up at least 15\u2070 (more is better).\nBridge features have an unsupported span no greater than 12 mm (.5 in).\nWall thicknesses are typically 2 mm (.08 in).\nThin features such as details are no smaller than 1 mm (.08 inch).\nRound holes can be at any angle and are greater than 2 mm (.08 in)", "step_imgs": [], "step_title": "Step 8: Resources"}, {"step": 9, "steps_text": "Science + Social Studies:\nCoin that replaces existing currency from a specific country, with a figure from that country\u2019s science history on 1 side and an innovation they are known for on the other.\nStudents design a custom medallion for a notable scientist (or science concept) as a showpiece to accompany an essay or speech about the prize winner.\nMath + Social studies:\nStudents work in groups to design novel systems (or reinvent existing systems) of currency, with each student working to design a different denomination. Requirements may include but are not limited to:\nDifferent denominations of currency\nA standard value (e.g. gold standard) for each team to set the value of their basic unit\nImportant people or symbols depicted on currency, explanation of choice\nExchange rate calculators between different groups\u2019 currency\nMaximum time/ease of production\nMethod of mass production - in all likelihood, kids will choose molding, which makes our Candy Casts tutorial [To Be Published] a good intro step for a coin production project.\nELA / Literature:\nStudents work in pairs: Students design a coin with specific meaning in mind, swap with a partner, and write about the meaning of their partners\u2019 coins without knowing what the creator\u2019s original intentions were.\nCoins with authors\u2019 images or names on 1 side - on the other side,\none of their characters thought to embody them\none of their quotes that the student finds important\nan image symbolizing a theme the author often explores or explores in a work the students have read\nFilm as literature: explore the concept of \u201cMacGuffins\u201d that drives the plot (e.g. the lamp in Aladdin, Nemo in Finding Nemo) - have students write a treatment (plot summary) for an original movie or sequel, and design a printable model of the MacGuffin driving the plot.\nWe hope you had fun designing and sharing your Custom Coins and Medallions. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in? Send us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nList of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 9: Project Extensions"}], "channel": "3D Printing"}, {"category": "Technology", "description": "In my Arduino 101 tutorial, you'll be taught how to setup your environment in Tinkercad. I use Tinkercad because it is a pretty powerful online platform that allows me to demonstrate a range of skills to students for building circuits. Feel free to build all my tutorials using the Arduino IDE and a real Arduino!\nIn this tutorial, we're going to learn about buttons! We need to know:\nHow to wire them up\nReading their value\nDebounce, and why it's important\nA practical application (creating a menu)\nMost people think the most practical thing to do with a button is turn a light on and off. We'll, not here! We're going to use ours to create a menu and set some options on the Arduino.\nReady? Let's get started!", "title": "A Menu in Arduino, and How to Use Buttons", "url": "https://www.instructables.com/id/A-Menu-in-Arduino-and-How-to-Use-Buttons/", "steps": [{"step": 1, "steps_text": "The first step is to put an Arduino and Breadboard Small onto the prototyping area. Check the images above to see how to wire up the power rails.\nA Breadboard Mini has two power rails top and bottom. We wire these up to the Arduino so we can provide power to more components. Later in this tutorial we will use 3 buttons so we'll need more power. The thing to note is that on a breadboard small, the power rails run across the board, horizontally. This is different to the columns in the main prototyping area in the middle; these run vertically. You can use any of the power pins to provide power to any column in the main area in the middle.\nWhen you add power, use black and red wires to the negative and positive respectively. Add wires at the end that run power to the other side of the board. We won't use that side, but it's good practise.", "step_imgs": ["https://cdn.instructables.com/FGO/G25W/JTCSMQPX/FGOG25WJTCSMQPX.LARGE.jpg", "https://cdn.instructables.com/FRY/IT5B/JTCSMQD5/FRYIT5BJTCSMQD5.LARGE.jpg"], "step_title": "Step 1: Setup the Board"}, {"step": 2, "steps_text": "Add a small pushbutton from the components tray. It should look like the one in the image. Make sure it isn't a switch! Add a resistor, too. Click it, and set its value to 10k\u03a9. That is enough to pull the pin low when it is not connected, which is very important later in the code.\nPlace the component across the middle of the breadboard. The way a button works is:\nCorner to corner, the button is not connected. Pushing the button closes the contacts and connects the corners.\nThe sides of the button are connected. If you connected a wire to the top left and bottom left, the circuit would be closed.\nThis is why we put the component across the space in the middle. It makes sure the corners are not connected under the pins in the board.\nThe next step provides a couple of images that illustrates these points.\nPlace the resistor from the bottom right pin across columns, so it sits horizontally.", "step_imgs": ["https://cdn.instructables.com/FM5/WIUA/JTCSMQGJ/FM5WIUAJTCSMQGJ.LARGE.jpg", "https://cdn.instructables.com/F8W/ARQ5/JTCSMQEP/F8WARQ5JTCSMQEP.LARGE.jpg", "https://cdn.instructables.com/FLH/3G7D/JTCSMQI2/FLH3G7DJTCSMQI2.LARGE.jpg"], "step_title": "Step 2: Add the Button and Resistor"}, {"step": 3, "steps_text": "The images above make it fairly clear how the buttons connect. It was always a point of confusion when you think something is all good and it doesn't work!\nNow, let's add the wires.\nPlace a red lead from a positive power pin to the same column as the bottom right pin on the button\nPlace a black lead from a negative power pin to the same column as the resistor.\nPlace a coloured wire (not red/black) from the top left pin to Digital Pin 2 on the Arduino\nCheck the images above to make sure your wiring is correct.", "step_imgs": ["https://cdn.instructables.com/FT2/T14K/JTCSMQJM/FT2T14KJTCSMQJM.LARGE.jpg", "https://cdn.instructables.com/FWL/RV1Y/JTCSMQL5/FWLRV1YJTCSMQL5.LARGE.jpg"], "step_title": "Step 3: Button Connections"}, {"step": 4, "steps_text": "Let's have a look at the code for a basic button.\nOpen the code editor and change from Blocks to Text. Clear the warning that comes up. We're happy with text!\nYou know the basic setup, so let's define the button and do a basic read. We'll print the output to Serial.\nI put a few extra comments into the code below so it's easier to read than the image.\n// Define constants\n#define button 2\n\nvoid setup() {\n pinMode(button, INPUT);\n Serial.begin(9600);\n}\n\nvoid loop() {\n\n // Read the digital pin to check status of button\n int pressed = digitalRead(button);\n\n // Button returns HIGH if pressed, LOW if not\n if(pressed == HIGH){\n  Serial.println(\"Pressed!\");\n }\n}\nOk, well that works!\nEssentially, all we're doing is checking the status of the digital pin each time the code loops. If you click Start Simulation and press the button, you'll see the Serial Monitor (click the button below the code) display \"Pressed!\" repeatedly.\nOne feature you'll see in the code above is the if() condition evaluation taking place. All the code is doing is asking a question and evaluating if it is true, in this case. We use the is equal (double equal signs, like this: == ) to check if the value of the variable is equal to a certain value. A digitalRead() returns either HIGH or LOW.\nUsing the if()else if / else we can check many conditions or all conditions, and if you go back to the Arduino Basics, you'll see some of the comparisons you can make.\nNow... Our code might look complete... But we have a problem.\nSee, that works really well when in the simulator. But real electricity has noise, especially DC electronics. So our button might return a false reading sometimes. And that's a problem, because your project might not respond the right way for the user.\nLet's fix it!", "step_imgs": ["https://cdn.instructables.com/F28/TGYP/JTCSMQMO/F28TGYPJTCSMQMO.LARGE.jpg", "https://cdn.instructables.com/FNY/MF0R/JTCSMQMP/FNYMF0RJTCSMQMP.LARGE.jpg"], "step_title": "Step 4: The Code..."}, {"step": 5, "steps_text": "We use a procedure called debounce to overcome our button problem. This essentially waits a specified amount of time between when the button was pushed and actually responding to the push. It still feels natural to the user (unless you make the time too long). You can also use it for checking length of press, so you can respond differently each time. You don't need to change any of the wiring!\nLet's look at the code:\n#define button 2<br>#define debounceTimeout 100\nThe first change is on the global scope. You'll remember that's where we define variables lots of our functions might use or those that can't be reset each time the loop fires. So, we added debounceTimeout to the defined constants. We made this 100 (which will later translate to 100ms), but it could be shorter. Any longer and it'll feel unnatural.\nlong int lastDebounceTime;\nThis variable is declared below the constants. This is a long int type, which basically allows us to store long numbers in memory. We called it lastDebounceTime.\nWe don't need to change anything in the void setup() function. Let's leave that one.\nvoid loop() {<br> // Read the digital pin to check status of button\n int pressed = digitalRead(button);\n long int currentTime = millis();\n \n // Button code\n}\nThe first change we make in the loop() function is under the call to read the button. We need to keep track of the current time. The millis() function returns the current time of the clock since the Arduino booted up in milliseconds. We need to store this in a long int type variable.\nNow, we need to make sure we are aware of the time since the button was pressed, so we reset the timer when it isn't pressed. Take a look:\nvoid loop() {<br> // Read the digital pin to check status of button\n int pressed = digitalRead(button);\n long int currentTime = millis();\n \n if(pressed == LOW){\n  // Reset the count time while button is not pressed\n  lastDebounceTime = currentTime;\n }\n \n // Button code\n}\nThe if(pressed == LOW) algorithm checks if the button isn't pressed. If it isn't, then the code stores the current time since last debounce. That way, each time the button is pressed, we have a point in time from which we can check when the button was pressed. We can then do a quick mathematical calculation to see how long the button was pressed for, and respond correctly. Let's look at the rest of the code:\nvoid loop() {<br> // Read the digital pin to check status of button\n int pressed = digitalRead(button);\n long int currentTime = millis();\n \n if(pressed == LOW){\n  // Reset the count time while button is not pressed\n  lastDebounceTime = currentTime;\n }\n // Button has been pressed for a given time\n if(((currentTime - lastDebounceTime) > debounceTimeout)){\n  // If the timeout is reached, button pressed!\n  Serial.println(\"Pressed!\");\n }\n}\nThe last block of code takes the current time, subtracts the last debounce time and compares it to the timeout we set. If it is greater, the code assumes the button has been pressed for that time and responds. Neat!\nRun your code and check it works. If you have errors, check your code!\nNow, let's look at a practical example.", "step_imgs": ["https://cdn.instructables.com/F4E/DVCZ/JTCSMQOB/F4EDVCZJTCSMQOB.LARGE.jpg"], "step_title": "Step 5: A Little Debounce"}, {"step": 6, "steps_text": "Buttons are interesting, because there are so many possibilities with them! In this example, we're going to make a menu. Let's say you've created this really great device, and need users to be able to change options to turn certain things on or off, or set a particular value for a setting. This three button design can do that!\nSo, for this project we need:\nThree buttons\nThree resistors set to 10k\u03a9\nWe already have one of these, we just need the other two. So add those to the board. Wiring up is a little more complex, but only because I wanted to keep it really compact. You could follow the same pattern for the first button, or follow the image above.\nThe three buttons are a menu open/next option, a change option (as in, alter the setting), and a save/close menu button.\nWire it up, let's look at the code!", "step_imgs": ["https://cdn.instructables.com/FAY/PL7Q/JTCSMQOE/FAYPL7QJTCSMQOE.LARGE.jpg"], "step_title": "Step 6: The Making of a Menu"}, {"step": 7, "steps_text": "Ok, this is going to be a long step, but I am going to go through each section of code.\nFirst, let's look at the global variables needed.\n// Define constants<br>#define menuButton 2\n#define menuSelect 3<br>#define menuSave 4\n#define debounceTimeout 50\n<br>// Define variables\nint menuButtonPreviousState = LOW;\nint menuSelectPreviousState = LOW;\nint menuSavePreviousState = LOW;\nlong int lastDebounceTime;\n<br>// Menu options\nchar * menuOptions[] = {\"Check Temp\", \"Check Light\"};\nbool featureSetting[] = {false,false};\nbool menuMode = false;\nbool menuNeedsPrint = false;\nint optionSelected = 0;\nThese three blocks are fairly similar to what we have seen before. In the first, I have defined the three buttons and the timeout. For this part of the project, I have set it to 50ms so it takes a deliberate press to make it work.\nThe second block is all the variables. We need to keep track of the buttonPreviousState, and we need to keep track of the lastDebounceTime. These are all int type variables, but the last is a long type because I am assuming we need the space in memory.\nThe menu options block has a few new features. First, the char * (yes, that is a deliberate asterisk), which is a character/string literal variable. It is a pointer to a static storage in memory. You can't change it (like you can in Python, for example). This char *menuOptions[ ] line creates an array of string literals. You could add as many menu items as you like.\nThe bool featureSetting variable is just the array of values that represents each menu item. Yes, you could store anything you like, just change the variable type (they all have to be the same type). Now, there might be better ways to manage this, like dictionaries or tuples, but this is simple for this application. I would probably create one of the latter in a deployed application.\nI have kept track of the menuMode, so if I wanted other things on my display I could do that. Also, if I had sensor logic I might pause that during menu operation, just in case something conflicts. I have a menuNeedsPrint variable because I want to print the menu at specific times, not just all the time. Finally, I have an optionSelected variable, so I can keep track of the option selected as I access it in a number of places.\nLet's look at the next set of functions.", "step_imgs": [], "step_title": "Step 7: Code Breakdown - Global"}, {"step": 8, "steps_text": "The setup() function is easy enough, just three input declarations:\nvoid setup() {<br> pinMode(menuSelect, INPUT);\n pinMode(menuSave, INPUT);\n pinMode(menuSelect, INPUT);\n Serial.begin(9600);\n}\nNext are the three custom functions. Let's look at the first two, then the last one separately.\nWe need two functions that return some information. The reason is, we want to make sure this is sort of human readable. It will also help with debugging the code if we have an issue. Code:\n// Function to return the current selected option<br>char *ReturnOptionSelected(){\n char *menuOption = menuOptions[optionSelected];\n // Return optionSelected\n return menuOption;\n}\n// Function to return status of current selected option\nchar *ReturnOptionStatus(){\n bool optionSetting = featureSetting[optionSelected];\n char *optionSettingVal;\n if (optionSetting == false){\n  optionSettingVal = \"False\";\n }else{\n  optionSettingVal = \"True\";\n }\n // Return optionSetting\n return optionSettingVal;\n}\nThe char *ReturnOptionSelected() function checks the option selected (if you see above, we set a variable to keep track of that), and pulls the string literal from the array we created earlier. It then returns it as a char type. We know this because the function indicates the return type.\nThe second function, char *ReturnOptionStatus() reads the status of the option saved in the array and returns a string literal that represents the value. For example, if the setting we have stored is false, I would return \"False\". This is because we show the user this variable and it is better to keep all this logic together. I could do it later, but it makes more sense to do it here.\n// Function to toggle current option<br>bool ToggleOptionSelected(){\n featureSetting[optionSelected] = !featureSetting[optionSelected];\n return true;\n}\nThe function bool ToggleOptionSelected() is a convenience function to change the value of the setting we have selected in the menu. It just flips the value. If you had a more complex set of options, this might be quite different. I return true in this function, because my callback (the call later in the code that fires this function) expects a true/false reply. I am 100% sure this will work, so I didn't account for it not working, but I would in a deployed application (just in case).", "step_imgs": [], "step_title": "Step 8: Code Breakdown - Setup and Custom Functions"}, {"step": 9, "steps_text": "The loop() function is fairly long, so we'll do it in parts. You can assume everything below nests within this function:\nvoid loop() {\n // Do work in here <-----\n}\nOk, we saw this stuff before:\n// Read the buttons<br> int menuButtonPressed = digitalRead(menuButton);\n   int menuSelectPressed = digitalRead(menuSelect);\n   int menuSavePressed = digitalRead(menuSave);\n \n\n // Get the current time\n long int currentTime = millis();\n \n if(menuButtonPressed == LOW && menuSelectPressed == LOW && menuSavePressed == LOW){\n  //Reset the count time while button is not pressed\n  lastDebounceTime = currentTime;\n  menuButtonPreviousState = LOW;\n  menuSelectPreviousState = LOW;\n  menuSavePreviousState = LOW;\n }\nAll I had to do here was add in the three digitalRead() calls, and make sure I accounted for the fact that if all buttons were low, we should reset the timer (lastDebounceTime = currentTime) and set all previous states to low. I also store millis() in currentTime.\nThe next section nests inside the line\nif(((currentTime - lastDebounceTime) > debounceTimeout)){\n //Do work in here <----\n}\nThere are three sections. Yes, I could have moved them into their own functions, but for sake of simplicity I kept the three main button algorithms in here.\nif((menuButtonPressed == HIGH) && (menuButtonPreviousState == LOW)){<br>  \n if(menuMode == false){\n  menuMode = true;\n  // Let the user know\n  Serial.println(\"Menu is active\");\n }else if (menuMode == true && optionSelected < 1){   \n  // Change option if menu is active\n  optionSelected = optionSelected + 1;\n }else if (menuMode == true && optionSelected >= 1){\n  // Reset option\n  optionSelected = 0;\n }\n  \n // Print the menu\n menuNeedsPrint = true;\n // Toggle the button prev. state to only display menu \n // if the button is released and pressed again\n menuButtonPreviousState = menuButtonPressed; // Would be HIGH\n}\nThis first one handles when menuButtonPressed is HIGH, or when the menu button is pressed. It also checks to make sure the previous state was LOW, so that the button had to be released before it was pressed again, which stops the program from constantly firing the same event over and over again.\nIt then checks that if the menu is not active, it activates it. It will print the first option selected (which is the first item in the menuOptions array by default. If you press the button a second or third (etc) time, you'll get the next option in the list. Something I could fix is that when it gets to the end, it cycles back to the beginning. This could read the length of the array and make cycling back easier if you changed the number of options, but this was simple for now.\nThe last little section (//Prints the menu) obviously prints the menu, but it also sets the previous state to HIGH so the same function won't loop (see my note above about checking if the button was previously LOW).\n// menuSelect is pressed, provide logic<br>if((menuSelectPressed == HIGH) && (menuSelectPreviousState == LOW)){\n if(menuMode){\n  // Change the selected option\n  // At the moment, this is just true/false \n  // but could be anything\n  bool toggle = ToggleOptionSelected();\n  if(toggle){\n   menuNeedsPrint = true;\n  }else{\n   Serial.println(\"Something went wrong. Please try again\");\n  }\n }\n // Toggle state to only toggle if released and pressed again\n menuSelectPreviousState = menuSelectPressed;\n}\nThis bit of code handles the menuSelectPressed button in the same way, except this time we just fire the ToggleOptionSelected() function. As I said before, you could change this function so it does more, but that's all I need it to do.\nThe main thing to note is the toggle variable, which tracks success of the callback and prints the menu if true. If it returns nothing or false, it will print the error message. This is where you can use your callback to do other things.\nif((menuSavePressed == HIGH) && (menuSavePreviousState == LOW)){<br> // Exit the menu\n // Here you could do any tidying up\n // or save to EEPROM\n menuMode = false;\n Serial.println(\"Menu exited\");\n  \n // Toggle state so menu only exits once\n menuSavePreviousState = menuSavePressed;\n }\n}\nThis function handles the menuSave button, which just exits the menu. This is where you could have a cancel or save option, maybe do some cleaning up or save to the EEPROM. I just print \"Menu exited\" and set the button state to HIGH so it doesn't loop.\nif(menuMode && menuNeedsPrint){<br> // We have printed the menu, so unless something \n // happens, no need to print it again\n menuNeedsPrint = false;\n char *optionActive = ReturnOptionSelected();\n char *optionStatus = ReturnOptionStatus();\n Serial.print(\"Selected: \"); \n Serial.print(optionActive);\n Serial.print(\": \");\n Serial.print(optionStatus); \n Serial.println();\n}\nThis is the menuPrint algorithm, which only fires when the menu is active and when the menuNeedsPrint variable is set to true.\nThis could definitely be moved to its own function, but for the sake of simplicity..!\nWell, that's it! See the next step for the whole code block.", "step_imgs": [], "step_title": "Step 9: The Loop..."}, {"step": 10, "steps_text": "// Define constants\n#define menuButton 2\n#define menuSelect 3\n#define menuSave 4\n#define debounceTimeout 50\n\nint menuButtonPreviousState = LOW;\nint menuSelectPreviousState = LOW;\nint menuSavePreviousState = LOW;\n\n// Define variables\nlong int lastDebounceTime;\nbool lightSensor = true;\nbool tempSensor = true;\n\n// Menu options\nchar * menuOptions[] = {\"Check Temp\", \"Check Light\"};\nbool featureSetting[] = {false,false};\nbool menuMode = false;\nbool menuNeedsPrint = false;\nint optionSelected = 0;\n\n// Setup function\n<p>void setup() {<br> pinMode(menuSelect, INPUT);\n pinMode(menuSave, INPUT);\n pinMode(menuSelect, INPUT);\n Serial.begin(9600);\n}</p>\n// Function to return the current selected option\nchar *ReturnOptionSelected(){\n char *menuOption = menuOptions[optionSelected];\n // Return optionSelected\n return menuOption;\n}\n\n// Function to return status of current selected option\nchar *ReturnOptionStatus(){\n bool optionSetting = featureSetting[optionSelected];\n char *optionSettingVal;\n if (optionSetting == false){\n  optionSettingVal = \"False\";\n }else{\n  optionSettingVal = \"True\";\n }\n // Return optionSetting\n return optionSettingVal;\n}\n\n// Function to toggle current option\nbool ToggleOptionSelected(){\n featureSetting[optionSelected] = !featureSetting[optionSelected];\n return true;\n}\n\n// The main loop\n<p>void loop()<br>{\n   // Read the buttons\n int menuButtonPressed = digitalRead(menuButton);\n   int menuSelectPressed = digitalRead(menuSelect);\n   int menuSavePressed = digitalRead(menuSave);\n // Get the current time\n long int currentTime = millis();\n \n if(menuButtonPressed == LOW && menuSelectPressed == LOW && menuSavePressed == LOW){\n  //Reset the count time while button is not pressed\n  lastDebounceTime = currentTime;\n  menuButtonPreviousState = LOW;\n  menuSelectPreviousState = LOW;\n  menuSavePreviousState = LOW;\n }\n if(((currentTime - lastDebounceTime) > debounceTimeout)){\n  // If the timeout is reached, button pressed!</p><p>  // menuButton is pressed, provide logic\n  // Only fires when the button has previously been released\n  if((menuButtonPressed == HIGH) && (menuButtonPreviousState == LOW)){\n  \n   if(menuMode == false){\n    menuMode = true;\n    // Let the user know\n    Serial.println(\"Menu is active\");\n   }else if (menuMode == true && optionSelected < 1){\n    // Change option if menu is active\n    optionSelected = optionSelected + 1;\n   }else if (menuMode == true && optionSelected >= 1){\n    // Reset option\n    optionSelected = 0;\n   }\n  \n   // Print the menu\n   menuNeedsPrint = true;\n   // Toggle the button prev. state to only display menu \n   // if the button is released and pressed again\n   menuButtonPreviousState = menuButtonPressed; // Would be HIGH\n  }\n  // menuSelect is pressed, provide logic\n  if((menuSelectPressed == HIGH) && (menuSelectPreviousState == LOW)){\n   if(menuMode){\n    // Change the selected option\n    // At the moment, this is just true/false \n    // but could be anything\n    bool toggle = ToggleOptionSelected();\n        if(toggle){\n    menuNeedsPrint = true;\n    }else{\n     Serial.print(\"Something went wrong. Please try again\");\n    }\n   }\n   // Toggle state to only toggle if released and pressed again\n   menuSelectPreviousState = menuSelectPressed;\n  }\n  if((menuSavePressed == HIGH) && (menuSavePreviousState == LOW)){\n   // Exit the menu\n   // Here you could do any tidying up\n   // or save to EEPROM\n   menuMode = false;\n   Serial.println(\"Menu exited\");\n  \n   // Toggle state so menu only exits once\n   menuSavePreviousState = menuSavePressed;\n   }\n  }\n  // Print the current menu option active, but only print it once\n  if(menuMode && menuNeedsPrint){\n   // We have printed the menu, so unless something \n   // happens, no need to print it again\n   menuNeedsPrint = false;\n   char *optionActive = ReturnOptionSelected();\n   char *optionStatus = ReturnOptionStatus();\n   Serial.print(\"Selected: \"); \n   Serial.print(optionActive);\n   Serial.print(\": \");\n   Serial.print(optionStatus); \n   Serial.println();\n  }\n }\n}\nThe circuit is available on the Tinkercad site. I have embedded the circuit below for you to see, too!\nAs always, if you have questions or issues, please let me know!", "step_imgs": [], "step_title": "Step 10: Final Code Block"}], "channel": "Arduino"}, {"category": "Technology", "description": "In this Instructable, you will learn how to build your own vacuum chamber using common tools, a vacuum pump, and a few inexpensive or easy-to-locate materials. I suggest reading the entire Instructable before beginning this project, simply so that you will have a better idea of what the finished product should look like. I have written instructions to guide you around making significant mistakes, all of which I learned the hard way. :) Hopefully, this will make building your vacuum much simpler and stress-free.\nThe items you will need are as follows:\n-- a silicone baking mat\n-- silicone caulk (and caulk gun)\n-- power drill\n-- a 1 in thick board of HDPE (high density polyethylene) plastic. This can be ordered for less than $30 bucks.\n-- a glass bell jar\n-- a vacuum pump (more details later)\n-- if needed: detergent-free motor oil\n-- 4 plastic soda bottles\n-- vinyl tubing, preferably very thin and strong\n-- vacuum pressure gauge. A cheap one may be $5-$8\n-- vacuum grease\nNow... what is a vacuum chamber? What are they useful for? If you are well aware of how vacuum chambers work, and their uses, then by all means skip to the first step.\nA vacuum chamber is an area from which the air has been evacuated. The pressure inside the chamber is actually a negative value (i.e. -8.3mmHg, -1Bar, etc.) because the outside atmospheric pressure (about 101,325 pascals or 14.6959 psi) is pushing in on the chamber. In other words, the pressure inside the chamber is far, far less than that outside the chamber. Why is this useful? Well, if all the air is gone then there is no \"atmosphere\" to interact with whatever you place inside the chamber. Vacuum chambers are used in life sciences to preserve specimens, such as bacteria cultures, in order to store them and keep them from decaying. In physical sciences, the vacuum chamber is incredibly useful in projects involving electricity or optics because the lack of air reduces resistance and interference from gas particles. This helps induce arcing, like what you see on a tesla coil.\nDid you know?\nThe vacuum tube (a small, glass-covered vacuum chamber), was used by Thomas Edison in his invention of the light bulb in 1883 and by Sir John Ambrose Flemming in his invention of the diode in 1904.", "title": "Build a Vacuum Chamber", "url": "https://www.instructables.com/id/Build-a-Vacuum-Chamber/", "steps": [{"step": 1, "steps_text": "In this step, you will need the silicone baking mat, a pen or sharpie, silicone caulk, and the bell jar. You may also want to grab some wax paper or foil and a big, heavy book.\nThe baking mat you can buy at Hobby Lobby or a home/kitchen goods store. It will be used to make the seal. For the silicone caulk, be sure it is actual silicone.\nA few notes on the bell jar... make sure that it is actually a bell jar, as in a glass jar with a rounded dome on top. A cake dome would also work. It is important that the top of the jar be convex because this structure is stronger and will withstand the pressure pressing inwards better. If you use a regular canning jar, for instance, the bottom may curve inwards. This concave structure runs the risk of breaking under pressure and collapsing on itself.\nNow, to begin the seal. Trace the rim of the jar onto the baking mat twice, spaced apart, on the right and left sides. Draw an inner circumference and an outer circumference for both circles, about half an inch away from the original circles. Now, cut out both circles along the inner and outer circumferences so that you have two baking sheet rings.\nApply a generous ring of caulk around the top of one of the baking mat rings and place the other baking mat ring on top. You want to apply pressure to adhere the rings together as evenly as possible. A good way to do this is to place a sheet of aluminum foil/wax paper on a table, put the silicone rings on top of that, then another sheet of foil/wax paper, and finally, on top a nice big, heavy book. Do not try to flatten the rings together manually, or you will end up with a bumpy seal that destroys your vacuum.\nLet the silicone caulk dry, and then you can trim off any excess with scissors. Consider yourself warned, the silicone caulk is smelly.\nThis double-thick silicone baking mat ring will be the seal for your chamber.", "step_imgs": ["https://cdn.instructables.com/F1C/DJSQ/JTEN27I4/F1CDJSQJTEN27I4.LARGE.jpg", "https://cdn.instructables.com/FPN/QMIZ/JTEN27J0/FPNQMIZJTEN27J0.LARGE.jpg"], "step_title": "Step 1: Create a Seal"}, {"step": 2, "steps_text": "In this step, you will need your seal, the 1\" thick board of HDPE (high density polyethylene) plastic, a sharpie, and the silicone caulk.\nPlace your seal on top of the HDPE. Position it so that it is in one corner on the top of the board, so that two of the sides of the board are tangent with the outside edge of the seal. Trace the seal with a sharpie.\nAfter removing the seal, Apply a generous ring of caulk to the board between the sharpie lines. Place the seal back on top. Like you did before, put a piece of aluminum foil on top and a big heavy book on top of that. Let dry.\nIf you want you can use your finger to smooth out the excess caulk along the edge of the seal. Your seal should be as flat and smooth as possible, and be sealed to the board on all sides.", "step_imgs": ["https://cdn.instructables.com/FLW/NCH3/JTEN27JW/FLWNCH3JTEN27JW.LARGE.jpg"], "step_title": "Step 2: Attach Seal to Plastic Base"}, {"step": 3, "steps_text": "In this step you will need a power drill, vinyl tubing, and silicone caulk. The vinyl tubing should be pretty small and strong. I used the vinyl tubing that goes with a nebulizer, because I had extra.\nGet out your power drill and drill bits.The drill bit you should use should be roughly the size of the vinyl tubing.\nMark a point inside the seal on the top of the board. From the 1\" thick side of the board, drill through the plastic until the tip of the drill is underneath the point on the top. It is a good idea to measure the drill bit and the distance to the point from the side of the board, so that you have a good idea of how far in you need to drill.\nDrill from the top point down into the tunnel from the side. The two tunnels should open into each other. It is very, very important not to drill all the way through the plastic while drilling downwards.\nOn the 1\" thick side of the board where you drilled in through the side, drill two more holes on either side. For these holes, drill diagonally into the center hole. These tunnels should open cleanly into each other.\nCut three lengthy pieces of the vinyl tubing. Insert one end of each into the 1\" thick side of the board.", "step_imgs": ["https://cdn.instructables.com/F5A/2WC3/JTEN27KS/F5A2WC3JTEN27KS.LARGE.jpg"], "step_title": "Step 3: Drill Tunnels in Base & Insert Tubing"}, {"step": 4, "steps_text": "For this step, you will need 4 plastic soda bottles, scissors, silicone caulk, and the drill. Electrical tape may come in handy.\nUsing scissors, cut the tops off of 4 plastic soda bottles, just underneath the lip. Make the cut surfaces as smooth as you can.\nUse silicone caulk to seal the cut sides of two of the bottle tops together. If you want, wrap electrical tape tightly around the outside to hold them in place and let the silicone dry completely. Be sure that the silicone does not seal up the inside of the bottle tops completely, and that at least one of the screw-on lids is still removable.\nDo the same for the other two bottle tops. These attached bottle tops are going to be your pressure valves.\nIn the cap on one side of each valve, drill a hole through the cap. This is so you can insert the vinyl tubing.", "step_imgs": ["https://cdn.instructables.com/F9E/6302/JTEN27LO/F9E6302JTEN27LO.LARGE.jpg"], "step_title": "Step 4: Create Pressure Release Valves"}, {"step": 5, "steps_text": "This step will require the vacuum pressure gauge, both pressure valves, and silicone caulk. Electrical tape may prove useful again.\nOn the ends of each of the three pieces of vinyl tubing, attach the pressure gauge to one, and pressure valves two the other two. Seal the pressure valves to the tubing with silicone.\nAttaching the gauge may be a trick because the gauge is probably much wider than the tubing. Just use whatever works that is airtight and can connect the two together. (I used a plastic part that the mask screws onto on the nebulizer tubing.) Electrical tape may come in handy again along with silicone to accomplish this.", "step_imgs": ["https://cdn.instructables.com/FAC/SHE1/JTEN27MK/FACSHE1JTEN27MK.LARGE.jpg"], "step_title": "Step 5: Attach Pressure Gauge and Valves"}, {"step": 6, "steps_text": "This step will require the vacuum pump, rubbing alcohol, vacuum grease and silicone caulk.\nIf you do not want to buy vacuum grease, ask around and see if anyone has some you can borrow. You won't need much.\nThere are three ways to get a vacuum pump if you do not already have one. You could buy one, borrow one, or make one. There are ways of making a vacuum pump out of an old refrigeration compressor or by converting a pancake compressor, but I would recommend researching that elsewhere.\nHow to attach the vacuum pump may depend upon what your pump is like. Use one of the pressure valves to attach the pump. If the tubing could attach directly, you could cut the pressure valve off entirely. Do whatever is necessary to create an airtight seal between the pump and the tubing.\nIn order to prepare the chamber to be turned on, clean of the seal on the board with isopropyl alcohol (rubbing alcohol), apply a thin layer of vacuum grease to the bottom of the bell jar, and place the bell jar on the seal. Press down on the bell jar as you turn on the pump.\nAir will leak through the space between the tubing and the plastic base. Apply caulk around the tubing on the edge of the board. It is good to do this while the pump is on, because it will slurp the silicone into the small space between the tubing and the plastic. Turn off the pump and let the caulk dry.", "step_imgs": ["https://cdn.instructables.com/FN0/2XYO/JTEN27NG/FN02XYOJTEN27NG.LARGE.jpg"], "step_title": "Step 6: Attach to Pump and Seal With Caulk"}, {"step": 7, "steps_text": "After the silicone is dry, press down on the bell jar and turn on the pump again. You will now proceed to look for vacuum leaks. This step is critical in getting your vacuum chamber to work!\nObserve the reading on the vacuum pressure gauge to see if you are pulling a good vacuum. Check thoroughly for leaks by listening for hissing air and looking for holes. Seal any leaks you find with silicone.\nA good way of checking for leaks near or on the tubing is to pinch off areas of the tubing or blocking the hole into the chamber and observing what that does to the pressure shown on the gauge.\nResearchers, scientists, and engineers are always battling vacuum leaks. Blocking them is important because even a small vacuum leak can destroy your vacuum.", "step_imgs": [], "step_title": "Step 7: Checking for Leaks"}, {"step": 8, "steps_text": "Now that your vacuum is all sealed up, turn it on and see how low the pressure will drop on the gauge.\nOne thing you can do to test your vacuum is place a crushed plastic soda bottle with an airtight lid inside the chamber. As the vacuum is pulled, the bottle should inflate to its original state. Once the vacuum is released, the bottle will crumble again.\nA vacuum chamber can be used in loads of awesome science projects and many other things. For example, you could run wires through the base to preform electrical experiments in a vacuum. It certainly helped me!\nHappy building!", "step_imgs": ["https://cdn.instructables.com/F9G/G9QK/JT91I38Q/F9GG9QKJT91I38Q.LARGE.jpg", "https://cdn.instructables.com/FDV/IMFA/JT91I37L/FDVIMFAJT91I37L.LARGE.jpg"], "step_title": "Step 8: Testing and Applications"}], "channel": "Science"}, {"category": "Technology", "description": "Resistor assortments are often packed as strips of \"tape mounted\" resistors. The resistors can be easily organized by stapling the \"taped resistor strips\" to index cards. Resistor index cards can be sorted and stored in standard index file boxes. Resistors can be cut from the index card as needed.\nI believe this method oftens easy, fast, inexpense, and compact organization of resistor assortments.", "title": "Easy Resistor Assortment Organization With Index Cards", "url": "https://www.instructables.com/id/Easy-Resistor-Assortment-Organization-With-Index-C/", "steps": [{"step": 1, "steps_text": "Besides your tape mounted resistor assortment, you'll need: Index cards sized to the resistor tape strips ( 3 by 5 cards worked for me), file box, stapler and marking pen.\nStaple each resistor strip to an index cards in 4 places as shown in photo. Clearly write the resistor value in the index card upper right corner. Add the resistor cards to file box arranged in ascending order of resistance value.", "step_imgs": ["https://cdn.instructables.com/FWR/PV5M/JTEN1MN8/FWRPV5MJTEN1MN8.LARGE.jpg"], "step_title": "Step 1: Material, Tools, and Resistor Mounting Process"}, {"step": 2, "steps_text": "Sort through the file box to find the resistor value value you need. Remove the resistor card, and use side cutter pliers to cut the resistor from the card. Return the index card to the correct location in the file box!", "step_imgs": ["https://cdn.instructables.com/F9B/CUK7/JTEN1MN3/F9BCUK7JTEN1MN3.LARGE.jpg"], "step_title": "Step 2: Resistor Retrieval"}], "channel": "Electronics"}, {"category": "Technology", "description": "Rover Design Challenge\nGrades 4-8, Engineering, Social Studies, Geography, Science\nLesson Overview\nIn this activity, students design and build electric toy Rovers that run on monorail tracks. It can be set up for learning about real geography and cultures, or for a creative experience where students invent a new land. The Rover challenge is also an engaging way to practice the Engineering Design Process on a flexible challenge while learning 3D modeling on Tinkercad.\n\nThe Rover is a small vehicle with a base and four pins to guide it on a monorail track. It uses hobby gear-motors and wheels that are easy to find online, reasonably priced, and reusable. Shaft extensions for the motors can be 3-D printed from the Tinkercad files linked in this lesson. The Monorail track is made from an inexpensive plastic electrical conduit that is available at hardware stores or online. Several track challenges are provided in this lesson plan. Students design and build the Rover and/or the Track, creating track features that depict the area they are exploring and adaptations to the Rover that help it perform on the journey.\nThis project is structured to follow the Engineering Design Process (EDP), a process that helps designers in any discipline create solutions to problems. While there are many ways that people solve problems, designers often use the EDP because it offers a clear roadmap for them to follow as they work towards a solution.\nFirst, designers Define the challenge they are facing, then Learn more about the problem and Explore existing solutions. It\u2019s tempting to skip these first few steps and head straight into brainstorming, but don\u2019t! When designers take the time to understand the problem clearly, they come up with much better solutions. The Design phase is where brainstorming happens. Designers brainstorm multiple possible solutions, then develop a few of them into more detailed plans. Encourage your students to plan at least 3 of their potential ideas before choosing a design direction and starting to Create a product based on their design. If they hit any roadblocks trying to create their first design choice, they\u2019ll be able to revisit their alternate design plans and choose a new direction - without starting from scratch. Designers then take time to Observe their design and see how they can Improve it. We strongly recommend that students have an opportunity for at least 2 Create-Observe-Improve cycles. When students feel they have to \u201cget it right the first time,\u201d they are less willing to take risks and be creative. By repeating the cycle, they have a chance to fix flaws and adopt successful ideas from classmates, and in fact, they\u2019re practicing what professional designers really do. A good design cycle builds in time for the designer to Reflect on their product and the process of making it, looking for learning habits and insights that will help in future challenges. When the work is complete, designers are ready to Share. They bring their work into the real world, by posting, publishing, presenting, or exhibiting - or giving or selling if appropriate! - what they\u2019ve made. For students working through a design process, a real audience helps students connect their learning and work experiences to the world outside the classroom. For Makerspaces and Maker projects, in particular, this is hugely important for building confidence in every student and a sense of community among Makers. To help students work through this process, be sure to build in planned \u201cstops\u201d at each step for students to record their thoughts and progress as they work through product iteration cycles.\nEssential Question(s)\nHow can the Engineering Design Process be used to efficiently and effectively create a machine to meet a specified challenge?\nHow can an electric toy car (the rover) and track be used to help students learn academic content?\nSkills Taught:\nEngineering Design Process\nAdditional Academic Topics Researched by Students\nBasic electronics\nBasic Prototyping Skills\nTime Required: _____ Hours\nMaterials Needed:\n3D Printer and filament.\nDC Gear Motor (on Amazon called Gear Motor for Smart Car Robot, GR 1:48.\nWheels that fit the motor shafts, usually available with the motors.\nFlex Tubing, \u215c\u201d to \u00bd\u201d outside diameter, such as electrical conduit from a hardware store.\nOn/Off Switch\nBattery pack - 3V (2 AA batteries)\nMotor shaft extensions printed from Tinkercad file\nTinkercad\nMisc. Arts+Crafts materials (cardstock, corrugated plastic sheets, hot glue, markers, etc.)\nTimekeeper", "title": "Rover Design Challenge", "url": "https://www.instructables.com/id/Rover-Design-Challenge/", "steps": [{"step": 1, "steps_text": "Context\nThe Engineering Design Process (EDP) is a respected process for solving engineering and other critical thinking challenges. Students will learn and practice transferable skills involving creativity, communication, collaboration, critical thinking. The EDP is a guide to problem-solving and leads the user to effective solutions in an efficient manner. In this activity, students design and build a toy Rover powered by an electric motor. It is powered by a single electric DC gear-motor and follows a monorail track made out of flexible tubing. Students also have the opportunity to design the track and various obstacles and features for the rover to encounter during its travels. The challenge can simply be a made-up land, or the class can build it as a significant historical or geographic region. The rover body, features of the course, and the items the rover encounters can all be related to the theme.\nThrough building a rover and its challenge course, students will be practicing engineering design, critical thinking, teamwork, as well as basic electronics.\nChallenge\nDesign an electric toy rover and track/course to complete challenges. Student teams consider scoring options and plan a strategy to earn points based on the performance of their rover on the course they create.\nSample Challenge 1 - Geography and Culture\nRoad-trips and tours are popular with vacationers that like to explore and learn about new places. To prepare for such a trip the adventurer may need to outfit their vehicle with special features, plan a way to navigate the expected terrain, and/or plan how to store items they collect along the way.\nStudents create a rover with features that help it in its tour of a specified region. The rover may need to navigate terrain specific to that region, visit significant sites, and/or collect typical artifacts from the region.\nThe rover design challenge is an engaging activity for a class on geography and culture. It includes aspects of technology, engineering, and electricity, and can serve as an interdisciplinary activity.\nStudents will:\nBuild a rover as per the instructions here, or design their own.\nLearn about the people in the area and design artifacts that represent the culture of the civilizations\nResearch the geography of the region and create terrain, physical features, and artifacts as expected in the region.\nSample Challenge 2 - Mars exploration\nFor years, scientists have been looking for signs of life on the red planet. Numerous NASA missions have been looking for signs such as bacteria and other microscopic life forms. Most important, the Mars rovers and probes are looking for one other key piece of evidence: liquid water. Life cannot exist without it from what we know, and surface geography has indicated that water once flowed over the surface of the red planet. On their journey, these rovers will encounter many obstacles including mountains, craters, valleys, sand drifts, and more. Learn about the history of the search for life on the Red Planet. Discuss the reasons for the study of celestial bodies such as other planets. Are we alone in the universe? Consider the implications such a study would have for the future.\nStudents study the geography and features of the regions of Mars: Olympus, the South Cap, Tharsis, Cassini Crater, Acidalia Planitia. They create landscapes and tracks to show this geography and build rovers to perform discovery challenges.\nThe Challenge is set up so there is not 1 winner, but levels which students can try to attain, as they might in sports or martial arts. Student designers can create rovers that earn points in different ways, creating track or rover features that earn points for performance. Track features can include rough terrain, bridges, and underpasses, or seesaws. Rover features include carrying, plowing, or collecting objects such as foam blocks or action figures.\nCriteria:\nStudents must build a working rover and track that can perform the suggested tasks and earn points\nConstraints:\nComplete the project in the time allotted, with the materials provided\nIn the example scoring, 25 points = Road Racer, 35 points = Road Master, 50 points = King/Queen of the Road\nSee PDF Below.\nStudent Product / Learning Goals\nStudents can be involved in 2 types of activity - designing the course and designing the track. They can practice the engineering design process by using 3D Printers to make \u201cparts\u201d and \u201ctools\u201d for a moving rover or research a topic and apply their knowledge to design obstacles and challenges for this rover to cross.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research: Direct students to resources with information about their specific regions or cultures, and suggest specific things to look for. This can be an individual or team activity.\n2. Collect: Instruct students on how/where to keep notes on the things they learned. They may create an \u201cinspiration page\u201d such as a blog, Google Docs, a notebook, Padlet, poster, etc.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "1. Design:\nStudents work together to brainstorm ideas on how to represent the region and culture they are assigned The goal is to create a rover and track/course that is simple enough to build while still being complex enough to communicate the idea. The design process is most effective when designers create at least 3 different ideas.\nOption A: draw designs on how the rover and track/course will look and/or function. Use paper, whiteboard, drawing apps.\nOption B: Build simple models using crafting materials (paper, glue, clay, pipe cleaners, etc.) to show look and/or function\nOption C: Let the students play around in Tinkercad to get familiar with the program and make practice models.\n2. Direction: Help the students choose a rover and track/course that fills the criteria of the project, as well as the \u201cThing\u201d Checklist (this checklist can be found in the Resource section of the Lesson).", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "Rover Base:\n1. Pull a box shape into the workspace and size it to the following:\nHeight: \u215b\u201d(.125\u201d) - Required.\nLength: 5 \u00bd\u201d - The current length includes room for the current electrical components as well as space in the back for optional extensions.\nWidth: 2\u201d - This is wide enough to fit the motor with shaft extensions.\nRadius: .12\u201d (optional) - The radius can be found under shape drop-down panel, this step is optional but can help the rover avoid getting caught on other objects while in motion.\nFront Pins:\nThese pins are meant to be used as guides and not as standing supports. The overall height of the front pin is the distance to the ground, minus 1/16\" (.062\u201d).\n2. Pull a cylinder shape into the workplace and set the dimensions to:\nHeight: 5/8\u201d (.625) - Required.\nDiameter: \u00bc\u201d - Required.\n3. Pull in a half sphere and size to:\nHeight: \u215b\u201d - Required.\nDiameter: \u00bc\u201d - Required.\n4. Drop the half sphere on top of the cylinder. (To do this, select the workplane, then choose a side wall. Select the shape you want to drop, and hit the D key on your keyboard.)\n5. Align them to center.\n6. Group the half sphere and cylinder.\n7. Duplicate the pin, and give the two pins a spacing equal to the tubing diameter, plus .03\".\nx +.03 = y (x = tube dimension, y = 1st pin spacing).\n8. You can import a box shape to use as a guide and set its width to the needed spacing.\n9. Individually select and drop each pin to the box's side wall. (To do this, select the workplane, then choose a side wall. Select the shape you want to drop, and hit the D key on your keyboard. )\n10. Once you're done, align the pins to be side by side, and delete the box shape guide.\n11. Group the front pins for easy movement.\nBack pins:\nDesigned to be used as turning guides and are shorter to help the rover go up/down ramps with ease.\n12. Pull a cylinder shape into the workplace and set the dimensions to:\nHeight: \u00bd\u201d - Required.\nDiameter: \u00bc\u201d - Required.\n13. Pull in a half sphere and size to:\nHeight: \u215b\u201d - Required.\nDiameter: \u00bc\u201d - Required.\n14. Drop the half sphere on top of the cylinder and align them to center.\n15. Group the half sphere and cylinder.\n16. At the bottom right corner of the workplane, set the Snap Grid to a unit you wish to move the cylinder by.\nExample:\n16. Duplicate the back pin, and use the right or left arrow keys to move the second pin over in increments of the Snap grid. Feel free to experiment with different spacings, and see how this affects the rover's movements.\nLimit: Keep the spacing distance under 1.75\" (2\" rover body, minus the half thickness of both pins (.125\"+.125\")).\n17. Group the back pins together after you're setting them to your desired distance.\nAligning the Pins:\n18. Set the Snap Grid to 1/2 in.\n19. Align the front pins to the front of the rover base.\n20. Move them in (use directional arrow keys (up,down,left or right)), twice (.5\" x 2 = 1\" depth).\n21. Align the back pins to the front of the rover.\n22. Move them in (use directional arrow keys (up,down,left or right)), six times (.5\" x 6 = 3\" depth).\n23. Select all shapes and group them together.\n24. Export as an STL, and print the part in this position.\n25. While the Rover body is printing, wire up the DC gear-motor and battery.\nRover Assembly - wiring:\nWheels:\nPrint the premade or custom rover extensions.\nPush the pin part of the extenders into the wheels.\nPush the motor pins through the extenders.\nDownload and print the extensions.\nIf the fit is loose, try adding hot glue.\nIf the extenders don\u2019t fit, try using an Exacto blade to carefully clean off the edges of the print.\nAssembly placement:\nCheck to make sure the wheels are rotating in the correct direction and moving the rover forward.\nHot glue motor to the body. The placement should be between the two rover pin guides.\nOn/off switch to the body:\nHot glue the one/off switch to top side of the rover, closer to the motor.\nMake sure to leave space on the sides and the back for your extra components.\nBattery:\nHot glue the battery pack on top of the motor. This will create space for your extra components.\nAfter you\u2019ve finished, add any extra extensions you need for the rover challenge.\nDon\u2019t forget to customize your rover with fun characters and designs!\nTrack: The grid in these layouts is 1\u201d square, showing a 4\u2019 x 6\u2019 course.\n1. Choose one of the following challenge maps or make your own.\nChallenge Map 1:\nChallenge Map 2:\nChallenge Map 3:\nMake your own:\n2. Use floor tiles as guides to mark a 4\u2019 x 6\u2019 area in which the rover challenge will take place.\n3. Maker a \u201cHome\u201d base in which the rover will start and end it\u2019s track.\n4. Mark the locations of the Terrains for the students to design their track with and around. Terrains have special features that affect how the rover will behave:\nWater - Not a spot the rover can ride on unless specified.\nExample: A rover can\u2019t travel in water, but after it collects special \u201cfloating\u201d devices (corks), it can.\nSandpit/stone - Textured terrain.\nExample: Pebbles, hot glued to a piece of paper/cardboard make it harder for a rover to ride over.\nMountain - A specified elevated spot on the map. Should be high enough for a rover to pass under, but not too high so a rover can get up a possible ramp.\n5. Mark a designated \u201cPICK UP\u201d and \u201cDROP OFF\u201d spot.", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "1. Play with the rovers and tracks! Student teams earn points for performance and get ratings. Encourage students to help each other solve problems so that all teams earn at least 1 rating for their car/track.\n2. It is recommended that students have an opportunity for at least 2 design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\n3. Provide stopping points for the class where students can observe, evaluate, and document their design.\n4. Give students a chance to record their thoughts and progress as they work through product iteration cycles.\nFor possible prompts: download the PDF at the end of the step.\n5. Follow instructions in the Create Step as needed for the next iteration", "step_imgs": [], "step_title": "Step 5: Observe and Test"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.\nFor possible prompts: Download the PDF attached to the bottom of the step.", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "We hope you had fun designing and sharing your Rovers and tracks. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in? Send us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nLists of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 7: Project Extensions"}], "channel": "3D Printing"}, {"category": "Technology", "description": "Hi,\nin this Instructable, I want to show you how you can build your own step / dir interface for ILDA standard galvo laser scanners.\nAs you might know I am also the inventor of the \"DIY-SLS-3D-Printer\" and the \"JRLS 1000 DIY SLS-3D-PRINTER\" and while I was building these machines I have start tinkering about how these printers will perform, if I will use a Galvo Scanners instead of a cartesian movement system. However in these days I don't had the knowledge to program a controller for a galvo scanner. So I have used an existing firmware with cartesian motion.\nBut today and after some research I found an instructable where the author uses an arduino to create a DIY Laser Galvo show. I thought this is exactly what I am searching for, so I have ordered the parts like in his instructable and made some experiments. After some research I found out, that the Arduino will not perform that well as step / direction interface, so I remixed it for the STM32 microcontroller.\nPlease remember this controller is just a prototype, but usable for a lot of projects. For example in a DIY SLS 3D printer or a laser engraver.\nThe features of the Galvo controller are:\nconversion from 5V step/dir signals to ILDA standart\n120kHz input frequency of (Step / Direction signals)\n12bit Output resolution (0,006\u00b0 per angle)\nconversion from polar to linear coordinates\ncompatible with any motion controller which will create a step and direction signal\ncenter alignment pin (homing routine)\nvideo of laser galvo controller: (coming soon)\n\nIf you like my Instructable, please vote for me in the Remix Contest", "title": "DIY STEP/DIR LASER GALVO CONTROLLER", "url": "https://www.instructables.com/id/DIY-STEPDIR-LASER-GALVO-CONTROLLER/", "steps": [{"step": 1, "steps_text": "Electronic Parts for the galvo controller:\nQuantity Description Link Price\n1x ILDA 20Kpps galvo galvanometer set\nAliexpress 56,51\u20ac\n1x 6mm 650nm Laserdiode\nAliexpress 1,16\u20ac\nsome\nwires\n-\n-\n1x\nST-Link V2\nAliexpress 1,92\n\nElectronic Parts for the circuit:\nHere are all required parts for the galvo controller. I tried to source all parts as cheap as possible.\nQuantity Description Name on circuit\nLink Price\n1x STM32 \"Blue-Pill\" microcontroller\n\"BLUE-PILL\"\nAliexpress 1,88\u20ac\n1x MCP4822 12 bit dual channel DAC\nMCP4822\nAliexpress 3,00\u20ac\n2x TL082 dual OpAmp\nIC1, IC2\nAliexpress 0,97\u20ac\n6x 1k Resistor\nR1-R6\nAliexpress 0,57\u20ac\n4x 10k trim-potentiometer\nR7-R10\nAliexpress 1,03\u20ac\nsome\npin header\n-\nAliexpress 0,46\u20ac", "step_imgs": [], "step_title": "Step 1: Parts You Need for the Galvo Controller"}, {"step": 2, "steps_text": "Here I will you explain, how the controller works in general. I will also show some details for example the calculation of the right angle.\n\n1. MOTION-CONTROLLER\nThe motion controller is the part where you will create the step and direction signals. The step/direction controll is often used in stepper motor applications like 3D-Printers, Lasers or CNC-Mills.\nIn addition to the step and direction signals there is a need for a center allignment pin to make the STM32 and the Motioncontroller consitent. That is because the galvos are absolute controlled and there is no need for any limit switches.\n2.STM32-Microcontroller\nThe STM32 microcontroller is the heart of this controller. This microcontroller has several task to do. These task are:\nTask 1: Measure signals\nThe first task is to measure the input signals. In this case it will be step and direction signals. Because I don't want that the motion-controller will be limited by input frequency, I designed the circuit for 120kHz (tested) . To achieve this input frequency without loosing data, I am using two hardware timers TIM2 and TIM3 on the STM32 to manage the step / direction interface. In addition to the step and direction signals there is the llignment signal. This alignment is controlled by an external interrupt on the STM32.\nTask 2: Compute the signals\nNow the controller needs to compute the signals to the right value for the DAC. Because the galvo will create a non linear polar coordinate system, a small calculation is needed to create a linear dependence between step and actual moved laser. Here I will show you a sketch of the calculation:\nNow we need to find the formula for the calculation. Because I use a 12bit DAC, I can give out a voltage from -5 - +5V in 0 - 4096 steps. The galvo I have order has a total scan angle of 25\u00b0 at -5 - +5V. So my angle phi is in a range from -12,5\u00b0 - +12,5\u00b0 . Finally I need to thought about the distance d . I personally want a scan field of 100x100mm, so my d will be 50mm. The high h will be the result of phi and d. h is 225,5mm. To bring the distance d in relation to the angle phi I used a little formula, which will use the tangents and convert the angle from radians into \"DAC-values\"\nFinally I only need to add a bias of 2048, because my scanfield is center alignment and all of the calculations are done.\nTask 3: Send values to the DAC:\nBecause the STM32 i have used has no build in DAC, I have used an external DAC. The communication between the DAC and the STM32 is realized over SPI.\n3. DAC\nFor the circuit I am using the same 12bit DAC \"MCP4822\" as deltaflo. Because the DAC is unipolar 0-4,2V and you need -+5V bipolar for the ILDA standard, you need to build a small circuit with some OpAmps. I am using TL082 OpAmps. You have to build this amplifier-circuit twice, because you need to controll two galvos. The two OpAmps are connected to -15 and +15V as their supply voltage.\n4.GALVO\nThe last part is rather simple. The Output voltage of the two OPAmps will be connected to the ILDA Galvo drivers. And that's it, now you should be able to control the galvos with step and direction signals", "step_imgs": [], "step_title": "Step 2: The Theory of the Controller"}, {"step": 3, "steps_text": "For the circuit I have used a prototype PCB.\nYou can connect the step and direction signals directly to the STM32, because I have activated internal pull down resistors. Also I have used 5V tolerant pins for the step, direction and center pins.\nYou can download the full schematic of the circuit below:", "step_imgs": ["https://cdn.instructables.com/FO4/TLFM/JT91M0SM/FO4TLFMJT91M0SM.LARGE.jpg"], "step_title": "Step 3: The Circuit"}, {"step": 4, "steps_text": "The STM32 is programmed with Attolic TrueStudio and CubeMX . TrueStudio is free to use and you can download it here\nBecause TrueStudio is not that simple like for example the Arduino IDE, I have generated a .hex file, which you simply need to upload to the STM32 microcontroller.\nIn the following I will explain, how you uplaod the file to the STM32 \"BluePill\":\n1. Download \"STM32 ST-LINK Utility\":\nYou can download the Software here\n2.Install and open \"STM32 ST-LINK Utility\":\n3. Now open the Galvo.hex file in the ST-Link Utility: After that you need to connect the STM32 \"BluePill\" to the ST-Link-V2. Once connected click on the \"Connect to traget Button\":\nFinally click on \"Download\". Now your STM32 should be flashed correctly.\nIn addition, I have attached all the source files for the Galvo_Controller in TrueStudio", "step_imgs": [], "step_title": "Step 4: Programming the STM32"}, {"step": 5, "steps_text": "I have placed all the electronic parts on a 4mm aluminum plate for a better look :-)\nNow I will show you how you need to adjust the potentiometers on the circuit probably:\nAt first some background information about the ILDA standard. The ILDA standard is usually used for Laser shows, and consists of a 5V and a -5v signal. The both signals have the same amplitude, but with changed polarity. So what we have to to is to trim the output signal from the DAC to 5V and -5V.\nAdjust the potentiometer:\nWhat you can see here is the output voltage of this circuit at an input step frequency of 100kHz and with a constant direction signal. In this picture everything is fine. The amplitude goes from 0 to 5V and from 0 to -5 . Also the voltages are aligned probably.\nNow I will show you what could get wrong while adjusting the potentiometer:\nAs you can see now both voltages are not aligned probably. The solution is to adjust the offset voltage from the OpAmp. You do that by adjusting the potentiometers \"R8\" and \"R10\".\nAn other example:\nAs you can see now the voltages are aligned probably, but the amplitude is not 5V but 2V. The solution is to adjust the gain resistor from the OpAmp. You do that by adjusting the potentiometers \"R7\" and \"R9\".", "step_imgs": ["https://cdn.instructables.com/FWR/0ZOU/JT91M134/FWR0ZOUJT91M134.LARGE.jpg", "https://cdn.instructables.com/FK6/UKRX/JT91M13G/FK6UKRXJT91M13G.LARGE.jpg"], "step_title": "Step 5: Connect All the Parts Mechanically and Test It"}], "channel": "Lasers"}, {"category": "Technology", "description": "Hi, night bicycle trails are pretty popular in my country. I thought it would be cool if you have, beside of primary light, light which direction you can control with joystick. As I am a fan of MTB my requirements were: reliability, so you can use it in moderate terrain, low price and simplicity so everybody can make it. This is first version of Z-light I would call it alfa, its not field tested yet, but I believe it can make a regular trip. To make it, you will have to: 3D print parts, solder, crimp dupont connectors and program arduino nano (copy paste). If you never did this stuff before, don't worry it is all basics and youtube is filled with great tutorials.", "title": "Z-light (alpha)", "url": "https://www.instructables.com/id/Z-light-alpha/", "steps": [{"step": 1, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FAE/VI7P/JTCRJRLL/FAEVI7PJTCRJRLL.LARGE.jpg"], "step_title": "Step 1:"}, {"step": 2, "steps_text": "Parts list:\nNot everything is on the picture.\nAbout the screws, you can use any screw you will find home and consider them good enough.\nMost of these screws I had from 3D printer kit.\n1x Generic Arduino joystick or Sony PSP 2000 joystick (Amazon or Aliexpress)\n1x Metal gear servo 54.1 x 20 x 44.3 mm (Amazon or Aliexpress).\nI recommend to buy 20kg servo ( 20USD on amazon), it has much better movement and feeling than cheapest generic servo.\n1x 9g servo (Amazon or Aliexpress)\n1x Arduino nano (www.arduino.cc)\n2x M5 wing nut, (Home depot, local hardware store)\n2x M5 x 25 mm hex screw, (Home depot, local hardware store)\n2x Hex nut for M5 screw, (Home depot, local hardware store)\n4x Axial ball bearing F8-16M (8x16x5mm) (Amazon or Aliexpress)\n1x Aluminium servo arm horn 24T (Amazon or Aliexpress)\n2x M6 x30 Hex screw, (Home depot, local hardware store)\n2x M2 x 6 mm screw, wood like thread (one usually come with 9g servo, Aliexpress)\n4x M3 x 8 mm screw, wood like thread (in picture is 2x that is it a mistake, you can use two screws that come with 9g servo, I bought these in Home Depot)\n4x M3 x 6 mm screw for standard arduino joystick\n2x M3NS nut, (They come with 3D printer kits, Aliexpress)\n3x M3 x 10 mm screw,(they come with 3d printer kits, Aliexpress)\n1x Chicago screw 5 x 40 mm (Home depot, Amazon)\n1x Mini led flash light (Amazon or Aliexpress)\n1x Copper board 35 x 25 mm one sided for PCB (you might need spare, local store with electronics, Amazon.)\n3x 14500 rechargeable batteries and charger (they are same shape as AA 1,5V batteries but these are different)\n1x 14500 battery case for 2 batteries. Use different type or number of batteries or case if you want 18650 are even better. USB power bank with combination of 20 kg servo didint work for me.\n2x Calbe tie\n1x Dupont female - female 4 wire cable 20 cm long. You might crimp it. They come with arduino kits.\nDipont pins 2.54mm header curved, straight (comes with dupont crimping kit, aliexpres)\nSpare wire\nNylon spiral wrap, 30 cm should be enough or textile sleeve\nCopper etchant (local store with electronics, Amazon.)\nPiece of anti slip mat - for handle to not slip\nVelcro\n3D printed parts\nTools list\nSoldering gun\nDupont Crimping Pliers with Dupont connectors kit (I bought mine on Amazon for 40 CAD) - optional\nGlue gun\nMultimeter\nDrill with 1mm drill bit\nAllan key set and basic tools", "step_imgs": ["https://cdn.instructables.com/FF7/VMS8/JSPAD0Y4/FF7VMS8JSPAD0Y4.LARGE.jpg"], "step_title": "Step 2: Parts and Tools"}, {"step": 3, "steps_text": "First you need to prepare PCB, I have been inspired by tutorial on youtube made by Gareth Burrows.\nYou need: 35 x 25 mm one sided copper board, etchant, fancy polish nail remover and laser printer.\nI used glossy gift wrapping paper.\nPrint the scheme on the glossy paper.\nCut the scheme out and put it on copper board.\nApply pressure on paper and pout little bit of polish nail remover.\nContinue to apply perpendicular pressure on every part of paper, until scheme shows up on the top of paper. Repeat several times and remove paper until its still wet.\nDouble check if the scheme is correct. If it didn't come out good, you can fix it with permanent marker.\nEtch the boar.\nAfter etching, make sure you don't have shorted circuit. Check with voltmeter + and - and the signals.\nShort circuit will destroy your arduino board.\nDrill all holes for pins with 1mm drill bit.", "step_imgs": ["https://cdn.instructables.com/F7B/AO42/JTCRFLC4/F7BAO42JTCRFLC4.LARGE.jpg", "https://cdn.instructables.com/FU3/DJQ6/JTCRFLC5/FU3DJQ6JTCRFLC5.LARGE.jpg", "https://cdn.instructables.com/FW3/DLSI/JTCRFLC6/FW3DLSIJTCRFLC6.LARGE.jpg", "https://cdn.instructables.com/FV3/JGO6/JTCRFLC8/FV3JGO6JTCRFLC8.LARGE.jpg", "https://cdn.instructables.com/F8N/QCKG/JTCRFLC9/F8NQCKGJTCRFLC9.LARGE.jpg", "https://cdn.instructables.com/F3S/HDJW/JTCRG755/F3SHDJWJTCRG755.LARGE.jpg"], "step_title": "Step 3: Preparing PCB"}, {"step": 4, "steps_text": "Solder PCB to arduino board, using straight pins.\nI cut out half of the plastic part from pins so whole assembly takes less space.\nSoldier PCB to arduino according to pictures and check again for short circuit.\nTake 90 degree pins, you will need 2 x 6 pins, keep them together for easier manipulation.\nSolder pins to PCB according to pictures.\nNow it is good time to connect joystick and servos and try it (check connections in next steps). Also you can position servos to the middle of rotation.\nIMPORTATNT:\nPreviously soldered pins will be in your way and you have to cut them so they wont stick out so much.\nInsert servo connectors in pins and solder them with connectors.\nLater you wont have a problem to insert connectors.\nThis was the hardest part of the project, at least for me.", "step_imgs": ["https://cdn.instructables.com/F7I/GR76/JTCRFZG3/F7IGR76JTCRFZG3.LARGE.jpg", "https://cdn.instructables.com/FDM/QG5H/JTCRG6H3/FDMQG5HJTCRG6H3.LARGE.jpg", "https://cdn.instructables.com/FJC/IDJ8/JTCRG6IR/FJCIDJ8JTCRG6IR.LARGE.jpg", "https://cdn.instructables.com/FCO/TMQM/JTCRG6K1/FCOTMQMJTCRG6K1.LARGE.jpg", "https://cdn.instructables.com/FE0/4BBG/JTCRG6JR/FE04BBGJTCRG6JR.LARGE.jpg", "https://cdn.instructables.com/FDN/NFNA/JTCRG7T3/FDNNFNAJTCRG7T3.LARGE.jpg", "https://cdn.instructables.com/FUE/NDJN/JTCRG7TW/FUENDJNJTCRG7TW.LARGE.jpg", "https://cdn.instructables.com/FGF/JJKS/JTCRG7UO/FGFJJKSJTCRG7UO.LARGE.jpg", "https://cdn.instructables.com/FB9/CQ5J/JTCRG7W7/FB9CQ5JJTCRG7W7.LARGE.jpg"], "step_title": "Step 4: Prepare Arduino Board"}, {"step": 5, "steps_text": "If you want to use small joystick from PSP 2000, use 3D printed PSP 2000 joystick holder and follow this step.\nTurn joystick up side down and with dupond pins mark holes.\nCarefully drill the holes and solder 90 degrees pins to joystick.\nIn the picture I am using straight pins, they can be used but it is better to use 90 degree pins so you will have more room for velcro.\nCheck for short circuit between pins and use a glue gun (or try something else) to secure connector. This joystick is really fragile. I bought two of them and second one worked correctly.\nVise I am using is 2inch Desktop Vise by mdkendall on Thinkiverse.", "step_imgs": ["https://cdn.instructables.com/FDX/IY9J/JTCRG9NI/FDXIY9JJTCRG9NI.LARGE.jpg", "https://cdn.instructables.com/FI4/BXCF/JTCRG9QR/FI4BXCFJTCRG9QR.LARGE.jpg", "https://cdn.instructables.com/FEL/MIF6/JTCRG9T9/FELMIF6JTCRG9T9.LARGE.jpg", "https://cdn.instructables.com/FPI/ZW7F/JTCRG9HN/FPIZW7FJTCRG9HN.LARGE.jpg"], "step_title": "Step 5: Prepare PSP 2000 Joystick (OPTIONAL)"}, {"step": 6, "steps_text": "You will need 4x M3 x 6 mm screw, 3D printed joystick holder and Dupont female - female 4 wire cable 20 cm long.\nAssemble it together. You can protect connector with glue gun and glue female dupond connector to joystick 3D printed part. Later you can have issues with unplugging.\nAlso joystick is all naked, its not ideal for rainy and dusty environment (same for PSP2000 joystick).", "step_imgs": ["https://cdn.instructables.com/F38/0TNE/JTCRHCFY/F380TNEJTCRHCFY.LARGE.jpg", "https://cdn.instructables.com/F77/50R1/JTCRHCGF/F7750R1JTCRHCGF.LARGE.jpg"], "step_title": "Step 6: Prepare Joystick"}, {"step": 7, "steps_text": "Now you need to shorten servo cables.\nCut wires and crimp new dupont connector or use other way.\nIn case you want to crimp dupont, I am attaching some pictures, MagoArcade on youtube made good tutorial.\nSmall servo cable should have 155 mm (6 1/8inch) including connector.\nBig servo cable should have 115 mm (4 9/16 inch) including connector.\n\nFind middle rotation position on big servo and put red servo arm on it, same as it is on picture.\nTighten the screws with allen key.\nSmall servo gear:\nTake a 3D printer gear, super glue and small servo.\nDry try to fit gear on servo. It should be tight, probably you will need to clean a hole little bit.\nPut little bit super glue into gear hole and put it on servo. Let it rest for hour.\nIMPORTANT:\nGear have to be straight, not crooked, check it from more angles (see pictures).\nGear cant touch the servo, if the hole is big and gear is touching the servo, use some spacer when gluing (paper, thin cables). Otherwise it can stick onto the servo body.\nOnes you will glue gear on servo you cannot remove it.", "step_imgs": ["https://cdn.instructables.com/F2L/8EDG/JTCRGUBW/F2L8EDGJTCRGUBW.LARGE.jpg", "https://cdn.instructables.com/FU0/7C2X/JTCRGIAK/FU07C2XJTCRGIAK.LARGE.jpg", "https://cdn.instructables.com/FA5/E3X4/JTCRGINC/FA5E3X4JTCRGINC.LARGE.jpg", "https://cdn.instructables.com/FJ5/QJ3V/JTCRGJ6F/FJ5QJ3VJTCRGJ6F.LARGE.jpg", "https://cdn.instructables.com/FU3/2M8B/JTCRGL8G/FU32M8BJTCRGL8G.LARGE.jpg", "https://cdn.instructables.com/FT3/NJ1K/JTCRGLLX/FT3NJ1KJTCRGLLX.LARGE.jpg", "https://cdn.instructables.com/FNI/9XH1/JTCRGLW9/FNI9XH1JTCRGLW9.LARGE.jpg", "https://cdn.instructables.com/FPJ/5IAI/JTCRGM6X/FPJ5IAIJTCRGM6X.LARGE.jpg"], "step_title": "Step 7: Prepare Servos"}, {"step": 8, "steps_text": "As per first picture, connections goes from left to right:\nGND - black (big servo)\n+5V - red (big servo)\nSignal D3 - white (big servo)\nGND - brown (small servo)\n+5V - red (small servo)\nSignal D4 - yellow (small servo)\n+5V power supply (7V) - red (power supply)\nGND - brown (power supply)\nAnalog input signal A6 - purple (joystick)\nGND - grey (joystick)\nAnalog input signal A4 - white (joystick)\n+5V - black (joystick)\nWhile connecting servos and power supply is obvious, joystick X and Y might be different.\nI recommend to assemble all electronics and try movement directions (at this point you should have everything but power supply). Also the case if you left handed, left and right will be opposite. You can change the code or just twist joystick.\n\nSecond scheme picture is informative, inputs and outputs signals doesn't match.\nArduino upload code tutorial:\nhttps://www.arduino.cc/en/main/howto\n\nThere are two code options.\nFirst code keep returning original positions of servos.\nWith second code servos stay in set positions.\nFirst line in both codes is #include\nFirst code by:\nServos are returning to original positions\nCode by biomech75 on instructables.com\n\nSecond code\nServos stay in position.\nCode by Ali Hamza on maker.pro\nI have a problem with this code since I didn't figure out how to change servo direction. One servo goes opposite direction. If you can help me with this and share it would be awesome.", "step_imgs": ["https://cdn.instructables.com/FEC/U5FY/JTCRHM4D/FECU5FYJTCRHM4D.LARGE.jpg", "https://cdn.instructables.com/FC4/LZHF/JTCRHM5M/FC4LZHFJTCRHM5M.LARGE.jpg"], "step_title": "Step 8: Adruino Code and Scheme"}, {"step": 9, "steps_text": "IMPORTANT:\nBatteries 14500 look similar to AA but they have 3,7V instead of 1,5V.\nDo not use them where AA supposed to be. There is a physical protection, probably it won't work.\nPrepare battery case 2 x 1450 batteries.\nAfter modification you can use 2xAA battery case (I dont recommend this).\nCrimp 2 x female dupont connector, length is not really matter is up to you where you will store power.\nAbout 10 cm should be enough to store batteries in the bag in front of the bicycle.\nYou will connect it to another cable going from arduino board.\n3D printed parts:\nThinkiverse\nPinshape", "step_imgs": ["https://cdn.instructables.com/F89/KD9T/JTCRHFVS/F89KD9TJTCRHFVS.LARGE.jpg", "https://cdn.instructables.com/FX5/BCUP/JTCRHSM3/FX5BCUPJTCRHSM3.LARGE.jpg", "https://cdn.instructables.com/FW3/2FP9/JTCRHSP2/FW32FP9JTCRHSP2.LARGE.jpg"], "step_title": "Step 9: Final Preparations"}, {"step": 10, "steps_text": "You can see the final assembly on the video.\nThere are few changes.\nIt is better to put board in with USB connector on right side.\nWith dupont pins directing to the top. its better because you are not able accidentally unplug joystick and power.\nTake a time to put whole assembly and cables in.\nIn the end you can use textile sleeve or nylon cable wrap to protect wires.\nIn the next step I am planning to make headlight holder and gopro holder.\nHeadlight is lighter and in general have a stronger light than this flash light, also load on servos will be smaller.\nIf you have better ideas for mechanical and electronical designs and solutions, please share.\nThank you for your interest in Z-light.", "step_imgs": ["https://cdn.instructables.com/FWK/J7GE/JTCRIIE7/FWKJ7GEJTCRIIE7.LARGE.jpg", "https://cdn.instructables.com/FEW/ECM6/JTCRIIEY/FEWECM6JTCRIIEY.LARGE.jpg", "https://cdn.instructables.com/FYU/NQF8/JTCRIIG8/FYUNQF8JTCRIIG8.LARGE.jpg", "https://cdn.instructables.com/FVI/12RI/JTCRIIHU/FVI12RIJTCRIIHU.LARGE.jpg"], "step_title": "Step 10: Assembly"}], "channel": "3D Printing"}, {"category": "Technology", "description": "XIV Nixie Clock V1\nProject Date: December 2018 \u2013 March 2019\nWARNING: Nixie tubes require 180v to operate, this is a dangerous high voltage and you need to handle the tubes and the supporting circuitry with great caution.\nIf you would like to use Nixie styled tubes in your project, which are safer to handle and use, then consider the VFD type of tube, similar character style, and style of tube but these tubes only require 27v to operate.\nBACKGROUND\nTo understand the working of the VFD type and Cold Cathode type of Nixie tubes I would recommend the following excellent articles by Chris Woodford:\nhttps://www.explainthatstuff.com/how-nixie-tubes-w...\nhttps://www.explainthatstuff.com/how-vacuum-fluore...\nThis is my first Nixie styled clock I have constructed. The clock actually consists of two clocks, the first being a 6 x IN-18 tube clock which is mounted on the clock\u2019s top and displays both time and date. The second clock, this time based on 6 x IN-12A and 2 x IN-15A nixie tubes displays at the front of the clock and can display, time, date, pressure (with units and trend), temperature (both Centigrade and Fahrenheit) and, humidity (with units and trend). The time and date are separated with two single neon lamp-based separators, while only one of these lamps is displayed, to represent a decimal point, when the pressure, humidity or temperature is displayed. Both these clocks use \u201cDirect/Static Drive\u201d to power the displays and are based on two Arduino Mega 2560 boards. The fourteen tubes are driven by 12V to 170V DC to DC boost power supplies and 14 x K155 IC chips. The clock also powers two sets of Neon Lamps which switch off while the clock goes through its cathode cleaning cycle which happens at 19, 39 and 55 minutes past each hour. This cathode cleaning cycle consists of all six tubes displaying the digits 0 through 9 in sequence 6 times.\nIn addition the clock will sound a chime at 15, 30, 45 and 60 minutes. At the 60 minute chime the hour chime is also sounded. The chimes are standard MP3 files using a simple MP3 player controlled by the Arduino mega. In order to save on tube life all tubes are switched off automatically when the light level in the room dims to a predefined level, this is achieved using a LRD resistor located at the back of the clock. To help dissipate any heat build up both Arduino Mega ICs have copper heat fins attached and a 5V fan draws air out of the clock, cool air entering through a hole in the bottom plate.\nThe user can adjust the time, date, Chimes, and Chimes Volume using one of two 16x2 LCD displays, located at the back of the clock. The BME280 temperature, humidity, and pressure sensor is mounted on the back of the clock so as to not be affected by the clock's internal temperature.", "title": "XIV Nixie Clock", "url": "https://www.instructables.com/id/XIV-Nixie-Clock/", "steps": [{"step": 1, "steps_text": "1 2 x Arduino Mega 2560\n2 2 x DC to DC Step down Buck converter\n3 6 x IN-18 Nixie tubes NOS (manufactured in 1988, USSR)\n4 6 x IN-12A Nixie tubes NOS (manufactured in 1979, USSR)\n5 2 x In-15A Nixie tubes NOS (manufactured in 1981, USSR)\n6 2 x 12V to 180V boost DC-DC power supply\n7 Plastic stand offs to support components and secure to base board\n8 12v 1A DC power adapter\n9 14 x K155ID1 Nixie driver IC Chips NOS (74141 chips can also be used)\n10 14 x 16 pin IC CHIP carriers\n11 multi-coloured wire (2m per colour, 10 colours)\n12 1mm PCB female pins (70 required)\n13 4mm heat shrink cable\n14 2 x PCB board\n15 14 x 15K resistors, 4 x 100K resistors\n16 6 x Neon NE-2 lamps\n17 2 x LDR(Light Dependent Resistor) (optional senses light levels)\n18 2 x LCD 2605 with keypad, (only SELECT, UP, and DOWN buttons used)\n19 2 x Power adapter 2.5mm input plug\n20 2 x Two pole switch\n21 5V fan\n22 2 x Real Time Clock unit DS3231\n23 2 x Pressure, temperature, humidity unit BME180\n24 2 x Duel channel relay\n25 3W/ 8ohm speaker\n26 JQ6500 MP3 player", "step_imgs": ["https://cdn.instructables.com/FLI/JPOP/JT91R8Q8/FLIJPOPJT91R8Q8.LARGE.jpg", "https://cdn.instructables.com/FN8/S2PL/JT91R8Q9/FN8S2PLJT91R8Q9.LARGE.jpg", "https://cdn.instructables.com/F6W/N71A/JT91R8QB/F6WN71AJT91R8QB.LARGE.jpg", "https://cdn.instructables.com/FTW/PB27/JT91R8QE/FTWPB27JT91R8QE.LARGE.jpg", "https://cdn.instructables.com/FFW/9GAX/JT91R8Z2/FFW9GAXJT91R8Z2.LARGE.jpg", "https://cdn.instructables.com/F8W/YP64/JT91R8RL/F8WYP64JT91R8RL.LARGE.jpg", "https://cdn.instructables.com/FC6/P8G6/JT91R8QN/FC6P8G6JT91R8QN.LARGE.jpg", "https://cdn.instructables.com/FT8/G0E8/JT91R8QI/FT8G0E8JT91R8QI.LARGE.jpg"], "step_title": "Step 1: Equipment List"}, {"step": 2, "steps_text": "The clock\u2019s front display consists of 6 x IN-12A, 2 x IN-15A Nixie tubes, set within the wooden box that display the date, time (alternative time zone), humidity, pressure, and temperature in Centigrade or Fahrenheit. A further two IN-15A Nixie tubes that are located at either end of the 6 x IN-12A tubes display trend I.e. plus or minus, at the start of the display and either % or P symbols at the end of the display.\nInputs from the Arduino A,D,B, and C control the outputs from the BCD Decoder. Wires attracted to the BCD Decoder pins have \u201coutputs\u201d numbers beside these pins which refer to digits on the nixie tubes, so for example the wire attached to pin 1, output 8 is attached to the Nixie pin 4, which in turn will, if high, light the number \u201c8\u201d inside the Nixie tube.\nBCD DECODE NIXIE TUBE (IN-12A)\nPIN OUTPUT PIN DISPLAY\n1 8 4 8\n2 9 3 9\n8 2 10 2\n9 3 9 3\n10 7 5 7\n11 6 6 6\n13 4 8 4\n14 5 7 5\n15 1 11 1\n16 0 2 0\nThe above applies to IC chips 2 through 7, IC Chip 1 is special in that it controls the front \u201ctrend\u201d Nixie tube, while IC Chip 8 controls the rear \u201cunits\u201d Nixie tube. The \u201ctrend\u201d Nixie tube uses + and \u2013 while the characters % and P are used on the rear \u201cunits\u201d Nixie tube.\nSpecial Outputs IC CHIP 1 and 8\nBCD DECODE NIXIE TUBE\nPIN OUTPUT PIN DISPLAY\n1 - 4 - IN-15A\n2 + 5 +\n10 % 10 %\n11 P 3 P\nIn order to drive the K155di chip it is necessary to provide a binary value to the inputs A,D,B, and C. This is achieved by taking the digit to be displayed on the Nixie tube and breaking it down into its binary value:\ndigitalWrite(d, (value & 0x08) >> 3); // 0 \u2013 9 digit equals value\ndigitalWrite(c, (value & 0x04) >> 2);\ndigitalWrite(b, (value & 0x02) >> 1);\ndigitalWrite(a, value & 0x01);", "step_imgs": ["https://cdn.instructables.com/FYL/OHUP/JT91R8PS/FYLOHUPJT91R8PS.LARGE.jpg", "https://cdn.instructables.com/F76/V8NB/JT91R8QZ/F76V8NBJT91R8QZ.LARGE.jpg", "https://cdn.instructables.com/F6R/LCGB/JT91R8R4/F6RLCGBJT91R8R4.LARGE.jpg", "https://cdn.instructables.com/FWX/CXDS/JT91R8R2/FWXCXDSJT91R8R2.LARGE.jpg", "https://cdn.instructables.com/FK7/EW6K/JT91R8NA/FK7EW6KJT91R8NA.LARGE.jpg", "https://cdn.instructables.com/F44/8M76/JT91R8QY/F448M76JT91R8QY.LARGE.jpg", "https://cdn.instructables.com/FJA/6WKV/JT91R8QX/FJA6WKVJT91R8QX.LARGE.jpg", "https://cdn.instructables.com/F8A/LPPL/JT91R8N1/F8ALPPLJT91R8N1.LARGE.jpg", "https://cdn.instructables.com/F34/0BSC/JT91R8R8/F340BSCJT91R8R8.LARGE.jpg", "https://cdn.instructables.com/F9U/2FGD/JT91R8R9/F9U2FGDJT91R8R9.LARGE.jpg", "https://cdn.instructables.com/FP0/DYR6/JT91R8RR/FP0DYR6JT91R8RR.LARGE.jpg", "https://cdn.instructables.com/F9E/L9P3/JT91R8RA/F9EL9P3JT91R8RA.LARGE.jpg", "https://cdn.instructables.com/FIA/M2ZY/JT91R8RB/FIAM2ZYJT91R8RB.LARGE.jpg", "https://cdn.instructables.com/F61/VY6W/JT91R8N2/F61VY6WJT91R8N2.LARGE.jpg", "https://cdn.instructables.com/F2T/IAC6/JT91R8QS/F2TIAC6JT91R8QS.LARGE.jpg", "https://cdn.instructables.com/FAG/LT09/JT91R8QW/FAGLT09JT91R8QW.LARGE.jpg", "https://cdn.instructables.com/F46/4RV9/JT91R8QV/F464RV9JT91R8QV.LARGE.jpg", "https://cdn.instructables.com/F8M/J6RD/JT91R8N5/F8MJ6RDJT91R8N5.LARGE.jpg", "https://cdn.instructables.com/FE9/TOQK/JT91R8N6/FE9TOQKJT91R8N6.LARGE.jpg", "https://cdn.instructables.com/FQD/NXEA/JT91R8NC/FQDNXEAJT91R8NC.LARGE.jpg", "https://cdn.instructables.com/FXG/WGW8/JT91R8NS/FXGWGW8JT91R8NS.LARGE.jpg", "https://cdn.instructables.com/F9R/8KB2/JT91R8RQ/F9R8KB2JT91R8RQ.LARGE.jpg", "https://cdn.instructables.com/FHB/ZMA0/JT91R8RT/FHBZMA0JT91R8RT.LARGE.jpg", "https://cdn.instructables.com/FCW/RA5M/JT91R8RS/FCWRA5MJT91R8RS.LARGE.jpg", "https://cdn.instructables.com/F2K/G6PH/JT91R91D/F2KG6PHJT91R91D.LARGE.jpg", "https://cdn.instructables.com/FQ2/13CP/JT91R8R5/FQ213CPJT91R8R5.LARGE.jpg", "https://cdn.instructables.com/FBR/184L/JT91XD5H/FBR184LJT91XD5H.LARGE.jpg"], "step_title": "Step 2: Construction"}, {"step": 3, "steps_text": "Each Nixie Tube has its own pinouts, each of the above datasheets shows these pinouts. Where the tube is supplied with solid pins I used PCB female pins to attach to these pins. Each PCB pin was soldered to its coloured wire and then heat shrink was applied.", "step_imgs": ["https://cdn.instructables.com/F00/PH7F/JT91R8RF/F00PH7FJT91R8RF.LARGE.jpg", "https://cdn.instructables.com/FGV/AIC6/JT91R8RI/FGVAIC6JT91R8RI.LARGE.jpg", "https://cdn.instructables.com/FT7/6RWR/JT91R8QL/FT76RWRJT91R8QL.LARGE.jpg", "https://cdn.instructables.com/F60/MU6L/JT91R8QK/F60MU6LJT91R8QK.LARGE.jpg", "https://cdn.instructables.com/FFF/HOQK/JT91R8RE/FFFHOQKJT91R8RE.LARGE.jpg", "https://cdn.instructables.com/FPT/MUZ4/JT91R8QR/FPTMUZ4JT91R8QR.LARGE.jpg", "https://cdn.instructables.com/FNU/FE08/JT91R8QP/FNUFE08JT91R8QP.LARGE.jpg"], "step_title": "Step 3: Nixie Tube Pinouts"}, {"step": 4, "steps_text": "IN-15A\n1 = Anode / 3 = P / 4 = - / 5 = + / 10 = %\nIN-12A\n1 = Anode / 2 = 0 / 3 = 9 / 4 = 8 / 5 = 7 / 6 = 6 / 7 = 5 / 8 = 4\n9 = 3 / 10 = 2 / 11 = 1\nAll Anodes are connected to 170v via a 15K resistor in series. The Neons are controlled directly from the Arduino Mega with 100K resistors in series.\nLogical Driver\n1 23 45 67 8 Tubes\n+/- DD N1 MM N2 YY %/P Display\nChips 1 through 8 \u2013 Controls tubes 1 through 8, 8 chips in total.\nPin Action\n1 Tube 1, number 0\n2 Tube 1, number 1\n3 Tube 1, number 2\n4 Tube 1, number 3\n5 Tube 1, number 4\n6 Tube 1, number 5\n7 Tube 1, number 6\n8 Tube 1, number 7\n9 Tube 1, number 8\n0 Tube 1, number 9\nN1 and N2 are both lit when the date and time are displayed. Only N2 is lit when temperature, humidity, and pressure are displayed, and the plus or minus tube is only displayed while these three are displayed. This is also the same for tube 8 where P is displayed while pressure is being displayed and % while the humidity is being displayed.\nThe six IN-12A and two IN-15A Nixie tubes have 11 cathode pins and 1 Anode pin all of which are soldered to 16AWG wire which in turn is soldered to a 1mm DuPont female pin. Both ends of the wire are heat shrink wrapped. Each wire is a different colour with the last three wire colours a repeat of the first three wire colours but having an extra black heat shrink wrapping added at both ends. This solder, wire, heat shrink is repeated for all six IN-12A Nixie tubes. Two cathode pins and the anode are connected using this method for the two IN-15A Nixie tubes. The DuPont female pins attach to individual header pins which in turn attach to the 10 output pins of the K155 BCD chip. Prewired DuPont male to female cables are attached to headers that are attached to the four input pins of the K155iD BCD chip and also attached to the output female connectors of the Arduino Mega 2560. The front Arduino Mega based clock also has neon NE-2 lamps however these form two dots between the date digits or a single decimal point when the temperature, pressure, or humidity are displayed. In order for this neon lamp to work off the 170V Nixie tube supply it is necessary to add a voltage divider, to reduce the voltage down to 130V to power these Neon Lamps.\nWhere Vin is 148V, Vout is 130V, R1 is 68K ohms, and R2 is 9K ohms. To control these two neon lamps the Arduino Mega uses Pins 11 and 12 as inputs to a two-channel relay which when enabled will provide a ground for each of the Neon lamps.", "step_imgs": ["https://cdn.instructables.com/FO1/EF1I/JT91R8MX/FO1EF1IJT91R8MX.LARGE.jpg", "https://cdn.instructables.com/FA7/3V4A/JT91R8ZK/FA73V4AJT91R8ZK.LARGE.jpg", "https://cdn.instructables.com/FQ3/YSBG/JT91R901/FQ3YSBGJT91R901.LARGE.jpg", "https://cdn.instructables.com/F7N/9IDB/JT91R8MZ/F7N9IDBJT91R8MZ.LARGE.jpg", "https://cdn.instructables.com/FGT/KI3P/JT91R8RU/FGTKI3PJT91R8RU.LARGE.jpg", "https://cdn.instructables.com/FG0/3QWB/JT91R8O8/FG03QWBJT91R8O8.LARGE.jpg", "https://cdn.instructables.com/F8Y/ZVP9/JT91R8PQ/F8YZVP9JT91R8PQ.LARGE.jpg", "https://cdn.instructables.com/FSN/H46M/JT91R8UM/FSNH46MJT91R8UM.LARGE.jpg", "https://cdn.instructables.com/FVC/1IFO/JT91R8XR/FVC1IFOJT91R8XR.LARGE.jpg", "https://cdn.instructables.com/FGS/X34P/JT91R8Y7/FGSX34PJT91R8Y7.LARGE.jpg", "https://cdn.instructables.com/F7X/54VY/JT91R8YN/F7X54VYJT91R8YN.LARGE.jpg", "https://cdn.instructables.com/FMJ/G5IR/JT91R90G/FMJG5IRJT91R90G.LARGE.jpg", "https://cdn.instructables.com/FCU/UNXS/JT91R90Y/FCUUNXSJT91R90Y.LARGE.jpg"], "step_title": "Step 4: Pin Connection"}, {"step": 5, "steps_text": "The attached Fritzing Diagrams show the basic working layout of each clock. I have not included many of the neutral wires as this would further complicate the diagram.", "step_imgs": [], "step_title": "Step 5: Fritzing Diagrams"}, {"step": 6, "steps_text": "ARDUINO SOFTWARE\nThe software consists of a simple date, time, and temperature format option, selected by pressing the SELECT key. The UP and DOWN keys adjust the displayed values. The attached LCD screen displays in parallel what is displayed on the Nixie tubes. The Arduino software runs on the Arduino Mega 2560 board with attached BME180 temperature, pressure, and humidity unit. In addition, a DS3231 Real Time Clock and 5v fan are also attached. The primary role of the software is to convert the date, time, pressure, humidity, and temperature character strings into sets of individual characters. Each character is then further converted into a set of four binary as inputs to the K155 IC chips. These inputs A, D, B, and C are either high or low, when applied to the K155 IC CHIP the chip generates a 10-bit output which is used to drive its attached Nixie tube. The Nixie tube anode is supplied with 170V DC and connected in series with a 15K resistor, while each of the remaining 10 Cathode connections are attached to the K155 outputs.\nAt 19, 39, and 55 minutes past the hour all eight Nixie tubes go through a simple routine to reduce cathode poisoning, this consists of each tube displaying an increasing digit value from 0 to 9, this routine takes about 15 seconds to complete. A light detecting resistor has been installed so the clock displays will switch off while the room is dark.\nCHIMES\nIt was decided as a last-minute addition to add a chime feature to the clock. This would only apply to the IN-18 clock. The CHIMES are 16 pre-recorded chime sound MP3 files held on a Mini MP3 player add-on board. The board is powered with 5v and connected to a 5W speaker. Its control is via Pins 0 and 1 on the Arduino Mega board. Further it was necessary to add a \u201cchime\u201d function to the clocks software in order that it would chime the quarter hours and each hour. In addition, a CHIMES Yes/No option and a volume control where added to the Clock adjustment menu.", "step_imgs": [], "step_title": "Step 6: Arduino Software"}, {"step": 7, "steps_text": "REVIEW\nThis was not an easy project, over 150 individual wires to solder, heat shrink wrap, and check, plus ensuring that each was correctly attached to its IC CHIP or header pin. Caution was the watchword when handling any wiring due to the 180v DC supply to the Nixie tubes. The supply and use of the NOS stock Nixie tubes and K155 IC Chips was no problem. All purchased via eBay and coming from the Ukraine, long delivery time 4-6 weeks but well packaged and suppliers very helpful. Quality of soldering was important as was use of a rigid wire colouring scheme.\nWHATS NEXT\nThis clock is based on the Static or Direct method of driving the Nixie tubes, that is to say one BCD output, powers one wire which in turn lights a single digit within the tube. While this method works, I would like to move onto Multiplexing which in turn leads to a PCB based clock rather than numerous wires and potential failure points. While building this clock I took the opportunity to build two other Clocks both of which provided platforms for understanding the building process. The three attached photos show these two clocks the first a Kit based unit (IN-8-2 tubes) and the second a scratch-built unit (IN-14 tubes), basically a simplified version of the XIV clock. The third photo shows my next project a breadboard development of a Multiplex clock based on an USSR manufactured IV-27M VFD tube made in 1985.", "step_imgs": ["https://cdn.instructables.com/FPX/ASGA/JT91R8JY/FPXASGAJT91R8JY.LARGE.jpg", "https://cdn.instructables.com/F40/W6U1/JT91R8JZ/F40W6U1JT91R8JZ.LARGE.jpg", "https://cdn.instructables.com/FNX/76AU/JT91R8K0/FNX76AUJT91R8K0.LARGE.jpg"], "step_title": "Step 7: Review and Whats Next"}], "channel": "Clocks"}, {"category": "Technology", "description": "Hi Makers,\nWe are in the joy of making a project that has been in our mind for a long time and sharing with you. Smart Coffee Table. Because this table is really smart. It illuminates your environment according to the weight of your drink.", "title": "Smart Coffee Table", "url": "https://www.instructables.com/id/Smart-Coffee-Table/", "steps": [{"step": 1, "steps_text": "We are in the joy of making a project that has been in our mind for a long time and sharing with you. Smart Coffee Table. Because this table is really smart. It illuminates your environment according to the weight of your drink.\nHow Does? We have used a weight sensor on the smart coffee table. Thanks to this sensor, we can adjust the desired color to the desired weight to the RGB strip led that we have connected to the Arduino outputs.\nIf the cup is empty, the red color is lit.\nBetween 0-50 gr, the yellow color is lit.\nBetween 50-100 gr, the green color is lit.\nBetween 100-150 gr, the blue color is lit.\n150 and higher, close to white color.\nAnd we used epoxy again in this project. Thus, the lights from RGB are better spread to the environment.", "step_imgs": ["https://cdn.instructables.com/FT8/FGY7/JTCRF5UW/FT8FGY7JTCRF5UW.LARGE.jpg", "https://cdn.instructables.com/FAD/KMMC/JTCRF5V0/FADKMMCJTCRF5V0.LARGE.jpg"], "step_title": "Step 1: Summary"}, {"step": 2, "steps_text": "If you decided to make this project or you are wondering, have to have some materials and equipments.\nWe used 4 groups in this project ;\n- Elektronics\n- 3D Printed Parts,\n- Epoxy Resin\n- Others", "step_imgs": ["https://cdn.instructables.com/FHF/S4ZQ/JTCRF6CA/FHFS4ZQJTCRF6CA.LARGE.jpg"], "step_title": "Step 2: Equipment & Materials"}, {"step": 3, "steps_text": "You will find below list:\n- Arduino Nano\n- HX711 Weight Sensor\n- RGB Led Strip\n- BD135 ( * 3)\n- 10K (* 3)\n- On - Off Switch", "step_imgs": ["https://cdn.instructables.com/FV5/APBU/JTCRF6KK/FV5APBUJTCRF6KK.LARGE.jpg", "https://cdn.instructables.com/F3I/95GI/JTCRF6Y8/F3I95GIJTCRF6Y8.LARGE.jpg", "https://cdn.instructables.com/FWF/WYBZ/JTCRF6XJ/FWFWYBZJTCRF6XJ.LARGE.jpg", "https://cdn.instructables.com/FYH/9J57/JTCRF6R0/FYH9J57JTCRF6R0.LARGE.jpg", "https://cdn.instructables.com/FUL/2FQX/JTCRF6R5/FUL2FQXJTCRF6R5.LARGE.jpg", "https://cdn.instructables.com/F9S/CQ7D/JTCRF7O2/F9SCQ7DJTCRF7O2.LARGE.jpg"], "step_title": "Step 3: Electronics"}, {"step": 4, "steps_text": "You will find list below;\n- Main Body\n- Cup Holder\n- Battery Case\n- Shoes (* 8)\n- Cup Holder Support", "step_imgs": ["https://cdn.instructables.com/FXZ/91IQ/JTCRF8PH/FXZ91IQJTCRF8PH.LARGE.jpg", "https://cdn.instructables.com/FBJ/XOKM/JTCRF8PK/FBJXOKMJTCRF8PK.LARGE.jpg", "https://cdn.instructables.com/FA6/KOJK/JTCRF8PN/FA6KOJKJTCRF8PN.LARGE.jpg", "https://cdn.instructables.com/FHC/3YB6/JTCRF8PS/FHC3YB6JTCRF8PS.LARGE.jpg", "https://cdn.instructables.com/FO0/RMVJ/JTCRF8QM/FO0RMVJJTCRF8QM.LARGE.jpg", "https://cdn.instructables.com/FRU/W4UH/JTCRF8QT/FRUW4UHJTCRF8QT.LARGE.jpg", "https://cdn.instructables.com/F10/FE0V/JTCRF8XC/F10FE0VJTCRF8XC.LARGE.jpg", "https://cdn.instructables.com/FXZ/XT15/JTCRFCZK/FXZXT15JTCRFCZK.LARGE.jpg"], "step_title": "Step 4: 3D Printed Parts"}, {"step": 5, "steps_text": "We used epoxy resin in this project for good spreading.", "step_imgs": ["https://cdn.instructables.com/FXO/RULQ/JTCRF988/FXORULQJTCRF988.LARGE.jpg"], "step_title": "Step 5: Epoxy Resin"}, {"step": 6, "steps_text": "we used some materials too.\n- Wooden (* 4)\n- A glass\n- Glue", "step_imgs": ["https://cdn.instructables.com/F9S/UJFI/JTCRFAL3/F9SUJFIJTCRFAL3.LARGE.jpg", "https://cdn.instructables.com/FW7/EBLL/JTCRFBAI/FW7EBLLJTCRFBAI.LARGE.jpg", "https://cdn.instructables.com/FE2/P6RF/JTCRFBGW/FE2P6RFJTCRFBGW.LARGE.jpg"], "step_title": "Step 6: Others"}, {"step": 7, "steps_text": "A RGB led have 4 inpusts. Red , Green , Blue and +12 V.\nWe added wires to this inputs. And than put it to 3d printed main body like that pictures.", "step_imgs": ["https://cdn.instructables.com/FJP/FCYT/JTCRFFUB/FJPFCYTJTCRFFUB.LARGE.jpg", "https://cdn.instructables.com/FLP/AXII/JTCRFG0S/FLPAXIIJTCRFG0S.LARGE.jpg", "https://cdn.instructables.com/F3Q/HPF7/JTCRFGEG/F3QHPF7JTCRFGEG.LARGE.jpg", "https://cdn.instructables.com/F3M/ZVAS/JTCRFGKT/F3MZVASJTCRFGKT.LARGE.jpg", "https://cdn.instructables.com/FWZ/1R7Z/JTCRFGKW/FWZ1R7ZJTCRFGKW.LARGE.jpg", "https://cdn.instructables.com/FZU/TVK0/JTCRFGRG/FZUTVK0JTCRFGRG.LARGE.jpg", "https://cdn.instructables.com/F1R/SPVF/JTCRFGYE/F1RSPVFJTCRFGYE.LARGE.jpg"], "step_title": "Step 7: RGB LED Assemble"}, {"step": 8, "steps_text": "Epoxy resin is known for its strong adhesive qualities, making it a versatile product in many industries. It offers resistance to heat and chemical applications, making it an ideal product for anyone needing a strong hold under pressure. Epoxy resin is also a durable product which can be used with various materials, including: wood, fabric, glass, china or metal.\nif you use X gr hardener, use 4X gr resin. this rate recommended.\nmix them for 6-8 min. and will transparent.\nIf you have epoxy now, we will pour it to main body. As you can see in pictures, we are pouring slowly because it will be bubbles.\nPlease when you pour , wait 24-36 hours for drying. And than you have to broke some parts. And finaly you will see like pics a transparent view. and also you can sand ...", "step_imgs": ["https://cdn.instructables.com/F5C/TID3/JTCRFK1O/F5CTID3JTCRFK1O.LARGE.jpg", "https://cdn.instructables.com/FHE/HFMW/JTCRFKF8/FHEHFMWJTCRFKF8.LARGE.jpg", "https://cdn.instructables.com/FUY/C9Q7/JTCRFKS7/FUYC9Q7JTCRFKS7.LARGE.jpg", "https://cdn.instructables.com/FN1/TH28/JTCRFKSZ/FN1TH28JTCRFKSZ.LARGE.jpg", "https://cdn.instructables.com/F5X/R0FS/JTCRG80S/F5XR0FSJTCRG80S.LARGE.jpg", "https://cdn.instructables.com/FC4/W614/JTCRG821/FC4W614JTCRG821.LARGE.jpg", "https://cdn.instructables.com/F4S/9HTC/JTCRG82S/F4S9HTCJTCRG82S.LARGE.jpg", "https://cdn.instructables.com/F1J/9B4E/JTCRG85B/F1J9B4EJTCRG85B.LARGE.jpg", "https://cdn.instructables.com/F43/MVEA/JTCRG85T/F43MVEAJTCRG85T.LARGE.jpg", "https://cdn.instructables.com/FNO/6I6L/JTCRG86B/FNO6I6LJTCRG86B.LARGE.jpg", "https://cdn.instructables.com/F8N/W0B6/JTCRG881/F8NW0B6JTCRG881.LARGE.jpg", "https://cdn.instructables.com/F9N/QSNM/JTCRG89Z/F9NQSNMJTCRG89Z.LARGE.jpg", "https://cdn.instructables.com/F5E/YRB8/JTCRG8AV/F5EYRB8JTCRG8AV.LARGE.jpg", "https://cdn.instructables.com/FGE/XVQ0/JTCRG8F4/FGEXVQ0JTCRG8F4.LARGE.jpg"], "step_title": "Step 8: Making Epoxy & Pouring"}, {"step": 9, "steps_text": "We assemle electronic equipments to a pertinax. We use BD135 and 10 K resistors for RGB LED drive outputs. And than we combined with Arduino nano and HX711 weight sensor module.", "step_imgs": ["https://cdn.instructables.com/FIM/2CGP/JTCRGB9D/FIM2CGPJTCRGB9D.LARGE.jpg", "https://cdn.instructables.com/FLC/RWS2/JTCRGBBC/FLCRWS2JTCRGBBC.LARGE.jpg", "https://cdn.instructables.com/F8O/U65R/JTCRGBCQ/F8OU65RJTCRGBCQ.LARGE.jpg", "https://cdn.instructables.com/F1T/BOTU/JTCRGBGJ/F1TBOTUJTCRGBGJ.LARGE.jpg", "https://cdn.instructables.com/FV2/WP60/JTCRGBH9/FV2WP60JTCRGBH9.LARGE.jpg", "https://cdn.instructables.com/FQG/DZNV/JTCRGBK0/FQGDZNVJTCRGBK0.LARGE.jpg", "https://cdn.instructables.com/FRB/IWZ1/JTCRGBOE/FRBIWZ1JTCRGBOE.LARGE.jpg", "https://cdn.instructables.com/FUZ/W7ZN/JTCRGBQC/FUZW7ZNJTCRGBQC.LARGE.jpg", "https://cdn.instructables.com/FW0/59W2/JTCRGE6C/FW059W2JTCRGE6C.LARGE.jpg", "https://cdn.instructables.com/FLV/J1GK/JTCRGE73/FLVJ1GKJTCRGE73.LARGE.jpg", "https://cdn.instructables.com/F3K/TAB4/JTCRGEBM/F3KTAB4JTCRGEBM.LARGE.jpg", "https://cdn.instructables.com/FKM/HQJO/JTCRGELR/FKMHQJOJTCRGELR.LARGE.jpg", "https://cdn.instructables.com/F0X/6QSL/JTCRGEN7/F0X6QSLJTCRGEN7.LARGE.jpg", "https://cdn.instructables.com/F8Y/HKDD/JTCRGEUZ/F8YHKDDJTCRGEUZ.LARGE.jpg", "https://cdn.instructables.com/FRA/9BXU/JTCRGEWI/FRA9BXUJTCRGEWI.LARGE.jpg"], "step_title": "Step 9: Circuit Assemble"}, {"step": 10, "steps_text": "Based on Avia Semiconductor\u2019s patented technology, HX711 is a precision 24-bit analogue to-digital converter (ADC) designed for weigh scales and industrial control applications to interface directly with a bridge sensor.\nWe added a support part for up lavel. We put on it a glass. As you can see in pics, balanced.", "step_imgs": ["https://cdn.instructables.com/FK3/GQ6C/JTCRGJ6E/FK3GQ6CJTCRGJ6E.LARGE.jpg", "https://cdn.instructables.com/FTO/8384/JTCRGJ6K/FTO8384JTCRGJ6K.LARGE.jpg", "https://cdn.instructables.com/FFF/KTX0/JTCRGJCY/FFFKTX0JTCRGJCY.LARGE.jpg", "https://cdn.instructables.com/FMT/LC8Y/JTCRGJJC/FMTLC8YJTCRGJJC.LARGE.jpg", "https://cdn.instructables.com/FW4/GPI5/JTCRGJSB/FW4GPI5JTCRGJSB.LARGE.jpg", "https://cdn.instructables.com/FBX/HJ4N/JTCRHU5R/FBXHJ4NJTCRHU5R.LARGE.jpg", "https://cdn.instructables.com/F3K/ZXS6/JTCRHU75/F3KZXS6JTCRHU75.LARGE.jpg", "https://cdn.instructables.com/FM4/1MV3/JTCRHUAR/FM41MV3JTCRHUAR.LARGE.jpg", "https://cdn.instructables.com/FQY/SVLL/JTCRHUCY/FQYSVLLJTCRHUCY.LARGE.jpg", "https://cdn.instructables.com/FEP/Z53Y/JTCRHUDL/FEPZ53YJTCRHUDL.LARGE.jpg"], "step_title": "Step 10: HX711 Weight Sensor Assemble"}, {"step": 11, "steps_text": "we put all crcuits in it. So you see in pics. And now going to LEGS", "step_imgs": ["https://cdn.instructables.com/FT3/W9SC/JTCRHVI4/FT3W9SCJTCRHVI4.LARGE.jpg", "https://cdn.instructables.com/FKG/1JFE/JTCRHVJA/FKG1JFEJTCRHVJA.LARGE.jpg", "https://cdn.instructables.com/FGB/N7W0/JTCRHVL2/FGBN7W0JTCRHVL2.LARGE.jpg"], "step_title": "Step 11: Last Touches on Main Body"}, {"step": 12, "steps_text": "And now you are in last step about project. Legs. We are using wood and shoes for legs These are easy and simple.", "step_imgs": ["https://cdn.instructables.com/FPQ/2XGM/JTCRHWOS/FPQ2XGMJTCRHWOS.LARGE.jpg", "https://cdn.instructables.com/FPO/GLAG/JTCRHWR6/FPOGLAGJTCRHWR6.LARGE.jpg", "https://cdn.instructables.com/FD2/NNY9/JTCRHWWW/FD2NNY9JTCRHWWW.LARGE.jpg", "https://cdn.instructables.com/F37/T9G6/JTCRHWY7/F37T9G6JTCRHWY7.LARGE.jpg", "https://cdn.instructables.com/FC1/1N4Q/JTCRHX0R/FC11N4QJTCRHX0R.LARGE.jpg", "https://cdn.instructables.com/FON/HC9B/JTCRHX1V/FONHC9BJTCRHX1V.LARGE.jpg", "https://cdn.instructables.com/FJ0/HEUS/JTCRHX7A/FJ0HEUSJTCRHX7A.LARGE.jpg", "https://cdn.instructables.com/FGQ/CJUW/JTCRHXCG/FGQCJUWJTCRHXCG.LARGE.jpg", "https://cdn.instructables.com/FIM/DA93/JTCRHXDK/FIMDA93JTCRHXDK.LARGE.jpg", "https://cdn.instructables.com/FU7/FAGO/JTCRHXDN/FU7FAGOJTCRHXDN.LARGE.jpg"], "step_title": "Step 12: Legs Assemble"}, {"step": 13, "steps_text": "Project is over. Now lets begin show....\nThanks for patience....\nBest Regards....", "step_imgs": ["https://cdn.instructables.com/FZX/A582/JTCRHYJ6/FZXA582JTCRHYJ6.LARGE.jpg", "https://cdn.instructables.com/FW1/O8I2/JTCRHYGH/FW1O8I2JTCRHYGH.LARGE.jpg", "https://cdn.instructables.com/FHR/Y1XY/JTCRHYH9/FHRY1XYJTCRHYH9.LARGE.jpg", "https://cdn.instructables.com/FGD/IA7I/JTCRHYHA/FGDIA7IJTCRHYHA.LARGE.jpg", "https://cdn.instructables.com/F0G/Q2Z7/JTCRHYHE/F0GQ2Z7JTCRHYHE.LARGE.jpg", "https://cdn.instructables.com/FY2/DMIH/JTCRHYHG/FY2DMIHJTCRHYHG.LARGE.jpg", "https://cdn.instructables.com/FIZ/ZDFX/JTCRHYHI/FIZZDFXJTCRHYHI.LARGE.jpg", "https://cdn.instructables.com/FVF/R5LZ/JTCRHYI7/FVFR5LZJTCRHYI7.LARGE.jpg", "https://cdn.instructables.com/F7R/SFNA/JTCRHYI8/F7RSFNAJTCRHYI8.LARGE.jpg", "https://cdn.instructables.com/F0H/P58J/JTCRHYIB/F0HP58JJTCRHYIB.LARGE.jpg", "https://cdn.instructables.com/FG8/PJ2E/JTCRHYJ3/FG8PJ2EJTCRHYJ3.LARGE.jpg", "https://cdn.instructables.com/FWM/VPQ3/JTCRHYJ4/FWMVPQ3JTCRHYJ4.LARGE.jpg", "https://cdn.instructables.com/FLH/M39Z/JTCRHYJ5/FLHM39ZJTCRHYJ5.LARGE.jpg", "https://cdn.instructables.com/F9C/G1GS/JTCRHYJ7/F9CG1GSJTCRHYJ7.LARGE.jpg"], "step_title": "Step 13: Finally"}, {"step": 14, "steps_text": "You can find below \" which model we used \"\nWeighing Pressure Sensor: https://bit.ly/2Huz49Z\nArduino Uno: https://bit.ly/2HwZRlK\nRGB Led Strip: https://bit.ly/2OcXmWx", "step_imgs": ["https://cdn.instructables.com/FKF/1XTJ/JTCRHZ8N/FKF1XTJJTCRHZ8N.LARGE.jpg", "https://cdn.instructables.com/FR3/AOFI/JTCRHZ8O/FR3AOFIJTCRHZ8O.LARGE.jpg"], "step_title": "Step 14: Files"}], "channel": "Arduino"}, {"category": "Technology", "description": "For bedroom rockers like me, there is nothing worse than noise complaints. On the other hand, it is a shame to have a 50W amplifier hooked to a load dissipating almost everything in heat. Therefore I tried to build a high gain preamp, based on a famous mesa amplifier using some subminiature tubes for ultra low output.", "title": "An Ultra Low Wattage, High Gain Tube Amplifier", "url": "https://www.instructables.com/id/High-Gain-Subminiature-Amplifier/", "steps": [{"step": 1, "steps_text": "This instructables will be structures as:\nCircuit overview: The amplifier\nCircuit overview: The SMPS\nParts list\nThermal transfer\nMasking\nEtching\nFinishing\nAdding sockets\nAssembling the boards\nAdjusting the trimpots\nMounting everything inside the enclosure\nFinal result and Soundcheck\nThere are some tools required to build this amplifier:\nHand drill, with different drill bits (in case you want to drill the PCB with a hand drill you need a 0.8-1 mm drill bit, not normally found in kits).\nSoldering iron\nClothes iron\nMultimeter\nSanding files\nAccess to a toner printer\nPlastic box for etching\nAnd some materials\nSanding paper (200, 400, 600, 1200)\nSpray paint (black, clear)\nPCB Coating spray\nFerric Chloride Etching Solution\nSolder", "step_imgs": ["https://cdn.instructables.com/FX8/FR8F/JT4TR8SB/FX8FR8FJT4TR8SB.LARGE.jpg"], "step_title": "Step 1: Overview, Tools and Materials"}, {"step": 2, "steps_text": "Subminiature tubes for batteries\nFor this project I used 5678 and 5672 tubes. They were used in portable battery radios, where filament current was a problem. This tubes only require 50mA for their filaments, making them way more efficient than the 12AX7. This keeps the current consumption low, requiring a smaller power supply. In this case I wanted to power them with a 9v 1A power supply, as commonly used with guitar pedals.\nThe 5678 tube has a mu of roughly 23, which makes it a low gain tube in comparison with the 12AX7, but maybe with some tweaks even this could be enough. High gain amplifiers are known to have a lot of filtering between stages, where almost the majority of the signal is shorted to ground. There may be some air to play with.\nThe 5672, on the other hand, has a mu of 10, but was mostly used as a power tube in hearing aid devices, and was already used in some other subminiature amplifiers (Murder one and Vibratone, from Frequencycentral). It can produce up to 65mW clean...ish. Don't be scared with the low wattage, it's still pretty loud when distorted! The datasheet specifies a 20k output transformer for this tube.\nAs in previous builds, the 22921 reverb transformer will be used.\nBiasing\nOne of the difficulties is to bias these tubes without using different batteries, since they have direct heated cathodes. I did not want to make this more complicated, so I had to use a fixed bias configuration. This, on the other hand, allowed the use of the filaments in series, reducing the total filament consumption. With 6 tubes, each dropping 1.25V, I got pretty close to the 9V of the power supply, it just required a small resistor, which also improved the bias of the first stage. This means the total filament current is only 50mA!\nPretty good for a pedal power supply.\nFor it to work, some stages have a trimpot to adjust the desired bias. The bias is calculated as the difference between the voltage at the negative side of the filament (f-)and the grid of the tube. The trimpot adjusts the DC voltage at the grid of the tube, allowing the different bias configurations and is bypassed by a large capacitor, working as a short to ground for the signal.\nThe third stage, for example, is biased close to the cut-off point of the tube at -1.8V, achieved as the difference between f- (pin 3) at roughly 3.75V and the grid, at 1.95V. This stage emulates the cold clipping stage found in high gain amplifiers, such as the soldano or the dual rectifier. The 12AX7 in a dual rectifier uses a 39k resistor to achieve this. The other stages are almost center biased, at approximately 1.25V.", "step_imgs": ["https://cdn.instructables.com/FXF/ZXGG/JT4TR1WX/FXFZXGGJT4TR1WX.LARGE.jpg"], "step_title": "Step 2: Circuit Overview: the Amplifier"}, {"step": 3, "steps_text": "High voltage supply\nRegarding the plate voltage, these tubes run ideally with plate voltages at 67.5V, but also worked with 90V or 45V batteries. Those batteries were huge! They are also difficult to come by and expensive. That's why I opted for a switched mode power supply (SMPS) instead. With the SMPS I can boost the 9V to 70V and add some massive filtering before the output transformer.\nThe circuit used in this instructables is based on the 555 chip, successfully used in previous builds.", "step_imgs": ["https://cdn.instructables.com/FO6/W5FN/JT4TR2OS/FO6W5FNJT4TR2OS.LARGE.jpg"], "step_title": "Step 3: Circuit Overview: the SMPS"}, {"step": 4, "steps_text": "Here you have a summary of the necessary parts:\nMainboard\nC1 22nF/100V__________R1 1M_______________V1 5678\nC2 2.2nF/50V__________ R2 33k_______________V2 5678\nC3 10uF/100V__________R3 220k______________V3 5678\nC4 47nF/100V__________R4 2.2M______________V4 5678\nC5 22pF/50V___________R5 520k______________V5 5678\nC6 1nF/100V___________R6 470k______________V6 5672\nC7 10uF/100V__________R7 22k_______________TREBBLE 250k Linear 9 mm\nC8 22nF/100V__________R8 100k______________MID 50k Linear 9 mm\nC9 10uF/100V__________R9 220k______________BASS 250k Linear 9 mm\nC10 100nF/100V________R10 470k_____________GAIN 250k Log/Audio 9 mm\nC11 22nF/100V_________R11 80k______________ PRESENCE 100k Linear 9 mm\nC12 470pF/50V_________R12 100k_____________VOLUME 1M Log/Audio 9 mm\nC13 10nF/50V__________R13 15k______________B1 10k trimpot\nC14 22nF/50V__________R14 330k_____________B2 50k trimpot\nC15 680pF/50V_________R15 220k_____________B4 50k trimpot\nC16 2.2nF/50V_________ R16 100k_____________SW1 micro DPDT\nC17 30pF/50V__________R17 80k______________J1 6.35 mm Mono jack\nC18 220uF/16V_________R18 50k______________J2 DC Jack\nC19 220uF/16V_________R19 470k_____________J3 6.35 mm Mono-switched jack\nC20 220uF/16V_________R20 50k______________SW2 SPDT\nC21 220uF/16V_________R21 100k_____________LED 3 mm\nC22 100uF/16V_________R22 22k______________3 mm LED holder\nC23 100uF/16V_________R23 15R/25R\nC24 220uF/16V_________R24 15k\nC25 10uF/100V_________R25 100R\nC26 10uF/100V_________R26 1.8k\nC27 220uF/16V_________R27 1k\nC28 100uF/16V_________R28 10k\nC29 47nF/100V_________R29 2.7k (LED resistor, adjust for brightness)\nC30 22nF/100V_________R30 1.5k\nSpecial attention to the capacitor voltage rating. The high voltage circuit requires 100V capacitors, the signal path after the coupling capacitors can use lower values, in this case I used 50V or 100V since the film capacitors have the same pin spacing. The filaments need to be decoupled, but since the highest voltage on the filaments is 9V a 16V eletrolytic capacitor is on the safe side and way smaller than a 100V one. Resistors can be of the 1/4W type.\n555 SMPS\nC1 330uF/16V__________R1 56k______________IC1 LM555N\nC2 2.2nF/50V__________ R2 10k______________L1 100uH/3A\nC3 100pF/50V__________R3 1k_______________Q1 IRF644\nC4 4.7uF/250V_________ R4 470R____________ VR1 1k\nR5 150k_______________D1 UF4004 or ES2G (ultra fast)\nR9 2.2k\nAttention to the switching diode! It must be of the ultra fast type, otherwise it won't work. For the SMPS low ESR capacitors are also desired. In case a normal 4.7uF/250V capacitor is used an additional ceramic capacitor of 100nF in parallel helps to bypass the high frequency switching.\nThese are the easier parts to find and can be obtained from any eletronic parts store. Now, the tricky parts are:\nOT 3.5W, 22k:8ohm transformer (022921 or 125A25B) Banzai, Tubesandmore\nL1 100uH/3A inductor Ebay, just don't buy the toroidal shaped. You also find it at Mouser/Digikey/Farnell.\nDon't forget to buy:\nA copper clad board, 10x10 mm will do for both boards\n2x 40 pin sip sockets for the tubes\nA 1590B enclosure\nSome 3 mm screws and nuts\nRubber feet\n5 mm rubber wire grommets\nSix 10 mm knobs", "step_imgs": [], "step_title": "Step 4: Parts List"}, {"step": 5, "steps_text": "To prepare the PCB and the enclosure I use a process based on toner transfer. The toner protects the surface from the etchant, and as a result after the etching bath we have the PCB with the copper tracks or a beautiful enclosure. The process of transfering the toner and preparing for etching consists of:\nPrint the layout/image with a toner printer using glossy paper.\nSand the surface of the enclosure and of the copper board using sanding paper with grit 200 to 400.\nFix the printed image to the PCB/enclosure using tape.\nApply heat and pressure with the clothes iron for about 10 minutes. Make some extra movement with the tip of the iron at the edges, those are the tricky places where the toner won't stick.\nWhen the paper is looking yellowish trow it in a plastic container filled with water to cool it down, and let the water soak into the paper.\nRemove the paper carefully. It's better when it comes off in layers, instead of removing everything in a single attempt.\nThe drill template helps to identify the positioning of the components, you just need to add your own art, and you're good to go.", "step_imgs": ["https://cdn.instructables.com/F2M/NOZF/JT4TR34V/F2MNOZFJT4TR34V.LARGE.jpg", "https://cdn.instructables.com/FSC/TVQE/JT4TR38X/FSCTVQEJT4TR38X.LARGE.jpg", "https://cdn.instructables.com/FUK/JBN6/JT4TR3EL/FUKJBN6JT4TR3EL.LARGE.jpg", "https://cdn.instructables.com/FP6/MOA7/JT4TR3HA/FP6MOA7JT4TR3HA.LARGE.jpg", "https://cdn.instructables.com/FI9/WLKE/JT4TR3J1/FI9WLKEJT4TR3J1.LARGE.jpg"], "step_title": "Step 5: Thermal Transfer"}, {"step": 6, "steps_text": "For the enclosure, mask larger areas with nail polish. Since the reaction with aluminum is much stronger than with copper, there could be some pitting in larger areas.\nGiving an extra protection guarantees that there will be no marks to ruin the enclosure.", "step_imgs": ["https://cdn.instructables.com/FU5/WREP/JT4TR3KU/FU5WREPJT4TR3KU.LARGE.jpg", "https://cdn.instructables.com/FFD/H8P8/JT4TR3N7/FFDH8P8JT4TR3N7.LARGE.jpg"], "step_title": "Step 6: Masking"}, {"step": 7, "steps_text": "For the etching process I like to use a plastic container with etchant and one with water to rinse between steps.\nFirst, some safety tips:\nuse rubber gloves to protect your hands\nwork on a non-metallic surface\nUse a well ventilated room and avoid breathing the resulting fumes\nUse some paper to protect your workbench from possible spills\nHere I only show the etching of the enclosure, but the PCB was etched in the same solution. The only difference is that for the PCB I just waited for about an hour until all the unprotected copper was gone. With the aluminum there must be some extra care, since we only want to etch the outside of the box.\nFor the enclosure I shake the box in the etching mixture for about 30 seconds, until it gets warm due to the reaction an rinse it in the water. I repeat this step another 20 times, or until the etch is about 0.5 mm deep.\nWhen the etch is deep enough wash the enclosure with water and soap to rinse off all the remaining etchant. With the box cleaned sand the toner and the nail polish off. For the nail polish you can save some sanding paper by using acetone, but remember to keep the room well ventilated!", "step_imgs": ["https://cdn.instructables.com/FN9/YI3P/JT4TR8CE/FN9YI3PJT4TR8CE.LARGE.jpg", "https://cdn.instructables.com/F4S/M9DW/JT4TR8CA/F4SM9DWJT4TR8CA.LARGE.jpg", "https://cdn.instructables.com/F8G/0MFA/JTCSF75J/F8G0MFAJTCSF75J.LARGE.jpg", "https://cdn.instructables.com/FJJ/7RP2/JTCSF8FJ/FJJ7RP2JTCSF8FJ.LARGE.jpg", "https://cdn.instructables.com/FU3/W9OS/JT4TR8CF/FU3W9OSJT4TR8CF.LARGE.jpg"], "step_title": "Step 7: Etching"}, {"step": 8, "steps_text": "In this step I used the 400 grit sanding paper to achieve a clean surface, like in the third picture. This is clean enough for the drilling step. I drilled all the different sized holes, and used the files to make the holes for the tubes sockets. The PCB must be drilled too, I a 0.8 mm drill bit for the components and 1-1.4 mm for the wire holes. In this build I also used a 1.3 mm drill for the tube sockets.\nWith the drilling and filing done I give the box a black coat of spray paint and let it dry for 24h. It will give a better constrast between the etch and the enclosure. Obviously, the next step is to sand it off. This time I go from 400 to the finest grit. I change the sandng paper when one grit removed the lines of the previous one. Sanding in different dirrections makes it easier to identify when all the previous marks are gone. With the enclosure shining I apply 3 layers of the clear coat and wait until it dries for another 24h. The PCB can be protected from corrosion by using a protective coating. As you can see in the last two figures I like to have a dark green coating. This coating requires longer times to dry. I waited 5 days to avoid having finger prints on the board while soldering the components.", "step_imgs": ["https://cdn.instructables.com/FLI/PRLB/JT4TR8CJ/FLIPRLBJT4TR8CJ.LARGE.jpg", "https://cdn.instructables.com/FRV/QM6V/JT4TR8CU/FRVQM6VJT4TR8CU.LARGE.jpg", "https://cdn.instructables.com/FH7/7183/JT4TR8D0/FH77183JT4TR8D0.LARGE.jpg", "https://cdn.instructables.com/FU6/3VSF/JT4TR8KV/FU63VSFJT4TR8KV.LARGE.jpg", "https://cdn.instructables.com/F9L/KJX7/JT4TR8KZ/F9LKJX7JT4TR8KZ.LARGE.jpg"], "step_title": "Step 8: Finishing"}, {"step": 9, "steps_text": "Soldering the Sockets\nAccording to the layout, the tubes are mounted at the copper side of the board. This way the board can come closer to the enclosure and profit from some extra shielding against nasty high frequency EMI coming from the SMPS. But using the copper side of the board to solder components has some disadvantages, such as the copper becoming loose from the board. To avoid this, instead of soldering the tube sockets, I made larger holes where the sockets could be pressed in. The pressure of a slighlty smaller hole and some solder on both sides should solve the problem. For this I used the machined style pin sockets, without the plastic structure, forced the metal pin in the hole and soldered on both sides (on the components side it looks like a blob of solder, but it helps to keep the pin stuck), as shown in the first 3 pictures. The 4th and 5th pictures show all the sockets and jumpers installed.\nSoldering another set of sockets, this time with the plastic structure, to the tubes improves the connection to the board and makes it more stable. The original pins of the tubes are very thin, which can lead to some bad contact or even falling off the sockets. By soldering them to sockets we solve this problem, since now they have a tight fit. I think they should have come with proper pins on the first place, like the larger tubes!", "step_imgs": ["https://cdn.instructables.com/F2Y/9TCT/JTCSF91F/F2Y9TCTJTCSF91F.LARGE.jpg", "https://cdn.instructables.com/FOJ/9BX3/JTCSF9LI/FOJ9BX3JTCSF9LI.LARGE.jpg", "https://cdn.instructables.com/FSP/N2B9/JTCSF9XA/FSPN2B9JTCSF9XA.LARGE.jpg", "https://cdn.instructables.com/FBX/VMPE/JTCSFAGD/FBXVMPEJTCSFAGD.LARGE.jpg", "https://cdn.instructables.com/FNJ/PK36/JTCSFA3H/FNJPK36JTCSFA3H.LARGE.jpg", "https://cdn.instructables.com/FPW/0Z8K/JTCSFQHG/FPW0Z8KJTCSFQHG.LARGE.jpg"], "step_title": "Step 9: Adding Sockets"}, {"step": 10, "steps_text": "To solder the components I started with the resistors, and moved to the larger parts. The electrolytics are soldered at the end, since they are the highest components on the board.\nWith the board ready it's time to add the wires. There are a lot of external connections here, from the tonestack to the high voltage and filament cables. For the signal wires I used shielded cable, shielding the ground mesh at the panel side, closer to the input.\nCritical wires are around the first stage, coming from the input jack, and going to the gain potentiometer. Before we can build everything inside the box we need to test it, so that we still have access to the copper side of the board for some debugging, if it's necessary.\nFor the high voltage filtering I added another RC filter in a smaller board, mounted perpendicularly to the main board, as seen in the picture. This way the ground, high voltage and transformer connections are easier to acccess with the board mounted to the enclosure and can be soldered afterwards.\nBuilding the tonestack\nAlthough I was going to test the board outside the enclosure I already built the tonestack in the box. This way all the potentiometers are fixed and properly grounded. Testing the circuit with ungrounded potentiometers (at least the outside shield) can result in horrible noises. Again, for longer connections I used a shielded cable, grounded near to the input jack.\nUnfortunately in this build the potentiometers are really close together, making it difficult to use a board with the components. In this case I used a point-to-point approach for this part of the circuit. Another problem was that I only had a PCB style 9 mm 50K potentiometer, so that I had to anchor it to the neighbouring potentiometers (panel mount style).\nNow is also a good time to install the on/off switch and the LED with the 2.7k resistor.\nAs a result of two rows of potentiometers I had to file the inside wall of the lid, as shown in the picture, so that the box would close.", "step_imgs": ["https://cdn.instructables.com/F3A/Q817/JTCSFHOR/F3AQ817JTCSFHOR.LARGE.jpg", "https://cdn.instructables.com/FQV/E0Y7/JTCSFHOL/FQVE0Y7JTCSFHOL.LARGE.jpg", "https://cdn.instructables.com/FRH/HFBV/JT4TR8PH/FRHHFBVJT4TR8PH.LARGE.jpg", "https://cdn.instructables.com/F33/HAGO/JT4TR8PG/F33HAGOJT4TR8PG.LARGE.jpg", "https://cdn.instructables.com/FO7/3QEB/JT4TR8PI/FO73QEBJT4TR8PI.LARGE.jpg", "https://cdn.instructables.com/FZE/3SYF/JT4TR8PJ/FZE3SYFJT4TR8PJ.LARGE.jpg", "https://cdn.instructables.com/FJH/S77C/JT4TR8PK/FJHS77CJT4TR8PK.LARGE.jpg"], "step_title": "Step 10: Assembling the Boards"}, {"step": 11, "steps_text": "Adjusting the 555 SMPS\nIf the SMPS is not working there is no high voltage and the circuit won't work correctly. To test the SMPS just connect it to the 9V power jack and check the voltage reading at the output. It should be around 70V, otherwise it needs to be adjusted with the trimpot. If the output voltage is 9V there is a problem with the board. Check for a bad mosfet or 555. If the trimpot does not work verify the feedback circuit around the smaller transistor. An advantage of this SMPS is the low count of parts, so it is a little easier to identify any mistakes or faulty components.\nAdjusting the mainboard trimpots\nDuring the testing stage is a good time to adjust the bias with the trimpots. It can be done later, but if the tone is to dark or to bright it is easier to make changes now.\nThe first trimpot controls the bias of the second, third and output stages and is therefore the most important. I adjusted this trimpot by measuring the bias of the third stage, the cold clipper. If the bias is too high the stage will be completely in cut-off, giving a raw, cold, spongy distortion. If it is biased hotter the output stage will be too hot, adding some power stage distortion, and running the tube closer to the max. plate dissipation. In this case, the lower side of the master volume should be connected to the negative side of the first stage, so that the bias is still around 5.9V. In my case it sounded better when the output stage was running at 5.7V instead of 6.4V.\nJust measure the bias at the third stage (middle tube in the back row) and verify that it is around 1.95V The second trimpot just needs to be adjusted to taste, or nearly center biased at 1.2V (measured between pins 3 and 4). Similarly the third trimpot is also adjusted to approx. 1V.\nThe voltage readings at the tube's pins 1(plate) to 5 (filament) are:\nV1: <8.8V><41.6V><1.21V><0.00V><2.50V>\nV2:<27.9V><27.9V><2.50V><1.94V><3.71V>\nV3:<42.4V><42.4V><3.70V><1.94V><4.90V>\nV4:<36.2V><36.2V><4.90V><3.90V><6.10V>\nV5:<41.4V><41.4V><6.20V><5.10V><7.60V>\nV6:<64.6V><63.7V><8.80V><1.94V><7.60V>\nNote that the filaments in the 5672 are backwards than in the 5678, so that the tubes can't be swapped. Another important aspect to consider is the tube manufacturer. I found out that the tung-sol tubes sounded better in the first positions, than the raytheon tubes. Checking it with an oscilloscope it was visible that the tung-sol tubes had more gain than the raytheon tubes I had.\nNow is also the time to test the circuit and see how it sounds, if it is too bass heavy I suggest changing the 47nF capacitor between second and third stage to 10nF, that will filter some bass out from the initial stages and improve the sound. If it got too thin, just increase this capacitor to 22nF and so on.", "step_imgs": ["https://cdn.instructables.com/FVH/4N20/JT4TR9A5/FVH4N20JT4TR9A5.LARGE.jpg", "https://cdn.instructables.com/FO7/3QEB/JT4TR8PI/FO73QEBJT4TR8PI.LARGE.jpg"], "step_title": "Step 11: Adjusting the Trimpots"}, {"step": 12, "steps_text": "I started adding the screws for the mainboard. On the inside I added the rubber wire grommets, to give some clearance between board and enclosure and also to dampen some vibration. By running the first stage in pentode mode this could help if the tube gets microphonic. Then I added the board and screwed it down with the nuts, connected the tonestack, inserted the input jack and soldered the remaining wires.\nWith the mainboard in position I added the output transformer, adjusted the lenght of the wires and inserted the output jack and power jack.\nAt this point I saw that my SMPS board would not fit in the desired position (at the lateral wall, with the components perpendicular to this wall) because I added the power jack on the wrong side of the output jack... To fix this I sawed the SMPS board at the input side, removing the inductor and capacitor, and soldered the piece back to the board rotated by 90 degrees, as shown in the picture. I tested the SMPS again to see if it still was working, and finished by connecting the high voltage to the main board, through the RC filter board.", "step_imgs": ["https://cdn.instructables.com/F3B/2PNV/JT4TR8PN/F3B2PNVJT4TR8PN.LARGE.jpg", "https://cdn.instructables.com/FHP/1B8H/JT4TR8PM/FHP1B8HJT4TR8PM.LARGE.jpg", "https://cdn.instructables.com/FLV/0LEW/JT4TR8PL/FLV0LEWJT4TR8PL.LARGE.jpg", "https://cdn.instructables.com/FBO/0EAT/JT4TR8PP/FBO0EATJT4TR8PP.LARGE.jpg", "https://cdn.instructables.com/FC8/Z4F2/JT4TR8PO/FC8Z4F2JT4TR8PO.LARGE.jpg"], "step_title": "Step 12: Mounting Everything Inside the Enclosure"}, {"step": 13, "steps_text": "Now just plug the amplifier to your favorite 8 ohms cabinet (in my case a 1x10\" with a celestion greenback) and use your pedal power supply to play at non-deafening levels!\nBy the way, if you like the sound of your amp feedbacking when you stop playing at the end of a sound, wait for the middle part of the video, it feedbacks quite easily when sitting in front of the cab.", "step_imgs": ["https://cdn.instructables.com/FQQ/SGWF/JT4TR8QN/FQQSGWFJT4TR8QN.LARGE.jpg"], "step_title": "Step 13: Soundcheck"}], "channel": "Audio"}, {"category": "Technology", "description": "I loved that Instructables was running a Contest about creating Tools. And this frankly nudged me out of procrastination to finish writing this up, as I think this has a nice twist on who we make tools for...\nAlthough I have made many tools (some technically 'unique' - e.g. Rabbet Tool (LINK) - which helped me and a team of makers put a superman doll into space for under $500), one of the most memorable has been creating a tool for someone with a very unique need...\nKyle was born limited use of his left hand, after a complication while in utero. As long as he can remember, he's always wanted to be a hairdresser, and although he has made valiant efforts to create his own tools to hold hair (in tension to be cut), they all have fallen short of the ideal.\nAs part of BBC Two's Big Life Fix, I was tasked with trying to help Kyle realise his dream career. This Instructables is as much about how to approach a challenge such as this, as the final tool itself. I hope that it is a useful guide and an inspiration not to underestimate the determination and courage of people like Kyle, and the power of communities who are interested in designing things that make a difference to people's lives.\nIf you'd like to do something similar, check out universities, or sign-up at Remap.org.uk", "title": "Creating a Unique Hairdressing Tool", "url": "https://www.instructables.com/id/Creating-a-Unique-Hairdressing-Tool/", "steps": [{"step": 1, "steps_text": "Although this picture showing the evolution of the design, is abridged - the process remains clear - it was very much about iterating after the initial breakthrough (see 'Eureka!').\nHowever, a very broad range of ideas were considered, both in terms of the mechanism (should it be motorised?), and what the input should be (I experimented with MYO bands (electromyography) to see if I could take electrical signals from muscles elsewhere in the arm to act as the 'control signal to actuate the comb - but this seemed (in hindsight) over-complex, and I later realised not practicle for sterilisation, and furthermore - more prone to maintence issues).\nThe learning was that sometimes you need to walk into some unlikely/stupid/over-complex scenarios to fully understand and evaluate the suitability of this.\nOne interesting, and very personal aspect of this journey was that this tool needed not only to function, but to feel befitting of Kyle's trade - both his environment and to be convincing to clientele. So it was not enough to just make a contraption which might function but would look unconvincing in a Salon.\nSafe to say, this Instructable does not describe all the myriad decisions both Kyle and I had to make, which will hopefully be useful to learn from should you do something similar / for someone else. Indeed, everything from 'tool vs hand' to 'robotic vs flesh' were complex and unfamiliar discussions to both of us, and require time to give each other space to make the right decision together.", "step_imgs": ["https://cdn.instructables.com/F3B/LGP8/JT4TMUN2/F3BLGP8JT4TMUN2.LARGE.jpg", "https://cdn.instructables.com/F1O/B422/JT4TMZ0T/F1OB422JT4TMZ0T.LARGE.jpg", "https://cdn.instructables.com/FGS/B7CO/JREUAFB3/FGSB7COJREUAFB3.LARGE.jpg", "https://cdn.instructables.com/FSB/TUYM/JT4TN1DB/FSBTUYMJT4TN1DB.LARGE.jpg", "https://cdn.instructables.com/FJ0/NQQN/JG74SE95/FJ0NQQNJG74SE95.LARGE.jpg", "https://cdn.instructables.com/F8T/MPJX/JG6TAGYM/F8TMPJXJG6TAGYM.LARGE.jpg"], "step_title": "Step 1: Design, Build, Test. // Repeat..."}, {"step": 2, "steps_text": "Kyle had previously used a sports wristband to hold a comb in place. He'd remove this band, and then attach the 'clip', which has a modified wrist-strap with a spring-loaded clip attached.\nThe problem was that Kyle had to apply a lot of force to actuate the clip, which was also not 'subtle' (precise enough) enough to grasp all the hair. [One can really appreciate how specialised the human hand and a craft such as hairdressing is in times like these!].\nA final issue was not obvious as first, but made total sense in hindsight: The clip was attached to his wrist, not his hand/fingers. This meant that he was having to move his whole arm, when really his hand was all that really needed to move, to orientate for the task at hand.", "step_imgs": ["https://cdn.instructables.com/F0L/Y0KU/JG6TAGOF/F0LY0KUJG6TAGOF.LARGE.jpg", "https://cdn.instructables.com/FDW/JTCV/JG6TAGNU/FDWJTCVJG6TAGNU.LARGE.jpg", "https://cdn.instructables.com/FN1/X05B/JG6TAGNX/FN1X05BJG6TAGNX.LARGE.jpg", "https://cdn.instructables.com/F0Q/CF35/JG6TAGO1/F0QCF35JG6TAGO1.LARGE.jpg", "https://cdn.instructables.com/FRM/HROR/JG6TAGO5/FRMHRORJG6TAGO5.LARGE.jpg"], "step_title": "Step 2: Previous Attempts: Kyle's Hairdressing Prosthetic"}, {"step": 3, "steps_text": "As with so much in design - you have to dive in and be a part of the process! I had a crash-course in hairdressing from Yvonne, Kyle's wonderful tutor at Marvel Hairdressing Academy, Swindon.\nAs you can see from my frantically scribbled notes, there were some 'core' skills needed to get a basic haircut done: The hair needs to be parted, and then layered in a certain way to ensure the cut is even and stylish.\nWhat also became clear was that Kyle couldn't simply use a fixed comb and electric clippers. As although the 'straight-cut' for most chaps is fine, most women's hair is defined by a quality 'feather-cut', which is all attributed to the skill of the use of the scissors.\nThis meant that Kyle had to only use his right hand for cutting with scissors, but his left hand needed to comb and hold in place to be cut. As shown in the picture, Kyle's fingers were not long enough to manage large enough quantities of hair, or flexible/dextrous enough to control it.\nEven his current comb-modification only worked when the hair was 'down' - and he couldn't life it up, so was unable to do a significant portion of the styling needed for a good haircut.\nA tool was essential...", "step_imgs": ["https://cdn.instructables.com/FYU/1D5V/JG6TAGPG/FYU1D5VJG6TAGPG.LARGE.jpg", "https://cdn.instructables.com/FD7/TLO3/JG6TAGPR/FD7TLO3JG6TAGPR.LARGE.jpg", "https://cdn.instructables.com/FFI/EQKD/JG6TAGPX/FFIEQKDJG6TAGPX.LARGE.jpg", "https://cdn.instructables.com/FED/3HHS/JREUAEGC/FED3HHSJREUAEGC.LARGE.jpg", "https://cdn.instructables.com/FT2/P366/JREUADUU/FT2P366JREUADUU.LARGE.jpg", "https://cdn.instructables.com/F70/VVB7/JREUADVW/F70VVB7JREUADVW.LARGE.jpg", "https://cdn.instructables.com/FQO/OFUX/JREUAEAF/FQOOFUXJREUAEAF.LARGE.jpg", "https://cdn.instructables.com/FYD/G0FM/JREUAEF9/FYDG0FMJREUAEF9.LARGE.jpg"], "step_title": "Step 3: Gaining Perspective on Kyle and the Goal"}, {"step": 4, "steps_text": "It was quite a humbling, and at times, moving experience - to see these artefacts on display at Strathclyde University's Biomedical Engineering Dept. which included Prosthetic and Orthotic specialities. One can see the labour of love and care that must have gone into these devices to help people who had few options in life.\nOne can only imagine the emotional journey one would have to go through to be at once liberated by a device, which no doubt was an improvement, but also may still have disappointing limitations.\nThe 'poundland hand' was included as a advisory note from the specialists - who stressed that although this was primitive and seemed laughable in a 'medical history cabinet'... as a cost-to-functionality ratio, it was very high performing - and students (most certainly including me!) were often encourage to 'keep it simple' wherever possible.\nLooking back, it was fair to suppose that this was a key moment in my journey of working with Kyle, as it underscored the importance that although fancy tech is seductive, it add risk of breakdown and maintenance, and on one of the most effective prosthetics was the 'hook' - operated by a pull cord - as this was totally intuitive, and in tune with the body's natural approach to interacting with objects.\nI realised that my task was not to replicate the extraordinary nuances and power of the human hand - but rather to create a tool which would work in harmony with Kyle's capabilities. I am indebted to Arjan Buis & Sarah Day for their counsel and open-mindeness to the whole 'design for telly' process.", "step_imgs": ["https://cdn.instructables.com/F00/ZQEG/JREUAFIP/F00ZQEGJREUAFIP.LARGE.jpg", "https://cdn.instructables.com/FIY/8JMM/JREUAH84/FIY8JMMJREUAH84.LARGE.jpg", "https://cdn.instructables.com/FDD/2VZ9/JREUAGXP/FDD2VZ9JREUAGXP.LARGE.jpg", "https://cdn.instructables.com/FLV/U3OR/JREUAGXW/FLVU3ORJREUAGXW.LARGE.jpg", "https://cdn.instructables.com/FZF/YZVW/JG6TAGTE/FZFYZVWJG6TAGTE.LARGE.jpg", "https://cdn.instructables.com/FE3/UMSI/JREUAH2U/FE3UMSIJREUAH2U.LARGE.jpg", "https://cdn.instructables.com/F08/ZSQ9/JREUAFYK/F08ZSQ9JREUAFYK.LARGE.jpg", "https://cdn.instructables.com/FQ6/FBWA/JREUAG99/FQ6FBWAJREUAG99.LARGE.jpg", "https://cdn.instructables.com/FF6/JHQK/JREUAGHM/FF6JHQKJREUAGHM.LARGE.jpg", "https://cdn.instructables.com/FRG/8W11/JREUAGKW/FRG8W11JREUAGKW.LARGE.jpg", "https://cdn.instructables.com/FOA/6ENC/JG6TAGUK/FOA6ENCJG6TAGUK.LARGE.jpg", "https://cdn.instructables.com/FEL/ZPUG/JREUAGSR/FELZPUGJREUAGSR.LARGE.jpg", "https://cdn.instructables.com/FJ7/C6X5/JREUAGX1/FJ7C6X5JREUAGX1.LARGE.jpg", "https://cdn.instructables.com/F8G/HZBX/JREUAGWB/F8GHZBXJREUAGWB.LARGE.jpg", "https://cdn.instructables.com/FHA/F0SL/JREUAGLN/FHAF0SLJREUAGLN.LARGE.jpg", "https://cdn.instructables.com/FKE/M6NG/JREUAGKU/FKEM6NGJREUAGKU.LARGE.jpg", "https://cdn.instructables.com/FZS/JRZT/JREUAGJ5/FZSJRZTJREUAGJ5.LARGE.jpg", "https://cdn.instructables.com/FFD/Q134/JREUAGI4/FFDQ134JREUAGI4.LARGE.jpg", "https://cdn.instructables.com/FHC/FTG4/JREUAGGL/FHCFTG4JREUAGGL.LARGE.jpg"], "step_title": "Step 4: Learning From History"}, {"step": 5, "steps_text": "The moment of inspiration struck when using my electric hair 'clippers'!\nI realised that the reciprocating motion of the twin blades, when low on battery used to snag my hair, which was uncomfortable as it pulled - but did not cut - my hair!\nThis painful memory, made me realise that if these twin blades were dull, and moved while hair as passing through, they would 'grip', rather than cut hair. Likewise, when moved again, the hair would flow through again - like a comb.\nThis tiny insight* allowed me to imagine what it might look like - when scaled up with two normal hair combs! I immediately went to a pound-store and tried to fix two combs together in such a way that they could be 'locked' and 'unlocked' while hair passed through their teeth...\n*(Although a little 'TV' recreation shown here, this insight was the genuine inspiration!)", "step_imgs": ["https://cdn.instructables.com/F8A/VINY/JT4TN1C3/F8AVINYJT4TN1C3.LARGE.jpg", "https://cdn.instructables.com/F2H/E16P/JT4TN1AW/F2HE16PJT4TN1AW.LARGE.jpg", "https://cdn.instructables.com/F2T/RST1/JT4TN1AB/F2TRST1JT4TN1AB.LARGE.jpg", "https://cdn.instructables.com/FOT/2XW4/JT4TN144/FOT2XW4JT4TN144.LARGE.jpg"], "step_title": "Step 5: Eureka!"}, {"step": 6, "steps_text": "Safe to say, I'm not a prosthetics expert - so I spoke to Arjan and Sarah again to 'sense check' the design. Fortunately, they felt the design was not just functionally sound, but also addressed some of their points about not being overly complex (risking breakdown) and also that it's simplicity might mean it is more likely to be acceptable for Kyle.\nArguably a longer discussion than afforded here on Instructbales, but we also discussed the emotional and ethical impact of this device on Kyle as a person. Sometimes these nuanced considerations are overlooked at the early stages of the design, when enthusiasm is high (or low!) and so it was a good time to have some calm reflection and constructive critique. It helped me move the design forward considerably, and with more conviction that this was not about 'fancy tech' but efficient design....after all, Scissors themselves are hard to beat for their simplicity!\nAs shown, Arjan drawing on his hand the best placement of the proposed 'socket'. I loved the down-to-earth nature of both specialists :o)", "step_imgs": ["https://cdn.instructables.com/F9I/JUH6/JG6TAH6W/F9IJUH6JG6TAH6W.LARGE.jpg", "https://cdn.instructables.com/FZR/4FVZ/JREUAHI7/FZR4FVZJREUAHI7.LARGE.jpg", "https://cdn.instructables.com/FLZ/HXIW/JREUAHT2/FLZHXIWJREUAHT2.LARGE.jpg", "https://cdn.instructables.com/FDV/L39R/JREUAIFC/FDVL39RJREUAIFC.LARGE.jpg", "https://cdn.instructables.com/FH6/BCC1/JREUAHY7/FH6BCC1JREUAHY7.LARGE.jpg"], "step_title": "Step 6: Connecting Things Safely"}, {"step": 7, "steps_text": "Showing the end result first, this was a long process of starting with many discussions of how best to attach the comb to Kyle in a practical way.\nMuch of the exploration was taking Kyle from his previous prototypes (which were bound at the wrist) and re-thinking how to do this when able to move freely - from his hand. It sounds straightforward, but was a significant stage to get right with myriad options to select from.", "step_imgs": ["https://cdn.instructables.com/F6T/GUI9/JREUAIVF/F6TGUI9JREUAIVF.LARGE.jpg", "https://cdn.instructables.com/FE2/66GN/JREUAIT9/FE266GNJREUAIT9.LARGE.jpg", "https://cdn.instructables.com/FBI/9KPX/JREUAIZ8/FBI9KPXJREUAIZ8.LARGE.jpg", "https://cdn.instructables.com/FPK/8H52/JREUAIWF/FPK8H52JREUAIWF.LARGE.jpg", "https://cdn.instructables.com/FB8/Q59H/JREUAIVC/FB8Q59HJREUAIVC.LARGE.jpg", "https://cdn.instructables.com/FXH/JMC8/JREUAJ0E/FXHJMC8JREUAJ0E.LARGE.jpg", "https://cdn.instructables.com/F4K/OV1Y/JREUAIRP/F4KOV1YJREUAIRP.LARGE.jpg", "https://cdn.instructables.com/FW5/U6H5/JREUAISP/FW5U6H5JREUAISP.LARGE.jpg", "https://cdn.instructables.com/FT4/AKB9/JREUAIRO/FT4AKB9JREUAIRO.LARGE.jpg"], "step_title": "Step 7: Fibreglass Socket"}, {"step": 8, "steps_text": "This shows the early design of creating the 'dovetail' running system for the two combs to pass past each other (and un/lock the hair, as desired).\nIt was clear that the combs needed a convincing 'click' into place, and to apply the lock when Kyle was not moving the combs past one another with his other hand. This mechanism was initially borrowed from a toggle switch, and later evolved to precision spring loaded grub-screws.", "step_imgs": ["https://cdn.instructables.com/FQM/TSYL/JG74SHS3/FQMTSYLJG74SHS3.LARGE.jpg", "https://cdn.instructables.com/FFH/Q6EF/JG74SEZP/FFHQ6EFJG74SEZP.LARGE.jpg", "https://cdn.instructables.com/FLZ/VM6M/JG74SFB0/FLZVM6MJG74SFB0.LARGE.jpg", "https://cdn.instructables.com/FAR/674X/JTCRJ12G/FAR674XJTCRJ12G.LARGE.jpg"], "step_title": "Step 8: Version 2.0"}, {"step": 9, "steps_text": "As you can see, this video was not only testing the mechanism, but also the position of the comb on his prosthetic socket. I watched and re-watched this clip to study how best to combine these and allow easy exchange with other future tools...", "step_imgs": ["https://cdn.instructables.com/F8J/DA42/JG74SFUR/F8JDA42JG74SFUR.LARGE.jpg", "https://cdn.instructables.com/FXO/K04I/JG74SGMD/FXOK04IJG74SGMD.LARGE.jpg", "https://cdn.instructables.com/FC7/7GJU/JG74SGIT/FC77GJUJG74SGIT.LARGE.jpg", "https://cdn.instructables.com/FFO/D9HJ/JG74SGPT/FFOD9HJJG74SGPT.LARGE.jpg"], "step_title": "Step 9: Click-Lock Test"}, {"step": 10, "steps_text": "These were casts taken in the Salon.\nThese preliminary casts (done in Alginate casting jelly) allowed Kyle to move his hands in 4 different poses, so I could understand the 'max' and 'min' ranges of movement.\nA big issue was (as mentioned earlier) that Kyle was not able to actuate any fine control, or particularly forceful control, so this ultimately informed the need to allow his other hand to take the lead on this.\nMany hours were spent inspecting at these and wondering how to gain an insight - enough for the ideas to come. They didn't make the edit on TV, but arguably were one of the most valuable things I did in the research phase (other than getting to know Kyle better, of course!).", "step_imgs": ["https://cdn.instructables.com/FF1/AQLH/JG74SE4W/FF1AQLHJG74SE4W.LARGE.jpg", "https://cdn.instructables.com/F4M/HJ19/JREUAFAH/F4MHJ19JREUAFAH.LARGE.jpg", "https://cdn.instructables.com/F4G/V1FH/JT91LSKR/F4GV1FHJT91LSKR.LARGE.jpg", "https://cdn.instructables.com/FB5/OJMW/JG74SJUU/FB5OJMWJG74SJUU.LARGE.jpg"], "step_title": "Step 10: Casting - Freedom of Movement"}, {"step": 11, "steps_text": "The Casts of the hand were scanned using a 3D Scanner at a Imperial College London. These are often available at Hackspaces and Makerspaces, and although quality is not mm precise - I needed a 'close enough' model to iterate on. Like clothes - the final fitting would catch any slight issues.\nI evaluated the best place to position the tool, with the minimum of connection points, and complexity to change/repair if needed.\nAs shown in the final picture - much of the reality of 'Design' is jumping between CAD and a 3D print to test out an idea... It's not great TV, but is critical to refining the design. This stage probably had over 20 iterations to perfect the mechanism.", "step_imgs": ["https://cdn.instructables.com/F6V/C20K/JG74SICQ/F6VC20KJG74SICQ.LARGE.jpg", "https://cdn.instructables.com/FLE/RYLL/JG74SIQV/FLERYLLJG74SIQV.LARGE.jpg", "https://cdn.instructables.com/F8U/LDT0/JREUAKSD/F8ULDT0JREUAKSD.LARGE.jpg", "https://cdn.instructables.com/F2J/XJCY/JREUAL3D/F2JXJCYJREUAL3D.LARGE.jpg", "https://cdn.instructables.com/F3C/XN0J/JG74SII2/F3CXN0JJG74SII2.LARGE.jpg", "https://cdn.instructables.com/FWC/JIBB/JREUAM1Z/FWCJIBBJREUAM1Z.LARGE.jpg"], "step_title": "Step 11: 3D Scan --> CAD Modelling"}, {"step": 12, "steps_text": "This was a great stage of the project - Kyle was now cutting hair, with the prototype working great!\nIt's hard to describe the feeling to have arrived at a 'click-lock-cut-unlock-comb' loop of work, that was so fast, that even without any practice, Kyle was stuck into the task!\nDare I say it, I think the producer was a little worried it all looked too easy, but the truth was that it was months of exploration that lead to a 'Eureka' moment. Often in design, I find that one has a 'gradually - then suddenly' progression with idea, but I think the 'gestational period' of thought can't be underestimated.", "step_imgs": ["https://cdn.instructables.com/FW8/SMYR/JG74SHHU/FW8SMYRJG74SHHU.LARGE.jpg", "https://cdn.instructables.com/FSJ/KI0F/JG74SHCM/FSJKI0FJG74SHCM.LARGE.jpg", "https://cdn.instructables.com/FEH/GRF8/JG74SH7C/FEHGRF8JG74SH7C.LARGE.jpg", "https://cdn.instructables.com/FZ7/SL2L/JG74SHLC/FZ7SL2LJG74SHLC.LARGE.jpg"], "step_title": "Step 12: Refining the Design"}, {"step": 13, "steps_text": "This was probably the most nerve-wracking part of the build. All other things can be re-build, or purchased again...but this was drilling into the only mould/cast we had created for Kyle in Fibreglass.\nI also started to begin to develop the system for interchanging the tools easily, as although the comb was apparently 80%-90% of the job, the remaining other functions were also part of what make a great Salon experience complete, so those had to be developed in parallel consideration: from painting colouring creams to razor blades!!\nTIP: Sugru was used to help create a perfect fit between the Fibreglass and the 3D Print. By adding cling film over the Fibreglass, and allow the Sugru (attached to the 3D Print) while still wet, to take mould, this then cured over night to be a firm rubber. This removed any tolerance errors in CAD / Fibreglass mould. If you are replicating this project, this can really help interface the 3D print and the Fibreglass interface.", "step_imgs": ["https://cdn.instructables.com/F6G/LCF6/JT4TPR6P/F6GLCF6JT4TPR6P.LARGE.jpg", "https://cdn.instructables.com/FBW/JY22/JT4TPR6O/FBWJY22JT4TPR6O.LARGE.jpg", "https://cdn.instructables.com/FKH/R1RQ/JREUAJSB/FKHR1RQJREUAJSB.LARGE.jpg", "https://cdn.instructables.com/FQ7/A26Z/JREUAJTF/FQ7A26ZJREUAJTF.LARGE.jpg", "https://cdn.instructables.com/FMQ/ZTBL/JREUAJU1/FMQZTBLJREUAJU1.LARGE.jpg", "https://cdn.instructables.com/FYZ/XUXR/JG74SI3X/FYZXUXRJG74SI3X.LARGE.jpg", "https://cdn.instructables.com/FE0/RVTZ/JG74SI7E/FE0RVTZJG74SI7E.LARGE.jpg", "https://cdn.instructables.com/FMV/GR6T/JREUAMI4/FMVGR6TJREUAMI4.LARGE.jpg"], "step_title": "Step 13: Assembly: Fibreglass Meets 3D Printing"}, {"step": 14, "steps_text": "Understandably, this CAD is specific to Kyle. However, if one were to take a fibreglass prosthetic, and adapt from this - then the fiels can be edited to suit. (See SLDPRT Files)", "step_imgs": ["https://cdn.instructables.com/FE4/8TI5/JT91LSIT/FE48TI5JT91LSIT.LARGE.jpg", "https://cdn.instructables.com/FCO/JFQ9/JT91LSF8/FCOJFQ9JT91LSF8.LARGE.jpg"], "step_title": "Step 14: CAD Overview"}, {"step": 15, "steps_text": "A quick tip on working with detailed and to-scale parts in CAD...\nI created an approximation of comb (and also the Fibreglass part) by taking pictures - and using this to scale, so that I could approximate 'real-world' object, within the CAD model. I took tips from YouTube videos like this. It can be especially useful to take pictures from x, y and z axis, and attach to the said planes of the CAD datum.\nI later machined (routered) out a profile of the comb, such that it could be inserted into the groove in the CAD part, as you can see later on, using a multitool and a guide, such as the one shown. You could attach the comb in other ways, but I felt this would be stronger than just a face-to-face joint.", "step_imgs": ["https://cdn.instructables.com/FHX/SGIG/JT91LSKB/FHXSGIGJT91LSKB.LARGE.jpg", "https://cdn.instructables.com/FEE/1ANB/JT91N29R/FEE1ANBJT91N29R.LARGE.jpg", "https://cdn.instructables.com/FQ5/P7J1/JT91N2AO/FQ5P7J1JT91N2AO.LARGE.jpg", "https://cdn.instructables.com/F6G/S58C/JREUALB3/F6GS58CJREUALB3.LARGE.jpg"], "step_title": "Step 15: Real World --> CAD"}, {"step": 16, "steps_text": "Parts created in Solid Works.\nThese can be edited to suit your needs, and coudl be applied to a variety of prosthetic attachments.", "step_imgs": ["https://cdn.instructables.com/FML/AE8X/JT91LX8N/FMLAE8XJT91LX8N.LARGE.jpg"], "step_title": "Step 16: SLDPRT FIles"}, {"step": 17, "steps_text": "STL Files, for quickness.\nTIP: I would suggest printing in the shown orientation, to give strength and minimise warpage. The Runners can bow a little, but it is best to have the face which attaches to the combs finish last as this will be most straight. Likewise, the other face can be sanded down lightly to be more parallel.", "step_imgs": ["https://cdn.instructables.com/FLH/EVTJ/JT91LWW1/FLHEVTJJT91LWW1.LARGE.jpg"], "step_title": "Step 17: STL Files & Printing"}, {"step": 18, "steps_text": "As shown earlier, this too can connect with a variety of tools - all created around 4x4mm square stainless steel section bar. This was found to be an optimum balance of rigidity and weight.\nThe hole in the side need to receive a brass insert, and can be placed either by press, parallel pliers, or nestled-in with a soldering iron. I did the latter, as it is a stronger hold. I then added a dap of super-clue to 'wick' into an gaps to give strength.", "step_imgs": ["https://cdn.instructables.com/FNI/BLAI/JT91LSJJ/FNIBLAIJT91LSJJ.LARGE.jpg", "https://cdn.instructables.com/F19/L6X2/JT91NDRM/F19L6X2JT91NDRM.LARGE.jpg"], "step_title": "Step 18: Multi-Tool Socket"}, {"step": 19, "steps_text": "Similar to the tool socket, a Brass Insert is recommended here. Taking care not to protrude too far so as to obstruct the steel from running inside.\nThe channel in the other runner is to contain the steel. 4x4mm square stainless (LINK). This can be fixed with super glue, or epoxy. The latter is preferable.", "step_imgs": ["https://cdn.instructables.com/FUC/8YJL/JT91LSCX/FUC8YJLJT91LSCX.LARGE.jpg", "https://cdn.instructables.com/FUN/LEQZ/JT91LSCI/FUNLEQZJT91LSCI.LARGE.jpg", "https://cdn.instructables.com/F0X/PTG7/JT91LSG1/F0XPTG7JT91LSG1.LARGE.jpg"], "step_title": "Step 19: Runners & Steel"}, {"step": 20, "steps_text": "This small red piece of plastic is a subtle adjutment piece: It allos you to tune the distance needed to 'lock' the hair. This is not to say that hair varies so much in thickness that you'd need to change it between cuts!\nRather, what I realised from using the tool, and observing Kyle, was that with confidence, one needs a less tight grip (i.e. smaller travel distance - and hence longer red piece) as one gest more experiences, and hesitates less. Hence suggesting printing a few off at once for the future.\nI like that this piece is nicely hidden away inside, but can be accesses by unscreweing the clamping nut, and then sliding the two runners appart.", "step_imgs": ["https://cdn.instructables.com/FWU/OJ7S/JT91LSHD/FWUOJ7SJT91LSHD.LARGE.jpg", "https://cdn.instructables.com/FZP/3Q8K/JT91LSGG/FZP3Q8KJT91LSGG.LARGE.jpg", "https://cdn.instructables.com/F9Z/75GT/JT91LSI0/F9Z75GTJT91LSI0.LARGE.jpg", "https://cdn.instructables.com/FOH/EO4F/JT91LSJX/FOHEO4FJT91LSJX.LARGE.jpg", "https://cdn.instructables.com/FQ2/2MCD/JREUANSV/FQ22MCDJREUANSV.LARGE.jpg"], "step_title": "Step 20: Adjustable Stop"}, {"step": 21, "steps_text": "I actually dabbled with some fibreglass-infused ABS filament, but in all honesty, the weight difference was not much different to the normal ABS, but it may have improved in terms of less warpage now(?). Always worth trying different filaments to see which works best.\nThe benefit of ABS was that it could cope with hot water of cleaning, where as PLA would likely degrade much faster. ABS also can be washed with acetone nicely to get a smoother (and stronger) finish.", "step_imgs": ["https://cdn.instructables.com/FI1/TFYE/JREUAL7Y/FI1TFYEJREUAL7Y.LARGE.jpg"], "step_title": "Step 21: Filament Choices"}, {"step": 22, "steps_text": "Safe to say a lot of this build is very tailored, and although I think the Instructables community appreciates this will be a case-by-case projects, some useful tools and tips include:\nSpring Loaded Grub Screws. (LINK). & Brass Inserts (LINK).\nThese were invaluable to not only make the 'click-lock' mechanism small and compact, but because the pressure of the ball can be adjusted via the screw, the force Kyle had to apply to get the combs to trigger/slip past each other, was adjustable. Brass inserts were also used to connect the socket to the fibreglass piece (see next image).\nThread Locker (videly available).\nUseful to add some friction to the Grub Screws to hold in place once the desired force was found.\nThumb Screws (from computer cases).\nThis is where the personalisation comes in - one can find a range of thumb screws in various styles and colours. Simply cut to size with a multitool.", "step_imgs": ["https://cdn.instructables.com/FWN/EOM6/JG74SJWN/FWNEOM6JG74SJWN.LARGE.jpg", "https://cdn.instructables.com/F29/MAMZ/JT91NT83/F29MAMZJT91NT83.LARGE.jpg", "https://cdn.instructables.com/FMJ/C1DW/JT91NTBM/FMJC1DWJT91NTBM.LARGE.jpg", "https://cdn.instructables.com/FDA/B46I/JT91NUSO/FDAB46IJT91NUSO.LARGE.jpg"], "step_title": "Step 22: Special Parts List"}, {"step": 23, "steps_text": "The Comb Attachment fits on top of the Fibreglass Socket, as shown.\nThis allows the 'trigger' or 'click-lock' mechanism to dock. As you can see there are multiple Brass Inserts, as I was finding out where was the best place to clamp the tools/combs/etc, and how much force was needed. (In the end, only one was needed - see images as show later)\nThe combs were routed to fit the 3D printed parts, and glued in with Epoxy. They were then sanded back to be flush with one another.\nLastly, other tools were checked for fit and utility.", "step_imgs": ["https://cdn.instructables.com/FYI/6NRW/JT4TQF1S/FYI6NRWJT4TQF1S.LARGE.jpg", "https://cdn.instructables.com/FYN/O7BW/JT4TQF1T/FYNO7BWJT4TQF1T.LARGE.jpg", "https://cdn.instructables.com/F1S/LVUR/JT4TQF1W/F1SLVURJT4TQF1W.LARGE.jpg", "https://cdn.instructables.com/F6G/S58C/JREUALB3/F6GS58CJREUALB3.LARGE.jpg"], "step_title": "Step 23: Assembly: Comb Mechanism"}, {"step": 24, "steps_text": "Although the crux of the project rested on the ability to cut hair, the final success of the project was the ability to interchange between tools safely, quickly and easily, so that the entire solution also enabled styling of hair too.\nFor Kyle and myself, these accessories needed to be 'centre stage' and look the part on the desk of a Salon, in front of the mirror. So the stand was a nice touch, to organise them for Kyle's easy access - but it also became a talking point for clients. Much of this project was about the little touches.\nThe last tool was a good example, which needed to evolve to be dual purpose - for brush and styling pic. The brushes once old can be removed and disposed of.", "step_imgs": ["https://cdn.instructables.com/FTN/3MDX/JG74SL1T/FTN3MDXJG74SL1T.LARGE.jpg", "https://cdn.instructables.com/F0I/19DO/JG74SL3M/F0I19DOJG74SL3M.LARGE.jpg", "https://cdn.instructables.com/FRW/NQ9W/JG74SLBX/FRWNQ9WJG74SLBX.LARGE.jpg", "https://cdn.instructables.com/F25/94LD/JG74SLDR/F2594LDJG74SLDR.LARGE.jpg"], "step_title": "Step 24: The \"Swiss Army Knife\" of Hairdressing Prosthetics"}, {"step": 25, "steps_text": "This was great fun being tutored by Master Jeweller, Mark Bloomfield, from Electrobloom. I learned loads about the process of jewellery making - both the design, craft and aesthetics of this. His input was invaluable in helping me deliver an aesthetic that Kyle would be proud to own. It was even a nice touch that he suggest we used Silver - not only because it was precious, but because it tarnished, it needed polishing - which in itself was a 'bonding' moment for Kyle, similar to that of say a motorcycle enthusiast, or saxophonist - taking that care to polish and observe the details in caring for a beloved item. His eye for organic designs is clearly inspirational when seeing the blue 'trigger handle', which is not only functional - but gives character to the tool.\nThis allowed the utility of the tool to be taken to the next level, such that it would be a credible looking thing for a client to see. Many of the techniques are similar to those used in Instructables Jewellery Class, so I will not detail them here.", "step_imgs": ["https://cdn.instructables.com/FMA/2G1S/JG74SL8M/FMA2G1SJG74SL8M.LARGE.jpg", "https://cdn.instructables.com/F4D/8FZJ/JG74SKNG/F4D8FZJJG74SKNG.LARGE.jpg", "https://cdn.instructables.com/F5G/6M1L/JG74SK1Q/F5G6M1LJG74SK1Q.LARGE.jpg", "https://cdn.instructables.com/F6D/OUR0/JG74SKP7/F6DOUR0JG74SKP7.LARGE.jpg", "https://cdn.instructables.com/FFX/6KOJ/JG74SKSO/FFX6KOJJG74SKSO.LARGE.jpg", "https://cdn.instructables.com/FC0/ORXO/JREUAN3B/FC0ORXOJREUAN3B.LARGE.jpg", "https://cdn.instructables.com/FGW/DYKE/JREUAN6L/FGWDYKEJREUAN6L.LARGE.jpg", "https://cdn.instructables.com/FW5/5S5S/JREUAFC5/FW55S5SJREUAFC5.LARGE.jpg", "https://cdn.instructables.com/FEA/XOVK/JG74SKW8/FEAXOVKJG74SKW8.LARGE.jpg", "https://cdn.instructables.com/F67/RX4B/JREUAM43/F67RX4BJREUAM43.LARGE.jpg", "https://cdn.instructables.com/FVO/J2O7/JG74SJZX/FVOJ2O7JG74SJZX.LARGE.jpg", "https://cdn.instructables.com/F46/AA4T/JREUAMS4/F46AA4TJREUAMS4.LARGE.jpg"], "step_title": "Step 25: Personalisation of the Tool"}, {"step": 26, "steps_text": "The reveal!\nAnd I got a free haircut from Kyle =D\nWatch the show online at BBC, or Youtube (ssshhhh!) (LINK)", "step_imgs": ["https://cdn.instructables.com/F18/O3NY/JG74SM4D/F18O3NYJG74SM4D.LARGE.jpg", "https://cdn.instructables.com/FH1/8AWG/JG74SLYV/FH18AWGJG74SLYV.LARGE.jpg", "https://cdn.instructables.com/FA5/DSCK/JREUAPUD/FA5DSCKJREUAPUD.LARGE.jpg", "https://cdn.instructables.com/FBR/UBIT/JREUAPV2/FBRUBITJREUAPV2.LARGE.jpg", "https://cdn.instructables.com/F56/TVZA/JREUAPIL/F56TVZAJREUAPIL.LARGE.jpg"], "step_title": "Step 26: Put It to the Test"}, {"step": 27, "steps_text": "Kyle is continuing his training course, and is much more able to manage the various complex tasks of the profession, from the click-lock comb, and the various accessories.", "step_imgs": ["https://cdn.instructables.com/FW4/65IO/JREUAODO/FW465IOJREUAODO.LARGE.jpg", "https://cdn.instructables.com/FEI/B2ES/JG74SLJ9/FEIB2ESJG74SLJ9.LARGE.jpg", "https://cdn.instructables.com/F8L/1OXK/JG74SLMV/F8L1OXKJG74SLMV.LARGE.jpg", "https://cdn.instructables.com/F9M/1M0O/JG74SLQD/F9M1M0OJG74SLQD.LARGE.jpg", "https://cdn.instructables.com/FSB/6IG1/JREUAPEJ/FSB6IG1JREUAPEJ.LARGE.jpg"], "step_title": "Step 27: Kyle at Work"}, {"step": 28, "steps_text": "Some pics of the final work.", "step_imgs": ["https://cdn.instructables.com/FYO/V0DQ/JREUAOCJ/FYOV0DQJREUAOCJ.LARGE.jpg", "https://cdn.instructables.com/FYB/SWXV/JREUANEO/FYBSWXVJREUANEO.LARGE.jpg", "https://cdn.instructables.com/FUX/I2PG/JG74SMLO/FUXI2PGJG74SMLO.LARGE.jpg", "https://cdn.instructables.com/FEP/WGFJ/JG74SMOS/FEPWGFJJG74SMOS.LARGE.jpg", "https://cdn.instructables.com/FMP/APHQ/JREUAOBE/FMPAPHQJREUAOBE.LARGE.jpg", "https://cdn.instructables.com/FB4/PK9K/JG74SMN8/FB4PK9KJG74SMN8.LARGE.jpg", "https://cdn.instructables.com/FYB/Z8DZ/JG74SMLK/FYBZ8DZJG74SMLK.LARGE.jpg", "https://cdn.instructables.com/FU0/W5N6/JREUANKR/FU0W5N6JREUANKR.LARGE.jpg"], "step_title": "Step 28: Gallery"}, {"step": 29, "steps_text": "Using the tool =)", "step_imgs": ["https://cdn.instructables.com/F9O/LB2I/JREUAQ7V/F9OLB2IJREUAQ7V.LARGE.jpg", "https://cdn.instructables.com/FNF/BP8C/JREUARWZ/FNFBP8CJREUARWZ.LARGE.jpg", "https://cdn.instructables.com/FHL/IR5D/JREUARSZ/FHLIR5DJREUARSZ.LARGE.jpg", "https://cdn.instructables.com/FBW/F29L/JREUAS8W/FBWF29LJREUAS8W.LARGE.jpg", "https://cdn.instructables.com/FLI/PZ2Z/JREUARFB/FLIPZ2ZJREUARFB.LARGE.jpg", "https://cdn.instructables.com/FMU/61N8/JREUAQRH/FMU61N8JREUAQRH.LARGE.jpg", "https://cdn.instructables.com/F1U/4B1L/JREUARB9/F1U4B1LJREUARB9.LARGE.jpg", "https://cdn.instructables.com/F40/8ATV/JREUARP1/F408ATVJREUARP1.LARGE.jpg"], "step_title": "Step 29: Kyle in Action!"}, {"step": 30, "steps_text": "Thanks again for all involved in making the BBC Big Life Fix series 2. It was an incredible ride, and I hope the show's many other inventions are an inspiration to the Instructables community and beyond...\nMore at: http://www.judepullen.com/bbc-big-life-fix/\nI hope this Instructable is a useful guide, and although has a lot of the back-story, is also helpful not only in iterating (or Remixing?) on this project, but also gives confidence to approach a complex design challenge such as this. Any questions, please do comment, or email me.\nCheers,\nJude", "step_imgs": ["https://cdn.instructables.com/F9W/LGXH/JREUASGX/F9WLGXHJREUASGX.LARGE.jpg"], "step_title": "Step 30: Thanks!"}], "channel": "Assistive Tech"}, {"category": "Technology", "description": "3D pens are great tools to develop the creativity of your kids. But, what can you do when your 3D Doodler Start stops working and cannot be repaired? Don't throw your 3D pen to the trash! Because in this instructable I will teach you how to transform it into a robot.\nThis model of 3D pen has some very interesting components: a micro-motor with gearbox, two rechargeable Lithium Polymer batteries and a mini-circuit board that can be used as a battery charger. Add some discarded 3D glasses and a few extra materials, and you can build a rope-climbing Simple Bot.\nI'm participating in the \"Trash to Treasure Contest\" of Instructables. So if you like this project, your vote will very appreciated. Thanks for your support!\nNow, grab some tools and let the fun begin!", "title": "Rope-climbing Robot From a Broken 3D Pen", "url": "https://www.instructables.com/id/Rope-climbing-Robot-From-a-Broken-3D-Pen/", "steps": [{"step": 1, "steps_text": "Building a rope-climbing robot was an idea I have since I was a kid, inspired by one of the favorite shows of my childhood: The Wizard. Probably you never have heard about it. You see, in a classic example of \"trash to treasure\", several shows that were unpopular in United States (and cancelled after only one season) became cult classics in Latin America, with complete generations having them as a reference point. So for a lot of us, \"Street Hawk\", \"Manimal\" and \"Automan\" were as cool as \"The Fall Guy\", \"The A-Team\" and \"MacGyver\".\nPeople says that Tyrion Lannister is the first time a person with dwarfism is considered for a main character in a TV series (nothing against Peter Dinklage, he is one of the finest actors of our time), but that credit goes to Simon McKay (David Rappaport). He was awesome! A genius in robotics who used to create weapons for the government, then he quits and becomes the best toymaker, philanthropist and adventurer. Every time he and his friends were in trouble, he had some special toys in his suitcase that helped them to escape. And probably the first of his toys that impressed me was a little rope-climbing robot he has at his workshop. Several times I tried to make a toy like that one, but I failed. But after having this 3D pens problem, I decided to give another run to this idea.\nFirst, I needed to test if the 3D pen's gearbox was powerful enough to lift the weight of the robot, so I created a prototype using the motor, a battery holder and bamboo kebab sticks, all attached using hot glue. I was surprised when I saw it worked!... for a few minutes. After that, the hot glue was not strong enough to stand the stress, and the prototype got tangled up and fell to the ground. But in its short time working, it gave me the essential information to build a better robot!\nNext step (and that's something you don't see often in my instructables), I draw a design. With a pen. If I wanted to make it work, I needed to go full Engineering Design Process with it.", "step_imgs": ["https://cdn.instructables.com/FI0/GZXE/JT91JC22/FI0GZXEJT91JC22.LARGE.jpg", "https://cdn.instructables.com/F5K/VDHY/JT91J4T3/F5KVDHYJT91J4T3.LARGE.jpg"], "step_title": "Step 1: Inspiration, Prototype and Design"}, {"step": 2, "steps_text": "So, to build the Mark II of this project, you will need the following materials. All or almost all of them are recycled, and you can use alternatives, as long as you have a motor with gearbox. You will need:\n1 broken rechargeable 3D pen\n1 3D glasses (or any kind of glasses with thick plastic frame)\n1 plastic bottle cap\n1 small switch (you can recycle it from a broken toy or even, from the 3D pen's board)\n1 zip tie\n1 Tic-Tac plastic box\n1 discarded ceramic continental car fuse (or any other hard plastic small piece that can be useful as a crank)\nWires (red and black, preferable)\nScrews, nuts, bolts, washers\nSuperglue\nSoldering tin\nAlso, you will require the following tools:\nDremel rotary tool\nheat gun\nsoldering iron\nscrewdrivers\npliers", "step_imgs": ["https://cdn.instructables.com/FPU/A5P6/JT91J3IQ/FPUA5P6JT91J3IQ.LARGE.jpg", "https://cdn.instructables.com/FUU/E6VH/JT91J3H7/FUUE6VHJT91J3H7.LARGE.jpg"], "step_title": "Step 2: Materials"}, {"step": 3, "steps_text": "Using the rotary tool, carefully cut the 3D pen's case through the middle (the slimiest part). But only the plastic part! If you cut too much, you can damage the board or other components that can be useful for this or future projects.\nThe part of the case we will use for the robot's body is where the batteries are housed. Carefully disconnect them from the rest of the circuit board.", "step_imgs": ["https://cdn.instructables.com/F1W/BCSA/JT91J3KL/F1WBCSAJT91J3KL.LARGE.jpg", "https://cdn.instructables.com/F5P/PRVC/JT91J3OD/F5PPRVCJT91J3OD.LARGE.jpg", "https://cdn.instructables.com/FSG/X2QE/JT91J3Q8/FSGX2QEJT91J3Q8.LARGE.jpg", "https://cdn.instructables.com/FF9/V9PK/JT91J3Z3/FF9V9PKJT91J3Z3.LARGE.jpg", "https://cdn.instructables.com/FT6/BVFY/JT91J3Z5/FT6BVFYJT91J3Z5.LARGE.jpg", "https://cdn.instructables.com/FTZ/P62U/JT91J41N/FTZP62UJT91J41N.LARGE.jpg", "https://cdn.instructables.com/FCY/5QPD/JT91J3WW/FCY5QPDJT91J3WW.LARGE.jpg", "https://cdn.instructables.com/F24/TO1K/JT91J44N/F24TO1KJT91J44N.LARGE.jpg"], "step_title": "Step 3: Open the 3D Pen"}, {"step": 4, "steps_text": "Using a flat screwdriver and small pliers, open the black case that contains the mechanical and electronic parts. Basically, you will need the following components to create the robot:\nCase with batteries inside: it will be the main body and power source.\nCircuit board: it will be transformed into an independent battery charger.\nMotor with gear box: it will move the arms of the robot.", "step_imgs": ["https://cdn.instructables.com/FX1/EJTS/JT91J44A/FX1EJTSJT91J44A.LARGE.jpg", "https://cdn.instructables.com/FVK/OBO5/JT91J453/FVKOBO5JT91J453.LARGE.jpg", "https://cdn.instructables.com/FEO/261S/JT91J4D7/FEO261SJT91J4D7.LARGE.jpg", "https://cdn.instructables.com/FS2/JBUV/JT91J4EL/FS2JBUVJT91J4EL.LARGE.jpg", "https://cdn.instructables.com/FE0/ISDP/JT91J4F1/FE0ISDPJT91J4F1.LARGE.jpg", "https://cdn.instructables.com/FTN/8THE/JT91J4IF/FTN8THEJT91J4IF.LARGE.jpg"], "step_title": "Step 4: Mining the Necessary Components"}, {"step": 5, "steps_text": "To charge this robot, the battery must be unplugged from the motor and connected to the charger. That means we need two mini sockets compatible with the battery plug: one in the board/charger, and an extra one for the motor. You can buy a new one. Or, you can use one of the other two soldered to the board.\nUsing a soldering iron, remove the red mini socket, and solder a wire to each pin. We will use this one for the motor (later, I also removed the blue one, to be used in another project.)\nAt the end, place some heat-shrinkable tube on the socket and expose it to the heat gun, so the pins are protected.", "step_imgs": ["https://cdn.instructables.com/F6Z/EYVQ/JT91J44O/F6ZEYVQJT91J44O.LARGE.jpg", "https://cdn.instructables.com/FCE/EXV8/JT91J4V8/FCEEXV8JT91J4V8.LARGE.jpg", "https://cdn.instructables.com/F32/WB1E/JT91J4VO/F32WB1EJT91J4VO.LARGE.jpg", "https://cdn.instructables.com/FLC/59ZZ/JT91J4WC/FLC59ZZJT91J4WC.LARGE.jpg", "https://cdn.instructables.com/FR1/7MF7/JT91J7AR/FR17MF7JT91J7AR.LARGE.jpg", "https://cdn.instructables.com/F73/25KU/JT91J7CY/F7325KUJT91J7CY.LARGE.jpg", "https://cdn.instructables.com/FYX/89ZS/JT91J7HP/FYX89ZSJT91J7HP.LARGE.jpg", "https://cdn.instructables.com/F5H/ECDL/JT91J7IL/F5HECDLJT91J7IL.LARGE.jpg"], "step_title": "Step 5: Modifications for the Circuit Board"}, {"step": 6, "steps_text": "For this part you will need the modified board, the USB cable included with the 3D pen and a Tic Tac box.\nModify the Tic Tac box so you can fit the board inside. Use a Dremel rotary tool. Before inserting the board, check that the switch is in OFF (charging position.)", "step_imgs": ["https://cdn.instructables.com/FV3/VORD/JT91J4UX/FV3VORDJT91J4UX.LARGE.jpg", "https://cdn.instructables.com/FPE/PX3O/JT91J4WU/FPEPX3OJT91J4WU.LARGE.jpg", "https://cdn.instructables.com/FZJ/UVRR/JT91J4YN/FZJUVRRJT91J4YN.LARGE.jpg", "https://cdn.instructables.com/FHD/HPTA/JT91J4Z2/FHDHPTAJT91J4Z2.LARGE.jpg", "https://cdn.instructables.com/FVY/065J/JT91J4ZE/FVY065JJT91J4ZE.LARGE.jpg", "https://cdn.instructables.com/FZ6/7IE5/JT91J519/FZ67IE5JT91J519.LARGE.jpg", "https://cdn.instructables.com/FDM/GW3R/JT91J533/FDMGW3RJT91J533.LARGE.jpg", "https://cdn.instructables.com/F9F/OJOC/JT91J5LT/F9FOJOCJT91J5LT.LARGE.jpg"], "step_title": "Step 6: Building the Battery Charger"}, {"step": 7, "steps_text": "With the Dremel, adapt a plastic cap to cover the hole in the batteries case. This cap is very important, because the motor will be attached to it. Also, cables from the batteries and motor will pass by its side.", "step_imgs": ["https://cdn.instructables.com/FO7/GRDB/JT91J5W2/FO7GRDBJT91J5W2.LARGE.jpg", "https://cdn.instructables.com/FA0/MZBB/JT91J5X0/FA0MZBBJT91J5X0.LARGE.jpg", "https://cdn.instructables.com/F08/QJPG/JT91J5Y4/F08QJPGJT91J5Y4.LARGE.jpg", "https://cdn.instructables.com/F99/U39T/JT91J5YY/F99U39TJT91J5YY.LARGE.jpg", "https://cdn.instructables.com/FJG/J9OF/JT91J62A/FJGJ9OFJT91J62A.LARGE.jpg", "https://cdn.instructables.com/FBN/SBVZ/JT91J6L9/FBNSBVZJT91J6L9.LARGE.jpg"], "step_title": "Step 7: Robot's Body"}, {"step": 8, "steps_text": "Remove the extra attachments from the shaft of the motor. Also, probably you will need to cut a section from the shaft, so it has the same length of the crank.\nAs a crank, we will use the fuse. Check that it fits and adapt with the Dremel or add a drop of super glue if necessary (be careful! don't jam the gearbox.)\nThen, attach the motor to the bottle cap using a zip tie. Then, place the bottle cap in the body and check if the motor axle is aligned with the case's fissure.", "step_imgs": ["https://cdn.instructables.com/FNI/H9PB/JT91J64S/FNIH9PBJT91J64S.LARGE.jpg", "https://cdn.instructables.com/FGN/D8XL/JT91J681/FGND8XLJT91J681.LARGE.jpg", "https://cdn.instructables.com/F1C/FCIE/JT91J69U/F1CFCIEJT91J69U.LARGE.jpg", "https://cdn.instructables.com/F5Z/BN4T/JT91J6FY/F5ZBN4TJT91J6FY.LARGE.jpg", "https://cdn.instructables.com/FTO/67VS/JT91J6JB/FTO67VSJT91J6JB.LARGE.jpg", "https://cdn.instructables.com/FG9/9UHD/JT91J6LZ/FG99UHDJT91J6LZ.LARGE.jpg", "https://cdn.instructables.com/FL0/BAPU/JT91J6N0/FL0BAPUJT91J6N0.LARGE.jpg", "https://cdn.instructables.com/FJ4/6G15/JT91J6NE/FJ46G15JT91J6NE.LARGE.jpg", "https://cdn.instructables.com/FB4/8NG5/JT91J6P3/FB48NG5JT91J6P3.LARGE.jpg", "https://cdn.instructables.com/FCM/C3R6/JT91J6RP/FCMC3R6JT91J6RP.LARGE.jpg", "https://cdn.instructables.com/FET/00JK/JT91J6ZG/FET00JKJT91J6ZG.LARGE.jpg", "https://cdn.instructables.com/FZG/8FBH/JT91J70X/FZG8FBHJT91J70X.LARGE.jpg", "https://cdn.instructables.com/FT1/CINT/JT91J75J/FT1CINTJT91J75J.LARGE.jpg", "https://cdn.instructables.com/F85/7WVZ/JT91J75M/F857WVZJT91J75M.LARGE.jpg"], "step_title": "Step 8: Adding a Crank and Attaching the Motor"}, {"step": 9, "steps_text": "This robot works with a basic electrical circuit. However, you will need to do some extra modifications to the plastic case. Using the Dremel, open a hole on the back (for the mini-socket and cables of Step 5) and on bottom (to place a switch.)\nConnect the mini-socket to the batteries, and then insert it through the hole. One cable will go to one of the pins of the motor. The other one, to one of the pins of the switch. Then connect an extra cable from the center pin of the switch to the other pin of the motor, trying to keep all the cables inside the case (only exposed cables are the plug and socket of the battery.)\nUse the soldering iron and soldering thin on each connection.\nAt the end, place the plastic cap with the motor, and fix it to the case using small screws.", "step_imgs": ["https://cdn.instructables.com/FR8/S1CM/JT91J7JP/FR8S1CMJT91J7JP.LARGE.jpg", "https://cdn.instructables.com/F02/DYW6/JT91J7LP/F02DYW6JT91J7LP.LARGE.jpg", "https://cdn.instructables.com/FOJ/GOXR/JT91J7MV/FOJGOXRJT91J7MV.LARGE.jpg", "https://cdn.instructables.com/F43/V518/JT91J7N6/F43V518JT91J7N6.LARGE.jpg", "https://cdn.instructables.com/FWE/LJYB/JT91J7NO/FWELJYBJT91J7NO.LARGE.jpg", "https://cdn.instructables.com/FGP/RMK5/JT91J7Q8/FGPRMK5JT91J7Q8.LARGE.jpg", "https://cdn.instructables.com/F2N/YSTG/JT91J7QT/F2NYSTGJT91J7QT.LARGE.jpg", "https://cdn.instructables.com/F01/4T25/JT91J7U1/F014T25JT91J7U1.LARGE.jpg", "https://cdn.instructables.com/FHY/DPVN/JT91J7UO/FHYDPVNJT91J7UO.LARGE.jpg", "https://cdn.instructables.com/F7G/6IMU/JT91J80I/F7G6IMUJT91J80I.LARGE.jpg", "https://cdn.instructables.com/FHE/BB5V/JT91J82E/FHEBB5VJT91J82E.LARGE.jpg", "https://cdn.instructables.com/FSY/541D/JT91J842/FSY541DJT91J842.LARGE.jpg", "https://cdn.instructables.com/FK6/UKTJ/JT91J8DC/FK6UKTJJT91J8DC.LARGE.jpg", "https://cdn.instructables.com/F68/PMUD/JT91J8E1/F68PMUDJT91J8E1.LARGE.jpg", "https://cdn.instructables.com/FTT/YT8W/JT91J8W0/FTTYT8WJT91J8W0.LARGE.jpg"], "step_title": "Step 9: Electrical Circuit"}, {"step": 10, "steps_text": "Take the 3D glasses and remove the legs. One of the legs will be the mobile arm of the robot. Drill a hole and make a groove in the points shown in the photos. Then attach it to the crank using a screw and a metal washer.\nDrill a small hole in the case, being extremely careful of not piercing the batteries. Attach a metal rod from a small toy car and glue it with superglue. Then, insert a small car wheel to keep the mobile arm in position.", "step_imgs": ["https://cdn.instructables.com/FKL/X9ON/JT91J8P2/FKLX9ONJT91J8P2.LARGE.jpg", "https://cdn.instructables.com/F6B/1D04/JT91J8QF/F6B1D04JT91J8QF.LARGE.jpg", "https://cdn.instructables.com/FCX/GJ37/JT91J8Z1/FCXGJ37JT91J8Z1.LARGE.jpg", "https://cdn.instructables.com/F9T/Q5IW/JT91J8ZC/F9TQ5IWJT91J8ZC.LARGE.jpg", "https://cdn.instructables.com/F4X/LDLL/JT91J93J/F4XLDLLJT91J93J.LARGE.jpg", "https://cdn.instructables.com/FYE/CHVL/JT91J9E2/FYECHVLJT91J9E2.LARGE.jpg", "https://cdn.instructables.com/FO8/H9P7/JT91J9HC/FO8H9P7JT91J9HC.LARGE.jpg", "https://cdn.instructables.com/FKM/TCW0/JT91J9N4/FKMTCW0JT91J9N4.LARGE.jpg", "https://cdn.instructables.com/F58/Y603/JT91J9QM/F58Y603JT91J9QM.LARGE.jpg", "https://cdn.instructables.com/F9D/NG08/JT91J9SI/F9DNG08JT91J9SI.LARGE.jpg", "https://cdn.instructables.com/FG5/G6IH/JT91JA1J/FG5G6IHJT91JA1J.LARGE.jpg", "https://cdn.instructables.com/F32/TWYB/JT91JA3P/F32TWYBJT91JA3P.LARGE.jpg", "https://cdn.instructables.com/F5A/9LNN/JT91JA7C/F5A9LNNJT91JA7C.LARGE.jpg", "https://cdn.instructables.com/FCJ/EFRK/JT91JABP/FCJEFRKJT91JABP.LARGE.jpg", "https://cdn.instructables.com/FQC/LRFV/JT91JAGH/FQCLRFVJT91JAGH.LARGE.jpg", "https://cdn.instructables.com/F26/MSSF/JT91JANV/F26MSSFJT91JANV.LARGE.jpg", "https://cdn.instructables.com/FN9/PWO7/JT91JAQ2/FN9PWO7JT91JAQ2.LARGE.jpg", "https://cdn.instructables.com/F65/803R/JT91JART/F65803RJT91JART.LARGE.jpg", "https://cdn.instructables.com/FO3/S0L5/JT91JAXG/FO3S0L5JT91JAXG.LARGE.jpg"], "step_title": "Step 10: Mobile Arm"}, {"step": 11, "steps_text": "The other arm will be fixed to the body. Drill a hole in the same position of the mobile arm, and skewer it in the other end of the motor's axle (the one without a gearbox). Attach the rest of the arm to the body, again being careful of not piercing the batteries.", "step_imgs": ["https://cdn.instructables.com/F5K/7LVY/JT91JB36/F5K7LVYJT91JB36.LARGE.jpg", "https://cdn.instructables.com/FR0/33Y7/JT91JB4R/FR033Y7JT91JB4R.LARGE.jpg", "https://cdn.instructables.com/FN4/DW9J/JT91JB6B/FN4DW9JJT91JB6B.LARGE.jpg", "https://cdn.instructables.com/F6G/YYOP/JT91JBDJ/F6GYYOPJT91JBDJ.LARGE.jpg", "https://cdn.instructables.com/FH8/WW5Q/JT91JBEM/FH8WW5QJT91JBEM.LARGE.jpg", "https://cdn.instructables.com/FNM/TWYO/JT91JBK8/FNMTWYOJT91JBK8.LARGE.jpg", "https://cdn.instructables.com/F9Z/R9XK/JT91JBKD/F9ZR9XKJT91JBKD.LARGE.jpg"], "step_title": "Step 11: Static Arm"}, {"step": 12, "steps_text": "Using the heat gun, mold the arms to create a hook shape, being careful of not melting any other part of the robot. Check that, during the movement, both arms can move freely without touching each other. Also, the hooks must pass each other, so both of them can catch the rope without difficulty.\nStick some googly eyes to give extra personality to this little guy. Now, have fun with your robot, amaze your friends and give a new opportunity to a 3D pen that probably would finish in the garbage.\nHappy making!", "step_imgs": ["https://cdn.instructables.com/FS7/TZEA/JT91JBVV/FS7TZEAJT91JBVV.LARGE.jpg", "https://cdn.instructables.com/FZA/G8YB/JT91JBZT/FZAG8YBJT91JBZT.LARGE.jpg", "https://cdn.instructables.com/F5R/3H4F/JT91JBZY/F5R3H4FJT91JBZY.LARGE.jpg", "https://cdn.instructables.com/F36/6GW5/JT91JDZN/F366GW5JT91JDZN.LARGE.jpg", "https://cdn.instructables.com/FP4/550H/JT91JE7Z/FP4550HJT91JE7Z.LARGE.jpg", "https://cdn.instructables.com/FTM/13B2/JT91JEDF/FTM13B2JT91JEDF.ANIMATED.LARGE.gif"], "step_title": "Step 12: Arm Hooks"}], "channel": "Reuse"}, {"category": "Technology", "description": "Among the first set of Corvettes that Chevrolet produced, the 1957 model is a bonafide classic! Designer Ben Light put a modern CNC twist on this stunner by showing you how to build a wood and acrylic toy version using the versatile Bantam Tools Desktop PCB Milling Machine. This intermediate-level project assumes you have some experience with the Bantam Tools Desktop PCB Milling Machine, Bantam Tools Desktop Milling Machine Software, and are comfortable using hand tools. If you're just getting started, be sure to check out our series of introductory guides.", "title": "Bantmobile 1957 Corvette", "url": "https://www.instructables.com/id/Bantmobile-1957-Corvette/", "steps": [{"step": 1, "steps_text": "TOOLS\nBantam Tools Desktop PCB Milling Machine\nComputer with Bantam Tools Desktop Milling Machine Software installed\nFlat end mill, 1/8\"\nHammer\nClamps\nDigital calipers\nFlathead screwdriver\nDrill and \u00bc\" drill bit\nMATERIALS\nPlywood, 5\" x 4.5\" x 0.475\" (2)\nAcrylic, red, 5\" x 4.5\" x 0.25\" (2)\nDowel pins, \u00bc\" diameter 1\" long (3)\nWood glue\nAdhesive spray\nDouble-sided tape\nSandpaper, 220 and 400 grit\nPaper towels\nMATERIALS FOR WHEELS AND AXLES\nNylon door roller, 1\u00bd\" (4)\nNylon spacers (4)\nBinding barrels and screws (2)\nO-rings (4)\nSVG FILES\nvette_wood_outside.svg\nvette_wood_inside.svg\nvette_wood_engrave.svg\nvette_plastic_outside.svg\nvette_plastic_engrave.svg\nvette_plastic_holes.svg\nvette_plastic_flip_outside.svg\nvette_plastic_flip_engrave.svg\nvette_plastic_flip_holes.svg\nCUSTOM TOOL LIBRARIES\nCustom tool library for milling wood\nCustom tool library for milling acrylic\nNote: We suggest buying more material than you think you need. A good rule of thumb is to take the amount you think you need and times it by pi.\nSafety first: Before you get started, take the time to learn the proper procedures for your mill, your bits, and your materials. Always use a clean mill. Take care to properly mount the material to the bed. And never leave a running mill unattended.", "step_imgs": [], "step_title": "Step 1: Gather Your Tools and Materials"}, {"step": 2, "steps_text": "The SVG design files you need are all provided in this tutorial. Download them all from the Tools and Materials list.\nTo create them, Ben first drew a simplified version of a \u201857 Corvette and scanned it. He then opened the scan in Vectorworks (which is free for students) and traced on top of the image, mostly using the Arc tool. The file was manipulated until it fit along the diagonal of a 5\" x 4.5\" rectangle. Finally, that file was opened in Adobe Illustrator, where the SVG files were created.", "step_imgs": ["https://cdn.instructables.com/F0Z/1FP7/JT91JZ7F/F0Z1FP7JT91JZ7F.LARGE.jpg", "https://cdn.instructables.com/FDZ/NPC2/JT91JZGT/FDZNPC2JT91JZGT.LARGE.jpg", "https://cdn.instructables.com/FE2/0YII/JT91JZBV/FE20YIIJT91JZBV.LARGE.jpg"], "step_title": "Step 2: Create the Design"}, {"step": 3, "steps_text": "Before you mill, download the Bantam Tools custom tool libraries for wood and acrylic.\nFor wood, download this file, which contains all the recommended feeds and speeds. Then open the Bantam Tools software, click File > Tool Library, click the \u201cImport\u201d button, and select this file.\nFor acrylic, download this file, which contains all the recommended feeds and speeds. Then open the Bantam Tools software, click File > Tool Library, click the \u201cImport\u201d button, and select this file.\nBefore using these settings, it\u2019s a good idea to read through the Bantam Tools Speeds and Feeds Guide.", "step_imgs": [], "step_title": "Step 3: Download and Import the Tool Libraries"}, {"step": 4, "steps_text": "Measure the thickness of the plywood with digital calipers (\u00bd\" plywood is not always exactly \u00bd\" thick). Our plywood measured in at 0.475\" thick.\nIn the software, set Material to \u201cGeneric\u201d and Size to your specific measurements (ours was 5\" x 4.5\" x 0.475\").\nThe double-sided tape we're using to mount the plywood to the spoilboard is 0.003\" thick. In the software, set Placement to 0.003\" for the z-axis. Mount the plywood to the mill bed with the double-sided tape.\nTo mill the wooden parts, use these files:\nvette_wood_outside.svg\nvette_wood_inside.svg\nvette_wood_engrave.svg\nAnd follow these instructions:\nChoose the bit \u215b\u201d FEM Birch for all files.\nFor all files, under \u201cAdvanced\u201d, set \"Scale from\" to \u201cDocument bounds\u201d.\nFor vette_wood_outside.svg, unclick the \u201cEngraving\u201d option.\nFor vette_wood_inside.svg, unclick the \u201cEngraving\u201d option.\nFor vette_wood_inside.svg under \u201cAdvanced\u201d, set Cutout placement to \u201cInside\u201d.\nFor vette_wood_engrave.svg, unclick the \u201cCutout\u201d option.\nFor vette_wood_engrave.svg, set Engraving Depth to 0.475\u201d.\nMill each part. Then remove the plywood, clean the machine, and attach another piece of plywood to the mill bed with double-sided tape. Repeat until you've milled all three parts.", "step_imgs": ["https://cdn.instructables.com/FV4/CZOJ/JT91JZMA/FV4CZOJJT91JZMA.LARGE.jpg", "https://cdn.instructables.com/F6A/C9MV/JT91JZR7/F6AC9MVJT91JZR7.LARGE.jpg", "https://cdn.instructables.com/FLU/H589/JT91JZTX/FLUH589JT91JZTX.LARGE.jpg", "https://cdn.instructables.com/F8C/B47B/JT91JZUA/F8CB47BJT91JZUA.LARGE.jpg"], "step_title": "Step 4: Mill the Plywood Parts"}, {"step": 5, "steps_text": "Make sure you measure your material thickness with digital calipers (\u00bc\"-thick acrylic is not always \u00bc\" thick). Our acrylic thickness measured in at 0.21\".\nIn the software, we set Material to \u201cGeneric\u201d and Size to 5\" x 4.5\" x 0.210\".\nThe double-sided tape we're using to mount the acrylic is 0.003\" thick. In the software, set Placement to 0.003\" for the z-axis. Mount the acrylic to the mill bed with double-sided tape.\nTo mill the first acrylic part, use these files:\nvette_plastic_outside.svg\nvette_plastic_engrave.svg\nvette_plastic_holes.svg\nAnd follow these instructions:\nChoose the bit 1/8\" FEM Acrylic for all files.\nFor all files under \u201cAdvanced\u201d, set \"Scale from\" to \u201cDocument bounds\u201d.\nFor vette_plastic_outside.svg, unclick the \u201cEngraving\u201d option.\nFor vette_plastic_engrave.svg, unclick the \u201cCutout\u201d option.\nFor vette_plastic_engrave.svg, set Engraving Depth to 0.21\".\nFor vette_plastic_holes.svg, unclick the \u201cCutout\u201d option.\nFor vette_plastic_holes.svg, set Engraving Depth to 0.1\".\nMill the part.\nTo mill the next acrylic part, use the same placement and material size as the last operation, but use these files:\nvette_plastic_flip_outside.svg\nvette_plastic_flip_engrave.svg\nvette_plastic_flip_holes.svg\nAnd follow these instructions:\nChoose the bit 1/8\" FEM Acrylic for all files.\nFor all files under \u201cAdvanced\u201d, set \"Scale from\" to \u201cDocument bounds\u201d.\nFor vette_plastic_flip_outside.svg, unclick the \u201cEngraving\u201d option.\nFor vette_plastic_flip_engrave.svg, unclick the \u201cCutout\u201d option.\nFor vette_plastic_flip_engrave.svg, set Engraving Depth to 0.21\u201d.\nFor vette_plastic_flip_holes.svg, unclick the \u201cCutout\u201d option.\nFor vette_plastic_flip_holes.svg, set Engraving Depth to 0.1\u201d.\nMill the part.", "step_imgs": ["https://cdn.instructables.com/FIS/OAMR/JT91JZYS/FISOAMRJT91JZYS.LARGE.jpg", "https://cdn.instructables.com/FNT/BOGP/JT91K042/FNTBOGPJT91K042.LARGE.jpg", "https://cdn.instructables.com/FB5/5AQY/JT91K093/FB55AQYJT91K093.LARGE.jpg", "https://cdn.instructables.com/FS6/TJ3C/JT91K0EL/FS6TJ3CJT91K0EL.LARGE.jpg", "https://cdn.instructables.com/F96/M5SD/JT91K0KU/F96M5SDJT91K0KU.LARGE.jpg", "https://cdn.instructables.com/FFB/59NJ/JT91K0NB/FFB59NJJT91K0NB.LARGE.jpg"], "step_title": "Step 5: Mill the Acrylic Parts"}, {"step": 6, "steps_text": "The plywood can be a little fuzzy after milling. Give the plywood pieces a quick sanding with the 220 and 400 sandpaper before glue-up.\nPlace a dowel pin in each of the three holes indicated in one of the images shown here.\nSpread a little bit of wood glue on the other piece of plywood (a little goes a long way). Squeeze the two pieces of plywood together, using the dowel pins to align the two halves. The dowel pins should stick out a little on both ends.\nClamp the two pieces together. Clean any glue that squeezes out with a wet paper towel. Allow to dry overnight.\nPlace the red pieces of milled acrylic on a flat surface, holes side up. Spray the adhesive on the acrylic surfaces.\nFasten a piece of acrylic on both sides of the plywood car. The acrylic should line up with the dowel pins that are sticking out. Clamp the assembly with spring clamps. Allow to dry overnight.\nWhen everything is dry, sand all the outer edges and inside the window with 220 sandpaper. Then sand everywhere with 400 sandpaper, including the acrylic surfaces. You can continue to sand with higher and higher grits to get a smoother finish.", "step_imgs": ["https://cdn.instructables.com/FP3/FZY6/JT91K0PF/FP3FZY6JT91K0PF.LARGE.jpg", "https://cdn.instructables.com/FME/RKR0/JT91K0R2/FMERKR0JT91K0R2.LARGE.jpg", "https://cdn.instructables.com/F0J/XBUE/JT91K0WI/F0JXBUEJT91K0WI.LARGE.jpg", "https://cdn.instructables.com/F00/8Q55/JT91K11B/F008Q55JT91K11B.LARGE.jpg", "https://cdn.instructables.com/FQK/5QT9/JT91K13Y/FQK5QT9JT91K13Y.LARGE.jpg", "https://cdn.instructables.com/FTY/Z24H/JT91K16R/FTYZ24HJT91K16R.LARGE.jpg", "https://cdn.instructables.com/F2U/8XFW/JT91K18G/F2U8XFWJT91K18G.LARGE.jpg", "https://cdn.instructables.com/FJO/LCBL/JT91K19H/FJOLCBLJT91K19H.LARGE.jpg", "https://cdn.instructables.com/FPO/E6WC/JT91K1C4/FPOE6WCJT91K1C4.LARGE.jpg"], "step_title": "Step 6: Assemble and Sand the Car"}, {"step": 7, "steps_text": "Obviously not everyone has access to a wood lathe with a wax-polishing wheel attachment, but if you do, this is the recommended way to finish your Bantmobile. Just a few minutes on each side using only the Tripoli Polishing Buffing Compound leaves an amazing glass-like finish. It also has the added benefit of softening all of the sharp edges of the acrylic. In the image here, the car in the back is sanded and waxed but the one in the front is just sanded. Big difference!", "step_imgs": ["https://cdn.instructables.com/FUY/ECRV/JT91K1E6/FUYECRVJT91K1E6.LARGE.jpg"], "step_title": "Step 7: Wax the Acrylic (Optional)"}, {"step": 8, "steps_text": "Put a rubber O-ring around the outer edge of each of the white door rollers.\nPut one roller onto each binding barrel, then put one nylon spacer on each binding barrel.\nSlide each binding barrel into the holes in the wooden car body. Then place a nylon spacer onto each binding barrel.\nIf the holes are clogged with dried wood glue, clear them out with a drill and \u00bc\" drill bit.\nPlace a roller onto each binding barrel and screw in the binding barrel screws with a flathead screwdriver. Do not over-tighten \u2014 make sure the wheels spin freely.\nThat\u2019s it, you\u2019re ready to roll!", "step_imgs": ["https://cdn.instructables.com/FE6/J245/JT91K1FE/FE6J245JT91K1FE.LARGE.jpg", "https://cdn.instructables.com/FYE/P6SC/JT91K1G9/FYEP6SCJT91K1G9.LARGE.jpg", "https://cdn.instructables.com/FFM/UFBO/JT91K1HU/FFMUFBOJT91K1HU.LARGE.jpg", "https://cdn.instructables.com/FNN/7DZW/JT91K1LI/FNN7DZWJT91K1LI.LARGE.jpg", "https://cdn.instructables.com/F3H/HO6M/JT91KZFG/F3HHO6MJT91KZFG.LARGE.jpg"], "step_title": "Step 8: Assemble the Wheels and Roll"}], "channel": "CNC"}, {"category": "Technology", "description": "Windup Bunny 2 is a dual floating pinion all wheel drive update to my original Windup Bunny of years ago. Even though Windup Bunny 2 is larger (1.5 times) and heavier (120 grams versus 64 grams) than the original Windup Bunny, it runs faster and further thanks to its dual floating pinion / rotating pinion gear carriage design along with a stronger spring.\nI've designed rear wheel drive floating pinion models before that utilize both gravity and rotational momentum in order to disengage the rear axle from the spring motor once the spring motor energy is depleted. Windup Bunny 2 is more complicated in that it is all wheel drive thus both the rear and front axles must disengage from the spring motor in order to coast and / or function as a push / pull toy. In order to accomplish this, the design incorporates a rotating dual floating pinion carriage with a rear mass heavy enough to disengage both the front and rear axles from the spring motor once the spring motor energy is depleted.\nWindup Bunny 2 is another favorite of our kids and grandkids, providing both a windup and push / pull toy for the older and younger family members. And while much sturdier than the original Windup Bunny, it does require patience and finesse to print, assemble and test.\nAs usual, I probably forgot a file or two or who knows what else, so if you have any questions, please do not hesitate to point them out as I do make mistakes in plenty.\nDesigned using Autodesk Fusion 360, sliced using Cura 3.5.0, and printed in PLA and Tough PLA on an Ultimaker 2+ Extended and an Ultimaker 3 Extended.", "title": "Windup Bunny 2 With a PLA Spring Motor and Floating Pinion Drive", "url": "https://www.instructables.com/id/Windup-Bunny-2/", "steps": [{"step": 1, "steps_text": "I purchased four 31mm I/D by 3.5mm section O-Rings for the \"tires\".\nPlease refer to the file \"Windup Bunny 2.pdf\" for the parts count and settings.\nPrior to assembly, I test fit and trimmed, filed, sanded, etc. all parts as necessary for smooth movement of moving surfaces, and tight fit for non moving surfaces. If you decide to make your own Windup Bunny 2, depending on the colors you chose, your printer model and your printer settings, more or less trimming, filing and/or sanding may be required. I carefully filed all edges that contacted the build plate to make absolutely certain that all build plate \"ooze\" was removed and that all edges were smooth, especially the gear teeth. I used small jewelers files and plenty of patience to perform this step. I also used 6mm by 1 right hand threaded taps and dies to prepare the threaded parts prior to assembly.", "step_imgs": [], "step_title": "Step 1: Purchase, Print and Prepare the Parts."}, {"step": 2, "steps_text": "I assembled the Floating Pinion Carriage as follows:\nPositioned \"Gear, Idler, Front (8, 1.5).stl\" and \"Gear, Idler, Rear (8, 1.5).stl\" onto \"Carriage, Left.stl\".\nPositioned \"Carriage, Right.stl\" onto the carriage assembly, then secured carriage right in place with two \"Axle, Carriage.stl\".\nThreaded \"Bolt, Carriage.stl\" into the assembly.\nWith the floating pinion carriage assembled, I made sure the pinions rotated freely in the carriage.", "step_imgs": ["https://cdn.instructables.com/FSM/DE70/JT91LXHX/FSMDE70JT91LXHX.LARGE.jpg", "https://cdn.instructables.com/FT2/K0I4/JT91LXM8/FT2K0I4JT91LXM8.LARGE.jpg", "https://cdn.instructables.com/FJD/EYK7/JT91LXVX/FJDEYK7JT91LXVX.LARGE.jpg", "https://cdn.instructables.com/FVI/UOTT/JT91LY0V/FVIUOTTJT91LY0V.LARGE.jpg", "https://cdn.instructables.com/FK4/C9EK/JT91LY21/FK4C9EKJT91LY21.LARGE.jpg", "https://cdn.instructables.com/FYU/G1G1/JT91LY25/FYUG1G1JT91LY25.LARGE.jpg", "https://cdn.instructables.com/F8D/QTUE/JT91LY4G/F8DQTUEJT91LY4G.LARGE.jpg"], "step_title": "Step 2: Assemble the Floating Pinion Carriage."}, {"step": 3, "steps_text": "To assemble the Frames, I performed the following steps:\nPositioned \"Knob and Axle.stl\" into \"Frame, Left.stl\".\nPressed \"Spring.stl\" onto \"Knob and Axle.stl\" while positioning the spring end onto the spring mount in \"Frame, Left.stl\".\nPressed \"Pawl.stl\" onto \"Knob and Axle.stl\".\nPositioned \"Gear, Pawl (40, 1.5).stl\" onto \"Pawl.stl\".\nPositioned \"Gear, Compound ((8, 1.5), (40, 1.5)).stl into the carriage assembly.\nSlid the carriage assembly onto the frame assembly.\nSecured \"Frame, Right.stl\" onto the assembly using three \"Bolt, Frame.stl\".\nSecured \"Frame, Left.stl\" using three \"Bolt, Frame.stl.\nWith the frames assembled, I made sure the spring motor functioned properly, and that the carriage assembly rotated freely.", "step_imgs": ["https://cdn.instructables.com/FNA/IHFT/JT91M417/FNAIHFTJT91M417.LARGE.jpg", "https://cdn.instructables.com/F72/HVNF/JT91M43G/F72HVNFJT91M43G.LARGE.jpg", "https://cdn.instructables.com/FBG/CLNW/JT91M45P/FBGCLNWJT91M45P.LARGE.jpg", "https://cdn.instructables.com/FII/94GA/JT91M480/FII94GAJT91M480.LARGE.jpg", "https://cdn.instructables.com/FHF/VVQ4/JT91M487/FHFVVQ4JT91M487.LARGE.jpg", "https://cdn.instructables.com/F16/21PE/JT91M48C/F1621PEJT91M48C.LARGE.jpg", "https://cdn.instructables.com/FWN/3APR/JT91M48G/FWN3APRJT91M48G.LARGE.jpg", "https://cdn.instructables.com/FCZ/U2RI/JT91M48L/FCZU2RIJT91M48L.LARGE.jpg", "https://cdn.instructables.com/FS0/M3BN/JT91M48O/FS0M3BNJT91M48O.LARGE.jpg", "https://cdn.instructables.com/FOF/2M2W/JT91M48U/FOF2M2WJT91M48U.LARGE.jpg", "https://cdn.instructables.com/FUX/22XD/JT91M4FR/FUX22XDJT91M4FR.LARGE.jpg", "https://cdn.instructables.com/FGQ/D2XD/JT91M4IQ/FGQD2XDJT91M4IQ.LARGE.jpg", "https://cdn.instructables.com/FUA/GTZL/JT91M4L1/FUAGTZLJT91M4L1.LARGE.jpg", "https://cdn.instructables.com/FHO/2LFY/JT91M4NA/FHO2LFYJT91M4NA.LARGE.jpg", "https://cdn.instructables.com/FJD/JAAT/JT91M4PL/FJDJAATJT91M4PL.LARGE.jpg", "https://cdn.instructables.com/F0D/VHHZ/JT91M4RU/F0DVHHZJT91M4RU.LARGE.jpg", "https://cdn.instructables.com/F7B/REMB/JT91M4U3/F7BREMBJT91M4U3.LARGE.jpg"], "step_title": "Step 3: Assemble the Frames."}, {"step": 4, "steps_text": "To add the Wheel Axles and Wheels, I performed the following steps:\nWrapped the four O-Rings on each of the four wheels.\nPressed \"Gear, Axle, Front (8, 1.5).stl\" onto \"Axle, Front.stl\" exactly 21.20mm from one end of \"Axle, Front.stl\". If the gear was not tight on the axle, I used a small dot of cyanoacrylate glue to secure it in place.\nPressed \"Gear, Axle, Rear (8, 1.5).stl\" onto \"Axle, Rear.stl\" exactly 25.20 mm from one end of \"Axle, Rear.stl\". If the gear was not tight on the axle, I used a small dot of cyanoacrylate glue to secure it in place.\nPositioned the front axle assembly between the left and right frames such that the gear aligns with \"Gear, Idler, Front (8, 1.5).stl\".\nPressed one \"Wheel, Front.stl\" onto the front axle assembly, with the axle flush with the wheel outer surface.\nPressed the remaining \"Wheel, Front.stl\" onto the axle assembly, 180 degrees out of phase from the first wheel, with the axle flush with the wheel outer surface.\nPositioned the rear axle assembly between the left and right frames such that the gear aligns with \"Gear, Idler, Rear (8, 1.5).stl\".\nPressed one \"Wheel, Rear.stl\" onto the rear axle assembly, with the axle exactly 4mm proud of the wheel outer surface.\nPressed the remaining \"Wheel, Rear.stl\" onto the rear axle assembly, with the axle exactly 4mm proud of the wheel outer surface.\nWith the wheel axles and wheels assembled, I made sure that both the front and rear axles rotated freely.", "step_imgs": ["https://cdn.instructables.com/FA8/3CZJ/JT91MGXZ/FA83CZJJT91MGXZ.LARGE.jpg", "https://cdn.instructables.com/FB3/TJDF/JT91MH0N/FB3TJDFJT91MH0N.LARGE.jpg", "https://cdn.instructables.com/F13/YYQP/JT91MH6K/F13YYQPJT91MH6K.LARGE.jpg", "https://cdn.instructables.com/FET/5ZPF/JT91MH6Q/FET5ZPFJT91MH6Q.LARGE.jpg", "https://cdn.instructables.com/F62/5ET5/JT91MH6V/F625ET5JT91MH6V.LARGE.jpg", "https://cdn.instructables.com/F2L/7GGL/JT91MH73/F2L7GGLJT91MH73.LARGE.jpg", "https://cdn.instructables.com/FYD/G4Z1/JT91MH7Y/FYDG4Z1JT91MH7Y.LARGE.jpg", "https://cdn.instructables.com/F8K/S84H/JT91MH8A/F8KS84HJT91MH8A.LARGE.jpg", "https://cdn.instructables.com/F7T/WVAD/JT91MH8I/F7TWVADJT91MH8I.LARGE.jpg", "https://cdn.instructables.com/FKV/87EL/JT91MH8R/FKV87ELJT91MH8R.LARGE.jpg", "https://cdn.instructables.com/FEC/O62D/JT91MH8Y/FECO62DJT91MH8Y.LARGE.jpg", "https://cdn.instructables.com/FB6/8LR8/JT91MH94/FB68LR8JT91MH94.LARGE.jpg"], "step_title": "Step 4: Add the Wheel Axles and Wheels."}, {"step": 5, "steps_text": "I performed the following steps for Final Assembly:\nPositioned \"Foot, Right.stl\" onto the assembly and secured in place with one \"Axle, Foot.stl\" and one \"Hub, Foot.stl\".\nPositioned \"Foot, Left.stl\" onto the assembly and secured in place with the remaining \"Axle, Foot.stl\" and remaining \"Hub, Foot.stl\".\nAnd that is how I printed and assembled Windup Bunny 2.\nI hope you enjoy it!", "step_imgs": ["https://cdn.instructables.com/FP7/M4RR/JT91MICM/FP7M4RRJT91MICM.LARGE.jpg", "https://cdn.instructables.com/FBP/L9E2/JT91MICQ/FBPL9E2JT91MICQ.LARGE.jpg", "https://cdn.instructables.com/FC7/FW80/JT91MICU/FC7FW80JT91MICU.LARGE.jpg", "https://cdn.instructables.com/FAU/CBFM/JT91MID4/FAUCBFMJT91MID4.LARGE.jpg", "https://cdn.instructables.com/FZ4/A2VN/JT91MID7/FZ4A2VNJT91MID7.LARGE.jpg", "https://cdn.instructables.com/FAL/CYJ1/JT91MIDB/FALCYJ1JT91MIDB.LARGE.jpg", "https://cdn.instructables.com/FLE/NMKW/JT91MIDI/FLENMKWJT91MIDI.LARGE.jpg", "https://cdn.instructables.com/FWC/7J2B/JT91MIDK/FWC7J2BJT91MIDK.LARGE.jpg", "https://cdn.instructables.com/FYQ/CZ5U/JT91MIDQ/FYQCZ5UJT91MIDQ.LARGE.jpg"], "step_title": "Step 5: Final Assembly."}], "channel": "3D Printing"}, {"category": "Technology", "description": "Ever since my first bench power supply project, I have wanted to build another one which would be much smaller and cheaper. The issue with the first one was that the total cost was over 70$ and it was overpowered for most of my applications. I wanted to have multiple power supplies on my bench so that I can power more than one project at a time but the cost and size didn't allow it.\nSo I decided to build a mini bench power supply. My main goal with this power supply was low cost, small size and visually appealing aesthetic. I wanted it to cost no more that $25. I wanted to have variable current and voltage settings. And I wanted a decent output power of ~ 30 Watts.\nSo follow me along as I take my goals and turn them into a reality. If you like my work, please support me by voting for me and by sharing with you like minded friends.\nFollow me on other platforms for more news and content on upcoming projects\nFacebook: Badar's Workshop\nInstagram: Badar's Workshop\nYoutube: Badar's Workshop", "title": "Mini Bench Power Supply", "url": "https://www.instructables.com/id/Mini-Bench-Power-Supply/", "steps": [{"step": 1, "steps_text": "I started my design for the power supply with the selection of the switch mode power supply. I found 19 Volt 1.6 Amp laptop chargers in an electronics recycling center. They were small in size and good quality so they were perfect for my mini power supply.\nI chose to use a buck converter with constant current and constant voltage modes as my regulator module. This was easily available and very low cost.\nFor the display, I first purchased the buck converter with the integrated volt/amp meter but the seven segment display was very dim so I scrapped that plan and bought a panel volt/amp meter.\nOnce I had all the parts, I mocked up my design and used an electronic load to perform some testing to see if the power supply can provide the output power I wanted.\nAfter several hours under full load, the thermals were within safe limits so I went ahead with the design.", "step_imgs": ["https://cdn.instructables.com/FER/QQX0/JT91RA6S/FERQQX0JT91RA6S.LARGE.jpg"], "step_title": "Step 1: Design and Testing"}, {"step": 2, "steps_text": "You will need the following parts:\n19V 1.6Amp Laptop Charger eBay\n5A DC - DC Step Down Module CC CV AliExpress\nPanel Volt/Amp Meter AliExpress\nBanana Jack Binding Posts AliExpress\nIEC 320 C8 Panel Socket with Switch AliExpress\n10K Potentiometer AliExpress\n6mm MOS Heat Sink AliExpress\nPotentiometer Knobs AliExpress\nTerminal Connectors\nWires\nYou will also need the 3D Printed and Laser Cut housing which we will talk about in the next step.", "step_imgs": ["https://cdn.instructables.com/F5J/KZ8Z/JT91RAYZ/F5JKZ8ZJT91RAYZ.LARGE.jpg"], "step_title": "Step 2: Parts Required"}, {"step": 3, "steps_text": "For the housing, I wanted to use laser cut plywood as I have never used it before for any of my electronics projects. I also wanted to experiment with living hinges. That being said, I will attach my SolidWorks model and my CorelDraw laser cutter files. If you have access to both a 3D Printer and a laser cutter, you can follow what I did. Otherwise you can 3D Print the entire housing.\nI used 1/8\" plywood for the top and sides of the housing. I used laser cut living hinges to add some of the curvature. I 3D Printed the base as it was the easiest way to secure all the modules to the bottom and to make the power supply serviceable.\nSomething to keep in mind is that the tolerances on the Main Body model are set for laser cutter and not 3D Printing so you would need to experiment with those.\nI experimented with the tolerances on all my files at least 2 to 3 times to get them just right. Your machines may vary hence you would need to experiment a little as well. Having the clips in the base and the cutouts for the push fit panel meter just right is a bit tricky so I would recommend testing them out first separately if possible.", "step_imgs": ["https://cdn.instructables.com/FP4/65L8/JT91RBT9/FP465L8JT91RBT9.LARGE.jpg"], "step_title": "Step 3: Housing Design"}, {"step": 4, "steps_text": "Like I mentioned before, I started off the housing build the right way by first testing all my dimensions. Although it may be worth mentioning that I still ended up redoing the housing 3 times but the testing probably helped avoid redoing it more than three times.\nI laser cut the pieces, cleaned them and sanded them. Then I used superglue to glue them together. Then I 3D Printed the base and I was done. Well all of that times three because I had one dimension wrong and them my living hinge was too weak. For the 3D Printed base I designed clips to hold everything in place and when you design clips, dimensions are very important so I ended up reprinting many times.\nBut once I was done, I tested the fit and despite some minor gaps here and there, I was happy with how it looked.", "step_imgs": ["https://cdn.instructables.com/F95/LAH1/JT91RC7P/F95LAH1JT91RC7P.LARGE.jpg", "https://cdn.instructables.com/FMY/BSB4/JT91RC7O/FMYBSB4JT91RC7O.LARGE.jpg", "https://cdn.instructables.com/FYU/SSYE/JT91RC7N/FYUSSYEJT91RC7N.LARGE.jpg", "https://cdn.instructables.com/F8S/1S1I/JT91RC7M/F8S1S1IJT91RC7M.LARGE.jpg"], "step_title": "Step 4: Housing Construction"}, {"step": 5, "steps_text": "The assembly for builds like these is never too complicated. It just wiring everything together and making it fit.\nSince I designed the housing to be as small as possible, everything will fit in very snugly. I also used connectors and terminals so that I can disassemble everything fairly easily. Its the attention to detail what counts when it comes to good design and build quality. Even though it is much easier to solder every wire, a more professional approach is properly sized connectors with solid crimped wires.\nFirst step is to remove the potentiometers on the buck converter and replace it with jst connectors. Then solder some wires to the panel mount pots and crimp on the jst connectors. Put a heatsink on the voltage regulator.\nNext step is to prepare the psu. Cut open its plastic case and desolder the input and output wires. Solder some wires on the input and output. Take note of the thickness of the wires as these would be the main current carrying wires hence we want to be appropriately sized.\nNext, snap the two module in the base and crimp on the terminals for the binding post and the mains input. Screw in the connections based on the schematic.\nFinally tuck everything in and close the case. A good way to do this is to keep the panel meter and the IEC connector popped out. Once you close the base, tuck in the wires and then push in the two modules.\nLastly, stick some non slip feet on the base so that it doesnt slip on your bench.", "step_imgs": ["https://cdn.instructables.com/F2V/558Q/JT91RD6C/F2V558QJT91RD6C.LARGE.jpg", "https://cdn.instructables.com/FO2/HAO7/JT91RD6B/FO2HAO7JT91RD6B.LARGE.jpg", "https://cdn.instructables.com/FYS/3KWL/JT91RD6A/FYS3KWLJT91RD6A.LARGE.jpg", "https://cdn.instructables.com/FBV/NTXV/JT91RD68/FBVNTXVJT91RD68.LARGE.jpg", "https://cdn.instructables.com/FFO/TAL1/JT91RD6I/FFOTAL1JT91RD6I.LARGE.jpg", "https://cdn.instructables.com/FQI/6ODR/JT91RD69/FQI6ODRJT91RD69.LARGE.jpg"], "step_title": "Step 5: Main Assembly"}, {"step": 6, "steps_text": "Once I was done with assembly, I wanted to test it out but unfortunately I wired my voltage regulator in backwards and fried it. So I had to use my backup. Once I did that, I was able to vary the voltage and control the current as expected.\nTesting the supply did reveal some flaws. One of the major flaw is that the voltage and current adjustment doesnt span the full range of the pots and thats because I am not using the full range of the driver. That just makes the adjustment very finicky. But I have some smaller value pots in the mail and will be testing with them to modify the circuit for my current and voltage range. I also have some knobs for the pots in the mail. For now I just 3D Printed some but will be getting the actual ones soon which will make it more ergonomic.\nTesting also revealed that drawing more power than the power supply can handle results in a shutdown followed by a self reset, which is a neat feature to have as the power supply is smart enough not to damage itself if it is shorted out.", "step_imgs": ["https://cdn.instructables.com/F1P/1SRR/JT91RE4I/F1P1SRRJT91RE4I.LARGE.jpg"], "step_title": "Step 6: Testing"}, {"step": 7, "steps_text": "Overall I am very happy with how it looks and I will be using it in the future to test it out in practical situations. This is just the first version and I will be working on it to make improvements. I would love to hear from your guys what you think about it. Maybe suggest areas where I can improve. My eventual goal is to turn this into a marketable product and would love some feedback.\nAnyways, thank for following along and once again, please support my work by voting for me. All the help is highly appreciated.", "step_imgs": ["https://cdn.instructables.com/FYJ/1292/JT91REHI/FYJ1292JT91REHI.LARGE.jpg", "https://cdn.instructables.com/FGE/7D3J/JT91REHJ/FGE7D3JJT91REHJ.LARGE.jpg"], "step_title": "Step 7: Conclusion"}], "channel": "Tools"}, {"category": "Technology", "description": "GRADES 6 - 8, Social Studies, Science, Engineering\nLesson Overview\nCam toys (aka automata) use hand-powered mechanisms to create cyclical motions that animate a scene. Students design and create cam toy machines with moving objects/characters that symbolize abstract concepts and represent dynamic situations.\nThe lesson is structured to follow the Engineering Design Process (EDP), a process widely used by designers in any discipline to tackle challenges. While there are many ways that people solve problems, designers often opt to use the EDP because it offers a roadmap for the project journey and will help them work efficiently and effectively. The process requires that the designer first clearly Define the challenge, then Learn about and Explore existing solutions, before beginning the design stage. This understanding of the problem, combined with the Design step requirement of generating at least 3 different ideas, allows for a rich set of creative solutions to draw from in choosing a design direction. The designer is now ready to prototype the solution in the Create step. An important feature of the EDP is the expectation that the designer will build 2 or more prototypes after the direction is set. This is done by cycling through the Create and Observe/Improve steps a few times. It is recommended that students have an opportunity for at least 2 design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second and later times through the cycle, they can fix flaws and adopt successful ideas from classmates. Hopefully, the designer will have an opportunity to Reflect on the product they created and the process they followed, looking for learning habits and insights that will help in future challenges. The Share step involves documentation, publishing, or presenting to affirm the project and inspire others.\nEssential Question(s)\nHow can creating metaphors be used to increase understanding and enhance communication skills?\nHow can movement and imagery be used to create metaphors for social, scientific, and other academic concepts?\nSkills Practiced:\nAnalysis and Abstract Modeling\nMechanical design\nEngineering Design\n3D modeling in Tinkercad\nTime Required: 3-4 Hours\nMaterials Needed:\nSketch paper\n3D printer and filament\nCraft materials such as (cardstock, foam sheets, markers, hot glue)\nFlexible PVC tubing, \u00bc\u201d inside diameter\nWood dowels, \u00bc\u201d diameter (optional, to reduced 3D printing time)", "title": "Mechanical Cam Toys", "url": "https://www.instructables.com/id/Mechanical-Cam-Toys/", "steps": [{"step": 1, "steps_text": "Context\nCreating physical objects can be an engaging and useful way for students to process their learning. Some physical models are directly representative of the academic content, such as a depiction of a sound wave, or a model of a cell. Abstract concepts, like a balance of power, ecological interactions, or societal changes, are also well-suited to modeling. Students practice higher order thinking skills when creating metaphors and symbols for abstract concepts. Coming up with imagery for social, scientific, or other academic concepts pushes the student to research the topic and develop a deeper understanding of it. The addition of motion, as in the Cam Toy activity, can make the project even more engaging and lead to creative, entertaining products.\nCams are rotating shapes that push on / rub against mechanical elements to create other motions. One rotating shaft can power many cams, and each can create a different motion in its associated mechanical element. Students decide which of these motions is best for the specific concepts they want to represent. In this project, students design the cams and moving objects in Tinkercad for fabrication on a 3D printer or laser cutter. Backgrounds or other static objects can be designed in Tinkercad and fabricated in a variety of ways for a more elaborate Cam Toy machine.\nChallenge: Design and build a Cam Toy with motions and scenery that represent concepts related to the specified topic. Students may work in groups of 2 or 3. A Cam Toy base, rotating shaft, and a few cam designs are provided at this Tinkercad link. The base accommodates 2 motions. Students can modify the models to make smaller or larger machines.\nCriteria:\nIncludes 2 characters/objects that move when the toy is operated. Possible motion types are:\nUp-down\nSpin\nSide-to-side\nIncludes 1 static object that is a background, piece of scenery, or other objects.\nThe motions and scenery must represent concepts related to the specified topic.\nConstraints:\nThe 2 motions must be different. The same type of motion can be used twice if the 2 motions differ either in frequency or magnitude. (For example, if there are 2 up-down motions 1 can have 2 rises/falls per cycle while the other has 1. For spinning, 1 can spin at a faster speed than the other.\nThe appearance and motions of the characters and objects must communicate the intended concept.\nStudent Product / Learning Goals\nStudents will choose motions that express physical or abstract concepts. They will design and build a working cam toy that expresses these concepts as a representative model or metaphor.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research:\nReview the motions and mechanisms that are easily implemented in the Cam Toy. Show examples of the 3 motions that are simplest to build (up-down, spin, and side-to-side), An online search using the search term \u201cstudent automata\u201d will yield many videos. The Cabaret Mechanical Theater group in the UK has been creating fine wooden automata for decades. Their site is https://cabaret.co.uk/\nPick a topic for the class and see that each student group has a concept to represent in their Cam Toy.\n2. Collect:\nHave students document their research on the automata, noting mechanisms and features that they found interesting or may be relevant to their topic. Students can keep notes on the things they learned or that intrigued them on an inspiration page such as a blog, Google Docs, a notebook, poster, etc.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "1. Design:\nStudents work together to brainstorm ideas on how to represent the topic they are assigned using the mechanical motions commonly done in automata. Use the inspiration page as a reference and create a design that is simple enough to build while still being complex enough to communicate an idea. Backgrounds, scenery and other static objects can be very helpful in communicating the idea. The design process is most effective when designers create at least 3 different ideas.\nOption A: draw designs on how the Cam Toy will look and/or function. Use paper, whiteboard, drawing apps.\nOption B: Build simple models using crafting materials (paper, glue, clay, pipe cleaners, etc.) to show look and/or function\nOption C: Let the students play around in Tinkercad to get familiar with the program and make practice models.\nExample project for Social Studies: Systems and Interactions and in the United States Government.\nOne concept to explore is the differences between the 2 parts of Congress, House of Representatives and the Senate.\nThe House has 435 members as opposed to 100 in the\nSenate The length of term in the House is 2 years, while the Senate term is 6 years.\nThe Senate has the power to confirm judges, Cabinet members etc, while the House does not.\nThis design shows the differences in term lengths and includes a non-traditional cam shape - a triangle. In one rotation of the camshaft, the triangle cam will move the House up-down three times while the eccentric circular cam will move the Senate up-down once. The student may express that one rotation of the camshaft represents 6 years.\nExample projects for Earth Science:\nHurricanes. One factor in the creation of a hurricane is warm air rising off the ocean. This is shown with up/down motion. The spinning storm is shown with rotary motion.\nSea breezes on the beach. They are caused by heat rising from warm beach sand and can be shown with up/down motion. The breeze comes in from the ocean to fill the void from the rising air; it is shown with side-to-side motion or rotary motion.\nLand breeze at the beach during nighttime - a reverse of the previous example.\n2. Choose a Direction: Have the students choose a design that meets the criteria of the project. Consider also checking it against the \u201cThing\u201d Checklist (this checklist can be found in the Resource section of the Lesson).", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "Sketch a front view of the overall Cam Toy idea including the base, the mechanism pieces, characters, and background. It can be helpful to lay it out on graph paper to get the sizes correct.\nList the motions you expect to create and draw the appropriate cams.\nFor the up-down motion, you need a circle cam with an off-center hole\nFor the spinning motion draw a circle cam with a centered hole\nFor a side-to-side motion, you need 2 circle cams with off-center holes. Make sure the D-shaped holes are reversed\nCreate models of the base and all mechanical parts on Tinkercad\nSamples of the Cam Toy base and mechanism parts https://www.tinkercad.com/things/1LklmG8A0Ua The next instructions will show you how to make them on your own.\nAll dimensions for a basic toy are included in the videos here. If you want to design from a CAD drawing, you will find dimensioned drawings for all Cam Toy parts (Base, Various Cams, Rotating Handle, and Cam Followers) this document.\nOption to reduce 3D printing time: Choose whether you will use wood dowels for the Cam Shafts and/or Cam follower shafts. Use \u00bc\u201d wood dowels for the drive shaft and the cam followers.\nMake the Cam Toy base. See video and/or the dimensioned drawing for a starter design. Students may want to modify this design to accommodate more mechanisms.\nMake mechanism parts (cams, drive shaft, cam followers) See video and/or drawing for a starter design. If using a wood dowel for the camshaft, then holes in cams should be circles, not \u201cDs\u201d, and they will need to be glued on.\nMake the characters/objects and all scenery/props using craft materials or 3D printer\nAssemble and align all the parts and use PVC tubing to hold them in place Will create assembly video", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "1. Play with the Cam Toys! See if others can figure out what they mean before they are explained. Encourage students to share their creations and get feedback from peers.\n2. It is recommended that students have an opportunity for at least 2 design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\n3. Provide stopping points for the class where students can observe, evaluate, and document their design.\n4. Give students a chance to record their thoughts and progress as they work through product iteration cycles. This can serve as a formative assessment.\n5. Follow instructions in the Create Step as needed for the next iteration.", "step_imgs": [], "step_title": "Step 5: Observe, Improve, Iterate"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "Give the students an opportunity to share their Cam Toy with the class or some other community. Options for sharing include presentation, demonstration, blog or online post, video clip, physical display, family events, and maker fairs, or in the use for which it was intended.", "step_imgs": [], "step_title": "Step 7: Share"}, {"step": 8, "steps_text": "Create CamToys for physical and abstract concepts such as:\nScience\nChemical reactions/phase changes of matter\nPollination/ plant growth\nCell processes\nEffects of climate change/rising sea level\nMath\nMathematical relationships\nSocial Studies\nPersonal growth - transformations in environment/appearance/ skills\nChange in power balance before/after conflict/event\nAmerican westward expansion\nMedieval life and social structures\nUnderstanding of race in the US\nWomen\u2019s roles in society\nReactions to social stresses such as taxes/tariffs/ cultural oppression/ work conditions\nCitizenship and stewardship examples\nELA\nPersonal growth - transformations in environment/appearance/ skills\nScenes from a story/novel/play/history\nAnimated character from story/novel/play/history\nWorld Languages\nCultural norms in world cultures\nStudents 13 and older can learn how to make a digital animation of a mechanical design using Fusion 360 (free for students and teachers):\nWe hope you had fun designing and sharing your Cam Toys. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in?\nSend us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nLists of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 8: Project Extensions"}], "channel": "3D Printing"}, {"category": "Technology", "description": "This tutorial is about making a little shape that creates a lot of reflections inside. With holes on every angle for light and a little window to see through, you can watch this infinity proces in your hand! The idea came from watching infinity mirror video's and trying to think of any variation on them. Hope you like it! :)", "title": "Infinity Mirror Pentagon Shape", "url": "https://www.instructables.com/id/Infinity-Mirror-Pentagon-Shape/", "steps": [{"step": 1, "steps_text": "i made a vector drawing and made an order online to lasercut these shapes from 3mm acrylic sheet mirror. Once received, we can start! :)", "step_imgs": ["https://cdn.instructables.com/FXG/CW0L/JT91LFXH/FXGCW0LJT91LFXH.LARGE.jpg", "https://cdn.instructables.com/F3R/9KNZ/JT91LFZ7/F3R9KNZJT91LFZ7.LARGE.jpg"], "step_title": "Step 1: Make or Order the 3mm Lasercut Acrylic Mirror Parts"}, {"step": 2, "steps_text": "the assembling is pretty easy this way. I made a 2cm strip of thick paper and scored this strip. A path of 2mm wide needed to be scored in the middle. apply double sided tape on the other side and make the folds.", "step_imgs": ["https://cdn.instructables.com/FZR/53CN/JT91LG0X/FZR53CNJT91LG0X.LARGE.jpg", "https://cdn.instructables.com/F2V/92MO/JT91LG43/F2V92MOJT91LG43.LARGE.jpg", "https://cdn.instructables.com/FXG/MR6F/JT91LG4F/FXGMR6FJT91LG4F.LARGE.jpg", "https://cdn.instructables.com/FPV/U9GO/JT91LG93/FPVU9GOJT91LG93.LARGE.jpg", "https://cdn.instructables.com/F8R/8YGD/JT91LGAL/F8R8YGDJT91LGAL.LARGE.jpg"], "step_title": "Step 2: Make a Simple Paper Strip With Double Sided Tape to Construct the Infinity Polygon Shape"}, {"step": 3, "steps_text": "cut the paper strip to lengths of the pentagon side and work your way trough. Keep the 3 with the viewing hole side for last. It\u2019s fun to see the reflections increasing with every element you assemble :)\nOnce the job is done, look inside and enjoy!", "step_imgs": ["https://cdn.instructables.com/FTK/L64T/JT91LGF6/FTKL64TJT91LGF6.LARGE.jpg", "https://cdn.instructables.com/FQZ/AV05/JT91LGFI/FQZAV05JT91LGFI.LARGE.jpg", "https://cdn.instructables.com/FD0/NFUU/JT91LGFV/FD0NFUUJT91LGFV.LARGE.jpg", "https://cdn.instructables.com/F5M/4440/JT91LGHL/F5M4440JT91LGHL.LARGE.jpg", "https://cdn.instructables.com/F9Q/94AA/JT91LGHY/F9Q94AAJT91LGHY.LARGE.jpg"], "step_title": "Step 3: Assembling Time!"}], "channel": "Gadgets"}, {"category": "Technology", "description": "In this quick tutorial I will show you guys how to make a simple led strip using copper tape and some smd led's with little bit of soldering work.This project is quick and can be useful too.As this led strip runs on very commonly used 3.7V power supply it can be easily maintained.I made this because i want this type of led strip in my upcoming project on instructables.\nJust ,follow the below mentioned step and make your own.", "title": "How to Make Led Strip (Copper Tape)", "url": "https://www.instructables.com/id/How-to-Make-Led-Strip-Quick-and-Easy/", "steps": [{"step": 1, "steps_text": "SMD Led (any color )\nCopper Tape\nMasking Tape\nSoldering Iron and wire\nHobby knife\nTweezers", "step_imgs": ["https://cdn.instructables.com/FIR/3WCS/JT2SKI4X/FIR3WCSJT2SKI4X.LARGE.jpg", "https://cdn.instructables.com/F2G/0UWQ/JT2SKI11/F2G0UWQJT2SKI11.LARGE.jpg"], "step_title": "Step 1: Materials Required"}, {"step": 2, "steps_text": "Copper tape is very flexible and it comes with sticky back so I thought its perfect for our project.\nHere I have a 6mm wide copper tape as i need around 6-8cm of led strip ( You can change the length according to your need) so I took a piece of copper tape of that length.First of all I divided copper tape into 3 equal parts resulting me a final length of 2mm*8cm for reference you can see the above picture.Then I took two pieces of it and stick them to my table using masking tape as you can see in the image.I also marked the points were led's are soldered and also marked the polarity for the led.", "step_imgs": ["https://cdn.instructables.com/FL8/NPSP/JT2SKI8W/FL8NPSPJT2SKI8W.LARGE.jpg", "https://cdn.instructables.com/FUM/LREY/JT2SKIDT/FUMLREYJT2SKIDT.LARGE.jpg", "https://cdn.instructables.com/FR4/9539/JT2SKIET/FR49539JT2SKIET.LARGE.jpg"], "step_title": "Step 2: Working on Copper Tape"}, {"step": 3, "steps_text": "Soldering the led is very easy as you can see in the image i just added little bit of solder on each sides and then with the help of tweezers and soldering iron I soldered the led's in parallel connection.Here I am using 3014 smd led of green color.Take care of polarity.Later I also added jst connector which i completely optional you can solder any connector or wire for power supply .", "step_imgs": ["https://cdn.instructables.com/FQA/MI5F/JT2SKIFT/FQAMI5FJT2SKIFT.LARGE.jpg", "https://cdn.instructables.com/FD9/RPIR/JT2SKIFU/FD9RPIRJT2SKIFU.LARGE.jpg", "https://cdn.instructables.com/F4S/E549/JT2SKI7V/F4SE549JT2SKI7V.LARGE.jpg"], "step_title": "Step 3: Soldering LED's"}, {"step": 4, "steps_text": "This the best led strip for my upcoming project it is easy to build and its runs on 3.7V DC power supply.Here i had used green color led and 3.7v lipo battery as a power supply and we if you remember we had not not removed the sticky cover so you can stick it where ever you want by peeling of the cover.\nI hope you guys liked this project also I have entered this for a tape contest so please vote for me I will really appreciate.Also If you any question about the project please let me know in the comment below.\nTHANK YOU VERY MUCH !", "step_imgs": ["https://cdn.instructables.com/FCF/44B3/JT2SKIVQ/FCF44B3JT2SKIVQ.LARGE.jpg", "https://cdn.instructables.com/F03/6Q8Q/JT2SKITR/F036Q8QJT2SKITR.LARGE.jpg"], "step_title": "Step 4: Results"}], "channel": "LEDs"}, {"category": "Technology", "description": "A while ago i found a childs toy with fiberoptics at a dollar store, and started thinking about what i could do with it.\nOne of the crazy ideas i had, was making a tie with the effect of a starry sky.\nI still had some arduino pro mini's, adafruit boards and batteries laying around that would probably fit this project.\nSo as soon as i found a nice wide tie in a pawnshop in my town and found a box which might fit the hardware, i decided to go for it and try and build it.\nThis instructable shows you how i made it.\nIt runs on an arduino pro mini, adafruit powerboost 500 charger, emmerich icr 18650nh-sp and 5 white LED's.\nThe code makes the LED's change brightness random. (The first 40 seconds of the video are 3x speed)", "title": "Starry Sky Led Tie", "url": "https://www.instructables.com/id/Starry-Sky-Led-Tie/", "steps": [{"step": 1, "steps_text": "I'm using the following hardware:\n- PCB with Ice white LEDs and 220 Ohm resistors.\n- Arduino pro mini (i used a knockoff) https://store.arduino.cc/arduino-pro-mini\n- Adafruit Powerboost 500 charger https://store.arduino.cc/arduino-pro-mini\n- Emmerich Li-ion accu ICR-18650NH-SP https://store.arduino.cc/arduino-pro-mini\n- Optic fibers (in different sizes)", "step_imgs": ["https://cdn.instructables.com/F77/NFC3/JT91JH7R/F77NFC3JT91JH7R.LARGE.jpg", "https://cdn.instructables.com/F49/OKHU/JT91JH80/F49OKHUJT91JH80.LARGE.jpg"], "step_title": "Step 1: Schematics and Hardware"}, {"step": 2, "steps_text": "I cut a strip off a PCB to hold the LED's and used the LED pins to solder it to the main PCB.\nConnected all the cathodes (-) to GND, and used half of the pins to solder it stuck to the main PCB.\nConnected all the anodes (+) to resistors, and with cables to the arduino.\nLEDs each have to be connected to one of the following PWM ports: 3, 5, 6, 9, 10, 11\nSilly me made lots of mistakes with this project and forgot to check the correct PWM ports, so i had to resolder a few later. Tested with High/Low so i only noticed this later.\nI started with 7 LED's, but there were only 6 PWM ports and one of the LED's i resoldered died. I just kept the 5 working LED's and am not using the 6th.", "step_imgs": ["https://cdn.instructables.com/FLA/J4O2/JT4TTBW7/FLAJ4O2JT4TTBW7.LARGE.jpg", "https://cdn.instructables.com/FS1/IPR0/JT4TTB7A/FS1IPR0JT4TTB7A.LARGE.jpg", "https://cdn.instructables.com/FNE/N1QV/JT4TTB8I/FNEN1QVJT4TTB8I.LARGE.jpg", "https://cdn.instructables.com/F6P/WVGD/JT4TTBA8/F6PWVGDJT4TTBA8.LARGE.jpg", "https://cdn.instructables.com/FLV/UK5O/JT4TTBBL/FLVUK5OJT4TTBBL.LARGE.jpg", "https://cdn.instructables.com/FDZ/WSP1/JT4TTBBR/FDZWSP1JT4TTBBR.LARGE.jpg", "https://cdn.instructables.com/FLH/4YXJ/JT4TTBDM/FLH4YXJJT4TTBDM.LARGE.jpg", "https://cdn.instructables.com/FR4/0R9Y/JT4TTBFG/FR40R9YJT4TTBFG.LARGE.jpg"], "step_title": "Step 2: Making the PCB Hosting the LED's"}, {"step": 3, "steps_text": "I used a Bosch GRO (like a Dremel) and a drill to cut out the shape of the battery, the button, the micro-usb port, the headers from the Arduino and the optic fibers. (use a dust mask!)\nGlued the battery to the case with 2 bands.\nUsed screws to mount the Adafruit board and the PCB.\nFriction from opening and closing damaged some wires. I had to resolder them and use glue to prevent it from happening again.", "step_imgs": ["https://cdn.instructables.com/FYM/8VGP/JT4TTBFK/FYM8VGPJT4TTBFK.LARGE.jpg", "https://cdn.instructables.com/FW4/HV01/JT4TTBHK/FW4HV01JT4TTBHK.LARGE.jpg", "https://cdn.instructables.com/FWS/38H5/JT4TTBFO/FWS38H5JT4TTBFO.LARGE.jpg", "https://cdn.instructables.com/F0D/9FVW/JT4TTBLU/F0D9FVWJT4TTBLU.LARGE.jpg", "https://cdn.instructables.com/FJV/8MY4/JT4TTBLW/FJV8MY4JT4TTBLW.LARGE.jpg", "https://cdn.instructables.com/FHS/A3RU/JT4TTBMO/FHSA3RUJT4TTBMO.LARGE.jpg", "https://cdn.instructables.com/FVX/F3SH/JT4TTBMJ/FVXF3SHJT4TTBMJ.LARGE.jpg"], "step_title": "Step 3: Making the Box"}, {"step": 4, "steps_text": "Removed the stitching from the bottom part of the tie to fit the rubber sheet.\nTo hide the hardware and still be able to access it if needed i decided to use a zipper.\nI'm no good with a sewing machine, so my sweet mom put a zipper on the back of the tie.\nAfter that was done, i glued the rubber sheet in the tie. I was afraid of using too much glue that would saturate the fabric and be visible from the front, so i tried to even it out and not use too much. Overall it looks good, but at a few places i noticed too much or too little glue, cause it came through the fabric or didn't stick the fabric very well. Fortunately this is only barely visible from close distance in bright light.\nThe box and tie are now done. Time to glue the fiberoptics!", "step_imgs": ["https://cdn.instructables.com/FF3/0THC/JT4TTBJE/FF30THCJT4TTBJE.LARGE.jpg", "https://cdn.instructables.com/FXQ/LULP/JT4TTBM0/FXQLULPJT4TTBM0.LARGE.jpg", "https://cdn.instructables.com/FU8/71Q3/JT4TTBM6/FU871Q3JT4TTBM6.LARGE.jpg"], "step_title": "Step 4: Preparing the Tie"}, {"step": 5, "steps_text": "The toy had one big bundle fiber optic wires that easily broke apart. I tried gluing them one by one at first, but soon noticed it would be better to make small bundles and stick those to the LED at once. That would make it easier to keep it steady till the glue was dry. Messed up the first LED figuring this out.\nBe sure to use a transparent glue! The one i used dried very slow and the fast drying glue i tried on the first LED turned white, making some fibers from the first LED less bright.\nI glued small black rubber sheets to prevent light leaking on top and to separate the LED's.\nOne of the sheets prevented the case from closing so i added a rubber band to keep the cover shut.", "step_imgs": ["https://cdn.instructables.com/FY5/RQIU/JT4TTBMD/FY5RQIUJT4TTBMD.LARGE.jpg", "https://cdn.instructables.com/FZS/Q0Y4/JT4TTBMF/FZSQ0Y4JT4TTBMF.LARGE.jpg", "https://cdn.instructables.com/FZN/RUU5/JT4TTBMH/FZNRUU5JT4TTBMH.LARGE.jpg", "https://cdn.instructables.com/F7Z/GQS1/JT4TTBNH/F7ZGQS1JT4TTBNH.LARGE.jpg"], "step_title": "Step 5: Glueing the Fiberoptics"}, {"step": 6, "steps_text": "Starting on the bottom, i pinched holes with a needle and put the fibers through one by one. Each LED's fibers spread random across the tie.\nI glued a black strip on the back that was supposed to go all the way up to the smaller part of the tie to keep the weight of the box, but after i put all the wires through and felt the tension of the wires i decided gluing everything to the tie was a better idea and cut the strip off.\nSince the fiber optic wires from the toy were so short, it was hard fitting them all over the tie. I was limited in positioning the box and had a hard time making everything as flat as i wanted.", "step_imgs": ["https://cdn.instructables.com/FAN/SY9G/JT4TTBNY/FANSY9GJT4TTBNY.LARGE.jpg", "https://cdn.instructables.com/FCR/CFKI/JT4TTBO6/FCRCFKIJT4TTBO6.LARGE.jpg", "https://cdn.instructables.com/F26/RL9W/JT4TTBP2/F26RL9WJT4TTBP2.LARGE.jpg", "https://cdn.instructables.com/FXA/OD8K/JT4TTBP6/FXAOD8KJT4TTBP6.LARGE.jpg", "https://cdn.instructables.com/F9V/PGID/JT4TTBPA/F9VPGIDJT4TTBPA.LARGE.jpg"], "step_title": "Step 6: Putting Fiberoptics Through the Tie"}, {"step": 7, "steps_text": "I glued all the fiber optic wires to the rubber sheet to prevent the wires from getting pulled out of the rubber sheet and to make the tie flat.\nTo make sure i didn't glue the clamp to the tie when putting pressure on it i put some paper in between. It doesn't look that great but works well. And you don't see it when it is closed.\nAfter the glue dried i cut off the wires on the front and cut off a bit off the rubber sheet just above the highest wire, cause the tie was a bit too long.\nPhotos with the white shirt are made before i cut that last bit of rubber off.", "step_imgs": ["https://cdn.instructables.com/FKI/AVN0/JT4TTBPI/FKIAVN0JT4TTBPI.LARGE.jpg", "https://cdn.instructables.com/FTK/91TA/JT4TTBQD/FTK91TAJT4TTBQD.LARGE.jpg", "https://cdn.instructables.com/FR7/YMIZ/JT4TTBU7/FR7YMIZJT4TTBU7.LARGE.jpg", "https://cdn.instructables.com/FIR/5J2D/JT4TTBRM/FIR5J2DJT4TTBRM.LARGE.jpg"], "step_title": "Step 7: Glueing Fiberoptics to the Tie"}, {"step": 8, "steps_text": "Below the code i wrote for the tie.\nAll LED's have a set \" average \" (not actually an average but a middle brightness).\nAs soon as it reaches that average, it will decide with a chance <1/4 to go high, or >3/4 to go to a lower brightness. It also randomly sets a new minimum brightness, maximum brightness, waiting time for minimum and maximum brightness and the speed it increases or decreases every round (1-255) from 5 preset values. Then it will do a cycle till it reaches the average again. Only 2 LED's can be in a high cycle at the same time.\nEvery state is represented by an integer value (1-7) determining if it's going avg-low, low-avg, waiting low, updating, etc.\nFor information about uploading code to the arduino, please have a look at www.arduino.cc\n<p>/*  Starry Sky Tie<br> *  \n *  This is a script to randomly fade 5 LEDs from an average to a lower \n *  or higher brightness with random lower, higher and timing settings \n *  to look like a starry sky when used with fiberoptics.\n *  In this case these will be implemented in a tie.\n *  \n *  Up/down chance =  1/4 up, 3/4 down, with a maximum of 2 \n *  going up to max at the same time.\n *  \n *  Average stays the same.\n *  Minimum, maximum and timing options change randomly\n *  from 5 options every time a LED reaches the average again.\n *  \n *  Created by Billy Jaspers, May 2019.\n *</p><p>/ Declare pins\nint LED01           = 3;\nint LED02           = 5;\nint LED03           = 6;\nint LED04           = 9;\nint LED05           = 11;</p><p>// Time variables\nunsigned long currentTime;\nunsigned long waitingTime[5];\nunsigned long lastRound;</p><p>// LED Variables\nint brightMin [5]   =       { 10,   10,   10,   10,     10        };      // Minimum brightness\nint brightAvg [5]   =       { 200,  200,  200,  200,    200       };      // Average brightness\nint brightMax[5]    =       { 240,  240,  240,  240,    240       };      // Maximum brightness\nint timeWaitLow[5]  =       { 1000, 1000, 1000, 1000,   1000      };      // Waiting time\nint timeWaitAvg[5]  =       { 5000, 5000, 5000, 5000,   5000      };      // Waiting time\nint timeWaitMax[5]  =       { 4000, 3000, 3000, 3000,   3000      };      // Waiting time\nint increment[5]    =       { 2,    5,    4,    5,      2         };      // Increment in brightness\nint currentBright[5]=       { 200,  230,  210,  210,    235       };      // Current brightness</p><p>// LED Variables Possibilities\nint brightMinPos[5] =       { 5,   20,    40,   5,      20        };      // Minimum brightness possibilities\nint brightMaxPos[5] =       { 240,  245,  230,  225,    245       };      // Maximum brightness possibilities\nint timeLowPos[5]   =       { 3000, 5000, 4000, 2000,   1000      };      // Waiting time on low brightness possibilities\nint timeHighPos[5]  =       { 3000, 1000, 500,  2000,   4000      };      // Waiting time on high brightness possibilities\nint timeAvgPos[5]   =       { 3000, 5000, 4000, 7000,   8000      };      // Waiting time on average brightness possibilities\nint incrementPos[5] =       { 2,    4,    5,    3,      1         };      // increment in brightness possibilities</p><p>// Variables\nbool startup = true;                                                      // Do the start settings need to be started?</p><p>// Directional variables\n/* 0 = Waiting at Average\n   1 = going Avg to Low\n   2 = waiting Low\n   3 = going Low to Avg\n   4 = going Avg to Max\n   5 = waiting at Max\n   6 = going High to Avg\n   7 = Updating variables*/\nint statusLED[5]           =        { 0, 0, 0, 0, 0  };\nint amountHighLED          =        0;\nint refreshRate            =        50;\nbool statusWaiting[5]      =        { false, false, false, false,  false};  // Is the Led waiting?</p><p>// Random variables\nlong randomNumber;                                                    //  Long to store random number\nlong randomNumberTwo;                                                 //  Long to store the second random number</p><p>// counters\nint i = 0;                                                            // Counter for main loop</p><p>void setup() {\n  Serial.begin (115200);                                              //  Start serial\n  randomSeed(analogRead(A0));                                         //  Set randomseed </p><p>// Declare outputs\n  pinMode (LED01, OUTPUT);\n  pinMode (LED02, OUTPUT);\n  pinMode (LED03, OUTPUT);\n  pinMode (LED04, OUTPUT);\n  pinMode (LED05, OUTPUT);\n}</p><p>//  Write data to LEDs\nvoid writeToLED(){\n  analogWrite(LED01, currentBright[0]);                               \n  analogWrite(LED02, currentBright[1]);\n  analogWrite(LED03, currentBright[2]);\n  analogWrite(LED04, currentBright[3]);\n  analogWrite(LED05, currentBright[4]);\n}</p><p>// Main loop\nvoid loop() {\n  if (startup){                                                                         // Startup settings\n    lastRound = millis();                                                               // Set lastRound for boot\n    writeToLED();                                                                       // Write start data to LED\n    startup = false;                                                                    // Turn off startup\n  }\n    \n  currentTime = millis();                                                             // Set current time</p><p>  if (currentTime - lastRound >= refreshRate ){ \n    for (i=0;i<5;i++){\n      if (statusLED[i] == 7){                                                             // -7- Updating Led\n        randomNumber      = random(5);\n        brightMin[i]      = brightMinPos[randomNumber];                                     // Set random value for minimum brightness\n        randomNumber      = random(5);\n        brightMax[i]      = brightMaxPos[randomNumber];                                     // Set random value for maximum brightness\n        randomNumber      = random(5);\n        timeWaitLow[i]    = timeLowPos[randomNumber];                                       // Set random value for low waiting time\n        randomNumber      = random(5);\n        timeWaitMax[i]    = timeHighPos[randomNumber];                                      // Set random value for high waiting time\n        randomNumber      = random(5);\n        timeWaitAvg[i]    = timeAvgPos[randomNumber];                                       // Set random value for average waiting time\n        randomNumber      = random(5);\n        increment[i]      = incrementPos[randomNumber];                                     // Set random value for increment value\n        randomNumber      = random(2);                                                      // Set random value for direction\n        randomNumberTwo   = random(2);                                                      // Set random value for direction\n        if (randomNumber == 1 && randomNumberTwo == 0 && amountHighLED < 2){                // If both are right and not more than 2 are high, go high\n          statusLED[i]    = 4;                                                                // Set to go Avg to Max\n          amountHighLED   = amountHighLED + 1;                                                // Add 1 to the amount of High LEDs\n        }else{                                                                              // Else go low\n          statusLED[i] = 1;                                                                   // Set to go Avg to Low\n        }\n        // Print the status for every LED as soon as it's updated\n        Serial.print(\"updated\");\n        Serial.print(\"\\t\");\n        Serial.print(i);\n        Serial.print(\"\\t\");\n        Serial.print(\"to\");\n        Serial.print(\"\\t\");\n        Serial.print(statusLED[i]);\n        Serial.print(\"\\n\");\n        \n      }else if (statusLED[i] == 3){                                                     // -3- Going Low to Avg\n        if ( currentBright[i] >= brightAvg[i] ){\n          statusLED[i] = 0;                                                                 // If at lowest point: Go to Waiting Avg\n        }else{\n          currentBright[i] = currentBright[i]+increment[i];                                 // Else: Higher Brightness\n        }\n        \n      }else if (statusLED[i] == 2){                                                     // -2- Waiting Low\n        if ( !statusWaiting[i] ){                                                           // If not waiting:\n          waitingTime[i] = millis();                                                        // Set waiting time\n          statusWaiting[i] = true;                                                          // Start waiting\n        }else if( statusWaiting[i] && currentTime-waitingTime[i] >= timeWaitLow[i] ){       // If waiting AND timeWaitAvg has passed:\n          statusWaiting[i] = false;                                                         // Stop waiting\n          statusLED[i] = 3;                                                                 // Set statusLed to Waiting for update\n        }\n        \n      }else if (statusLED[i] == 1){                                                     // -1- Going Avg to Low\n        if ( currentBright[i] <= brightMin[i] ){\n          statusLED[i] = 2;                                                                 // If at lowest point: Go to Waiting Low\n        }else{\n          currentBright[i] = currentBright[i]-increment[i];                                 // Else: Lower Brightness\n        }\n        \n      }else if (statusLED[i] == 6){                                                     // -6- Going Max to Avg\n        if ( currentBright[i] <= brightAvg[i] ){\n          statusLED[i] = 0;                                                                 // If at lowest point: Go to Waiting Low\n          amountHighLED = amountHighLED - 1;                                                // -1 on the amount of high LEDs\n        }else{\n          currentBright[i] = currentBright[i]-increment[i];                                 // Else: Higher Brightness\n        }\n        \n      }else if (statusLED[i] == 5){                                                     // -5- Waiting Max\n        if ( !statusWaiting[i] ){                                                         // If not waiting:\n          waitingTime[i] = millis();                                                        // Set waiting time\n          statusWaiting[i] = true;                                                          // Start waiting\n        }else if( statusWaiting[i] && currentTime-waitingTime[i] >= timeWaitMax[i] ){     // If waiting AND timeWaitAvg has passed:\n          statusWaiting[i] = false;                                                         // Stop waiting\n          statusLED[i] = 6;                                                                 // Set statusLed to Waiting for update\n        }\n        \n      }else if (statusLED[i] == 4){                                                     // -4- Going Avg to Max\n        if ( currentBright[i] >= brightMax[i] ){\n          statusLED[i] = 5;                                                               // If at lowest point: Go to Waiting High\n        }else{\n          currentBright[i] = currentBright[i]+increment[i];                               // Else: Higher Brightness\n        }\n        \n      }else if (statusLED[i] == 0){                                                     // -0- Waiting at Average\n        if ( !statusWaiting[i] ){                                                         // If not waiting:\n          waitingTime[i] = millis();                                                      // Set waiting time\n          statusWaiting[i] = true;                                                        // Start waiting\n        }else if( statusWaiting[i] && currentTime-waitingTime[i] >= timeWaitAvg[i] ){   // If waiting AND timeWaitAvg has passed:\n          statusWaiting[i] = false;                                                       // Stop waiting\n          statusLED[i] = 7;                                                               // Set statusLed to Waiting for update\n        }\n        \n      }\n    }\n    i=0;\n    lastRound = millis();                                                                 // Set when the last round is finished.\n    writeToLED();                                                                         // Write all data to the LED's\n  }\n}</p>", "step_imgs": [], "step_title": "Step 8: The Code"}, {"step": 9, "steps_text": "I think it worked out well. The tie is not too thick, stiff, long or heavy and the star effect looks amazing.", "step_imgs": ["https://cdn.instructables.com/FOW/DHH4/JT91JTAM/FOWDHH4JT91JTAM.LARGE.jpg", "https://cdn.instructables.com/FXM/HBCG/JT91L49E/FXMHBCGJT91L49E.LARGE.jpg", "https://cdn.instructables.com/FJD/T412/JT91JTAS/FJDT412JT91JTAS.LARGE.jpg", "https://cdn.instructables.com/FIZ/V2FJ/JT91JT6Z/FIZV2FJJT91JT6Z.LARGE.jpg", "https://cdn.instructables.com/FRY/WWWE/JT91JT7W/FRYWWWEJT91JT7W.LARGE.jpg", "https://cdn.instructables.com/FP3/G5FX/JT91JT87/FP3G5FXJT91JT87.LARGE.jpg", "https://cdn.instructables.com/FAV/9REA/JT91JT8E/FAV9REAJT91JT8E.LARGE.jpg", "https://cdn.instructables.com/FI9/WWXM/JT91JT8P/FI9WWXMJT91JT8P.LARGE.jpg", "https://cdn.instructables.com/F0U/SNQ3/JT91JTAF/F0USNQ3JT91JTAF.LARGE.jpg"], "step_title": "Step 9: Final Product"}], "channel": "Wearables"}, {"category": "Technology", "description": "In one of my previous Instructable, I showed you how to control a model railway layout using a keyboard. It did great but had a drawback of requiring a computer to operate. In this Instructable, let's see how to control a model train using a keyboard through Arduino. So, without further ado, let's get started.", "title": "Keyboard Controlled Model Train V2.0 | PS/2 Interface", "url": "https://www.instructables.com/id/Keyboard-Controlled-Model-Train-PS2-Interface/", "steps": [{"step": 1, "steps_text": "", "step_imgs": [], "step_title": "Step 1: Watch the Video"}, {"step": 2, "steps_text": "For this project you will need:\nAn Arduino microcontroller\nA PS/2 keyboard\nA female PS/2 connector(Get the one as shown in the picture, it will make your life easier.)\nAn L298N motor driver module\nA 12-volt DC power source with a current capacity of at least 1A(1000mA).\n3 male to female jumper wires(To connect the motor driver's inputs to the Arduino board's output pins.)\n4 male to male jumper wires(To connect the motor driver to power and the tracks.)\n4 male to male jumper wires(To connect the PS/2 connector to the Arduino board.)", "step_imgs": ["https://cdn.instructables.com/FMF/8U7N/JT91LBN5/FMF8U7NJT91LBN5.LARGE.jpg"], "step_title": "Step 2: Get All the Required Stuff"}, {"step": 3, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FPU/M97W/JT91J3N5/FPUM97WJT91J3N5.LARGE.jpg"], "step_title": "Step 3: Program the Arduino Microcontroller"}, {"step": 4, "steps_text": "Using a multimeter set to continuity test and using the given picture as a reference, mark the pinouts of the PS/2 connector/extension cable wires.", "step_imgs": ["https://cdn.instructables.com/FL9/KGT4/JT91RHRF/FL9KGT4JT91RHRF.LARGE.jpg", "https://cdn.instructables.com/FGN/JCPI/JT91LBNW/FGNJCPIJT91LBNW.LARGE.jpg"], "step_title": "Step 4: Identify the Pins of the PS/2 Connector"}, {"step": 5, "steps_text": "Make the following wiring connections:\nConnect the input pin 'ENB' to pin 'D10' of the Arduino board.\nConnect the input pin 'IN4' to pin 'D9' of the Arduino board.\nConnect the input pin 'IN3' to pin 'D8' of the Arduino board.\nConnect two male to male jumper wires to the output terminals 3 and 4 to be later connected to the track power feeder.\nConnect the 'VIN' pin of the motor driver to the 'VIN' pin and the 'GND' pin to the 'GND' pin of the Arduino board respectively.\nMake sure no wiring connections are loose.", "step_imgs": ["https://cdn.instructables.com/FZ2/AJI2/JT91LBPB/FZ2AJI2JT91LBPB.LARGE.jpg"], "step_title": "Step 5: Connect the Motor Driver to the Arduino Board"}, {"step": 6, "steps_text": "Make the following wiring connections:\nConnect 'VCC' to the '+5-volt' pin of the Arduino board.\nConnect 'GND' to the 'GND' pin of the Arduino board.\nConnect 'CLOCK' to pin 'D2' of the Arduino board.\nConnect 'DATA' to pin 'D3' of the Arduino board.\nDouble check the pinout diagram of the PS/2 connector before making connections.", "step_imgs": ["https://cdn.instructables.com/FSH/CXRF/JT91LBQ2/FSHCXRFJT91LBQ2.LARGE.jpg"], "step_title": "Step 6: Connect the PS/2 Connector to the Arduino Board"}, {"step": 7, "steps_text": "Make a simple loop of track to test the setup. Make sure the tracks are cleaned properly to prevent the locomotive from stalling.", "step_imgs": ["https://cdn.instructables.com/FLR/BYFV/JT91LBRY/FLRBYFVJT91LBRY.LARGE.jpg"], "step_title": "Step 7: Set Up a Test Layout"}, {"step": 8, "steps_text": "Connect the male to male jumper wires to the power feeder track terminals previously connected to the output terminals of the motor driver.", "step_imgs": ["https://cdn.instructables.com/FIF/XED5/JT91LBS0/FIFXED5JT91LBS0.LARGE.jpg", "https://cdn.instructables.com/F03/MVX6/JT91LBSA/F03MVX6JT91LBSA.LARGE.jpg"], "step_title": "Step 8: Connect the Motor Driver's Outputs to the Track Power Feeder"}, {"step": 9, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FON/HP5C/JT91LBY5/FONHP5CJT91LBY5.LARGE.jpg", "https://cdn.instructables.com/FFF/SRDJ/JT91LC2P/FFFSRDJJT91LC2P.LARGE.jpg"], "step_title": "Step 9: Connect the Keyboard to the PS/2 Connector"}, {"step": 10, "steps_text": "Place the locomotive on the tracks, aligning the wheels properly with the rails.", "step_imgs": ["https://cdn.instructables.com/FUD/3KOL/JT91LCCW/FUD3KOLJT91LCCW.LARGE.jpg"], "step_title": "Step 10: Place the Locomotive on the Tracks"}, {"step": 11, "steps_text": "Double-check all of the wiring connections and make sure everything is connected to the right place and no wiring connections are loose. Plug in the power supply adapter and turn it on.", "step_imgs": ["https://cdn.instructables.com/FYF/YXKV/JT91LD31/FYFYXKVJT91LD31.LARGE.jpg"], "step_title": "Step 11: Connect the Setup to 12-volt Adapter and Power It On"}, {"step": 12, "steps_text": "", "step_imgs": [], "step_title": "Step 12: Sit Back With You Keyboard and Run Your Train"}, {"step": 13, "steps_text": "I would love to see your project below. After completing this project, don't stop here and try adding more functions to the setup. Whatever you do, all the best!", "step_imgs": [], "step_title": "Step 13: What's Next?!"}], "channel": "Arduino"}, {"category": "Technology", "description": "We MAKE a HOMEMADE BREADBOARD out of Paperclips, Cardboard, & Elmer's Glue.\nThese are STRONG and PERMANENT Electronic Circuits.\nEnjoy Our Step-by-Step Tutorial on Creating Homemade Electronic Circuits.", "title": "Make a Breadboard for Electronic Circuits - Papercliptronics", "url": "https://www.instructables.com/id/Make-a-Breadboard-for-Electronic-Circuits-Papercli/", "steps": [{"step": 1, "steps_text": "SUMMARY:\nWe USE 10 Paperclips to be the Rails of our Homemade Breadboard.\nWe MAKE a Top Rail, Bottom Rail & 8 Rails in the middle.\nThe Top Rail is Connected to the Positive End of our D BATTERIES.\nThe Bottom Rail is Connected to the Negative End of our D BATTERIES.\nWe CRIMPED Paperclip Connectors onto the Legs of our Resistor & LED.\nWe then CRIMPED those Paperclip Connectors to our Paperclip Rails.", "step_imgs": ["https://cdn.instructables.com/FFH/QQG1/JTEMYKX9/FFHQQG1JTEMYKX9.LARGE.jpg"], "step_title": "Step 1: Let's EXAMINE the Homemade Breadboard"}, {"step": 2, "steps_text": "We USE a Cardboard Box to be the Base of our Homemade Breadboard.\nWe CUT White Paper to FIT INSIDE the Cardboard Box.\nWe ELMER'S GLUE the White Paper into the Bottom of the Cardboard Box.\n(It only takes a small amount of Glue around the Edges of the Paper, to hold the Paper in place nicely.", "step_imgs": ["https://cdn.instructables.com/F6V/16YR/JTEMZCNK/F6V16YRJTEMZCNK.LARGE.jpg", "https://cdn.instructables.com/FI6/B82F/JTEMZG7K/FI6B82FJTEMZG7K.LARGE.jpg"], "step_title": "Step 2: Cardboard Box With White Paper That Is Glued Down"}, {"step": 3, "steps_text": "We USE 10 Large Paperclips.\nMake sure that your Paperclips are not coated with plastic.\nWe USE Metal Paperclips, which are highly conductive and very strong.", "step_imgs": ["https://cdn.instructables.com/FKD/47BD/JTEN0EID/FKD47BDJTEN0EID.LARGE.jpg", "https://cdn.instructables.com/FLX/5Q3B/JT2SJ9P2/FLX5Q3BJT2SJ9P2.LARGE.jpg"], "step_title": "Step 3: USE 10 Large Paperclips"}, {"step": 4, "steps_text": "We UNFOLD 10 Large Paperclips.\nWe LAY them out on the Cardboard.\nIn the next step, we will bend, both ends, of each Paperclip.\nThese ends will be inserted into the Cardboard.", "step_imgs": ["https://cdn.instructables.com/FM5/VTZ6/JT91HYL6/FM5VTZ6JT91HYL6.LARGE.jpg", "https://cdn.instructables.com/FFI/Q9AG/JT2SJG67/FFIQ9AGJT2SJG67.LARGE.jpg"], "step_title": "Step 4: UNFOLD the Paperclips"}, {"step": 5, "steps_text": "We MARK with Pencil the Bottom Left Corner & Top Right Corner of the 8 Paperclip Rails of the middle.\nThis helps later, as a guide, when we Insert the Paperclip Rail Ends into the Cardboard, as shown in a moment.", "step_imgs": ["https://cdn.instructables.com/F35/QAEE/JTEMZIZ2/F35QAEEJTEMZIZ2.LARGE.jpg"], "step_title": "Step 5: MARK With a Pencil the Bottom Left and Top Right of the 8 Rails in the Middle"}, {"step": 6, "steps_text": "We BEND Both Ends of each Paperclip.\nWe BEND about 1/4\" at 90 degrees.\nWe BEND all 10 Paperclips in this way.", "step_imgs": ["https://cdn.instructables.com/FHW/8N7W/JTEMZGOE/FHW8N7WJTEMZGOE.LARGE.jpg", "https://cdn.instructables.com/FJH/1V8H/JTEMZH07/FJH1V8HJTEMZH07.LARGE.jpg"], "step_title": "Step 6: Paperclip Rails BENT on Both Ends"}, {"step": 7, "steps_text": "We LAY OUT the Bent Paperclips that we prepared.\nWe have a TOP RAIL, BOTTOM RAIL & 8 RAILS in the middle.\nIn the next step we will insert these bent Paperclips into the Cardboard.", "step_imgs": ["https://cdn.instructables.com/F9I/9BQI/JTEMYSAF/F9I9BQIJTEMYSAF.LARGE.jpg", "https://cdn.instructables.com/F6M/WD4Q/JT2SJHCY/F6MWD4QJT2SJHCY.LARGE.jpg"], "step_title": "Step 7: Paperclip Rails BENT & Ready to Insert Into Cardboard"}, {"step": 8, "steps_text": "We INSERT the Paperclip Rail Ends into the Cardboard.\nWe REPEAT THIS for all 10 of the Large Paperclips.", "step_imgs": ["https://cdn.instructables.com/FPG/SH3E/JTEMZI0Z/FPGSH3EJTEMZI0Z.LARGE.jpg"], "step_title": "Step 8: INSERT the Bent End of the Paperclip Rail Into the Cardboard"}, {"step": 9, "steps_text": "We INSERT the Bent Ends of Each Paperclip into the Cardboard.\nWe SPACE out each Rail, about 1\" apart. But, a person may choose to space it closer too.\nWe APPLY ELMER'S GLUE over each insertion location.\nWe USE a good amount of Elmer's glue, to create a good adhesion effect.\nWe WAIT 14+ Hours, for the Elmer's glue to dry!\nDO NOT MOVE THE PIECES UNTIL THE GLUE IS DRIED!\nWe MAKE a VERY STRONG BOND, using the Elmer's glue.", "step_imgs": ["https://cdn.instructables.com/FNQ/OVJW/JSYZ8D9F/FNQOVJWJSYZ8D9F.LARGE.jpg", "https://cdn.instructables.com/FF5/MLCL/JSYZ8DM6/FF5MLCLJSYZ8DM6.LARGE.jpg"], "step_title": "Step 9: Paperclip Bent Ends INSERTED Into Cardboard & GLUED"}, {"step": 10, "steps_text": "We WAITED 14 hours for the Elmer's glue to dry.\nThe result is a very strong bond.\nOur Paperclip Rails are permanent circuit platforms now.\nElmer's glue provides a VERY STRONG adhesion!\nWhile we are waiting for the glue to dry, we can prepare more breadboards.", "step_imgs": ["https://cdn.instructables.com/F5F/9CT6/JSYZ9G7O/F5F9CT6JSYZ9G7O.LARGE.jpg"], "step_title": "Step 10: Paperclip Rails HELD in Place With the Elmer's Glue DRIED (14+ Hours)"}, {"step": 11, "steps_text": "WARNING: Be Careful for the Exposed Paperclip Ends on the bottom of the box!\n\nSOLUTION:\nWe can cover these Exposed Paperclip Ends using a variety of methods:\n* 4 Layers of Duct Tape, with the Duct Tape Ends Elmer's Glued, to ensure the that Tape remains in place.\n* A Cardboard Layer Cover which is Elmer's Glued, Hot Glued, or Stapled OVER the Exposed Paperclip Ends.\n* Hot Glue OVER the Exposed Paperclip Ends\nThe Shorter the Ends, the less glue needed, but remember, that even a small amount of exposed Paperclip End represents a very serious risk to a person from possible puncture or scratch.", "step_imgs": ["https://cdn.instructables.com/F38/NBQ5/JTT5KUW3/F38NBQ5JTT5KUW3.LARGE.jpg", "https://cdn.instructables.com/FOW/G499/JTT5L1WW/FOWG499JTT5L1WW.LARGE.jpg"], "step_title": "Step 11: Paperclip Ends Must Be Covered to Prevent Possible Injury"}, {"step": 12, "steps_text": "Our Diagram Shows a POSITIVE RAIL, a BOTTOM RAIL, and 8 MIDDLE RAILS.\nThe POSITIVE RAIL is on the top of the diagram.\nThe Positive Rail is connected to the Positive side of the D BATTERY using Speaker Wire.\n--\nThe NEGATIVE RAIL is on the bottom of the diagram.\nThe Negative Rail is connected to the Negative side of the D Battery using Speaker Wire.\nThe Negative side of the D Battery is the FLAT side.\n--\nWe will later show how to secure the Speaker Wire to the Battery ends using Duct Tape.", "step_imgs": ["https://cdn.instructables.com/F34/AYMI/JT2SJ23O/F34AYMIJT2SJ23O.LARGE.jpg", "https://cdn.instructables.com/FNB/DVNY/JT2SJ2W6/FNBDVNYJT2SJ2W6.LARGE.jpg"], "step_title": "Step 12: Power Supply USES Two D Batteries - POS to 3rd Rail - NEG to 1st Rail"}, {"step": 13, "steps_text": "We CONNECT the Speaker Wire from the Bottom Rail to the 1st Row.\nWe CONNECT the Speaker Wire from the Top Rail to the 3rd Row.\n\nTherefore, the 1st Rail is now Negative and the 3rd Rail is Positive.", "step_imgs": ["https://cdn.instructables.com/F94/OGJR/JSYZ9F3N/F94OGJRJSYZ9F3N.LARGE.jpg", "https://cdn.instructables.com/FT4/1V7Y/JSYZ9EUJ/FT41V7YJSYZ9EUJ.LARGE.jpg"], "step_title": "Step 13: Power Supply - Speaker Wire Connection"}, {"step": 14, "steps_text": "We STRIP the End of our Speaker Wire about 1\" inch.\nWe BEND the End of the Speaker Wire into a Hook Shape.\nWe DUCT TAPE the Speaker Wire End onto the Negative Side of the D Battery.\nThe Negative Side is the Flat Side of the battery.", "step_imgs": ["https://cdn.instructables.com/F2X/8UWK/JT4TO91W/F2X8UWKJT4TO91W.LARGE.jpg", "https://cdn.instructables.com/F8K/ZE4N/JT4TOA0P/F8KZE4NJT4TOA0P.LARGE.jpg"], "step_title": "Step 14: Battery Connection - Speaker Wire + Duct Tape"}, {"step": 15, "steps_text": "We CRIMP Paperclip Hook Shapes around both Resistor Legs.\nWe USE \"small size\" Paperclips, as oppose to the \"large size\" Paperclips.\nIn Summary:\nFor Electronic Component Connectors, we use Small Paperclips,\nFor Breadboard Rails we use Large Paperclips.", "step_imgs": ["https://cdn.instructables.com/FKC/9TVN/JT91IBA3/FKC9TVNJT91IBA3.LARGE.jpg"], "step_title": "Step 15: Paperclip CRIMPED Both Resistor Legs - Electronic Component Connectors"}, {"step": 16, "steps_text": "We UNFOLD a small Paperclip.\nWe BEND the small Paperclip about 1/4\" from the end to form a Hook Shape.\nThis Hook Shape is what we will next crimp onto our Resistor legs.", "step_imgs": ["https://cdn.instructables.com/F0L/Q15G/JT4TQHBH/F0LQ15GJT4TQHBH.LARGE.jpg", "https://cdn.instructables.com/FXC/AGSH/JT4TQHQ7/FXCAGSHJT4TQHQ7.LARGE.jpg"], "step_title": "Step 16: Bend Paperclip 1/4\" From End to Make Hook Shape"}, {"step": 17, "steps_text": "We CRIMP the Paperclip Hook Shape around both legs of the Resistor.\nWe HOLD the Resistor horizontally and allow the Hook Shape to hang.\nWe USE Needle Nose Pliers to CRIMP the Hook Shape around the Resistor Legs.\nRemember, that we are using small Paperclips, as oppose to the Large size Paperclips.", "step_imgs": ["https://cdn.instructables.com/FVL/KJ8O/JT4TQI80/FVLKJ8OJT4TQI80.LARGE.jpg", "https://cdn.instructables.com/FMH/6UD8/JT4TQICE/FMH6UD8JT4TQICE.LARGE.jpg"], "step_title": "Step 17: Paperclip HOOK SHAPE Is CRIMPED Around Both Resistor Legs"}, {"step": 18, "steps_text": "We BEND each of the Paperclip Legs downward 90 degrees.\nWe ISOLATE the Paperclip Leg with Needle Nose Pliers.\nWhile ISOLATED, we BEND the Paperclip Leg downward, with our Hand.", "step_imgs": ["https://cdn.instructables.com/F44/CKUV/JSYZ993S/F44CKUVJSYZ993S.LARGE.jpg", "https://cdn.instructables.com/F2C/GKZF/JT4TQIL0/F2CGKZFJT4TQIL0.LARGE.jpg"], "step_title": "Step 18: Paperclip Legs Are Bent Downward 90 Degrees"}, {"step": 19, "steps_text": "We CUT the excess length of the Paperclip Legs.\nEach Paperclip Leg is CUT to about 1 1/2\" inches long. (One and a half inches)", "step_imgs": ["https://cdn.instructables.com/FZ5/8N4E/JT4TQISZ/FZ58N4EJT4TQISZ.LARGE.jpg", "https://cdn.instructables.com/F5M/UKMD/JT4TQIQ8/F5MUKMDJT4TQIQ8.LARGE.jpg"], "step_title": "Step 19: Paperclip Legs - Excess Is CUT"}, {"step": 20, "steps_text": "We BEND each Paperclip Leg about 1/4\" from the End of the Paperclip.\nThis BEND creates a Hook Shape.\nThus, we have two Hook Shapes now, for Each Leg of our Resistor.\nThis Resistor is now READY for our breadboard rails!", "step_imgs": ["https://cdn.instructables.com/FCL/USGW/JSYZ9BCX/FCLUSGWJSYZ9BCX.LARGE.jpg", "https://cdn.instructables.com/FX0/UU3B/JSYZ9BN7/FX0UU3BJSYZ9BN7.LARGE.jpg"], "step_title": "Step 20: Both Paperclip Legs Are BENT at the Ends About 1/4\", Into Hook Shapes"}, {"step": 21, "steps_text": "We PLACE the Hook Shapes of our Resistor Legs, on the 1st Rail and the 2nd Rail.\nWe CRIMP these Hook Shapes, using Needle Nose Pliers.\nMake sure to apply strong force when crimping these Hook Shapes to the Breadboard Rails.", "step_imgs": ["https://cdn.instructables.com/FN3/4RKY/JSYZ9CK6/FN34RKYJSYZ9CK6.LARGE.jpg", "https://cdn.instructables.com/F63/KB7K/JSYZ9CXP/F63KB7KJSYZ9CXP.LARGE.jpg"], "step_title": "Step 21: Paperclip Hook Shapes POSITIONED Under 1st & 2nd Rails"}, {"step": 22, "steps_text": "We SEE that that Hook Shapes are CRIMPED around the 1st and 2nd Rails.\nWe KEEP SPACE between the Resistors Legs, so that they NEVER TOUCH!", "step_imgs": ["https://cdn.instructables.com/FUS/L5X8/JSYZ9D22/FUSL5X8JSYZ9D22.LARGE.jpg", "https://cdn.instructables.com/FHS/QC5W/JSYZ9DHS/FHSQC5WJSYZ9DHS.LARGE.jpg"], "step_title": "Step 22: Both Paperclip Leg Connectors Are CRIMPED Around 1st & 2nd Rails"}, {"step": 23, "steps_text": "We have CRIMPED our Resistor & LED onto our Paperclip Rails.\nWe ALLOW the Resistor & LED to TILT.\nIn this Tilted Position we will next use Elmer's glue, to hold the pieces in place permanently.", "step_imgs": ["https://cdn.instructables.com/FMS/HHF8/JSYZ9DSD/FMSHHF8JSYZ9DSD.LARGE.jpg", "https://cdn.instructables.com/FLX/YDK6/JSYZ9EBP/FLXYDK6JSYZ9EBP.LARGE.jpg"], "step_title": "Step 23: Resistor & LED Are CRIMPED in PLACE. Allow Them to Tilt."}, {"step": 24, "steps_text": "We ELMER'S GLUE the Paperclip Connector Legs of the Resistor.\nWe USE a lot of Elmer's Glue.\nWe WAIT 14+ hours.\nPLACE on a LEVEL surface that will not be disturbed.\nDO NOT MOVE PIECES WHILE THEY ARE DRYING!", "step_imgs": ["https://cdn.instructables.com/FM1/QBTB/JT2SJ5AH/FM1QBTBJT2SJ5AH.LARGE.jpg", "https://cdn.instructables.com/FJ9/S7JF/JT91IJTE/FJ9S7JFJT91IJTE.LARGE.jpg"], "step_title": "Step 24: Paperclip Connectors Are Elmer's Glued, to the Paperclip Rails, AFTER They Are CRIMPED"}, {"step": 25, "steps_text": "We WAITED at least 14 hours before moving our Breadboard around again.\nThis is a VERY STRONG BOND!\nElmer's Glue does a very good job and is non-toxic, has no fumes, and does not require heat.\nTherefore, for making permanent circuits, Elmer's glue is highly recommended.\n--\nBut, for temporary circuits, Putty, gums, or tape, will also work, to hold components in place.", "step_imgs": ["https://cdn.instructables.com/F3R/X5IH/JT2SJ5NA/F3RX5IHJT2SJ5NA.LARGE.jpg"], "step_title": "Step 25: Elmer's Glue DRIED - 14+ Hours - VERY STRONG"}, {"step": 26, "steps_text": "Tools Used:\nNeedle Nose Pliers\nShears (Heavy Duty)\nWire Strippers (Light Duty)\nFlush Cutters", "step_imgs": ["https://cdn.instructables.com/FIH/DO4G/JSYZ9F6U/FIHDO4GJSYZ9F6U.LARGE.jpg", "https://cdn.instructables.com/FLA/1JRZ/JSYZ99EE/FLA1JRZJSYZ99EE.LARGE.jpg", "https://cdn.instructables.com/FGT/N9D5/JSYZ9FDG/FGTN9D5JSYZ9FDG.LARGE.jpg", "https://cdn.instructables.com/FY8/5M1J/JT91IL2L/FY85M1JJT91IL2L.LARGE.jpg"], "step_title": "Step 26: Tools"}, {"step": 27, "steps_text": "Materials:\nCardboard Box\n10 Large Paperclips\n4 Small Paperclips\nElmer's Glue-All\nDuct Tape\n2 D Batteries\n1 Resistor 100 Ohms\n1 LED", "step_imgs": ["https://cdn.instructables.com/FHU/EB42/JTEMZMBG/FHUEB42JTEMZMBG.LARGE.jpg", "https://cdn.instructables.com/F38/8DFS/JTEMZKZ8/F388DFSJTEMZKZ8.LARGE.jpg", "https://cdn.instructables.com/FT6/D6O9/JTEMZL1V/FT6D6O9JTEMZL1V.LARGE.jpg", "https://cdn.instructables.com/F4T/0QRA/JTEMZKWB/F4T0QRAJTEMZKWB.LARGE.jpg"], "step_title": "Step 27: Materials Required"}, {"step": 28, "steps_text": "Papercliptronics is designed for kids and adults.\nBy using Paperclips instead of Solder, we avoid the fumes!!!\nSolder fumes are toxic and cause damage to humans.\nI invented Paperclip Crimping to avoid the dangers of solder and the high costs of buying hundreds of Breadboards.\nPapercliptronics is a permanent circuit design method as well as a prototyping environment.\nInvented by Keystoner March of College of Scripting Music & Science.", "step_imgs": ["https://cdn.instructables.com/FXV/HDIN/JSYZAQO4/FXVHDINJSYZAQO4.LARGE.jpg", "https://cdn.instructables.com/FMS/HHF8/JSYZ9DSD/FMSHHF8JSYZ9DSD.LARGE.jpg"], "step_title": "Step 28: Papercliptronics - the Science of Paperclip Crimping"}, {"step": 29, "steps_text": "WATCH the Video Tutorial here to Follow along step-by-step.", "step_imgs": [], "step_title": "Step 29: Make a Homemade Breadboard Using Paperclips - VERY STRONG & PERMANENT CIRCUIT DESIGN METHOD"}, {"step": 30, "steps_text": "We CRIMP Paperclips around each Leg of the Transistor.\nWe BEND the End of those Paperclips into Hook Shapes.\nWe CONNECT those Hook Shapes to the Paperclip Rails.\nHAVE FUN CONNECTING ELECTRONIC COMPONENTS TO YOUR HOMEMADE BREADBOARD!", "step_imgs": ["https://cdn.instructables.com/F0P/DF8E/JT4TOV94/F0PDF8EJT4TOV94.LARGE.jpg", "https://cdn.instructables.com/FIU/BL2G/JT4TOTVB/FIUBL2GJT4TOTVB.LARGE.jpg", "https://cdn.instructables.com/FJW/MXDT/JTEMYRCE/FJWMXDTJTEMYRCE.LARGE.jpg"], "step_title": "Step 30: Transistor CRIMPED With Paperclips & Bent Into Hook Shapes for Rails"}, {"step": 31, "steps_text": "We MAKE a Dark Detector Circuit using:\n100 Ohm Resistor\npnp 3906 Transistor\nLDR (Light Dependent Resistor)\nLED\n2 D Batteries\nSpeaker Wire Connectors\nPaperclip Connectors", "step_imgs": ["https://cdn.instructables.com/F94/PSKF/JTOMY1A2/F94PSKFJTOMY1A2.LARGE.jpg", "https://cdn.instructables.com/FAS/YKDW/JTOMY1FZ/FASYKDWJTOMY1FZ.LARGE.jpg"], "step_title": "Step 31: Dark Detector Circuit- Papercliptronics Example"}, {"step": 32, "steps_text": "CLICK to WATCH the Video to SEE the Dark Detector Circuit in action.", "step_imgs": [], "step_title": "Step 32: Dark Detector Circuit Video"}, {"step": 33, "steps_text": "We MAKE a Light Detector Circuit using:\n100 Ohm Resistor\n8.2 kOhm Resistor\nnpn 3904 Transistor\nLDR (Light Dependent Resistor)\nLED\n2 D Batteries\nSpeaker Wire Connectors\nPaperclip Connectors", "step_imgs": ["https://cdn.instructables.com/FV6/GE0A/JTOMY4H3/FV6GE0AJTOMY4H3.LARGE.jpg"], "step_title": "Step 33: Light Detector Circuit - Papercliptronics Example"}, {"step": 34, "steps_text": "We USE a thin piece of Duct Tape as a Band around the 3 Legs of our Transistor.\nThis ensures a good contact point on all 3 Legs.\nWe SECURE it firmly in place, applying tight pressure before pressing the tape down.\nWe will REPEAT this step for each of the Components.", "step_imgs": ["https://cdn.instructables.com/FJN/N3PB/JTSXANQK/FJNN3PBJTSXANQK.LARGE.jpg"], "step_title": "Step 34: Duct Tape Contact Band - to Ensure Contact for Circuit Testing Stage"}, {"step": 35, "steps_text": "We USE a thin piece of Duct Tape as a Contact Band, on each of our Components.\nWe PRESS DOWN in the direction that the Component is Tilting, when applying the Duct Tape Band.\nThis Duct Tape method ensures GOOD CONTACT POINTS while we are TESTING our Circuit.\nIn addition, these Duct Tape Bands, can then be Elmer's Glued Into Place.\nThis allows us to use less Elmer's Glue, than we would have, had we not used the Duct Tape Band.\nThe process of Gluing around the Duct Tape Band is shown in a moment.\nIn Summary:\nFor Temporary Circuits, just use a Duct Tape Band, without Elmer's Glue.\nElmer's Glue on top of the Duct Tape Band to SECURE it into place, to ensure, ends don't lift from surface.\nWe also have the option of using Elmer's Glue alone, without the Duct Tape Band, but, that can require a larger amount of Elmer's Glue, to hold each piece securely.", "step_imgs": ["https://cdn.instructables.com/FJ8/JJZL/JTT5GQT9/FJ8JJZLJTT5GQT9.LARGE.jpg", "https://cdn.instructables.com/F18/EB55/JTT5GR2K/F18EB55JTT5GR2K.LARGE.jpg"], "step_title": "Step 35: Duct Tape Contact Band to Ensure Contact - for Temp or Can Be Glue"}, {"step": 36, "steps_text": "We USE Elmer's Glue on top of the Duct Tape Band Ends.\nThe Glue ensures that the Duct Tape Band remains in place.\nThis method is used for GOOD CONTACT during Circuit Testing.\nAllow for 6 Hours for the Elmer's Glue to Dry.\nTime will vary depending on how much Elmer's Glue you use.\nREMEMBER:\nThis is the Temporary Gluing Method, that utilizes the Duct Tape Band to hold Components while Testing our Circuits.\nPERMANENT HOLDER:\nThe more permanent method of Gluing Components in place, requires us to use MORE Elmer's Glue.\nThe Height of Paperclip Rails from the surface of the Cardboard, will determine how much Elmer's Glue is needed for a Good Adhesion Effect.", "step_imgs": ["https://cdn.instructables.com/FVR/S0EF/JTT5JSD0/FVRS0EFJTT5JSD0.LARGE.jpg"], "step_title": "Step 36: Duct Tape Band Elmer's Glued Into Place - Ensures Good Contact for Circuit Testing"}, {"step": 37, "steps_text": "We can now make hundreds and hundreds of electronic circuits for pennies!\nPaperclip Crimping is a Safe Alternative to Solder, because there are no fumes or heat.\nHowever, here is a list of things to keep in mind.\nBE CAREFUL FOR SHARP PAPERCLIP ENDS, ESPECIALLY ON THE BOTTOM OF THE BOX!\nWhen you make the breadboard by inserting Paperclip Ends into the Cardboard, the bottom of the box will have many Paperclip Ends exposed, and therefore, should be considered as sharp and dangerous.\nThese exposed Paper Clip Ends should be covered if possible. A person may choose to place multiple layers of Duct Tape over the exposed Paperclip Ends, and then Elmer's Glue the Duct Tape Ends to keep the Duct Tape in place.\nOR Alternatively, a person can use Hot Glue to cover the ends.\nAlso, if a person bends the Paperclip Ends less, it will expose less of the Ends on the bottom.\nWe might choose also to Elmer's Glue, or Hot Glue, another piece of cardboard, underneath our breadboard, to Cover over the Paperclip Ends that are exposed.\nWARNING: BE CAREFUL FOR THE EXPOSED PAPERCLIP ENDS!!! WARNING\nAdult Supervision is recommended, when cutting Paperclip Connector Legs.\nMake sure to cut the Paperclips in a straight line, other wise a diagonal sharp-piece would result.\nAdult Supervision is recommended, for these are small pieces, and therefore represent a choking hazard.\nBe Careful for any of the sharp Speaker Wire Ends, for they represent a puncture danger.\nIf using Hot Glue, instead of Elmer's Glue, BE VERY CAREFUL for Fumes and Heat.\nHot Glue is non-toxic, but even so, make sure that you have extremely good ventilation, such as a strong fan near a window. In addition, make sure to be extremely careful from the HEAT of the Hot Glue Gun Tip!\nALWAYS HAVE A LARGE AMOUNT OF WATER NEARBY WHEN USING HOT GLUE, JUST IN CASE OF CONTACT!\nThe longer you allow the Elmer's Glue to Dry the STRONGER the Bond will be. But, if a piece is moved before the drying is complete, then the bond will not be as secure.", "step_imgs": ["https://cdn.instructables.com/FB0/IQU6/JTEMYO0G/FB0IQU6JTEMYO0G.LARGE.jpg"], "step_title": "Step 37: HAVE FUN & BE SAFE"}], "channel": "Electronics"}, {"category": "Technology", "description": "This Instructable will show you an easy way to wire up an Arduino Nano to various PCB breakout boards. This project came about during my search for an effective, but non-destructive way to interconnect several module.\nI had five modules I wanted to interconnect:\nAn Arduino\nA 5-inch 800x480 graphical LCD touch panel from Haoyu electronics\nAn SD card reader\nA DS1302 real-time clock unit\nA MAX485 RS-485/RS-422 transceiver\nThe touch panel and the real-time clock modules had previously been used in my my Dali Clock and my Rainbow Synthesizer projects, but those prototypes had been done on a breadboard and had been dismantled to make space for new projects.\nIt became clear to me that having these all these modules together in a permanent fixture would allow me to spend more time writing software and less time wiring things up on a breadboard. At the same time, I did not want to permanently solder anything together so I could preserve the modules for future use.\nThis Instructable shows how I put it all together using wire wrapping.", "title": "Make a Custom Arduino Test Bench Using Wirewrapping", "url": "https://www.instructables.com/id/Make-a-Custom-Arduino-Test-Bench-Using-Wirewrappin/", "steps": [{"step": 1, "steps_text": "My first step was to map out how to interconnect all the modules to the available pins on an Arduino Nano. The display and the SD card are both SPI modules. SPI is a bus, so the CLK, MISO and MOSI lines can be daisy chained to the modules that need it along with power. Each would require their own CS (Chip Select) pin, however.\nI decided to put the RTC module on its own pins because earlier experiments had shown me it wasn't quite SPI compatible. The transceiver modules also needed their own pins.\nAfter mapping everything out, I found it looked like this:\nArduino Pin GND -> LCD GND -> SD Card GND -> Transceiver GND -> RTC 5V\nArduino Pin 5V -> LCD 5V -> SD Card 5V -> Transceiver VCC -> RTC VCC\nArduino Pin 13 -> LCD CLK -> SD Card CLK\nArduino Pin 12 -> LCD MISO -> SD Card MISO\nArduino Pin 11 -> LCD MOSI -> SD Card MOSI\nArduino Pin 10 -> LCD CS\nArduino Pin 9 -> LCD PD\nArduino Pin 2 -> LCD INT\nArduino Pin 8 -> RTC CLK\nArduino Pin 7 -> RTC DAT\nArduino Pin 6 -> RTC RST\nArduino Pin 4 -> SD Card CS\nArduino Pin 14 -> Transceiver DI\nArduino Pin 15 -> Transceiver DE\nArduino Pin 16 -> Transceiver RE\nArduino Pin 17 -> Transceiver RO\nPins 0 and 1 are used by the USB interface, so they were off-limits. Digital pins 3, 5, 18 and 19 remained free, as did analog inputs A4 through A7, allowing for future expansion.", "step_imgs": [], "step_title": "Step 1: Planning the Interconnections"}, {"step": 2, "steps_text": "Initially I had attempted to interconnect everything with short custom crimped Y cables. However the crimps and connectors are only designed to take one wire at a time. Cramming multiple wires in one housing was difficult and led to fragile joints that didn't last long. Not only was the crimping process time consuming, once in use the connectors were likely to work themselves loose from pins, leading to additional wasted time tracking down intermittent faults.\nI had always wanted to give wire wrapping a try, so I thought this was a good opportunity to do so. After some research, I purchased a WSU-30 M tool, some extra long 19mm long single row headers and 30 AWG wire wrapping wire on eBay.\nAs a technology, wire wrapping has a long history. It was a popular way to make digital computers in the 60s, 70s and 80s and saw frequent use in telephone central offices. Although it was obsoleted by mass produced printed circuit boards, wire wrapping has the following advantages for the hobbyist:\nIt is inexpensive and quick\nIt is easy to apply and can be removed cleanly\nIt works with the pin headers that are soldered to many breakout boards\nIt forms a long lasting and reliable connection\nIt allows multiple connections to and from each point (when long headers are used)", "step_imgs": ["https://cdn.instructables.com/FZI/C6YF/JT4TQSZE/FZIC6YFJT4TQSZE.LARGE.jpg", "https://cdn.instructables.com/FST/VUYN/JT4TQTR1/FSTVUYNJT4TQTR1.LARGE.jpg"], "step_title": "Step 2: The Problem With Jumper Wires and Wirewrap As a Solution"}, {"step": 3, "steps_text": "The next step was preparing my Arduino Nano. I had an Arduino Nano without any headers, which turned out to be handy, since I wanted to solder the extra long header pins to the top side so I could see the labels while wire wrapping.\nI also soldered some extra long headers to the tiny breakout board that came with my display panel.\nOn the transceiver module, the screw terminals were on the opposite side of the headers, so I desoldered them and moved them to the same side as the headers.\nThe other boards had short headers already soldered on in the correct side, so I kept them as is.", "step_imgs": ["https://cdn.instructables.com/FOM/MDXO/JT4TQUB0/FOMMDXOJT4TQUB0.LARGE.jpg", "https://cdn.instructables.com/F3V/ACV5/JT4TQUAZ/F3VACV5JT4TQUAZ.LARGE.jpg"], "step_title": "Step 3: Preparing an Arduino Nano"}, {"step": 4, "steps_text": "I wanted to be able to mount all the electronics in the back of the LCD stand I had created for my Dali Clock instructable, so I modeled up something in OpenSCAD. I made cutouts for the various boards I wanted to mount.\nAfter I printed out the tray, I hot-glued all the modules in place.", "step_imgs": ["https://cdn.instructables.com/FW3/R1ZP/JT4TQUKE/FW3R1ZPJT4TQUKE.LARGE.jpg", "https://cdn.instructables.com/F62/O760/JT4TQV5S/F62O760JT4TQV5S.LARGE.jpg"], "step_title": "Step 4: Designing a Tray"}, {"step": 5, "steps_text": "The process of wire wrapping consists of the four steps: measuring, cutting, stripping, and wrapping.\nI measure out enough wire for spanning the two points I want to connect, plus an additional inch on each end for wrapping. Then, I strip off 1 inch of insulation on each end and use the tool to wrap the wire onto the post.\nThe following is the exact technique I use, which you can see on my demonstration video:\nI measure the span between two points I want to connect\nI mark the desired length with my fingers, then use a ruler to add two inches\nI cut the wire to length\nI measure 1 and a 1/4th inch off the end\nI then insert the end into the hole on the wrapping tool\nI pull the wire down into the gap in the cutting blade\nI yank the wire from the other end, stripping bare one inch of wire\nI repeat the process for the other side of the wire\nWith the wire stripped on both ends, I insert the bare wire end into the barrel of the wire wrapping tool so that the stripped portion emerges from the notch on the side. I then slide the tip down on a post and give it a few turns, holding the tool loosely to allow it to rise up as it winds.\nA good connection will leave about 7 turns of wire on the post. If the turns are stacked up upon each other, don't push down on the tool so hard!\nUPDATE: Several of you have chimed in that the insulation should wrap around the post for strain relief. I have included two photos to show the difference.", "step_imgs": ["https://cdn.instructables.com/FTG/33RI/JT4TQXJZ/FTG33RIJT4TQXJZ.LARGE.jpg", "https://cdn.instructables.com/FCK/CZA5/JT4TQXLX/FCKCZA5JT4TQXLX.LARGE.jpg", "https://cdn.instructables.com/FTZ/VI4E/JTEMXYJH/FTZVI4EJTEMXYJH.LARGE.jpg"], "step_title": "Step 5: The Process of Wirewrapping"}, {"step": 6, "steps_text": "This shows the board after I wire wrapped all the connections. I made a few mistakes along the way, but these were easily undone by clipping the wires and using tweezers to unwrap the ends from the posts.\nI suggest doing it one part at a time and checking your work with a multi-meter or by powering up and testing each component. Its a lot harder to fix once there are multiple layers of wires.\nMy finished product looks a bit messy, but if you want you can be a bit more careful about the routing or use different colors to keep things clear.\nEven if it doesn't look pretty, it is a lot more robust than a breadboard! But the big bonus is that if at any time you want to take it apart, you can do so easily with no damage to the Arduino Nano or to the pin headers on the individual boards!", "step_imgs": ["https://cdn.instructables.com/FEA/ZYCS/JT4TQVB2/FEAZYCSJT4TQVB2.LARGE.jpg"], "step_title": "Step 6: Wire Wrapping the Entire Board"}, {"step": 7, "steps_text": "The completed board will allow you to implement these projects:\n80s Style Melting Digital Clock\nAn Illuminated Rainbow Piano With An Arduino (requires external components)", "step_imgs": [], "step_title": "Step 7: Compatible Projects"}], "channel": "Arduino"}, {"category": "Technology", "description": "Hi everybody!\nI am happy to present the \"Steampunk Oriental Night Light - Nur-al-Andalus\" as my latest object to you.\nLike it is a typical for my creations parts I took all needed parts -even the used batteries- from the scrap!\nThis small lamp is placed at my nightstand and I love to watch the wonderful colours of this nearly wrecked CMH-Bulbs each night.\nTo give you a short impression, I created a small animation of this light by sending the signal C-Q-D (which means: \"Come Quick, Danger!\" at that victorian era Steampunks prefer) in Morse-Code!\nAnd now let us start with some necessary explanations:\nWhen I was looking for some wrecked incandescent light bulbs at my local hardware store, these black coolured tubes which I have never seen before came to my hand and I took them with me at home. After some minutes with google, it was clear that these tubes are called CMH-Light-bulbs. At home, I just tried to activate them with an electronic board for flash units of a single-use camera (see this instructable) and was absolutely surprised, that it worked best!!!\nNOTE: All producers like GE, Philips and more others, write about a possible risk that a bulb could burst when it is running in its normal use. It is said that if this tube bursts, very hot (about 500\u00b0C) glass parts will be spread. So take care and do not wreck yourself. Better cover these bulbs with a protective glass shield.\nMy personal opinion and experience is that these bulbs are quite safe when they just glowing like I used to work with, especially when you use the very low power of these flash units. It seems to me, that it is nearly the same risk like working with neon gas filled bulbs or nixie tubes.\nThese nearly dead CMH bulbs (and also brand new ones) just start to glow and they do not heat up. I measured at different times these bulbs while glowing under here described conditions! and they showed just the same temperature as the surrounding air in the room. Conclusion: This construction works deeply under the operating temperature!\nLiterature talks about 6 exploded bulbs while highly running! in a number of 35 billions of produced bulbs! over a time of twenty years.\nBut it is your own decision and I please you one more time not to harm you, and to take care of your health!!!\nWell, I went down to my workshop and started this project immediately.\nI hope that enjoy the instructable and I thank you for reading, watching, following and hopefully for voting;-))\nYous Aeon Junophor", "title": "Steampunk Oriental Night Light - Nur-al-Andalus", "url": "https://www.instructables.com/id/Steampunk-Oriental-Night-Light-Nur-al-Andalus/", "steps": [{"step": 1, "steps_text": "If you are interested in more details I\u00b4ll try to give them here by citing them. If not, just jump to the next step!\nIn literature I found a lot of information about these voltaic-arc-lamps and I picked the most important facts for this project out.\nAbout the construction of an arc tube:\nInside the fused quartz arc tube, two tungsten electrodes doped with thorium are sealed into each end and an AC voltage is applied to them through molybdenum foil seals fused in silica. It is the arc between the two electrodes where the light is actually created.\nBesides mercury vapor, the lamp contains iodides or bromides of different metals. Iodine and bromine are of the halogen group of the periodic table, and so are termed \"halides\" when ionized. Scandium and sodium are also used in some types, with thallium, indium, and sodium in European Tri-Salt models. More recent types use dysprosium for high color temperature and tin for lower color temperature. Holmium and thulium are used in very high power movie lighting models. Gallium or lead are used in special high UV-A models for printing purposes. The mixture of the metals used defines the color of the lamp. Some types, for festive or theatrical effect, use almost pure iodides of thallium, for green lamps, and indium, for blue lamps. An alkali metal, (sodium or potassium), is almost always added to reduce the arc impedance, allowing the arc tube to be made sufficiently long and simple electrical ballasts to be used. A noble gas, usually argon, is cold filled into the arc tube at a pressure of about 2 kPa to facilitate starting of the discharge. Argon filled lamps are typically quite slow to start up, taking several minutes to reach full light intensity; xenon fill, as used in automotive headlamps, start up relatively faster.\nFrom history:\nThe concept of adding metallic iodides for spectral modification (specifically: sodium - yellow, lithium - red, indium - blue, potassium and rubidium - deep red, and thallium - green) of a mercury arc discharge to create the first metal-halide lamp can be traced to patent US1025932 in 1912 by Charles Proteus Steinmetz, the \"Wizard of General Electric\".\nIn the mid-1980s a new type of metal-halide lamp was developed, which, instead of a quartz (fused silica) arc tube as used in mercury vapor lamps and previous metal-halide lamp designs, use a sintered alumina arc tube similar to those used in the high pressure sodium lamp. This development reduces the effects of ion creep that plagues fused silica arc tubes. During their life, sodium and other elements tends to migrate into the quartz tube, because of high UV radiation and gas ionization, resulting in depletion of light emitting material that causes cycling. The sintered alumina arc tube does not allow the ions to creep through, maintaining a more constant colour over the life of the lamp. These are usually referred as ceramic metal-halide lamps or CMH lamps.The amount of mercury used has lessened over years of progress.\nAbout the outer bulb:\nMost types are fitted with an outer glass bulb to protect the inner components and prevent heat loss. The outer bulb can also be used to block some or all of the UV light generated by the mercury vapor discharge, and can be composed of specially doped \"UV stop\" fused silica. Ultraviolet protection is commonly employed in single ended (single base) models and double ended models that provide illumination for nearby human use. The cover glass of the luminaire can be used to block the UV, and can also protect people or equipment if the lamp should fail by bursting.\nOld HMI lamps\nAt the end of life, metal-halide lamps exhibit a phenomenon known as cycling. These lamps can be started at a relatively low voltage but as they heat up during operation (sic!), the internal gas pressure within the arc tube rises and more and more voltage is required to maintain the arc discharge. As a lamp gets older, the maintaining voltage for the arc eventually rises to exceed the voltage provided by the electrical ballast. As the lamp heats to this point, the arc fails and the lamp goes out. Eventually, with the arc extinguished, the lamp cools down again, the gas pressure in the arc tube is reduced, and the ballast once again causes the arc to strike. This causes the lamp to glow for a while and then goes out, repeatedly. In rare occurrences the lamp bursts at the end of its useful life.", "step_imgs": ["https://cdn.instructables.com/FC8/212S/JT4TSC5L/FC8212SJT4TSC5L.LARGE.jpg", "https://cdn.instructables.com/FQP/4S6T/JT4TSC9N/FQP4S6TJT4TSC9N.LARGE.jpg", "https://cdn.instructables.com/FBW/G201/JT4TS9O5/FBWG201JT4TS9O5.LARGE.jpg", "https://cdn.instructables.com/FEN/7KH3/JT4TSBNH/FEN7KH3JT4TSBNH.LARGE.jpg", "https://cdn.instructables.com/FC2/5GJZ/JT4TSBLQ/FC25GJZJT4TSBLQ.LARGE.jpg"], "step_title": "Step 1: Some More Detailed Explanation About CMH-Bulbs If Needed"}, {"step": 2, "steps_text": "Meanwhile I got several CMH-bulb of different ages from brand new to very old ones and tested them intensively.\nIn these picture you can see my results.", "step_imgs": ["https://cdn.instructables.com/FUB/IWHB/JT4TSCAU/FUBIWHBJT4TSCAU.LARGE.jpg", "https://cdn.instructables.com/F7R/O5Q8/JT4TSBUG/F7RO5Q8JT4TSBUG.LARGE.jpg", "https://cdn.instructables.com/FLT/Z1N6/JT4TSBWE/FLTZ1N6JT4TSBWE.LARGE.jpg", "https://cdn.instructables.com/F2W/4GFD/JT4TSC22/F2W4GFDJT4TSC22.LARGE.jpg", "https://cdn.instructables.com/FHQ/9YPL/JT4TSC5H/FHQ9YPLJT4TSC5H.LARGE.jpg", "https://cdn.instructables.com/FGG/72NG/JT4TSC0U/FGG72NGJT4TSC0U.LARGE.jpg", "https://cdn.instructables.com/F2T/FRNN/JT4TSC21/F2TFRNNJT4TSC21.LARGE.jpg", "https://cdn.instructables.com/FIL/1O37/JT4TSC3B/FIL1O37JT4TSC3B.LARGE.jpg", "https://cdn.instructables.com/FF3/R3W8/JT4TSC8F/FF3R3W8JT4TSC8F.LARGE.jpg"], "step_title": "Step 2: Results of Testing CMH-bulbs With Different Ages"}, {"step": 3, "steps_text": "An old cigar box was broken in the middle when I took it from the scrap. To use this box once again, I cut the broken part off with a jig saw and made it smaller.Some brass made clamps, fixed with small M4 brass made screws are used for decoration and keep the edges together (which is of course not necessary but sound good as explanation)...\nIn the middle of the box top I placed the cover of an old and of course totally damaged junction box made of bakelite. Therefore I cut a big hole with a fret saw, finished it with some sanding paper and glued the bakelite cap with epoxy-resin in.\nThe hole in the middle of this cap had been used to close the junction box with a huge bakelite screw which also misses and a piece of a recycled copper tube muffle now perfectly fits in. In this muffle I put the bulb holder made of copper which is explained intail next step.", "step_imgs": ["https://cdn.instructables.com/F8T/E0I4/JT4TS8WA/F8TE0I4JT4TS8WA.LARGE.jpg", "https://cdn.instructables.com/F62/PYUM/JT4TS916/F62PYUMJT4TS916.LARGE.jpg", "https://cdn.instructables.com/FTQ/8OZK/JT4TS8ZM/FTQ8OZKJT4TS8ZM.LARGE.jpg", "https://cdn.instructables.com/FWD/71YS/JT4TS8YF/FWD71YSJT4TS8YF.LARGE.jpg", "https://cdn.instructables.com/FX4/D56R/JT4TS8XC/FX4D56RJT4TS8XC.LARGE.jpg", "https://cdn.instructables.com/FB5/OFAV/JT4TS954/FB5OFAVJT4TS954.LARGE.jpg", "https://cdn.instructables.com/FPW/Q6QR/JT4TS8Z0/FPWQ6QRJT4TS8Z0.LARGE.jpg", "https://cdn.instructables.com/FT5/INXE/JT4TS9EF/FT5INXEJT4TS9EF.LARGE.jpg", "https://cdn.instructables.com/FDR/OOQH/JT4TS9DD/FDROOQHJT4TS9DD.LARGE.jpg", "https://cdn.instructables.com/FAD/2KU8/JT4TS928/FAD2KU8JT4TS928.LARGE.jpg", "https://cdn.instructables.com/FJB/F3CX/JT4TS92Q/FJBF3CXJT4TS92Q.LARGE.jpg", "https://cdn.instructables.com/FLV/LG73/JT4TS94L/FLVLG73JT4TS94L.LARGE.jpg"], "step_title": "Step 3: Woodworking With the Box"}, {"step": 4, "steps_text": "The glowing light of these old CMH-bulbs is not so bright and so I took a piece of copper tube which once had been cut in the middle, polished and lacquered it, so that the inner side now reflects the light. The Top crown is made of different parts from the scrap like cover nuts, washers, rubber, a bearing cage made laminated fabric as well as copper- and brass made rings of different sizes. All parts had been finally glued together with epoxy resin and super glue.\nAs you can see at the pictures, long screws were needed to tighten the new box. Therefore I used these special screws which I already developed in this Flickering Bulb project. In combination with the \"crowned\" bulb holder and the bakelite cap it came to my mind that this lamp now looks like it is inspired from elements of the moorish architecture and I tried to work out this idea best.\nThe levers of the switches were also covered with brass.", "step_imgs": ["https://cdn.instructables.com/FE7/QK93/JT4TS99F/FE7QK93JT4TS99F.LARGE.jpg", "https://cdn.instructables.com/F3B/U081/JT4TS9B3/F3BU081JT4TS9B3.LARGE.jpg", "https://cdn.instructables.com/FTE/17AT/JT4TS9QV/FTE17ATJT4TS9QV.LARGE.jpg", "https://cdn.instructables.com/FS6/OH2J/JT4TS9P7/FS6OH2JJT4TS9P7.LARGE.jpg", "https://cdn.instructables.com/FO2/ML5J/JT4TS9PS/FO2ML5JJT4TS9PS.LARGE.jpg", "https://cdn.instructables.com/FFA/3NKC/JT4TS9RD/FFA3NKCJT4TS9RD.LARGE.jpg", "https://cdn.instructables.com/FWL/K1SX/JT4TS9M2/FWLK1SXJT4TS9M2.LARGE.jpg"], "step_title": "Step 4: Metal Works"}, {"step": 5, "steps_text": "Another old junction box, made of bakelite had been used before as a tester for these CMH-tubes and there I took out all the electronic parts for this lamp an added one more switch and a 470k ohms potentiometer.\nIt is also possible to run the flash unit with 3.0 Volts instead of 1.5 Volts without ans problems. The \"higher\" voltage supply with 3.0 Volts of the circuit let the glowing of the CMH-Bulbs shine brighter or even is necessary to ignite the glowing.\nWhile testing different aged CMH-bulbs, the idea came to my mind to add one small amber coloured LED to enlighten them additionally from the bottom, when their own glowing light is too weak.\nSo one can choose to switch on the LED too and with the potentiometer it is possible to regulate this LED-light.\nThis LED is integrated in the screw terminal for the CMH-tube an fixed with melting glue. In this case I chose two separate battery holders but you can also supply all electronic parts with one holder and 3 Volts. (This I show you in the following project)", "step_imgs": ["https://cdn.instructables.com/FXM/5V0M/JT4TS9CS/FXM5V0MJT4TS9CS.LARGE.jpg", "https://cdn.instructables.com/FGU/X356/JT4TSC6W/FGUX356JT4TSC6W.LARGE.jpg", "https://cdn.instructables.com/FVI/N5RN/JT4TS9FO/FVIN5RNJT4TS9FO.LARGE.jpg", "https://cdn.instructables.com/FGE/1HSG/JT4TS9IR/FGE1HSGJT4TS9IR.LARGE.jpg", "https://cdn.instructables.com/FQZ/R790/JT4TS96B/FQZR790JT4TS96B.LARGE.jpg", "https://cdn.instructables.com/F66/J7ZO/JT4TS98C/F66J7ZOJT4TS98C.LARGE.jpg", "https://cdn.instructables.com/F0P/HTQ3/JT4TS9G7/F0PHTQ3JT4TS9G7.LARGE.jpg", "https://cdn.instructables.com/FTC/N5HJ/JT91IZAI/FTCN5HJJT91IZAI.LARGE.jpg", "https://cdn.instructables.com/F5X/QSMU/JT91IZ9G/F5XQSMUJT91IZ9G.LARGE.jpg", "https://cdn.instructables.com/FCL/MNL7/JT4TS9MK/FCLMNL7JT4TS9MK.LARGE.jpg", "https://cdn.instructables.com/F9A/J64L/JT4TS9NM/F9AJ64LJT4TS9NM.LARGE.jpg"], "step_title": "Step 5: Electronic Equipment and Assembling All Parts"}], "channel": "Reuse"}, {"category": "Technology", "description": "Imagine you have a scrambled Rubik's Cube, you know that puzzle form the 80s that everyone has but nobody really knows how to solve, and you want to bring it back into its original pattern. Luckily these days it is very easy to find solving instructions. So, go online look at a video learn how to turn the sides to bring you joy. After doing it a couple of times, however, you will realize that there is something missing. A hole inside that can't be filled. The engineers/maker/hacker within you simply cannot be satisfied with solving something so amazing in such a simple way. Wouldn't it be much more poetic if you had a machine that did all the solving for you? If you'd built something all your friends would be amazed by? I can guarantee you that it doesn't get much better than watching your creation do wonders and solve a Rubik's Cube. So, come and join me on the wonderful journey of building Q-Bot, the open source Rubik's Cube Solver that most certainly won\u2019t beat any world records, but will give you hours of joy (after of course going through all of the frustrations during the building process).", "title": "Q-Bot - the Open Source Rubik's Cube Solver", "url": "https://www.instructables.com/id/Q-Bot-the-Open-Source-Rubiks-Cube-Solver/", "steps": [{"step": 1, "steps_text": "The complete solver was designed with CAD in Catia. This way most of the design errors could be found and corrected before manufacturing any physical components. Most of the solver was 3D printed in PLA using a prusa MK3 printer. In addition, the following hardware was used:\n8 pieces of 8 mm aluminium rod (10cm length)\n8 linear ball bearings (LM8UU)\na little under 2 m of GT2 6mm timing belt + some pulleys\n6 NEMA 17 bipolar stepper motors\n6 Polulu 4988 stepper drivers\nan Arudino Mega as the controller for the project\na 12 V 3A power supply\na step down converter to safely power the arduino\nsome screws and connectors\nsome plywood for the base\n\nHardware description\nThis section briefly covers how the Q-Bot even functions and where the above mentioned components are used. Below you can see a rendering of the fully assembled CAD modell.\nThe Q-bot works by having four motor attached directly to the Rubik's Cube with 3D printed grippers. This means that left, right, front and back can be turned directly. If the top or the bottom side need to be turned, the entire cube must be turned and so two of the motors have to be move away. This is done by attaching each of the gripping motors onto sleds driven by another stepper motor and a timing belt along a linear rail system. The rail system consists of two 8 ball bearings that are mounted into cavities in the sled and the whole sled rides on two 8mm aluminium shafts. Below you can see the sub assembly of one axis of the solver.\nThe x- and the y-axis are basically identical they only differ in the height of the mounting point of the belt, this is so that there are no collisions between the two belts when fully assembled.", "step_imgs": [], "step_title": "Step 1: Designing the Hardware"}, {"step": 2, "steps_text": "Of course, selecting the right motors is very important here. The main part is that they need to be strong enough to be able to turn a Rubik's cube. The only problem here is that no manufacturer of Rubik's cubes gives a torque rating. So, I had to improvise and do my own measurements.\nGenerally torque is defined by the force directed perpendicularly to the position of the rotational point at the distance r:\nSo, if I could somehow measure the force applied to the cube I could calculate the torque. Which is exactly what I did. I clamped my cube to a shelf in a way that only one side could move. That a string got tied around the cube and a bag attached at the bottom. Now all that was left to do was slowly increase the weight in the bag until the cube turned. For the lack of any accurate weights I used potatoes and measured them afterwards. Not the most scientific method but because I'm not trying to find the minimum torque it is quite sufficient.\nI did the measurments three times and took highest value just to be safe. The resulting weight was 0.52 kg. Now because of Sir Isaac Newton we know that Force equals mass times acceleration.\nThe acceleration, in this case, is the gravitational acceleration. So the required torque is given by\nPlugging in all of the values, including half of the diagonal of the Rubik's cube, finally reveals the required torque.\nI went with stepper motors that are able of applying up to 0.4Nm which is probably an overkill, but I wanted to be safe.", "step_imgs": [], "step_title": "Step 2: Picking the Right Motors"}, {"step": 3, "steps_text": "The base consists of a very simple wooden box and it houses all the required electronics. It features a plug to turn on and off the machine, an LED to indicate if it is turned on, an USB B port and a socket for the power supply to plug into. It was constructed using 15mm plywood, some screws and a bit of glue.", "step_imgs": [], "step_title": "Step 3: Constructing the Base"}, {"step": 4, "steps_text": "Now with all the required parts, including the base, the Q-bot was ready to assemble. The custom parts were 3D printed and adjusted where needed. You can download all of the CAD files at the end of this ible. The assembly included fitting all of the 3D printed parts with the bought parts, extending the motor cables and screwing all of the parts to the base. In addition, I put sleeves around the motor cables, just to make in look a little neater, and added JST connecters to their ends.\nTo highlight the importance of the base I built, here is a before and after shot of what the assembly looked like. Tiding everything up a bit can make a huge difference.", "step_imgs": [], "step_title": "Step 4: Assembling the Hardware"}, {"step": 5, "steps_text": "As for the electronics the project is rather simple. There is a main 12V power supply, that can deliver up to 3A of current, which powers the motors. A step-down module is used to safely power the Arduino and a custom shield for the Arduino was designed that houses all of the stepper motor drivers. The drivers make controlling the motors much easier. Driving a stepper motor requires a specific control sequence but by using motor drivers we only need to generate a high pulse for each step the motor shall turn. In addition, some jst connectors were added to the shield to make connecting the motors easier. The shield for the Arduino was firtsly built on a piece of perfboard and after making sure that everything workes as it was supposed to it got manufactured by jlc pcb. The egale files can be downloaded at the end of this ible.", "step_imgs": [], "step_title": "Step 5: Electronics"}, {"step": 6, "steps_text": "The Q-Bot is divided into two parts. On the one hand there is the hardware that gets controlled by the Arduino, on the other hand there is a piece of software that calculates the solving path for the cube based on the current scramble. The firmware running on the Arduino was written by myself but in order to keep this guide short I will not go into any details about it here. If you wish to have a look at it and play around with it, the link to my git repository will be provided at the end of this document. The software that calculates the solution runs on a windows machine and was written by a colleague of mine, again links to his source code can be found at the end of this ible. The two parts communicate using a simple serial interface. It calculates the solution based on Kociemba's two phase algorithm. The solving software sends a command consisting of two bytes to the solver and waits for it to return an \u2018ACK\u2019. This way the solver can be tested and debugged using a simple serial monitor. The complete instruction set can be found below.\nThe commands to turn each motor for one step are a workaround for a problem where some of the steppers would randomly perform small jumps upon power up. To compensate for this the motors can be adjusted to their initial position prior to the solving process.", "step_imgs": [], "step_title": "Step 6: Software & Serial Interface"}, {"step": 7, "steps_text": "After eight months of developing, swearing, hitting the keyboard and dancing the Q-bot was finally at a point where is successfully solved its first Rubik's Cube. The scramble of the cube had to be inserted manually into the control software, but everything worked well.\nI added a mount for a webcam a couple of weeks later and my college adjusted the software to read the cube automatically from the images taken. However, this is not tested well yet and still needs some improvements.\nIf this instructable sparked your interest don't hesitate and start building your very own version of the Q-bot. It might seem daunting at first, but it is very much worth the effort and if I could do it so can you.\nResources:\nSource Code of the Firmware:\nhttps://github.com/Axodarap/QBot_firmware\nSource Code of the control software\nhttps://github.com/waldhube16/Qbot_SW", "step_imgs": [], "step_title": "Step 7: Conclusion"}], "channel": "Robots"}, {"category": "Technology", "description": "What can you create merging one of the most appreciated flying wing frame, a proper electronic setup and a well set autopilot software? You'll have a nice and funny \"toy\" that can amuse different pilots with different skills.\nThis project started when i decided to put aside for a while other random ideas about rc planes, to dedicate some effort to design and build a model with some specs in mind. No custom, hotwired wing profile, no strange motor configuration and so on...\nI've listed these design goals:\nThe plane must \"fly well\" while being reasonably cheap, less than 100 bucks, the less the better. (well, purchase from china, without the transmitter-receiver).\nThe plane must have an FPV system, with an OSD device that's easy to set up.\nThe plane must being able to carry an HD action cam (foxeer legend, runcam 2, something light, with a low profile).\nThe plane must have a reliable flight controller (not only a gyro stabilization). I don't aim to do autonomous waypoint missions (nevertheless the hardware would be ok), what i want is:\nAutolaunch feature, for no-brain takeoff and no need of additional tools like catapults or bungees (or a buddy that launches the plane for us).\nAutonomous flight mode, like \"cruise\" and \"RTH\".\nReliable failsafe behavior in the event of video/radio signal lost.\nBattery voltage and current monitoring for additional safety.\nGood flight time, 20-30 min with a calm flight\nYou know, wouln't be nice to have a small and cheap rc plane, that you can always keep in the car's trunk to use it whenever and wherever you want? A plane that's also funny, with nice advanced features that can save you a lot of hassle, and with an HD cam to record your best places and moments? Well, i'm really sure it would, so i wrote this tutorial!", "title": "RC Plane: FPV & INAV on a Z-84 Wing", "url": "https://www.instructables.com/id/RC-Plane-FPV-INAV-on-a-Z-84-Wing/", "steps": [{"step": 1, "steps_text": "One of the best plane i've ever had (and also heard of) is the Mini Talon. Nevertheless i didin't choose the mini talon for this project because it would't be an easy model to build and, more important, it wouldn't be a cheap model at all!\nAnother reasonable candidate could be the nano Skyhunter, which is a small and funny plane. Unluckily this frame is affected by some aerodynamic issues (it can start unwanted flat spins after tip stall and, without rudder, is not easy to save the plane) and for this reason it's not recommended for anyone.\nSomeone might like the traditional airplane design, with a fuselage, a couple of wing in the middle, with rudder and elevon behind, and a pulling motor on the front. Well, i really don't like to have pulling motors on these kind of planes (fpv). That's not beacuse the propeller disc will likely be in the middle of the recorded frame, that could be even nice. The issue is that the motor (and the propeller) will be more exposed during landing and, even more important, sometime something goes wrong. Remeber that there's always a chance to loose control, for whatever reason, and hit something or someone. With a pushing motor the chances to damage something or hurt someone are way less.\nAnother candidate could be a small delta wing frame, more or less as big as the nano skyhunter (80cm or 31in).\nI have some of them with different setups: with or without the flight controller and FPV gears, with small or big motors and i have to say that this concept has several nice features.\nFirst of all: they are tough and and crash resistant, you can easy glue them back into a fully working status several times. I've had full throttle crashes that required a bag to collect all the pieces spreaded on the field, but with a lot of glue i always managed to fly them again.\nMy final choice is a Wing Wing Z-84 frame, which is a cheap but really appreciated frame, with a nice and areodynamic shape with an efficient airfoil. I've considered also the Eachine Blackwing, but the Z-84 took the lead because of it's larger wingspan (then less wing load). Moreover, a guy called Mark Qvale also appreciates it, and you can believe that if he's happy with a frame then it's a good frame.\nI suggest to buy the plane in kit version and the other specific components, separately. I don't trust the PNP planes beacuse of both the assembly quality and the components quality. I'm not to saying that every PNP plane is crap, it's just that i'm not sure that every plane is well assembled with good components! Moreover i still remember when i've put additional eletronics on my PNP nano skyhunter, it would have been way easier to do than with a kit -unglued- plane. Well, i have to admit that with this kind frame it's not a big deal to choose a PNP beacuse everything will be placed in the canopy.\nFor the records, the photo shows what you will receive with the kit version of the plane. Now we have to add some other components.", "step_imgs": ["https://cdn.instructables.com/F9P/Z7PQ/JSUOW17J/F9PZ7PQJSUOW17J.LARGE.jpg"], "step_title": "Step 1: Choice of the Frame"}, {"step": 2, "steps_text": "In order to fly you'll need other components: a motor (MT), an electronic speed controller (ESC), a battery (BT), two servos and a transmitter-receiver (TX-RX) system.\nIf you want to fly FPV you'll need also a camera (CAM), a video transmitter (VTX) and an antenna.\nThe last feature, the autonomous flight, requires a flight controller (FC) and a GPS module.\nIn the photo you can see what i used for my plane (i know, i forgot the camera).\nAll these components have been collected on these pages (Amazon, Bangood). Keep the page open while i'll proceed describing why i choosed these specfic components.\nMOTOR (MT): in order to keep the price low i've decided to use a quadcopter motor. It would be good enough and i also like to have the threaded motor shaft that doesn't need anything else to fix the propeller (the \"airplane motors\" usually have a smooth shaft that requires a prop adapter/holder). A good choice is the common 2204 2300KV motor. A 2205 or a 2206 motor could also work, but they would be more heavy and expensive for no particular reason. You could/would try to have less KV, in order to use bigger props without overloading the ESC or the battery. Bigger and slower props are more efficient, but you have to deal with your frame available space.\nESC: this component takes power from the battery and gives it to the motor, depending on the received signal. There's no reason to go big here, 12Amps are enough to fly without troubles, 30Amps allows unlimited vertical flight. I'll keep a nice balance, 20A ESC can provide plenty of power also for loops and other acrobatic manouvres. I'll test also DIY batteries made with 18650 li-ion cells, and that's another reason why i don't want to foresee a current consumption higher than 20A.\nOne important ESC's feature is it's BEC, battery eliminator circuit. It's basically a voltage regulator that can provide the right voltage to the RX, the servos and the other electronic. BEC is relevant because most of the expert buidlers think that servos should be powered by a dedicated circuit, which must not provide power to the FC and/or the RX.\nYou know, shit happens, and if there's something wrong with a servo it usually drains a lot of current (brownout).\nThis amount of current could easily be more than the amount that can be provided by the BEC, and therefore the bad servo can \"steal\" power to the other components. If you have the FC on the same power rails it could be forced to reset due low voltage, and therefore disarm the model mid air and a lot of bad bad things will happen. On the other hand, if you have a separated BEC, the brownout could still force you into an emergency landing, or maybe a crash, or maybe you can recover the plane, who knows? The idea is that in any case the OSD, the GPS, the telemetry and the buzzer will remain online, no matter what. That's clear how big this is in case you have to search your plane in the field, meters and meters away in an unknown place.\nAnyway, since this plane has only two servo and since the suggested FC has its own (quite big) BEC, chances are not that bad. You'll gain few grams choosing \"opto\" ESC, without BEC, but imho is not worth the risk. I'll go with BEC ESC, i'll find other safe ways to safe few grams.\nPROPELLER: the best compromise i've found so far is a Dalprop 5046C three blades. A two blades 6040 or 6030 can give you more efficiency but they will run very close to the frame (see the following image) and this make noise. It's not \"taking off airbus\" loud but it's definitely loud and i'd rather keep a low profile when i'm flying around places like golf club and other quiet places. Whatever, it's just a personal choice. You can't further increase the diameter to 7\" or more, you'll hit the frame. You can reduce the prop diameter but you'll lose efficiency. A lot of efficiency. Anyway, any prop ranging from 5050 to 4045 should get you airborne. If you only have quad prop at hand you could still use them.\nI haven't built a motor/esc/propeller test stand yet, it's on the schedule but for now you should trust my \"feeling\" of the full throttle thrust compared to its power consumption (i have a wattmeter, no guessing here) with different propeller. I have these props that are reasonably sized for this model [diameter][pitch]-[blades #]:\n5056-3 -> too much current\n5050-3 -> too much current\n5046-3 -> my choice\n5042-3 -> ok, but you can use more power\n4045-3 -> little thrust and not efficient\n6050-2 -> too much current\n6040E-2 -> ok, but noisy\n5030-2 -> ok, but you can use more power\nBATTERY: Any battery that can provide 20-25A is ok, the capacity should range from 1000 to 1800mAh. I guess that a 1300mAh 20C 3S li-po battery would be the best choice, price/performance wise. I'll test also a 4S li-ion battery made from 18650 cells, i'll discuss that later.\nSERVO MOTORS: these small components will move the ailerons, so they will control the plane's flight path. As you can imagine this is not the best component to save money with, giving up quality. If you have an issue with the esc or the motor you still can try to land doing a controlled glide, if you have a servo that doesn't respond the plane will be out of control. Good news: you need only two of them, so quality servos are not that big chunk of the budget. Any good digital servo with metal gears is a proper choice, the right size is 9g servo.\nRADIO TRANSMITTER/RECEIVER (TX/RX): I won't talk a lot about this combo because the are mainly two options. Option one: you already have one, so you already know what i'm talking about and how to adapt this project to your radio. Option two: you don't have a radio and then you should just stick with the suggested one. A nice choice to begin with is the Flysky FS-I6 paired with an FS-X6B. These cheap radios have a lot of modding potential, you can see my other tutorials, so you can improve the performance and can add a lot of features just for few bucks. Anyway, with this receiver you can easily send the plane more than 1.5Km away, which isn't bad for a casual flight. Are other radios better? Yes, but the price is several times higher so there's no point in this. In the end the only requirement is to have a receiver that can output a serial bus (i-bus for the Flysky, but also sbus and others can work as well) or at least a PPM output. Serial bus is recommended!\nCAMERA (CAM): this choice is really subjective and it could have a notable impact on your wallet. You \"can\" fly with cameras that range from 5 to 100 bucks and here the performance are strongly bonded to the price. Some reviews say that without the best one you can't fly. That's false, you actually CAN FLY, the comfort is worse, the colors might be faded and/or not real but that's still good enough. My choice is a Foxeer HS1177-V2, which is a well tested and appreciated FPV camera.\nVIDEO TRANSMITTER (VTX): different places have different rules, check yours. My choice is a cheap but good enough Eeachne TX526. It works with in the usual 5.8GHz range, it can be set to different transmission power and it has one of the smallest footprint.\nVIDEO ANTENNA: You have two main choices: linear and circular polarization. The stock antennas, the straight \"router like\" ones, are linear polarization antennas, and this is the best choice if you want the farthest video range but it requires your plane to fly mostly flat. The suggested \"mushroom like\" antennas use the circular polarization, and these ones are the best choice if you have lively flight. Linear polarization requires to have the two antenna pretty much aligned, circular polarization doesn't care. I want to do loops and tight turn (with high bank angle), therefore my choice is to use circular polarization antennas. It's very important to have the same polarization on the transmitter and the receiver, and pay attention that the circular polarization can be \"left or right\" polarization, don't mix them. Long story short: use the same antenna on the transmitter and on the receiver, you won't make mistake.\nVIDEO RECEIVER (VRX): I can't tell you what to use in this tutorial beceause i'd need several pages only to cover the main options. Also, the price range is quite wide and you could easily invest more money just to buy FPV goggles than to buy all the other components of this tutorial. Use an FPV monitor, or FPV goggles, with or without diversity, the choice is your. I'll use cheap FPV goggles, you know, they will sleep in my car therefore nothing expensive. (if you really want a suggestion write a comment)\nFLIGHT CONTROLLER (FC): there are a lot of different models, you can have the full-optional and expensive ones or you can have the basic ones but you would need additional components if you want some advanced features. My choice is the Omnibus F4 Pro V3, that's a good mix of embedded features for a reasonable price. First of all it's an F4 and not an F3 CPU, which is enough for everything so far. It has an embedded OSD chip that can be easily set up directly from the main configurator. It has a 3A 5V BEC, enough to easily power every other device. It has an embedded voltage sensor (common) and current sensor (not so common) . With three physical serial ports you can connect a lot of additional device like GPS, telemetry, serial bus RX input... You can save some bucks buying an SP F3 board or a Pico Blk board, but then you'd need to buy and set up an external OSD module, an external current sensor, the software can't reach the same cycle speed... Not to mention the additional effort to configure external components with their \"external\" software, the additional weight and time requirement for the additional wiring. Also, the external components are not for free so if you don't want to give up some features you shouldn't buy cheaper FC for numbers of reasons.\nYou can buy way more expensive FC, they are undoubtedly better, but they won't give you much more for this kind of project and they usually are bigger and heavier.\nThere's more: the suggested FC can also work with Arduplane! Arduplane is a more mature but more complex firmware, it won't be discussed in this tutorial but it's nice to have also this option for the future. You never can tell...\nGPS: it's required for autonomous flights, we'll use it mostly to have our ass covered, and have a plane that can return to home in case of video/radio signal loss. The most common modules have also an embedded compass but that's for the copters. Since our plane must have at least a certain speed to fly, it's always easy to define its direction just by coordinate subtraction. The best choice is a BN-180 or BN-220 module, i've tested both and they are very similar, except for the fact that the 220 can update the firwmare. What this updated firmware can give to you? I don't know and i don't care about it, it works good enough with the stock one. I have a BS-880 on my mini talon, with integrated compass, but i don't use its compass for the same reason, it's not even wired. Actually, the BS-880 is faster to achieve GPS lock and it can see several satellites even in my basement (i'm not kidding!). It's worth to spend more money for the 880? Meh... Since i'm still unable to fly in my basement and since the 180/220 only needs a little more time to get the GPS lock, i'd go with the BN-180/220 module, wich is smaller and lighter (that's good!).\nEdit: the GPS module i've ordered from China has have arrived faulty (dead), no big deal, they'll send me another one but i have to wait the delivery. Since i don't want to wait i'll use a spare BS-880, but that's not relevant for the setup.", "step_imgs": ["https://cdn.instructables.com/FOS/E6TF/JSUOW19F/FOSE6TFJSUOW19F.LARGE.jpg", "https://cdn.instructables.com/FPE/JRWA/JSUOW19E/FPEJRWAJSUOW19E.LARGE.jpg"], "step_title": "Step 2: Base Components"}, {"step": 3, "steps_text": "The project's premises are already nice, but with these components you can upgrade a good FPV plane into an awesome FPV plane.\n1) I'll do some test with li-ion cells, my plan is to increase the flight time by using a 4S, 2600mAh, 7C, DIY battery. As i've already wrote in some comments on this very site: i don't trust people that claims that they can fly a drone with laptop reclaimed cells. I'll use 20A fully capable brand new cells, wich are usually used in vaping cigarettes, and this is barely \"good enough\" to fly an RC plane. A good laptop battery, even in pristine condition, can't provide more than 4-5A. They can't even manage the takeoff power consumption of a small and efficient plane, that's why i call a complete b.s. the claims that you can lift a quadcopter with them. Anyway, there are plenty of tutorial about DIY 18650 battery, just be sure to purchase cells from a reputable supplier. Edit: the idea is good but 4S is too heavy, you need 3S battery. Read last chapter...\n2) I'll cover every surface with laminating film! It's not a difficult task, it's only a time consuming task... The process to put heat-shrinkable adhesive thin plastic everywhere on the model needs patience, but you'll end with a stronger, more rigid, more efficient and better looking plane. Anyway, i can imagine that only few people would invest 2-3 hours to cover everything. If you don't laminate the whole model you should put a stripe of tape on the leading edge of the wings. That's the most exposed part and is worth to spend few minutes to protect it. If you do laminate invest some money in a proper laminating iron, with such curved and small profiles a standard clothes iron is way too big and heavy, the small details will be a pain in the a.\n3) Since i'll use 4S batteries i have to expect higher speed, higher speed means higher stress on the wings. I've decided to replace the stock glass fiber spar with a carbon fiber spar, wich is more rigid (and lighter, but that's not really relevant). I don't fear that the plane would broke in half in a tight turn, it won't, i just want to make it more rigid. The carbon spar (and the laminated wings!) will significantly increase the plane's rigidity and therefore the plane's handling at high speed and during high G maneuvres.", "step_imgs": ["https://cdn.instructables.com/F63/0FOB/JSUP34V3/F630FOBJSUP34V3.LARGE.jpg", "https://cdn.instructables.com/FIP/6TJ0/JSUOW18S/FIP6TJ0JSUOW18S.LARGE.jpg", "https://cdn.instructables.com/FNG/OWZ2/JSUOW184/FNGOWZ2JSUOW184.LARGE.jpg", "https://cdn.instructables.com/FIN/7G4B/JSUOW1NC/FIN7G4BJSUOW1NC.LARGE.jpg"], "step_title": "Step 3: Optional Components"}, {"step": 4, "steps_text": "Now it's time to glue something. The assembly is quite straightforward, there are no chances to glue something in the wrong place, but you have to use the proper glue. Generic \"super glue\" or cyanoacrilate glues are not recommended, you need a foam specific glue. The UHU POR is ideal, but also other foam glues are ok. One hint: glue the stabilizer fins at the end of the build, you'll have more room to move during the electrical wiring.\nTo glue the servos you could use hot glue, just few drops. I'm worried about the underwing servo linkage, which exposes them to shocks when you land on a not-flat surfaces (like every field), so i'd rather use a not-so-strong glue in case i have to change them. That's the price of better airfoil efficiency (due to the clean upper surface).\nTake care to install the servo arm at 90\u00b0 respect to the servo's case, when the servo's shaft is in the middle of its span. The servo arm should be able to move simmetrically in both direction, starting from 90\u00b0.\nTo mount the motor i've used a custom 3D printed part (thanks Mark), which is better than the stock one because it put the motor further back allowing bigger prop clearance (and slightly heavier batteries). It's ok to have the motor not horizontal when the frame is on the table, it will be leveled during flight.\nThe FC uses four nylon stand off, glued to the bottom of the fuselage. The ideal spot for the FC is exactly the CG, in this case it would be right under the carbon spar and it would be really uncomfortable. I've placed it right before the carbon spar.\nThe GPS, the VTX, the RX and the motor should be placed the as far as possible, especially respect to the motor, in orderto minimize the interference. I don't plan to do long range with this model, so this is not mandatory, and the drawback of installing components at the end of the wings is an increased inertia, which is bad for a short range fun wing. I've found a good compromise that doesn't bother me with a lot of long wiring but still keep the components quite apart.\nSince i've laminated every surface i had to cut slots in the foam for the additional components. That's not mandatory if you didn't laminate the surfaces, but it's still highly recommended because it preserves the awesome plane's aerodynamics. The only component that shouldn't be cover is the VTX because it needs to be cooled by fresh air, i've attached it with strong and thick double side tape.\nIn the photos you can also see a telemetry module, i'll use it to do some tests with a ground station but i don't want to increase the complexity of this tutorial, just ignore it.\nI put the cam in the nose (obviously) and i cut a dedicated slot in the fuselage foam. Please note that if you want the cam pointing straight forward during flight it should be aligned with the motor and not the table.\nI've cut the top fin on the motor cowl, it doesn't do anything except make noise and reduce the air flux on the propeller (Mark's hint, and i totally agree).\nSince i've laminate everything, also the fuselage belly, the air intakes under the fuselage are now sealed. The ESC and the motor have to be cooled so i've cut a small rectangular hole in the red canopy, right over the camera, to have a fresh air inlet. I suggest to do the same belly sealing, even if you don't laminate everything, because the air intakes under the fuselage will likely collect dirt, and if you have dirt inside the canopy it can exit only through the motor, and that's not good. Don't worry, you won't miss the grips to launch the plane, you'll be assisted by the autolaunch and the \"frisbee launch\" will work like a charm.\nThere's more: it's way more aredynamic and you really have to agree with me that its smooth and flat belly looks AWESOME! ^_^\nThe mechanical assembly is done, just paint it as you like and proceed with the wiring.\nPS: spray paint IS HEAVY! Use as many as you need to make your model visibile in the sky but try to avoid a full body paint, and avoid multiple layers.", "step_imgs": ["https://cdn.instructables.com/FYR/D14Q/JSUOW17E/FYRD14QJSUOW17E.LARGE.jpg", "https://cdn.instructables.com/F00/VRKE/JSUOW16G/F00VRKEJSUOW16G.LARGE.jpg", "https://cdn.instructables.com/F13/9EGO/JSUOW16Q/F139EGOJSUOW16Q.LARGE.jpg", "https://cdn.instructables.com/FSL/UHFT/JSUOW16J/FSLUHFTJSUOW16J.LARGE.jpg"], "step_title": "Step 4: Frame Assembly"}, {"step": 5, "steps_text": "You'll need some tools, my basic DIY electronic kit is collected here.\nFirst of all, sooner or later the FC must be calibrated, and it's easier to do that moving the PCB instead of moving the whole fuselage. So, if the FC is not calibrated yet, jump to the next step (software), calibrate the FC and come back.\nNow heat up your soldering iron and use a drop of tin to bridge two pads under the FC, look at the photo. You have to connect the pad \"RAM\" with the pad \"VCC\", this will provide battery (unregulated) voltage to the VTX and the CAM. If you don't use my suggested components be sure that yours can accept 3-4S lipo voltage. In case they work with 5V, bridge the RAM pad with the 5V pad instead.\nThe other components have to be connected as shown in the attached wiring diagram. It's not difficult, just do one step at time and double check polarity and the welding quality. The most annoyng thing is to split 5V and GND cables (to provide power to bot the GPS and the RX), and to solder the negative/black wires of both the esc and the battery connector to the same GND pad (big and squared under the FC). This could be somehow difficult, use abundant soldering flux and set the iron on max power.\nHint: if you feel confident with the soldering iron you should remove the connectors in most of the cables and proceed soldering every wire right in place. I've done this for pretty much everything (except for the servos, i still want to being able to change them quickly) because of two reasons. One, you'll save few grams here and there. Two, a connector might get loose while its appearance is still ok, and you really don't want hidden issues in an rc plane. Try to keep the wires just as long as needed, it will also help with the weight reduction and the cable management.\nBe careful and double check all connections, a crash could be fixed with some glue, a smoked component has usually to be trashed. Don't use a lipo to power it up the first time! You should use a power supply that can't provide a lot of amps, i've used a 12V 1A power supply (you can see the connector adapter in one of the previous step photos). Another good choice is the portable variable power supply that i've described here.", "step_imgs": ["https://cdn.instructables.com/FMX/LHZC/JSUOW16N/FMXLHZCJSUOW16N.LARGE.jpg", "https://cdn.instructables.com/FVX/S9ZU/JSUOW16H/FVXS9ZUJSUOW16H.LARGE.jpg", "https://cdn.instructables.com/FWO/PY96/JSUOW15O/FWOPY96JSUOW15O.LARGE.jpg"], "step_title": "Step 5: Electrical Wiring"}, {"step": 6, "steps_text": "Ok, the first FC setup could be overwhelming because of the huge number of new information but, with a little patience and doing one little step at time we will eventually complete the task.\nFirst step: download and install the firmware (INav) configurator. I have Win 10, try to use the same OS to minimize the chances to get stuck somewhere. I'm using version 2.1.4, if you find something strange and you are using a subsequent version just revert back and install this specific version.\nNow the worst part: the driver's installation. Sometimes is just a matter of plug the USB and let the OS do the trick, other times you need to use colorful words and a lot of profanity. The best Win10 strategy is to use this free software: Impulse RC driver fixer. Plug in the USB, run it as administrator and finger crossed.\nIf you open the INav configurator and in the top right field (look at the images, the \"driver\" rectangle) you see a new COM port, and you can connect to it, you are fine. Maybe the configurator software will tell you that your firmware version is not compatible but that's still good, we'll update the firmware anyway.\nNow, unplug the USB, press the \"boot\" button on the FC (is near the buzzer) and keep it pressed while you re-plug the usb in. Now in the field \"driver\" you should show \"DFU\". If you don't see DFU try to run again the driver fixer. If you don't see \"DFU\" but can connect to the COM port, you can go to the CLI tab (read further), type \"dfu\" in the input bar and then press enter. The FC should reboot in DFU mode.\nWithout this DFU option in the upper right corner you can't proceed, you have to find a solution before trying to proceed further. I can't write a tutorial about all the possible driver issues on every OS, you have to google that by yourself.\nWhen you see DFU, happy days, the worst part is already done! Proceed by following the numbers:\nclick button Nr 1 to open the right tab,\nselect the right option in the drop down men\u00f9: \"choose a board\" -> \"OMNIBUS F4 PRO\", \"choose a Firmware version\" -> \"2.0.1 - OMNIBUSF4PRO ...\"\nclick button Nr 4 and wait, you need internet connection because it will download the chosed firmware,\nclick button Nr 5 and you should see, after few messages, the message \"firmware flashed\".\nNow the FC should reboot, and instead of DFU you should see a COM port again, if it doesn't appear unplug the USB and retry. Click \"Connect\" and you should go online on the FC.\nNow you have to calibrate the accelerometers, go on the tab \"Calibration\" and follow the procedure. It's really easy, you have to hold the FC in 6 different angles and press the calibrate button. Now the board is calibrated and you can go back to take care of the wiring.\nNow it's time to set up the new firmware, there's a huge number of parameters and it's impossible to explain everything in a single tutorial. The firmware developers explain (more or less) everything in their wiki, but for this project we'll exploit the CLI (command line interface). Don't worry, it's nothing more than a copy&paste task, and it's way easier to have the job done this way than following a to-do list made by dozens steps distributed on several pages.\nYou can donwload the full configuration file here, scroll down to the end of the page or search for \"CLI OMNIBUS F4 PRO INAV 2.0.1\", it's config file dowload link.\nThe file can be used as it is. You might want to change only one parameter, the airplane name, which is shown also in the OSD. Go to line 840 or search the string \"set name\", the current value is \"Z-84 UBHF.EU\", you can use whatever you want, just modify the string (don't use special characters).\nNow select everything in the txt (ctrl+a on most text editor) and then copy it (ctrl+c).\nOpen the CLI tab in the INav configurator (look at the screenshot) and click on the input field (were it's written \"save\" in the image) and just paste (ctrl+p) the text, now press \"enter\" and it's done. The last string should be \"save\" and when you click enter the values will be stored in the FC, and the board itself will reboot (and disconnect).\nNow you only have to check that everything was done properly, reconnect to the FC, go to the \"receiver\" tab and check that the different channels behave as supposed (bind the receiver! just press the right button, plenty of tutorial online). The GPS tab might not show a GPS lock if you are inside a building, but at least it must not show errors. The OSD tab should look like the one in the last step video, but feel free to modify the configuration in the OSD page (by drag and drop). Modify the layout as you wish, it's not critical for the flight. If you want to change the switch assignment on your transmitter use the \"modes\" tab.\nThe default behavior is:\n- switch A (CH5) -> arm the plane\n- switch B (CH6) -> force manual mode\n- switch C (CH7) -> altitude hold mode / horizon mode / RTH mode\n- switch D (CH8) -> failsafe killswitch\n- var A (CH9) -> up = autotrim, left = autotune\n- var B (CH10) -> down = buzzer and failsafe\nThe autolaunch is always active so you only have to arm the plane, increase the throttle, and launch it. If you want to disable the assisted launch you only have to arm the plane and move the roll or pitch stick.\nThat's all, now you have a nice plane to have fun with!", "step_imgs": ["https://cdn.instructables.com/FC2/3TAT/JSUP3K1G/FC23TATJSUP3K1G.LARGE.jpg", "https://cdn.instructables.com/FG7/PY4O/JSUP3K24/FG7PY4OJSUP3K24.LARGE.jpg", "https://cdn.instructables.com/FKS/V1V9/JSUP3K2H/FKSV1V9JSUP3K2H.LARGE.jpg"], "step_title": "Step 6: Software Setup"}, {"step": 7, "steps_text": "Well, i've underestimated the li-ion weight. The 4S 18650 battery weights too much and i'd need to place it over the FC to have the right CG (which is impossible). Actually it's the 4th cell that gives extra weight issue, a 3S battery would be perfect. Unuckily i don't have spare 18650 cells at hand to build a 3S battery and this 4S battery is also used with other models and i don't want to unmount it. Another option, you could add 40-50g at the wing tips (which are behind the CG) to balance the cell's wheight. Now the issue is that you've also increased the roll intertia by a lot (not to mention the relevant ballast weight) and that's not desiderable in a fun wing. It's simply not worth it, it will cripple any positive effect that li-ion would give.\nBeside that i'm very happy with this model, in the video you can see the maiden flight recorded from the DVR. I wrote some hints, you should follow what i wrote and not what i actually did (yeah, it ended well but it was quite overconfident and not the safest approach to a maiden flight).\nThe plane behaves very well at both low and full throttle. When the current sensor will be properly calibrated i'll try different propellers at high speed (they'll behave differently at high speeds respect to the bench test). So far the motor/esc/propeller combo seems to be ok. The plane doesn't suffer gusts that much (it's a light plane and there were gusts!) and it remains stable and precise. Max speed achieved so far is over 100Km/h but the plane can also glide quite well, it doesn't fear tip stall and the it reacts well even if stressed with some rough maneuvre (tight turn, wing over, loop...). It's not a proper trainer plane but it doesn't require a lot of skill to be flown peacefully.\nThe GC should be exactly on the forward edge of the carbon spar. With a spot on CG the flight characteristics are amazing, if the CG is 5mm far from the best point then meh... I don't like it that much. Anyway, 5mm is quite a lot, and in any case remember that a plane with a forward CG flies badly, a plane with a backward CG flies once.\nPower: 20A @ 3S are ok, you can't do an unlimited vertical flight but you have enough power for acrobatic maneuvers. 12A @ 3S would be ok for relaxed flight, 30A or 4S should be reserved for skilled pilot and rigid models (carbon spar and lamniated).\nI have to agree with other reviews, it's a really nice airplane kit that can be adapted to a lot of different tastes, it can be easily set up to fly at more than 130Km/h, or it can be a slope soarer, or it can be an extremely efficient long range platform (it's excellent).\nDon't be as dumb as me: don't attach the HD camera on the canopy! OBVIOUSLY its plastic clip can't retain it in place during acro manouvres, it should have been cristal clear. Use a velcro or something else but attach it to the fuselage. Sorry, no HD video footage. :|\nI don't have anything else to say except that i'm thinkig about a Z-84 Mark-II, I'd like to add the only feature that i miss on this plane: the capability of detach wings to be carried in a backpack (like my zohd dart).\nHave fun!", "step_imgs": [], "step_title": "Step 7: MAIDEN FLIGHT & UPDATES:"}], "channel": "Remote Control"}, {"category": "Technology", "description": "I wanted to share the world of astronomy / astrophotography with the blind and those that see poorly. This project will do that in a simple fashion with few supplies and cheaply.", "title": "Braille Astronomy", "url": "https://www.instructables.com/id/Braille-Astronomy/", "steps": [{"step": 1, "steps_text": "You don\u2019t need many supplies.\n\n1) Some black foam core board big enough for your final design. I believe I got mine at Walmart, but many craft stores have it as well.\n2) Paint. I used Windsor & Newton acrylic white paint. I don\u2019t think it has to be that brand, but thicker paint such as acrylic will do well.\n3) Paint applicator. I used a quarter inch (approx. 6mm) diameter plastic dowel from a mandala tool kit, but I bet a carefully cut/ sanded wooden dowel rod would do just fine.\n4) Embossing tool. I used this to make depressed lines between stars. Not sure what you could substitute. I believe you can get them at Hobby Lobby or Michaels. Mine had about an eighth of an inch ball at the end (about 3mm).\n5) Office supplies: hopefully on hand; pencil, paper, tape.", "step_imgs": [], "step_title": "Step 1: Gather Supplies"}, {"step": 2, "steps_text": "If you have a friend or nearby astronomy club, you can get them to take the base picture you want. But with an SLR and a tripod, you can shoot your own. See other instructables for the steps.", "step_imgs": ["https://cdn.instructables.com/FHB/2GDS/JT4TRPMC/FHB2GDSJT4TRPMC.LARGE.jpg"], "step_title": "Step 2: Take an Astrophoto"}, {"step": 3, "steps_text": "Use an app or Photoshop to make the black white and the white black. This might be optional, but I found it very useful to simplify the process. I used PictoScanner for iPhone (free). Crop the image to the constelllation you want. I started with Orion. Note that I had to take a picture of my monitor when I used PictoScanner. Once you like the framing, print it off. Leave a little room at the top for a flap to attach.", "step_imgs": ["https://cdn.instructables.com/FW2/ITMS/JSUOY26B/FW2ITMSJSUOY26B.LARGE.jpg"], "step_title": "Step 3: Reverse the Image"}, {"step": 4, "steps_text": "Simply crease the printout paper at the top, so that you can hang it on the foam core and tape it to the back. I pressed the tape against my palm a few times first to remove some of the stickiness. This allows easier removal, but is optional.", "step_imgs": ["https://cdn.instructables.com/FF1/68D9/JT4TRPPL/FF168D9JT4TRPPL.LARGE.jpg"], "step_title": "Step 4: Attach Reverse Image"}, {"step": 5, "steps_text": "Pick and choose the stars you want to use. This is a case of less is more, so be careful to not overdo it. Flip the paper up and down as you mark star by star with a pencil (don\u2019t dig in, just enough so you know where it is).", "step_imgs": ["https://cdn.instructables.com/FEY/1JBZ/JSUOY0EN/FEY1JBZJSUOY0EN.LARGE.jpg", "https://cdn.instructables.com/FM2/UTIQ/JT4TRPWX/FM2UTIQJT4TRPWX.LARGE.jpg"], "step_title": "Step 5: Make Pencil Marks for the Stars"}, {"step": 6, "steps_text": "Use the embossing tool and a ruler to connect the star marks. Again, less is more, you can crack the foam core board if you are not careful (like I did in the picture). It might be a good idea to practice on scrap.", "step_imgs": ["https://cdn.instructables.com/FNO/UHO3/JT4TRPRW/FNOUHO3JT4TRPRW.LARGE.jpg"], "step_title": "Step 6: Connect the Stars"}, {"step": 7, "steps_text": "Take the dowel and dab paint on the stars you marked. Try to keep the dowel perpendicular. Let it dry. I waited overnight before painting again. Repeat the process at least a couple times for each star. I did a regular star with a few small stars to illustrate a nebulae.", "step_imgs": ["https://cdn.instructables.com/FAS/O7I9/JT4TRPSW/FASO7I9JT4TRPSW.LARGE.jpg", "https://cdn.instructables.com/FUQ/QTJN/JT4TRPW2/FUQQTJNJT4TRPW2.LARGE.jpg"], "step_title": "Step 7: Paint the Stars"}, {"step": 8, "steps_text": "I signed my \u201cart\u201d in the corner..this turned out to be useful for another reason; it gives orientation to the work.\n\nI boxed it up in a box that could be reopened so that it didn\u2019t get damaged going back and forth. You are now ready to share the sky with a vision impaired friend. Enjoy!", "step_imgs": ["https://cdn.instructables.com/FK6/X86X/JT4TRPUA/FK6X86XJT4TRPUA.LARGE.jpg"], "step_title": "Step 8: Finish Up and Box It."}], "channel": "Assistive Tech"}, {"category": "Technology", "description": "Are you the kind of person who\u2019s not good with managing keys and always have to try each key for every other lock?\nWell don\u2019t worry, just grab a little bit of motivation and your maker tools to innovate your very own voice controlled smart key holder. Because there\u2019s no problem too small or big that cannot be solved and there\u2019s no maker that cannot solve it.\nAll you have to do is, just ask your smartphone about the lock you want to open. Your phone will then communicate with smart key holder and corresponding LED will light up to indicate about the exact key that belongs to that particular lock.\nThis smart key holder can also be used in banks, hospitals, libraries, administration offices etc.", "title": "Voice Controlled Smart Key Holder", "url": "https://www.instructables.com/id/Voice-Controlled-Smart-Key-Holder/", "steps": [{"step": 1, "steps_text": "1. Arduino Uno/Nano\n2. USB 2.0 Cable Type A/B(for UNO) and Cable/USB 2.0 A to USB 2.0 Mini B(for nano)\n3. HC05 bluetooth module\n4. LEDs(3)\n5. 3 resistors of value 100 ohms\n6. 9v battery and its connector\n7. Breadboard/General Purpose Zero PCB Printed Circuit Board\n8. Jumper wires\nApart from all these, you'l also need soldering iron, soldering wire and glue gun.\nThat's pretty much everything.", "step_imgs": ["https://cdn.instructables.com/FZC/LIMM/JT4TRNQD/FZCLIMMJT4TRNQD.LARGE.jpg", "https://cdn.instructables.com/FKX/PFMD/JT4TRODN/FKXPFMDJT4TRODN.LARGE.jpg", "https://cdn.instructables.com/FS7/WT0Y/JT4TROFI/FS7WT0YJT4TROFI.LARGE.jpg", "https://cdn.instructables.com/FJG/X9S3/JT4TRNZV/FJGX9S3JT4TRNZV.LARGE.jpg", "https://cdn.instructables.com/FFQ/EHRN/JT4TRO6Y/FFQEHRNJT4TRO6Y.LARGE.jpg", "https://cdn.instructables.com/FO3/7H47/JT4TRO7W/FO37H47JT4TRO7W.LARGE.jpg"], "step_title": "Step 1: Components Required:"}, {"step": 2, "steps_text": "I started by creating a base/socket for Arduino Uno on zero board as shown in the first picture so that we can easily remove or attach the board according to our requirement. Then I connected HC05 bluetooth module to arduino.\n1. Connect Rx pin of bluetooth module to Tx pin of arduino\n2. Connect Tx pin of bluetooth module to Rx pin of arduino\n3. Connect Vcc of module to +5v of board\n4. Lastly connect GND of module to GND OF Uno board\nNext step is to make LED connections. Longer leg of LED is positive terminal and other one is negative terminal. Solder +ve terminal of LED to any one side of resistor and connect other side to digital pin 11 of arduino. Similarly connect the positive terminals of other two LEDs to resistors and other side of resistors to pin 12 and 13 respectively. Connect the negative terminals of all LEDs to GND pin.\nThat's it! We're done with the hardware it.!", "step_imgs": ["https://cdn.instructables.com/FJC/S8GJ/JT4TROKM/FJCS8GJJT4TROKM.LARGE.jpg", "https://cdn.instructables.com/FL6/6CMP/JT4TROKN/FL66CMPJT4TROKN.LARGE.jpg", "https://cdn.instructables.com/FS3/GJHD/JT4TROKQ/FS3GJHDJT4TROKQ.LARGE.jpg", "https://cdn.instructables.com/FZS/X83F/JT4TROKT/FZSX83FJT4TROKT.LARGE.jpg", "https://cdn.instructables.com/FR8/XRZ7/JT4TROLI/FR8XRZ7JT4TROLI.LARGE.jpg", "https://cdn.instructables.com/F5W/Y15B/JT4TROLJ/F5WY15BJT4TROLJ.LARGE.jpg"], "step_title": "Step 2: Hardware Connections"}, {"step": 3, "steps_text": "Download the app \u201cArduino Bluetooth Controller\u201d\nFrom available devices choose HC05. In order to connect your phone to bluetooth module for the first time, you need to enter either 0000 or 1234 as passkey.\nLast step is to upload the given code on arduino and our work is done.\nEnjoy\u2026.!", "step_imgs": ["https://cdn.instructables.com/F25/EGU4/JT4TROTZ/F25EGU4JT4TROTZ.LARGE.jpg"], "step_title": "Step 3: Upload the Code"}], "channel": "Arduino"}, {"category": "Technology", "description": "I'm an undergrad researcher in material science and nanomaterials. For years I've wanted a simple science experiment that a child could do with parental or adult supervision for nanoscience outreach. I'm tired of simple baking soda volcanoes. You are better than that.... So lets make nanomaterials in the kitchen! Today, you're gonna make the tiniest Instructable ever.\nSpecifically, we are making Carbon Quantum Dots. Quantum dots are nanometer scale particles, typically of semiconductor. They are so small that when high energy light hits them, the photons will be absorbed then emitted at a lower energy state. QD's are usually made from toxic chemicals but today I'll show you how to make non-toxic quantum dots in your home. Also, they can be used as fluorescent dyes, inks, and possibly paints. I will probably be making things glow around my apartment in the coming days.\nThe original paper at the bottom used baking soda and fructose over the course of an hour. I modified it to use sucrose and take 10 minutes.\nDisclaimer: This is as dangerous as making candy. This is simply cooking, be safe and use common sense, molten sugar is the worst thing to burn yourself with.\nEquipment Needed\nMicrowave\nTempored Glass bowl(I prefer Borosilicate but we aren't rapidly changing temperatures)\nHeat resistant gloves(perhaps with silicone for grip)\nA few containers for you samples\nPlastic Pipettes\nGlass vials to store\nUV or Blacklight\nSupplies\nWater(I used tap water)\nBaking soda(Sodium Bicarbonate)\nCane sugar(Sucrose)\nWhite Vinegar(Acetic Acid)", "title": "DIY Quantum Dots(Nanotech in Your Kitchen)", "url": "https://www.instructables.com/id/DIY-Quantum-DotsNanotech-in-Your-Kitchen/", "steps": [{"step": 1, "steps_text": "Add to the glass bowl\n1 cup of water\n1/4th cup of vinegar\n6 tablespoons of sugar(80 grams)\nMicrowave for 5 minutes\nThe sucrose must be broken down in a process called inversion, the sucrose is broken into fructose and glucose. Sucrose inversion is heavily used candy making because it makes the sugar less grainy in sweets. The acid decreases the time needed to do this from hours to minutes, especially with the application of heat.", "step_imgs": ["https://cdn.instructables.com/F2E/MURX/JSYZ7UP8/F2EMURXJSYZ7UP8.LARGE.jpg", "https://cdn.instructables.com/FX0/U8KO/JSYZ98NS/FX0U8KOJSYZ98NS.LARGE.jpg"], "step_title": "Step 1: Prep the Saccharide"}, {"step": 2, "steps_text": "Allow the bowl to cool to be safely handled\nSlowly add 20 grams of baking soda to the solution.(See video to see what happens when you do it all at once.)\nThe solution must be basic for the synthesis to occur so we add enough baking soda to neutralize the acid and make raise the pH.", "step_imgs": ["https://cdn.instructables.com/FIP/N4QB/JSYZ99AH/FIPN4QBJSYZ99AH.LARGE.jpg", "https://cdn.instructables.com/F6P/88AR/JSYZ99EB/F6P88ARJSYZ99EB.LARGE.jpg", "https://cdn.instructables.com/FPE/MIIE/JSYZ7UNF/FPEMIIEJSYZ7UNF.LARGE.jpg"], "step_title": "Step 2: Neutralize the Acid"}, {"step": 3, "steps_text": "Microwave the basic solution for 5 minutes. The liquid will yellow then darken.\nAs the concentration of QD's increase, the liquid will get darker and darker. I was able to get formation within 3 minutes but I wanted to minimize any chance of failure for anyone reproducing this experiment.", "step_imgs": ["https://cdn.instructables.com/F6B/1P71/JSYZ99IS/F6B1P71JSYZ99IS.LARGE.jpg"], "step_title": "Step 3: Synthesize the Quantum Dots"}, {"step": 4, "steps_text": "Allow the bowl to cool then pipette small amounts to a half filled vial of water. The Quantum Dots/sugar mixture will disburse and glow Green when exposed to an ultraviolet light.\nIf the QD's are too concentrated then they wont glow as well, you have most likely made several cups or a liters worth of Quantum Dots in 10 minutes, Congratulations.", "step_imgs": ["https://cdn.instructables.com/FI4/1APR/JSYZ9BLM/FI41APRJSYZ9BLM.LARGE.jpg", "https://cdn.instructables.com/FDW/C8YW/JSYZ9A1D/FDWC8YWJSYZ9A1D.LARGE.jpg", "https://cdn.instructables.com/FR1/TGU7/JSYZ9BLK/FR1TGU7JSYZ9BLK.LARGE.jpg"], "step_title": "Step 4: Dilute the Quantum Dots"}, {"step": 5, "steps_text": "This project was originally much more difficult but made an additional color. It originally took significantly longer to make the QDs.\nPhoto 1:I Took a sample at 1 minute, 20 minutes, 30 minutes, 40 minutes, and an hour.\nThe sucrose(a disaccharide) is not as easily converted to Quantum Dots as simple sugars(monosaccharides). I spent an hour and a half to get QD's just using baking soda. The sucrose would only decompose to Glucose and Fructose at high temperatures for extended periods of time. When simple sugars are in a basic solution, they can form the quantum dots. So using the acid and heat, I made lots of free fructose and glucose, but then I had to make the solution basic again.\nSo we added baking soda to neutralize the acid, but that isn't enough, when acetic acid and baking soda mix, they form sodium acetate which acts as a weakly acidic buffer solution. So i added plenty of sodium bicarbonate to the instructions to overcome the sodium acetate's buffering properties.\nAll in all, it was a fascinating challenge and I hope I've satisfied everyone's curiosity today.\nAdditional Reading and references\nhttps://pubs.rsc.org/en/content/articlelanding/201...\nhttps://www.tandfonline.com/doi/full/10.1080/21691...\nFascinating paper using Smartphones and carbon dots. https://www.nature.com/articles/s41598-017-11572-8\nNitrogen doping CQD's. https://www.nature.com/articles/srep05294\nhttps://www.hindawi.com/journals/jnm/2015/787862/", "step_imgs": ["https://cdn.instructables.com/FFP/84F4/JSYZ9A6H/FFP84F4JSYZ9A6H.LARGE.jpg"], "step_title": "Step 5: Discussion"}], "channel": "Science"}, {"category": "Technology", "description": "Isn\u2019t it nice when you can hit two birds with one stone?\nThat\u2019s exactly what we\u2019ve done as we approach both Arduino Day and Saint Patrick\u2019s Day with our version of the Chug-O-Meter!\nWe absolutely loved what the circuit.io team did with their Chug Meter but thought that we could add more to its survivability while surrounded by inebriated merrymakers. To do this we changed the force sensor to regular switches, created a 3D printed abs enclosure, and then placed the electronics inside the enclosure to keep them away from accidental spills and splashes.", "title": "The Chug-O-Meter", "url": "https://www.instructables.com/id/The-Chug-O-Meter/", "steps": [{"step": 1, "steps_text": "Parts\nIt can be awesome working at an electronics company when you want to design and build a project. For the Chug-O-Meter, we dived into our stock and found several components that will fit the build.\n\u00b7 1x DC-DC Boost Converter Power Supply Module (40408)\n\u00b7 1x CR2032 Coil Cell Holder (50484)\n\u00b7 1x CR2032 Lithium Battery (BattC2032)\n\u00b7 1x Power Switch (SWT1A)\n\u00b7 3x Snap Lever Switch (SWT9)\n\u00b7 1x 7-Segment Serial Display (50424)\n\u00b7 6x #2-56 1/2\u201d Thread Forming Screw (Not carried as Solarbotics)\n\u00b7 2x M3 x 10mm Machine Screw (M3x10-PPH)\n\u00b7 1x Roll of your favorite 3D Printer Filament. We used eSun ABS+ White (60801)\n\u00b7 1x 10k Resistor (R10k)\n\u00b7 1x 0.1uF Capacitor (CP0.1uF)\n\u00b7 2x colors of Groovy Noodle Wire (15060)\n\u00b7 1x double sided tape or hot glue\nTools\nOne thing you may have noticed in the parts list is that we haven\u2019t included an Arduino! Weird, huh? Well that\u2019s because of SparkFun's 7-Segment Serial Display is actually an Arduino in and of itself! Because of this, we\u2019ve overwritten the code used to control the display with regular Arduino code that will control the Chug-O-Meter instead. To do this though, we will need a serial programmer and interface header to do the job.\n\u00b7 1x TTLyFTDI USB-to-TTL Adapter (39240)\n\u00b7 1x Male Strip pins 6 pos (MPin6RA)\nNote: During the build process, do not solder the Male Strip Pins to the 7-Segment display as there isn\u2019t enough clearance in the enclosure to allow for it when inserting the display!", "step_imgs": ["https://cdn.instructables.com/F5T/5ND4/JT4TPZWP/F5T5ND4JT4TPZWP.LARGE.jpg", "https://cdn.instructables.com/F0G/R0ER/JT4TPZXE/F0GR0ERJT4TPZXE.LARGE.jpg", "https://cdn.instructables.com/FNR/MAIY/JT4TPZWO/FNRMAIYJT4TPZWO.LARGE.jpg"], "step_title": "Step 1: Gathering the Parts"}, {"step": 2, "steps_text": "To start, we are going to solder together the circuit as shown in the image above. This will allow us to power the circuit, turn it off and on, it senses when a drink is placed or removed, and then display the time on the 7-segment display.", "step_imgs": ["https://cdn.instructables.com/FOL/91N0/JT4TPZWQ/FOL91N0JT4TPZWQ.LARGE.jpg"], "step_title": "Step 2: Starting the Build"}, {"step": 3, "steps_text": "Now that we have the circuit together, it\u2019s time to add the\ncode to the display. The picture above depicts how the header is inserted into the 7-segment display, and instead of soldering, we use the tried and true method of \u201cadd some force to hold it in place while you program\u201d! However, before we can program our device, we need to do a few simple things to the Arduino environment to make it 7-segment ready.\n1. Download and install the latest version of the Arduino IDE (Arduino IDE)\n2. Open Arduino and navigate to File > Preferences and then add the following line to the \u201cAdditional Board Manager URLs:\u201d (if you already have the text here, just add a \u201c,\u201d to the end of the existing text and then paste the following line after it)\nhttps://raw.githubusercontent.com/sparkfun/Arduino_Boards/master/IDE_Board_Manager/package_sparkfun_index.json\n3. Press the okay button for the preferences menu and then navigate to Tools > Board: > Boards Manager\u2026\n4. In the \u201cfilter your search\u2026\u201d bar, type \u201cSparkfun avr\u201d\n4. Click the install button from the image above, making sure that you install the most recent version which in our case was 1.1.12.\nWith the proper board now installed, programming the SparkFun 7-segment is only a few simple steps!\n1. Copy the code into a new Arduino project or download our zip file for the project and extract and open the\n.ino file.\n2. Next Select the appropriate board by going Tools > Boards: >Sparkfun Serial 7-Segment Display\n3. Select the Port that the FTDI programmer is connected to by going Tools > Port > COM X\n4. Finally, while holding the FTDI programmer to the pins on the 7-segment display, press the upload button to program the display with the Chug-O-Meter code.\nFixing the Whoopsie\nDuring the build process of this project, we realized too late that the analog pin that the buttons used to sense the addition/removal of a drink does not have an internal pull-up resistor or debouncing capacitor. To fix this issue, we went ahead and added one ourselves to fix this issue, we recommend that you do the same!", "step_imgs": ["https://cdn.instructables.com/FW4/AJR2/JT4TPZZY/FW4AJR2JT4TPZZY.LARGE.jpg", "https://cdn.instructables.com/FLP/FTZN/JT4TQ01S/FLPFTZNJT4TQ01S.LARGE.jpg", "https://cdn.instructables.com/FNJ/4QHC/JT4TQ787/FNJ4QHCJT4TQ787.LARGE.jpg", "https://cdn.instructables.com/FNO/LRTF/JT4TQPMX/FNOLRTFJT4TQPMX.LARGE.jpg", "https://cdn.instructables.com/FAX/HO7X/JT4TQSEV/FAXHO7XJT4TQSEV.LARGE.jpg"], "step_title": "Step 3: Programming the Display"}, {"step": 4, "steps_text": "Now that the display has been programmed and the circuit is complete, it\u2019s time to add the electronics to the enclosure.\n1. Double-sided tape or hot glue the electronics as shown so that none of them extend past the top of the enclosure. This will keep them in place and stop any collisions with the sensing switches and plate\n2. Screw in the switches as shown using the #2-56 thread forming screws. If you don\u2019t have these, you can also use hot glue, but they won\u2019t be near as robust.\n3. Insert the display into the cavity of the display holder and use gravity to wiggle it into dropping into place so that the display is flush with the outside of the enclosure. Since we were kind of running out of time for elegant solutions, we used some ESD-Safe foam to hold it in place, but you could also use paper or anything else that is non-metallic.\n4. Finally, use the #4-40 screws to mount the display holder onto the enclosure. You can now flick the switch to turn on the circuit and add the sensing plate to cover everything up!", "step_imgs": ["https://cdn.instructables.com/F60/YDVP/JT4TPZWR/F60YDVPJT4TPZWR.LARGE.jpg", "https://cdn.instructables.com/FOP/FFI1/JT4TQ71P/FOPFFI1JT4TQ71P.LARGE.jpg", "https://cdn.instructables.com/FU3/58VS/JT4TQ734/FU358VSJT4TQ734.LARGE.jpg", "https://cdn.instructables.com/FLK/ZFRE/JT4TQ77D/FLKZFREJT4TQ77D.LARGE.jpg"], "step_title": "Step 4: Finishing the Build"}, {"step": 5, "steps_text": "The Chug-O-Meter has been programmed to make operation a breeze! Turn it on, place down a full glass of whatever liquid you prefer, remove the glass to start the count and start chugging! Once you\u2019ve finished, place the empty glass on the sensing plate to stop the timer. To reset the device, remove the empty cup and place a fresh, full cup onto the plate. happy chugging!\nIf you like building our kit, send us a photo of your build via email at media@solarbotics.com and we'll feature it!\n\nFor other updates and guides, go to Solarbotics and be sure to follow us on Facebook and Instagram.", "step_imgs": [], "step_title": "Step 5: Using the Chug-O-Meter"}], "channel": "Arduino"}, {"category": "Technology", "description": "Revolution per minute, briefly is a speed of rotation expressed in revolutions minute. the tools for measuring RPM usually use tachometer. Last year ago i found interesting project made by electro18, and it is my inspiration instructable, he was made \"Measure RPM - Optical Tachometer\" link is below\nhttps://www.instructables.com/id/Measure-RPM-DIY-P...\nthis project is very inspiring and i thought i will remix and fit specifically to measure mini motor dc.\nMini 4WD hobbies measure RPM is a routine activity to prepare machine before attach into the car. So this will become important tools that always carry and can be use anywhere needed, so lets we make our rpm checker", "title": "RPM Checker for Mini Motor Dc", "url": "https://www.instructables.com/id/RPM-Checker-for-Mini-Motor-Dc/", "steps": [{"step": 1, "steps_text": "This tools works very simple, rim rotated by the motor then sensor read revolution of white point get from that rim. Signal from sensor send to micro control calculated and displayed the rpm result, that's all. But how to get all things is done , lets we begin into the steps", "step_imgs": ["https://cdn.instructables.com/F3C/FN2N/JT4TM58B/F3CFN2NJT4TM58B.LARGE.jpg"], "step_title": "Step 1: How Its Works"}, {"step": 2, "steps_text": "There is variation method to measure RPM\n1. By Sound :\nThere is some nice instructuble how to measure Rpm of using free audio editing software https://www.instructables.com/id/How-to-Measure-RP... , the works is to capture sound frequency, analyze and crop repeatable rhythmic and calculate for get per minute.\n2. By Magnetic\nThere is some nice Instructable source about how to measure Rpm by magnetic field\nhttps://www.instructables.com/id/RPM-Measurement-U... the works is to capture pulse and converting into revolution every time magnetic sensor facing a magnet. some of use Hall Sensor and neodymium magnet\n3. By Optical\nAgain there is much of source of how to measure Rpm by use optical https://www.instructables.com/id/Simple-Motor-Spe...\nhttps://www.instructables.com/id/Measure-RPM-DIY-Portable-Digital-Tachometer/\nThis method that i choose for develop the device, because is no need silent environment during measuring.", "step_imgs": [], "step_title": "Step 2: Measurement Method"}, {"step": 3, "steps_text": "Optical Read\nOptical read is use reflected radiation of infrared beam to the object and received by infrared photodiode, the object with color white or light color more easy to reflect than black color or dark color. I choose to use TCRT 5000 from Vishay is already packed with plastic case and it small\nConverting Signal\nThis IR sensor can become analog sensor or digital sensor, Analog meaning have a range value (example from 0-100) is more fit to detect the distance. For this case we need to get digital signal, meaning only (1 or 0) on or off is fit to get counting value. To convert from analog into digital i use IC LM358, basically this is Amplifier IC but This IC can become voltage comparator when range of target Input can be set by trimpot resitor then after this IC give one output (On or OFF)\nCalculation RPM Formula\nAfter triggering input from High to Low, then data calculate with time and revolution\n1 rpm = 2\u03c0/60 rad/s.\nSignal from IR attaches an interrupt 0 ,into pin digital input 2 on arduino, whenever the sensor goes from LOW to HIGH , RPM is counted. then the function will be called twice increment (REV). To calculate the actual RPM, we need the time taken for one revolution. And (millis() - time)is the time taken for one full revolutions. In this case , let it be the time taken for one full revolution , so the total number of revolutions RPM in 60sec ( 60*1000 millisecond ) is : rpm = 60*1000 / t * actualREV => rpm = 60*1000 / (millis() - time ) * REV/2\nthe formula is got from this link https://www.instructables.com/id/Measure-RPM-DIY-P...\nDisplay\nAfter measurement from arduino is need to visualize, i choose oled 0,91\" style its looks like more modern and its small. For the arduino i use adafruit library ssd1306 its work really charm. There is some tricky i use to prevent flickering during reading interrupt signal is using separate millis timer, one for sensor and one for showing the text. https://www.baldengineer.com/blink-without-delay-explained.html", "step_imgs": ["https://cdn.instructables.com/F3C/C9T9/JSYZ8JBH/F3CC9T9JSYZ8JBH.LARGE.jpg", "https://cdn.instructables.com/FNY/WI0A/JSYZ8JBI/FNYWI0AJSYZ8JBI.LARGE.jpg"], "step_title": "Step 3: Electronics and Programming Method"}, {"step": 4, "steps_text": "Schematic is really simple, but i made PCB to looks more neat and compact, During make pcb layout need work together with enclosure design. so printed into paper and make model from cardboard to get the feel of size. From the top view Oled Display looks like overlap with arduino nano, in fact position of oled display is higher than arduino nano.\nOne Red LED need to pilot that the sonsor is reading , so i put that little red LED in the bottom of trimpot is double function in one hole .\nBelow the list of part\n1. TCRT 5000 IR sensor\n2. Trimpot 10 K\n3. Resistor 3k3 and 150 Ohm\n4. LM358\n5. Display Oled 0,91\n6. Arduino Nano\n7. Red Led 3mm\n8. Some pieces of cable", "step_imgs": ["https://cdn.instructables.com/FZT/NUKG/JSYZ8JK6/FZTNUKGJSYZ8JK6.LARGE.jpg", "https://cdn.instructables.com/FDO/TD2P/JSYZ8JK9/FDOTD2PJSYZ8JK9.LARGE.jpg", "https://cdn.instructables.com/FAL/RVAF/JSYZ8JKG/FALRVAFJSYZ8JKG.LARGE.jpg", "https://cdn.instructables.com/FO0/B8TW/JSYZ8KAK/FO0B8TWJSYZ8KAK.LARGE.jpg"], "step_title": "Step 4: Schema and PCB Layout"}, {"step": 5, "steps_text": "The motor holder is designed followed function. the function itself is to put the motor easily, safe and measure accurately. to consider the shape and dimension is divide to three parts like describe below\nSensor Holder\nBased from TCRT 5000 Data sheet, distance IR Sensor when read the reflective object is around from1mm to 2.5 mm, so i need to design sensor holder, finally i choose distance gap more less 2 mm near the rim. (Sensor holder ) 8,5 mm - (Height sensor) 6,3 = 2,2 mm and it still inside range of sensor capabilities\nSecond thing need to be more attention is sensor position, after several comparison for better and faster reading sensor should be placed parallel not a cross with the rim\nMotor Holder\nParts from motor holder should contain Motor dynamo, contactor motor dynamo and rim Based from mini motor dc data sheet, height of motor dynamo is 15,1mm so i took 7,5mm deep is exactly in the middle and the form is like a make negative mold. The hole for rim should be bigger than 21.50 mm for more specific how to make rim is on the next step. last things is contactor motor dynamo i took contactor from battery holder 2302, copy and drawing the hole (for attach the pin) and put into bottom part of motor holder.\nMotor Lid\nFor safety reason, during measuring motor speed will give vibration and to prevent any damaged motor lid designed with slide.\nThis design have difficulties for \"some 3D printer\" (that i use) specially for sliding component, but after couple of try so i decide to use ABS filament to get result near perfect\nthe things and all the details of drawing parts is attached you can study to develop more better", "step_imgs": ["https://cdn.instructables.com/FTM/1BEF/JT4TPH2I/FTM1BEFJT4TPH2I.LARGE.jpg", "https://cdn.instructables.com/F2R/HRD1/JT4TPBSC/F2RHRD1JT4TPBSC.LARGE.jpg", "https://cdn.instructables.com/F37/EN5U/JT4TMKNE/F37EN5UJT4TMKNE.LARGE.jpg", "https://cdn.instructables.com/FZ9/VWZY/JT4TPBSB/FZ9VWZYJT4TPBSB.LARGE.jpg", "https://cdn.instructables.com/FWO/6W4H/JT4TM5KQ/FWO6W4HJT4TM5KQ.LARGE.jpg", "https://cdn.instructables.com/FAE/X613/JT4TPK83/FAEX613JT4TPK83.LARGE.jpg"], "step_title": "Step 5: Motor Holder"}, {"step": 6, "steps_text": "The box part drawing by 3d modelling in the top part is to put motor holder, display and sensor adjuster. On the front or back side there is powers console. On the left and right side there is air ventilation to prevent hot temperature coming from motor when it running in long period. and this part it made by 3d print", "step_imgs": ["https://cdn.instructables.com/F2U/530H/JSYZ8JP4/F2U530HJSYZ8JP4.LARGE.jpg", "https://cdn.instructables.com/FRS/4EHH/JSYZ8KA1/FRS4EHHJSYZ8KA1.LARGE.jpg", "https://cdn.instructables.com/FMT/EHWO/JT4TPIKD/FMTEHWOJT4TPIKD.LARGE.jpg", "https://cdn.instructables.com/FS0/UV1O/JT4TPIL9/FS0UV1OJT4TPIL9.LARGE.jpg"], "step_title": "Step 6: Box"}, {"step": 7, "steps_text": "in the beginning i take some brass and cut it manually, result is disaster my hand not perfectly to do crafting, so i search something small as connector so i found out pieces of connector from 2302 battery holder, is perfectly curve with the shape of housing Motor dynamo.\nWhen assembly PCB of controller should be screw to the top part of casing, but in this casing i made wrong design, hole and support is too small so it is difficult to find small screw, by the way then i use hot glue for temporary assembly\nIR sensor wrap and safe with heat shrink tube to prevent short circuit when this tools vibrate", "step_imgs": ["https://cdn.instructables.com/FQU/K88I/JSYZ8JRL/FQUK88IJSYZ8JRL.LARGE.jpg", "https://cdn.instructables.com/F6F/7XAA/JSYZ8JRM/F6F7XAAJSYZ8JRM.LARGE.jpg", "https://cdn.instructables.com/F2M/N0TS/JSYZ8LX0/F2MN0TSJSYZ8LX0.LARGE.jpg", "https://cdn.instructables.com/FVW/11UF/JSYZ8KAJ/FVW11UFJSYZ8KAJ.LARGE.jpg"], "step_title": "Step 7: Assembly Tips"}, {"step": 8, "steps_text": "The rim was made with two alternative one is fit with plain shaft and other one fit with pinion (mini 4wd gear shaft). some times to take out and put again pinion is a pain and will loose the grip to the shaft so its make user easily. the last thing all surface of the rim painted in black by paint spray except little stripe 1 cm more and less for sensor read", "step_imgs": ["https://cdn.instructables.com/FX8/XZEA/JT4TPZCW/FX8XZEAJT4TPZCW.LARGE.jpg", "https://cdn.instructables.com/FOB/1LNC/JSYZ8N35/FOB1LNCJSYZ8N35.LARGE.jpg"], "step_title": "Step 8: The Rim"}, {"step": 9, "steps_text": "Motor dynamo is hungry power consumption, cannot join with power from micro control, even use motor driver chip is better make separated power for motor and for controller, means in this case i use two battery for powering motor dynamo is like actual condition when attach into car, then use 5v for micro control ( use mini usb )\nBelow is list of part\n1. Female power socket\n2. Female Mini Usb\n3. Piece of PCB hole\n4. Switch on off\n5. Power supply 5vdc\n6. Battery Holder 2XAA", "step_imgs": ["https://cdn.instructables.com/F25/V6OU/JT4TPZXD/F25V6OUJT4TPZXD.LARGE.jpg", "https://cdn.instructables.com/FYN/3MQZ/JSYZ8JYR/FYN3MQZJSYZ8JYR.LARGE.jpg", "https://cdn.instructables.com/F5I/G0F0/JSYZ8JZR/F5IG0F0JSYZ8JZR.LARGE.jpg", "https://cdn.instructables.com/F8C/NGPN/JSYZ8JZT/F8CNGPNJSYZ8JZT.LARGE.jpg", "https://cdn.instructables.com/F1G/SLT5/JSYZ8JZP/F1GSLT5JSYZ8JZP.LARGE.jpg", "https://cdn.instructables.com/FQV/AFOV/JSYZ8JZV/FQVAFOVJSYZ8JZV.LARGE.jpg", "https://cdn.instructables.com/FXJ/U21R/JSYZ8K6C/FXJU21RJSYZ8K6C.LARGE.jpg"], "step_title": "Step 9: Supplied the Power"}, {"step": 10, "steps_text": "After Assembly all part electronics and enclosure, power socket.\nNow going to test and calibration\nFirst is turn on power of device, the green led from arduino will go through that translucent material\nSecond is make sure use Rim that have white stripe. turn 180 degree until white stripe go down facing the sensor, if red led turn on it mean sensor is reading. try to rotate the rim and make sure if the sensor facing black color red led is turn off.\nIn case sensor not detected try to adjust trimpot by small screwdriver. After that switch on the power of the of the motor and see measurement", "step_imgs": ["https://cdn.instructables.com/FJA/4UTR/JSYZ8ME1/FJA4UTRJSYZ8ME1.LARGE.jpg", "https://cdn.instructables.com/F1T/C7AK/JSYZ8MF9/F1TC7AKJSYZ8MF9.LARGE.jpg", "https://cdn.instructables.com/FHQ/VQHA/JSYZ8MHP/FHQVQHAJSYZ8MHP.LARGE.jpg", "https://cdn.instructables.com/FOL/IK76/JT4TPVW3/FOLIK76JT4TPVW3.LARGE.jpg"], "step_title": "Step 10: Test and Calibration"}, {"step": 11, "steps_text": "Evolution this tools is coming from many of trial and brainstorming from very small user community specially my brother as first user, the point should be reach is\n1. How to get RPM precise measurement, comparing measurement result from Giri (Android App)\n2. How to powering motor\n3. How to hold / locked and make motor dynamo support\nSo far this tools already requested by hobbies (my brother and friends correctly :D)and some is produce by request , i hope anyone can build and develop too, Thanks again and Happy DIY", "step_imgs": ["https://cdn.instructables.com/F5S/2WFV/JSYZ8YCW/F5S2WFVJSYZ8YCW.LARGE.jpg"], "step_title": "Step 11: The Process"}], "channel": "Arduino"}, {"category": "Technology", "description": "During my high-school sophomore year, the 3rd floor of our house lighted on fire due to a short circuit. Fortunately, my family was away on vacation for Christmas. But if we were home, wouldn't it be crucial to tell the direction of fire quickly so that we know the direction to evacuate?\nConsider another situation. You really hope to learn Arduino programming, which enables you to build both functional and decorative things. First, you need to get past the basics of the wiring and the programming language. But after you get past this hurdle, whenever you hope to create with some complexity, tutorials online often consist of \"replicate this wiring over here; then copy and paste the code into Arduino\". Do you hope to learn the \"why\" under each part of a tutorial? Do you hope to be able to alter parts of a tutorial to fit with your own needs?\nIf you have answered \"yes\" to any of the three questions above, then you are at the right place. In this tutorial, we will be going step-by-step from 0 to 100%. By the end of this tutorial, you will understand the underlying functions and challenges. You will know the different skills, such as integrating sensors, programming RGB colors, and using arrays, that can be used elsewhere. I gradually learned those skills as a newbie myself, so I understand your potential challenges and I fully trust that you can do this! Have fun building!", "title": "For Newbies at Arduino Programming: Telling the Direction of Fire in 3 Seconds WITH PIXEL LIGHTS!", "url": "https://www.instructables.com/id/For-Newbies-at-Arduino-Programming-Telling-the-Dir/", "steps": [{"step": 1, "steps_text": "This tutorial does not require complex skills of Arduino programming, as small steps will be explained to lead you up to the final product. However, there is a tiny bit of soldering involved with this neopixel ring here so please be careful when you are on this step! It is not complex though: drop the solder and attach the wire.", "step_imgs": ["https://cdn.instructables.com/F49/7S0H/JSUOV10Z/F497S0HJSUOV10Z.LARGE.jpg"], "step_title": "Step 1: Potential Challenges and Safety Hazards"}, {"step": 2, "steps_text": "Required materials are the materials necessary to complete the final product.\nOptional materials are the materials only necessary to complete mini-activities.\nRequired materials:\n-1 Arduino board (preferably Arduino Uno, to store your program)\n-1 Base Shield V2 (this project requires a bunch of sensors, and this base shield attached to your Arduino keeps it tidy!)\n-7 MLX90615 infrared temperature sensors (infrared temperature sensors are capable at telling differences in temperature even when they are not spaced far apart; if you are using smoke sensors to detect fire, you would need to place them 15m apart!)\n-1 neopixel ring\n-Arduino software on computer (this can be downloaded for free on https://www.arduino.cc/en/main/software)\n-1 5V resistor (which will be attached to the neopixel ring)\n-7 Grove 4 pin connector cables\n-Arduino Breadboard\n-Soldering tools (to solder wires onto the neopixel ring)\nOptional materials:\n-3 RGB led lights\n-3 Arduino digital capacitive touch sensors\n-1 Arduino breadboard\n-20+ M-M wires (M means male; wires with pins pointing out on both sides)", "step_imgs": ["https://cdn.instructables.com/FMT/J7JU/JSUOV1AJ/FMTJ7JUJSUOV1AJ.LARGE.jpg", "https://cdn.instructables.com/FXT/VQ35/JSUOV1B5/FXTVQ35JSUOV1B5.LARGE.jpg", "https://cdn.instructables.com/FCT/FLVF/JT4TP72Y/FCTFLVFJT4TP72Y.LARGE.jpg"], "step_title": "Step 2: Let's Go Over Our Materials First!"}, {"step": 3, "steps_text": "Before we tangle ourselves with using lights, we will first be learning how to obtain temperature from an infrared temperature sensor. This part of the tutorial is adapted from the webpage (http://wiki.seeedstudio.com/Grove-Digital_Infrared_Temperature_Sensor/) On this site, you will be able to download the demo code and incorporate it into your Arduino library. This is necessary because the demo code contains a set of codes that should be included to make the sensors function properly. The code for this inclusion is\n#include \"MLX90615.h\"\nSoftI2cMaster i2c_1(sda_1, scl_1);\nMLX90615 mlx90615_1(DEVICE_ADDR, &i2c_1);\nIf you are doing multiple devices (as we are going to later on), you paste the last two lines of code again and change the number to 2 or whatever the number the sensor is given.\nThen, the SDA and SCL ports need to be defined. SCL is the clock line, which is used to synchronize all data transfers. SDA is the data line. On the backside of the temperature sensor, you can see SDA and SCL. When you attach the SDA and SCL cords, they correspond directly to the Dx on the base shield. In this diagram, SCL is connected to D6 and SDA is connected to D7, so on code it is:\nbyte sda_1 = 7;\nbyte scl_1 = 6;\nNote: It is totally okay if you later write byte sda_2 = 6 because SDA & SCL are separately defined!\nThen we will be coding for void set up and void loop in the software. The void set up only runs once at the start of the program (because it is a \"set up\"!) while the loop will be run again and again.\nvoid setup()\n{Serial.begin(9600);\nSerial.println(\"Setup...\");}\nThe first line means to open the serial port and set data rate to 9600 bytes per second (bps).\nThe second line means to print and show your obtained data on the serial monitor.\nThere are a few rules that you should be aware of here:\nAt the end of a line you must use a semicolon, or there will be a compiler error.\nCurly braces are used for telling the beginning and end of a statement, and an opening brace must be followed by a closing brace.\nFor the loop of getting the temperature, the code is:\nvoid loop ()\n{Serial.print(\"Object temperature: \"); Serial.println(mlx90615_1.getTemperature(MLX90615_OBJECT_TEMPERATURE));\nSerial.print(\"Ambient temperature: \"); Serial.println(mlx90615_1.getTemperature(MLX90615_AMBIENT_TEMPERATURE));\ndelay(1000);}\nThis function allows you to print two things \"Object temperature\" and \"Ambient temperature\" with the mlx90615_1 sensor defined previously. By changing the delay time (currently 1 second or 1000 microseconds) you can play with the time intervals you want your sensors to wait before obtaining new temperature data.\nThis is the end of this set of code, and you can upload through pressing the green arrow (called \"Upload) in the Arduino software. If the code does not upload properly, go to Tools - Port and check if you are connected to the right port. (If you are connected by USB, you would see a separate usb port than the normal bluetooth port) If you don't see the usb port try reattaching the usb cord or restarting your computer.\nOnce you wire up the sensor to D6 & D7 (on the big D6 port) and upload the code above, you will be able to see temperature data in the Arduino software through Tools -> Serial Monitor.", "step_imgs": ["https://cdn.instructables.com/F8C/TXJP/JSUOZVXQ/F8CTXJPJSUOZVXQ.LARGE.jpg", "https://cdn.instructables.com/FUT/AOF0/JSUOZWE4/FUTAOF0JSUOZWE4.LARGE.jpg"], "step_title": "Step 3: Obtaining Temperature With the Infrared Temperature Sensors"}, {"step": 4, "steps_text": "We want to make temperature change the color of a light. Therefore, the temperature is the input and the light's color is the output. On step 3 we went over how to obtain the input, so how do you use that information to affect the output?\nIn addition to our previous code, we can write up a command to turn pin 13 ON when a certain condition is reached. In the setup, you set 13 as output through pinMode (13, OUTPUT).\nThen, in the loop section, you use the float function, which obtains data that is in decimal point format and is constantly changing. In this example, we name the object temperature as \"tture\" and add it to the previous code.\nfloat tture = mlx90615.getTemperature(MLX90615_OBJECT_TEMPERATURE);\nThen, after the same codes previously for obtaining temperature from the sensors, we command the pin 13 to act according to the data given. This time let's try a simple one: pin 13 turns on when temperature of the sensor exceeds 27, and turns off when the temperature is below 27. We use digital write to control the pin's behavior.\nif (true > 27){\ndigitalWrite(13,HIGH);\n}\nelse{\ndigitalWrite(13,LOW);\n}\nYou can check this through putting your hand over the sensor. If pin 13 turns on, you would be able to see a small yellow light emerging.", "step_imgs": ["https://cdn.instructables.com/F5Q/ASAA/JSUOZWN6/F5QASAAJSUOZWN6.LARGE.jpg", "https://cdn.instructables.com/F06/XO4Q/JSUOZWOJ/F06XO4QJSUOZWOJ.LARGE.jpg", "https://cdn.instructables.com/FCE/8Z7D/JSUOZWOR/FCE8Z7DJSUOZWOR.LARGE.jpg"], "step_title": "Step 4: Output? Input?"}, {"step": 5, "steps_text": "You may be wondering, how could we create a range of colors with arduino? This can be achieved through programming a RGB light, which mixes red, green and blue values in different degrees to form various colors. RGB codes are given in the form (red value, green value, blue value). The maximum value given is 255. (255, 0,0) is red, (0,255,0) is green and (0,0,255). You can visit this link for a thorough color chart to create whichever colors you want: http://www.tayloredmktg.com/rgb/\nOn a standard Arduino RGB light, you can see how there are four cords, red, blue, green and ground. Similarly to the previous drill, you can define 9 as output red, 11 as output green and 12 as output blue. Then in the loop, instead of using digitalWrite you use analogWrite, in the format:\nanalogWrite (9, 200);\nanalogWrite (11, 100);\nanalogWrite (12, 100);", "step_imgs": ["https://cdn.instructables.com/FSC/HJ3I/JT4TOXTA/FSCHJ3IJT4TOXTA.LARGE.jpg", "https://cdn.instructables.com/F8Q/VY2K/JT4TOXTB/F8QVY2KJT4TOXTB.LARGE.jpg", "https://cdn.instructables.com/FR1/VM02/JT4TOXX4/FR1VM02JT4TOXX4.LARGE.jpg", "https://cdn.instructables.com/FCR/PHJN/JT4TOXXJ/FCRPHJNJT4TOXXJ.LARGE.jpg"], "step_title": "Step 5: Programming RGB"}, {"step": 6, "steps_text": "Let's do a mini-activity with the breadboard and the RGB light! The final product of this mini-activity would be a RGB light that changes from purple to red depending on the temperature around the sensor.\nThe wiring would consist of using the breadboard. You can see that on the left, there are two columns: negative and positive (indicated by the sign). On your Arduino you can see GND (ground) and 5V (power source). Plug one wire between a GND port and the end of the negative column. Plug one wire between a 5V port and the end of the positive column. Then, connect one wire between the negative and a row where the ground of the RGB light is in (on the two sides the columns are electrically connected, in the middle the rows are electrically connected, see the purple lines on picture 5). Then, the columns where the Red, Green and Blue pins are in are connected with pins on the Arduino via wires. In the following code, pin 10 on Arduino is connected with red, 11 with green and 12 with blue.\nAfter we are done with the wiring, let's get to the coding.\n#include \"MLX90615.h\"\nbyte scl_1 = 2;\nbyte sda_1 = 3;\nint ledPin1 = 10; // red\nint ledPin2 = 11; // green\nint ledPin3 = 12; //blue\nWe define the 3 pins as 11, 12 and 13.\nSoftI2cMaster i2c_1(sda_1, scl_1); MLX90615 mlx90615_1(DEVICE_ADDR, &i2c_1);\nvoid setup() {\nSerial.begin(9600);\nSerial.println(\"Setup...\");\npinMode(ledPin1, OUTPUT);\npinMode(ledPin2, OUTPUT);\npinMode(ledPin3, OUTPUT);\nWe set the three pins as output; other parts are explained previously.\nvoid loop() {\nfloat temperatureObj1 = mlx90615_1.getTemperature(MLX90615_OBJECT_TEMPERATURE);\nfloat temperatureAmb1 = mlx90615_1.getTemperature(MLX90615_AMBIENT_TEMPERATURE);\nSerial.print(\"Temp_1: \");\nSerial.print(temperatureObj1);\nSerial.print(\"`C \");\nSerial.print(temperatureAmb1);\nSerial.println(\"`C \");\nSerial.println(\"\\n=======================================\\n\\r\");\ndelay (100);\nThis is the code for obtaining the temperature. Explanation can be found in previous steps.\nif (temperatureObj1 > 23 && temperatureObj1 < 27) {\nanalogWrite (10, 148);\nanalogWrite (11, 0);\nanalogWrite (12, 220);\ndelay (100); }\nif (temperatureObj1 > 27 && temperatureObj1 < 31) {\nanalogWrite (10, 0);\nanalogWrite (11, 0);\nanalogWrite (12, 205);\ndelay (100); }\nif (temperatureObj1 > 31 && temperatureObj1 < 35) {\nanalogWrite (10, 0);\nanalogWrite (11, 205);\nanalogWrite (12, 0);\ndelay (100); }\nif (temperatureObj1 > 35 && temperatureObj1 < 38) {\nanalogWrite (10, 255);\nanalogWrite (11, 255);\nanalogWrite (12, 0);\ndelay (100); }\nif (temperatureObj1 > 38 && temperatureObj1 < 42) {\nanalogWrite (10, 255);\nanalogWrite (11, 0);\nanalogWrite (12, 0);\ndelay (100); }\nelse {\nanalogWrite (10,0);\nanalogWrite (11,0);\nanalogWrite (12,0);\ndelay(100);\n}}\nSimilar to the use of conditions before, you can analogWrite conditions for each of the three colors. There is a 0.1 millisecond delay between the color changes corresponding to a temperature change. You can change the colors through obtaining RGB values on http://www.tayloredmktg.com/rgb/.", "step_imgs": ["https://cdn.instructables.com/FZK/3WIR/JT4TOYDS/FZK3WIRJT4TOYDS.LARGE.jpg", "https://cdn.instructables.com/F9G/LEXW/JT4TOYDW/F9GLEXWJT4TOYDW.LARGE.jpg", "https://cdn.instructables.com/FLT/G8UA/JT4TOYDY/FLTG8UAJT4TOYDY.LARGE.jpg", "https://cdn.instructables.com/F9U/8JCU/JT4TOYDZ/F9U8JCUJT4TOYDZ.LARGE.jpg", "https://cdn.instructables.com/FJ6/1ZFJ/JT4TOYE1/FJ61ZFJJT4TOYE1.LARGE.jpg", "https://cdn.instructables.com/FV0/2Q6Y/JT4TP40Q/FV02Q6YJT4TP40Q.LARGE.jpg"], "step_title": "Step 6: How to Use a Range of Values: Changing One RGB Light With One Sensor"}, {"step": 7, "steps_text": "There are a few potential challenges so far.\nFirst: you need to make sure that the SCL and SDA ports on your program are correctly corresponding to your wiring. On the V2 base-shield, you can see the numbers like D2, D3, etc. so you know if your wiring is correct. One tip is that SDA is always 1 value higher than SCL! (e.g. sda = 3 scl = 2; sda= 4 scl = 3)\nSecondly: sometimes a new sensor may just not work. Here are a few tips:\n1. Make sure that the sensor cords are pulled separate.\n2. Make sure that the cords are fully plugged in.\n3. Retry plugging in the sensor.\nLastly, a common mistake is to type (temperatureObj1 > 23 && temperatureObj1 < 27) as if (temperatureObj1 > 23 & temperatureObj1 < 27), which will result in an uploading error. Remember to type && instead of &!", "step_imgs": [], "step_title": "Step 7: Potential Challenges"}, {"step": 8, "steps_text": "The function array is a collection of variables that are accessed with an index number. In this tutorial, it will be used to program the neopixel ring.\nAn array is difficult to conceptualize at first, but try imagining that there is a box that contains 5 cards. You pull out a card randomly and it gives you a value. Now imagine pulling out 3 cards from 3 boxes simultaneously, and their values form a RGB color.\nHere is a simple code for showing 125 random colors:\nint red[]={0,5,25,100,255};\nint green[]={0,5,25,100,255};\nint blue[]={0,5,25,100,255};\nThis is like putting cards in the red, green and blue boxes: you are putting in the collection of values.\nvoid setup() {\npinMode(9,OUTPUT);//pin 9 for blue p\ninMode(11,OUTPUT);//pin 10 for green\npinMode(12,OUTPUT);//pin 11 for red\npinMode(8,OUTPUT);\ndigitalWrite(8,LOW);//uses pin 8 as ground\nThis is simply defining 9, 11, and 12 as output and 8 as ground. If you have any confusions, refer to the previous steps.\nvoid loop() {\nfor(int i=0; i<5; i++){\nanalogWrite(12,red[i]); }\nfor(int i=0; i<5; i++){\nanalogWrite(11,green[i]);\n}\nfor(int i=0; i<5; i++){\nanalogWrite(9,blue[i]);\ndelay(500); }\n}//end of void loop\nThrough the for(int i=0; i<5; i++) you choose an integer from 0 to 4. 0 corresponds to a value of 0, 1 to 5, 2 to 25, 3 to 100 and 4 to 255. And in the analogWrite function 12 is no longer matched with a value, instead it is matched with [i], the value on the card you randomly pulls. This is repeated fro green and blue, ending with a delay of 0.5 milliseconds.", "step_imgs": [], "step_title": "Step 8: Arrays"}, {"step": 9, "steps_text": "The neopixel ring is like a string of RGB lights that is controlled by only three wires: ground, 5V, and signaling wire. Array is used in this case to control each individual light on the neopixel ring; for example, the first light would be called [0], the second light would be called [1], etc. The final product would include each infrared temperature sensor corresponding to a bright pixel light. In this context, there will not be a random card pulled, but instead you can control the lights on a neopixel ring separately through typing values onto cards that each control one light.\nSometimes you would need to solder the neopixel ring with wires. Moreover, between the neopixel ring and the signaling wire (on D1), you would need to attach a 5V resistor or the system would overheat. Here are a few tips with the soldering:\n1. Test your soldering's tool's temperature; an ideal condition is when the solder melts in about half a second after contact\n2. \"Drop\" a tiny ball of solder and make it solidify on the neopixel ring and the end of a wire. Then when you pull up the wire towards the ring, you can remelt the balls on both sides and connect the two ends easily.\n3. DO NOT touch your soldering tool when you are not sure about if it is heating up or not! Instead, wipe it on a wet sponge and observe if it makes any sounds (a sound indicates that it is heating up). Tie up your hair and make sure that you have nothing hanging off your body (a necklace, for example). Be aware of the safety hazards :)", "step_imgs": ["https://cdn.instructables.com/FD5/AZCA/JT4TP12H/FD5AZCAJT4TP12H.LARGE.jpg", "https://cdn.instructables.com/F17/709B/JT4TP7MT/F17709BJT4TP7MT.LARGE.jpg"], "step_title": "Step 9: Introduction to the Neopixel Ring"}, {"step": 10, "steps_text": "Now that we know about obtaining temperature, RGB and arrays, we can move on to our final step: connecting the sensors with the neopixel ring. As a start, we will be connecting just 1 light with 1 sensor. The wire connecting GND on the neopixel ring will be plugged into GND on the V2 Base Shield. The 5V wire will be plugged into 5V on the V2 Base Shield. The D1 (or the signal wire) can be plugged into D2 - D13 on the right of the Base Shield depending on your code. In this example we will be plugging it into D7. The wiring for the sensor is the same: pugged into D2.\nLet me explain the code for doing this:\n#include \"MLX90615.h\"\nbyte sda_1 = 3;\nbyte scl_1 = 2;\n#define PIN 7\n#define NUMPIXELS 6\nAdafruit_NeoPixel strip = Adafruit_NeoPixel (7, PIN, NEO_GRB + NEO_KHZ800);\nint sine[] = {\n0,1,2,3,4,5,6\n};\nIn addition to the previous codes, D7 is defined as PIN 7 so that the neopixel ring obtains its signals from D7. Moreover, 7 lights from 0-6 are defined.\nSoftI2cMaster i2c_1(sda_1, scl_1); MLX90615 mlx90615_1(DEVICE_ADDR, &i2c_1);\nvoid setup() {\nSerial.begin(9600);\nSerial.println(\"Setup...\");\nstrip.begin();\nstrip.setBrightness(20);\nstrip.show();\n}\nIn addition to previous codes, the brightness of the neopixel ring is defined. You can alter the brightness by changing the value after strip.setBrightness.\nvoid loop() {\nfloat temperatureObj1 = mlx90615_1.getTemperature(MLX90615_OBJECT_TEMPERATURE);\nSerial.print(\"Temp_1: \");\nSerial.print(temperatureObj1);\nSerial.print(\"`C \");\nSerial.println(\"\\n=======================================\\n\\r\");\ndelay (100);\nCodes for obtaining temperature\nfor(int i=0; i<7; i++) {\nif (temperatureObj1 > 23 && temperatureObj1 < 24) {\nstrip.setPixelColor(sine[0],strip.Color(128, 128, 128));\nstrip.show(); }\nThis means that if temperatureObj1, obatined by sensor 1, falls between 23 and 24, light number 1 (indicated by [0] will show the RGB color (128,128,128). No other lights would be affected. If you want to add sensors/lights, you add numbers to temperatureObj1 (e.g. temperatureObj2) and setPIxelColor(sine[0]) (e.g. setPixelColor(sine[1]).\nSimilar conditions are repeated but the corresponding temperatures and RGB values would vary. You can create your own colors, but the following full code shows a \"rainbow\" from purple to red depending on the temperature.\nif (temperatureObj1 > 24 && temperatureObj1 < 25) {\nstrip.setPixelColor(sine[0],strip.Color(102, 102, 153));\nstrip.show(); }\nif (temperatureObj1 > 25 && temperatureObj1 < 26) {\nstrip.setPixelColor(sine[0],strip.Color(102, 0, 204));\nstrip.show(); }\nif (temperatureObj1 > 26 && temperatureObj1 < 27) {\nstrip.setPixelColor(sine[0],strip.Color(51, 51, 204));\nstrip.show(); }\nif (temperatureObj1 > 27 && temperatureObj1 < 28) {\nstrip.setPixelColor(sine[0],strip.Color(0, 0, 255));\nstrip.show(); }\nif (temperatureObj1 > 28 && temperatureObj1 < 29) {\nstrip.setPixelColor(sine[0],strip.Color(51, 153, 255));\nstrip.show(); }\nif (temperatureObj1 > 29 && temperatureObj1 < 30) {\nstrip.setPixelColor(sine[0],strip.Color(102, 255, 255));\nstrip.show(); }\nif (temperatureObj1 > 30 && temperatureObj1 < 31) {\nstrip.setPixelColor(sine[0],strip.Color(102, 255, 204));\nstrip.show(); }\nif (temperatureObj1 > 31 && temperatureObj1 < 32) {\nstrip.setPixelColor(sine[0],strip.Color(0, 255, 0));\nstrip.show(); }\nif (temperatureObj1 > 32 && temperatureObj1 < 33) {\nstrip.setPixelColor(sine[0],strip.Color(102, 255, 51));\nstrip.show(); }\nif (temperatureObj1 > 33 && temperatureObj1 < 34) {\nstrip.setPixelColor(sine[0],strip.Color(204, 255, 51) );\nstrip.show(); }\nif (temperatureObj1 > 34 && temperatureObj1 < 35) {\nstrip.setPixelColor(sine[0],strip.Color(255, 255, 0));\nstrip.show(); }\nif (temperatureObj1 > 35 && temperatureObj1 < 36) {\nstrip.setPixelColor(sine[0],strip.Color(255, 204, 0));\nstrip.show(); }\nif (temperatureObj1 > 36 && temperatureObj1 < 37) {\nstrip.setPixelColor(sine[0],strip.Color(255, 153, 0));\nstrip.show(); }\nif (temperatureObj1 > 37 && temperatureObj1 < 38) {\nstrip.setPixelColor(sine[0],strip.Color(255, 51, 0));\nstrip.show(); }\nif (temperatureObj1 > 38 && temperatureObj1 < 39) {\nstrip.setPixelColor(sine[0],strip.Color(204, 51, 0));\nstrip.show(); }\nif (temperatureObj1 > 39 && temperatureObj1 < 40) {\nstrip.setPixelColor(sine[0],strip.Color(255,0,0));\nstrip.show(); }}", "step_imgs": ["https://cdn.instructables.com/FMU/CO0R/JT4TP8HP/FMUCO0RJT4TP8HP.LARGE.jpg", "https://cdn.instructables.com/F4G/Q0MK/JT4TP8HQ/F4GQ0MKJT4TP8HQ.LARGE.jpg"], "step_title": "Step 10: 1 Neopixel Light With 1 Sensor"}, {"step": 11, "steps_text": "This code is to extend the previous code to three sensors. In this code below, the sensors are attached to D2, D3 and D4, which have corresponding SDA and SCL numbers. The same code is repeated, except that the numbers are changed to indicate a second/third sensor/neopixel light. Because the coding for this is replicating the previous steps with small alterations and is also extremely long, I will be including the code under a separate document under the title Code: 3 Neopixel Lights With 3 Sensors.", "step_imgs": ["https://cdn.instructables.com/FYP/AHE4/JT4TP9Q8/FYPAHE4JT4TP9Q8.LARGE.jpg", "https://cdn.instructables.com/F85/TWA8/JT4TP9NF/F85TWA8JT4TP9NF.LARGE.jpg"], "step_title": "Step 11: 3 Neopixel Lights With 3 Sensors"}, {"step": 12, "steps_text": "There are a few potential challenges that you would face so far.\nFirst, because array values start at 0, you must make sure that you name your lights 0-6 instead of 1-7.\nSecondly, make sure that your cords correspond to the correct places and are tightly plugged in. Wires of the neopixel ring tend to not fit very well in the Base Shield.\nThirdly, you can change your object temperature to ambient temperature if 1) sensors do not work as sometimes obtaining object temperature is inconsistent 2) you wish to know changes in temperature of the environment instead of the actual sensor, which increases the sensitivity.\nLastly, make sure that you know clearly what each variable (such as temperatureObj1) means in terms of individual sensor because you need to correspond light with the temperature of a direction a sensor points to.", "step_imgs": [], "step_title": "Step 12: Potential Challenges"}, {"step": 13, "steps_text": "Lastly, you can plug all sensors into available ports on the Base Shield. You replicate the previous code for 1 sensor for another 4 times with minor editions, and you would get a neopixel ring that shows the temperature in 7 different directions. You can see how the colors change depending on heat source (hand) on the photos. Moreover, to make the device more sensitive (to changes in temperature potentially caused by a fire, Obj is changed to Amb in the codes, detecting ambient, environment temperature than object, sensor temperature). The extensive code for this will be included in a separate file.", "step_imgs": ["https://cdn.instructables.com/FCO/XKAJ/JT4TOYAO/FCOXKAJJT4TOYAO.LARGE.jpg", "https://cdn.instructables.com/F7V/W6SG/JT4TOYAR/F7VW6SGJT4TOYAR.LARGE.jpg", "https://cdn.instructables.com/FVV/I047/JT4TOYAS/FVVI047JT4TOYAS.LARGE.jpg", "https://cdn.instructables.com/FRK/408N/JT4TOYAT/FRK408NJT4TOYAT.LARGE.jpg", "https://cdn.instructables.com/FQ0/QHAP/JT4TOYAU/FQ0QHAPJT4TOYAU.LARGE.jpg"], "step_title": "Step 13: Integrate 7 Sensors With 7 Lights on Neopixel Ring!"}, {"step": 14, "steps_text": "This project is not only aiming to create a practical device. It incorporates skills that could be used in many other areas: for example, you can obtain the amount of gas if you know how to obtain temperature. Or you can use arrays to program a 64-bit RGB light strip. The skills used to build this project are extremely applicable in other fields, which can be useful in future projects. I believe that my project is overall successful, despite it does not necessarily goes on a straight line before reaching the goal. Taking steps and building mini-devices were needed to thoroughly understand each and every step, which utilizes knowledge from different fields of Arduino programming.\nSurprisingly, the biggest challenges encountered are caused by the smallest errors, such as the incorrect \"&\" or naming the lights 1-7. Moreover, I realized that while object temperature requires less power, ambient temperature makes the device more sensitive, which is better for serving the final purpose. The lesson is that when building codes, every single detail and choice matters.\nEven though I believe that the learning purposes of this project is fully achieved, if I were to do this project differently, I hope to incorporate even more elements, such as a buzzer that makes a sound in face of high degrees of temperature increases, with the purpose of enhancing the device's functional purposes.", "step_imgs": [], "step_title": "Step 14: Reflections"}], "channel": "Arduino"}, {"category": "Technology", "description": "I like to play with labyrinth maze. I have always wanted to control one of those labyrinth maze games using gestures or mobile. I got inspired to create this Marble Maze by blic19933's 3D Printed Maze Controlled by Your Android Device\nInstead of using a Bluetooth module for communication I have used WiFi module (ESP8266) for communication. So the advantage of this is I can control the maze eighter using a wearable band or mobile app.\nWhat are the pros of my project?\n1. It is simple and easy to build\n2. It is cheap and needs a few electronic parts.\n3.Detachable magnetic maze.\n4. Easy to customize.\n5. So much fun to build it and play with it.\nThe Maze is controlled via a wearable band as well as a Bluetooth app developed using MIT App Inventor. The gyroscope sensor data from the band is transmitted through the WiFi connection to the Wemos D1 Mini device (esp8266) which controls the servos that tilt the maze. You can also control the maze using an android app. Android app is created with the MIT App Inventor2. This gadget requires less components. It is easy to build.\nYou can download all the stuff required for this project from this GitHub link: https://github.com/siddhesh13/gesture_controlled_maze\nLet's Start building...!!", "title": "Gesture Controlled Maze", "url": "https://www.instructables.com/id/Gesture-Controlled-Maze/", "steps": [{"step": 1, "steps_text": "Components\n1x Wemos d1 mini\n2x SG90s Servo Motor\n1x ESP01\n1x MPU6050\n1x TP4056 LiPo Charger Module\n1x 3.7v 400mAh LiPo Battery\n1x Mini Slide Switch\n1x Fitbit band or watch strap\n4x 25mm Neodymium magnets\n2x 5mm steel ball\n2x Mounting screws\n10cm X 10cm Wooden Ply\n3D Printed Parts\nThe 3D print STL files are available on Thingiverse -\nbase_plate.stl\nx_axis.stl\ny_axis.stl\nmagnet_holder.stl\nmagnet_holder_cover.stl\nrectagular_maze.stl\ntriangular_maze.stl\nhexagonal_maze.stl\ncircular_maze.stl\nTools\n3D printer --> you can use online service\nSoldering iron and Tin\nScrewdriver and plier\nWire stripper\nGlue gun\nMultimeter", "step_imgs": ["https://cdn.instructables.com/FJA/1KF1/JSL37JRG/FJA1KF1JSL37JRG.LARGE.jpg", "https://cdn.instructables.com/F4T/HMW2/JSL37JRV/F4THMW2JSL37JRV.LARGE.jpg", "https://cdn.instructables.com/FRN/ENLJ/JSL37JRO/FRNENLJJSL37JRO.LARGE.jpg", "https://cdn.instructables.com/FCU/OFBS/JSL37JRK/FCUOFBSJSL37JRK.LARGE.jpg"], "step_title": "Step 1: Parts and Materials"}, {"step": 2, "steps_text": "I used Flashforge creator pro with 0.2mm nozzle and normal settings and with supports. You can also download all the files from Thingiverse. 3d print all the parts and clean the parts by removing support.\nhttps://www.thingiverse.com/thing:3484492", "step_imgs": [], "step_title": "Step 2: 3D Print the Marble Maze Parts"}, {"step": 3, "steps_text": "There are 5 parts to build this structure. Its a Gimbal like structure. Before attaching servo motors to 3d printed parts, first, test the servo motors and then set both the motors at 90-degree angle. Now take 2 1-sided servo horns and fit it into the slot of x_axis_motor.stl and y_axis_motor.stl parts. Now Attach y_axis_motor.stl part to one of the servo motors and attach magnet_holder.stl part to the other servo motor. Fit it into the slot and attach to it using the 2 mounting screws come with the servo motors. Then attach this y_axis_motor and servo motor to the x_axis_motor and magnet_holder.stl and servo motor to the y_axis_motor.stl part. Attach both motors using screw comes with the servo motor. Now solder the servo motor wires to the Wemos board.\nPin connections\nServo Motor X = D3 pin of Wemos\nServo Motor Y = D1 pin of Wemos\nConnect Ground and VCC pins of servo motors to GND and 5V pin of Wemos board respectively.\nNow, place the Wemos board inside the base.stl part. Now cover the base plate by putting the Gimbal structure of servo motors on it and attach both the parts using 1-inch screws. Place the whole structure on a wooden plate and attach to it using screws.\nPut the 25mm magnet in the slot of magnet_holder.stl part. Cover the magnet using the magner_holder_cover.stl part. Use glue to stick it.\nNow maze is ready. Upload the code in the Wemos using Arduino IDE.", "step_imgs": ["https://cdn.instructables.com/FMZ/JDE2/JSPA8F5E/FMZJDE2JSPA8F5E.LARGE.jpg", "https://cdn.instructables.com/FFB/ENY1/JSPA8F5H/FFBENY1JSPA8F5H.LARGE.jpg", "https://cdn.instructables.com/F1J/6JZK/JSPA8F5I/F1J6JZKJSPA8F5I.LARGE.jpg", "https://cdn.instructables.com/F26/KDIT/JSPA8F5M/F26KDITJSPA8F5M.LARGE.jpg", "https://cdn.instructables.com/F7L/1D4N/JSPA8F5O/F7L1D4NJSPA8F5O.LARGE.jpg", "https://cdn.instructables.com/FXM/NQ7C/JSPA8F5S/FXMNQ7CJSPA8F5S.LARGE.jpg", "https://cdn.instructables.com/FNA/UUSC/JSPA8F5X/FNAUUSCJSPA8F5X.LARGE.jpg", "https://cdn.instructables.com/FD7/ZD31/JSPA8F59/FD7ZD31JSPA8F59.LARGE.jpg", "https://cdn.instructables.com/FT4/HRFG/JSPA8MS0/FT4HRFGJSPA8MS0.LARGE.jpg", "https://cdn.instructables.com/FDM/H2LV/JSPA8MS1/FDMH2LVJSPA8MS1.LARGE.jpg"], "step_title": "Step 3: Assemble the Gimbal Structure"}, {"step": 4, "steps_text": "The Wearable band consist of the following components:\nESP01\nMPU6050\nTP4056 LiPo Charger Module\nMini Slide Switch\n3.7V 400mAh LiPo Battery.\nI use Nodemcu board to program ESP01. You can use a different programmer module to program ESP01. To program ESP01, connect ESP01 to Nodemcu board as shown in the picture. Then open Arduino IDE and select board as Nodemcu V1.0 and select the port and upload band.ino code. After uploading the code remove the header pins of the ESP01 using a soldering iron. Also, remove the header pins of the MPU6050 sensor. Now solder all the components as shown in the circuit diagram. Stick electric tape on the back side of all the modules to prevents short circuit. Place the soldered electronics parts in the 3d printed enclosure(wearable_band_case.stl). Attach the enclosure box to the band.", "step_imgs": ["https://cdn.instructables.com/FRE/GUWX/JSPA8M7L/FREGUWXJSPA8M7L.LARGE.jpg", "https://cdn.instructables.com/FV0/KIBU/JSSUGV3J/FV0KIBUJSSUGV3J.LARGE.jpg", "https://cdn.instructables.com/F6L/A7YH/JSSUGVQ1/F6LA7YHJSSUGVQ1.LARGE.jpg", "https://cdn.instructables.com/FT2/JYIW/JSPA8M8F/FT2JYIWJSPA8M8F.LARGE.jpg", "https://cdn.instructables.com/FBU/9N68/JSPA8MC0/FBU9N68JSPA8MC0.LARGE.jpg", "https://cdn.instructables.com/FUP/M8RR/JSPA8MC1/FUPM8RRJSPA8MC1.LARGE.jpg", "https://cdn.instructables.com/FUC/6BLR/JSPA8MC2/FUC6BLRJSPA8MC2.LARGE.jpg", "https://cdn.instructables.com/FIV/GLG1/JSPA8MAX/FIVGLG1JSPA8MAX.LARGE.jpg", "https://cdn.instructables.com/F6Q/OG58/JSPA8MCU/F6QOG58JSPA8MCU.LARGE.jpg", "https://cdn.instructables.com/F14/NRWR/JSPA8MD7/F14NRWRJSPA8MD7.LARGE.jpg", "https://cdn.instructables.com/F75/OZL5/JSPA8M6J/F75OZL5JSPA8M6J.LARGE.jpg"], "step_title": "Step 4: Make the Wearable Band"}, {"step": 5, "steps_text": "Code for the wearable band: https://github.com/siddhesh13/gesture_controlled_m...\ncode for the maze: https://github.com/siddhesh13/gesture_controlled_maze/blob/master/maze/maze.ino\nI have programmed both the maze and the band using Arduino IDE. The band sends the gyroscope values (roll and pitch) to the maze. For data transmission, it uses the UDP protocol. For more information on UDP- ESP8266 visit this webpage https://arduino-esp8266.readthedocs.io/en/latest/esp8266wifi/udp-examples.html\nThe maze is working in Access Point (AP) mode and the band is working in Station Mode.\nThe band first tries to connect to the maze which is working in AP (Access Point) mode. After the successful connection with the maze, ESP01 in the band initiates the communication with mpu6050 using I2C protocol. First, it calibrates the sensor for the current orientation of the sensor. Then it calculates the Roll and Pitch angle from MPU6050. It calculates angle every 4ms, i.e, 250 values per second. Then it transmits these angle values to the maze. To send UDP packet it requires an IP address and port number of a remote device that is the maze. The IP address of the maze is \"192.168.4.1\" and port number is \"4210\". After receiving the angle values from the band, servo motors on the maze rotates.", "step_imgs": [], "step_title": "Step 5: Code Explanation"}, {"step": 6, "steps_text": "MIT App Inventor is the best platform to make a quick android app.\nI have attached the aia and apk files. Download the apk file and install it in your android phone and start playing with the maze. You can also make changes in the app using aia file. Open the aia file MIT app inventor and make changes in the app according to you. I have used UDP extension to send data to the Wemos(esp8266) device.\nDownload the extension from here https://community.thunkable.com/t/free-udp-client-extension/5831\nThis app uses the gyroscope sensor of the smartphone to check the phone orientation and sends the value to the Wemos device using UDP protocol. I am working on an app for the iOS and will upload the files once it is done. Stay tuned!!!", "step_imgs": [], "step_title": "Step 6: Make an Android App Using MIT App Inventor"}, {"step": 7, "steps_text": "I have designed the maze in four different shapes. You can download it and print it using a single color or multicolor in any color of your choice.\nYou can design your own maze using 3D/2D Maze Generator. How to use it is explained on their webpage.\nBut using this script you can only design a maze in a square/rectangle shape.\nI have designed the maze using Inkscape and Fusion360 software.\nFirst, download the image of the maze from the internet. Download black and white image for good results. Then open the image in Inkscape software. Then convert the image from JPG/PNG format to Bitmap format. To convert it to Bitmap, select the image and click on the Path--> Trace Bitmap. A new pop-up window will open, select Brightness cutoff and check the Live Preview check mark to see the results. Increase/decrease the Threshold value for Brightness cutoff to get best results and click OK. You will get a Bitmap image of the maze. Delete the original image of the maze which is in jpg/png format. Now resize the maze image by using Width and Height option from the top menu bar. After this save the maze image in SVG format.\nNow open Fusion360 software, and click on Inset-->Insert SVG. Select the SVG file of the maze, and click OK.\nYou have a 2D sketch of your design ready, check its dimensions like width, length, diameter and the space for the ball inside the maze. If it is not proper then edit it in the Inkscape again and import the updated file again in the Fusion360. If all the dimensions are right then simply add a 26mm circle sketch in the center. This circle is for a magnet. Now extrude the maze. Keep wall height to 5-7mm, base thickness to 3-4mm, and cavity hole for the magnet to 2mm. After extruding save the file as STL and slice it using the slicer software and print it.", "step_imgs": ["https://cdn.instructables.com/F4S/XHVC/JSPA8TAH/F4SXHVCJSPA8TAH.LARGE.jpg", "https://cdn.instructables.com/FND/VI9S/JSPA8TAS/FNDVI9SJSPA8TAS.LARGE.jpg", "https://cdn.instructables.com/FL1/AW25/JSPA8TAU/FL1AW25JSPA8TAU.LARGE.jpg", "https://cdn.instructables.com/FL5/0875/JSPA8TB6/FL50875JSPA8TB6.LARGE.jpg", "https://cdn.instructables.com/FWD/W14Z/JSPA8TBS/FWDW14ZJSPA8TBS.LARGE.jpg", "https://cdn.instructables.com/F9Q/VTUE/JSPA8TD1/F9QVTUEJSPA8TD1.LARGE.jpg", "https://cdn.instructables.com/FP8/T7C1/JSPA8TE8/FP8T7C1JSPA8TE8.LARGE.jpg", "https://cdn.instructables.com/F4B/29E1/JSPA8TGL/F4B29E1JSPA8TGL.LARGE.jpg", "https://cdn.instructables.com/FKZ/HM65/JT2SL84R/FKZHM65JT2SL84R.LARGE.jpg", "https://cdn.instructables.com/FPG/9N3G/JT2SL84S/FPG9N3GJT2SL84S.LARGE.jpg", "https://cdn.instructables.com/FEA/2XY1/JT2SL84T/FEA2XY1JT2SL84T.LARGE.jpg", "https://cdn.instructables.com/FER/PZOT/JT2SL84U/FERPZOTJT2SL84U.LARGE.jpg", "https://cdn.instructables.com/FW7/4OV5/JT2SL84V/FW74OV5JT2SL84V.LARGE.jpg", "https://cdn.instructables.com/F0S/I2UC/JT2SL84J/F0SI2UCJT2SL84J.LARGE.jpg", "https://cdn.instructables.com/FB2/JM3B/JT2SL84K/FB2JM3BJT2SL84K.LARGE.jpg", "https://cdn.instructables.com/FVH/LG2B/JT2SL84L/FVHLG2BJT2SL84L.LARGE.jpg", "https://cdn.instructables.com/FKX/9FWJ/JT2SL84O/FKX9FWJJT2SL84O.LARGE.jpg", "https://cdn.instructables.com/F3F/1CWB/JT2SL84Q/F3F1CWBJT2SL84Q.LARGE.jpg"], "step_title": "Step 7: Design the Maze"}, {"step": 8, "steps_text": "This game is awesome! Put any maze and power it ON using a micro USB cable.\nWear the band and turn it ON, wait for 20 seconds to calibrate the sensor. Now you are ready to play.\nIf you are using the app to control the maze, first connect your mobiles WiFi to the maze. then open the app and you're ready to play.\nIf you design your own maze then don't forget to share your maze designs.\nIf you found it interesting, please vote for me in the Remix Contest. Thanks for reading through to the end!\nKeep enjoying and Keep tinkering.", "step_imgs": ["https://cdn.instructables.com/FMN/FWOQ/JT4TM3YB/FMNFWOQJT4TM3YB.LARGE.jpg"], "step_title": "Step 8: Let's Play"}], "channel": "Electronics"}, {"category": "Technology", "description": "In this electronic DIY project you will see how to make a minimal OTG connector at a very low cost. The OTG connector is a very practical tool that makes it easy to connect your Android phone for U disk expansion and mouse connection. You can make a more detailed production by watching the full production video.\nMaterials needed:\nUSB female\nMike plug\nHeat shrinkable tube\nUse tools:\nElectric iron", "title": "How to Make a Minimum OTG Connector", "url": "https://www.instructables.com/id/How-to-Make-a-Minimum-OTG-Connector/", "steps": [{"step": 1, "steps_text": "One USB holder, you can get it from the old device. Mike plug one", "step_imgs": ["https://cdn.instructables.com/FUY/2Z3E/JT4TP8RX/FUY2Z3EJT4TP8RX.LARGE.jpg", "https://cdn.instructables.com/FAI/LS7U/JT4TP8SA/FAILS7UJT4TP8SA.LARGE.jpg"], "step_title": "Step 1: The First Step Is to Prepare the Required Materials."}, {"step": 2, "steps_text": "The USB socket and the Mike plug are soldered according to the drawing, and they can be fixed to the hole plate for soldering.", "step_imgs": ["https://cdn.instructables.com/FJC/6UAQ/JT4TP8VL/FJC6UAQJT4TP8VL.LARGE.jpg", "https://cdn.instructables.com/F6G/ALUK/JT4TP8VN/F6GALUKJT4TP8VN.LARGE.jpg", "https://cdn.instructables.com/FBA/F887/JT4TP8VO/FBAF887JT4TP8VO.LARGE.jpg"], "step_title": "Step 2: Second Step Component Welding"}, {"step": 3, "steps_text": "Apply the finished product to the hot melt adhesive and heat shrink the sleeve to make the shape.", "step_imgs": ["https://cdn.instructables.com/F8T/MNJT/JT4TP90C/F8TMNJTJT4TP90C.LARGE.jpg"], "step_title": "Step 3: Third Step"}, {"step": 4, "steps_text": "Connect a USB flash drive or mouse for testing", "step_imgs": ["https://cdn.instructables.com/F2Q/MWA1/JT4TP95A/F2QMWA1JT4TP95A.LARGE.jpg", "https://cdn.instructables.com/FS4/YCI0/JT4TP962/FS4YCI0JT4TP962.LARGE.jpg"], "step_title": "Step 4: Last Step"}], "channel": "Electronics"}, {"category": "Technology", "description": "3 Ways to Build Your Own Contactless Voltage Detector For Less Than a Dollar\nIntroduction\n------------\nWhen electricity is not properly handled, it results in electrical shocks with a nasty experience; which is why safety must come first when working with electricity or electrical devices. In order to avoid injury, prior to starting work on an electrical box such as an AC mains switch-board or a power supply, you must first verify there is no AC voltage. It is really hard to completely isolate a device from the main supply; so, how can you be sure that there's no voltage remaining?", "title": "Contactless Voltage Detector", "url": "https://www.instructables.com/id/Contactless-Voltage-Detector/", "steps": [{"step": 1, "steps_text": "There are several options available in the market and they range in price, but if you don't want to spend a lot and if you are a true DIY lover, this Non-Contact AC voltage detector is the right choice for you. After watching this video you should be able to make your own AC tester for less than a Dollar.", "step_imgs": ["https://cdn.instructables.com/FZE/JSYF/JT4TP59B/FZEJSYFJT4TP59B.LARGE.jpg"], "step_title": "Step 1:"}, {"step": 2, "steps_text": "In this video I am going to show you 3 ways of making your own Contact Less AC Voltage Detectors using:\nIC 4017 Decade Counter\n555 Timer IC\n3 x General Purpose NPN Transistors", "step_imgs": ["https://cdn.instructables.com/FL2/8OZU/JT4TP59I/FL28OZUJT4TP59I.LARGE.jpg"], "step_title": "Step 2: Topic Covered"}, {"step": 3, "steps_text": "All these voltage detectors work on a simple principle of electromagnetic induction.\nA magnetic field is produced around a current carrying conductor and if current through the conductor is alternating current (AC), the magnetic field produced varies periodically. When we place an antenna near an AC energized object, a small current gets induced into the antenna due to electromagnetic induction. By amplifying this current we can light up a LED or a buzzer circuit, indicating that AC voltage is present.", "step_imgs": ["https://cdn.instructables.com/FZS/PAO6/JT4TP59K/FZSPAO6JT4TP59K.LARGE.jpg"], "step_title": "Step 3:"}, {"step": 4, "steps_text": "Lets start our discussion by assembling the circuit using IC 4017. IC 4017 is a 16 Pin Decade counter, it is used for low range counting applications. It can count from 0 to 10 (the decade count) sequentially in a pre-defined time and reset the count or hold it when required.\nFor this setup we need:\nIC 4017\n2N2222 General Purpose NPN Transistor\n100 \u03bcF Capacitor\nLED\n220\u03a9 and 1K Resistor\nBuzzer\nand a Homemade Antenna", "step_imgs": ["https://cdn.instructables.com/F5X/2EET/JT4TP59O/F5X2EETJT4TP59O.LARGE.jpg"], "step_title": "Step 4: Setup Using IC 4017"}, {"step": 5, "steps_text": "Connect Pin-1 of the IC to the 1K resistor. The other end of the resistor connects to the base of the transistor.\nNext connect the collector pin to the -ve legs of the LED, Transistor and the buzzer. The +ve legs connects to the +ve rail of the circuit-board. The negative rail connects to the Emitter, Pin-8, Pin-13 and the Pin-15 of the IC. The antenna is connected to the Pin 14 which is the clock input pin. When the antenna receives input clock pulses it advances the counter and the LED flashes. You can connect the cable connected to Pin-1 to any one of the Output pins of the IC. If you want you can also connect 3 or 4 LEDs to the Output Pins to give it a chaser like effect.", "step_imgs": ["https://cdn.instructables.com/F3N/EJWD/JT4TP59T/F3NEJWDJT4TP59T.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "Now lets do a quick test. Moving a live wire close to the coil makes the buzzer and the LED to flash. But as you can see, at some instances the LED and the buzzer wont go off even after I move the wire away. Also, this setup flashes when I put my fingers around the coil. Pretty much every second video on YouTube is made using this hypersensitive IC. But frankly speaking I am not impressed by this setup.", "step_imgs": ["https://cdn.instructables.com/FL8/TEFV/JT4TP5A0/FL8TEFVJT4TP5A0.LARGE.jpg"], "step_title": "Step 6: 4017 Demo"}, {"step": 7, "steps_text": "In the 2nd setup I am using the 555 timer IC.\n555 timer is the most common chip used in DIY electronics projects because it\u2019s small, inexpensive, and very useful. This circuit is very simple. When the voltage on Pin-2 falls below 1\u20443 of VCC the Output on Pin-3 goes HIGH and the LED lights up. As long as this pin continues to be kept at a low voltage, the OUT pin will remain HIGH. So, when the antenna detects an alternating input the output goes HIGH and LOW and the LED flashes accordingly.\nFor this setup we need:\nIC 555\n4.7 \u03bcF Capacitor\nLED\n220\u03a9 and 10K Resistor\nBuzzer\nand a Homemade Antenna", "step_imgs": ["https://cdn.instructables.com/FE6/OAN8/JT4TP5A2/FE6OAN8JT4TP5A2.LARGE.jpg"], "step_title": "Step 7: Setup Using IC 555"}, {"step": 8, "steps_text": "Connect Pin-1 to ground. Pin-2 to the antenna. Pin-3 to the LED and the buzzer. Pin-6 to the +ve leg of the capacitor and Pin-7 to one end of the 10K resistor. Then Pin-6 or the Threshold pin and Pin-7 or the Discharge pin need to be connected to each other. Pin-8 and the other end of the 10K resistor connects to the +ve rail of the circuit board, and finally connect all the -ve legs to the negative rail of the circuit board.", "step_imgs": ["https://cdn.instructables.com/FK7/ZJ13/JT4TP5WR/FK7ZJ13JT4TP5WR.LARGE.jpg"], "step_title": "Step 8:"}, {"step": 9, "steps_text": "Alright, now lets do a quick test.\nAs we bring a live wire close to the antenna the buzzer and the LED starts buzzing and flashing; and, if I put my hand around the antenna it has no effect on the circuit. Which makes this setup more reliable as I am not getting any false reading.", "step_imgs": ["https://cdn.instructables.com/FJV/2MMC/JT4TP5A5/FJV2MMCJT4TP5A5.LARGE.jpg"], "step_title": "Step 9: 555 Demo"}, {"step": 10, "steps_text": "In the final setup I am using 3 2N2222 General Purpose NPN transistor.\nAs we know a transistor has three terminals - emitter, base and collector. Collector to emitter current is controlled by the base current. When there is no base current, no current flows from the collector to the emitter. Thus, a transistor acts like a switch. So, a transistor can either ON, OFF or in-between.\nFor this setup we need:\n3 x 2N2222 General Purpose Transistors\n1M, 100K and a 220\u03a9 Resistor\nLED\nBuzzer\nand a Homemade Antenna", "step_imgs": ["https://cdn.instructables.com/FKK/SDKF/JT4TP5AG/FKKSDKFJT4TP5AG.LARGE.jpg"], "step_title": "Step 10: Setup Using Transistors"}, {"step": 11, "steps_text": "Connect the antenna to the base of the 1st transistor. The emitter connects to the base of the 2nd transistor and same with the next one. Then connect the 1M resistor to the collector of the 1st transistor, 100K to the 2nd and the 220\u03a9 in series with the LED and the buzzer. Then, connect all the resistors to the +ve rail of the circuit board. And finally ground the emitter of the 3rd transistor.", "step_imgs": ["https://cdn.instructables.com/FY2/WK5X/JT4TP5AP/FY2WK5XJT4TP5AP.LARGE.jpg"], "step_title": "Step 11:"}, {"step": 12, "steps_text": "In this setup, the antenna is connected to the base of first transistor. When we move the antenna close to an AC energized object, a small current gets induced into the antenna due to the electromagnetic induction. This current triggers the first transistor and output of the first transistor triggers the second and third. The total gain (or the ratio of collector current to base current) would then be the multiplication of the three. The third transistor then turns ON the LED and buzzer circuit, indicating the presence of AC voltage.\nSo, the brightness of the LED totally depends on the base-current. As the flow increases the LED's brightness goes high giving it a fading effect. You have to be really up close to get this thing to work. May be if I take the antenna's cover off it will perform well, but again this circuit was not able to impress me.", "step_imgs": ["https://cdn.instructables.com/F1P/RW93/JT4TP5AV/F1PRW93JT4TP5AV.LARGE.jpg"], "step_title": "Step 12: Transistor Demo"}, {"step": 13, "steps_text": "I don't know about you but I really like the setup using the 555 timer IC. So, without wasting time lets start soldering all the components to the circuit board.\nI'll start by soldering the base or the socket of the IC. An IC socket is used as a placeholder for ICs. They are used in order to allow safe removal and insertion of ICs because IC chips may get damaged from heat while soldering. Next, I am soldering the 220\u03a9 Resistor, LED and the Buzzer to Pin-3 of the IC. After that, I am soldering the 10K resistor and the Capacitor to the board.\nWhen considering household electric appliances, your safety is the main goal. If you are facing high bills, flickering lights and damaged appliances at your home, go ahead and make one of these to make sure that the home circuit is in proper working condition.\nNext, I am soldering the 9V Battery Snap-on Connector Clip to the plate. Once soldered, I am connecting all the +ve and -ve pins as per the circuit diagram. Once everything is in place its time for me to install the homemade antenna.", "step_imgs": ["https://cdn.instructables.com/FZS/KYDG/JT4TP5AZ/FZSKYDGJT4TP5AZ.LARGE.jpg", "https://cdn.instructables.com/FJE/W799/JT4TP5B0/FJEW799JT4TP5B0.LARGE.jpg", "https://cdn.instructables.com/FNU/9IIG/JT4TP5B1/FNU9IIGJT4TP5B1.LARGE.jpg"], "step_title": "Step 13: Soldering"}, {"step": 14, "steps_text": "OK, now the interesting bit. Lets check out how this assembly works when a live wire is brought near to it. Looks like I have hit the jackpot. So, now you have no reason to blame the nation's power system when you have a poor wiring inside our home. Go ahead and check it NOW....", "step_imgs": ["https://cdn.instructables.com/FNZ/2UFC/JT4TP5B9/FNZ2UFCJT4TP5B9.LARGE.jpg"], "step_title": "Step 14: Testing"}, {"step": 15, "steps_text": "", "step_imgs": [], "step_title": "Step 15: Thanks"}], "channel": "Electronics"}, {"category": "Technology", "description": "Technology and Engineering, Grades 3 - 8\nLesson Overview\nIn this activity, students practice the Engineering Design Process on a challenge that is relevant to them, while learning 3D modeling on Tinkercad. The Earbud \u201cBuddy\u201d is a fun creation that helps keep an earbud cord from getting tangled when storing the earbuds. The earbuds could be a simple set provided by the teacher, or the student\u2019s own set.\nStudents will combine art, math, and technical concepts as they create a design that is meaningful to them while dimensioning it to fit the physical objects they have measured. The designs are likely to be quick to print (less than 15 min) allowing for multiple iterations while students improve and refine their designs.\nThis project is structured to follow the Engineering Design Process (EDP), a process that helps designers in any discipline create solutions to problems. While there are many ways that people solve problems, designers often use the EDP because it offers a clear roadmap for them to follow as they work towards a solution.\n\nFirst, designers Define the challenge they are facing, then Learn more about the problem and Explore existing solutions. It\u2019s tempting to skip these first few steps and head straight into brainstorming, but don\u2019t! When designers take the time to understand the problem clearly, they come up with much better solutions. The Design phase is where brainstorming happens. Designers brainstorm multiple possible solutions, then develop a few of them into more detailed plans. Encourage your students to plan at least 3 of their potential ideas before choosing a design direction and starting to Create a product based on their design. If they hit any roadblocks trying to create their first design choice, they\u2019ll be able to revisit their alternate design plans and choose a new direction - without starting from scratch. Designers then take time to Observe their design and see how they can Improve it. We strongly recommend that students have an opportunity for at least 2 Create-Observe-Improve cycles. When students feel they have to \u201cget it right the first time,\u201d they are less willing to take risks and be creative. By repeating the cycle, they have a chance to fix flaws and adopt successful ideas from classmates, and in fact, they\u2019re practicing what professional designers really do. A good design cycle builds in time for the designer to Reflect on their product and the process of making it, looking for learning habits and insights that will help in future challenges. When the work is complete, designers are ready to Share. They bring their work into the real world, by posting, publishing, presenting, or exhibiting - or giving or selling if appropriate! - what they\u2019ve made. For students working through a design process, a real audience helps students connect their learning and work experiences to the world outside the classroom. For Makerspaces and Maker projects, in particular, this is hugely important for building confidence in every student and a sense of community among Makers. To help students work through this process, be sure to build in planned \u201cstops\u201d at each step for students to record their thoughts and progress as they work through product iteration cycles.\nEssential Question(s)\nHow can the Engineering Design Process be used to help students be effective and creative inventors?\nHow are measuring and math skills important in product design?\nSkills Practiced:\nMeasuring with a ruler or caliper\nCalculating Area and Volume\nThe Engineering Design Process\n3D modeling in Tinkercad\nTime Required: 2-3 Hours design time\nMaterials Needed:\nSketch paper and pencils\nTinkercad\nMiscellaneous prototyping materials (paper, cardstock, foam sheets, markers, etc.)\n3D Printer and filament", "title": "Earbud Buddies", "url": "https://www.instructables.com/id/Earbud-Buddies/", "steps": [{"step": 1, "steps_text": "Context\nIt is likely that students have had contact with audio \u201cearbud\u201d headphones, and experienced the problem of a tangled cord. What if they could solve this problem for their own earbuds, and create a device that is fun and useful? The Engineering Design Process and 3D modeling are both very useful tools for designers and problem-solvers. This activity is simple, fun, and also includes measuring and calculating area and volume.\nThe problem/challenge\nDefinition: students use Tinkercad to design Earbud Buddies with custom features. IN this activity, the designs are expected to be relatively flat, unless otherwise specified by the teacher.\nCriteria:\nStudents choose 3 of the following to include in their Earbud Buddy\nFit a specified set of earbuds and hold the cord for storage\nKeep the cord from unraveling when stored in a backpack/bag\nInclude a motif that is personal to the designer, such as a character, object, or shape\nOptional: be usable for a variety of earbud designs\nConstraints:\nOverall Earbud Buddy size and print time\nOverall area must be no more than 5 square inches\nOverall volume must be no more than 1 cubic inch\nPrint time varies with the level of detail. A large earbud buddy with text and cutouts could take 30 minutes to print. A simple buddy with few cutouts will take less time, about 20 minutes or less.\nIf the students have access to the slicer software, then they can use it to check the print time for their designs, and a print time limit can be set.\nLearning /product Goals\nStudents will make Earbud Buddies for their own use, for a specific need defined in the classroom, or for sharing in the classroom.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research:\nLook at existing earbuds on audio headphones. Look online for examples of \u201cearbud holders\u201d. Look at the packaging that earbuds come in and any storage devices they may come with. Ask other students and adults how they keep their headphone wires neat and prevent tangling. Students can list what they like/find useful and don\u2019t like /don\u2019t find useful about existing products.\n2. Collect:\nHave students create an inspiration page where they sketch and/or document a few of the earbud holders they like, such as a blog*, Google Docs, a notebook, poster, etc.\n* Padlet is also great for this - it's a free digital pin board in which users can share ideas and inspiration (including links and photos) while collaborating.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "1. Design:\nA good place to start for this activity is a flat design where the earbuds are some significant feature, such the eyes on a character, a pair of flowers, a bird sitting on eggs, ears on an animal, or speakers on a boombox. The major parts that students design are the shape, the features that hold the earbuds, the place to wind the cord, and a way to hold the loose end of the cable. Students brainstorm ideas using the Project Definition and the Criteria and Constraints specified in the \u201cDefine\u201d step. Use the inspiration page created in \u201cLearn / Explore\u201d step as a reference.\nOption A: draw designs on how the Earbud Buddy will look and/or function. Use paper, whiteboard, drawing apps.\nOption B: Build simple models using crafting materials (paper, glue, clay, pipe cleaners, etc.) to show look and/or function.\nOption C: Let the students play around in Tinkercad to get familiar with the program and make practice models.\nIt is important that students create at least three different ideas. Many will want to go with their first idea. Encourage them to make life-size sketches of the Earbud Buddy so they can start thinking about the details, then play around with ideas and see what comes of it. Generating ideas can be hard work, but putting in the time and effort can produce great creative and unexpected results.\nSome examples:\nA. Owl:\nDimensions:\nWidth - 1 \u215d in (45 mm)\nHeight - 2 in (54 mm)\nFeatures:\nWrap around body\nHoles for eyes to hold earbuds\nHole in the nose to hold headphone jack.\nB. Bear:\nDimensions:\nWidth - 1 \u00be in (45 mm)\nHeight - 1 \u215d in (54 mm)\nFeatures:\nWrap around body\nHoles to cradle ears\nC. Fish:\nDimensions:\nWidth - 3 \u215d in ( mm)\nHeight - 2 in ( mm)\nFeatures:\nWrap around body\nHoles for eyes to hold earbuds.\nHole in the tale to hold headphone jack.\nCan be wrapped horizontally or vertically.\n2. Choose a Direction:\nHave the students choose a design that meets the criteria of the project. Sketch these designs and emphasize that this is their design \u201cdirection\u201d and that the design they create may be different as they learn more about the tools available and iterate through the design cycle.", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "1. Choose a motif.\na. You can create a life-size sketch drawing of the earbud buddy, outline and color it in with a dark color sharpy, and scan in the image. This image can then be converted into an SVG file, and imported into Tinkercad for use.\nb. You may also use Scribble Block to make your own shapes.\n2. Decide whether earbuds will be held in holes or cradled.\n3. Measure:\nCord diameter\nMicrophone length\nThe rubber part of the bud\n4. Set the overall shape hight to \u215b\u201d (.125).\n5. Add holes/cradles for earbuds.\n6. Add notch for the end of the cord.\n7. Make the design yours - add more detail, text, refine shape, etc.\n8. Check size against the constraints and modify as needed.\n9. Use a 3D printer slicer program to check build time and volume, and modify the design as needed.\n10. 3D Print the Earbud buddy by exporting the file as an STL. You can also export as an SVG for laser cutting. (Try exporting small SVG details to create cricket stickers to add to your Earbud Buddies.)\n11. Try it out! Does it hold the earbuds, keep the cord neat, and look good to you?\n12. Iterate through the design cycle going back to Step 7 in this list.", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "Try out the new Earbud Buddies! See how well they hold the student\u2019s designated Earbuds, and if they work for others as well. Encourage students to share their creations and come up with ideas for new devices.\nIt\u2019s a good idea for students to have an opportunity for at least two design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\nProvide stopping points for the class where students can observe, evaluate, and document their design.\nCreate documentation guidelines for students to record their thoughts and progress as they work through product iteration cycles. This can serve as a formative assessment.\nA description/sketch of the design\nHow well the design met the project definition, criteria, and constraints\nWhat students liked about their design\nWhat students want to improve on the design\nSuggestions for improvement\nCriteria:\nStudents choose 3 of the following to include in their Earbud Buddy\nFit a specified set of earbuds and hold the cord for storage\nKeep the cord from unraveling when stored in a backpack/bag\nInclude a motif that is personal to the designer, such as a character, object, or shape\nOptional: be usable for a variety of earbud designs\nConstraints:\nOverall Earbud Buddy size and print time\nOverall area must be no more than 5 square inches\nOverall volume must be no more than 1 cubic inch\nPrint time varies with the level of detail. A large earbud buddy with text and cutouts could take 30 minutes to print. A simple buddy with few cutouts will take less time, about 20 minutes or less.\nIf the students have access to the slicer software, then they can use it to check the print time for their designs, and a print time limit can be set.\nDownload pdf with possible prompts for Steps 5 and Step 6", "step_imgs": [], "step_title": "Step 5: Observe, Improve, Iterate"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.\nDownload pdf with possible prompts for Steps 5 and Step 6:", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "Give the students and opportunity to share their Earbud Buddies with the class or some other community. Options for sharing include presentation, demonstration, blog or online post, video clip, physical display, family events, and maker fairs, or in the use for which it was intended.", "step_imgs": [], "step_title": "Step 7: Share"}, {"step": 8, "steps_text": "Examples:\nDesign a simple device that wraps up an extra cord and effectively shortens the cord when using the earbuds. This could be a feature added to the storage device or a standalone item.\nCreate an Earbud Buddy with more 3D features such as\nExplore entrepreneurship concepts - students can create product pitches and filmed commercials for their Earbud Buddies.\nWe hope you had fun designing and sharing your Earbud Buddies. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in?\nSend us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nList of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 8: Project Extensions"}], "channel": "3D Printing"}, {"category": "Technology", "description": "When your building and prototyping circuits , one of the most essential tools you'll need is a variable power adapter. And if you're going to make one you may as well use a Super Nintendo Controller to put it into!\nDon't worry, I didn't use a genuine one, it's a cheap knock off that you can buy on eBay for a few bucks. There were a few challengers with ensuring all of the components could fit inside the controller but with a little planning I managed to jam it all inside the controller.\nI used an old 3.7v phone battery to run the power supply. These are usually easy to find (just ask around and you're sure to find someone with a few old phones lying around) and small enough to fit inside the controller. You can also easily charge them with a cheap charging module from eBay.\nSo without further ado - lets get cracking", "title": "Variable Power Supply V2", "url": "https://www.instructables.com/id/Variable-Power-Supply-Nintendo-Style/", "steps": [{"step": 1, "steps_text": "Parts\n1. Super Nintendo Controller - eBay\n2. Voltage display - eBay\n3. Voltage regulator - eBay\n4. 10K pot - eBay\n5. 3.7v phone battery - just grab out out of an old phone or you can buy them from eBay\n6. Banana plugs: Buy more if you need to make different connections to power your projects\na. Sockets - eBay\nb. Inputs - eBay\n7. You can also buy these banana plug connectors which will allow you to attach the power supply different ways\nalligator clips - eBay, hook clip - eBay, probe - eBay\n8. SPDT switch - eBay\n9. Charging module - eBay\n10. Wire\nTools\n1. Soldering Iron\n2. Pliers\n3. Screwdriver\n4. wire cutters\n5. Dremel (not really necessary but it always comes in handy)\n6. Super glue\n7. Drill", "step_imgs": ["https://cdn.instructables.com/FUU/79O4/JT4TM3W1/FUU79O4JT4TM3W1.LARGE.jpg", "https://cdn.instructables.com/FO2/F153/JT4TM2XJ/FO2F153JT4TM2XJ.LARGE.jpg", "https://cdn.instructables.com/F7V/PBZY/JT2SNSBA/F7VPBZYJT2SNSBA.LARGE.jpg", "https://cdn.instructables.com/F0L/ULLB/JT2SNSAU/F0LULLBJT2SNSAU.LARGE.jpg", "https://cdn.instructables.com/FNB/THHV/JT2SNSAB/FNBTHHVJT2SNSAB.LARGE.jpg", "https://cdn.instructables.com/FAK/9X8J/JT2SNS8W/FAK9X8JJT2SNS8W.LARGE.jpg"], "step_title": "Step 1: Parts and Tools"}, {"step": 2, "steps_text": "First step is to open up the case and remove the guts\nSteps:\n1. Un-screw and remove the back of the controller\n2. Remove the circuit board and cord. You don't need this so you can just keep the wire for another project and throw away the circuit board\n3. Remove the D pad and all the other buttons and place somewhere where you won't lose them.\n4. Inside the controller are a lot of small plastic pins, gussets, and other plastic parts that you need to remove. You want to make as much room as possible inside the case so trim these off. Make sure though you don't cut the plastic screw holders though", "step_imgs": ["https://cdn.instructables.com/FE1/594X/JT4TM3W3/FE1594XJT4TM3W3.LARGE.jpg", "https://cdn.instructables.com/FQ6/CLN7/JT2SNS4X/FQ6CLN7JT2SNS4X.LARGE.jpg", "https://cdn.instructables.com/FKW/55X4/JT2SNS51/FKW55X4JT2SNS51.LARGE.jpg", "https://cdn.instructables.com/F6Y/PVSS/JT2SNS6G/F6YPVSSJT2SNS6G.LARGE.jpg", "https://cdn.instructables.com/FEF/42FI/JT2SNS6J/FEF42FIJT2SNS6J.LARGE.jpg"], "step_title": "Step 2: Modding the Case"}, {"step": 3, "steps_text": "Now that you have a empty controller, you now need to work out how your going to stick everything inside. Make sure you also consider all of the wires that will be needed as well, these can take up a surprisingly lot of room.\nSteps:\n1. Place all of the components inside the case\n2. Move them around and try and figure out what is the best place for each of them.\n3. I decided to put the banana plugs, switch and pot into the 4 button holes which worked really well.\n4. Once you have worked out how everything is going to fit, you now need to start to add the components inside the controller", "step_imgs": ["https://cdn.instructables.com/FOG/EW9J/JT2SNSAJ/FOGEW9JJT2SNSAJ.LARGE.jpg"], "step_title": "Step 3: Working Out How to Fit Everything Inside"}, {"step": 4, "steps_text": "The banana plugs allow you to change over connections. For example, you might need power for a bread board so would need jumper leads attached to the male banana plug. Other times you might just want to attach the power supply to the ends of wires soyou'd swap out the banan plugs and use ones with aligator clips attached.\nSteps:\n1. As the banana plugs are too long to fit inside the controller, you'll need to slightly modify them. The first thing to do it to remove one of the small, plastic spaces on the banana plug\n2. Next, add some super glue to the inside of the button hole on the controller and push the banana plug in. It should fit nice and snug.\n3. Add the small washer and solder ring to the small bolt and attach the nut. You'll now notice that the bolt is too long. Use a pair of pliers to trim it flush with the nut\n4. Do the exact same for the other one", "step_imgs": ["https://cdn.instructables.com/FL4/TM4O/JT2SNS6N/FL4TM4OJT2SNS6N.LARGE.jpg", "https://cdn.instructables.com/F9R/B37X/JT2SNS6S/F9RB37XJT2SNS6S.LARGE.jpg", "https://cdn.instructables.com/FX8/U8XZ/JT2SNS6W/FX8U8XZJT2SNS6W.LARGE.jpg", "https://cdn.instructables.com/F40/QSGD/JT2SNS6Z/F40QSGDJT2SNS6Z.LARGE.jpg", "https://cdn.instructables.com/F9J/7FLO/JT2SNS74/F9J7FLOJT2SNS74.LARGE.jpg", "https://cdn.instructables.com/FPT/1G42/JT2SNS7T/FPT1G42JT2SNS7T.LARGE.jpg", "https://cdn.instructables.com/FUG/C3YF/JT2SNS7Y/FUGC3YFJT2SNS7Y.LARGE.jpg", "https://cdn.instructables.com/FTA/MKWZ/JT2SNS80/FTAMKWZJT2SNS80.LARGE.jpg", "https://cdn.instructables.com/F9O/G9BP/JT2SNS83/F9OG9BPJT2SNS83.LARGE.jpg"], "step_title": "Step 4: Adding the Banana Plugs"}, {"step": 5, "steps_text": "The switch is an on/off switch and the pot is how you change the voltage on the power supply.\nSteps:\n1. Place the switch into one of the button holes, add the washer that comes with the switch and fasten with the nut.\n2. For the pot, you will need to slightly mod the back of the button hole. With an exacto knife, remove the small, plastic button support completly\n3. Place the pot into the hole, add the small washer and fasten with the nut provided.", "step_imgs": ["https://cdn.instructables.com/FAK/9X8J/JT2SNS8W/FAK9X8JJT2SNS8W.LARGE.jpg", "https://cdn.instructables.com/FNB/THHV/JT2SNSAB/FNBTHHVJT2SNSAB.LARGE.jpg", "https://cdn.instructables.com/F88/5NW0/JT2SNSA7/F885NW0JT2SNSA7.LARGE.jpg", "https://cdn.instructables.com/FH3/ASYW/JT2SNSAD/FH3ASYWJT2SNSAD.LARGE.jpg", "https://cdn.instructables.com/FEP/F1CR/JT2SNSAH/FEPF1CRJT2SNSAH.LARGE.jpg"], "step_title": "Step 5: Adding the Switch and Pot"}, {"step": 6, "steps_text": "Steps:\n1. First place the module into the contoller and mark where the micro usb will exit the controller\n2. With a small drill bit, drill out the area for the female usb head on the module\n3. File the hole so it's smooth and remove any excess plastic\n4. If the usb fits, add a little superglue to the back of the module and put it into place.\n5. Leave to dry for 10 minutes", "step_imgs": ["https://cdn.instructables.com/FFE/68TO/JT2SNSAL/FFE68TOJT2SNSAL.LARGE.jpg", "https://cdn.instructables.com/FLH/68NB/JT2SNSAP/FLH68NBJT2SNSAP.LARGE.jpg", "https://cdn.instructables.com/FW0/6RQ6/JT2SNSAQ/FW06RQ6JT2SNSAQ.LARGE.jpg"], "step_title": "Step 6: Adding the Power Module"}, {"step": 7, "steps_text": "I found a good source of phone batteries was to raid the recycle box for phones at work. I managed to pick-up 4 batteries last time I checked and they all worked fine.\nSteps\n1. To be able to connect the battery up to the charging module, you\u2019ll need to solder a couple of wires to the battery terminals. First, add a little solder to each of the small terminals on the battery. You should be able to tell positive and negative as they will be indicated on the battery\n2. Next, tin a couple of small wires and solder them to the battery\n3. You will now be able to connect the battery to the charging module in the next step. Might also be a good idea to check the battery if it a 2nd hand one to make sure it works ok as well.", "step_imgs": ["https://cdn.instructables.com/FGZ/FXDM/JT4TUUZZ/FGZFXDMJT4TUUZZ.LARGE.jpg", "https://cdn.instructables.com/FPJ/FLTH/JT4TUV1T/FPJFLTHJT4TUV1T.LARGE.jpg", "https://cdn.instructables.com/F0L/ULLB/JT2SNSAU/F0LULLBJT2SNSAU.LARGE.jpg", "https://cdn.instructables.com/FTG/3IG8/JT2SNSAY/FTG3IG8JT2SNSAY.LARGE.jpg", "https://cdn.instructables.com/FOY/ZME6/JT2SNSDR/FOYZME6JT2SNSDR.LARGE.jpg"], "step_title": "Step 7: Battery"}, {"step": 8, "steps_text": "It took me a little while to work out how I was going to incorporate the voltage display on thecontroller. Initially I thought I would just stick it on top of the controller but decided in the end to cut a hole into the controller and have the meter coming out of it.\nSteps:\n1. With an exacto knife, carefully mark out the area to remove. I just placed the voltage meter onto the top of the controller and went around with the exacto knife and scored the plastic\n2. Next, go over the scoring again a few times to make the cuts deeper. The plastic is thin so you should be able to make the cuts easily.\n3. To finish off the cuts I used a Stanley knife and pushed against each of the cuts. The heavier blade went through the plastic and I was able to remove the piece by just going around with the Stanley knife.\n4. Use the exacto knife to clean-up the edges of the cut and push into place the voltage meter.\n5. Lastly, add a little superglue and glue into place", "step_imgs": ["https://cdn.instructables.com/F7U/M9BV/JT2SNSB6/F7UM9BVJT2SNSB6.LARGE.jpg", "https://cdn.instructables.com/F7V/PBZY/JT2SNSBA/F7VPBZYJT2SNSBA.LARGE.jpg", "https://cdn.instructables.com/FCH/HBHG/JT2SNSBD/FCHHBHGJT2SNSBD.LARGE.jpg", "https://cdn.instructables.com/FGX/ORG8/JT2SNSBF/FGXORG8JT2SNSBF.LARGE.jpg", "https://cdn.instructables.com/FQJ/JXMF/JT2SNSB3/FQJJXMFJT2SNSB3.LARGE.jpg", "https://cdn.instructables.com/F5V/XGJZ/JT2SNSCA/F5VXGJZJT2SNSCA.LARGE.jpg"], "step_title": "Step 8: Voltage Display and Gluing the Buttons Into Place"}, {"step": 9, "steps_text": "Now you have everything in place, it's time do start wiring. I have included a wire diagram as well which should help you understand how the components are connected\nSteps:\n1. Solder 3 wires to the pot and then to the power supply module\n2. On the out put solder points on the power supply board, solder a wire to each and then solder these to the solder points on the banana plugs\n3. Solder a couple of wires to the input solder points on the power supply board and connect these to the battery solder points on the charging module. Make sure the polarities are correct\n4. Solder a couple of wires to the battery and solder one to the switch and one to the charging module, making sure the polarity is correct.\n5. Add another wire to the switch and connect this to the charging module.\n2. Before you totally close the case, test to make sure the power supply works.\n3. Carefully close the controller and add all of the screws back into place.", "step_imgs": ["https://cdn.instructables.com/F72/OR5V/JT4TM1CM/F72OR5VJT4TM1CM.LARGE.jpg", "https://cdn.instructables.com/FD9/MXLG/JT2SNSCC/FD9MXLGJT2SNSCC.LARGE.jpg", "https://cdn.instructables.com/FS6/TZ40/JT2SNSCE/FS6TZ40JT2SNSCE.LARGE.jpg", "https://cdn.instructables.com/FYS/9KUV/JT2SNSCJ/FYS9KUVJT2SNSCJ.LARGE.jpg", "https://cdn.instructables.com/F6K/1W48/JT2SNSDE/F6K1W48JT2SNSDE.LARGE.jpg", "https://cdn.instructables.com/FP6/1G1J/JT2SNSDG/FP61G1JJT2SNSDG.LARGE.jpg", "https://cdn.instructables.com/F29/J5NU/JT2SNSDT/F29J5NUJT2SNSDT.LARGE.jpg", "https://cdn.instructables.com/FXO/DA6D/JT2SNSDV/FXODA6DJT2SNSDV.LARGE.jpg"], "step_title": "Step 9: Wiring"}, {"step": 10, "steps_text": "If you want to connect power to a breadboard, then this is how you make a banana plug connector. You can also buy different types of connectors on eBay and I have added a couple of links to these\nSteps:\n1. First trim and tin the ends of a piece of red wire and a piece of black wire\n2. Place a male banana plug end onto one of the tinned ends and secure into place.\n3. Grab a couple of jumper wires for your breadboard and cut one end off\n4. Tin the ends and add some heat shrink to each\n5. Solder together the jumper wire and the piece of wire and cover the solder point with the heat shrink\nThat\u2019s it! You are now ready to use your power supply to give your projects some POWER!", "step_imgs": ["https://cdn.instructables.com/FO2/F153/JT4TM2XJ/FO2F153JT4TM2XJ.LARGE.jpg", "https://cdn.instructables.com/FCS/JIP6/JT4TM2Z7/FCSJIP6JT4TM2Z7.LARGE.jpg", "https://cdn.instructables.com/F38/OCSE/JT4TM37S/F38OCSEJT4TM37S.LARGE.jpg", "https://cdn.instructables.com/FLD/G9TS/JT4TM34H/FLDG9TSJT4TM34H.LARGE.jpg", "https://cdn.instructables.com/FYX/EPDP/JT4TM37T/FYXEPDPJT4TM37T.LARGE.jpg", "https://cdn.instructables.com/F6X/1M1I/JT4TM3B6/F6X1M1IJT4TM3B6.LARGE.jpg", "https://cdn.instructables.com/FJ9/GSTO/JT4TM3GC/FJ9GSTOJT4TM3GC.LARGE.jpg", "https://cdn.instructables.com/FHV/CSVB/JT4TM3VZ/FHVCSVBJT4TM3VZ.LARGE.jpg"], "step_title": "Step 10: Making a Banana Plug Connector"}], "channel": "Electronics"}, {"category": "Technology", "description": "Arduino microcontrollers are a great addition to model railroading, especially when dealing with automation. Here is a simple and easy way to get started with model railroad automation with Arduino.\nSo, without any further ado, let's get started!", "title": "Simple Automated Model Railway Layout | Arduino Controlled", "url": "https://www.instructables.com/id/Simple-Automated-Model-Railway-Layout-Arduino-Cont/", "steps": [{"step": 1, "steps_text": "", "step_imgs": [], "step_title": "Step 1: Watch the Video"}, {"step": 2, "steps_text": "Here is the list of all the parts and components required for this project:\nAn Arduino microcontroller\nAn L293N motor driver module\nA 'sensored' track\nA 12-volt DC power source with a current capacity of at least 1A(1000mA)\n6 male to female jumper wires (3 to connect the motor driver's signal inputs to the output pins of the Arduino board and the other 3 to connect the 'sensored' track's terminals to the Arduino board.)\n4 male to male jumper wires(2 to connect the motor driver board to power and the other two to connect the motor drive's outputs to track power.)\nA crosshead screwdriver\nA computer(obviously ; )\nA suitable USB cable to connect the Arduino board to the computer", "step_imgs": ["https://cdn.instructables.com/FBP/0OTT/JT4TP6PA/FBP0OTTJT4TP6PA.LARGE.jpg"], "step_title": "Step 2: Get All the Stuff"}, {"step": 3, "steps_text": "Make sure to go through the program carefully to understand how it works, later it will be fun to tweak it and make your own modifications.", "step_imgs": ["https://cdn.instructables.com/FRH/I5CD/JT4TP6OF/FRHI5CDJT4TP6OF.LARGE.jpg"], "step_title": "Step 3: Program the Arduino Microcontroller"}, {"step": 4, "steps_text": "Make an oval loop of track as shown in the picture.", "step_imgs": ["https://cdn.instructables.com/FTJ/O8JE/JT4TP6PB/FTJO8JEJT4TP6PB.LARGE.jpg"], "step_title": "Step 4: Set Up the Layout"}, {"step": 5, "steps_text": "Remove the jumper connector from the pin marked 'ENB'.\nMake the following connections:\nConnect the 'ENB' pin to pin D10 of the Arduino board.\nConnect the 'IN 3' pin to the pin D8 of the Arduino board.\nConnect the 'IN 4' pin to the pin D9 of the Arduino board.", "step_imgs": ["https://cdn.instructables.com/FPZ/52TY/JT4TP6PC/FPZ52TYJT4TP6PC.LARGE.jpg", "https://cdn.instructables.com/FDT/ZOLQ/JT4TP6PH/FDTZOLQJT4TP6PH.LARGE.jpg"], "step_title": "Step 5: Make Wiring Connections to the Motor Driver"}, {"step": 6, "steps_text": "Connect the output terminal's wires to the power feeder connector.", "step_imgs": ["https://cdn.instructables.com/F2I/X5KH/JT4TP6PN/F2IX5KHJT4TP6PN.LARGE.jpg"], "step_title": "Step 6: Connect Track Power Wires to the Motor Driver"}, {"step": 7, "steps_text": "Make the following wiring connections:\nConnect the VCC pin to +5-volt pin of the Arduino board.\nConnect the GND pin to the GND pin of the Arduino board.\nConnect the OUT pin to the A0 pin of the Arduino board.", "step_imgs": ["https://cdn.instructables.com/F73/FKNY/JT4TP6PP/F73FKNYJT4TP6PP.LARGE.jpg"], "step_title": "Step 7: Connect the 'sensored' Track to the Arduino"}, {"step": 8, "steps_text": "Use a re-railer to make sure that the wheels of the train sit perfectly well on the tracks.", "step_imgs": ["https://cdn.instructables.com/F67/ZV41/JT4TP6PT/F67ZV41JT4TP6PT.LARGE.jpg"], "step_title": "Step 8: Place the Train on the Tracks"}, {"step": 9, "steps_text": "Make sure no wiring connections are loose. Connect the Arduino boards power input to the power supply and turn it on.", "step_imgs": ["https://cdn.instructables.com/FHF/EH88/JT4TP6PW/FHFEH88JT4TP6PW.LARGE.jpg"], "step_title": "Step 9: Connect to Power and Turn It On"}, {"step": 10, "steps_text": "", "step_imgs": [], "step_title": "Step 10: Sit Back and Watch Your Train Running"}], "channel": "Arduino"}, {"category": "Technology", "description": "After building some of these:\nhttps://www.instructables.com/id/Matrix-LED-Light/\ni've decided to bring the candle onto another level. While the first one looks good, it does look a little bit too much like the original. Nothing against the first design. It looks cool and modern.\nMy new approach is a little bit warmer and uses different materials. Still quite geometrical.\nIt \"feels\" warmer, just by breaking the light at the edges of the concrete, which makes a passive light.\nSo ... this is my entry to the \"REMIX\"-Contest. Would be happy, if you vote for me.", "title": "Ring of Fire [REMIX]", "url": "https://www.instructables.com/id/Ring-of-Fire-REMIX/", "steps": [{"step": 1, "steps_text": "Wood, concrete, brassrods and some electronic parts. And wood glaze, if you like.\nA router/trimmer and basic woodworking tools\na 160x160mm piece of wood (about 18mm thick)\n3D-Printer\n3M 8402 silicon Tape (or another idea, like grease or silicon-spray)\nquickcrete, (concrete)\narduino pro micro 16Mhz (8Mhz doesn't work)\nTP4506 LiPo-loader\nAdafruit LED-Matrix (yellow) and PWM Driver\n0.8mm Brassrods\ndouble-sided gluetape\nhotglue gun (helps a lot)\nthin wire\nsmall switch\n18650 flat LiPo (40mm wide fits perfect. 2000mha)\nI've bought all electronics at EXP-Tech. The TP4506 and the pro micro where bought at ali-express.\nBrassrods came from conrad-electronic. All other stuff (except the 3M 8402) where bought at a warehouse.", "step_imgs": ["https://cdn.instructables.com/FJR/5O87/JT4TNBNA/FJR5O87JT4TNBNA.LARGE.jpg"], "step_title": "Step 1: Tools and Material"}, {"step": 2, "steps_text": "This took a lot of tries. How to cast a ring with rods inside and with nothing but PLA in my 3D-Printer.\nThe ring is made of one piece of concrete and the rods are in the concrete. Put in place before casting.\nTo get it in one piece, i had to print several parts which can be brake away after casting. And i had to find a \"thing\" which makes it more easy to seperate the 3D-printed parts from the concrete. Did i mention the rods? Well, those where another problem.\nTo start building the casting-form you'll need to print every part. Some parts have numbers, which equal to the number of prints of each part.\nI'm using Material4Print with 30% infill on an anycubic i3 mega.\nEvery part is separated into one file, so you can position it to your possibilities on your printer.", "step_imgs": ["https://cdn.instructables.com/FOP/UYCI/JT4TMN1A/FOPUYCIJT4TMN1A.LARGE.jpg", "https://cdn.instructables.com/FE2/A7NX/JT4TMN18/FE2A7NXJT4TMN18.LARGE.jpg"], "step_title": "Step 2: The Ring (3D Parts)"}, {"step": 3, "steps_text": "The pictures give you an idea of how to build it.\nYou need a solid base. Some flat piece of wood (\"Siebdruckplatte\" in german).\nTo get a smooth finish i've wrapped all parts with 3M 8402 Tape. It's hard to get and quite expensive. But it works perfectly. And i've pre-punched the holes for the brassrods.\n(My first idea was to use seven rods. But in the end it looks better with just four. And it is more interesting to build.)\nEverything wrapped, try to solve the puzzle. The long helper can be used to get a real straight line in the \"open\" parts. Those parts, which have to hold the rods in place.\nSo put everything in place, screw the parts without rods onto your base, prepare your \"rod-parts\", bring them back to your base ... and screw them on. See the pictures for details.\nAnd keep in mind, that you have to cut the tape later at the pre-pressed parts. Those have to be removed after casting or you won't be able to get the PLA from your concrete-ring. Hard to describe, but you'll see the problem, when you have build it.\nIn the last \"after casting\" picture, you see the piece of PLA and the green tape, which have to be removed.\nBring the cleaned rods into position. Be carefull. Those small rods are quite weak. Position 1, 3, 5 and 7.\nIf you like to use all 7, you can do that, too. But i couldn't get all 7 straight. So missing every second part is a good option.\nBend the end a little bit. The end should not touch the casting-form. And after that, you should cover those rods.", "step_imgs": ["https://cdn.instructables.com/F2U/GR8Q/JT4TMNZR/F2UGR8QJT4TMNZR.LARGE.jpg", "https://cdn.instructables.com/F44/BRA2/JT4TMNZS/F44BRA2JT4TMNZS.LARGE.jpg", "https://cdn.instructables.com/FRE/5BKW/JT4TMOLS/FRE5BKWJT4TMOLS.LARGE.jpg", "https://cdn.instructables.com/F8J/0TYY/JT4TMP09/F8J0TYYJT4TMP09.LARGE.jpg", "https://cdn.instructables.com/FKM/OUHD/JT4TMOY6/FKMOUHDJT4TMOY6.LARGE.jpg", "https://cdn.instructables.com/FKJ/PWD7/JT4TMOZI/FKJPWD7JT4TMOZI.LARGE.jpg", "https://cdn.instructables.com/F73/MTTR/JT4TMOYX/F73MTTRJT4TMOYX.LARGE.jpg"], "step_title": "Step 3: Building the Casting Form"}, {"step": 4, "steps_text": "Quickcrete is on of my favourite things in the last two years. Just mix it quite liquid. Just as liquid as something you would still be able to suck through a big straw.\nYou'll need about 500g of concrete. Well, you don't need that much, but it is very much easier if you have too much concrete. Mix it, stir it and get ready to cast.\nCasting needs some preperation. Have everything in place. Some plastic to smooth the final surface. Towels. Water. Just everything you can think of what you \"might\" need.\nQuickcrete dries quick. Obvious.\nToo much isn't a problem, as long as the concrete is liquid enough. Just use a piece of plastik to smooth the surface.\nLet it dry ...", "step_imgs": ["https://cdn.instructables.com/FPR/TEDI/JT4TMORA/FPRTEDIJT4TMORA.LARGE.jpg", "https://cdn.instructables.com/FYX/NE7E/JT4TMOWP/FYXNE7EJT4TMOWP.LARGE.jpg", "https://cdn.instructables.com/F0F/7UO2/JT4TMPOV/F0F7UO2JT4TMPOV.LARGE.jpg", "https://cdn.instructables.com/FVC/AF9N/JT4TMPOW/FVCAF9NJT4TMPOW.LARGE.jpg"], "step_title": "Step 4: Casting"}, {"step": 5, "steps_text": "How long is long enough? Even it is quickcrete, i let it dry abou 48 hours before i try to demold it.\nThat's just my tip.\nStart by getting rid of the screws and try gently to get the base off. Pull the helpers off and find all concrete drops which could lead into problems, when you try to push the PLA-Parts away from the concrete.\nAt first, you should remove the little \"helpers\" inside, which have hold the brass into it's position.\nAND cut or remove the tape at that 3 positions.\nTo remove the shell, start on the outer side removing the first parts.This is the most exiting part of this instructable.\nBe gently, use \"the force\" ... just don't use too much strength.\nSee the pictures to get a better idea. The inner parts have to be pushed downwards.\nSo now let it dry for another 24 hours. After that, you can destroy the surface a little bit with a file. Just as you like.", "step_imgs": ["https://cdn.instructables.com/FKH/RZ0G/JT4TMQ3R/FKHRZ0GJT4TMQ3R.LARGE.jpg", "https://cdn.instructables.com/F1P/6WD9/JT4TMRUO/F1P6WD9JT4TMRUO.LARGE.jpg", "https://cdn.instructables.com/F0B/1YD9/JT4TMQSX/F0B1YD9JT4TMQSX.LARGE.jpg", "https://cdn.instructables.com/FL9/5W03/JT4TMROP/FL95W03JT4TMROP.LARGE.jpg", "https://cdn.instructables.com/F5G/56S2/JT4TMRML/F5G56S2JT4TMRML.LARGE.jpg", "https://cdn.instructables.com/FYB/CBWX/JT4TMRST/FYBCBWXJT4TMRST.LARGE.jpg", "https://cdn.instructables.com/F27/Z43W/JT4TMRQR/F27Z43WJT4TMRQR.LARGE.jpg"], "step_title": "Step 5: Openening the Mold"}, {"step": 6, "steps_text": "The wood-case is made of three parts. Why three and not one?\nWell ... i'm not able to work on thicker pieces of wood. So i made it in three parts.\nWith a CNC you could probably make it in one part. With nothing but a mittersaw, jigsaw and a small router i didn't find an option. And three parted gives it a little bit extra.\nSo you need a piece of wood in (at least) 160x160x18mm and the attached router-guide (3D-print).\nBring the guide into position and draw the line a little bit away from the guide. This will be the line to cut with the jigsaw.\n-------------\nWell, you could directly use the router to cut the circle-part. But if you use the jigsaw first, the router will just have to trim the rest which will result in a better surface. And you have to make three identical parts. So using less force is allways a good idea.\n------------\nAfter using the jigsaw, glue the guide with a thin double-sided tape on to the wood.\nUse your router ro trim the rest of it.\nRemove the guide and cut the piece off. About 40mm. Mark the position on your mittersaw, becaus all parts should be equal.\nRepeat this step three times to get three equal parts. Don't worry, if the heights are a little bit different. You can use your grinding machine or your mitter saw to correct them. The circle part is important.", "step_imgs": ["https://cdn.instructables.com/FSP/JLY9/JT4TMWPO/FSPJLY9JT4TMWPO.LARGE.jpg", "https://cdn.instructables.com/FB4/1S09/JT4TMX5M/FB41S09JT4TMX5M.LARGE.jpg", "https://cdn.instructables.com/F6O/K58P/JT4TMX4L/F6OK58PJT4TMX4L.LARGE.jpg", "https://cdn.instructables.com/FQI/YGA6/JT4TMX5A/FQIYGA6JT4TMX5A.LARGE.jpg", "https://cdn.instructables.com/FMZ/SNDH/JT4TMX55/FMZSNDHJT4TMX55.LARGE.jpg", "https://cdn.instructables.com/FGD/AM2I/JT4TMX5F/FGDAM2IJT4TMX5F.LARGE.jpg", "https://cdn.instructables.com/F94/9X9F/JT4TMXFM/F949X9FJT4TMXFM.LARGE.jpg", "https://cdn.instructables.com/FJE/Y00P/JT4TMYOK/FJEY00PJT4TMYOK.LARGE.jpg"], "step_title": "Step 6: Wood - Part 1"}, {"step": 7, "steps_text": "Now we will use the router to hollow the case. Which isn't a case, yet.\nBring the inner and the outer part in position and draw a rectangle with 28x120mm.\nMill about 11 mm deep. I do this in three steps. And i allways build a guide before i start to mill.\nThis depends on your skills.\nThe inner part can be cut with a jigsaw or whatever you like to use.\nDimensions are: 11x120 mm. This doesn't have to look perfect. But it helps, when it is a little bit deeper than the other parts.\nThis will give you a little bit more space for the wires, which will soldered to the rods.\n-----------------------------\nSo the 28mm on the front and back part are 28/2. 14mm deep. The inner part is 11mm deep. This gives us 3mm space to guide the wires.", "step_imgs": ["https://cdn.instructables.com/F9E/TPWL/JT4TMYM1/F9ETPWLJT4TMYM1.LARGE.jpg", "https://cdn.instructables.com/FMA/6QXJ/JT4TMYM5/FMA6QXJJT4TMYM5.LARGE.jpg", "https://cdn.instructables.com/FH5/446D/JT4TMYYK/FH5446DJT4TMYYK.LARGE.jpg"], "step_title": "Step 7: Wood - Part 2"}, {"step": 8, "steps_text": "Time to bring them together and cut out some parts.\nWoodglue and some time. Just make sure, the circle-parts fit as perfect as possible.\nAfter drying, you can start to cut or grind it to perfect shape. I'm using my mitter saw to cut off the \"not so straight\" parts. You should end up with something like picture 2. ~140mm wide.\nNow it is time to make a hole for the rods. I'm using a drill and a hand-jigsaw.\nAnd the last part is to cut out the USB-Loader and the switch. This depends on your switch.\nEverything cut you can start to paint it, if you want to. I'm using three layers of black woodglaze.\nLetting every layer dry for at least 24hours and sanding every layer. Mayber not necessary. But that is the way i've learned it.", "step_imgs": ["https://cdn.instructables.com/FHM/4LMX/JT4TMZV6/FHM4LMXJT4TMZV6.LARGE.jpg", "https://cdn.instructables.com/F9S/FBLY/JT4TMZVX/F9SFBLYJT4TMZVX.LARGE.jpg", "https://cdn.instructables.com/FT9/LWEX/JT4TMZV4/FT9LWEXJT4TMZV4.LARGE.jpg", "https://cdn.instructables.com/F0V/X38A/JT4TMZX2/F0VX38AJT4TMZX2.LARGE.jpg", "https://cdn.instructables.com/FMK/0ARP/JT4TMZV7/FMK0ARPJT4TMZV7.LARGE.jpg", "https://cdn.instructables.com/FJ6/BCEX/JT4TMZXN/FJ6BCEXJT4TMZXN.LARGE.jpg", "https://cdn.instructables.com/FX6/XUC3/JT4TMZV8/FX6XUC3JT4TMZV8.LARGE.jpg", "https://cdn.instructables.com/FSW/G622/JT4TMZV9/FSWG622JT4TMZV9.LARGE.jpg"], "step_title": "Step 8: Wood - Part Three"}, {"step": 9, "steps_text": "Next step is to solder the matrix to the rods.\nTo be exact, it's soldering and 1mm thick double-sided tape.\nStart with the PWM-Driver and solder the pins. Add some LED-legs (or similar) to VCC, GND, SDA, SCL.\nGlue double-sided tape on it and bring it with a steady hand a keen eye onto the rods.\nBe carefull. It will look strange, if the display gets out of centre.\n(Btw i've painted the rods with silver-paint.)\nWhen in position, you can start soldering the rods to the pins (the LED-legs). It doesn't really matter, which pin goes to which rod. Just don't solder two rods together. I'm using this method:\nVCC: rod 1\nGND: rod 4\nSDA: rod 2\nSCL: rod 3\nYou should measure it before you solder the LED-Matrix to the PWM-Modul.", "step_imgs": ["https://cdn.instructables.com/FMY/NM3K/JT4TN2EQ/FMYNM3KJT4TN2EQ.LARGE.jpg", "https://cdn.instructables.com/FHP/YOR9/JT4TN2EN/FHPYOR9JT4TN2EN.LARGE.jpg", "https://cdn.instructables.com/FJX/CHF3/JT4TN2EM/FJXCHF3JT4TN2EM.LARGE.jpg", "https://cdn.instructables.com/FA4/5NB0/JT4TN2EP/FA45NB0JT4TN2EP.LARGE.jpg", "https://cdn.instructables.com/FLU/2JEO/JT4TN2FF/FLU2JEOJT4TN2FF.LARGE.jpg", "https://cdn.instructables.com/F95/5QX0/JT4TN4EE/F955QX0JT4TN4EE.LARGE.jpg"], "step_title": "Step 9: The Matrix"}, {"step": 10, "steps_text": "To bring the wood-part and the concrete-part together, i'm using glue.\n\"Pattex Kraftkleber\". I think that every strong glue will work. Clean surface and maybe a little bit sanding before attaching the glue.\nAs allways ... let it dry at least twice the time you think you should.", "step_imgs": ["https://cdn.instructables.com/F6N/DNB4/JT4TN5LY/F6NDNB4JT4TN5LY.LARGE.jpg", "https://cdn.instructables.com/FXI/F8ZR/JT4TNATZ/FXIF8ZRJT4TNATZ.LARGE.jpg", "https://cdn.instructables.com/F1C/W7XS/JT4TN5KY/F1CW7XSJT4TN5KY.LARGE.jpg"], "step_title": "Step 10: Two to One"}, {"step": 11, "steps_text": "At first flash the pro micro. Code is attached. And cut the LEDs off. This will increase the battery time.\nSo now on to the rods. Add a wire with different colour to each rod. This will make it a lot easier.\nTest them. All working? Then put hotglue into the hole.\nThe rest of this is quite selfexplaining. Batterie to the TP4506 and the TP4506 to Switch->RAW and GND at the Arduino.\nWires (rods):\nSDA to Pin2\nSCL to pin 3\nVCC to VCC\nGND to GND\nI've used doublesided Tape to glue the TP to the Batterie and used hotglue, wherever it seemed to be necessary.", "step_imgs": ["https://cdn.instructables.com/F73/9IT5/JT4TN6SR/F739IT5JT4TN6SR.LARGE.jpg", "https://cdn.instructables.com/F1Y/K5EH/JT4TN6RL/F1YK5EHJT4TN6RL.LARGE.jpg", "https://cdn.instructables.com/F0A/H937/JT4TN6TT/F0AH937JT4TN6TT.LARGE.jpg", "https://cdn.instructables.com/FMZ/9U8M/JT4TN6UG/FMZ9U8MJT4TN6UG.LARGE.jpg", "https://cdn.instructables.com/FX7/T5N5/JT4TN6T9/FX7T5N5JT4TN6T9.LARGE.jpg", "https://cdn.instructables.com/FID/KV3G/JT4TN6W6/FIDKV3GJT4TN6W6.LARGE.jpg", "https://cdn.instructables.com/FAR/YKQZ/JT4TN6S7/FARYKQZJT4TN6S7.LARGE.jpg", "https://cdn.instructables.com/FKL/TZ24/JT4TN6S8/FKLTZ24JT4TN6S8.LARGE.jpg", "https://cdn.instructables.com/FII/VJBD/JT4TN6WE/FIIVJBDJT4TN6WE.LARGE.jpg", "https://cdn.instructables.com/FD4/3APE/JT4TN6UD/FD43APEJT4TN6UD.LARGE.jpg", "https://cdn.instructables.com/FRP/96MX/JT4TN6UE/FRP96MXJT4TN6UE.LARGE.jpg", "https://cdn.instructables.com/FP9/CTV6/JT4TN6V5/FP9CTV6JT4TN6V5.LARGE.jpg"], "step_title": "Step 11: Electronics"}, {"step": 12, "steps_text": "The only thing missing is a cover. This is up to you. PVC, Metall, Wood ... just don't use PLA. The battery get's warm while loading and a thin layer of PLA could deform.\nSome feets to get a floating look and that's it.\n---------------------\nBy now i've made four of these. And every one went a little better. Just some small changes made it much easier.\nAll changes are in this instructable. It takes about 6 hours +drying time to build one. So this can take a week.\nAll my electronic tests can be found in the previous instructable:\nhttps://www.instructables.com/id/Matrix-LED-Light/\nThank you for reading. Hoping my english is getting better.\nAnd, if you like, please vote for me :)", "step_imgs": ["https://cdn.instructables.com/FL2/ZCM3/JT4TN96A/FL2ZCM3JT4TN96A.LARGE.jpg", "https://cdn.instructables.com/FRX/UP4E/JT4TN959/FRXUP4EJT4TN959.LARGE.jpg", "https://cdn.instructables.com/FWH/QCHX/JT4TN969/FWHQCHXJT4TN969.LARGE.jpg", "https://cdn.instructables.com/FD1/USQD/JT4TN972/FD1USQDJT4TN972.LARGE.jpg", "https://cdn.instructables.com/FLK/G8JM/JT4TN956/FLKG8JMJT4TN956.LARGE.jpg", "https://cdn.instructables.com/FIS/VDW2/JT4TN971/FISVDW2JT4TN971.LARGE.jpg", "https://cdn.instructables.com/FTP/5PJR/JT4TN976/FTP5PJRJT4TN976.LARGE.jpg", "https://cdn.instructables.com/FG4/KRBP/JT4TN975/FG4KRBPJT4TN975.LARGE.jpg"], "step_title": "Step 12: Final Thoughts"}], "channel": "Arduino"}, {"category": "Technology", "description": "In my first Instructable Motion Activated Automatic LED Stair Lights with Arduino I mentioned the use of \"Cooperative Multitasking\". So what is it and why is it helpful?\nThis Instructable attempts to answer the \"what is it\" and \"why is it helpful\" question with a simple example that step by step builds up into a more complex example. The end result will hopefully answer an additional question being \"Cool! How can I do it?\".\nAs a bonus we will end up with a project consisting of some randomly blinking LED's that will be almost as mesmerizing as a good old log fire - maybe even more so if you use enough LED's! Even if you are not interested in cooperative multitasking, surely, mesmerizing, randomly blinking LED's would be worth your while reading to the end!\nThis is quite a long instructable, but really it is several projects in one. Each of the projects builds upon the other. Primarily to illustrate how things might start out simple, but can get complicated very easily. Ultimately, a solution is presented that makes life much simpler. If you are time poor, or feel that things are progressing too slowly, you can skip some of the steps as outlined a bit later.\nIf you just want to get to building the Mega-Blink-Light project, simply read \"the bits list\", \"hooking everything up\" and jump straight to the last step.\nIf you complete the steps in between, you will have the basis of a system that can manage multiple concurrent operations in your own projects.", "title": "Cooperative Multitasking on Arduino - With Pretty Blinky Lights!", "url": "https://www.instructables.com/id/Cooperative-Multitasking-on-Arduino-With-Pretty-Bl/", "steps": [{"step": 1, "steps_text": "Definitions\nLets start with some definitions:\nMultitasking - the ability to perform two or more tasks simultaneously.\nCooperative - working together for a common purpose.\nFinite State Machine - the technique used by the individual cooperatively multitasking tasks. Read more about it on Wikipedia - Finite State Machine.\nHopefully \"cooperative\" is self explanatory, so let's look a bit closer at Multitasking - what exactly does it mean? How can Arduino work on two or more tasks simultaneously? There is only one CPU, so surely it can only do one thing at a time!?!?!?!?\nThe answer is \"time slicing\". That is, dividing up the available time (or CPU cycles) to perform different tasks.\nA real life multitasking example (the Chef)\nI'm not sure the explanation of time slicing clears much up, so lets consider a real world example. Specifically, a chef cooking a meal. Chances are, chef will be doing lots of things at once. For example, chef might be:\nPre-heating the oven,\nBoiling some water,\nChopping some vegetables,\nSeasoning some steak,,\nMixing some ingredients together for a sauce\nand no doubt more.\nI'm not a good cook, so I'm only guessing. My meals typically consist of boiling water for instant coffee, pouring milk over cereal and/or making toast - almost never at the same time!\nCan the chef do all of those things at the same time?\nThe answer, although some may vehemently disagree, is quite clearly (drum roll please): No!\nChef only has one pair of hands. So unless chef is on octopus or chef is chopping vegetables with just one hand (sounds dangerous) and seasoning steak with another, chef is only able to do one thing at a time. And unless chef has a third hand (perhaps spoon in mouth? Eww!!!) chef certainly isn't mixing the sauce ingredients together at the same time as chef is chopping vegetables with one hand and seasoning steak with the other.\nHowever, we would still say that a chef is multi-tasking. So, what are chefs actually doing?\nGood question, I am glad you asked. Chef is (at this point) cooperatively multitasking multiple \"sub-tasks\" that, together, combine to achieve the larger task of cooking a meal. I expect that the chef might operate more like this:\nTurn on the oven. Once turned on, the oven will pre-heat all by itself. The oven doesn't need chef's undivided attention to ensure it is warming up in an approved manner or not warming at all, nor does it require chef to not do anything else. In short, the oven will pre-heat all by itself. Next, chef might...\nFind a pot and pour some water into it.\nCheck that the oven is indeed on and starting to warm.\nPut the pot on a hot plate and turn it on. Again, the water will heat up all by itself.\nPlace all of the sauce ingredients into a bowl. Put it in a mixer and turn it on. The mixer also will mix all by itself.\nSeason the steak.\nPause seasoning the steak.\nStop the mixer check the consistency of the sauce. It needs more mixing, so turn the mixer back on.\nResume seasoning the steak. This task is now complete. Set the steaks aside.\nStart chopping the vegetables.\nPause chopping the vegetables.\nCheck the oven and note that it is now warm enough. Put steaks in oven. At this point, the steaks will cook, you guessed it, all by themselves.\nStop the mixer. Check the consistency of the sauce. It needs more mixing, so turn the mixer back on.\nResume chopping vegetables.\nPause chopping vegetables. Check Steaks - they need longer. Resume chopping vegetables.\nAnd so on...\nNote that the chef isn't personally doing multiple things at the same time. What chef is doing is dividing up the available time, or time slicing, to progress multiple tasks simultaneously.\nThe above is what multi-tasking is. Also, as I mentioned earlier, the chef cooking a meal example described above is \"cooperative multitasking\". That is, chef will perform a task for a period of time, voluntarily stop doing it in an orderly fashion then work on something else. Maybe chef will come back to a previously started task (e.g. resume chopping, resume seasoning, pause mixer to check consistency etc) or move on to something new. It will all depend upon what needs to be done next to progress the overall job of cooking the meal.\nIn each of the sub-tasks listed above, each one will maintain some sort of \"state\" information that describes exactly where it is in the process. For example, the oven will maintain state information along the lines of \"current temperature\", \"target temperature\", \"on or off\". The mixer will maintain state information of the form \"current speed\" (e.g. off, low, medium or high). Even the vegetables and steak maintain state information. For example, a vegetable is \"washed\" or \"not washed\", \"chopped\" or \"not chopped\" etc. Steak has state information in the form of \"doneness\" (e.g. raw, very rare, rare, medium etc), seasoned or not seasoned, and so on.\nI know it might sound a little bit \"out there\" to describe a steak as having states and therefore treating it as a finite state machine, but it is important to recognise the concept that most, if not everything, can be described as having states. The ability to recognise the states and how things transition from one state to another is important to enable cooperative multi-tasking. So, how does a steak move from one state to another? Within the \"doneness\" domain, there is a one way transition from raw to very rare to rare etc via the application of heat and time.\nPreemptive Multitasking\nAnother form of multitasking is \"preemptive multitasking\". An example of preemptive multitasking is as follows:\nChef is chopping vegetables, while chopping ....\nThe smoke alarm sounds (it seems chef forgot the steaks which are now in the \"too well done\" state).\nChef immediately stops chopping - possibly mid-chop!\nTurns off oven\nExtracts steak from oven\nOpens window\nresets smoke alarm\nChef resumes chopping vegetables\nSimultaneously chef tries to think of a way to explain to the family how \"extra dry and crispy steak\" is actually a good thing...\nIn the above example, chef was not intending to stop chopping vegetables, but an external factor unexpectedly came into play that required chef to stop the current task - urgently! In this case the smoke alarm sounded and this \"interrupt\" immediately caused chef to \"context switch\" to dealing with the smoke alarm. Other external factors might be time-slicing. For example, OH&S rules might say that the maximum chopping time is 5 minutes. After 5 minutes, you must do something else - even if you are not finished chopping vegetables. So after 5 minutes, the \"chopping vegetables\" task will be preempted when it has used up its allotted slice of time (5 minutes) and something else will be done. In a preemptive multitasking system, this switching from one task to another is handled automatically by the operating system. Often, if not always, a running task is not even aware that it was preempted (or resumed).\nPreemptive multitasking is much more complicated to implement. Preemptive events occur pretty much at random. As such, there needs to be support for a \"context switch\". In the case of the vegetables, they do not really know that they've been preempted while being chopped due to the smoke alarm. They are just lying there on the cutting board mid-chop. From the vegetables perspective, time has frozen. At some point the chopping will be resumed.\nWhile cooperative multitasking sounds great, it isn't perfect. It requires that the tasks, well, cooperate. Unlike preemptive multitasking systems, cooperative multitasking systems require that the sub-tasks be coded in such a way as to minimise their use of the CPU and to give up control of the CPU as soon as they can.\nThis means not hogging the CPU for endless calculations (and in the case of Arduino, almost never executing the delay function or do nothing while loops in a cooperative multitasking environment). If the smoke alarm scenario was managed using a cooperative multitasking model, then when the alarm was triggered, chef would simply ignore it (maybe chef has noise cancelling head phones on). Chef's task current task was to chop vegetables; not constantly monitor for every conceivable disaster that might occur - chef has to focus on the task at hand. In cooperative multitasking, chef will continue chopping vegetables until they are all done (or the 5 minute OH&S limit is reached). At that point chef will terminate the chopping vegetables task and determine what to do next. At that point chef might say: \"Oh, the smoke alarm is sounding\", or \"Oh, the pot has been boiling over\" and deal with those disasters.\nObviously in the real world chef wouldn't ignore the alarm until the vegetables are chopped (I hope). This is merely to illustrate the difference between preemptive and cooperative multitasking.\nMulti-threading\nThe above example also mentions another type of multi-tasking. Specifically \"Simultaneously, chef tries to think of a way ...\". This is concurrent multitasking (I think I made that phrase up - but it gives you the idea). In this case, chef is using chef's hands and eyes to manage the task of chopping vegetables. However, chef is using another resource, chef's brain, to perform another task - the \"thinking of an excuse task\" - at the same time as the \"chopping vegetables\" task. Chef can do this because the \"brain resource\" isn't fully utilised by the \"chopping vegetables\" task. Hopefully chef is not using all of chef's \"brain resource\" on the \"think of an excuse task\", otherwise chef may experience another high priority external preemption in the form of \"cut fingers\"!\nIn computing, this \"concurrent multitasking\" is more likely to be referred to as \"multi-threading\" or \"concurrent programming\". This requires multiple resources (i.e. multiple CPU's or multiple cores or multiple computers) to support this. One Arduino does not support concurrent multitasking as it is single CPU. Additionally the Arduino CPU's are typically single core (unlike, say, modern Intel CPUs which are multi-core) and some computers which are multi CPU with each CPU having multiple cores.\nI could go on a lot more, but I think that is enough theory. Let's roll our sleeves up, get the breadboard out, hook up some LED's and start blinking!\nLets start\nBut first, here are some links to Wikipedia where you can read even more theory if that is what \"floats your boat\":\nComputer Multitasking\nCoopertative Multitasking - what this Instructable is about.\nPreemptive Multitasking - We could do this on Arduino - perhaps another Instructable?\nConcurrent Computing - You would need two or more Arduino's working together to do this.\nContext Switching\nFinite State Machines - What sub-tasks in a cooperative multitasking environment must be.", "step_imgs": ["https://cdn.instructables.com/FYG/ZTDW/JT2SN7OD/FYGZTDWJT2SN7OD.LARGE.jpg"], "step_title": "Step 1: Cooperative Multitasking on Arduino"}, {"step": 2, "steps_text": "In this project we don't use many different parts. However, we do use a lot of them. You will need:\nAn Arduino.\nAll my examples will initially be built on Leonardo. You can also use a UNO, or pretty much any other Arduino with as many digital pins as you care to try connecting to LED's.\nLED's - 8 will do.\nThe more the better (the code examples only use 8 LED's)\n470 Ohm resistors (yellow, purple/violet, black, black and one other colour - usually gold).\nYou will need 1 for each LED you connect. So, for 8 LED's, you need 8 470 Ohm resistors.\nOne push button switch SPST - momentary closed.\nOne 10K resistor (brown, black, black, red and one other colour - usually gold).\nMedium to large Breadboard.\nHookup wire.\nIf you want to make the final (Mega Blinky LED Extravaganze) project, you will need:\nAn Arduino Mega\n32 LED's (or more if you are game). A mixture of colours is best.\n32 of 470 Ohm resistors per LED (yellow, purple/violet, black, black and one other colour - usually gold).\nNB: If you have more than 32 LED's, you will need extra 470 ohm resistors. Basically, you need one 470 ohm resistor for each and every LED!\nOne push button switch SPST - momentary closed.\nOne 10K resistor (brown, black, black, red and one other colour - usually gold).\nLarge breadboard\nHookup wire.", "step_imgs": ["https://cdn.instructables.com/F33/Q20W/JT2SN7RP/F33Q20WJT2SN7RP.LARGE.jpg"], "step_title": "Step 2: The Bits List - A.k.a. What You Will Need."}, {"step": 3, "steps_text": "Hook up the components as shown in the diagrams. Unfortunately the breadboard view does not show the LED hookup very well, so I've also included the circuit diagram.\nFear not if you can not follow the diagrams, the connections are pretty straight forward:\nPower Connections\nConnect the 5V pin on Arduino to the two red rails on the breadboard (red wires)\nConnect the GND pin on Arduino to the two black (or blue) rails (Black wires).\nLED Connections\nConnect one end of the eight 470 ohm resistors to the 5V rail (no wire - just plug them in directly)\nConnect the other end of the eight 470 ohm resistors to the Anode (long wire) on each of the LED's.\nConnect the other end of the eight LED's to one of the Digital pins numbered 6 though 13 on the Arduino (Yellow wires).\nPush button Switch Connections\nConnect one pin of the switch to 5V (Red wire)\nConnect the diagonally opposite pin on the switch (refer to the breadboard diagram) to Pin 2 on the Arduino (Blue wire)\nConnect the 10K ohm resistor from the same pin to GND (again refer to the breadboard diagram).\nThat's it. When running the programs below, if the LED's do not light up, try checking their orientation:\nThe Cathode (short lead) connects to one of the Arduino's digital pins numbered 6 through 13.\nThe Anode (long lead) connects to the 470 ohm resistor. The other end of the resistor connects to +5V.\nIf that is not the problem, double check all of the other connections.\nNote about the examples\nI've tried to provide plenty of examples to gradually illustrate the concepts.\nI encourage you to try all of the examples, in sequence. However, if you are short of time, than please try at least these:\nCombined Chase and Blink.\nInterleaved LED Blink.\nMultitasking Chase and Blink.\nObject Oriented Chase and Blink.", "step_imgs": ["https://cdn.instructables.com/FJW/7WVJ/JSUP2IOX/FJW7WVJJSUP2IOX.LARGE.jpg", "https://cdn.instructables.com/FA5/WZRE/JSUP2IOY/FA5WZREJSUP2IOY.LARGE.jpg"], "step_title": "Step 3: Hook Everything Up"}, {"step": 4, "steps_text": "In this simplest of examples, we will see how one task hogs the Arduino's attention to the exclusion of everything else. This is non-cooperative behaviour which is also sometimes referred to as Single Threaded.\nTo see this uncooperative behaviour:\nLoad the program below into your Arduino.\nPush the button. What does the LED do? It should eventually freeze in the off state when the button is pushed.\nRelease the button. The LED should continue its rather monotonous blinking.\nPress the button while the LED is lit, then release it before 2 seconds passes (i.e. the delay time when it is turned off). What happens?\nNothing! it just keeps blinking (This will be better illustrated in the next example).\nWhy? Because the Blink task is hogging the CPU for a full 4 seconds. This prevents the Button press task to see that the button was pressed.\nWhat we are seeing here is an example of a task occupying the Arduino's CPU to the exclusivity of doing anything else. Specifically, when you press the button and this fact is eventually detected by the Arduino's program (sketch), all other processing stops until such time as the button is released. This is not cooperative as each of the tasks (Blink and check button press) hog the CPU, without doing anything useful, until they have completed their individual operation.\nSure, we could change the algorithm in the checkButton function so that it does not wait until the button is released. We could replace the delay in the blink function with a loop and continuously poll the button, but that is not the point of this example. We will modify their behaviours, but not their function, when we start multitasking, without the need to add special polling code for looking for other activity throughout the program.\nThis way of programming is akin to the chef not being able to respond to the smoke alarm in the introduction. Programming the Arduino to continuously poll unrelated events is akin to asking the chef to continuously check for all possible disasters while chef is doing every other activity. This could make the programming very complex because if there were N activities and M possible \"interrupts\", then the complexity of the code will be N x M. That is in each of the N activities, you will need to check for all possible M \"interrupts\" that might occur. Indeed, this style of programming is worse than the example we presented above. If we translated this example to the chef, it would be akin to the chef turning on the oven and sitting in front of it doing nothing else but waiting until the oven reached the target temperature. Only at that point in time, does chef start the next task - maybe filling the pot of water and sitting in front of it watching and waiting for it boil.\nAs we progress through the examples, hopefully you will come to realise that things can start to get complicated very quickly if we start changing basic operations and try to intermingle all of the function among each another. The fourth example - \"Interleaved LED Blink\" attempts to explicitly draw this complexity out.\nFollowing is the code for example 1 - blink the LED\n/******************************************************************************\n * Cooperative Multitasking\n *   01 - Blink LED\n * \n * This is the first in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) starts with the most basic non-cooperative multitasking example.\n * There are two subtasks:\n * - A \"blink LED\" task that blinks the LED. It will hold the CPU for the entire duration of a single\n *   LED blink operation.\n * -  A \"check for button press\" task. It will hold the CPU for as long as you hold the button down.\n * \n * When running this program we will note that:\n * a) The messages relating to the LED Blinking will continue to be displayed - even if the button is pressed\n *    until such time as the blink operation completes.\n * b) The messages relating to the LED Blinking and the blinking itself will cease being displayed if the\n *    button is pressed (once the \"check button press\" task gets a hold of the CPU).\n * \n * In short, neither routine is sharing the CPU (blinking stops during button press), even though the\n * \"check button press\" task isn't actually doing anything except waiting for the button to be released.\n * Similarly, the \"Blink LED\" task isn't doing anything useful once it turns the LED off or on. Indeed it\n * justs wastes CPU cycles courtesy of the \"delay\" function calls.\n * \n * In this simplistic example, we could code it differently to avoid much of the \"system hanging\" symptoms,\n * but that is not the purpose this example. The purposes of this example is to show how easily it is to\n * code a routine that is \"blocking\" other tasks from doing their thing.\n * \n * By the time we get to example 5, we will address this. Examples 2 and 3 build upon this example, but\n * still in a non-cooperative multi-tasking way.\n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// define the LED PIN for blinking\n#define LED_PIN       6\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  Serial.println(\"Blinker will be on pin: \");\n  Serial.println(LED_PIN);\n  pinMode(LED_PIN, OUTPUT);\n  digitalWrite(LED_PIN, HIGH);     // Turn the LED off.\n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed).\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n    Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\n/**********************\n * Blink LED\n * \n * Blink the LED a single time.\n * \n */\nvoid blinkLed() {\n  Serial.println(\"LED On\");\n  digitalWrite(LED_PIN, LOW);\n  delay(2000);\n  Serial.println(\"LED Off\");\n  digitalWrite(LED_PIN, HIGH);\n  delay(2000);\n}\n/**********************\n * Loop\n * \n * Continuously call the active routine (chase of blink LED).\n * Upon completion of the active routine, check to see if the button has been pressed.\n * If it has, print a message.\n */\nvoid loop() {\n  // Blink our LED for 2 seconds on, 2 seconds off.\n  blinkLed();\n  if(checkButtonPressed()) {\n    Serial.println(\"Button was pressed (now it is released).\");\n  }\n}", "step_imgs": [], "step_title": "Step 4: Blink an LED"}, {"step": 5, "steps_text": "In this step, we will use a slightly more complicated example. The things to observe are similar as the Blink example, but we shall see more clearly how the pressing of the button is ignored until such time as the sequence completes.\nUpload the program (sketch) below and the LED's should light up one at a time giving a \"chaser\" type of effect.\nObserve the chaser pattern and push the button.\nWhat happens? Nothing - until the sequence reaches the end at which time the chaser is frozen. The chase will remain frozen until such time as you release the button.\nRelease the button.\nWhat happens? The chase resumes.\nPress the button while the chaser is in motion and release it before the chaser completes its cycle.\nWhat happens? Nothing! the chaser continues as though nothing has happened. This is because the \"check button press\" task never sees that the button is pressed.\nRepeat the above, while monitoring the debug messages to get a different view on what is going on. Specifically, look at what happens at the \"Check button press\" message.\nHere is the code for the Chaser:\n/******************************************************************************\n * Cooperative Multitasking\n *   02 - LED Chasser\n * \n * This is the second in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) builds upon the blink programs by combining converting it into a chaser.\n * There are two subtasks:\n * - A \"chase LED\" task that causes each LED to light up one after the other. It will hold the CPU for \n *   the entire duration of a single chase operation. That is, individually light up the led's in one direction\n *   then the other.\n * -  A \"check for button press\" task. It will hold the CPU for as long as you hold the button down.\n * \n * When running this program we will note that:\n * a) The messages relating to the Chase operation will continue to be displayed - even if the button is pressed\n *    until such time as the chase operation completes.\n * b) The messages relating to the LED Chase and the chase itself will cease being displayed if the\n *    button is pressed (once the \"check button press\" task gets a hold of the CPU).\n * \n * In short, neither routine is sharing the CPU (chase stops during button press), even though the\n * \"check button press\" task isn't actually doing anything except waiting for the button to be released.\n * Similarly, the \"Chase LED\" task isn't doing anything useful once it turns the LED off or on. Indeed it\n * justs wastes CPU cycles courtesy of the \"delay\" function calls.\n * \n * In this simplistic example, we could code it differently to avoid much of the \"system hanging\" symptoms,\n * but that is not the purpose this example. The purposes of this example is to show how easily it is to\n * code a routine that is \"blocking\" other tasks from doing their thing.\n * \n * By the time we get to example 5, we will address this. Examples 2 and 3 build upon this example, but\n * still in a non-cooperative multi-tasking way.\n * \n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  // Initialise the LED Pins for output and set them to High (turn the LED's off).\n  Serial.print(\"Initialising tracer pin: \");\n  for (int i = 0; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    pinMode(ledPins[i], OUTPUT);\n    digitalWrite(ledPins[i], HIGH);     // Turn the LED off.\n    if (i > 0) {\n      Serial.print(\", \");\n    }\n      Serial.print(ledPins[i]);\n  }\n  Serial.println();\n  \n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed)\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    \n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n    Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\n/**********************\n * Tracer\n * \n * Cause the LED's to chase one another along the list of pins defined in \"ledPins\".\n * The chase will go from \"left to right\" as defined by the order of the pins in \"ledPins\". Then\n * \"right to left\".\n * \n * The chase will be executed one time.\n */\nvoid tracer() {\n  Serial.println(\"Tracer - up\");\n  for (int i = 1; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    digitalWrite(ledPins[i - 1], HIGH);   // Off\n    digitalWrite(ledPins[i], LOW);        // On\n//    Serial.print(ledPins[i]);\n//    Serial.println(\" On\");\n    delay(250);\n  }\n  \n  Serial.println(\"Tracer - down\");\n  for (int i = sizeof (ledPins) / sizeof(ledPins[0]) - 2; i >= 0; i--) {\n    digitalWrite(ledPins[i + 1], HIGH);   // Off\n    digitalWrite(ledPins[i], LOW);        // On\n//    Serial.print(ledPins[i]);\n//    Serial.println(\" On\");\n    delay(250);\n  }\n}\n/**********************\n * Loop\n * \n * Continuously call the active routine (chase of blink LED).\n * Upon completion of the active routine, check to see if the button has been pressed.\n * If it has, switch modes.\n */\nvoid loop() {\n  tracer();\n  if (checkButtonPressed()) {\n    Serial.println(\"Button was pressed (now it is released).\");\n  }\n}", "step_imgs": [], "step_title": "Step 5: LED Chaser"}, {"step": 6, "steps_text": "In this third example, I've combined the chase and the blink. The enhancement is that the button press will switch modes between chasing and blinking. We should see similar behaviour as before. Specifically:\nPressing the button and releasing it before a cycle completes results in no change in behavior.\nPressing and holding the button until a cycle completes will result in the LED freezing in the final state of its sequence until such time as you release the button.\nWhen you release the button, it will switch to the other mode.\nFollowing is the code for the combined Chase and Blink:\n/******************************************************************************\n * Cooperative Multitasking\n *   03 - Blink and Trace\n * \n * This is the third in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) builds upon the blink and trace programs by combining them into one.\n * Additionally the button's function has been altered to do something useful.\n * The button will cause a switch between the two modes. That is, if the program is blinking an LED,\n * a button press will switch to chase mode.\n * \n * The desired outcome of this program is to verify that the LED's are working and illustrate the\n * effect of the sequential processing when multi-tasking is not enabled.\n * Specifically: \n * - Button presses are only detected when the program polls the button.\n *   Otherwise button presses are simply ignored.\n * - If the button is pressed and detected by the Arduino, all other activity will cease\n *   i.e. the LED's will freeze.\n *   \n * Of interest, but outside the scope of this activity, we could still achieve the desired result\n * of allowing the LED's to continue blinking and detect the button press without two much complicating code.\n * This would require the use of interrupts and toggling the mode of operation in the Interrupt \n * Service Routine. If I get the time do a preemptive multi-tasking instructable, we will cover this\n * capability there.\n * \n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// define the LED PIN for blinking\n#define LED_PIN       ledPins[0]\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\n// Start off in the tracer mode (because it's slightly cooler than just blinking).\nboolean tracerMode = true;\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  // Initialise the LED Pins for output and set them to High (turn the LED's off).\n  Serial.print(\"Initialising tracer pin: \");\n  for (int i = 0; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    pinMode(ledPins[i], OUTPUT);\n    digitalWrite(ledPins[i], HIGH);     // Turn the LED off.\n    if (i > 0) {\n      Serial.print(\", \");\n    }\n      Serial.print(ledPins[i]);\n  }\n  Serial.println();\n  \n  Serial.println(\"Blinker will be on pin: \");\n  Serial.println(LED_PIN);\n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed)\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    \n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n    Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\n/**********************\n * Blink LED\n * \n * Blink the LED a single time.\n * \n */\nvoid blinkLed() {\n  Serial.println(\"LED On\");\n  digitalWrite(LED_PIN, LOW);\n  delay(2000);\n  Serial.println(\"LED Off\");\n  digitalWrite(LED_PIN, HIGH);\n  delay(2000);\n}\n/**********************\n * Tracer\n * \n * Cause the LED's to chase one another along the list of pins defined in \"ledPins\".\n * The chase will go from \"left to right\" as defined by the order of the pins in \"ledPins\". Then\n * \"right to left\".\n * \n * The chase will be executed one time.\n */\nvoid tracer() {\n  Serial.println(\"Tracer - up\");\n  for (int i = 1; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    digitalWrite(ledPins[i - 1], HIGH);   // Off\n    digitalWrite(ledPins[i], LOW);        // On\n//    Serial.print(ledPins[i]);\n//    Serial.println(\" On\");\n    delay(250);\n  }\n  \n  Serial.println(\"Tracer - down\");\n  for (int i = sizeof (ledPins) / sizeof(ledPins[0]) - 2; i >= 0; i--) {\n    digitalWrite(ledPins[i + 1], HIGH);   // Off\n    digitalWrite(ledPins[i], LOW);        // On\n//    Serial.print(ledPins[i]);\n//    Serial.println(\" On\");\n    delay(250);\n  }\n}\n/**********************\n * Loop\n * \n * Continuously call the active routine (chase of blink LED).\n * Upon completion of the active routine, check to see if the button has been pressed.\n * If it has, switch modes.\n */\nvoid loop() {\n  // Blink our LED for 2 seconds on, 2 seconds off.\n  if (tracerMode) {\n    tracer();\n  } else {\n    blinkLed();\n  }\n  if (checkButtonPressed()) {\n    tracerMode = ! tracerMode;\n    Serial.print(\"Switching modes: tracermode = \");\n    Serial.println(tracerMode);\n  }\n}", "step_imgs": [], "step_title": "Step 6: Combined Chase and Blink"}, {"step": 7, "steps_text": "This example switches gears a bit. In this example, we will look at the problem of blinking multiple LED's at different rates.\nAs long as the duty cycles (blink rates) are the same (e.g. 2 seconds on and 2 seconds off) it is relatively easy to blink multiple LED's seemingly concurrently. But only if the only difference is the point in time that they started (the duration of a blink must be the same). For example consider the following sequence (I will give the LED's names - e.g. A, B etc to make it easier to follow):\nwe turn LED A on (we want it to stay on for 2 seconds then turn off for two seconds).\none half of a second later we want LED B to turn on (this will also be on for 2 seconds and off for 2 seconds).\none half of a second later we want LED C to turn on (also 2 seconds on and 2 seconds off).\nSo far 1 second has elapsed, so we wait for 1 second and turn LED A off (it will have been on for two seconds).\nWait for half a second and turn LED B off.\nWait for half a second and turn LED C off.\nFinally wait for 1 second (because the process of turning LED B and C off took 1 second and we must leave LED A for a whole 'nother second).\nrepeat.\nHowever, even with this simple example, if we change the duty cycle (time on -vs- time off) or the delay between \"On\" and \"Off\" events, we need to recalculate and reprogram the entire sequence. Consider changing it so that instead of a half second delay between subsequent LED's turning on or off to 3/4 of a second. The sequence will become:\nturn LED A on.\n750 ms later turn on LED B.\n750 ms later turn on LED C.\nSo far 1.5 seconds has elapsed, so we wait for 0.5 seconds (500ms) to turn LED A off (it will now have been on for two seconds).\n750 ms later turn LED B off.\n750 ms later turn LED C off.\nFinally wait for 0.5 second and repeat.\nIf we change the duty cycle then the calculation becomes slightly more complicated. If we change the length of the cycles so that each LED has a different cycle length (e.g. A has a cycle length of 5 seconds, B has 3 seconds and C has 1.5 seconds), then the order that LED's are turned on and off will change from one sequence to the next. This will make it very complicated to program using a non-multitasking approach. Have a think about what the code for blinking multiple LED's with different blink durations using delays, bearing in mind that the LED's must be turned on and on off in different orders to each other.\nFollowing is the code for blinking LED's with a fixed blink duration (e.g. 2 seconds on and 2 seconds off):\n/******************************************************************************\n * Cooperative Multitasking\n *   04 - Interleaved LED Blinking\n * \n * This is the fourth in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) illustrates the complexity of managing multiple independent\n * tasks (blinking of LED's).\n * \n * When *modifying* this program note that:\n * a) a change to the cycle of one LED, requires recalculating aspects of the neighbouring LED activity.\n * b) if not impossible, it is very difficult to manage the on/off sequence if the LED's blink at different\n *    rates and their cycles differ in duration with this single threaded approach.\n * \n * In example 5, we will enable multitasking to overcome the above problems. Hopefully, you will agree that\n * the solution is relatively simple - you may have even done something along similar lines. In example 5,\n * we will blink the LED's at randomly determined intervals.\n * \n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  // Initialise the LED Pins for output and set them to High (turn the LED's off).\n  Serial.print(\"Initialising tracer pin: \");\n  for (int i = 0; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    pinMode(ledPins[i], OUTPUT);\n    digitalWrite(ledPins[i], HIGH);     // Turn the LED off.\n    if (i > 0) {\n      Serial.print(\", \");\n    }\n      Serial.print(ledPins[i]);\n  }\n  Serial.println();\n  \n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed)\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    \n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n    Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\n#define LED_A   ledPins[0]\n#define LED_B   ledPins[1]\n#define LED_C   ledPins[2]\n/**********************\n * LED Cycle Z\n * \n * Blink the LED's so that they are on for 2 seconds and off for 2 seconds.\n * LED A (ledPins[0]) comes on first.\n * LED B (ledPins[1]) comes on 500ms after A.\n * LED C (ledPins[2]) comes on 500ms after B.\n * After another 1 second:\n * LED A turns off.\n * 500ms later LED B turns off.\n * 500ms later LED C turns off.\n * After another 1 second, the sequence is complete, so control is returned.\n */\nvoid cycleA() {\n  Serial.println(\"Cycle A\");\n  digitalWrite(LED_A, HIGH);\n  delay (500);\n  digitalWrite(LED_B, HIGH);\n  delay (500);\n  digitalWrite(LED_C, HIGH);\n  delay (1000);\n  \n  digitalWrite(LED_A, LOW);\n  delay (500);\n  digitalWrite(LED_B, LOW);\n  delay (500);\n  digitalWrite(LED_C, LOW);\n  delay (1000);\n}\nvoid cycleB() {\n  Serial.println(\"Cycle B\");\n  digitalWrite(LED_A, HIGH);\n  delay (750);\n  digitalWrite(LED_B, HIGH);\n  delay (750);\n  digitalWrite(LED_C, HIGH);\n  delay (500);\n  \n  digitalWrite(LED_A, LOW);\n  delay (750);\n  digitalWrite(LED_B, LOW);\n  delay (750);\n  digitalWrite(LED_C, LOW);\n  delay (500);\n}\nboolean modeA = true;\n/**********************\n * Loop\n * \n * Continuously call the active routine (chase of blink LED).\n * Upon completion of the active routine, check to see if the button has been pressed.\n * If it has, switch modes.\n */\nvoid loop() {\n  if (modeA) {\n    cycleA();\n  } else {\n    cycleB();\n  }\n  if (checkButtonPressed()) {\n    Serial.println(\"Button was pressed (now it is released).\");\n    modeA = ! modeA;\n  }\n}", "step_imgs": [], "step_title": "Step 7: Interleaved LED Blink"}, {"step": 8, "steps_text": "Finally! Lets look at a multitasking version that starts addressing the problems.\nThis version will combine all three of the themes that were introduced in the previous examples:\nPush button will be actioned when you release the button.\nWhile holding the button down, the other activity won't be affected - no matter how long or when you press it.\nThe Blink LED will be expanded to blink all 8 LED's at randomly generated:\nDuration (somewhere between 0.5 and 2 seconds)\nDuty cycle (somewhere between 80:20 and 20:80)\nIndependently\nThe push button will switch between chasing and blinking.\nWhen switching to blinking the LED blink pattern will be randomly regenerated.\nHere is the code.\n/******************************************************************************\n * Cooperative Multitasking\n *   05 - Multitasking trace and blink\n * \n * This is the fifth in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) shows how to multitask a few different tasks using \"cooperative\n * multitasking\". The tasks that are being multitasked include:\n * - Monitoring a switch / button press\n * - Executing an LED trace pattern\n * - Randomly blinking multiple LEDs.\n *   The blink task is actually 1 task per LED being blinked. So for 8 LED's, it\n *   is 8 sub tasks.\n * \n * The big differences between the previous non-multitasking examples and this one include:\n * - use of delay () and long running loops (e.g. while (digitalRead(BUTTON_PIN) == HIGH);) are\n *   removed.\n * - The tasks track what they are doing in what is known as it's context and just let the hardware\n *   get on with doing what it does all by itself.\n *   For example, once an LED is turned ON (or OFF), it will remain on (or off) all by itself.\n *   While the LED is remaining on (or off) all by itself, the tasks' code simply returns (exits). \n *   This allows the Arduino's CPU to go on and do something else (e.g. turn a different LED on or off).\n *   The task's context consists of whatever information is needed to track what we have done so far and\n *   work out what to do next.\n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\n#define LED_COUNT     (sizeof (ledPins) / sizeof(ledPins[0]))\n// Context information for sub-tasks\nunsigned long timePrev = 0;\n#define BLINK_MODE      0\n#define CHASER_MODE     1\nboolean mode = BLINK_MODE;    // The current mode of operation. By using an ID to define the\n                              // mode, we can have any number of display modes.\n// Chaser context.\n              // Number of milliseconds between chaser actions.\n#define CHASER_DELAY  200\nunsigned long chaserNextEventTime;\nunsigned long chaserTimerCnt;\nint chaserIndex = 0;\nboolean chaserIndexGoingUp = true;\n// Blink context.\ntypedef struct {\n  unsigned long timerCnt;     // Number of milliseconds that have passed since the last activity.\n  unsigned long nextEventTime;  // Number of millisends that must pass until the next activity.\n  boolean ledOn;              // tracks whether the LED is currently on or not.\n  int ledPin;                 // the Pin to which the LED is connected.\n  unsigned long onTime;       // number of milliseconds that this LED should remain on.\n  unsigned long offTime;      // number of milliseconds that the LED should remain off.\n} BlinkContext;\n// Declare 1 blink context for each LED being controlled.\n// This is used by the blink subtasks to determine what to do next and when.\nBlinkContext blinkCtx[LED_COUNT];\n// Button context.\nboolean isButtonPressed = false;\nint prevButtonState = LOW;\nunsigned long buttonNextEventTime = 10;\nunsigned long buttonTimerCnt = 0;\nunsigned long debounceCnt = 0;\nvoid printBlinkContext(BlinkContext *ctx) {\n  Serial.print(\"Blink Context: Next Evt Time: \");\n  Serial.print(ctx->nextEventTime);\n  Serial.print(\", cur tim: \");\n  Serial.print(ctx->timerCnt);\n  Serial.print(\", led on: \" );\n  Serial.print(ctx->ledOn);\n  Serial.print(\", on time: \");\n  Serial.print(ctx->onTime);\n  Serial.print(\", off time: \");\n  Serial.print(ctx->offTime);\n  Serial.print(\", LED Pin: \" );\n  Serial.println(ctx->ledPin);\n}\nvoid randomiseBlink(BlinkContext *ctx) {\n  ctx->onTime = 500 + random(1500);         // On time is a random number between 500 and 2000 ms.\n  ctx->offTime = 500 + random(1500);        // Off time is a random number between 500 and 2000 ms.\n  ctx->nextEventTime = ctx->offTime;       // Specify the next action time.\n}\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  // Initialise the LED Pins for output and set them to High (turn the LED's off).\n  Serial.print(\"Initialising LED pin: \");\n  for (int i = 0; i < LED_COUNT; i++) {\n    pinMode(ledPins[i], OUTPUT);\n    digitalWrite(ledPins[i], HIGH);       // Turn the LED off.\n    blinkCtx[i].ledOn = false;            // track that the LED is off.\n    blinkCtx[i].ledPin = ledPins[i];      // track the pin that this task's LED is attached to.\n    blinkCtx[i].timerCnt = 0;             // We are at the beginning of time.\n    if (i > 0) {\n      Serial.print(\", \");\n    }\n      Serial.print(ledPins[i]);\n  }\n  Serial.println();\n  for (int i = 0; i < LED_COUNT; i++) {\n    randomiseBlink(&blinkCtx[i]);\n    printBlinkContext(&blinkCtx[i]);\n  }\n  \n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n  timePrev = millis();              // Initialise the \"previous time\" value to the current time.\n}\nvoid turnAllLed(int state) {\n  for (int i = 0; i < LED_COUNT; i++) {\n    digitalWrite(ledPins[i], HIGH);       // Turn off the LED.\n  }\n}\nunsigned long blinkLEDTask(BlinkContext *ctx) {\n  unsigned long nextEventTime;\n  // Are we in blink mode?\n  if (mode != BLINK_MODE) {\n    // If we are not in the blink mode, then there is nothing to do here.\n    return 10000000;        // return a high value to effectively prevent further calls\n                            // to this task. Note that the randomise routine will reset\n                            // this to a proper value when we switch modes.\n  }\n  // Check our current state.\n  if (ctx->ledOn) {      // Is the LED currently on?\n      Serial.print(\"Turn ON  - \"); printBlinkContext(ctx);\n      digitalWrite(ctx->ledPin, HIGH);   // Yes, so turn it off\n    nextEventTime = ctx->offTime;\n  } else {\n      Serial.print(\"Turn OFF - \"); printBlinkContext(ctx);\n      digitalWrite(ctx->ledPin, LOW);   // Yes, so turn it off\n    nextEventTime = ctx->onTime;\n  }\n  ctx->ledOn = !ctx->ledOn;\n  return nextEventTime;\n}\nunsigned long chaserTask() {\n  if (mode != CHASER_MODE) {\n    return 10000000;      // Return a high value to effectively prevent further calls to\n                          // this task. The mode switch (handleButtonPress) will reset\n                          // the next time value to a sensible value.\n  }\n  if (chaserIndexGoingUp) {\n    digitalWrite(ledPins[chaserIndex], HIGH);   // Turn the previous LED OFF.\n    chaserIndex += 1;                           // Point to the next higher LED.\n    digitalWrite(ledPins[chaserIndex], LOW);    // Turn the LED ON.\n                                                // Go up as long as the index is < the\n                                                // highest index in the ledPins array.\n    chaserIndexGoingUp = (chaserIndex < LED_COUNT - 1);\n  } else {\n    digitalWrite(ledPins[chaserIndex], HIGH);   // Turn the previous LED OFF.\n    chaserIndex -= 1;                           // Point to the next lower LED.\n    digitalWrite(ledPins[chaserIndex], LOW);    // Turn the LED ON.\n    chaserIndexGoingUp = (chaserIndex <= 0);    // When we reach zero, switch to going up. \n  }\n  \n  return CHASER_DELAY;\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed)\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    \n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n      Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\nunsigned long checkButtonTask() {\n  boolean currButtonState = digitalRead(BUTTON_PIN);\n  isButtonPressed = false;        // Assume button is not pressed until determined otherwise\n  if (prevButtonState == LOW) {\n    if (currButtonState == HIGH) { // prev = LOW and curr = LOW\n                                  // prev = LOW and curr = HIGH\n                                  // state is changing.\n      debounceCnt = 0;            // debounce the button.\n        Serial.println(\"Button press detected\");\n    }\n  } else {                        // the previous state of the button was HIGH (pressed)\n    if (currButtonState == HIGH) {\n      debounceCnt += 1;           // count a debounce.\n    } else {                      // prev state = HIGH, curr = LOW - button released.\n                                  // if we have passed the debounce threshold, then\n                                  // the is button pressed will be set to true.\n      isButtonPressed = (debounceCnt > 10);\n        Serial.print(\"Button released, debounceCnt: \");\n        Serial.println(debounceCnt);\n      debounceCnt = 0;\n    }\n  }\n        // Check the button more frequently if it is pressed.\n  prevButtonState = currButtonState;\n  return currButtonState == HIGH ? 1 : 10;\n}\nboolean wasButtonPressedAndReset() {\n  boolean result = isButtonPressed;\n  isButtonPressed = false;\n  return result;\n}\nvoid handleButtonPress() {\n  switch (mode) {\n    case BLINK_MODE:\n        Serial.println(\"Switching to chase mode\");\n      turnAllLed(HIGH);\n      mode = CHASER_MODE;\n      chaserIndex = 0;\n      chaserTimerCnt = 0;\n      chaserNextEventTime = CHASER_DELAY;\n      break;\n    case CHASER_MODE:\n        Serial.println(\"Switching to blink mode. Contexts:\");\n      for(int i = 0; i < LED_COUNT; i++) {\n        randomiseBlink(&blinkCtx[i]);\n        printBlinkContext(&blinkCtx[i]);\n        turnAllLed(HIGH);\n      }\n      mode = BLINK_MODE;\n      break;\n    default:\n      mode = BLINK_MODE;\n      break;\n  }\n}\n/**********************\n * Loop\n * \n */\nvoid loop() {\n  unsigned long timeNow = millis();\n  if (timeNow != timePrev) {\n    unsigned long timeDelta = timeNow - timePrev;\n    timePrev = timeNow;\n    // Execute the blink sub tasks.\n    for (int i = 0; i < LED_COUNT; i++) {\n      BlinkContext *ctx = &blinkCtx[i];\n      ctx->timerCnt += timeDelta;\n      \n      if (ctx->timerCnt >= ctx->nextEventTime) {\n        ctx->nextEventTime = blinkLEDTask(ctx);\n        ctx->timerCnt = 0;\n      }\n    }\n    \n    // Execute the chaser sub task.\n    chaserTimerCnt += timeDelta;\n    if (chaserTimerCnt >= chaserNextEventTime) {\n      chaserNextEventTime = chaserTask();\n      chaserTimerCnt = 0;\n    }\n    // Execute the button subtask.\n    buttonTimerCnt += timeDelta;\n    if (buttonTimerCnt >= buttonNextEventTime) {\n      buttonNextEventTime = checkButtonTask();\n      buttonTimerCnt = 0;\n      if (wasButtonPressedAndReset()) {\n        handleButtonPress();\n      }\n    }\n  }\n}", "step_imgs": [], "step_title": "Step 8: Multitasking Chase and Blink"}, {"step": 9, "steps_text": "This version of code is the same as the previous version, except:\nThe sub-tasks (e.g. blink) are coded as objects (classes). This brings all of the bits and pieces (variables tracking state and operations) into a single structure (a class).\nWhen used correctly, you can realise significant benefits in using Object Oriented (OO) techniques.\nNote how the variables (or members) defined in the struct in the previous program have been brought together into the BlinkTask class as private fields. This class encapsulates both the function (turn on or of the LED) and the relevant data into a single block of code.\nWe can also see inheritence and abstraction. Inheritence is seen where a task (e.g. blink an LED) leverages the capabilities of the TimedTask.\nAbstraction is seen in the TimedTask class. The TimedTask class knows that at some point it will need to execute whatever the function might be (e.g. blink an LED, increment the chaser, check the status of a button etc). But it does not know, and very importantly nor does it care, what that function is. So, the TimedTask defines an abstract method (execute). This is what TimedTask will call at the appropriate time. It is the responsibility of someone else (e.g. BlinkTask) to provide the necessary details of what to do (e.g. turn an LED on or off). So when the TimedTask calls the execute method, it will actually invoke the execute method in the class that was actually created (e.g. BlinkTask, or ButtonTask).\nThere is one TimedTask for:\neach LED (i.e. One BlinkTask for each LED = 8 BlinkTasks)\neach push button (i.e. one ButtonTask for the one button we have).\nthe chaser (ChaserTask - we only have one of these as we only want to execute one of these at any one time)\nShould we decide to have two Chaser Tasks (maybe one chasing the first four LED's at one rate and another chasing the second four LED's at a different rate, or maybe one chasing the odd LED's and the other chasing the even LED's again at different rates), then we would need two chaser tasks. We aren't doing that, so we only need on Chaser task. Should anyone try to implement two chasers, I'd be keen to hear about it (and see the video).\nOO pundits will claim that using OO techniques will reduce complexity and volume of code. Many will also claim the program runs more efficiently. I must admit I tend to agree with those assertions. Although I have no data on the last \"more efficiently\" point. In this example, the number of lines of code was reduced slightly (about 10%), but I also added several new functions (refer to the comments in the code for a list) while attaining the reduction in code lines.\nAn example of this can be seen in the loop functions of this and the previous example. Because each of the different subtask types inherit capability from the TimedTask class, I can put all of my subtasks into an array (taskList). This means, that I only need one statement to record elapsed time against each and every different type of task. Compare this to the non Object Oriented version where there are individual if statements for each type of class (i.e. 3 seperate code blocks) to determine if a task is due to be invoked.\nAdditionally, not only are there less code blocks to be created, I can get away without defining multiple variables (or the struct) to track elapsed time. All of this is done within the properties defined in the TimedTask class.\nThere are some additional benefits to using object oriented techniques that are a bit less subtle. For example:\ndebugging task execution related issues - I only need to do it once.\nSub task logic is \"standalone\" - consider the BlinkTask. All it needs to worry about is turning an LED on or off. Something else, i.e. the TimedTask, will invoke it at the right time. There isn't any need to intermingle scheduling related code into the sub task. This makes it easier to see what is going on - and as just mentioned easier to debug when something doesn't work.\nIn short, there are considerable advantages when using OO techniques, even in a simple program like this.\nWarning: this version of the code uses pointers - specifically pointers to instantiated objects (classes) - this translates to pointers to code. This is not a symptom of OO, this is a problem of not being careful enough with pointers. If, like I did, you screw up your pointers, it is easy to execute random code. Executing random code will produce, i guess, random results. Random results, in this case, means anything can happen such as the Arduino will hang, weird characters appear on the Serial monitor and if you are lucky (or unlucky) enough corrupt your Arduino's boot loader. If this last thing happens to you, you can recover it by following the instructions here: Arduino as an ISP you will need another (working) Arduino to recover your toasted Arduino.\nHere is the code (it's pointers have been debugged, so I expect you won't have any problems if you use it as is):\n/******************************************************************************\n * Cooperative Multitasking\n *   06 - Multitasking trace and blink with OO\n * \n * This is the sixth in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * The enhancement on this occassion is to use Object Oriented concepts to make\n * the program simpler.\n * \n * This program (sketch) shows how to multitask a few different tasks using \"cooperative\n * multitasking\". The tasks that are being multitasked include:\n * - Monitoring a switch / button press\n * - Executing an LED trace pattern\n * - Randomly blinking multiple LEDs.\n *   The blink task is actually 1 task per LED being blinked. So for 8 LED's, it\n *   is 8 sub tasks.\n * \n * The big differences between the previous multitasking example and this one include:\n * - less lines of code (about 30 less ~ 9%).\n * - More functionality including:\n *    - named tasks\n *    - disable / enable task support\n *    - bespoke code required to manage timers for the individual types of tasks is\n *      encapsulated into an abstract class extended by the 3 task types.\n * - encapsulation of the context of a task within the specific task's class.\n * - support for a \"do not change\" the interval between subtask executions return value.\n * - ability to easily add more Task types to support additional animations.\n * - (hopefully) easier to debug and follow what is going on.\n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\n#define LED_COUNT     (sizeof (ledPins) / sizeof(ledPins[0]))\n// Context information for sub-tasks\nunsigned long timePrev = 0;\n// Define constants (as opposed to a boolean) to define which mode we are operating in.\n// To add a new MODE, simply extend the list of constants. Make sure that \"MODE_CNT\" is\n// one more than the highest task ID.\n#define BLINK_MODE      0\n#define CHASER_MODE     1\n#define MODE_CNT        2\nboolean mode = BLINK_MODE;\n/************************************************\n * Class TimedTask.\n * \n * An abstract (incomplete) class that manages the scheduling of sub tasks.\n * \n * This class tracks the elapsed amount of time on behalf of it's subclasses.\n * When the alotted time has passed, the \"execute\" method will be invoked to\n * allow the task to do whatever it needs to do.\n * NB: This TimedTask class would ideally be \"factorised\" out into a library.\n *     If we did this, then the entire functionality could be accessed by a single\n *     line of code (as opposed to the 70 odd lines here. The single line of code\n *     would be something like: #include .\n */\nclass TimedTask {\n  public:\n    // Constructor - capture the time that has to pass until the task needs to be invoked.\n    TimedTask(unsigned long nextEventTime) {\n      this->nextEventTime = nextEventTime;\n    }\n    // Set the next event time.\n    void setNextEventTime(unsigned long nextEventTime) {\n      this->nextEventTime = nextEventTime;\n    }\n    // Abstract methods which must be implemented (defined) in a subclass.\n    virtual unsigned long execute();        // Execute the task.\n    virtual String getName();               // Retrieve the name of the task.\n    virtual void disableTask();             // Invoked when this task is being disabled.\n    virtual void enableTask();              // Invoked when this task is being enabled.\n    // Enable this task.\n    void enable() {\n      enabled = true;\n      timeSinceLastEvent = 0;               // Reset the elapsed time counter.\n      enableTask();                         // Notify the subclass that the task has been enabled.\n    }\n    // disable this task.\n    void disable() {\n      enabled = false;\n      disableTask();                        // Notify the subclass that the task has been disabled.\n    }\n    // Return the enabled/disabled state of the task.\n    boolean isEnabled() {\n      return enabled;\n    }\n    // Record the fact that time has passed.\n    void recordTime(unsigned long delta) {\n      timeSinceLastEvent += delta;          // Record the time and check if this task is due to be\n                                            // executed. NB: the task is only executed if it is enabled.\n      if (timeSinceLastEvent >= nextEventTime && enabled) {\n//        Serial.print (\"Executing task: \");\n//        Serial.println(getName());\n        unsigned long nev = execute();      // Notify the subclass to do it's thing.\n        if (nev > 0) {                      // Record the next event time if it is non zero.\n          nextEventTime = nev;\n        }\n        timeSinceLastEvent = 0;             // Reset the time counter.\n      }\n    }\n  private:\n    unsigned long nextEventTime;            // Time that must pass before we invoke the subtask.\n    unsigned long timeSinceLastEvent = 0;   // The time has passed since the last invocation of the subtask.\n    boolean enabled = true;\n};\n/************************************************\n * Class BlinkTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that blinks a single LED.\n * \n * This class toggles the state of the LED when it is invoked.\n */\nclass BlinkTask : public TimedTask {\n  public:\n      // Constructor needs to know which pin the LED is connected to.\n    BlinkTask(int ledPin)\n      : TimedTask(0){\n      pinMode(ledPin, OUTPUT);          // Initialise the PIN as output.\n      digitalWrite(ledPin, HIGH);       // Turn the LED off.\n      this->ledPin = ledPin;            // track the pin.\n      setNextEventTime(offTime);        // set the time to the next invocation.\n      outputDetails();                  // print the details of this BlinkTask.\n      taskName.reserve(15);\n      taskName = \"blink \";\n      taskName += ledPin;\n    }\n    // Execute the Blink Task\n    // This simply toggles the current state of the LED and returns the period\n    // of time that must pass before the next invocation.\n    unsigned long execute () {\n      ledOn = !ledOn;                   // Toggle the LED on/off flag.\n//      Serial.print(\"Turning LED \");\n//      Serial.println(ledOn ? \"on\" : \"off\");\n      digitalWrite(ledPin, ledOn ? LOW : HIGH);   // Set the LED state.\n      return ledOn ? onTime : offTime;  // return the next delay time.\n    }\n    // Retrieve the name of the task as \"Blink \" + the led's Digital Pin number.\n    String getName() {\n      return taskName;\n    }\n    // disable the blink task\n    void disableTask() {\n      digitalWrite(ledPin, HIGH);       // Turn the LED off.\n    }\n    // enable the blink task - nothing to do here.\n    void enableTask() {\n      onTime = randomInterval();      // The time the led will be on (ms)\n      offTime = randomInterval();     // The time the led will be off (ms)\n      setNextEventTime(offTime);\n      digitalWrite(ledPin, HIGH);\n      Serial.print(\"Enabling: \");\n      outputDetails();\n    }\n    // print the details of this blink task.\n    void outputDetails() {\n      Serial.print(\"Blink task pin: \");\n      Serial.print(ledPin);\n      Serial.print(\", onTime: \");\n      Serial.print(onTime);\n      Serial.print(\", offTime: \");\n      Serial.println(offTime);\n    }\n  private:\n    unsigned long randomInterval() {\n      return 500 + random(1500);\n    }\n    unsigned long onTime = randomInterval();      // The time the led will be on (ms)\n    unsigned long offTime = randomInterval();     // The time the led will be off (ms)\n    boolean ledOn = false;                        // Initially the LED will be off.\n    int ledPin;                                   // The digital I/O pin for the LED.\n    String taskName;                              // the name of the task\n};\n/************************************************\n * Class ChaserTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that execute a LED chaser.\n * \n * This causes each LED in a chain to turn on. The task moves the LED up the chain\n * then back down again.\n */\nclass ChaserTask : public TimedTask {\n  public:\n    // constructor requires the delay time between updates to the chaser display.\n    ChaserTask (unsigned long nextEventTime)\n      : TimedTask(nextEventTime) {\n        \n      }\n    // Move the LED up (or down) one step.\n    unsigned long execute() {\n      if (chaseUp) {              // If going up, turn of the current LED.\n        digitalWrite(ledPins[chaserIndex], HIGH);\n        chaserIndex += 1;         // point to the next one up the line and turn it on.\n        digitalWrite(ledPins[chaserIndex], LOW);\n                                  // Go up as long as the index is < the\n                                  // Highest index in the LEDpins array.\n        chaseUp = chaserIndex < LED_COUNT - 1;\n      } else {                    // Going down. turn off the current LED.\n        digitalWrite(ledPins[chaserIndex], HIGH);\n        chaserIndex -= 1;         // point to the next one down the line and turn it on.\n        digitalWrite(ledPins[chaserIndex], LOW);\n                                  // Continue going down until we reach\n                                  // the beginning of the LEDpins array.\n        chaseUp = chaserIndex <= 0;\n      }\n      return 0;                   // do not change the scheduling interval.\n    }\n    // Enable the chaser task.\n    // Reset to the \"beginning\" state.\n    void enableTask() {\n      chaserIndex = 0;            // Resume from the beginning;\n      chaseUp = true;             // Go up.\n    }\n    // disable the chaser task.\n    // Turn off the current LED\n    void disableTask() {\n                                  // Turn the current LED OFF.\n      digitalWrite(ledPins[chaserIndex], HIGH);\n    }\n    // Return the name of the task as \"chaser\".\n    String getName() {\n      return \"Chaser\";\n    }\n  private:\n    boolean chaseUp = true;       // direction of travel\n    int chaserIndex = 0;          // currently illuminated LED.\n};\n/************************************************\n * Class ButtonTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that detects a button press.\n * \n * Ancillary methods may be invoked to ascertain if the button has been pressed or not.\n */\nclass ButtonTask : public TimedTask {\n  public:\n    // Constructor:\n    //   button Pin - the pin the button to be monitored is connected to.\n    //   nextEventTime - the time delay between checks to see if the button has been pressed.\n    ButtonTask(int buttonPin, unsigned long nextEventTime)\n      : TimedTask(nextEventTime) {\n        pinMode(buttonPin, INPUT);\n        this->buttonPin = buttonPin;\n        taskName.reserve(15);\n        taskName = \"****  button \";\n        taskName += buttonPin;\n      }\n    // Checks to see if the button has been pressed.\n    // If it has been pressed, it will debounce the press and\n    // set appropriate indicators recording the press when the button is released.\n    unsigned long execute() {\n                                  // Read the current state of the button.\n      int currButtonState = digitalRead(buttonPin);\n      if (prevButtonState == LOW) {\n        if (currButtonState == HIGH) {    // Button was just pressed.\n          debounceCnt = 0;                // Start the debounce count.\n          Serial.println(\"Button pressed\");\n        }\n      } else {                    // Previously the button has tracked as \"pressed\".\n        if (currButtonState == HIGH) {    // Is it still pressed?\n          debounceCnt += 1;               // Count the number of intervals that it has remained pressed\n        } else {                  // Button has been released.\n          Serial.print (\"Button released. Debounce Cnt: \");\n          Serial.println(debounceCnt);\n                                  // Set the button pressed flag to true, if the button has remained pressed\n                                  // for the required amount of time.\n          buttonPressedInd = (debounceCnt > debounceThreshold);\n          debounceCnt = 0;        // reset the debounce count.\n        }\n      }\n      prevButtonState = currButtonState;    // Remember this button state for next time.\n      return currButtonState == HIGH ? 1 : 10;  // Check every 1 ms while button is pressed,\n                                            // otherwise just check once every 10 ms.\n    }\n    // Retrieve the task name as \"button \" + digital pin I/O number.\n    String getName() {\n      return taskName;\n    }\n    // Enable the task - nothing special to do.\n    void enableTask() {\n    }\n    // disable the task - nothing special to do.\n    void disableTask() {\n    }\n    // Ancilliary method to query the state of the button.\n    boolean isButtonPressed() {\n      return buttonPressedInd;\n    }\n    // Ancilliary method to query the state of the button\n    // and reset it's state to false (not pressed)\n    boolean isButtonPressedAndReset() {\n      boolean result = buttonPressedInd;\n      buttonPressedInd = false;\n      return result;\n    }\n    // The number of times (ms) that the button must remain pressed to\n    // count as an actual press. Any \"presses\" less than this duration\n    // are ignored as noise.\n    const int debounceThreshold = 10;\n    \n  private:\n    int buttonPin;                // The digital I/O pin to which the button is connected.\n    int debounceCnt = 0;          // How many contiguous \"pressed\" readings have we observed?\n    int prevButtonState = LOW;    // State of the button - last time we checked.\n    boolean buttonPressedInd = false;\n    String taskName;              // the name of this task.\n};\n/*****************************************************\n * The task list.\n * \n * Establish an array of tasks. All of the tasks go into this array irrespective of their\n * specific type.\n * We seperately track the button task and chaser task, although not strictly necessary, in\n * individual variables (as well as in the array) so we can more cleanly interact with them.\n * \n * The array is an array of pointers to TimedTasks. This is to allow any class that extends TimedTask\n * to be placed into the array. The draw back is that technically we do not know what the task types are,\n * so we can only directly invoke the methods in TimedTask. Fortunately, through inheritence and abstraction,\n * the TimedTask can invoke the specific methods that are defined as abstract to obtain the specific tasks\n * function (i.e. the TimedTask can activate/call the specific task's individual \"execute\" method to get it to\n * do whatever it does).\n */\n// Define how many tasks there are in total.\n#define TASK_COUNT (sizeof taskList / sizeof taskList[0])\nTimedTask *taskList[LED_COUNT + 2];\nButtonTask *buttonTask;\nChaserTask *chaserTask;\n// Create as many blink tasks as defined in the ledPins array. There will be one\n// Blink Task for each defined pin.\n// This is called from setup and when the button is pressed (activating Blink Mode)\nvoid resetBlinkers(boolean create) {\n  for (int i = 0; i < LED_COUNT; i++) {\n    if (create) {\n      taskList[i] = new BlinkTask(ledPins[i]);\n    } else {\n      taskList[i]->enable();              // Enable the blink task and recalculate its operating parameters.\n    }\n  }\n}\n// disable all of the blinker tasks and prevent them from executing.\n// This is called when the button is pressed (disabling Blink Mode).\nvoid disableBlinkers() {\n  for (int i = 0; i < LED_COUNT; i++) {\n    taskList[i]->disable();\n  }\n}\n/***********************************************\n * Setup.\n * Initialise the serial monitor\n * Create all of the tasks.\n * Capture the starting time.\n */\nvoid setup() {\n  Serial.begin (9600);\n  \n  int cnt = 0;                    // Initialise the Serial port - but don't wait too long.\n  while (!Serial && cnt < 100) {\n    cnt++;\n    delay(1);\n  }\n  Serial.println(\"Initialising\");\n  resetBlinkers(true);               // Create the blink tasks.\n  chaserTask = new ChaserTask(250); // Create the chaser task\n  taskList[LED_COUNT] = chaserTask; // add it to the list of all tasks.\n  chaserTask->disable();            // initially, disable the chaser.\n  \n  buttonTask = new ButtonTask(2, 10);   // Create the button task.\n  taskList[LED_COUNT + 1] = buttonTask; // add it to the list of all tasks.\n  Serial.println(\"Ready\");\n  timePrev = millis();              // Initialise the \"previous time\" value to the current time.\n}\n/**********************\n * Loop\n * \n */\nvoid loop() {\n  unsigned long timeNow = millis();   // Obtain the \"current time\".\n  if (timeNow != timePrev) {          // Has time moved on?\n    unsigned long timeDelta = timeNow - timePrev;\n    timePrev = timeNow;               // Work out how much time has passed and capture \"now\" for next time.\n                                      // For each and every task (8 Blink + 1 chaser + 1 button monitor)\n                                      // record the fact that time has passed.\n                                      // This will invoke the individual tasks' \"execute\" method if it is due\n                                      // to be invoked.\n    for (int i = 0; i < TASK_COUNT; i++) {\n      taskList[i]->recordTime(timeDelta);\n    }\n                                      // Check if the button has been pushed.\n    if (buttonTask->isButtonPressedAndReset()) {\n      mode = (mode + 1) % MODE_CNT;   // Move on to the next mode.\n      switch(mode) {                  // Turn on the new mode (and turn off the previous mode).\n        case BLINK_MODE:\n          Serial.println(\"Switching to Blink Mode\");\n          resetBlinkers(false);         // When moving into BLINK_MODE, generate new blinkers (with new random on/off times)\n          chaserTask->disable();      // disable the chaser.\n          break;\n        case CHASER_MODE:\n          Serial.println(\"Switching to Chaser Mode\");\n          disableBlinkers();          // When moving into CHASER_MODE, disable the blinkers\n          chaserTask->enable();       // enable the chaser.\n          break;\n        default:                      // Unexpected mode??? - should never happen\n          Serial.print(\"Warning: Unexepected mode: \");\n          Serial.print(mode);\n          Serial.println(\" - resetting to blink mode.\");\n          mode = BLINK_MODE;          // If it does, revert to BLINK mode.\n          resetBlinkers(false);\n          chaserTask->disable();\n          break;\n      }\n    }\n  }\n}", "step_imgs": [], "step_title": "Step 9: Object Oriented Chase and Blink"}, {"step": 10, "steps_text": "So, this is the moment you might have been waiting for: The Arduino Mega Blinky LED Extravaganza!\nBelow is the code for the Mega Blinky LED Extravaganza => independently, simultaneously blinking 32 LED's at random rates. Note you will need an Arduino Mega to run this. Why? Because it uses 32 I/O pins.\nThe only differences between this and the previous example are:\nPushing the button just changes the blink rate of the LED's (there is no Chaser mode)\nIt simultaneously blinks 32 LED's at random\nIt looks prettier (especially in the dark)\nThe key takeaway from this example, is how easy it is to add more functionality through cooperative multitasking. Apart from removing the chaser and \"mode switch\" logic attached to the button press, the only substantive modification was to change the ledPins array definition to list 32 pins on the Arduino Mega.\nHooking up the LEDs\nYou can layout the LED's anyway you like. I elected to lay them out in an 8 x 2 rectangle format. The following instructions explain how I did it (it was a little bit tedious - but worth it IMHO).\nBasically the layout is a series of eight blocks of LED's. Each block consists of 4 LED's in a 2 x 2 arrangement. I've outlined each block in the photo. The photo shows 6 complete blocks and two missing blocks.\nEach block of 4 LED's occupies five (5) rails on the breadboard. There is one central rail that brings power (5V) to the 4 LED's in that block. This is shown by the red wires at the center of each block.\nThe other 4 rails in each block are the cathodes of LED's (one per LED) and are used to connect the 470 ohm current limiting resistors. Thus each block (from left to right) consists of 2 x 470 ohm resistors, the power connector (red wire) followed by 2 x 470 ohm resistors. This is repeated four (or more) times along the breadboard. Finally, the 4 blocks on one line of the breadboard is replicated on the other side of the divider.\nTo layout the LED's on the board in a matrix, start by inserting the resistors. As mentioned, there should be 2 resistors followed by the 5V connection followed by 2 more resistors.\nNext, insert the LED's starting with the one closest to the resistor. As shown by the lines in the photo, the Anode of each of the LED's plugs into the 5 Volt rail. The cathode of the first LED connects to the rail closest to the 5 Volt rail this is shown by the blue lines. The second LED is the same, except that it connects to the rail closest to the 5 Volt rail but on the other side. Connect the remaining two LED's but reach each LED over the rail closest to the 5V line to connect to the outer 2 rails in the block.\nI used the above connection arrangement to try to minimise the risk of the LED or resistor legs accidentally touching one another.\nOnce you've inserted all of the resistors followed by the LED's, connect the other end of each resistor to the Arduino Mega using jump wires. I used a sequence of colours to try to ensure that I connected them in order - but it doesn't really matter what order you connect them.\nConnect each of the jump wires to one of the Digital I/O pins numbered 22 through 53 on the Mega.\nThe photos show how the completed LED matrix is wired and how the jumper wires connect to the base of the Arduino Mega.\nHooking up the button\nThe connections to the button are exactly the same as the earlier project. Refer to the appropriate step above for details and diagrams. Basically the connections are:\nConnect one pin of the button to 5V.\nConnect the diagonally opposite pin to a 10K ohm resistor.\nConnect the other end of the 10K ohm resistor to GND.\nConnect the junction of the 10K ohm resistor and the button to pin 2 on the Arduino Mega.\n/******************************************************************************\n * Cooperative Multitasking\n *   07 - Mega Multitasking trace and blink with OO\n * \n * This is the seventh in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * The enhancement is to simultaneously blink 32 LEDs.\n * \n * This version also removes the chaser mode. Pressing the button, resets the\n * LED blink rates.\n * \n * The key takeaway from this project is how easy it is to add as many new\n * tasks as we need. In this case, simply by adding entries to the ledPins\n * array.\n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {\n          22, 23, 24, 25, 26, 27, 28, 29,\n          30, 31, 32, 33, 34, 35, 36, 37,\n          38, 39, 40, 41, 42, 43, 44, 45,\n          46, 47, 48, 49, 50, 51, 52, 53};\n#define LED_COUNT     (sizeof (ledPins) / sizeof(ledPins[0]))\n// Context information for sub-tasks\nunsigned long timePrev = 0;\n// Comment or uncomment this next line to disable or enable debugging\n// messages.\n// Note: debug messages can take a long time to output and will\n// interfere with the mulitasking.\n//#define DEBUG\n/************************************************\n * Class TimedTask.\n * \n * An abstract (incomplete) class that manages the scheduling of sub tasks.\n * \n * This class tracks the elapsed amount of time on behalf of it's subclasses.\n * When the alotted time has passed, the \"execute\" method will be invoked to\n * allow the task to do whatever it needs to do.\n * NB: This TimedTask class would ideally be \"factorised\" out into a library.\n *     If we did this, then the entire functionality could be accessed by a single\n *     line of code (as opposed to the 70 odd lines here. The single line of code\n *     would be something like: #include .\n */\nclass TimedTask {\n  public:\n    // Constructor - capture the time that has to pass until the task needs to be invoked.\n    TimedTask(unsigned long nextEventTime) {\n      this->nextEventTime = nextEventTime;\n    }\n    // Set the next event time.\n    void setNextEventTime(unsigned long nextEventTime) {\n      this->nextEventTime = nextEventTime;\n    }\n    // Abstract methods which must be implemented (defined) in a subclass.\n    virtual unsigned long execute();        // Execute the task.\n    virtual String getName();               // Retrieve the name of the task.\n    virtual void disableTask();             // Invoked when this task is being disabled.\n    virtual void enableTask();              // Invoked when this task is being enabled.\n    // Enable this task.\n    void enable() {\n      enabled = true;\n      timeSinceLastEvent = 0;               // Reset the elapsed time counter.\n      enableTask();                         // Notify the subclass that the task has been enabled.\n    }\n    // disable this task.\n    void disable() {\n      enabled = false;\n      disableTask();                        // Notify the subclass that the task has been disabled.\n    }\n    // Return the enabled/disabled state of the task.\n    boolean isEnabled() {\n      return enabled;\n    }\n    // Record the fact that time has passed.\n    void recordTime(unsigned long delta) {\n      timeSinceLastEvent += delta;          // Record the time and check if this task is due to be\n                                            // executed. NB: the task is only executed if it is enabled.\n      if (timeSinceLastEvent >= nextEventTime && enabled) {\n#ifdef DEBUG\n//        Serial.print (\"Executing task: \");\n//        Serial.println(getName());\n#endif\n        unsigned long nev = execute();      // Notify the subclass to do it's thing.\n        if (nev > 0) {                      // Record the next event time if it is non zero.\n          nextEventTime = nev;\n        }\n        timeSinceLastEvent = 0;             // Reset the time counter.\n      }\n    }\n  private:\n    unsigned long nextEventTime;            // Time that must pass before we invoke the subtask.\n    unsigned long timeSinceLastEvent = 0;   // The time has passed since the last invocation of the subtask.\n    boolean enabled = true;\n};\n/************************************************\n * Class BlinkTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that blinks a single LED.\n * \n * This class toggles the state of the LED when it is invoked.\n */\nclass BlinkTask : public TimedTask {\n  public:\n      // Constructor needs to know which pin the LED is connected to.\n    BlinkTask(int ledPin)\n      : TimedTask(0){\n      pinMode(ledPin, OUTPUT);          // Initialise the PIN as output.\n      digitalWrite(ledPin, HIGH);       // Turn the LED off.\n      this->ledPin = ledPin;            // track the pin.\n      setNextEventTime(offTime);        // set the time to the next invocation.\n      taskName.reserve(15);\n      taskName = \"blink \";\n      taskName += ledPin;\n#ifdef DEBUG\n      outputDetails();                  // print the details of this BlinkTask.\n#endif\n    }\n    // Execute the Blink Task\n    // This simply toggles the current state of the LED and returns the period\n    // of time that must pass before the next invocation.\n    unsigned long execute () {\n      ledOn = !ledOn;                   // Toggle the LED on/off flag.\n//      Serial.print(\"Turning LED \");\n//      Serial.println(ledOn ? \"on\" : \"off\");\n      digitalWrite(ledPin, ledOn ? LOW : HIGH);   // Set the LED state.\n      return ledOn ? onTime : offTime;  // return the next delay time.\n    }\n    // Retrieve the name of the task as \"Blink \" + the led's Digital Pin number.\n    String getName() {\n      return taskName;\n    }\n    // disable the blink task\n    void disableTask() {\n      digitalWrite(ledPin, HIGH);       // Turn the LED off.\n    }\n    // enable the blink task - nothing to do here.\n    void enableTask() {\n      onTime = randomInterval();      // The time the led will be on (ms)\n      offTime = randomInterval();     // The time the led will be off (ms)\n      setNextEventTime(offTime);\n      digitalWrite(ledPin, HIGH);\n#ifdef DEBUG\n      Serial.print(\"Enabling: \");\n      outputDetails();\n#endif\n    }\n    // print the details of this blink task.\n    void outputDetails() {\n      Serial.print(\"Blink task pin: \");\n      Serial.print(ledPin);\n      Serial.print(\", onTime: \");\n      Serial.print(onTime);\n      Serial.print(\", offTime: \");\n      Serial.println(offTime);\n    }\n  private:\n    unsigned long randomInterval() {\n      return 500 + random(1500);\n    }\n    unsigned long onTime = randomInterval();      // The time the led will be on (ms)\n    unsigned long offTime = randomInterval();     // The time the led will be off (ms)\n    boolean ledOn = false;                        // Initially the LED will be off.\n    int ledPin;                                   // The digital I/O pin for the LED.\n    String taskName;                              // the name of the task\n};\n/************************************************\n * Class ButtonTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that detects a button press.\n * \n * Ancillary methods may be invoked to ascertain if the button has been pressed or not.\n */\nclass ButtonTask : public TimedTask {\n  public:\n    // Constructor:\n    //   button Pin - the pin the button to be monitored is connected to.\n    //   nextEventTime - the time delay between checks to see if the button has been pressed.\n    ButtonTask(int buttonPin, unsigned long nextEventTime)\n      : TimedTask(nextEventTime) {\n        pinMode(buttonPin, INPUT);\n        this->buttonPin = buttonPin;\n        taskName.reserve(15);\n        taskName = \"****  button \";\n        taskName += buttonPin;\n      }\n    // Checks to see if the button has been pressed.\n    // If it has been pressed, it will debounce the press and\n    // set appropriate indicators recording the press when the button is released.\n    unsigned long execute() {\n                                  // Read the current state of the button.\n      int currButtonState = digitalRead(buttonPin);\n      if (prevButtonState == LOW) {\n        if (currButtonState == HIGH) {    // Button was just pressed.\n          debounceCnt = 0;                // Start the debounce count.\n          Serial.println(\"Button pressed\");\n        }\n      } else {                    // Previously the button has tracked as \"pressed\".\n        if (currButtonState == HIGH) {    // Is it still pressed?\n          debounceCnt += 1;               // Count the number of intervals that it has remained pressed\n        } else {                  // Button has been released.\n          Serial.print (\"Button released. Debounce Cnt: \");\n          Serial.println(debounceCnt);\n                                  // Set the button pressed flag to true, if the button has remained pressed\n                                  // for the required amount of time.\n          buttonPressedInd = (debounceCnt > debounceThreshold);\n          debounceCnt = 0;        // reset the debounce count.\n        }\n      }\n      prevButtonState = currButtonState;    // Remember this button state for next time.\n      return currButtonState == HIGH ? 1 : 10;  // Check every 1 ms while button is pressed,\n                                            // otherwise just check once every 10 ms.\n    }\n    // Retrieve the task name as \"button \" + digital pin I/O number.\n    String getName() {\n      return taskName;\n    }\n    // Enable the task - nothing special to do.\n    void enableTask() {\n    }\n    // disable the task - nothing special to do.\n    void disableTask() {\n    }\n    // Ancilliary method to query the state of the button.\n    boolean isButtonPressed() {\n      return buttonPressedInd;\n    }\n    // Ancilliary method to query the state of the button\n    // and reset it's state to false (not pressed)\n    boolean isButtonPressedAndReset() {\n      boolean result = buttonPressedInd;\n      buttonPressedInd = false;\n      return result;\n    }\n    // The number of times (ms) that the button must remain pressed to\n    // count as an actual press. Any \"presses\" less than this duration\n    // are ignored as noise.\n    const int debounceThreshold = 10;\n    \n  private:\n    int buttonPin;                // The digital I/O pin to which the button is connected.\n    int debounceCnt = 0;          // How many contiguous \"pressed\" readings have we observed?\n    int prevButtonState = LOW;    // State of the button - last time we checked.\n    boolean buttonPressedInd = false;\n    String taskName;              // the name of this task.\n};\n/*****************************************************\n * The task list.\n * \n * Establish an array of tasks. All of the tasks go into this array irrespective of their\n * specific type.\n * We seperately track the button task and chaser task, although not strictly necessary, in\n * individual variables (as well as in the array) so we can more cleanly interact with them.\n * \n * The array is an array of pointers to TimedTasks. This is to allow any class that extends TimedTask\n * to be placed into the array. The draw back is that technically we do not know what the task types are,\n * so we can only directly invoke the methods in TimedTask. Fortunately, through inheritence and abstraction,\n * the TimedTask can invoke the specific methods that are defined as abstract to obtain the specific tasks\n * function (i.e. the TimedTask can activate/call the specific task's individual \"execute\" method to get it to\n * do whatever it does).\n */\n// Define how many tasks there are in total.\n#define TASK_COUNT (sizeof taskList / sizeof taskList[0])\nTimedTask *taskList[LED_COUNT + 1];     // Note that the number of tasks is the number of LED's plus one\n                                        // as we do not need to have space for the (non-existant) chaser task.\nButtonTask *buttonTask;\n// Create as many blink tasks as defined in the ledPins array. There will be one\n// Blink Task for each defined pin.\n// This is called from setup and when the button is pressed (activating Blink Mode)\nvoid resetBlinkers(boolean create) {\n  for (int i = 0; i < LED_COUNT; i++) {\n    if (create) {\n      taskList[i] = new BlinkTask(ledPins[i]);\n    } else {\n      taskList[i]->enable();            // Our enable implementation, resets the operating parameters.\n    }\n  }\n}\n/***********************************************\n * Setup.\n * Initialise the serial monitor\n * Create all of the tasks.\n * Capture the starting time.\n */\nvoid setup() {\n  Serial.begin (9600);\n  \n  int cnt = 0;                    // Initialise the Serial port - but don't wait too long.\n  while (!Serial && cnt < 100) {\n    cnt++;\n    delay(1);\n  }\n  Serial.println(\"Initialising\");\n  resetBlinkers(true);               // Create the blink tasks.\n  \n  buttonTask = new ButtonTask(2, 10);   // Create the button task.\n  taskList[LED_COUNT] = buttonTask; // add it to the list of all tasks.\n  Serial.println(\"Ready\");\n  timePrev = millis();              // Initialise the \"previous time\" value to the current time.\n}\n/**********************\n * Loop\n * \n */\nvoid loop() {\n  unsigned long timeNow = millis();   // Obtain the \"current time\".\n  if (timeNow != timePrev) {          // Has time moved on?\n    unsigned long timeDelta = timeNow - timePrev;\n    timePrev = timeNow;               // Work out how much time has passed and capture \"now\" for next time.\n                                      // For each and every task (8 Blink + 1 chaser + 1 button monitor)\n                                      // record the fact that time has passed.\n                                      // This will invoke the individual tasks' \"execute\" method if it is due\n                                      // to be invoked.\n    for (int i = 0; i < TASK_COUNT; i++) {\n      taskList[i]->recordTime(timeDelta);\n    }\n                                      // Check if the button has been pushed.\n    if (buttonTask->isButtonPressedAndReset()) {\n       resetBlinkers(false);          // When moving into BLINK_MODE, generate new blinkers (with new random on/off times)\n    }\n#ifdef DEBUG\n    timePrev = millis();              // Reset the timer when debugging to allow for the fact\n                                      // that it takes a heck of a long time to output the debug messages.\n                                      // If you press the button when a large proportion of the LED's are lit,\n                                      // you can actually see the slow progress of the program as the LED's are\n                                      // turned off as each one's duty cycle is reset when the DEBUG messages\n                                      // are enabled.\n                                      // Compare this to the \"instaneous\" turning off of the LED's when\n                                      // the button is pressed with DEBUG messages disabled.\n#endif\n  }\n}", "step_imgs": ["https://cdn.instructables.com/FD0/KKYI/JT2SN6UC/FD0KKYIJT2SN6UC.LARGE.jpg", "https://cdn.instructables.com/FUX/DKPR/JT2SN7DY/FUXDKPRJT2SN7DY.LARGE.jpg", "https://cdn.instructables.com/FRN/145T/JT2SN7DZ/FRN145TJT2SN7DZ.LARGE.jpg"], "step_title": "Step 10: Mega Blinky LED Extravaganza"}], "channel": "Arduino"}, {"category": "Technology", "description": "Hi all! \"D\" here again for a prequel of sorts. I've already done a few Instructables, The Christmas Box ll, The Christmas Machine, and a Walkthrough. But there might have been a few of you asking, \"Where's the original Christmas Box? Why didn't he do that one first?\"\nWell there was a reason holding me back that I've finally come to grips with...\nFive or so years ago, I came upon Instructables for the first time. I had been looking to make a puzzle box for my boys. Christmas was around the corner and they were going to get two special presents that deserved a classy presentation, as well as a bit of work on their part. You see, they were getting cellphones for the first time, (almost a safety device these days), and the ones they were getting were better than mine! So I felt a bit of work on their part was definitely in order. But how to do it in a positive way that would also be enjoyable and a learning experience to boot?\nWhile scrolling through Pinterest I found a picture of an \"Enigma Box\" and tracked it back to Instructables. A new world opened up. I've always considered myself fairly creative but, WOW! The things I saw! LOL\nAnd there was my problem. I went looking through all the great ideas I found and kept coming back to the Enigma Box. It was almost perfect for what I needed. I actually thought about asking if the builder would make one for me. But what fun would that be?\nOnce I settled on an idea and started planning things out I started feeling bad, like I was stealing his ideas. It took me awhile to get over that. After all, we all would prefer to come up with fantastic ideas on our own. And I must say we most certainly do! But I had to accept the fact that every great idea we get in life has to come from somewhere and the great people that publish their works here are proud of what they make and want to share their ideas with others.\nBut I still felt a bit weird putting a first Instructable out there that wasn't based on one of my own ideas.\nSo now that I have a few under my belt, I would like to dedicate this Instructable to \"TXTCLA55\" who started me down this path. You can see his great Instructable on \"The Enigma Box\" here. The Enigma Box", "title": "The Christmas Box", "url": "https://www.instructables.com/id/The-Christmas-Box/", "steps": [{"step": 1, "steps_text": "The box shown in the Enigma Box Instructable seemed to have been created as a visual aid to help explain the workings and construction of the box, and it served its intended purpose. However, my box needed to serve as a presentation box as well as a springboard, or hub, for the other satellite puzzles that my boys were to find throughout their mysterious Christmas journey. My box would have to be more finished and more robust. I wanted to make it in such a way that it would not only survive its initial use, but could go on to become a family treasure that could be displayed and remembered if future generations so chose. Hopefully they will.\nAlso, on the Enigma Box, the electrical components were installed throughout the lid and lower section of the box. This would not work for me as my box was already shallow in height and I needed as much room as I could squeeze out of it for the gifts. It was at this point that I realized that if I could fit all of the components needed into the lid it would wind up being a lifesaver. And it was. Of course this meant I would end up having to fit 15 toggle switches, 2 snap switches, 2 pilot lights, a battery and its mount onto and into an already small lid. Good times!", "step_imgs": ["https://cdn.instructables.com/FA0/45UJ/JT4TUO7F/FA045UJJT4TUO7F.LARGE.jpg", "https://cdn.instructables.com/F7E/28F3/JTEN34R7/F7E28F3JTEN34R7.LARGE.jpg"], "step_title": "Step 1: ...Changes Are a Comin'"}, {"step": 2, "steps_text": "I had a small box in my garage. To be honest, I think it had me. As long as I have been alive I remember that little box being there. When I was a kid I remember seeing it in my dad's dresser. After he passed it went into a closet. Growing up I would spot it in various places always with different things inside. When it was time to sell my family home I spotted it in a cardboard box in my garage. I was going to throw it out but something told me to keep it. Now I understood why I did. Now it would finally find its purpose. These pictures are not ones of my box but you get the idea. I never took a picture of the box in its original state, for the reasons I stated earlier. I never planned on giving it an Instructable.", "step_imgs": ["https://cdn.instructables.com/F8V/TBXF/JSYZL7PJ/F8VTBXFJSYZL7PJ.LARGE.jpg", "https://cdn.instructables.com/F8B/SZDH/JSYZL7LO/F8BSZDHJSYZL7LO.LARGE.jpg", "https://cdn.instructables.com/FKA/J6J7/JSYZL7RC/FKAJ6J7JSYZL7RC.LARGE.jpg"], "step_title": "Step 2: I Knew I Saved It for a Reason..."}, {"step": 3, "steps_text": "The box was old, somewhere between vintage and antique. I had read other Instructables that had used Raspberry Pi's or Arduinos to control functions and centralize inputs and outputs on various builds. While this would have simplified things greatly and increased the things I could have made the box do, I felt it was important to stay true to the box itself. I wanted to try and keep the box as much of a period piece as I could. I wanted only to use components that would have been available at the time it was originally made, or items that had been made earlier. Things a mad inventor might have had laying around his shop from years passed.", "step_imgs": [], "step_title": "Step 3: Groundrules..."}, {"step": 4, "steps_text": "The main locking mechanism for the box would require fitting as many switches as I could onto the top of the box. The switches would have to be placed in the correct positions to allow power to flow to the main locking mechanism. This wound up being fifteen single pole double throw toggle switches I found at a vintage electrical supply shop. I noticed in the Enigma Box Instructable that single pole single throw switches were used. I realized that if I used that type of switch, all that would have to be done to open the box would be to turn all the switches to the on position, completely destroying the need for a combination.\nSingle pole single throw switches are either on or off. If all switches were installed facing the same direction, that direction would always be on. Single pole dual throw switches have two separate outputs, one for each throw position of the switch and each leads to a different output terminal on the switch.\nI guess you could say that instead of just needing six or eight switches to be placed in the correct position, all of the switches would have to be placed in the correct position, and depending on how I wired them, they could be whatever position I chose them to be. This would completely eliminate the chance of a person randomly being able to open the box. But if they did, I'd buy a lottery ticket!\n(If you only have access to single output switches you could turn the switches that are not in your combination upside down in relation to the others and run the power through all of the switches in series. That way all of the switches would have to be in the correct position.)", "step_imgs": ["https://cdn.instructables.com/FS0/3CFS/JSYZL76E/FS03CFSJSYZL76E.LARGE.jpg", "https://cdn.instructables.com/FKY/D4CJ/JSYZLLCO/FKYD4CJJSYZLLCO.LARGE.jpg", "https://cdn.instructables.com/FHN/SI7P/JSYZLLC0/FHNSI7PJSYZLLC0.LARGE.jpg"], "step_title": "Step 4: Switches, Switches, and More Switches!"}, {"step": 5, "steps_text": "OK so I was going to use toggle switches as my lock. Well toggle switches needed holes drilled in the top of the box to mount the switches through. And it was at this point that I had my first \"Holy @#$%\" moment.\nWhen I began to drill the first hole, the wood began to splinter from the top of the box. Luckily I stopped the drill in time. I contacted a friend of mine that does woodwork and he recommended using a few layers of painters tape on top of the box to keep the wood fibers in place. Please, for the love of whatever you hold holy, if you try this, make sure you use the light stick green painters tape to do this work. Other types of tape will literally pull the wood right off the top of the box.\nYou may notice that on my box I sunk the switch holes a bit below the surface of the top. I wanted to give the box a more finished look and it seemed to do the job. The first drill bit pictured here is called a spade bit. It makes drilling these types of recesses much easier. If you can, remove the box top and use a drill press to do it. Again, much easier. Remember, if you take this step, drill very lightly and slowly. You can always drill a bit deeper, but you can't put the wood back!\nAlso, make sure you lay out your design and spacing for the switches in advance. Think it completely through and plot things out with a very light pencil mark. This is not a video game. There are no resets or do-overs! I almost blew it myself!", "step_imgs": ["https://cdn.instructables.com/FWY/PXSR/JSYZLL19/FWYPXSRJSYZLL19.LARGE.jpg", "https://cdn.instructables.com/F21/BFHU/JSYZLESC/F21BFHUJSYZLESC.LARGE.jpg"], "step_title": "Step 5: Switches Need Holes..."}, {"step": 6, "steps_text": "Ok. So I had the switches in place, but it wasn't enough. I wanted to go further. I needed a way to make the box more magical and personal. One day I was rummaging through my local Michael's Store and came across a selection of small steampunkish do-dads. Among them I found two rectangular pendants that looked like they were designed specifically so that you could make your own jewelry out of them. They were perfectly flat and squared so I thought I might be able to do something with them. I decided to try to use them as a type of key to turn the box on. But, this would mean that the keys would have to be inserted in the box somehow. I was able to have a good friend mill two slots in the box's lid just the right size for the pendants to fit through. I then positioned a snap action switch next to each of the slots in such a way that the switches would be activated when each pendant (key) was inserted. I also purchased two leather necklaces and a package of craft alphabet letters and tried to artfully add them to turn the do-dads into fully functioning and personalized necklaces and keys. This would be important later!", "step_imgs": ["https://cdn.instructables.com/FH5/GHS9/JSYZL76V/FH5GHS9JSYZL76V.LARGE.jpg", "https://cdn.instructables.com/F4U/D9N6/JSYZL76K/F4UD9N6JSYZL76K.LARGE.jpg", "https://cdn.instructables.com/FF3/OSH0/JSYZL76W/FF3OSH0JSYZL76W.LARGE.jpg", "https://cdn.instructables.com/FOG/NB2K/JSYZL76X/FOGNB2KJSYZL76X.LARGE.jpg", "https://cdn.instructables.com/F7F/QL5G/JSYZL776/F7FQL5GJSYZL776.LARGE.jpg"], "step_title": "Step 6: Making Things Personal..."}, {"step": 7, "steps_text": "Once the switches were in place, it was time to get things wired up. I decided to make the circuit form a big loop, or series circuit. A series electrical circuit forms a single path for the electrical current to flow, kind of like water through a hose. By doing things this way, not only would the switches specified in the combination need to be in one specific position (as in the Enigma Box), the remaining switches would also have to be placed in the exact opposite position. I guess you could say that instead of a certain number of switches having to be placed in the correct position, all fifteen switches would have to be placed in whatever position I chose them to be in. If just one was not set correctly, the box would not open. The power would start at the source (a nine volt battery) travel through each of the snap switches, and continue on through all fifteen toggle switches until it reached its final destination. That destination wound up being a small 6-12 volt pull action solenoid positioned in the top of the box. The pilot lights would run in parallel to this circuit and their current would follow its own path back to ground (-). This can be seen in the diagram above. Below the solenoid you can see the brass strip and its latching hole that the solenoid's plunger fits into, when closed, to keep the box locked and secure.\nA mercury level switch was placed inline just before the solenoid to cut power when the lid was raised to lengthen battery life. A mercury switch is a switch that will only flow electrical current when placed in a specific orientation, or placed at a specific angle. When placed in the proper position, the small dab of mercury makes contact with the two nodes within the glass bulb and completes a path for the electrical current to flow. Different sizes and mounting types are available at electronic stores or online. The last image above is an example of this type of switch.", "step_imgs": ["https://cdn.instructables.com/F97/L30X/JSYZL77O/F97L30XJSYZL77O.LARGE.jpg", "https://cdn.instructables.com/FST/956E/JSYZLJ5O/FST956EJSYZLJ5O.LARGE.jpg", "https://cdn.instructables.com/FH4/CA9Q/JT4TUGI4/FH4CA9QJT4TUGI4.LARGE.jpg", "https://cdn.instructables.com/FYG/5287/JSYZLLSC/FYG5287JSYZLLSC.LARGE.jpg", "https://cdn.instructables.com/FLC/58FY/JTEN3W96/FLC58FYJTEN3W96.LARGE.jpg", "https://cdn.instructables.com/F05/RI8O/JTEN33X0/F05RI8OJTEN33X0.LARGE.jpg"], "step_title": "Step 7: Wiring"}, {"step": 8, "steps_text": "The Enigma box used LED Lights to indicate the box's state of operation. One to tell it was powered on, and a second to indicate it could be opened. The builder ran resistors in parallel with the lights so they wouldn't burn out. This was because the LED's run on far less voltage than the solenoid he used to open the box. This again is not a bad thing and it is done quite frequently in electronic devices.\nI like to keep my projects simple. The fewer components I can use means that there are less of them that can fail on me later. And seeing that I seem to eat lunch with MURPHY every day, I make a point to try to keep parts and components to a minimum.\nWhen I settled on a nine volt battery for my power supply I decided to try to keep all the powered components in the box capable of running on nine volts DC power, that way no resistors or other voltage matching components would be needed. The solenoid (I purchased mine from Adafruit) will operate on DC voltage six to twelve. The pilot lights were vintage units that are capable of having bulbs of different voltages placed within them.\nTwelve volt pilot lights are available at hardware and auto part stores. The nine volt battery will power them, they will just be a bit dimmer than normal. Look for ones with low ampere values so they will not eat a lot of power. Or if you want to keep them nine volts to match the battery, you can find nine volt pilot lights online. Different sizes and types are available.", "step_imgs": [], "step_title": "Step 8: Thoughts on Power"}, {"step": 9, "steps_text": "The finish on my box was, shall we say, gone. The box was at least as old as me \"don't ask\" and needed a makeover. A few years before I started building it I found a vintage bottle of surface restorer and picked it up in case I ever needed it. It was nice using a vintage product on a vintage box. If you build your own box and want to change its look you can find similar products at home centers and antique stores. They even had the same brand as the one I used at the supermarket.\nThe box went through a few changes along the way. I added different corner protectors and bits and pieces of decoration. If you do a search for box corner protectors or decorative box feet, you will find there are many to choose from.\nAlso, I cut some balsa wood pieces to fit and wrapped them in foam. I then covered them in a bit of red holiday fabric and hot glued the rear of the pieces to hold it on. I then fit them in place hand set. I didn't want to glue them in, just in case they needed to be removed.", "step_imgs": ["https://cdn.instructables.com/F8T/GWDD/JT4TUGIA/F8TGWDDJT4TUGIA.LARGE.jpg", "https://cdn.instructables.com/F1H/KLF2/JT4TUGI5/F1HKLF2JT4TUGI5.LARGE.jpg", "https://cdn.instructables.com/F8I/582A/JT4TXSDX/F8I582AJT4TXSDX.LARGE.jpg", "https://cdn.instructables.com/FIB/SZGB/JT4TXSW7/FIBSZGBJT4TXSW7.LARGE.jpg", "https://cdn.instructables.com/FCS/WDM1/JSYZL77X/FCSWDM1JSYZL77X.LARGE.jpg"], "step_title": "Step 9: Makin' It Nice!"}, {"step": 10, "steps_text": "The enigma box was built with two standard external hinges. You can just make them out in the first photo. A good choice for a prototype that was being used to create an Instructable as it was simple to install and allowed the builder to quickly move on to other more important aspects of the build. I sensed the builder was more concerned with getting his overall ideas across rather than making a final version of his work, and that's not a bad thing. Or, the box may have been found that way and he simply continued on with it to create the more creative aspects of his idea. Either way, no harm done. My box originally came fitted with an external brass piano hinge across the rear keeping the lid secure. This hinge was held in place with Phillips screws that could easily be removed by shall we say a young boy or two looking for an easy way to bypass my mysterious journey of clues and deeds. No! This box had to withstand the torture of two rabidly aggravated and frustrated young boys trying to gain access to hidden presents! So planning ahead, I removed that hinge and installed a set of heavy duty oversized hinges and secured them with tamper proof nuts and bolts. I thought of switching to a hidden internal hinge but the ones I went with looked amazing to me and increased the WOW factor of the box. I also reinforced the mounting of the solenoid and the brass strip so it could not easily be pulled open. It also helped that the little guy was pretty sturdy to start with. Its true. They don't make 'em like they used to! I also included a warning in the book they were to receive that the box was equipped with internal systems that would destroy its contents if they attempted to break into it (very Da Vinci Code right?). I thought the warning would be enough,and it was. But I did catch them brainstorming on how they might get it open in case of an emergency. Right! LOL\nYou might want to create a way to open your box in the event that you lose power, or the solenoid becomes jammed, or for any reason refuses to function. Once you mount the solenoid you can drill a tiny hole in the box directly in front of it, too small to be easily seen, where you can fit a very thin piece of wire, and use that wire to push the solenoid manually. (You can conceal such a hole with some type of decoration or wood putty.)", "step_imgs": ["https://cdn.instructables.com/FRI/JZNM/JT4TWRAY/FRIJZNMJT4TWRAY.LARGE.jpg", "https://cdn.instructables.com/F99/DLU1/JSYZL76O/F99DLU1JSYZL76O.LARGE.jpg"], "step_title": "Step 10: Making It Sneakproof"}, {"step": 11, "steps_text": "So, the opening process goes as follows...\n1. Find all clues and perform all tasks necessary to gather the items and information needed to attempt to open said box. More on this later!\n2. Insert the twin \"keys\" into the side panel of the box's lid.\nThis will turn on a green indicator light in the lid letting you know it is powered on.\n3. Use the clues you've discovered to set the appropriate switches in their \"correct\" position.\n4. When you see the white light. Open that box!", "step_imgs": ["https://cdn.instructables.com/FCC/64IN/JT2SKL00/FCC64INJT2SKL00.LARGE.jpg", "https://cdn.instructables.com/FXK/SIA5/JT2SKL05/FXKSIA5JT2SKL05.LARGE.jpg", "https://cdn.instructables.com/F9O/7PJ5/JT2SKL18/F9O7PJ5JT2SKL18.LARGE.jpg", "https://cdn.instructables.com/F3W/1ZL2/JSYZL77E/F3W1ZL2JSYZL77E.LARGE.jpg", "https://cdn.instructables.com/FEA/FEI7/JSYZL77H/FEAFEI7JSYZL77H.LARGE.jpg", "https://cdn.instructables.com/FFB/24ZP/JT2SKM0S/FFB24ZPJT2SKM0S.LARGE.jpg"], "step_title": "Step 11: Box Operation"}, {"step": 12, "steps_text": "From here on I will attempt to give a short description of the things my boys did (or went through, depends on your point of view LOL) to open the box. I think I enjoyed it more than they did. But thankfully, they really did enjoy it!", "step_imgs": ["https://cdn.instructables.com/F9C/ICGP/JSYZL76F/F9CICGPJSYZL76F.LARGE.jpg"], "step_title": "Step 12: ...and the Games Began"}, {"step": 13, "steps_text": "The boys received an envelope from a stranger dressed up in clothes straight out of \"A Christmas Carol\". I think this was the first time they used Google Translate. Translated it says \"The Christmas Box arriving December 2014!\"", "step_imgs": ["https://cdn.instructables.com/FEY/M8A1/JT2SMPTR/FEYM8A1JT2SMPTR.LARGE.jpg"], "step_title": "Step 13: Thanksgiving"}, {"step": 14, "steps_text": "A week or so later they received a package in the mail containing seemingly random objects.", "step_imgs": ["https://cdn.instructables.com/FEJ/W8LI/JSYZL7CD/FEJW8LIJSYZL7CD.LARGE.jpg"], "step_title": "Step 14: Wonderous Things"}, {"step": 15, "steps_text": "A few Days later, the box was delivered in a small crate filled with straw by a performer friend of mine that I work with now and again. He was dressed in Dicken's type attire and spoke with a hi brow British accent. He asked for my boys by name, Master Macklund and Master Ian, and informed them that this crate was being gifted to them by an unknown benefactor. They were then told to cherish the magic of Christmas and never let their hearts grow too old to dream. It was quite the scene.", "step_imgs": ["https://cdn.instructables.com/F6A/XH8P/JSYZL76H/F6AXH8PJSYZL76H.LARGE.jpg"], "step_title": "Step 15: Special Delivery!"}, {"step": 16, "steps_text": "Later, this book was given to the boys by Santa when they took a Christmas picture at the mall. The book was filled with the clues necessary to solve the box's riddles and puzzles. It also contained gift cards and they were told that the cards could be used to buy gifts for whoever they wished while they were shopping at the mall.", "step_imgs": ["https://cdn.instructables.com/FTC/4D7H/JT2SMPNY/FTC4D7HJT2SMPNY.LARGE.jpg", "https://cdn.instructables.com/FLT/JPQ8/JT2SKSDO/FLTJPQ8JT2SKSDO.LARGE.jpg"], "step_title": "Step 16: The Book"}, {"step": 17, "steps_text": "They tried and tried to make things happen with the box but nothing would work. One day I suggested we go shopping to get their minds off of it. I took them to an antique store, where I go quite a bit to look for bits and pieces, and told them to look around for something for their mom. I then asked the kind lady at the counter if she would place the pendants in one of her jewelry cases with price tags on them. When the boys saw them they came running. \"Dad, there are necklaces with our names on them!\" I did my best to seem shocked and agreed to purchase them, but told them not to show their Mom because they were already going to get presents for Christmas and she might get mad that we bought more. When we got home, they received a call from my performer friend and he congratulated them on finding the \"Keys\" he had left for them. He wished them well and told them that he hoped the keys would assist them in solving the box! It took a bit of investigating, but they finally got it! The keys were inserted and...\nThe Box was live!", "step_imgs": ["https://cdn.instructables.com/FCS/NN8H/JT4TUJP5/FCSNN8HJT4TUJP5.LARGE.jpg", "https://cdn.instructables.com/FSK/QLO6/JT4TUJT8/FSKQLO6JT4TUJT8.LARGE.jpg"], "step_title": "Step 17: The Antique Store"}, {"step": 18, "steps_text": "\"The Pen is Brightier Than the Sword\" is a reference to a special writing pen that they found in the objects that originally came for them. It had a small light on one end and when they shined the light on the back of the page, small boxes appeared and beside the boxes was written \"cut me out\", so they did. When they were young, \"The Pet Shop Boys\" was one of their favorite bands. I created a letter from a distant relative of ours (fictional) and when they placed the cutout page over it, the words in the cutouts read Pet Shop Boys Dancing. This was a reference to one of their favorite songs, \"Domino Dancing\". They ran to the random items, found the domino pendant, and put it aside. It wasn't until much later that they realized that they had to throw all of the first four switches in that row, not just the fourth one, to solve the box!", "step_imgs": ["https://cdn.instructables.com/FIL/9N4L/JT2SMN0W/FIL9N4LJT2SMN0W.LARGE.jpg", "https://cdn.instructables.com/FH8/06PR/JT2SKV48/FH806PRJT2SKV48.LARGE.jpg", "https://cdn.instructables.com/FUB/YJI7/JT2SMN2I/FUBYJI7JT2SMN2I.LARGE.jpg", "https://cdn.instructables.com/FBA/P9N4/JT2SKSIC/FBAP9N4JT2SKSIC.LARGE.jpg"], "step_title": "Step 18: Puzzle 1"}, {"step": 19, "steps_text": "The second page read \"Half OPEN\". They found some scrabble tiles among their items and arranged them to spell \"OPEN\". When you add up the number values of the tiles it comes out to six. And half of six is three. And yes, my wife was amazed that they got it quite quickly!", "step_imgs": ["https://cdn.instructables.com/FBO/CWY1/JT2SKSIB/FBOCWY1JT2SKSIB.LARGE.jpg", "https://cdn.instructables.com/FP7/SC61/JT2SMPK6/FP7SC61JT2SMPK6.LARGE.jpg"], "step_title": "Step 19: Puzzle 2"}, {"step": 20, "steps_text": "The last page of the book contained a letter from our fictional ancestor to his bride. It asked for a number plate from their old apartment. Again, they went and found it in the pile of things.\nThey struggled to figure out what to do with it. Then later on they went back to the page and noticed that on the back (drawn very lightly) were three mathematical symbols -++ 1929 1-9+2+9=3", "step_imgs": ["https://cdn.instructables.com/FLG/CZUD/JT2SMPF7/FLGCZUDJT2SMPF7.LARGE.jpg", "https://cdn.instructables.com/FL2/0VT5/JT2SMPBR/FL20VT5JT2SMPBR.LARGE.jpg", "https://cdn.instructables.com/FDN/D77B/JT2SMPGU/FDND77BJT2SMPGU.LARGE.jpg"], "step_title": "Step 20: Puzzle 3"}, {"step": 21, "steps_text": "Along the way, their unknown benefactor asked them to give a bit back. They were told that they didn't have to do these things, but I was quite proud when they did. And yes, none of these things will change the world, but for two young boys trying to do a little good it was more than enough for me!", "step_imgs": ["https://cdn.instructables.com/F1R/C6TC/JT2SMNYA/F1RC6TCJT2SMNYA.LARGE.jpg", "https://cdn.instructables.com/FRQ/NTZC/JT2SMO2Z/FRQNTZCJT2SMO2Z.LARGE.jpg", "https://cdn.instructables.com/F81/OM0E/JT2SMO34/F81OM0EJT2SMO34.LARGE.jpg", "https://cdn.instructables.com/FWE/0A3Y/JT2SMO4K/FWE0A3YJT2SMO4K.LARGE.jpg", "https://cdn.instructables.com/F3D/66O6/JT2SMO4W/F3D66O6JT2SMO4W.LARGE.jpg", "https://cdn.instructables.com/FK2/TLXX/JT2SMO6K/FK2TLXXJT2SMO6K.LARGE.jpg"], "step_title": "Step 21: Acts of Giving"}, {"step": 22, "steps_text": "Did you notice anything on the puzzle pages? In the lower corners were small dots: one, two, then three. These were clues as to which row of switches corresponded to which clue in the book. On the side of the box I added small iron brad tacks - one, two, and three. Once they matched the number of nails to the dots on the clues they figured out which switches to throw and...it opened, and all was right with the world.\nI didn't realize how much doing something like this would affect me, or how much of an adventure it could turn into for two young boys. Hopefully it, and the other Christmas adventures I have made for them {The Christmas Box ll, The Christmas Box lll, and, The Christmas Machine}, will be things they can remember throughout their grown up lives. Who knows, maybe it can start, for them, a new tradition. Check out The Christmas Box ll and the Christmas Machine here on Instructables. They're not half bad. There's even a Walkthrough!\nThere comes a point when you look back and say, \"I wish I had done so much more with my kids.\"\nIt's very true. They're only young once, and there's so much more I wish I had done. Do something fun and crazy for your kids. If just one of you does anything because of something I've written, then it's been worth all of the writing, rewriting, and rewriting lol.", "step_imgs": ["https://cdn.instructables.com/FF5/OU4J/JSYZL76P/FF5OU4JJSYZL76P.LARGE.jpg"], "step_title": "Step 22: OK, Now What?"}, {"step": 23, "steps_text": "If you would like to make a similar project I'll do my best to put a basic parts and tool list together. Depending on what you choose to do you can add or take away as needed.\nParts,\nBox of your choice-1\nNine Volt battery with mount of your choice-1\nSPDT or (three way) toggle switches-as per your design\nSnap action micro switches-2\nPilot lights-2\nDC Solenoid 6-12 volt Pull type-1\nStranded or solid wire-as needed\nBrass bar stock 1/8\" by 1\" by 8\"\nTamper proof screws, nuts and bolts-as needed\nCraft balsa wood square stock stick 1/4\" by 1/4\" by 1 ft.\nDecorative corner protectors, feet and other embellishments-as per taste.\nTools,\nScrewdrivers-as needed\nDrill bits-as needed\nPointed Punch\nWood craft saw\nDremel tool (optional as needed)\nThin wall socket-sized to tighten toggle switches and pilot lights onto box if needed\nGreen painters tape\nWire cutters\nDrills or drill press- as needed\nForgive me, but I don't want to send you down a path with links and retailers where I found the exact parts I used. The parts I've listed are rather common and things like the switches and decorations can be changed up to suite your own creative preferences. Instead of a Christmas Box, how about a Birthday Box? Instead of toggle switches, try slide switches, or numeric code switches. Push buttons could work as well. Instead of a solenoid, try using a servo, or a linear actuator. Instead of a small box, use a suitcase or steamer trunk. The possibilities are endless. Let your box be a reflection of you.", "step_imgs": [], "step_title": "Step 23: A Place to Start"}, {"step": 24, "steps_text": "Thanks for reading along. This Instructable was long overdue. If anyone has used anything I've come up with in any of my Instructables to their benefit, a big thumbs up to you! Again, a big, big thanks to \"TXTCLA55\" for the big hunk of inspiration! We can all learn so much from each other, and we are all bigger and better together! Make something amazing! But don't just make a copy, Make it your Own!\n\"D\"", "step_imgs": [], "step_title": "Step 24: Epilogue"}], "channel": "Art"}, {"category": "Technology", "description": "This project is an extension or remix of my original Portal Turret on Instructables (Portal-2-Turret-Gun). It can also be used as a cheap controller to control anything that uses the nRF24L01 radio chip. The LCD screen is particularly useful when customizing.\n(It turns out to be quite useful in checking when my radios establish and lose connections with other nRF24L01's on the \"network\". I can walk around and watch the display screen show the connection status of the radios! Quite helpful for adjusting settings and verifying range!)\nAfter I had completed the Portal Turret, I saw a short video clip of the Cara Mia opera scene at the end of Portal 2. I thought, \u201chey, I\u2019ve built a few turrets now. I can do that!\u201d Well, I had the turrets, but to make it work, they would now need to communicate with each other, or with some other device. After giving it some thought, and thinking that manual control would also be cool, I ended up deciding that I would build a Master Turret Controller, or an MTC.\nOk, so how to go about this? Well, I didn\u2019t feel like modifying the turrets too much, so that was a constraint. I had some nRF24L01 radio chips which I hadn't yet used, and thought that would keep in line with my goal of using inexpensive components and relying on mechanical design and code to make this work. I would have to build a controller and started mulling over what the controller would contain and what exactly I could do to the turrets. Cara Mia was already on the agenda, but what else?\nManual control: So once the wings are open, I would like to control the pitch and the pivot. 2 axes = a joystick, so joystick control and some push buttons. Push button 1 would fire the turret, and maybe push button 2 would make it say one of its sayings. Sounds good! Simple enough\u2026\nChat: I recently saw the \u201cWho\u2019s on First\u201d - Abbott and Costello routine again, and a light went off in my head! I would also make a sketch comedy routine using all of the sayings, using multiple turrets!! Ok, this one wasn\u2019t fully figured out, but I\u2019m sure I would get it sorted once my build was underway.\nI also wanted this MTC to be wireless, so I opted for a simple 9V battery powered option and designed the controller to be powered by the mini-USB plug through the Nano at the back. Useful for updating too.", "title": "Portal 2 Turret - Master Turret Control", "url": "https://www.instructables.com/id/Portal-2-Turret-Master-Turret-Control/", "steps": [{"step": 1, "steps_text": "I first got the radio working with a few bare Nanos, to make sure I could make it work and send information between multiple devices. Once that was done, it was a matter of incorporating the radio into the existing turrets. Hmm, adding the physical PCB into the turret was pretty easy. I just modified the chip holder to include the nRF24L01, the Nano and the mp3 chip. Ok. One physical part modified, with some wiring.\n\nThe modified chip holder is already part of the turret printed parts now. I just deleted the non-radio option from the printed parts in that build. It won\u2019t make a difference if someone wants to build the non-radio variant. Just don\u2019t include the nRF24L01 radio chip.", "step_imgs": ["https://cdn.instructables.com/FTN/OSS2/JT4MTD1T/FTNOSS2JT4MTD1T.LARGE.jpg"], "step_title": "Step 1: Incorporating the Radio Into the Turrets"}, {"step": 2, "steps_text": "Uh oh...\nThis wasn\u2019t looking good. I needed to add 5 connections to the Nano, and I was already low on available pins. After looking into this for a bit, I realized which connections took precedence, and recognized that to make this work, I would have to remap most of the existing Nano connections.\nTo those who want to make a \u201cRadio Turret\u201d and have already built the previous gen... Sorry\u2026\nNow, I\u2019ve done this change a few times and it turns out that the process isn\u2019t too bad. It does involve going back in, but I was able to undo the existing connections to the Nano and then reconnect to the appropriate pins without too much grief. I added the 7 wires for the radio chip to the nRF24L01 (5 comm wires, 3v and GND), then connected the other ends to the Nano.\nMore wires in there now though, so it makes that much more important to keep things tidy when routing the wires.\nIMPORTANT: When assembling, make sure the wires don\u2019t press on the Nano reset button on the board!! That happened to me on one and threw me for a needless loop!\nSo the turret build now has 2 wiring schematics: the old legacy \u201cnon-radio\u201d option and the revised \u201cradio Turret\u201d option. If building a \u201cnon-radio\u201d turret today, I would still use the radio schematic and code. Just delete or comment out the radio portions if that\u2019s the chosen route, or not. The turret should still work on its own without the radio.", "step_imgs": ["https://cdn.instructables.com/FPY/B4I7/JRYTUG9M/FPYB4I7JRYTUG9M.LARGE.jpg", "https://cdn.instructables.com/FQ6/27BH/JRYTUGAK/FQ627BHJRYTUGAK.LARGE.jpg", "https://cdn.instructables.com/FBP/FV36/JRYTUGAH/FBPFV36JRYTUGAH.LARGE.jpg", "https://cdn.instructables.com/FDB/E5PS/JT4MTDFA/FDBE5PSJT4MTDFA.LARGE.jpg"], "step_title": "Step 2: (Re)wiring of the Turrets"}, {"step": 3, "steps_text": "Having the turrets sorted out, it was time to make an MTC.\nThe MTC uses the following components, all sourced through Amazon or Baggood or Ali Express, etc. I\u2019m showing the Amazon part numbers that I referenced for reference, since these items are commonly available and reasonably priced (and I didn\u2019t have to wait 2+ weeks to get my hands on what I needed before I could start the mechanical design!)\nArduino Nano 0.96\u201d LCD, (SSD1306) I used the Blue/Yellow version\nSmall Joystick (HW-504) 5V PS joystick module\nToggle switch (dx-004) 22mm * 13mm\nRadio - (nRF24L01)\n12mm pushbuttons (CLT1088 for coloured buttons, PBS-33B for black)\n2 mm screws (M2 Self Tapping Screws Set, Cross Drive Pan Head assortment)\n5mm LEDs of your choice for indicators. (Don\u2019t use bright LEDs!!)\nGeneric 9V battery connector with pigtails\n9V battery (use a good one, not one of the dollar store varieties which can\u2019t always supply enough power for these projects!)\nI used silicone sheathed wire. I like using it for these projects.\nI originally used some bright LEDs, but found they were too good. They were blinding me! I ended up using some old, weak LEDs, and that made more sense for this application.", "step_imgs": ["https://cdn.instructables.com/FZK/ZHYE/JT2SNBR1/FZKZHYEJT2SNBR1.LARGE.jpg", "https://cdn.instructables.com/FPH/JIL0/JT2SNBLF/FPHJIL0JT2SNBLF.LARGE.jpg", "https://cdn.instructables.com/FZG/PXSZ/JT2SNBRC/FZGPXSZJT2SNBRC.LARGE.jpg", "https://cdn.instructables.com/F6Y/85NZ/JT2SNBLR/F6Y85NZJT2SNBLR.LARGE.jpg", "https://cdn.instructables.com/FIG/2KQN/JT2SNBS1/FIG2KQNJT2SNBS1.LARGE.jpg"], "step_title": "Step 3: MTC Electrical Components"}, {"step": 4, "steps_text": "I designed the MTC using Fusion, similar to the way I did the turret design.\nThe printed assembly only requires 3 parts:\nTop panel (version 1 or 2)\nBottom housing\nLCD strap\nThe nRF chip, the Nano, the 9V battery, the toggle switch and the LEDs are installed in the top plate without fasteners. The LEDs just press in the plate and are held in place by tabs. They should just snap in, but don\u2019t overdo it. The top plate is designed to snap-hold the Nano, and the nRF chip should go in gently. Careful with the nRF small tab; it is small and is bent back to open up and released to capture the chip. Even though its travel is limited, be gentle here.\nThe joystick and the LCD need 2mm screws (5mm long) to hold them to the top plate. The joystick PCB has large holes, so I felt I needed small washers to make sure the screws didn\u2019t pull through.\nI\u2019ve found that the PCB\u2019s the LCD\u2019s come on vary slightly dimensionally from manufacturer to manufacturer, so I opted to use a simple strap to hold it in place instead of cleats or hooks.\nNote that the LCD can be physically installed into the top plate either way, but the display only shows up fully through the opening in one orientation! For this reason, I\u2019ve included a 2nd top plate option when using the split yellow/blue screen. One version has the yellow at the top, and the other will show the yellow at the bottom as shown in my photos.\nFor the single colour version LCD, it doesn\u2019t matter which one is used as you can flip the display using software.\nSince all the wiring is done on the top plate, the bottom is effectively just a cover held to the top plate with longer 2mm screws (qty:4).\nInstead of a \u201cbattery door\u201d option, I just incorporated the battery into the top plate. This means removing the 4 screws that hold the bottom to the top to change a battery, but since it can also be powered by USB cable, not the end of the world. The top plate is made with a 9V battery holder system that should be sturdy enough for repeated use, isn\u2019t overly complicated but prevents the battery from moving around.\nI printed the top plate in 2 colours as seen in the photos. I use a Prusa i3 Mk2 without the multi colour option, but use their colour print tool (https://www.prusaprinters.org/color-print/) to change colour partway through the process. Check the layer that the text stops and becomes solid, and make that the transition layer. Voila! Coloured text!\nI printed the parts at 0.35mm layer height since there is no need for finer resolution on these flat parts. I also prefer the way it looks at this resolution. Oh, and it prints pretty quickly too!", "step_imgs": ["https://cdn.instructables.com/FZ7/HJXH/JT2SNBQ0/FZ7HJXHJT2SNBQ0.LARGE.jpg", "https://cdn.instructables.com/FJT/XLN2/JT2SNBPY/FJTXLN2JT2SNBPY.LARGE.jpg", "https://cdn.instructables.com/FEH/FMT2/JT2SNBJA/FEHFMT2JT2SNBJA.LARGE.jpg", "https://cdn.instructables.com/FJZ/QMDO/JT2SNBQQ/FJZQMDOJT2SNBQQ.LARGE.jpg", "https://cdn.instructables.com/FY6/AVP9/JT2SNBQI/FY6AVP9JT2SNBQI.LARGE.jpg"], "step_title": "Step 4: 3D Printed Parts"}, {"step": 5, "steps_text": "The electrical components are all installed on the underside of the Top plate, and all wiring is done together. Push buttons and toggle have to be installed first, and the LCD, Nano, Joystick, nRF radio can all be pre-wired before being installed in the Top plate. I recommend this method of pre-wiring the individual components, then making the final connections to the Nano at the end. I also recommend uploading the sketch to a bare Nano first, before completing the wiring.\nThere is nothing more satisfying than switching the device on and watching it come to life as expected when finished!\nThe only electrical part prep required was to remove the header pins from the joystick to make it fit under the top plate. The LCD screen can be purchased with or without pins installed, and will work either way. The Nano should be selected without header pins.", "step_imgs": ["https://cdn.instructables.com/F7O/562F/JT2SNB2Z/F7O562FJT2SNB2Z.LARGE.jpg", "https://cdn.instructables.com/F7R/DBHI/JT2SNB4B/F7RDBHIJT2SNB4B.LARGE.jpg", "https://cdn.instructables.com/FC6/SYIA/JT2SNB3R/FC6SYIAJT2SNB3R.LARGE.jpg", "https://cdn.instructables.com/FML/74LV/JT2SNB4T/FML74LVJT2SNB4T.LARGE.jpg", "https://cdn.instructables.com/FXH/NZH8/JT2SNB4U/FXHNZH8JT2SNB4U.LARGE.jpg", "https://cdn.instructables.com/F4K/IQWF/JT2SNB5L/F4KIQWFJT2SNB5L.LARGE.jpg", "https://cdn.instructables.com/FID/11W6/JT2SNG4T/FID11W6JT2SNG4T.LARGE.jpg"], "step_title": "Step 5: Electrical Assembly"}, {"step": 6, "steps_text": "Code for MTC, Red turret, White Turret and Blue Turret now up!\nWell, this was an experience in coding! I had the turret working independently, but incorporating the radio was more difficult than I originally thought! I also had some fun getting the \u201cChat\u201d section to work as desired (more on that later).\nThe MTC code, once fully figured out, started taxing memory limits of the Nano! I had to make adjustments and economize the code to be more memory efficient. Another good learning experience.\nI\u2019ve included the corresponding \u201cTurret w radio option\u201d code in this build, as they work together. Building the radio option turret per the Turret build page will make it ready for use with the MTC, or for your other nRF24L01 method of control.\nAlso, getting the sounds to work with this code took some time, and since the sounds were taken from other publicly accessible websites, I incorporated all sounds as I\u2019ve used them in a couple of ZIP files; one for the regular turret, and one for Defective turret. The good thing for you, dear reader, is that you can use the sounds on your SD cards with the codes as written and you\u2019ll be good to go!", "step_imgs": [], "step_title": "Step 6: Code"}, {"step": 7, "steps_text": "The MTC code starts up with a custom Splash screen, then checks on the status of the turrets. If no turrets are present, it will just sit there until turrets connect!\nIf at least one turret is connected, the main menu will display and the \u201cReady\u201d LED will illuminate, unless the turrets are interrupted or are busy \u201cdealing with someone\u201d. If they are busy, a \u201cTurrets are Busy screen\u201d will be displayed, and the \u201cBusy\u201d LED will illuminate.\nAll actively connected turrets must be in \u201cReady Mode\u201d before the MTC can control the turrets.\nUse the joystick (up and down) to cycle through the menu choices:\nAria\nChat\nManual\nSelect the desired option using the \u2018X\u2019 button, or by pressing down on the joystick.\nAria Mode - selecting this option will display the \u201cAria Mode\u201d screen and make the turrets perform the Aria scene at the end of the Portal 2 game. Once complete, the turrets will close up and wait for a command or someone to wake them up.\nChat Mode - Selecting this option will display the \u201cChat Mode\u201d screen and start the Chat sequence. Once complete, the turrets will close up and wait for a command or someone to wake them up.\nManual Mode - Selecting this option will display the \u201cManual Mode\u201d screen, illuminate the \u201cManual\u201d LED and allow manual operation of the turrets. Joystick control of pitch and pivot. Pressing the \u2018X\u2019 button will activate the firing sequence. Pressing the \u2018T\u2019 button will make them \u201ctalk\u201d, where the turrets speak a random saying from their library.\nPressing the \u2018<\u2019 or back button will cancel these three modes, close up the turrets and return to the main menu.\nIf you would like to see the connection status of your swarm of turrets (currently limited to 3), press the \u2018T\u2019 button when in the main menu. You will be taken to the \u201cturret status\u201d screen, where you can see the connection status of each turret.\nWhen in the \u201cturret status\u201d screen, you will see the status of each turret.\nReady - ready for control\nBusy - turret is busy \u201ctending\u201d to someone\nNot available - MTC cannot connect with this turret\nPress the \u2018<\u2019 button to return to the main menu.", "step_imgs": ["https://cdn.instructables.com/F40/5LCW/JT2SNBNZ/F405LCWJT2SNBNZ.LARGE.jpg", "https://cdn.instructables.com/FYA/X7PU/JT2SNBO2/FYAX7PUJT2SNBO2.LARGE.jpg", "https://cdn.instructables.com/FHB/2CCH/JT2SNBO0/FHB2CCHJT2SNBO0.LARGE.jpg", "https://cdn.instructables.com/FVZ/K847/JT2SNBOD/FVZK847JT2SNBOD.LARGE.jpg", "https://cdn.instructables.com/FB8/WU53/JT2SNBPC/FB8WU53JT2SNBPC.LARGE.jpg", "https://cdn.instructables.com/FQ9/JSIA/JT2SNBPX/FQ9JSIAJT2SNBPX.LARGE.jpg"], "step_title": "Step 7: MTC Menu - Navigation"}, {"step": 8, "steps_text": "The screen shot shown here shows what I was staring at for far too long... 4 sketches at a time! Who said debugging isn't fun!\nThe code provides the control and options shown above, but what about customizing the code?\nOf course! But there is a fair amount going on here, so here are some guidelines or tips.\nTip1 - Modifying \u201cChat\u201d sequence. This modification takes place in the turret code.\nI tried to come up with a way of making the code work for me wherever I could. Making the chat sequence more editable (Is that a word?) so that I could focus on the story took more work up front, but makes it easier to customize afterwards.\nChanging the Chat sequence using the coding structure provided can be done in a pretty straightforward way, provided you follow the method used in the code. Using the sound files provided, from the Portal 2 game, you would only need to change the (chatSayings[]) table.\nSelect the saying for either the regular turret or defective turret. The saying is the mp3 file that is identified by \u201c00XX -\u201d followed by text describing the saying. It is the number that is the important part. Turret # 1 would use this XX value in the table. Turret # 2 would prefix the XX value with a \u20181\u2019, and turret # 3 would prefix the XX value with a \u20182\u2019. So, for example, if you were selecting the saying, \u201c0040 - sorry\u201d expression, and wanted turret # 3 to say it, you would insert \u201c240\u201d into the table in the correct sequence. If turret # 1 were to say it, you would insert \u201c40\u201d into the table.\nDo the same for the next expression, and so on. It could be a few expressions between the turrets, or quite a few. (I\u2019m not aware of the limitations of this method, other than memory).\nYou would not need to change the values of the other tables as they are the timings which correspond to the saying in the table. The only other line to change is around line 520.\nif (i >= 43) { // end of sequence\nThe value of i here would have to be set to the number of sayings in the chatSayings[] table.\nTo make completely customized sayings, (where the real fun begins!), you would need to set up the expressions in numbered files, and know the length of time needed to play the file. Save the file into the \u201cmp3\u201d folder in the root directory of the SD card using the four digit method (\u201c0001\u201d, \u201c0002\u201d, etc.). Then log the time in milliseconds that it takes for that file to play. Insert these values in the appropriate table.\nSo for an expression saved as, \u201c0037 - [your expression]\u201d, which takes 5400 milliseconds to play, you would put \u201837\u2019 in the chatSayings[] table at the appropriate location (and add the prefix depending on which turret is saying it), and 5400 in the NormaTimings[] table at the same location (such as 5th item in each table).\nNow when the value of \u2018i\u2019 is incremented, the code will play 0037 for 5400 milliseconds.\nNote that I've added a \"timeadder\" variable which adds a little extra time to each saying when playing. This gives a little distance between sayings so they don't appear to overlap.\nThe beauty of this method is that the completed tables are the exact same in each turret! No need to customize these tables for each turret. You only need to sort out one table, and the code figures out what each turret says based on the same table.\nThis means that you can focus on script writing instead of coding!\nIf someone has a better way of doing this, I'd love to hear it!!", "step_imgs": ["https://cdn.instructables.com/F6E/2S10/JT4MTD1R/F6E2S10JT4MTD1R.LARGE.jpg"], "step_title": "Step 8: Customizing the Code"}, {"step": 9, "steps_text": "So this took more time than I thought, but I\u2019m rather tickled by the result. Some of the Chat routines still make me laugh!\n\nI would love to hear other methods of doing the things I did within my code. I\u2019m sure there are sections that could be rewritten and use less memory, allowing for more features or options.\nI would also love to see other ideas incorporated into the MTC and control of the turrets!\nI hope I have provided a platform for other designers and coders to use / steal / learn from. I could see this being used to help people learn to code. Remove a section from the MTC and/or turret, like \"Manual mode\" for example, and get students to develop their own way to incorporate manual control!\nI\u2019ve learned a lot from this community and the broader web in general. I\u2019m still amazed how many people spend gobs of time figuring things out and sharing them with the world. I figure I should take what I\u2019ve learned, apply it, then share it with you as well!\nGood luck and have fun building your own army of turrets!", "step_imgs": ["https://cdn.instructables.com/FYO/1GD1/JT2SNBIR/FYO1GD1JT2SNBIR.LARGE.jpg"], "step_title": "Step 9: Summary"}], "channel": "Arduino"}, {"category": "Technology", "description": "A weather monitoring system is a cool project that helps you learn the basics of electronics and with the added benefit of monitoring the weather conditions. It can be very useful in farms for knowing the local weather and understanding the patterns through stored historical data.\nI was fascinated to make this project by seeing this project on the internet:\nhttps://www.instructables.com/id/Esay-IoT-Weather-Station-With-Multiple-Sensors/\nIn this instructable, I am going to show you how to build a weather station using a bunch of cheap and affordable parts and sensors. The total cost for building this project is under $25. The station sends the data to a web app through which we can monitor Temperature, Humidity, Pressure, and Altitude. It's a pretty easy setup and you just need some basic electronic skills to get it going.\nThe features of this weather station:\nIt can measure Temperature, Humidity, Barometric Pressure and Altitude.\nYou can monitor the above values using a web app either from a Smartphone or a Laptop.\nThe whole circuit along with the power supply is enclosed in an MDF Box.\nYou can charge it using a Micro USB cable or even solar power.", "title": "Cheapest Solar Powered Weather Monitoring System Using NodeMCU", "url": "https://www.instructables.com/id/Cheapest-Solar-Powered-Weather-Monitoring-System-U/", "steps": [{"step": 1, "steps_text": "Parts Required:\nNodeMCU Board V0.9 or 1.0\nDHT-11 for Temperature and Humidity\nBMP-280 for Barometric Pressure\nRain Sensor (optional)\nLDO S111733PI\n18650AA Rechargeable Li-ion Battery x1\nTP4056 Charging Board\nSolar Panel (5.5 to 6v/100-120ma)\n10kohm Resistor x1\nOther Materials and Tools:\nPerforated Board (PCB) x1\nAWG wires\nScrew Terminals x2\nFemale Header Pins\nMDF sheet\nSoldering Iron\nDuct Tape\nHot Glue Gun\nA micro USB cable\nFor Testing (optional):\nBreadboard\nJumper Wires", "step_imgs": ["https://cdn.instructables.com/FTG/5B8V/JSYZDLW8/FTG5B8VJSYZDLW8.LARGE.jpg", "https://cdn.instructables.com/FRO/IAVR/JSYZDM03/FROIAVRJSYZDM03.LARGE.jpg", "https://cdn.instructables.com/FAT/6G0Q/JSYZDM5X/FAT6G0QJSYZDM5X.LARGE.jpg", "https://cdn.instructables.com/F1E/03VU/JSYZDM3Z/F1E03VUJSYZDM3Z.LARGE.jpg", "https://cdn.instructables.com/FMK/GZ6G/JSYZDM21/FMKGZ6GJSYZDM21.LARGE.jpg", "https://cdn.instructables.com/FUG/F0FV/JSYZDLUA/FUGF0FVJSYZDLUA.LARGE.jpg", "https://cdn.instructables.com/F5B/090W/JT2SIV93/F5B090WJT2SIV93.LARGE.jpg"], "step_title": "Step 1: Parts and Tools Required"}, {"step": 2, "steps_text": "The NodeMCU Board:\nThe NodeMcu board is, in fact, an Arduino with a wifi shield. This wifi shield is called the esp8266. The shield can be bought and used as an individual controller, a well-known version is the esp8266 V1 which has only got 2 digital pins. The later version does have more digital pins.\nSo we use this wifi shield to transmit our sensor data to our web app using Thingspeak API's.\nThe DHT-11\nThe DHT-11 has a successor named DHT-22 which is a little more accurate and consumes less power. You can distinguish between DHT-11/DHT-22 based on their color. Most of the DHT-11 sensors in the market are of Blue color where DHT-22 is in White.\nThe DHT-11 has 4 pins in order from the left:\nVin (First one from the left)\nData\nNULL\nGND\n\nThe BMP-280\nThe BMP-280 sensor is used to measure the Barometric Pressure. The BME280 is the next-generation of sensors from Bosch and is the upgrade to the BMP085/BMP180/BMP183 - with a low altitude noise of 0.25m and the same fast conversion time.\nThe advantage of this sensor is that it can use either I2C or SPI for communication with the microcontroller. For simple easy wiring, I used the I2C version board.\nThe Rain Sensor (optional)\nThe rain sensor detects water that completes the circuits on its sensor boards' printed leads. The sensor board acts as a variable resistor that will change from 100k ohms when wet to 2M ohms when dry.\nI have used the Rain sensor in the testing phase but removed in the final project as Its use is not much effective in this project. You can use it if you need rain sensor in your project (I have written the respective code for the rain sensor too.)", "step_imgs": ["https://cdn.instructables.com/FA8/X2AC/JSYZDMV1/FA8X2ACJSYZDMV1.LARGE.jpg", "https://cdn.instructables.com/F16/8U1F/JSYZDS6B/F168U1FJSYZDS6B.LARGE.jpg", "https://cdn.instructables.com/FEC/YNIC/JSYZDYAL/FECYNICJSYZDYAL.LARGE.jpg", "https://cdn.instructables.com/FD4/YMCV/JSYZDYB9/FD4YMCVJSYZDYB9.LARGE.jpg"], "step_title": "Step 2: Measuring the Weather Data"}, {"step": 3, "steps_text": "I can recommend you to connect the sensors one after the other, starting with the DHT11/DHT22 sensor. Once a sensor is working properly you can go on and add the next sensor.\nOnce Successfully connected, move to the Coding Phase.\nData Connections:\nDHT-11\nData ------- D4\nVin ---------- 3.36v\nGnd --------- Gnd\nPut a 10k ohm resistor between Data and Vin\nBMP-280\nSCL ------- D1\nSDA ------- D2\nVin --------- 3.36v\nGnd -------- Gnd\nRain Sensor\nData ------ A0\nVin -------- 5v / 3.36v\nGnd ------- Gnd", "step_imgs": ["https://cdn.instructables.com/F5G/TU1J/JSYZDYVB/F5GTU1JJSYZDYVB.LARGE.jpg", "https://cdn.instructables.com/FEF/SWM4/JT2SIW6C/FEFSWM4JT2SIW6C.LARGE.jpg", "https://cdn.instructables.com/F32/S4LT/JSYZDYVY/F32S4LTJSYZDYVY.LARGE.jpg", "https://cdn.instructables.com/F9R/VIHC/JSYZDYWL/F9RVIHCJSYZDYWL.LARGE.jpg", "https://cdn.instructables.com/FX1/FPQM/JSYZDYWN/FX1FPQMJSYZDYWN.LARGE.jpg"], "step_title": "Step 3: Connecting the Sensors"}, {"step": 4, "steps_text": "First, I tried several sketches available on the internet. I found out that most of the sketches were written in LUA language and therefore useless for me (as I thought to use Arduino IDE).\nThen I started writing my own code and got successful.\nBefore executing the code, download the necessary libraries required for the microcontroller and the sensors. (Scroll down to get download links for the Libraries)\nIn the code below:\nEnter Your Wifi SSID Name and Password.\n\nThingspeak API's\nAs we are going to push our data to Thingspeak we have to make an account. Thingspeak is a cloud service. Next, to this, Thingspeak provides several options for interaction with your data such as Thingtweet, Thinghttp etc.\nSimply go to thingspeak.com and make an account. Fill in at least the first and second field in the settings. If you connect a temperature and humidity sensor such as described in the next step, fill in 'temperature' in field 1, 'Pressure' in field 2 (check above Picture). If you want to connect other sensors such as the rain sensor simply do the same for the rest of the fields.\nNow go to the API's section\nCopy the API key and paste it in code.\nLinks:", "step_imgs": ["https://cdn.instructables.com/FIN/ROVG/JSYZE15Z/FINROVGJSYZE15Z.LARGE.jpg", "https://cdn.instructables.com/FLZ/KRXU/JSYZE160/FLZKRXUJSYZE160.LARGE.jpg"], "step_title": "Step 4: Coding"}, {"step": 5, "steps_text": "My plan is to deploy the Weather station wire-free. To run it continuously, there must be a continuous power supply. The best way to provide continuous power to the circuit is by using a battery. But after some days the battery will run out, and it is a really difficult job to go there and charge it. So a solar charging circuit was used to use free energy from the sun to charge the batteries and to power the NodeMCU board. I have used a 18650 Li-Ion battery.\nTo charge the Battery without any complications (over-charge/over-discharge), I have used TP4056 charging board which perfect for 3.7v/1Amp. It has an inbuilt protection circuit which cuts off the connection with battery if the battery reaches its maximum value while charging or discharging.\nIn addition to the protection, it provides us the option to charge the battery using the micro USB cable as well as with the Solar Panel (through terminals). Thus we have multiple charging options.\nDeep Sleep Mode (optional):\nWith the above setup, we can run the weather station using a solar panel (100mA) for about 10 hours per day. After that, we need to charge the battery using a charger to use the next day. It is not a big deal if you can turn it off when not needed or if you use the weather station in your home.\nBut if you want it to run continuously and place it in a remote location where you cannot reach frequently to turn it off, it becomes a problem.\nTo lower the power consumption of the ESP8266 WiFi chip, we\u2019ll use the Deep Sleep mode which is the most power efficient option for ESP chip. It allows to put the ESP8266 into hibernation and saves the battery. You can wake up it at regular intervals to make measurements and publish them.\nNodeMCU (max power consumption) --------------------- 170 mA\nNodeMCU (In deep sleep) ------------------------------------ 0.02 mA\nAverage consumption for this project (based on the sensors used) -------------------------- 120 mA\nIf we take a 5min cycle (4.5 min deep sleep and 0.5 min for transmission)\n4.5 min x 0.02 mA ---------------- 0.09 mA-mins\n0.5 min x 120 mA ----------------- 60 mA-mins\n_______________________________________\n5 mins ----------------------------- 60.09 mA-mins\nThus the entire Weather station requires 12.018 mA to run.\nTo run a day, it requires 12.018 x 24 = 288.432 mA\nIf we take an average of 3 hrs of sunlight per day. we can harvest 100mA x 3 = 300mA from the solar panel rated 5v/100mA per day.\nTherefore, it is enough for running the weather station without any need for external charging.\nBefore using the deep sleep feature, NodeMCU D0 pin must be connected to the RST pin.\nLDO S111733PI\nIt is a Low-Dropout voltage regulator which gives a constant output of 3.3v for any input voltage. The output from the battery will not be a constant value as a fully charged battery can output 4.2v which fries the NodeMCU board. The NodeMCU board has a (5v and above) Vin slot as well as (3 to 3.36v) input voltage slot. All the sensors used in the project requires 3.36-3.6v and any above voltage will damage them or shows inaccurate data.\nThus the use of LDO is must to run the weather station for a long time.", "step_imgs": ["https://cdn.instructables.com/FRV/F9P9/JT2SIMPT/FRVF9P9JT2SIMPT.LARGE.jpg", "https://cdn.instructables.com/FLY/XKY1/JT2SIMQB/FLYXKY1JT2SIMQB.LARGE.jpg", "https://cdn.instructables.com/FIN/GJFF/JT2SIMR5/FINGJFFJT2SIMR5.LARGE.jpg", "https://cdn.instructables.com/FCB/AEWH/JT2SIMQK/FCBAEWHJT2SIMQK.LARGE.jpg", "https://cdn.instructables.com/FQH/41U7/JT2SIMQU/FQH41U7JT2SIMQU.LARGE.jpg"], "step_title": "Step 5: The Power Supply"}, {"step": 6, "steps_text": "After successful testing, its time for soldering the components to the PCB. For this, you will need a decent Soldering Iron, Solder, Nipper.\nFirst I have cut the straight female header pin for NodeMCU Board, BMP-280, DHT-11, Rain Sensor, and LDO. It is good practice to solder the components according to their height. Solder the lesser height components first.\nAfter assembling the header pins, and screw terminal, it is time to insert the boards into their respective headers.\nI have attached the TP4056 board to the PCB using double-sided tape.\nFinally, I inserted the 18650 battery into the battery holder.\nnote: I am Sorry for my Soldering Skills, this is my first time soldering and I am still practising :)", "step_imgs": ["https://cdn.instructables.com/FVC/P2WA/JT2SIO4G/FVCP2WAJT2SIO4G.LARGE.jpg", "https://cdn.instructables.com/FBF/DDPQ/JT2SIO4D/FBFDDPQJT2SIO4D.LARGE.jpg", "https://cdn.instructables.com/FBR/RCD5/JT2SIO47/FBRRCD5JT2SIO47.LARGE.jpg", "https://cdn.instructables.com/F64/15Q5/JT2SIO4A/F6415Q5JT2SIO4A.LARGE.jpg"], "step_title": "Step 6: Assembling the PCB"}, {"step": 7, "steps_text": "It is time to build an enclosure for our PCB. I have used an MDF sheet of 3mm thickness to create a box. The Solar panel fitted perfectly on the top of it.\nI have made two holes on either side of the box for Charging port and NodeMCU Coding port respectively. I won't be using the weather station in harsh conditions, so I didn't use any leakproof casing. But if your intention is to use the Weather Station effectively outside, then you can use some plastic or metal casing.", "step_imgs": ["https://cdn.instructables.com/FBP/2BMN/JT2SIROH/FBP2BMNJT2SIROH.LARGE.jpg", "https://cdn.instructables.com/FUE/SDUB/JT2SIRPV/FUESDUBJT2SIRPV.LARGE.jpg"], "step_title": "Step 7: Everything in One Box"}, {"step": 8, "steps_text": "The Thingspeak Service provides you with a variety of graphs and plots to visualize the sensor data. Else you can even create your own web app and transmit data to it using Thingspeak Read API's.\nHave fun building and learning! Please let me know what you think of this instructable. I would love to make some improvements if necessary.\nHappy Coding :)", "step_imgs": ["https://cdn.instructables.com/F9O/AB1V/JT2SIW9Q/F9OAB1VJT2SIW9Q.LARGE.jpg", "https://cdn.instructables.com/F70/SICN/JT2SIW9G/F70SICNJT2SIW9G.LARGE.jpg", "https://cdn.instructables.com/F34/02X3/JT2SIW9T/F3402X3JT2SIW9T.LARGE.jpg", "https://cdn.instructables.com/FXF/ZT5M/JT2SIW9R/FXFZT5MJT2SIW9R.LARGE.jpg", "https://cdn.instructables.com/F28/JD2I/JT2SIW9S/F28JD2IJT2SIW9S.LARGE.jpg"], "step_title": "Step 8: Visualizing the Data"}], "channel": "Microcontrollers"}, {"category": "Technology", "description": "A friend introduced me to neopixels (WS2812) programmable LED's. That would be great for my word clock, so I re-did the clock. It is very much a mixup with a slightly different size and code.\nThe 8x8 WS2812 modules are also cheaper than the colorduino, I used before.\nCheck out my previous Ible if you want to make this clock with a colorduino.\nBecause this is a Dutch clock, I will also add instructions in Dutch.\n-------------------------\nEen vriend (Thijs) introduceerde de neopixel (WS2812) bij me. Deze programmeerbare LED's zouden geweldig zijn voor mijn woordklok. Deze instructie is dan ook hetzelfde als mijn vorige, maar dan met neopixels in plaats van de colorduino.\nDaarnaast is de neopixel 8x8 module ook nog een stuk goedkoper dan de colorduino.\nKijk bij mijn vorige Ible als je deze klok met een colorduino wilt maken.\nDe klok heet model 9:30 omdat dat de tijd is waarop hij start als je de stekker er in steekt. Hij heeft geen schakelaars, dus je moet hem gelijk zetten door tot 9:30 (of 21:30) te wachten en dan de stekker erin te steken.\nOmdat deze klok een volledige Arduino nano gebruikt, zijn er nog wel poorten beschikbaar om als je dat wilt knoppen toe te voegen of bijvoorbeeld een licht-sensor of een seconden-LED.", "title": "Dutch 8x8 Neopixel Word Clock", "url": "https://www.instructables.com/id/Dutch-8x8-Neopixel-Word-Clock/", "steps": [{"step": 1, "steps_text": "Use a lasercutter (at your local makerspace) to cut the parts.\nAl designs are made in Gravit Designer. I added both the original designs and the PDF's for the lasercutter.\nThe different parts are cut from different materials:\nCase: 3 mm black acrylic\nBackplate: 3 mm transparent acrylic\nDefuser: 3 mm milk white translucent acrylic\nScreen: 3 mm reverse black on transparent acrylic\n-------------------------\nGebruik een lasersnijder (bij je plaatselijke makerspace) om de bijgevoegde ontwerpen uit perspex te snijden.\nIk heb alle ontwerpen in Gravit Designer getekend en zowel de originele ontwerpen als de PDF bestanden voor de laser bijgevoegd.\nIeder bestand wordt uit een ander materiaal gesneden: (in Nederland zijn deze materialen te bestellen bij Trotec.)\nCase: 3 mm zwart perspex (Troglass color gloss opal zwart 117128)\nBackplate: 3 mm transparant (Troglass color gloss transparant 117143)\nDefuser: 3 mm melkwit (Troglass LED wit glans 117209)\nScreen: 3 mm zwart/transparant reverse (Troglass reverse zwart 20628)", "step_imgs": ["https://cdn.instructables.com/FOX/4UZ8/JSYZITT3/FOX4UZ8JSYZITT3.LARGE.jpg", "https://cdn.instructables.com/FY5/HY7L/JSYZITUR/FY5HY7LJSYZITUR.LARGE.jpg", "https://cdn.instructables.com/FYB/QVW5/JSYZITVA/FYBQVW5JSYZITVA.LARGE.jpg", "https://cdn.instructables.com/FO1/TUXY/JSYZITVX/FO1TUXYJSYZITVX.LARGE.jpg"], "step_title": "Step 1: Cut the Parts"}, {"step": 2, "steps_text": "Materials:\nAll the cut acrylic parts\nArduino nano\n8x8 neopixel matrix\n3x male - female jumper wires\n6x M3x10mm bolts and nuts\ntape\nUSB charger from at least 1A\nTools:\nWire stripper\nSnips\nSoldering materials\nScrewdriver\nComputer with Arduino IDE\n-------------------------\nMaterialen:\nAlle gesneden perspex onderdelen\nArduino nano\n8 x 8 neopixel (WS2812) matrix\n3 x jumper wire met aan 1 kant een man en aan de andere kant een vrouw stekker\n6x M3 x 10 mm boutjes met moertjes\ntape\nUSB lader van minimaal 1A\nGereedschap:\nStriptang\nZijsnijder\nSoldeerspullen\nSchroevendraaier\nComputer met Arduino software", "step_imgs": ["https://cdn.instructables.com/F7J/9UYA/JSYZITXR/F7J9UYAJSYZITXR.LARGE.jpg"], "step_title": "Step 2: You Will Need"}, {"step": 3, "steps_text": "Put the screen in the frame. It doesn't matter how.\n-------------------------\nDuw het scherm in het raampje waar hij precies in past. Het maakt niet uit hoe om. (alle kanten zijn hetzelfde)", "step_imgs": ["https://cdn.instructables.com/F0B/C04E/JSYZIU00/F0BC04EJSYZIU00.LARGE.jpg", "https://cdn.instructables.com/FYM/IZHE/JSYZIU14/FYMIZHEJSYZIU14.LARGE.jpg"], "step_title": "Step 3: The Screen"}, {"step": 4, "steps_text": "Put the panel with the slightly smaller hole in the first slots of the top panel.\nPut the panel with the screen in it in the next, bigger slots. Make sure to put it the right way down (upside down).\nAdd the panel with the many holes to the bigger slots. Make sure that the bigger holes line up with the words in the screen.\n-------------------------\nEr is een raampje met een iets kleiner venster, doe deze in de voorste gaten van de bovenplaat.\nStop het venster waar het scherm in zit in de volgende, grotere gaten. Let nu wel op dat hij er goed om in gaat.\nPlaats nu het paneel met de vele gaten in dezelfde grotere gaten als het scherm, zodat de gaten overeenkomen met de woorden in het scherm.", "step_imgs": ["https://cdn.instructables.com/FVK/B4EE/JSYZIU2I/FVKB4EEJSYZIU2I.LARGE.jpg", "https://cdn.instructables.com/FV9/B353/JSYZIU3C/FV9B353JSYZIU3C.LARGE.jpg", "https://cdn.instructables.com/F4C/LX30/JSYZIU4J/F4CLX30JSYZIU4J.LARGE.jpg", "https://cdn.instructables.com/FOZ/3YKZ/JSYZIU54/FOZ3YKZJSYZIU54.LARGE.jpg"], "step_title": "Step 4: First 3 Panels"}, {"step": 5, "steps_text": "Check if everything lines up.\nPut the defuser blocks in the grit. (this is a lot of work)\n-------------------------\nControleer of alle gaten overeenkomen met de teksten door het scherm in het licht te houden.\nStop alle melkwitte blokjes in het raamwerk. Dit is een hoop gepriegel, dus kijk uit dat ze er niet weer uit vallen.", "step_imgs": ["https://cdn.instructables.com/FXT/9T9O/JSYZIU6Q/FXT9T9OJSYZIU6Q.LARGE.jpg", "https://cdn.instructables.com/FIR/J0BM/JSYZIU7Z/FIRJ0BMJSYZIU7Z.LARGE.jpg", "https://cdn.instructables.com/FW2/98JX/JSYZIU8O/FW298JXJSYZIU8O.LARGE.jpg"], "step_title": "Step 5: The Defuser"}, {"step": 6, "steps_text": "Use short jumper wires.\nCut the 3 wires in half.\nStrip the cut wires a few mm.\n-------------------------\nGebruik korte jumper snoertjes.\nKnip de snoertjes door midden. (of knip ze korter als je geen korte had)\nStrip de laatste paar mm van de geknipte snoertjes.", "step_imgs": ["https://cdn.instructables.com/F1O/WR9P/JSYZIU9C/F1OWR9PJSYZIU9C.LARGE.jpg", "https://cdn.instructables.com/FNA/FHC3/JSYZIUA5/FNAFHC3JSYZIUA5.LARGE.jpg", "https://cdn.instructables.com/F87/LINE/JSYZIUB4/F87LINEJSYZIUB4.LARGE.jpg", "https://cdn.instructables.com/FDK/V661/JSYZIUDQ/FDKV661JSYZIUDQ.LARGE.jpg"], "step_title": "Step 6: The Wires"}, {"step": 7, "steps_text": "Solder wires to the \"in\" ports of the neopixel matrix. Use a male for the +5V port and female for the GND and IN ports in 3 different colors.\nSolder the other wires to the Arduino. Use the male part in the same color as the +5V to solder to the 5V of the Arduino. Solder the other wire in the same color as the GND to the GND of the Arduino and solder the same color female version of the IN to the D6 port on the Arduino.\nConnect all the same colors with each other.\n-------------------------\nGebruik de \"IN\" kant van de neopixel matrix om de draden aan te solderen. Gebruik een draadje met een mannelijk stekkertje om aan de +5V van de neopixel te solderen.\nSoldeer een draadje met een vrouwelijk stekkertje in een andere kleur aan de GND van de neopixel.\nGebruik een draadje met een vrouwelijk stekkertje in een derde kleur om aan de IN te solderen.\nDe afgeknipte andere helft van alle stekkertjes worden aan de Arduino gesoldeerd. De vrouwelijke kant van het +5V draadje gaat aan de 5V van de Arduino.\nDe mannelijke kant van het GND draadje komt aan de GND van de Arduino.\nDe mannelijke kant van het IN draadje komt aan poort D6 van de Arduino.\nVerbind alle mannelijke stekkertjes met de vrouwelijke van dezelfde kleur.", "step_imgs": ["https://cdn.instructables.com/FO2/M3U0/JSYZIUEF/FO2M3U0JSYZIUEF.LARGE.jpg", "https://cdn.instructables.com/F57/J6VJ/JSYZIUF7/F57J6VJJSYZIUF7.LARGE.jpg", "https://cdn.instructables.com/F1U/62MI/JSYZIUFT/F1U62MIJSYZIUFT.LARGE.jpg"], "step_title": "Step 7: Soldering"}, {"step": 8, "steps_text": "Before you open the Arduino software, you will need to make sure that you have the Time.h and the neopixel.h library in the library folder in the Arduino folder.\nNow you can connect the Arduino with your computer and upload the sketch.\nIn the sketch you can change the colors and the starttime bij changing them in the top part of the sketch.\nIf you plug the clock with a standard sketch in at exactly 9:30, the clock will change the time 3 minutes early. This is because it is a word clock and personally I would say that it is 5 o'clock when it is 3 before 5. If you don't want that, you can change the sketch or just plug the clock in at 9:33.\n-------------------------\nVoordat je de Arduino software opstart, moet je er eerst zeker van zijn dat je de time.h en de neopixel.h library in de library map in de arduino map hebt staan.\nNu kan je de arduino software openen en de Arduino op de computer aansluiten en de sketch uploaden.\nIn de eerste regels van de sketch kan je de kleur van de teksten op het scherm aanpassen en als je wilt ook de tijd waarop de klok start als je hem aan zet.\nAls je de klok met de originele sketch om 9:30 aan zet, zal hij 3 minuten te vroeg van tijd verspringen. Dit heb ik zo ingesteld omdat ik persoonlijk als het 3 voor 5 is, zeg dat het 5 uur is. Als je dit niet wilt, kan je dit in de sketch aanpassen, of je wacht tot 9:33 om de klok aan te zetten.", "step_imgs": ["https://cdn.instructables.com/FLU/66GY/JSL33Z1E/FLU66GYJSL33Z1E.LARGE.jpg"], "step_title": "Step 8: Programming"}, {"step": 9, "steps_text": "Unplug the neopixel matrix from the arduino.\nLay the neopixel matrix on the defusers with the wires left-bottom.\nPut the wires trough the hole in the next panel.\nPut the panel in the holes of the top panel.\nConnect the neopixel matrix with the Arduino again.\nPut the Arduino in the designated slot.\nTape the Arduino in place.\nPut the nuts in the T-slots. (if you like you can tape them also in place)\nBolt the top panel in place with two bolts.\n-------------------------\nMaak de neopixel stekkers los van de Arduino.\nLeg het neopixel paneel op de melkwitte blokjes met de snoertjes links onder.\nHaal de snoertjes door het gat in het volgende paneel.\nStop het volgende paneel op zijn plaats in de gaatjes in het top-paneel.\nSteek de stekkers van het neopixel paneel weer in de stekkers van de Arduino.\nLeg de Arduino in de daarvoor bestemde opening in het paneel.\nTape de Arduino op zijn plaats.\nLeg de moertjes in de T-slots. (gebruik eventueel ook tape om ze op hun plaats te houden.\nSchroef het top paneel vast met 2 M3 boutjes.", "step_imgs": ["https://cdn.instructables.com/FEP/G32S/JSYZIUGD/FEPG32SJSYZIUGD.LARGE.jpg", "https://cdn.instructables.com/FGV/IRKI/JSYZIUHE/FGVIRKIJSYZIUHE.LARGE.jpg", "https://cdn.instructables.com/FCP/MU3Z/JSYZIUHY/FCPMU3ZJSYZIUHY.LARGE.jpg"], "step_title": "Step 9: Insert the Neopixels"}, {"step": 10, "steps_text": "Put the transparent back panel in place.\nAdd the side panels. (make sure to put the panel with the hole for the USB on the side with the Arduino)\nPut the 4 bolts in the side panels en bolt close.\n-------------------------\nPlaats the transparante achterscherm op zijn plaats.\nPlaats de zijpanelen op hun plaats en houdt daarbij rekening met het gat voor de USB-stekker.\nSchroef de zijpanelen vast met de overige 4 M3 boutjes.", "step_imgs": ["https://cdn.instructables.com/FSX/CUCU/JSYZIUJ3/FSXCUCUJSYZIUJ3.LARGE.jpg", "https://cdn.instructables.com/FEA/2WED/JSYZIUKT/FEA2WEDJSYZIUKT.LARGE.jpg"], "step_title": "Step 10: Closing Up"}, {"step": 11, "steps_text": "Wipe the vingerprints form the panels.\nWait for 9:30 to come by.\nPlug the clock in an USB-charger of at least 1A.\n-------------------------\nVeeg alle vieze vingers van de klok.\nWacht tot het eindelijk een keer 9:30 wordt.\nSteek de USB stekker in een USB oplader van minimaal 1A.", "step_imgs": ["https://cdn.instructables.com/F0J/OLP3/JSYZIUJ6/F0JOLP3JSYZIUJ6.LARGE.jpg", "https://cdn.instructables.com/FTT/GL56/JSYZIUKA/FTTGL56JSYZIUKA.LARGE.jpg", "https://cdn.instructables.com/FTF/UT85/JSYZIUKV/FTFUT85JSYZIUKV.LARGE.jpg"], "step_title": "Step 11: Almost There"}, {"step": 12, "steps_text": "Is this project finished or can we make it better?\nBe have many pins still free on the Arduino, so we can add buttons to set the time, or a light-sensor to control the brightness of the neopixels or a LED that blinks every second or...\nWhat would you add, or do different?\n-------------------------\nIs de klok nu klaar of kunnen we er nog dingen aan verbeteren?\nWe hebben nog zoveel pinnen beschikbaar op de Arduino, dat we makkelijk nog knoppen toe kunnen voegen om de tijd in te stellen, of een lichtsensor om de helderheid van de neopixels aan te passen, of een LED die iedere seconde knippert, of...\nWat zou jij toevoegen of anders doen?", "step_imgs": ["https://cdn.instructables.com/FNC/7CRV/JSYZIULE/FNC7CRVJSYZIULE.LARGE.jpg", "https://cdn.instructables.com/FXH/9TYF/JSYZIUM8/FXH9TYFJSYZIUM8.LARGE.jpg", "https://cdn.instructables.com/FLS/YGL2/JSYZIUMR/FLSYGL2JSYZIUMR.LARGE.jpg", "https://cdn.instructables.com/F1T/X9F4/JSYZIUNS/F1TX9F4JSYZIUNS.LARGE.jpg"], "step_title": "Step 12: Finished?!"}], "channel": "Arduino"}, {"category": "Technology", "description": "This Instructable will show you how to make a Raspberry Pi powered robotic drum machine. It really is a fun, creative, interactive project. I\u2019ll show you how to make the internal workings, but the actual drums is going to be up to you, giving you the opportunity to make something completely unique to you. For my machine I have used as many found items as I can... hammers from a piano rescued from my neighbours skip, a fishing net I found on the beach, an empty bake bean can, wooden spoons, an empty beer bottle, beer bottle tops and a desk bell among other things, but let your imagination go crazy - see what you have around the house, just about anything that makes a noise when hit can be used, and it will really make your project your own.\n\nTo control it, you have 2 options:\nA browser based step sequence which I have called PiBeat - This is great fun and lets you control your drum machine interactively from your Pi, or any device on the same network (such as your phone, tablet or computer). We will install it on your Pi later, but a preview can be seen here, and the code is in GitHub here.\nA python script to program a drum pattern. This is a great way to create a rhythm for you to jam along with on your guitar etc.\nI try to keep costs down and as you will see in the next step, no expensive specialist tools are required. I have also tried to explain how things work in every step, making it a great project even if you are a relative newcomer to the world of Pi's, coding and electronics and on a limited budget.\nOK, let\u2019s get to work!", "title": "A Raspberry Pi Powered Junk Drum Machine", "url": "https://www.instructables.com/id/A-Raspberry-Pi-Powered-Junk-Drum-Machine/", "steps": [{"step": 1, "steps_text": "To build the internal mechanism, you will need:\n1x 40 Pin Raspberry Pi with Raspbian installed on a SD, with power cable and ability to connect into it (I've used a Raspberry Pi Zero Wireless with pre-soldered header from ModMyPi)\n1x 5v 8 channel relay\n1x Pack of female to female jumper wires (10 wires needed)\n2x 3 Amp Terminal strips (You could use a breadboard or perfboard, but terminal strips are cheap and prevent cables coming loose, and when making this I didn't own a soldering iron)\n1x 12v 10a Power Supply\n8x 12v 2a Solenoids\n8x 1N5401 Rectifier diodes\n50cm of 0.5mm cable (I stripped the cores from some twin core cable as it was a cost effective way to get red, black and twin core), although you can just use 1 colour if you want. You may wan't to buy a bigger length depending on the housing you want to build.\nYou will also need the following tools:\nWire cutters\nWire strippers\nSmall flat head screwdriver, about 3mm\nDepending on terminal strips you get, you may also need a small cross head screw driver\nI have not listed any parts or tools to make the drums and any housing you wan't to put it in. I\u2019ll show you how I made mine later, but as said before I\u2019m leaving that part up to your imagination.", "step_imgs": ["https://cdn.instructables.com/FGR/IBPZ/JPSO3N8Z/FGRIBPZJPSO3N8Z.LARGE.jpg", "https://cdn.instructables.com/FPB/E8HV/JPSO3MBE/FPBE8HVJPSO3MBE.LARGE.jpg", "https://cdn.instructables.com/FLO/JZON/JPSO3MUN/FLOJZONJPSO3MUN.LARGE.jpg", "https://cdn.instructables.com/FTE/W8Z8/JPSO3M0B/FTEW8Z8JPSO3M0B.LARGE.jpg", "https://cdn.instructables.com/F30/ECM2/JPSO3MKG/F30ECM2JPSO3MKG.LARGE.jpg", "https://cdn.instructables.com/FLE/46XI/JPSO3LQN/FLE46XIJPSO3LQN.LARGE.jpg", "https://cdn.instructables.com/F9X/HD35/JPSO3NM4/F9XHD35JPSO3NM4.LARGE.jpg", "https://cdn.instructables.com/FDD/YANS/JPSO3NR5/FDDYANSJPSO3NR5.LARGE.jpg"], "step_title": "Step 1: Go Shopping"}, {"step": 2, "steps_text": "The maximum voltage provided by the pins on the Pi is 5v. We could buy 5v solenoids and power these directly from the Pi, but that would not give the big whack our drum machine needs. Therefore we are using a relay which lets us switch on and off a higher voltage circuit (in our case a 12v circuit containing our 12v solenoids) from our lower voltage GPIO circuit.\nOur relay has 8 channels, this means we can switch up to 8 solenoids on and off independently. Each channel contains 4 connectors; 3 are used by the high voltage circuit which we will see later, and 1 which is an 'IN' pin on the lower voltage circuit which we will connect our Pi to. When the Pi's GPIO pin sends 5v on a given channels IN pin, the relay will switch on the corresponding 12v circuit.\nOn the low voltage side of the relay, there is also a GND (ground) pin which we need to connect to the PI's ground, and a VVC pin for the 5v power from the Pi.\nWith the Pi turned off, follow the diagram to connect the relay to the Pi using the jumper cables. You don't have to use the same colour jumpers, but it may help when following the images.", "step_imgs": ["https://cdn.instructables.com/F6T/MG6O/JPSO3WGR/F6TMG6OJPSO3WGR.LARGE.jpg", "https://cdn.instructables.com/FOY/RZLB/JPSO3T2S/FOYRZLBJPSO3T2S.LARGE.jpg", "https://cdn.instructables.com/F4D/W7ZO/JPSO3T4N/F4DW7ZOJPSO3T4N.LARGE.jpg", "https://cdn.instructables.com/FV6/0MSZ/JPSO3T7Z/FV60MSZJPSO3T7Z.LARGE.jpg"], "step_title": "Step 2: Wire Up the Pi to the Relay"}, {"step": 3, "steps_text": "It may not be our fully fledged drum machine yet, but in this step we our going to make some noise, albeit clicks from the relay. We will introduce the python script to program drum patterns, this will enable us to test what we have done so far.\nThe script is available has a gist here.\nBoot up your Pi, open up a terminal on the Pi and download the script by running:\nwget https://gist.githubusercontent.com/mnkii/8ab0d749c26379936c14e96cfaa92f7e/raw/array-sequencer.py\nYou may want to look through the code and comments to get an idea of what it does, but lets get some gratification and run it:\npython3 array-sequencer.py\nIf all goes to plan you should hear the contacts in the relay opening and closing and the light on the corresponding channel flash. Take a look at the sequence variable inside the script to get an idea what is going on - all channels will be triggered together, then each will be triggered individually. It will keep running until you exit the script by pressing Ctrl + C.\nBefore proceeding, it is a good idea to turn the Pi off again incase of any accidental short circuits when wiring things up.", "step_imgs": ["https://cdn.instructables.com/FK5/4AMW/JR0YK49X/FK54AMWJR0YK49X.LARGE.jpg"], "step_title": "Step 3: Lets Make Some Noise!"}, {"step": 4, "steps_text": "To power 8 solenoids with one power supply we will create a parallel circuit. You can see a diagram of the completed 12v circuit, but we are going to take go through it step by step.\nYou could use a breadboard or perfboard, but I opted for terminal strips as they are cheap, hold wires tightly, and I also didn't own a soldering iron when creating this.\nEffectively, we need to connect all solenoids, and a diode for each solenoid (more on diodes later) to the 1 positive wire of our power supply.\nUsing the cutters, cut own the terminal strip so you have a block of 8 pairs, cutting at the plastic bit which connects two blocks together. Be careful to not trim any metal.\nWe now need to join up all the terminals down one side of the strip. Use the cutters to cut 7 pieces of red wire about 35mm long, then use the wire strippers to remove around 5mm of insulation from each end of every wire.\nNow use the wires to daisy chain all the terminals together along one side of the strip, holding the wires in place using the screws. The first and last screw will only have 1 wire, while the rest will have 2.", "step_imgs": ["https://cdn.instructables.com/FXV/Q18V/JSYZDT0Q/FXVQ18VJSYZDT0Q.LARGE.jpg", "https://cdn.instructables.com/F8Y/U7OY/JPX4T7A7/F8YU7OYJPX4T7A7.LARGE.jpg", "https://cdn.instructables.com/FJN/XLMH/JPX4T7AJ/FJNXLMHJPX4T7AJ.LARGE.jpg"], "step_title": "Step 4: Create the Positive Side of Our Circuit"}, {"step": 5, "steps_text": "As solenoids are electromagnets, diodes are recommended to protect your circuit from flyback (you can read in-depth about that here). Therefore we will give each solenoid its own diode to protect our relay.\nOn the opposite side of the terminal strip to which you wired together in the previous step, start with the first hole. Insert 1 wire of the solenoid, then add in and one end of the diode into the same hole. As diodes only allow the flow of current one way, make sure the silver stripe on the diode is towards the terminal strip. Tighten the screw to hold them in place. Repeat the process for the remaining 7 holes.\nOne of the solenoids I received was faulty, so at the time of taking the pictures I swapped it out for a lower amp model which had blue wires.", "step_imgs": ["https://cdn.instructables.com/FXB/SY58/JPX4T7MH/FXBSY58JPX4T7MH.LARGE.jpg", "https://cdn.instructables.com/FOA/09RU/JPX4T7MI/FOA09RUJPX4T7MI.LARGE.jpg"], "step_title": "Step 5: Add the Solenoids and Diodes"}, {"step": 6, "steps_text": "As we did with the positive side, get 1 terminal strip and cut it down so you have another strip of 8 pairs . Screw in place the diodes and solenoids to this terminal strip so it mirrors the plus terminal strip.", "step_imgs": ["https://cdn.instructables.com/FUT/9O3J/JPX4T7W0/FUT9O3JJPX4T7W0.LARGE.jpg"], "step_title": "Step 6: Connect the Negative Terminal Strip to the Solenoid and Diodes"}, {"step": 7, "steps_text": "We are nearly ready to connect the relay, but first we need to something to connect it with. Cut 8 pieces of black wire about 70mm long, then strip around 5mm off of each end. Attach each wire to the 8 remaining connectors on the negative terminal strip.", "step_imgs": ["https://cdn.instructables.com/F8W/NEJ8/JPX4T9AI/F8WNEJ8JPX4T9AI.LARGE.jpg", "https://cdn.instructables.com/FL3/R3OI/JPX4T97T/FL3R3OIJPX4T97T.LARGE.jpg"], "step_title": "Step 7: Create the Relay Connecting Wires"}, {"step": 8, "steps_text": "Take a look at the relay holding the side connected by the jumpers to the Pi away from you. Each channel has 3 contacts, from left to right they are called normally open (NO), common (COM) and normally closed (NC). We only want our solenoids to turn on when there is a high voltage on the channels IN pin, so will use the normally open contact. If we were to use the normally closed contact instead the opposite would happen - the solenoid would be on until a high voltage is sent on the IN pin. We will also use the common contact to complete the circuit.\nAs this is a parallel circuit, we will daisy chain all the common contacts on the relay. Cut 7 pieces of black wire about 60mm long and strip 5mm off of each end. Work along the relay connecting all the COM contacts (the middle of each set of 3) together. The first and last will only have one wire, the rest will have 2.", "step_imgs": ["https://cdn.instructables.com/FSY/DAT9/JPX4TBKC/FSYDAT9JPX4TBKC.LARGE.jpg", "https://cdn.instructables.com/FYE/58FZ/JPX4TBMM/FYE58FZJPX4TBMM.LARGE.jpg"], "step_title": "Step 8: Wire Up the Relay Common Connectors"}, {"step": 9, "steps_text": "Now its time to connect the relay to the rest of our circuit. Take the unattached end of the black piece of wire from one end of the negative terminal strip, and connect it up to either the first or last of the normally open (NO) contacts on the relay. Repeat this for the 7 other pieces of wire, connecting each wire to the next NO contact.", "step_imgs": ["https://cdn.instructables.com/F67/QWY6/JPX4TCL5/F67QWY6JPX4TCL5.LARGE.jpg"], "step_title": "Step 9: Connect the Relay to the Rest of Our Circuit"}, {"step": 10, "steps_text": "Firstly, to avoid any shock, make sure your power supply is turned off and unplugged from the mains.\nMy power supply came used from eBay with the 12v male plug already stripped off. Presuming yours still has the plug, you can either buy the matching female DC connector, or cut the plug off and strip it back to the 2 wires like mine. Either way, you need to end up with 2 wires, the red (positive) and probably white (negative). Connect the positive wire of the power supply to the first contact on the positive terminal block, and the negative to the first common contact on the relay. To make this easier, I used around 150mm of red and black wire with the ends stripped to go between the connections, and connected using a terminal strip.", "step_imgs": ["https://cdn.instructables.com/FEG/EH0G/JPX4TCQ7/FEGEH0GJPX4TCQ7.LARGE.jpg"], "step_title": "Step 10: Connect the 12v Power Supply"}, {"step": 11, "steps_text": "With your power supply still turned off, give all your connections a quick check over. Once happy, boot up the Pi again. Run the script from step 3 again:\npython3 array-sequencer.py\nYour solenoids won't move yet, but you should hear the relay click and illuminate just as you did in step 3. Terminate the script (Ctrl + C), and now it is the moment you have been waiting for - turn on the power supply! Run the script again, your all dancing solenoids should now come to life. Good work!\nI was unlucky - as you can see in the video another one of my solenoids was not working, but this was my fault as I previously damaged one by over tightening a fixing bolt.", "step_imgs": [], "step_title": "Step 11: Fire It Up"}, {"step": 12, "steps_text": "Take a bit of time to play around with array-sequencer.py. Use your favourite editor (nano, geany etc) to make changes to the script. Try doing the following and re-running the script after each change to see its effect:\nChange the bpm variable from 120 to another number, say 200 to increase the tempo.\nIn the sequence variable, change some 0's to 1's to play more drums.\nDuplicate the last 3 lines before the closing square bracket in the sequence variable to add more beats to the loop", "step_imgs": ["https://cdn.instructables.com/FDW/3U5W/JR6OFYQ4/FDW3U5WJR6OFYQ4.LARGE.jpg"], "step_title": "Step 12: Editing Array-sequencer.py"}, {"step": 13, "steps_text": "Now this is when things get really fun, we are going to install the sequencer onto your Pi. This is going to give us a web interface which lets Python trigger the GPIO pins over web sockets.\nThe source code is available in Github here, but presuming you followed the wiring in the Instructable we can download and run the precompiled version. Open up a terminal on your Pi, and run the following\n# Create and navigate into a directory for our project\nmkdir pibeat\ncd pibeat\n# Download the source code\nwget http://pibeat.banjowise.com/release/pibeat.tar.gz\n# Extract the files\ntar -zxf pibeat.tar.gz\n# Install the python requirements\npip3 install -r requirements.txt\n# Run the web server\npython3 server.py\nIn the output, if all is successful you should see the following output:\n======== Running on <a href=\"http://0.0.0.0:8080\" rel=\"nofollow\">http://0.0.0.0:8080 </a> ========\n(Press CTRL+C to quit)\nFind you Pi's IP address. Open up a web browser, then enter the IP followed by :8080/index.html (this is the port the application is listening on followed by the filename) into the address bar. For example, if your Pi's IP address is 192.168.1.3, enter 192.168.1.3:8080/index.html into the address bar. The drum sequencer will appear.\nHit the play button and your drum machine should start playing. Play around with the sequencer until your heart is content.\nAs long as there is a network route to your Pi, you can access the Pi's web interface from any device - try it from your mobile or tablet.", "step_imgs": ["https://cdn.instructables.com/F55/VD42/JR0YK6NH/F55VD42JR0YK6NH.LARGE.jpg", "https://cdn.instructables.com/F58/OEU5/JR6OG36R/F58OEU5JR6OG36R.LARGE.jpg"], "step_title": "Step 13: Install the Drum Sequencer"}, {"step": 14, "steps_text": "This is where you get to turn your pile of electronic spaghetti into a real drum machine. As said before, what you do here is up to you. Just about anything which makes a noise when hit can be used, and is where you can really transform your project into something unique to you.\nI had a good rummage around my home for ideas for the drums which provided the beer bottle, can, shaker, bottle tops and spoons. The fishing net was found on the beach, and the desk bell and crocodile castanet came from eBay. I found a broken up piano in a skip, this provided the hammers for the bottle and can, along with wooden dowling to hold the bell in place and metal rods to pivot and hold the spoons in place.\nI made each drum a standalone component, so if one breaks or I am not happy with it, I can switch it out with another without too much fuss.\nThe solenoids come with bolt holes requiring M3 bolts. Drilling the holes into the wood was a bit tricky as you have to get the positioning just right, but found holding the solenoid in position then marking the holes with a bradawl before drilling worked well.\nI mostly used 6mm MDF (offcuts from my local DIY shop) for the drums along a few bits of scrap wood, held together with either glue or screws.\nThe hammers on the can and beer bottle are probably unnecessary, as you could get just a good hit straight from the solenoid, but I wanted to get as much movement in the machine as possible to make it visually interesting.\nHousing\nThe housing is a simple rough and ready box made from 3.6mm plywood, 18mm MDF and some stripwood. I wanted thin plywood for the front of the box so it would resonate when hit with a spoon, but the wood choices were mainly driven by what I already had in the shed and the scrap wood section in my local DIY shop. I made a platform at the bottom of the box to keep the electronics, and another platform to hold the drums. To make the box:\n1. Cut 2 equal sizes of MDF to make the ends\n2. Cut 4 pieces of stripwood (I used 34mm x 12mm) 50mm shorter than the desired width of the box\n3. Nail the stripwood to the 2 MDF ends to form the box shape. Put the stripwood about 1 cm away from the top and the bottom of the box.\n4. Cut 2 pieces of plywood to match the width and height of the box. Attach these to the front and back of the box by nailing to the mdf and stripwood.\n5. Cut a pice of plywood to fit inside the box and place on the bottom pieces of stripwood to hold the electronics. I made mine about half the length of the box.\n6. Cut another piece of plywood to attach the drums to. This sits on the top pieces of stripwood.\n7. Cut a hole near the bottom platform to feed the power cables through.\nPainting\nTo paint, I used Acrylic Primer Undercoat followed by Crown Matt tester pots. The tester pots are a good way to get a variety of colours at a cheap price.", "step_imgs": ["https://cdn.instructables.com/FPR/EM8K/JQWSXQ3U/FPREM8KJQWSXQ3U.LARGE.jpg", "https://cdn.instructables.com/F0O/FXLS/JQWSXQ3X/F0OFXLSJQWSXQ3X.LARGE.jpg", "https://cdn.instructables.com/F22/W8F3/JPX4UG8P/F22W8F3JPX4UG8P.LARGE.jpg", "https://cdn.instructables.com/F2N/JWAV/JPX4UFZO/F2NJWAVJPX4UFZO.LARGE.jpg", "https://cdn.instructables.com/FNV/13PH/JPX4UFXJ/FNV13PHJPX4UFXJ.LARGE.jpg", "https://cdn.instructables.com/FJX/8PUB/JQWSZ5UL/FJX8PUBJQWSZ5UL.LARGE.jpg", "https://cdn.instructables.com/F1I/L6PU/JPX4UGAU/F1IL6PUJPX4UGAU.LARGE.jpg", "https://cdn.instructables.com/FGW/HVR5/JR6OLGMH/FGWHVR5JR6OLGMH.LARGE.jpg", "https://cdn.instructables.com/FXT/XFOL/JPX4UGD0/FXTXFOLJPX4UGD0.LARGE.jpg", "https://cdn.instructables.com/FM8/7DFL/JQWSZ5VK/FM87DFLJQWSZ5VK.LARGE.jpg", "https://cdn.instructables.com/F04/U7YF/JPX4UGJD/F04U7YFJPX4UGJD.LARGE.jpg", "https://cdn.instructables.com/FB1/E92I/JQWSZ5XL/FB1E92IJQWSZ5XL.LARGE.jpg", "https://cdn.instructables.com/FWR/HNTV/JPX4UGJE/FWRHNTVJPX4UGJE.LARGE.jpg", "https://cdn.instructables.com/FC8/KOAI/JQWSZ5SA/FC8KOAIJQWSZ5SA.LARGE.jpg", "https://cdn.instructables.com/FFR/BNKM/JR6OLI4C/FFRBNKMJR6OLI4C.LARGE.jpg", "https://cdn.instructables.com/FAA/RDU1/JQWSZ5W2/FAARDU1JQWSZ5W2.LARGE.jpg", "https://cdn.instructables.com/FKA/Q8MF/JQWSXQ3Y/FKAQ8MFJQWSXQ3Y.LARGE.jpg", "https://cdn.instructables.com/FGB/MIFM/JQWSXQ3Z/FGBMIFMJQWSXQ3Z.LARGE.jpg", "https://cdn.instructables.com/F7M/3UA3/JR6OLEW1/F7M3UA3JR6OLEW1.LARGE.jpg", "https://cdn.instructables.com/FWN/RAUI/JR6OLEXR/FWNRAUIJR6OLEXR.LARGE.jpg", "https://cdn.instructables.com/FH8/QPDP/JT2SI914/FH8QPDPJT2SI914.LARGE.jpg", "https://cdn.instructables.com/F05/ENXM/JT2SI8WK/F05ENXMJT2SI8WK.LARGE.jpg", "https://cdn.instructables.com/FFE/CU0B/JT2SI8X1/FFECU0BJT2SI8X1.LARGE.jpg", "https://cdn.instructables.com/FMC/P1H6/JT2SI8ZP/FMCP1H6JT2SI8ZP.LARGE.jpg", "https://cdn.instructables.com/FPE/IFC4/JT2SI908/FPEIFC4JT2SI908.LARGE.jpg", "https://cdn.instructables.com/FO2/B4UJ/JT2SI909/FO2B4UJJT2SI909.LARGE.jpg", "https://cdn.instructables.com/FQ4/QDAE/JT2SI8U5/FQ4QDAEJT2SI8U5.LARGE.jpg", "https://cdn.instructables.com/FZN/DWJ1/JT2SI91A/FZNDWJ1JT2SI91A.LARGE.jpg", "https://cdn.instructables.com/FLG/93VI/JT2SI928/FLG93VIJT2SI928.LARGE.jpg", "https://cdn.instructables.com/F3O/VAII/JT2SI8VN/F3OVAIIJT2SI8VN.LARGE.jpg"], "step_title": "Step 14: Building Your Drums and Housing"}, {"step": 15, "steps_text": "And there you have it, a pretty cool drum machine. The gist for the sequence in youtube video can be found here.\nIf you go ahead and make your own please share, I would love to see what you come up with. Have fun!", "step_imgs": [], "step_title": "Step 15: Sit Back and Have Fun!"}], "channel": "Raspberry Pi"}, {"category": "Technology", "description": "While I'm working on a future project which involves dozens of 18650 Li-ion cells for which I need a Battery Spot Welder. Which is expensive and not really difficult to build one so in this tutorial I will show you how you can make a DIY Battery Spot Welder which is a great tool to have so let's make this stuff for making stuff.\nSo let's get Started!\n\n\nWarning!\nIf you have no Idea about transformers and mains wiring do not attempt to even try this.", "title": "DIY Battery Spot Welder!", "url": "https://www.instructables.com/id/DIY-Battery-Spot-Welder/", "steps": [{"step": 1, "steps_text": "In my previous project, I tried to Arc weld using Modified Microwave Transformer but it was not possible because I needed much higher input voltage than 240V AC so I failed but anyways that modified Hight current transformer was capable of the spot weld. So it is highly recommended to watch that video first!\nArc Welding Video -\nDIY Battery Spot welder! -", "step_imgs": [], "step_title": "Step 1: Pre-Requisite & Watch the Video Tutorial"}, {"step": 2, "steps_text": "1) PCB - Banggood / Gearbest\n2) Soldering Iron / Station -Banggood / Gearbest\n3) Solder - Banggood / Gearbest\n4) Relay - Banggood / Gearbest\n5) Capacitor -Banggood / Gearbest\n6) Screw Terminals - Banggood / Gearbest\n7) Modified MOT(Microwave Transformer) - https://youtu.be/4HiDvSOyDGI", "step_imgs": ["https://cdn.instructables.com/FQB/AK75/JSPACM74/FQBAK75JSPACM74.LARGE.jpg", "https://cdn.instructables.com/FR2/K3N6/JSPACM5Y/FR2K3N6JSPACM5Y.LARGE.jpg", "https://cdn.instructables.com/FJD/50X9/JSPACM3E/FJD50X9JSPACM3E.LARGE.jpg", "https://cdn.instructables.com/FHQ/91P9/JMGL5DKW/FHQ91P9JMGL5DKW.LARGE.jpg", "https://cdn.instructables.com/FSC/W256/JM0V6E6A/FSCW256JM0V6E6A.LARGE.jpg"], "step_title": "Step 2: Everything We Need!"}, {"step": 3, "steps_text": "Working-\nWhen power is connected, This DC Power source charges the capacitor, if the switch is pressed it activates the Relay 1 and charge of capacitor activates the Relay 2, Since capacitor can hold very few amounts of energy it quickly discharges and Relay 2 turns off\nUsing thing charge of capacitor we turn on the transformer for few seconds ad we spot weld!", "step_imgs": ["https://cdn.instructables.com/FUN/TDPO/JSPACN09/FUNTDPOJSPACN09.LARGE.jpg", "https://cdn.instructables.com/FHE/FJTV/JSPACMV0/FHEFJTVJSPACMV0.LARGE.jpg", "https://cdn.instructables.com/FQZ/ORZ1/JSPACMW4/FQZORZ1JSPACMW4.LARGE.jpg", "https://cdn.instructables.com/FER/U6OL/JSPACMYY/FERU6OLJSPACMYY.LARGE.jpg", "https://cdn.instructables.com/F68/3TM3/JSPACMZZ/F683TM3JSPACMZZ.LARGE.jpg", "https://cdn.instructables.com/F4M/7HSG/JSPACN02/F4M7HSGJSPACN02.LARGE.jpg", "https://cdn.instructables.com/FRI/8YAQ/JSPACN06/FRI8YAQJSPACN06.LARGE.jpg"], "step_title": "Step 3: Working, Schematic, PCB and Gerber Files!"}, {"step": 4, "steps_text": "Once you have everything you can solder circuit on a PCB or a perf board. I chose PCB because thing project involves mains voltage so it is better to get it done by a professional manufacturer. Anyways I used a screw terminal for capacitor because we can change it easily later.", "step_imgs": ["https://cdn.instructables.com/FD3/T75R/JSPACNWZ/FD3T75RJSPACNWZ.LARGE.jpg", "https://cdn.instructables.com/F77/58XJ/JSPACNTH/F7758XJJSPACNTH.LARGE.jpg", "https://cdn.instructables.com/FHO/1WRH/JSPACNUN/FHO1WRHJSPACNUN.LARGE.jpg", "https://cdn.instructables.com/F76/5X12/JSPACNVT/F765X12JSPACNVT.LARGE.jpg"], "step_title": "Step 4: Soldering!"}, {"step": 5, "steps_text": "Slice about 1 inch of insulation of Transformers both end, then measure about 2 inches of 2.5 Sq.mm copper strand and insert it in the wire we just sliced repeat this for both ends of the transformer. Now use electrical tape and cover the cut we made for Insulation, Now use hoes clip to secure copper strand in its place. After which you can use zip ties to hold both wires together and make an arm for spot welder!", "step_imgs": ["https://cdn.instructables.com/FSF/H5L9/JSPACPLD/FSFH5L9JSPACPLD.LARGE.jpg", "https://cdn.instructables.com/F09/F172/JSPACP85/F09F172JSPACP85.LARGE.jpg", "https://cdn.instructables.com/F7R/9WLZ/JSPACP6Z/F7R9WLZJSPACP6Z.LARGE.jpg", "https://cdn.instructables.com/FWM/T032/JSPACP89/FWMT032JSPACP89.LARGE.jpg", "https://cdn.instructables.com/FF9/3IEX/JSPACP8A/FF93IEXJSPACP8A.LARGE.jpg", "https://cdn.instructables.com/F10/DZ8Q/JSPACP90/F10DZ8QJSPACP90.LARGE.jpg", "https://cdn.instructables.com/FJ1/RUH2/JSPACPCL/FJ1RUH2JSPACPCL.LARGE.jpg"], "step_title": "Step 5: Assembly"}, {"step": 6, "steps_text": "Once we are done with Circuit and assembly of Transformer we can mount the Transformer on a piece of wood and hold it down using some screws. After which you can mount the battery and the circuit and connect every mains wire and a switch and you are done!", "step_imgs": ["https://cdn.instructables.com/F9C/K47A/JSPACQSR/F9CK47AJSPACQSR.LARGE.jpg", "https://cdn.instructables.com/FE2/18GZ/JSPACQVM/FE218GZJSPACQVM.LARGE.jpg", "https://cdn.instructables.com/FOI/QWZR/JSPACQXU/FOIQWZRJSPACQXU.LARGE.jpg", "https://cdn.instructables.com/FU5/87GZ/JSPACR0U/FU587GZJSPACR0U.LARGE.jpg", "https://cdn.instructables.com/F5M/SYVZ/JSPACR3B/F5MSYVZJSPACR3B.LARGE.jpg", "https://cdn.instructables.com/FN2/IJBY/JSPACR3E/FN2IJBYJSPACR3E.LARGE.jpg", "https://cdn.instructables.com/FWB/5B0Q/JSPACQQD/FWB5B0QJSPACQQD.LARGE.jpg"], "step_title": "Step 6: Mounting Everything!"}, {"step": 7, "steps_text": "For the first weld, I tried 47uF capacitor it was too weak so I added another 100uF in parallel and welds were much better. Value of capacitor can totally depend on the type of weld you are doing so its trial and error method.", "step_imgs": ["https://cdn.instructables.com/FPW/DLRP/JSPACSES/FPWDLRPJSPACSES.LARGE.jpg", "https://cdn.instructables.com/FXD/XKDQ/JSPACSG5/FXDXKDQJSPACSG5.LARGE.jpg"], "step_title": "Step 7: Test and Done!"}, {"step": 8, "steps_text": "If you like my work\nFeel free to check out my YouTube channel for more awesome stuff:\nhttps://www.youtube.com/c/Nematics_lab\nYou can also follow me on Facebook, Twitter etc for upcoming projects\nhttps://www.facebook.com/NematicsLab/\nhttps://www.instagram.com/nematic_yt/\nhttps://twitter.com/Nematic_YT", "step_imgs": [], "step_title": "Step 8: Thank You!"}], "channel": "Tools"}, {"category": "Technology", "description": "The problem that fix this project is the following: at the high school where I work, the class-change bell doesn\u00b4t sound loud enough everywhere and sometimes it causes some problems. Install a new wired class-change bells or buy a wireless bell system isn\u00b4t possible by the moment.\nThis project could be useful too, for everybody that need to replicate a main bell in a wide area without install a wired or wireless system bell, not expending much money and, of course, made by you.\nThinking in a solution and looking for similar projects, I found the followings projects here in instructables: Wireless Doorbell transmitter and Wireless Doorbel receiver. There was what I need but instead of using PIC microcontrollers I have decided to use Arduino microcontrollers and its components.\nSo, I proposed to the high school principal a simple and easy solution: to build a wireless class-change bell system. The solution is to install closed to the class-change bell a device with a sound detector controlled by a microcontroller that sends a signal to others receivers stations with bells when the class-change bell sounds. It\u00b4s easy and cheap.\nSee below the solution implemented it and how it works.", "title": "Wireless Bell System", "url": "https://www.instructables.com/id/Wireless-Bell-System/", "steps": [{"step": 1, "steps_text": "The solution implemented is based in a master/slave model where the master station or transmitter station is installed near the main class-changed bell and the slaves or receiver stations are installed in differents places. In this project we have configured the sound sensor station and only one bell repeater but it is possible to configure more ones. Initially the system is configured for five receivers stations but you can modify it.\nSo the material for the transmitter station is the following:\nNANO board\nNANO expansion board\nNRF24L01 adapter\nNRF24L01 + antenna\nSound sensor detector\n5V, 3W power supply\nand the material for each receiver station:\nNANO board\nNANO expansion board\nNRF24L01 adapter\nNRF24L01 + antenna\nRelay\nBell\n5V, 3W power supply", "step_imgs": ["https://cdn.instructables.com/FFL/4EA8/JROTMS0H/FFL4EA8JROTMS0H.LARGE.jpg", "https://cdn.instructables.com/FDZ/YG5W/JROTMS3N/FDZYG5WJROTMS3N.LARGE.jpg", "https://cdn.instructables.com/F1I/90WY/JS0OSRJY/F1I90WYJS0OSRJY.LARGE.jpg"], "step_title": "Step 1: List of Material"}, {"step": 2, "steps_text": "A receiver station is continously listening the wireless network waiting for the activation signal sent by the transmitter station manually or automatically when the main bell rings. While the signal is been receiving, it activates the relay to connect the secondary bell.", "step_imgs": ["https://cdn.instructables.com/F0X/RD8M/JRYUC2ED/F0XRD8MJRYUC2ED.LARGE.jpg", "https://cdn.instructables.com/FHQ/TLZ5/JROTPIAR/FHQTLZ5JROTPIAR.LARGE.jpg", "https://cdn.instructables.com/FS5/V02X/JS5CLP0K/FS5V02XJS5CLP0K.LARGE.jpg", "https://cdn.instructables.com/FIR/IMG3/JS5CLP3W/FIRIMG3JS5CLP3W.LARGE.jpg"], "step_title": "Step 2: How to Connect and Program a Receiver Station"}, {"step": 3, "steps_text": "The transmitter station is continously measuring the sound level using the sound sensor installed close to the main bell to detect when it rings. While the main bell is ringing it is sending the activation signal to all the receivers station. Moreover I have installed a button to send the activation signal manually in case the main bell is out of service. While the button is pushed the station is sending it.", "step_imgs": ["https://cdn.instructables.com/FYV/HAM1/JS0ONG1C/FYVHAM1JS0ONG1C.LARGE.jpg", "https://cdn.instructables.com/FE7/FM40/JRQOO2A6/FE7FM40JRQOO2A6.LARGE.jpg", "https://cdn.instructables.com/FYX/RB2E/JSL34FC8/FYXRB2EJSL34FC8.LARGE.jpg", "https://cdn.instructables.com/FT0/FFVL/JSL34F9L/FT0FFVLJSL34F9L.LARGE.jpg"], "step_title": "Step 3: How to Connect and Program a Transmitter Station"}, {"step": 4, "steps_text": "As you can see in the picture 2, the measurements before and after the main bell rings are stable (150, 149, 151, 149, ....), but when the main bell rings the analog measurements change between 95 and 281. The sketch I have programmed (see picture 2 and 3) will automatically detect the stable measuremet and will send a signal to the receivers stations when the diference, in absolute value, between the stable value and the current measurement is upper to a fixed threshold and remains during a number of readings.\nFor this project this value is fixed to 4 (4% up or lower the stable value) as you can see in the code below.\nTo configure this value, you have to do the following:\nYou have to build the transmitter station with the sound sensor and install it near the mail bell (picture 1 or picture 4)\nDownload and load the sketch \"transmitter.ino\" (see previous step)\nTest if the led remains on while the bell is ringing.\nIf the led is off, you have to change the threshold (\"min_threshold_to_send_signal\" in the code below) to adjust the sound sensor to your bell and repeat the test. .\nIf after several trials the led is on when the bell rings and off when it doesn't rings, you have finished the configuration.\nYou can modify, if you need it, the delay time between two measurements (\"delay_between_reads\") or the maximun level sound threshold to consider the same level sound (\"max_threshold_to_consider_same_value\").\n#define delay_between_reads 200\nfloat min_threshold_to_send_signal = 4.0;\nfloat max_threshold_to_consider_same_value = 1.0;", "step_imgs": ["https://cdn.instructables.com/FRW/5YDY/JS0OP6SX/FRW5YDYJS0OP6SX.LARGE.jpg", "https://cdn.instructables.com/FEC/X2VT/JRV8ALK4/FECX2VTJRV8ALK4.LARGE.jpg", "https://cdn.instructables.com/FSO/M2CZ/JSL34FMN/FSOM2CZJSL34FMN.LARGE.jpg", "https://cdn.instructables.com/F4G/9XGG/JSYZ8AXW/F4G9XGGJSYZ8AXW.LARGE.jpg"], "step_title": "Step 4: Configuring the Transmitter Station"}, {"step": 5, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FN4/E8NT/JSYZBNUJ/FN4E8NTJSYZBNUJ.LARGE.jpg", "https://cdn.instructables.com/FBS/POKM/JSYZBNUI/FBSPOKMJSYZBNUI.LARGE.jpg"], "step_title": "Step 5: Final Installation"}, {"step": 6, "steps_text": "", "step_imgs": [], "step_title": "Step 6: From the Beginning ..."}], "channel": "Arduino"}, {"category": "Technology", "description": "Introduction\nI started this project because I wanted to make my mark on the world but didn\u2019t want to leave any aftereffects.\nI also wanted a challenging project for my new 3D printer that involved some Arduino Programming.\nFinally, I like to build things using as much \u201cfound\u201d stuff as possible.\nAs the videos show, StreetWriter does all of that. It writes 8 inch high messages in water on the pavement as it moves, and leaves no trace once the water evaporates.\nI have built two StreetWriters, with minor design differences between them, This Instructable, is based on the second build which is somewhat improved.\nIn StreetWriter, water is pressurized and fed to a manifold which carries 8 automotive fuel injectors. As StreetWriter moves forward, the Arduino controls the fuel injectors, squirting water onto the pavement. The message to be written is one of 8 that have been written onto an SD Card plugged into the Arduino. The operator can easily select among the messages and can create new messages on the SD card at a computer. There is no length limit on any one message other than the amount of water in the pressure tank. The longest message I have written so far is PI to 300 places.\nParts, materials and tools\nDrive wheel assemblies (used from old \u201cPower Wheels\u201d car)\n\u201cFound\u201d 5 inch wheels\n\"Found\" Wheel caster\n\"Found\" Small RC car (or other RC remote control)\nWood plank\n\"Found\" Windshield washer tank from old car.\nPressure gauge (optional) 1/8\u201dNPT\nHose Nipple 1/8\u201dNPT\nPlastic tubing to fit nipple and water pump\n12v Battery ( I used 6-7AHr sealed lead acid, less expensive than LiPo)\nArduino Uno\nArduino power switch Shield (EKT-1016 at Tindie.com)\nArduino SD card shield (www.sparkfun.com/products/12761)\nAssorted electronics and connecting wire\n3D printed manifold (could be made other ways)\n8 automotive fuel injectors (used on Ebay)\nAssorted screws and brackets\nCable ties, and Dclips\nBarrier strips\n3D Printer\nSaw\nDrill motor and bits\nScrew driver", "title": "StreetWriter", "url": "https://www.instructables.com/id/StreetWriter/", "steps": [{"step": 1, "steps_text": "The goal of this project was to write text messages using water which is a transient writing medium. After a short period, the water will evaporate, and the message will disappear without a trace.\nI was less interested in the prettiness of the final device than in its functionality. So, if you are interested in style as well as function, there is much room for improvement.\nThe overall design is a motorized platform which uses 8 nozzles to squirt water in a controlled manner as the platform moves.\nAs the pictures on this step show, the platform is a wood plank, driven by two motor assemblies which were scavenged from small power wheel toys.\nWater from the pump on a windshield washer tank pressurizes 8 fuel injectors under control of an Arduino Uno.\nThere is a shield board on the Arduino which provides the current needed to drive the fuel injectors, which the Arduino cannot provide directly. There is also a custom shield on the Arduino that has an SD card reader and a few parts for selecting which file is used and the water pressure to be used to write messages.\nFinally, there is a remote control of the StreetWriter vby modified electronics from an RC car.\nDetails on all of this are in later steps.", "step_imgs": ["https://cdn.instructables.com/FUR/J36X/JSYZ6VG1/FURJ36XJSYZ6VG1.LARGE.jpg", "https://cdn.instructables.com/FLX/MTQT/JSYZ6VHQ/FLXMTQTJSYZ6VHQ.LARGE.jpg"], "step_title": "Step 1: Overall Design"}, {"step": 2, "steps_text": "In many ways, this step is the core of the StreetWriter design.\nI bought 8 used fuel injectors and then designed and 3D printed a manifold to hold the fuel injectors and provide water to them. See picture of orange injectors on a blue manifold.\nFuel injectors are a wonderful fit for this project. Each fuel injector contains a valve to control water flow, a 12v electrical solenoid to control the valve, a nozzle which sprays the water in a controlled area, and plumbing and seals to get the water to the valve and nozzle. All the internal metal parts are stainless steel, so the fact that we are using water rather than the gasoline does not cause a corrosion problem. To put out a bit (pixel) of water only requires that the Arduino apply 12V to the solenoid for a brief period of time.\nI designed the manifold so the fuel injectors are spaced enough apart so their watery pixels are adjacent. If your fuel injectors spray a very different pattern of water, you may have to raise or lower the height of the manifold/injector assembly so that the sprays are just adjacent.\nI found some connectors with wires attached that worked for the pins on the fuel injectors, but you can use automotive hardware for that. There is more detail about wiring things in Step 10, final assembly.\nFuel injectors were bought used on Ebay for about $2 each. Mechanically similar parts seem to be available for multiple car types. The attached photo is annotated with the important features needed for the injector to work with the manifold design provided here.\n1) An O-ring at the top that seals the injector to the manifold\n2) Slots in the injector that are used to lock it into the manifold.\nThe 3D printed manifold is the mechanically most complex part of this project.\nIt contains 8 sockets for the fuel injectors, ports for the pressure gauge, and water inlet, and must be water tight.\nI designed the part in TinkerCad, which was fairly straightforward. I am providing the STL file and the Gcode file for PLA. Also, see the video which shows the TinkerCad model and the printer build, an 8 hour task.\nThere is also a picture of a small red section of the manifold which is annotated to show the holes used to lock the fuel injectors into the manifold. I just ran a piece of copper wire through the four holes, and it locked the fuel injector into place.\nThe main use for that small section was to test injector fit, and to make sure the build would be water tight, before committing to an 8 hour build. I clamped the part in a vise with a piece of rubber across the open end and applied water pressure. It leaked. I built it several times with various parameters in Cura (slicer program) and could not make the sample part water tight. It always weeped or leaked multiple places. Finally, I switched to Sli3er as a slicer program, and got a water tight test part on the first build. That version is the Gcode file is what is provided here.\nAfter the manifold is printed, there are a few finishing steps required before it can be used.\n1) The brim on the bottom of the part needs to be cut away to open the injector sockets for use.\n2) The 4 holes in each socket need to be cleared with a small drill so a wire can be installed.\n3) The top holes need to be tapped with a 1/8\u201dNPT tap for the pressure gauge and hose nipple.\n4) Finally, the inside of each socket needs to be smoothed so the O-ring on the injector will seal. The goal is to level out the 3D printed ridges inside so that the O-ring \u201cfeels\u201d a smooth surface. I did this by using WELD-ON 4 solvent on a cotton ball, running it up and down inside each socket until it was smooth to my finger.\nAt this point, the fuel injectors can be installed into the manifold and locked with copper wires.\nI applied Lithium grease to the O-ring on each injector before installing it, to allow an easy fit, and to support sealing water tight.\nTest your work. Install the pressure gauge, and the hose adapter. Apply about 15 psi water pressure and look for leaks. If there are any weeps, you can use WELD-ON 16 glue or WELD-ON 4 solvent to seal them, and retest.", "step_imgs": ["https://cdn.instructables.com/FXS/YPAV/JSYZ6VT1/FXSYPAVJSYZ6VT1.LARGE.jpg", "https://cdn.instructables.com/FIK/PZN9/JSYZ6VS5/FIKPZN9JSYZ6VS5.LARGE.jpg", "https://cdn.instructables.com/FIB/MUUP/JSYZ6VSL/FIBMUUPJSYZ6VSL.LARGE.jpg"], "step_title": "Step 2: Fuel Injectors and Manifold"}, {"step": 3, "steps_text": "As I said in the introduction, the goal of my build of StreetWriter was functionality, not beauty or style.\nThe frame is \u00bd\u201d plywood with holes, wood blocks, etc. added as necessary. The annotated top photo shows where everything was placed. The only important placement is the row of fuel injectors at the rear of the vehicle and between the rear wheels. That way, as the vehicle turns, the message is minimally distorted, and the wheels never run over the message.\nThe fuel injectors hang from the manifold and drop through the holes in the frame. They are not supported by the frame. The manifold is sitting on the frame, and is only loosely held by one pipe clamp that you can see in the rear view photo.\nThe frame is powered by two wheel assemblies that were taken from old Power Wheel style kids riders that I have collected over time. The attachedpicture shows similar units. The power assembly motors are cable tied to a block on the frame, and reinforced on the bottom by \u201cL\u201d brackets. I have added 0.1 ufd capacitors across the motor terminals to reduce the electrical noise from the brush type motors. (The Arduino was randomly rebooting without the capacitors. )\nSteering of the vehicle is \u201ctank steering\u201d, with power removed from one or the other drive motor to steer. Steering is not proportional. Stop one wheel and the StreetWriter will turn sharply, Gradual turns are achieved by the operator pulsing right or left, while driving forward.\nThere is a caster at the front of the frame that allows StreetWriter to make a sharp turn when one wheel stops turning.\nThe rear wheels on Power Wheel style riders are usually connected by an axle so both wheels move together.\nThat wouldn\u2019t work here, because I want the rear wheels to operate independently for steering.\nI found some 5\u201d wheels somewhere and with minor modification was able to use them. The wheel detail shows that this particular wheel has 12 structural struts. The drive assembly has 6 slots. I just cut away every other strut and the remaining struts keyed nicely into the slots in the drive assembly. I used a bolt through the hole which riginally contained the axle, and a nut with Nyloc insert to hold the two together with enough play to allow it all to spin. (Depending on what parts you use for drive assemblies and wheels you may have to get creative in making them work well together.)", "step_imgs": ["https://cdn.instructables.com/FUN/CUI1/JSYZ6WYF/FUNCUI1JSYZ6WYF.LARGE.jpg", "https://cdn.instructables.com/FRH/7AVE/JSYZ6X0P/FRH7AVEJSYZ6X0P.LARGE.jpg", "https://cdn.instructables.com/F2N/TNMT/JSYZ6X2Z/F2NTNMTJSYZ6X2Z.LARGE.jpg", "https://cdn.instructables.com/FIG/QWRC/JSYZ6X59/FIGQWRCJSYZ6X59.LARGE.jpg", "https://cdn.instructables.com/FBO/CQEB/JSYZ6X7J/FBOCQEBJSYZ6X7J.LARGE.jpg", "https://cdn.instructables.com/FM5/DA0A/JSYZ6X7Z/FM5DA0AJSYZ6X7Z.LARGE.jpg", "https://cdn.instructables.com/FHD/IMKE/JSYZ6XA9/FHDIMKEJSYZ6XA9.LARGE.jpg", "https://cdn.instructables.com/FIA/VGVN/JSYZ6XCJ/FIAVGVNJSYZ6XCJ.LARGE.jpg"], "step_title": "Step 3: Frame, Motors and Wheels"}, {"step": 4, "steps_text": "In line with goal of using \u201cfound\u201d parts where possible, the RC control for StreetWriter is based on the electronics from a trashed small RC Car. The important requirement is that the remote control be radio, not IR, since StreetWriter will be used outside. Most of these cars do not have proportional steering which is perfect here.\nThey are either turning right or left, or driving straight.\nI used the electronics from the car, and added relays to raise the power handling to what is required for the drive assemblies. The lower (brown) circuit board in the picture is from the car. The upper (hand wired) board contains relays and a voltage dropping circuit needed for the 4.5V RC car circuits. The schematic is attached.\nThe circuitry is quite simple. A transistor controls each of the three relays. One relay powers the left motor, one the right motor, and the third reverses the power to both motors for driving backward. Control signals come from the RC car circuit board. When a left turn is signaled, a transistor forces the left relay to turn off, stopping that motor.\nThe remote control is shown in the picture. It can send the vehicle forward/back and left/right.\nI have added a piece of music wire (coming toward you out of focus in the picture) so the antenna on the car is coming straight up to increase range somewhat.\nThere is only one connection from this circuit to the Arduino. The single connection tels the Arduino code that the vehicle is moving forward. If the vehicle is stopped or moving backward, water doesn\u2019t spray.", "step_imgs": ["https://cdn.instructables.com/F6H/7SR7/JSYZ6YOJ/F6H7SR7JSYZ6YOJ.LARGE.jpg"], "step_title": "Step 4: Remote Control (RC)"}, {"step": 5, "steps_text": "The pressurized water for StreetWriter comes from windshield washer tank from an old Subaru, but the source auto is not critical. Any tank with a built in 12V water pump will do.\nOn this particular tank, there are two water pumps, so I just capped off the output from one of them, and used the other. The tank has a bump at the bottom, designed to mate with a hole in the car chassis. I just drilled a hole in the StreetWriter frame for that bump to sit in, (bottom view picture) and bolted the top of the tank to a wood support on the frame. (top view picture) I also used the bolts to secure a plate with the main power switch.\nThe pump motor requires more power than the Arduino output can supply. There is a transistor amplifier for that mounted at the pump itself to reduce electrical noise. (See RC control schematic, and fairly ugly wiring picture attached.)\nTubing runs from the pump on the tank to the nipple on the manifold. The nipple is sized for the tubing and for the 1/8 \u201c NPT thread on the manifold.\nArduino code runs the motor briefly before allowing the fuel injectors to write, to pressurize the system.\nArduino code also runs the pump when you move the pressure pot to allow the user to set the manifold pressure, since different surfaces require more or less water for good readability. You just wiggle the pot and the pump comes on so you can adjust the pressure using the gauge. When you stop moving the pot, the pump stops.", "step_imgs": ["https://cdn.instructables.com/FZK/EXQ2/JSYZ6YWM/FZKEXQ2JSYZ6YWM.LARGE.jpg", "https://cdn.instructables.com/FZN/CRCM/JSYZ6YWO/FZNCRCMJSYZ6YWO.LARGE.jpg", "https://cdn.instructables.com/FTU/NSQ7/JSYZ6YWR/FTUNSQ7JSYZ6YWR.LARGE.jpg", "https://cdn.instructables.com/FK2/1SOC/JSYZ6YZU/FK21SOCJSYZ6YZU.LARGE.jpg", "https://cdn.instructables.com/F2Q/TRND/JSYZ6YWU/F2QTRNDJSYZ6YWU.LARGE.jpg"], "step_title": "Step 5: Pressure System"}, {"step": 6, "steps_text": "StreetWriter requires two shields on the top of the Arduino Uno.\nThe first is a commercial part , EKT-1016, that I bought from Tindie.com. This provides 16 channels of power amplification between the Arduino Uno and the fuel injectors. We are using 8 of those channels in this project.\nThe second shield came from SparkFun, (www.sparkfun.com/products/12761\nIt contains an SD card reader and some custom circuits.\nThere are:\n1) a potentiometer to adjust water pressure\n2) a potentiometer to select which text file will be written by StreetWriter\n3) a multi-color LED to indicate which of 8 files has been selected\n4) a switch to disable printing while moving forward\n5) a connector for ground and the two signals needed, forward command input from RC and pressure command output to the pump.", "step_imgs": ["https://cdn.instructables.com/FCG/Z2I2/JSYZ6Z9H/FCGZ2I2JSYZ6Z9H.LARGE.jpg", "https://cdn.instructables.com/FBN/XRAG/JSYZ6Z9D/FBNXRAGJSYZ6Z9D.LARGE.jpg"], "step_title": "Step 6: Arduino Shields"}, {"step": 7, "steps_text": "The core function of StreetWriter is to use a digital font to make characters.\nFortunately, someone has done all the hard work of creating fonts and made the result available to us at:\nhttps://www.min.at/prinz/o/software/pixelfont/\nThis font editor program has multiple sample fonts available, gives the user the ability to edit these existing fonts.\nYou can then output the resulting font as a block of code that can be placed directly into an Arduino program.\nI modified one of the fonts to add footprints, and that file is attached (footprintFONT.pf). You can use any of the sample fonts that come with pixelfont or the one attached, to create the code block that the Arduino file needs.", "step_imgs": [], "step_title": "Step 7: Character Font and Font Design"}, {"step": 8, "steps_text": "The Arduino code in the next step has the ability to read and print one of 8 text files.\nWhich file will be printed is selected using a pot on the Arduino shield, and indicated by the color of the LED on that shield. The colors are: red, green, blue, yellow, cyan, magenta, white, black.\nThe text files on the SD card are named by the same eight colors for ease of identification. The text in the file is not associated in any way with the file name.\nI usually put a table of contents file TOC.txt onto the SD card to help me keep track of what each file contains, and print that file out and paste it to the StreetWriter. (see picture)\nFiles can be of any length. For instance, the file BLACK.txt contains PI to 300 places.\nThe text files can be created on any text editor, but some editors may add end of line characters that affect message spacing at printing time. I usually use NotePAD.\nThe Arduino program I wrote has the ability to access \u201cnon-printing\u201d character locations in the font table by addressing the character location directly. For instance, part of one footprint is in font location 128, so the text file contains ^128, The Arduino code detects the \u201c^\u201d and uses it as an \u201cescape\u201d character. It doesn\u2019t print the \u201c^\u201d but fetches the next three characters as a font location and prints that character.\n(^128^129^130 ^131^132^133 will print six characters that make up one left and one right footprint.)", "step_imgs": ["https://cdn.instructables.com/FES/4YFG/JSYZ6ZSB/FES4YFGJSYZ6ZSB.LARGE.jpg"], "step_title": "Step 8: Text Files"}, {"step": 9, "steps_text": "The Arduino code for this project is attached. It is straightforward with a few things worth mentioning.\nThere are two tabs in the program. (In order for the Arduino IDE to find and use these files, they must be put into a folder named STREETWRITER_BLUE.)\nSTATESET is just a routine that communicates with the ETK-1016 shield, turning its drivers, and thus the fuel injectors on and off.\nSTREETWRITER_BLUE is the main routine where everything else happens.\nStarting at line 13 there is a very long array:\nconst uint8_t font[] PROGMEM = {\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Char 000 (.)\n0x7E, 0x81, 0x95, 0xB1, 0xB1, 0x95, 0x81, 0x7E, // Char 001 (.)\n\u2026\n0x44, 0x6C, 0x38, 0x10, 0x38, 0x6C, 0x44, 0x00, // Char 120 (x)\n\u2026\n0x00, 0x60, 0x40, 0x40, 0x40, 0x40, 0x60, 0x00 // Char 255 (.)\n};\nThis is the font table. Each line describes one character, and ends with a comment giving the address of that character and what the character is. Non-printing characters are indicated by (.). This table is too large to fit into Arduino working memory, and the compiler directs it to flash memory. This is fine, since the table is only read from, never written to while the Arduino is operating.\nThe main LOOP starts at line 345. It detects that StreetWriter is moving forward, reads the next character from the open text file. It sends the bytes for that character to the fuel injectors, one stroke at a time. Then it fetches the next character and sends that.\nAt line 347:\nThe Arduino doesn\u2019t adjust how much time a character bit is squirting water as the StreetWriter's speed changes. In practice, I have found that StreetWriter\u2019s speed is fairly constant, so testing and adjusting stroke width once during setup is adequate for producing good enough output. In this code, you can see that it is set at 500.\npulsemin, pulsemax, and pulse are values that worked for my implementations.\nAt line 376 there is code that starts the pump for \u00bd second to give the operator a chance to read and adjust the pressure. As long as you keep fiddling with the pot, the pump will stay on. When you stop adjusting, the pump will go off.\nAt line 393 the code tests for what font character has been returned from the text file and decides how to print it.\nThe routine UNPACKat line 403 unpacks the font bytes and sends them to the fuel injector drivers.\nThe routine COLOR at line 410 tests the file selection pot, adjusts the LED color to match, then opens the appropriate text file.", "step_imgs": [], "step_title": "Step 9: Arduino Code"}, {"step": 10, "steps_text": "I have not provided an overall wiring diagram, but it is straightforward.\n1) The fuel injectors need to be connected to the shield that controls them. I found some connectors with wires attached that worked, but you can use automotive hardware for that. I used a barrier strip to connect those shortish cables to color coded cables to the shield. (shield close up and bottom view)\n2) The cable from the custom shield to the RC board provides the PWM signal for the pump, and the command signal back to the Arduino indicating forward motion. This is the 4 wire cable leaving he shield board toward the top in the shield picture.\n3) The power needs to be hooked up: Battery to power switch, to Arduino, and to RC motor control board. I used another barrier strip that you can see in the Overall top view picture.\n4) Cables between the RC board and the scavenged mini-car board provide power, and forward/reverse left/right signals.\nNow, does it work?\n1) Are the motors wired to go forward when the RC remote says forward? If not, the fix is to reverse the leads to the motor(s).\n2) Does the pump power up, and can you adjust its pressure?\n3) Do all the fuel injectors work when you command forward? I like to use the test pattern (white.txt) which should draw 8 stripes.\n4) Does the file selection pot change which file is written? And do the files match the color of the LED?\n5) Are the letters of a nice width? If too narrow or too wide, you must change the stroke width in the Arduino code, now set to 500.", "step_imgs": ["https://cdn.instructables.com/FDD/3QPD/JSYZ71VT/FDD3QPDJSYZ71VT.LARGE.jpg", "https://cdn.instructables.com/FJE/OJ9X/JSYZ71X8/FJEOJ9XJSYZ71X8.LARGE.jpg", "https://cdn.instructables.com/FT7/ACO1/JSYZ71XP/FT7ACO1JSYZ71XP.LARGE.jpg", "https://cdn.instructables.com/FVA/24LA/JSYZ71XQ/FVA24LAJSYZ71XQ.LARGE.jpg"], "step_title": "Step 10: Final Assembly and Adjustment"}, {"step": 11, "steps_text": "Since the StreetWriter described here is a second build, some improvements from the first have already been incorporated.\nThe biggest changes are:\n1) to use the windshield washer tank rather than the garden sprayer you may see in some of the videos.\n2) Using the EKT-1016 rather than custom wiring for the power amplifiers.\nI have considered making a version with 12 to 16 pixels to get more resolution in the text written, but have not been able to find a software source like Pixelfont for the higher resolution and am too lazy to write that from scratch. Please let me know if you do a build like that.\nI have been asked to use paint or some other more permanent marking fluid than water, but I resist. The evanescent nature of what StreetWriter has to say is part of the design.\nI did try adding kitchen detergent to the water to see if it would blow bubbles as it wrote. The result was faint clean spots on my driveway making messages which lasted several months. No bubbles.\nFinally, it turns out there has been parallel invention of this technique on a larger scale. See www.trikewriter.com/", "step_imgs": [], "step_title": "Step 11: Improvements"}], "channel": "Robots"}, {"category": "Technology", "description": "When 3D printing, build plate adhesion is critically important. If you have a poor build plate adhesion your print usually fails. Therefore it is important to make sure that your prints are stuck to the build plate as well as possible. There are 3 options to improve build plate adhesion in your slicing software: skirt, brim, and raft. And we will have a quick look at how to use these.", "title": "Better Build Plate Adhesion", "url": "https://www.instructables.com/id/Better-Build-Plate-Adhesion/", "steps": [{"step": 1, "steps_text": "When you enable this option, your printer will make a line of plastic around the object you are printing. It makes this line before it starts printing the actual object.\nThis unifies the flow of plastic from the nozzle and therefore prevents any under extrusion on the first layer of the thing you are printing.\nYou can also spot any problems with the bed leveling on the skirt. Then you can pause your print and level the bed properly.", "step_imgs": ["https://cdn.instructables.com/FO9/C8OI/JSYZCHQ5/FO9C8OIJSYZCHQ5.LARGE.jpg", "https://cdn.instructables.com/FO1/LOR1/JSYZCHNC/FO1LOR1JSYZCHNC.LARGE.jpg"], "step_title": "Step 1: Skrit"}, {"step": 2, "steps_text": "The brim is great if the base of your printed object has a small surface area. This would obviously not stick very well to the heat bed. With a brim you will increase the surface area of the base and your prints will hold nicely. The width of the brim naturally depends on the object but I usually find 3-5 mm to be enough.", "step_imgs": ["https://cdn.instructables.com/FBW/PDS3/JSYZCHND/FBWPDS3JSYZCHND.LARGE.jpg", "https://cdn.instructables.com/FJN/OZGH/JSYZCHP7/FJNOZGHJSYZCHP7.LARGE.jpg", "https://cdn.instructables.com/F54/5R0O/JSYZCHTY/F545R0OJSYZCHTY.LARGE.jpg"], "step_title": "Step 2: Brim"}, {"step": 3, "steps_text": "It is the most powerful option to increase your build plate adhesion. It is very useful when your printed object has a lot of tiny features on the base. It can be challenging to stick those features to your build plate. But when you build a raft underneath it sticks to the raft much better. Because the plastic to plastic connection is easier to pull off.\nBut raft can be very time and filament consuming option. Therefore I tend to use it very rarely when I feel that the other options would not work.", "step_imgs": ["https://cdn.instructables.com/FO4/WO9D/JSYZCHR4/FO4WO9DJSYZCHR4.LARGE.jpg", "https://cdn.instructables.com/FT3/8AST/JSYZCHOA/FT38ASTJSYZCHOA.LARGE.jpg", "https://cdn.instructables.com/FU8/D7P4/JSYZCHS1/FU8D7P4JSYZCHS1.LARGE.jpg", "https://cdn.instructables.com/FZJ/NI2J/JSYZCHQ7/FZJNI2JJSYZCHQ7.LARGE.jpg"], "step_title": "Step 3: Raft"}], "channel": "3D Printing"}, {"category": "Technology", "description": "This LED matrix uses standard WS2812b LED stripes to build a matrix with a cylindric shape and a nice wooden veneer finish.\nPartlist:\n790x384 cardboard 1.5 mm (other sizes are also possible, but CAD data has to be changed)\n100 WS2812b LED from LED-stripes (30 LED/meter)\nRaspberry Pi or Arduino\nMicrowood veneer or any type of flexible diffusion material\nWires", "title": "LED Matrix Cylinder", "url": "https://www.instructables.com/id/LED-Matrix-Cylinder/", "steps": [{"step": 1, "steps_text": "Main design parameter is the thickness of the used material. In this build, a 1.5 mm cardboard was used because it is easy to cut and quite cheap. 3D design (e.g. Fusion360) helps to avoid problems in the assembling process. For laser cutting, parts have to be arranged in a way that they fit to the laser cutting area of your machine, in this case 790x384 mm. Inkscape is a simple and powerful tool to handle this job. Attached SVG file contains all parts for the cylindric display with 1.5 mm material.\nUPDATE: I have modified the Fusion360 model with a user parameter thickness, so you are able to change the material thickness for the matrix and generate your own laser cutting file. Cut-out slots for the LED stripes will be added soon.\nLink to the model: https://a360.co/2OC2kvZ", "step_imgs": ["https://cdn.instructables.com/F2Z/LR4T/JSUP2IUC/F2ZLR4TJSUP2IUC.LARGE.jpg", "https://cdn.instructables.com/FSR/ABV6/JSUP2IUD/FSRABV6JSUP2IUD.LARGE.jpg"], "step_title": "Step 1: Design and Laser Cutting File"}, {"step": 2, "steps_text": "After laser cutting, you will get the following parts:\n- 12 C-shape horizontal segments\n- 18 comb like vertical segments\n- 2 vertical connection segments\n- 20 led carrier segments\n8 C-Shapes, 9 combs and 1 connection are combined to a display half. In this step, parts are only plugged together to check if all fits well. Don't use glue yet.", "step_imgs": ["https://cdn.instructables.com/FZ7/Q7SI/JSUOZ9KN/FZ7Q7SIJSUOZ9KN.LARGE.jpg", "https://cdn.instructables.com/FB3/SI57/JSUOZ9LK/FB3SI57JSUOZ9LK.LARGE.jpg", "https://cdn.instructables.com/FP9/EP6L/JSUOZ9KO/FP9EP6LJSUOZ9KO.LARGE.jpg", "https://cdn.instructables.com/F9C/X71U/JSUOZ9OK/F9CX71UJSUOZ9OK.LARGE.jpg"], "step_title": "Step 2: Laser-cutting and Preassemble"}, {"step": 3, "steps_text": "LED stripes are cut in 5 LED segments and glued to the carrier segments with the backside adhesive tape. First the DI (data in) and DO (data out) pins of the stripes are wired together in a zig-zag manner, connecting DO of the first stripe with DI of the next stripe and so on. This is done for each half of the cylinder including 10 stripes. 5V and GND are connected only at one side from strip to strip. Length of the wires should be matching the strip distance of the array.\nBefore the LEDs are installed into the matrix, the segments of the matrix have to be glued together for each half of the cylinder.\nFinally the 10 stripes are placed in each half of the matrix and fixated with hot glue. DO from one half is connected to DI of the second half. DI of the first half will be the input for the Raspberry Pi or Arduino.", "step_imgs": ["https://cdn.instructables.com/F3H/T8VN/JSUOZ9OR/F3HT8VNJSUOZ9OR.LARGE.jpg", "https://cdn.instructables.com/FA3/5CBJ/JSUOZ9SF/FA35CBJJSUOZ9SF.LARGE.jpg", "https://cdn.instructables.com/FU5/LJPI/JSUOZA5Y/FU5LJPIJSUOZA5Y.LARGE.jpg"], "step_title": "Step 3: Wiring of LEDs"}, {"step": 4, "steps_text": "To ensure that everything works, a first test of the LEDs should be made. Using an Arduino and the Neopixel library should be the easiest way to do this.", "step_imgs": ["https://cdn.instructables.com/FXH/GM3X/JSUOZA61/FXHGM3XJSUOZA61.LARGE.jpg", "https://cdn.instructables.com/FHO/YWRR/JSUOZA6B/FHOYWRRJSUOZA6B.LARGE.jpg"], "step_title": "Step 4: First Test"}, {"step": 5, "steps_text": "After measuring the diameter and hight of the matrix, the wooden veneer could be cut out and rolled around the matrix. For fixation, a transparent glue strip is sufficient.", "step_imgs": ["https://cdn.instructables.com/FJQ/PFOW/JSUOZ98E/FJQPFOWJSUOZ98E.LARGE.jpg", "https://cdn.instructables.com/F66/6PXQ/JSUOZ9GJ/F666PXQJSUOZ9GJ.LARGE.jpg"], "step_title": "Step 5: Wooden Veneer Diffusor"}, {"step": 6, "steps_text": "For easy coding in Python of nice matrix effects, a Raspberry Pi could be used. In this case, a Raspberry Pi Zero was used, which is connected to the matrix via GPIO pin 18 via a 74HCT245 level shifter to adapt the 3.3V from the Pi to the 5V of the WS2812. Also a large capacitor (2200 uF) and a series resistor (470 Ohm) are used like suggested when using larger Neopixel/WS2812 LED counts.\nPower Supply\nMaximum power for 100 WS2812b LEDs is 100x60mA = 6A. Of course, by reducing brightness, the power consumption could be reduces drastically. Please ensure, that your 5V power supply is able to drive the current for your desired brightness.\nArduino\nThis matrix directly works on Arduino devices with the NeoPixel and NeoMatrix library from Adafruit. You have to change the PIN and initialization if you want to use the examples:\nNeomatrix:\nAdafruit_NeoMatrix matrix = Adafruit_NeoMatrix(20, 5, PIN,NEO_MATRIX_TOP + NEO_MATRIX_LEFT + NEO_MATRIX_COLUMNS + NEO_MATRIX_ZIGZAG, NEO_GRB + NEO_KHZ800);\nYou also have to include Adafruit GFX library and load a different font with a height of 5 pixel. Please use the attached Arduino sketch as a starting point (uses PIN 4 for the matrix). It is an adapted version of the Neomatrix example sketch.\nNeoPixel:\nAdafruit_NeoPixel strip = Adafruit_NeoPixel(100, PIN, NEO_GRB + NEO_KHZ800);", "step_imgs": ["https://cdn.instructables.com/FVW/93O9/JSUOZ99G/FVW93O9JSUOZ99G.LARGE.jpg", "https://cdn.instructables.com/FYB/NOXU/JT91MMWQ/FYBNOXUJT91MMWQ.LARGE.jpg"], "step_title": "Step 6: Raspberry Pi, Arduino and Power Supply"}, {"step": 7, "steps_text": "Python source-code is available at Github\nThere are two modes for coding. If PI=False defined at the beginning of the cylinder.py, code is in the simulation mode. You can test all animations on any platform which is able to run python. Please install first all libraries which are used by the program (like pygame, numpy, etc.). In simulation mode, the cylinder is displayed as a 5x20 pixel matrix.", "step_imgs": ["https://cdn.instructables.com/FO0/DNMC/JSUP61VA/FO0DNMCJSUP61VA.LARGE.jpg", "https://cdn.instructables.com/FJZ/5WMH/JSUP61WG/FJZ5WMHJSUP61WG.LARGE.jpg", "https://cdn.instructables.com/FY5/3J7F/JSUP61X5/FY53J7FJSUP61X5.LARGE.jpg", "https://cdn.instructables.com/F71/NF5D/JSUP61X9/F71NF5DJSUP61X9.LARGE.jpg"], "step_title": "Step 7: Simulation"}, {"step": 8, "steps_text": "The second software mode is PI=True (defined in cylinder.py) and started on the Pi. This drives the GPIO pin 18 of the Raspberry Pi. You are free to add additional effects and play around with the parameters.\nText is displayed with a 3x5 font, so not all letters are perfect due to the limited display height.\nEnjoy!", "step_imgs": ["https://cdn.instructables.com/FOS/WQ0X/JSUOZ9CR/FOSWQ0XJSUOZ9CR.LARGE.jpg", "https://cdn.instructables.com/F6G/2VU1/JSUOZ9HM/F6G2VU1JSUOZ9HM.LARGE.jpg", "https://cdn.instructables.com/FEI/33LL/JSUOZ9EJ/FEI33LLJSUOZ9EJ.LARGE.jpg", "https://cdn.instructables.com/FY9/7LGN/JSUOZ9HV/FY97LGNJSUOZ9HV.LARGE.jpg"], "step_title": "Step 8: Programming"}], "channel": "LEDs"}, {"category": "Technology", "description": "In this instructables I will show you how I made my own DIY laser engraver for very cheap. Also most of the parts are either salvaged from old things or are very cheap. This is a very interesting project for any electronics hobbyist. This engraver will be able to engrave wood, cardboard, vinyl stickers etc. and also for cutting paper due to the 250 mW laser that we will be using.\nIf this instructables helps you in any way in making your own laser engraver, do share your project with me. that'll make me more than happy.", "title": "DIY Cheap and Sturdy Laser Engraver.", "url": "https://www.instructables.com/id/DIY-Cheap-and-Sturdy-Laser-Engraver/", "steps": [{"step": 1, "steps_text": "2x - Old DVD drives to salvage stepper motor mechanism.\n1x - GRBL shield v4 ( can use other versions also).\n2x - A4988 stepper motor drivers.\n1x - 250 mw 650 nm laser with adjustable lens (from banggood.com)\n12v 2-2.5 Amps power supply.\nBlank pcb for making laser driver circuit.\nMale and Female headers.\n1x - 47 ohm resistor.\n1x- 100k ohm resistor.\n1x - IRFZ44N mosfet for the laser switching action.\nSome neodymium magnets.\nAcrylic sheet.\nM3 screws and nuts.\nLaser safety glasses.\n1x - Arduino Nano.\nTOOLS REQUIRED :\nDrill machine.\nHot glue gun.\nSaw for cutting acrylic.\nFile for finishing.\nTable vise.\nScrew driver Phillips head and flat head.\nSoldering iron.", "step_imgs": [], "step_title": "Step 1: Required Parts/ Materials and Tools"}, {"step": 2, "steps_text": "Two stepper mechanisms are required for the x and the y axis respectively which can be salvaged fromt be two used DVD drives. Salvaging the stepper mechanism and the neodymium magnets is rather easy. You can easily salvage it by opening up the cd driver using a Philips head screw driver.\nMake sure you do not damage any parts related to the project while salvaging the required parts from the DVD drives.\nIf you are not familiar with hoe to do this, I'll leave a link of a YouTube video that shows how to salvage the respective parts.", "step_imgs": ["https://cdn.instructables.com/FTY/6X0N/JR6ODTD5/FTY6X0NJR6ODTD5.LARGE.jpg"], "step_title": "Step 2: Salvaging the Stepper Mechasnism and Neodymium Magnets."}, {"step": 3, "steps_text": "For making the base I am using 4mm transparent acrylic sheet. The size of the acrylic sheet is 9in x 6.6in approximately.\nNow we will have to create our stand for mounting the y axis with this acrylic base.\nLeave 1in from the top and 1.5in from the side and place the stepper mechanism on the base. Now mark the respective holes and drill them in order to accumulate the y axis stepper mechanism.\nThese measurements are not that important. you can use your own space according to your needs.\nAlso I equipped this base with 4 silicon rubber pads so that the base stays firm on the ground or wherever its placed.", "step_imgs": ["https://cdn.instructables.com/F96/GVHX/JS5CDCLQ/F96GVHXJS5CDCLQ.LARGE.jpg", "https://cdn.instructables.com/FT5/CTP8/JR6ODTJU/FT5CTP8JR6ODTJU.LARGE.jpg", "https://cdn.instructables.com/F1A/XQN2/JR6ODTGR/F1AXQN2JR6ODTGR.LARGE.jpg", "https://cdn.instructables.com/FIS/1Z1U/JR6ODTR4/FIS1Z1UJR6ODTR4.LARGE.jpg", "https://cdn.instructables.com/FV7/DRCA/JR6ODTQ2/FV7DRCAJR6ODTQ2.LARGE.jpg", "https://cdn.instructables.com/FD7/M7OE/JR6ODTME/FD7M7OEJR6ODTME.LARGE.jpg", "https://cdn.instructables.com/FJ0/9PIS/JR6ODTZC/FJ09PISJR6ODTZC.LARGE.jpg", "https://cdn.instructables.com/FMO/7YP1/JR6ODTVR/FMO7YP1JR6ODTVR.LARGE.jpg"], "step_title": "Step 3: Making the Base for the Machine."}, {"step": 4, "steps_text": "The DVD stepper motors are bipolar stepper motors consisting of two coils and 4 wires.\nWe need to identify the wires of the coil 1 and 2.\nFor identifying the Stepper motor coil , we use a continuity tester which will show us a light of two wire are considering of the same coil.\nAs per our grbl shield the are four male headers whose wiring is as follows.\n1A 1B 2B 2A\nThis shows that 1A & 1B are part of the coil 1 and 2A & 2B are part of the second coil.\nNOTE - Images for each of the process are given so make sure you take a thorough look at it which will make it easier to understand.", "step_imgs": ["https://cdn.instructables.com/FIS/PCKV/JR6ODX60/FISPCKVJR6ODX60.LARGE.jpg", "https://cdn.instructables.com/FRX/3OSI/JR6ODX5T/FRX3OSIJR6ODX5T.LARGE.jpg", "https://cdn.instructables.com/FMI/QOHU/JR6ODX4X/FMIQOHUJR6ODX4X.LARGE.jpg", "https://cdn.instructables.com/F07/SRZ4/JR6ODX4V/F07SRZ4JR6ODX4V.LARGE.jpg"], "step_title": "Step 4: Identifying Stepper Coil and Wiring."}, {"step": 5, "steps_text": "For making the platform for engraving I am going to use some 2mm thin acrylic sheet pieces of size 40mmx22,5mm.\nI will be using tree similar pieces of the above size so that I could create a height of aboult 6 mm.\nNow attach the pieces together one by one on top of another by using some hot gluie.\nOnce the whole thing is glued up it needs to be attached to the base of the stepper driver mechanism.\nThis ensure that there is decent space between the stepper driver mechanism and the base platform that we will be installing.\nFor man", "step_imgs": ["https://cdn.instructables.com/F2L/XBM0/JR6ODXC6/F2LXBM0JR6ODXC6.LARGE.jpg", "https://cdn.instructables.com/F0F/FUOX/JR6ODX7Q/F0FFUOXJR6ODX7Q.LARGE.jpg", "https://cdn.instructables.com/FOE/B3JL/JR6ODXFH/FOEB3JLJR6ODXFH.LARGE.jpg", "https://cdn.instructables.com/F3F/9ZTY/JR6ODXKC/F3F9ZTYJR6ODXKC.LARGE.jpg", "https://cdn.instructables.com/FTG/JD1D/JR6ODXO5/FTGJD1DJR6ODXO5.LARGE.jpg", "https://cdn.instructables.com/FUD/7AHD/JR6ODXPM/FUD7AHDJR6ODXPM.LARGE.jpg", "https://cdn.instructables.com/FT3/8J5L/JR6ODXRX/FT38J5LJR6ODXRX.LARGE.jpg", "https://cdn.instructables.com/F0V/JA56/JR6ODY3P/F0VJA56JR6ODY3P.LARGE.jpg", "https://cdn.instructables.com/FAT/LUOP/JR6ODY1A/FATLUOPJR6ODY1A.LARGE.jpg", "https://cdn.instructables.com/FVL/GGXH/JR6ODXXX/FVLGGXHJR6ODXXX.LARGE.jpg", "https://cdn.instructables.com/FTK/1MKI/JR6ODXUU/FTK1MKIJR6ODXUU.LARGE.jpg", "https://cdn.instructables.com/FWZ/WYR2/JR6ODY5P/FWZWYR2JR6ODY5P.LARGE.jpg", "https://cdn.instructables.com/FSS/4CB7/JR6ODY7K/FSS4CB7JR6ODY7K.LARGE.jpg", "https://cdn.instructables.com/FKS/VUNT/JR6ODY9F/FKSVUNTJR6ODY9F.LARGE.jpg", "https://cdn.instructables.com/F5J/UVY0/JR6ODYF0/F5JUVY0JR6ODYF0.LARGE.jpg", "https://cdn.instructables.com/F16/W24U/JR6ODYCP/F16W24UJR6ODYCP.LARGE.jpg"], "step_title": "Step 5: Making the Main Engraving Platform."}, {"step": 6, "steps_text": "For making the stand for the y axis and creating space between the mechanism and the base I used four spacers that I made by cutting a pen using an blade. The length of the pacers that we need is approx. 25mm which shall be sufficient for creating enough room in between the base and the mechanism.\nNow using m3 screws inserting them from below the acrylic base as shown in the image.\nNow by using some washers at both above and below the mechanism, secure the y axis stepper mechanism by using nuts\nMake sure that the screws are properly secured", "step_imgs": ["https://cdn.instructables.com/F8P/CUD6/JR6ODU4B/F8PCUD6JR6ODU4B.LARGE.jpg", "https://cdn.instructables.com/FHT/5OMM/JR6ODU65/FHT5OMMJR6ODU65.LARGE.jpg", "https://cdn.instructables.com/F2Z/UZ5S/JR6ODUA8/F2ZUZ5SJR6ODUA8.LARGE.jpg", "https://cdn.instructables.com/F0B/81PM/JR6ODUEB/F0B81PMJR6ODUEB.LARGE.jpg", "https://cdn.instructables.com/FV1/D8BR/JR6ODUVN/FV1D8BRJR6ODUVN.LARGE.jpg", "https://cdn.instructables.com/FVY/SI68/JR6ODUOR/FVYSI68JR6ODUOR.LARGE.jpg", "https://cdn.instructables.com/FBP/5FZ0/JR6ODUL8/FBP5FZ0JR6ODUL8.LARGE.jpg", "https://cdn.instructables.com/FFU/0UQF/JR6ODUH5/FFU0UQFJR6ODUH5.LARGE.jpg"], "step_title": "Step 6: Making the Structure for the Y Axis."}, {"step": 7, "steps_text": "After makong a study bas for the y axis, it's now turn to make a mains for the X Axis.\nFor making the structure for the X Axis i am using sheet metal of 1.5 mm thickness. The material is stainless steel.\nYou can get it in cheap from scrap.\nYou can also use other materials like aluminium angles etc. its upto you whatever resources may be the best available to you.\nFor making the stand we will require two prices from this steel sheet of width 30 mm each. So by using storable measuring device we will mark the lines.\nAfter this we will need to bend this at 90\u00b0 at a distance of 80 mm for both the steel strips.\nNow all that is required is to cut these strips and bend it at 90\u00b0\nFor cutting the strips you may require some tools so of you have a workshop that'll be good else you can take help from someone that owns a workshop.\nAfter cutting make sure the steel sheet sides are properly finished making sure it doesn't hurt anyone.\nFor bending the strips you may catch the workpiece in a table vise and the by using a hammer you can bend it really at 90\u00b0\nJust check whether the bend is exactly 90\u00b0or not by using a set square.\nAn improper bend will only increase your work so this process should be perfect.", "step_imgs": ["https://cdn.instructables.com/FLV/L1BC/JR6ODV1K/FLVL1BCJR6ODV1K.LARGE.jpg", "https://cdn.instructables.com/FX4/ADR3/JR6ODUXU/FX4ADR3JR6ODUXU.LARGE.jpg", "https://cdn.instructables.com/FIK/JD4T/JR6ODV9L/FIKJD4TJR6ODV9L.LARGE.jpg", "https://cdn.instructables.com/FLH/2YZZ/JR6ODV6G/FLH2YZZJR6ODV6G.LARGE.jpg", "https://cdn.instructables.com/FOE/XGGX/JR6ODVG5/FOEXGGXJR6ODVG5.LARGE.jpg", "https://cdn.instructables.com/FKT/JH2E/JR6ODVEJ/FKTJH2EJR6ODVEJ.LARGE.jpg", "https://cdn.instructables.com/FNV/MOG7/JR6ODVBC/FNVMOG7JR6ODVBC.LARGE.jpg", "https://cdn.instructables.com/FFT/OMVP/JR6ODVM3/FFTOMVPJR6ODVM3.LARGE.jpg", "https://cdn.instructables.com/FG3/17DK/JR6ODVJK/FG317DKJR6ODVJK.LARGE.jpg", "https://cdn.instructables.com/FQ5/J4MD/JR6ODVNM/FQ5J4MDJR6ODVNM.LARGE.jpg", "https://cdn.instructables.com/FM6/MIFX/JR6ODVOS/FM6MIFXJR6ODVOS.LARGE.jpg", "https://cdn.instructables.com/FYQ/IKFO/JR6ODVPK/FYQIKFOJR6ODVPK.LARGE.jpg", "https://cdn.instructables.com/FGM/BEY3/JR6ODVSC/FGMBEY3JR6ODVSC.LARGE.jpg", "https://cdn.instructables.com/FKH/KOD0/JR6ODW5X/FKHKOD0JR6ODW5X.LARGE.jpg", "https://cdn.instructables.com/FQF/Q4GG/JR6ODW1Q/FQFQ4GGJR6ODW1Q.LARGE.jpg", "https://cdn.instructables.com/FOQ/K42H/JR6ODVZC/FOQK42HJR6ODVZC.LARGE.jpg", "https://cdn.instructables.com/FIH/5W42/JR6ODVWM/FIH5W42JR6ODVWM.LARGE.jpg"], "step_title": "Step 7: Making the Structure for the X Axis."}, {"step": 8, "steps_text": "Here comes the most important part of the project.\nFor running the machine we will need a power supply of 12v 2 - 2.5 Amps.\nWe need to setup the Arduino Nano and 2 A4988 drivers on the CNC GRBL shield v4 in the correct manner as shown in the image.\nIf the alignment is improper and supply is given it may damage the stepper drivers or the microcontroller.\nAfter proper alignment of the drivers and the Nano we need to hook it up with the power supply and the pc and test whether the axis is moving in the respective direction or not.\nIn my case when I tried the shield wasn't responding to my commands from the laser GRBL software.\nThen I checked the connections on the shield with reference to the circuit diagram that I found on the internet.\nNOTE - There was a manufacturing defect with my shield. For rectifying I tried the same thing with my friends shield and found that he too has the same problem. So I again soldered the step and direction pins of the A4988 of the X and the Y axis respectively.\nAfter soldering the step and directions pins again I was able to run the x and the y axis perfectly.", "step_imgs": ["https://cdn.instructables.com/FZI/3XNO/JR6ODWBR/FZI3XNOJR6ODWBR.LARGE.jpg", "https://cdn.instructables.com/F6F/JSOI/JR6ODYMP/F6FJSOIJR6ODYMP.LARGE.jpg", "https://cdn.instructables.com/FIN/R2MB/JR6ODYIX/FINR2MBJR6ODYIX.LARGE.jpg", "https://cdn.instructables.com/FKI/7QH7/JR6ODX3Y/FKI7QH7JR6ODX3Y.LARGE.jpg", "https://cdn.instructables.com/FG5/MT7J/JR6ODX3F/FG5MT7JJR6ODX3F.LARGE.jpg", "https://cdn.instructables.com/FQY/HVVR/JR6ODX3E/FQYHVVRJR6ODX3E.LARGE.jpg", "https://cdn.instructables.com/FVF/VN8H/JR6ODX28/FVFVN8HJR6ODX28.LARGE.jpg", "https://cdn.instructables.com/FOL/E8ZB/JR6ODX1K/FOLE8ZBJR6ODX1K.LARGE.jpg", "https://cdn.instructables.com/FQJ/TF89/JR6ODWZN/FQJTF89JR6ODWZN.LARGE.jpg", "https://cdn.instructables.com/FVZ/2VL1/JR6ODWX8/FVZ2VL1JR6ODWX8.LARGE.jpg", "https://cdn.instructables.com/F77/JT8C/JR6ODWTG/F77JT8CJR6ODWTG.LARGE.jpg", "https://cdn.instructables.com/F8P/HX5M/JR6ODWSS/F8PHX5MJR6ODWSS.LARGE.jpg", "https://cdn.instructables.com/FCP/09BA/JR6ODWQO/FCP09BAJR6ODWQO.LARGE.jpg", "https://cdn.instructables.com/FSW/PSM9/JR6ODWMV/FSWPSM9JR6ODWMV.LARGE.jpg", "https://cdn.instructables.com/FOC/YM85/JR6ODWJW/FOCYM85JR6ODWJW.LARGE.jpg", "https://cdn.instructables.com/FMW/5WL8/JR6ODWIG/FMW5WL8JR6ODWIG.LARGE.jpg"], "step_title": "Step 8: The Electronics."}, {"step": 9, "steps_text": "The laser is switched by using an n channel mosfet Irfz44.\nThe digital pin 11 of the arduino Nano is connected to the Gate of the mosfet by using the resistors shown in the schematics.\nThe laser works with 5 volts so an LM7805 voltage regulator is used to provide the supply.", "step_imgs": ["https://cdn.instructables.com/F5O/FEMB/JT91MSQA/F5OFEMBJT91MSQA.LARGE.jpg"], "step_title": "Step 9: Schematic for Laser Switching Circuit."}, {"step": 10, "steps_text": "For making the structure sturdy we need to add some rubber pads.\nFor the rubber pads I am using a 3.5 mm thick sheet of silicon rubber and cutting four of the circular rubber pads of diameter 20mm.\nNow we need to attach these rubber pads to the base of our machine. For adhering this to the base we will be using synthetic rubber adhesive FEVIBOND.\nAdhesive should be attached on both the surfaces evenly. After apply the adhesive stick the rubber pad to the base an let it dry for at least 30 minutes.\nAdding these pads is not necessary but it shall help when the machine is placed on rough surfaces.\nAlso this will protect the acrylic base from scratching.", "step_imgs": ["https://cdn.instructables.com/FCE/EWZ1/JRV8DQLX/FCEEWZ1JRV8DQLX.LARGE.jpg", "https://cdn.instructables.com/FAU/OM3K/JRV8DQLV/FAUOM3KJRV8DQLV.LARGE.jpg", "https://cdn.instructables.com/FJZ/2CIA/JRV8DQLY/FJZ2CIAJRV8DQLY.LARGE.jpg", "https://cdn.instructables.com/FWC/1AZU/JRV8DQM0/FWC1AZUJRV8DQM0.LARGE.jpg", "https://cdn.instructables.com/FYQ/ZYL1/JRV8DQM1/FYQZYL1JRV8DQM1.LARGE.jpg", "https://cdn.instructables.com/FKA/EYFB/JRV8DQM5/FKAEYFBJRV8DQM5.LARGE.jpg", "https://cdn.instructables.com/F08/GYT1/JRV8DQM6/F08GYT1JRV8DQM6.LARGE.jpg", "https://cdn.instructables.com/FLR/RDAL/JRV8DQM7/FLRRDALJRV8DQM7.LARGE.jpg"], "step_title": "Step 10: Adding Rubber Feets to the Base."}, {"step": 11, "steps_text": "For calibrating any machine that involves stepper motors require some calculations. These calculations are different for different stepper motors.\nSo you need to calculate for your stepper motor.\nSteps/mm = Steps/Revolution * (micro stepping of the a4988)\nSteps/Revolution = 360/Step angle\nFor my stepper motors, Steps/ Rev = 192\nTherefore, Step/mm = 192 * 1/16 = 12 Steps/mm.\nNow this values can be added in the grbl settings of the laser grbl software.", "step_imgs": ["https://cdn.instructables.com/F3Z/VN7B/JRGOONNB/F3ZVN7BJRGOONNB.LARGE.jpg"], "step_title": "Step 11: Stepper Motor Calibration and Steps/mm Calculation."}, {"step": 12, "steps_text": "UPLOADING GRBL TO THE ARDUINO -\nFor making this machine run we need to upload the grbl library to the Arduino .\nYou can download the files from this link.\nhttps://github.com/grbl/grbl\nAfter downloading you need to extract the file.\nAfter extracting you need to place the folder in the following location- Program files->Arduino->Libraries. Paste it in this location.\nNow open the Arduino ide and connect the Arduino nano and select the correct port. Now include the grbl library and the upload it to the Arduino.\nSETTING UP THE LASERGRBL SOFTWARE-\nOpen the LASERGRBL software and connect the Arduino to the pc.\nMake sure you select the correct baud rate 11500.\nNow supply the circuit with the 12v 2.5 Amps. After giving the power supply both the stepper motors should be locked and should not be free.\nNow click on the connect button.\nNow Click on file>Open file>Select the file that you want to engrave>Click on OK.\nNow you ncan set the image as per your needs. In my case I am using vectorize the image and using none of the filling.", "step_imgs": ["https://cdn.instructables.com/F8Z/VZ8R/JSYZET9L/F8ZVZ8RJSYZET9L.LARGE.jpg", "https://cdn.instructables.com/FVI/7VT3/JSYZET92/FVI7VT3JSYZET92.LARGE.jpg", "https://cdn.instructables.com/FRQ/ZNGY/JSYZET8J/FRQZNGYJSYZET8J.LARGE.jpg", "https://cdn.instructables.com/FRO/QCB0/JSYZET7I/FROQCB0JSYZET7I.LARGE.jpg", "https://cdn.instructables.com/F6X/MZN6/JSYZET5T/F6XMZN6JSYZET5T.LARGE.jpg"], "step_title": "Step 12: Uploading GRBL Library and Setting Up Laser GRBL."}, {"step": 13, "steps_text": "Now we need to mount the laser on the x axis by using some hot glue.\nNow we need to keep a work piece under the laser on the y platform that we created earlier.\nNow we slowly try to rotate the lens of the laser and try to make it a more focused beam.\nMake sure that the point of the laser beam should be as small as possible.\nOnce the beam of the laser is focused enough to burn the work piece you should be able to see some smoke that assure that the work piece has started burning.\nI have uploaded a video of how to do this if you are not sure.\nOnce this step is done we finally start engraving whatever we want.\nFor engraving the first time I am using the images of some simple geometric shapes that will show us the accuracy of the machine.\nAfter some more engraving and tweaking the system little by little I finally got some clean and accurate results.", "step_imgs": ["https://cdn.instructables.com/FOE/I09M/JRGOONNE/FOEI09MJRGOONNE.LARGE.jpg", "https://cdn.instructables.com/FIC/JNTL/JRGOONN5/FICJNTLJRGOONN5.LARGE.jpg"], "step_title": "Step 13: Focusing the Laser and Beggining to Engrave."}, {"step": 14, "steps_text": "Cardboard.\nHardboard.\nMDF.\nWood.\nWeaker plastics.\nMaterials that can be cut.\nPaper.\nVinyl stickers.", "step_imgs": ["https://cdn.instructables.com/F4M/XCSD/JRGOONNC/F4MXCSDJRGOONNC.LARGE.jpg", "https://cdn.instructables.com/F47/T73O/JRGOONNF/F47T73OJRGOONNF.LARGE.jpg"], "step_title": "Step 14: Materials That Can Be Engraved."}, {"step": 15, "steps_text": "Here are a few engraving video timelapses for you!", "step_imgs": [], "step_title": "Step 15: Engraving Videos."}], "channel": "Arduino"}, {"category": "Technology", "description": "I built a box for my friend's bar that has a Raspberry Pi inside and with the push of one button it streams audio to a website using Darkice and Icecast, while simultaneously lighting an 'On-Air' sign. I thought this was something people were already doing but after extensive searching I found nothing and decided to figure it out for myself and make this Instructable.\nI used a Raspberry Pi 3+ B but as far as I can tell it would work on any Pi (perhaps the GPIO pin numbers would vary, I cannot attest to that though). I used the NOOBS package for the OS and bought a super simple soundcard for the input. I also added a safe shut-down button and activity LED to the box to protect the Pi.\nYou will need:\nRaspberry Pi\nNOOBS package on an SD card\nOn/Off switch (I used a big red emergency stop button like this, but it can be any kind of 'click' switch)\nPush Button\n1 LED\nAn 'On-Air' sign, I made my own with an LED array\nSoldering iron and small connector-board (I just cut a strip off one of these that I had around)\nSoundcard (I used a super-simple one like this)", "title": "One-button Radio Streaming Box", "url": "https://www.instructables.com/id/One-button-Radio-Streaming-Box/", "steps": [{"step": 1, "steps_text": "For the actual radio station we're using I didn't do this part as I didn't have access to the server and my friend did it, but there is a basic set-up guide on the Icecast website and I managed to get it working from the Pi in the beginning just to see how it goes. Alternatively you can get an account at internet-radio.com and it works with Darkice.", "step_imgs": [], "step_title": "Step 1: Set-up Your Server"}, {"step": 2, "steps_text": "Obtain an SD Card with the NOOBS package. Once you have opened Raspbian and installed all of the updates open a Terminal window and type:\nsudo apt-get update\nsudo apt-get install darkice\nDarkice is part of Debian so it will install automatically, it takes a few moments.\nOnce it is finished at the prompt type:\ndarkice\nIt will give an error message and not run, but that's ok. In the message it will say something like:\nUsing config file: /etc/darkice.cfg\nYou need to edit that file, so at the prompt type:\nsudo nano /etc/darkice.cfg\nEdit the file that opens using the information on this wiki.Radioreference page, when you are finished press CTRL-X to close, Y to save and you should return to the Terminal prompt. It's always good to reboot after installing a new programme so type:\nreboot\nand when the Pi has restarted re-open a Terminal window. Now when you type 'Darkice' it should run without any error messages. If you go to https://YOURSERVERADDRESS:8000/ (8000 or whichever port your icecast server is assigned to) you should get a statistics page saying you're connected. If not, tweak the config file (the audio input line gave me some problems but I tried all the options and eventually found my soundcard). Once Darkice is running properly move on to the next step.", "step_imgs": [], "step_title": "Step 2: Set-up the Pi and Install Darkice"}, {"step": 3, "steps_text": "I did a bunch of different tutorials for this as there was no specific one for assigning an action to a button in Python. The biggest problem I faced was getting Darkice to run in the background (and thus not freeze the Python script when it started running) but I asked a coder friend to come and help and he figured out a way to do it writing sheets, something I don't get. Apparently it could also be possible using an '&' somewhere in the code but I'm no coder and what I have works so I chose not to mess with it. Once I had everything working I started whittling down all of the cables from the breadboard until I was left with the following set-up:\nGPIO16 to an external 3-point connector.\nGPIO7 to the positive terminal of the LED array for the ON-Air sign.\nGPIO25 to the click-switch.\nThe other side of the click-switch attaches to the 3-point connector.\nThe negative terminal of the LED array also attaches to the 3-point connector.\n(The other components on the diagram are explained in the next step).\nThe Python script that we ended up with is as follows (please note this is an Instructable for the whole project, I don't really know enough to explain the code. I pieced it together from various other tutorials for different functions):\nimport time<br>import os\nimport RPi.GPIO as GPIO\nGPIO.setwarnings(False)\nGPIO.setmode(GPIO.BOARD)\nledPin = 12\nbuttonPin = 16\nGPIO.setup(ledPin, GPIO.OUT)\nGPIO.setup(buttonPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)\ntoggle = False\ndef start_darkice():\n    print('calling subprocess')\n    #result = subprocess.call('sh screen -S darkice -d -m darkice')\n    os.system('screen -S darkice -d -m darkice')\n    print('resuming')\n    \ndef stop_darkice():\n    os.system('screen -X -S darkice quit')\nwhile True:\n    buttonState = GPIO.input(buttonPin)\n    if buttonState == True:\n        if not toggle:\n            toggle = True\n            print('turning on darkice')\n            start_darkice()\n        #print ('BUTTON STATE TRUE')\n        GPIO.output(ledPin, GPIO.HIGH)\n    else:\n        if toggle:\n            toggle = False\n            print('stopping darkice')\n            stop_darkice()\n        #print ('BUTTON STATE FALSE')\n        GPIO.output(ledPin, GPIO.LOW)\n    time.sleep(1)\nThe py file is attached to this Instructible, you can just download it and follow Step 5 if you like.", "step_imgs": ["https://cdn.instructables.com/FXW/4MSK/JQWT43HH/FXW4MSKJQWT43HH.LARGE.jpg"], "step_title": "Step 3: Stream Button and On-Air Sign"}, {"step": 4, "steps_text": "Just for safety and to prolong the life of the Pi I added a safe shutdown button and an external activity LED so people know when it's safe to unplug the box. I easily found tutorials for both of these, but I did notice that the Raspberry Pi 3 B+ has an ACT LED assigned GPIO pin while earlier models don't and that could be problematic if you have an older Pi.\nAttach the positive terminal of the LED to GPIO13 and the negative to GPIO26. For the ACT LED to work you need to edit the config.txt file in the BOOT directory. You can find this in the Raspbian browser or with:\nsudo nano /usr/boot/config.txt\nWhen you are editing the file simply add the following lines:\n# Use external LED as SD ACT LED <br>dtoverlay=pi3-act-led,gpio=19\nNow the external LED wil flicker with SD card activity.\nAttach the push switch terminals to GPIO3 and GPIO8. I found the following code from a tutorial and it works fine:\nimport time<br>from gpiozero import Button\nfrom subprocess import check_call\nfrom signal import pause\ndef shutdown():\n    check_call(['sudo', 'poweroff'])\nshutdown_btn = Button(2, hold_time=1)\nshutdown_btn.when_held = shutdown\npause()\ntime.sleep(1)\nThis py file is also attached for you to download if you want to. My button has to be held for 1 second, if you want to change that change the 'hold-time=' value.", "step_imgs": ["https://cdn.instructables.com/FN7/FCGY/JQWT43HL/FN7FCGYJQWT43HL.LARGE.jpg"], "step_title": "Step 4: Safe Shutdown Button and Activity LED"}, {"step": 5, "steps_text": "Again, there are a lot of tutorials on this subject, I used this one from Dexter Industries and followed step one by editing the rc.local file.\nsudo nano /etc/rc.local\nIn here you need to add the complete file-path to the end of the document, complete with an '&' at the end of each line. You should add one line for each of the files:\nsudo python /home/pi/YOURFILENAME,py &\nsudo python /home/pi/YOURFILENAME2.py &\njust before the line\nexit 0 \nThe '&' at the end of each line is important to ensure the programme loops.", "step_imgs": [], "step_title": "Step 5: Make the Python Scripts Run From Boot"}, {"step": 6, "steps_text": "This is entirely up to you. It really only needs to be the size of the Pi, but I put a compressor in my set-up to keep the radio stream at a fairly consistent level so the box is a bit larger. Mine has a hole on the front for the On-Air sign and one for the Big Red Button, plus I made a little instruction card for the DJs and inlaid it below the button. On the side of the box there's a hole for the push button, the ACT LED and the audio-input, plus inlaid instructions for the bar staff on how to safely shut-down the box.", "step_imgs": ["https://cdn.instructables.com/FG7/OK5I/JQWT43HN/FG7OK5IJQWT43HN.LARGE.jpg", "https://cdn.instructables.com/FGE/1Q46/JR0YOTCN/FGE1Q46JR0YOTCN.LARGE.jpg", "https://cdn.instructables.com/FTZ/P3HA/JR0YOTBN/FTZP3HAJR0YOTBN.LARGE.jpg"], "step_title": "Step 6: Build the Box"}, {"step": 7, "steps_text": "Fix all the separate components into your box, bearing in mind it's always good to allow some air circulation around the Pi to prevent overheating. Attach the audio cables from your mixer, hit the button and enjoy broadcasting!", "step_imgs": ["https://cdn.instructables.com/F9Q/YD98/JR0YOT2I/F9QYD98JR0YOT2I.LARGE.jpg", "https://cdn.instructables.com/FBW/MFLC/JR0YOT6E/FBWMFLCJR0YOT6E.LARGE.jpg", "https://cdn.instructables.com/FIL/FQUL/JR0YOT9C/FILFQULJR0YOT9C.LARGE.jpg", "https://cdn.instructables.com/F95/GU26/JR0YOTFC/F95GU26JR0YOTFC.LARGE.jpg"], "step_title": "Step 7: Installation"}], "channel": "Raspberry-pi"}, {"category": "Technology", "description": "Howdy, i'm Dave from Parts and Restoration and today, were gonna fully restore an old band saw! LETS GET TO IT!!", "title": "How to Restore a Band Saw", "url": "https://www.instructables.com/id/How-to-Restore-a-Band-Saw/", "steps": [{"step": 1, "steps_text": "To restore a band saw, you first need a band saw worth restoring! Chances are, sombody in a 10 mile radius of you is selling one! Keep an eye to Facebook Marketplace, LetGo, Craigslist, and eBay. Also, machinery auctions (bidspotter.com) and estate sales (auctionzip.com) are great places to find quality used machinery!\nThings to look for:\n-CAST IRON! Old machines were built well! They were made with heavy castings that cut down on vibration and flexibility! Old castings are smooth, they were cast in clay, modern castings are made with sand and are rough. avoid modern\n-Big Heavy Table - Also cast iron, you want the band saw table to be ground flat and made of cast iron. For me, a band saw with a stamped or light weight table is trash.\n-Signs of AGE - If its made primarily with plastic, avoid it. Get something made well back when old tools were made with the workman in mind, not with SHAREHOLDERS in mind!", "step_imgs": ["https://cdn.instructables.com/FT9/DUAT/JSYZ8WOS/FT9DUATJSYZ8WOS.LARGE.jpg", "https://cdn.instructables.com/F5C/64FJ/JSYZ8WPZ/F5C64FJJSYZ8WPZ.LARGE.jpg", "https://cdn.instructables.com/F08/BBV6/JSYZ8WS2/F08BBV6JSYZ8WS2.LARGE.jpg"], "step_title": "Step 1: ACQUIRE a BAND SAW"}, {"step": 2, "steps_text": "This is the fun part! Its gonna get dirty so do this somewhere like a garage or outside. Band saws hold TONS of sawdust inside their wheel guards. If you are lucky enough to find a band saw with a metal cutting gear reduction, you will find TONS of oil and grease inside too!\n*VERY IMPORTANT* I would highly recommend video taping yourself disassembling your machine with your cell phones camera. This will come in handy later when you cant remember where some random grub screw was supposed to go!\nKeep your parts organized! Keep parts from each sub assembly in a separate box or container. You don't want your screws getting mixed up! Take photos of complicated parts before you disassemble them so you know what they looked like before you started fiddling with them.\nMagnetic parts holders are great for keeping track of small screws and parts as long as they are ferrous metals (steel).", "step_imgs": ["https://cdn.instructables.com/FM7/A3EX/JSYZ8W8L/FM7A3EXJSYZ8W8L.LARGE.jpg", "https://cdn.instructables.com/FW9/V9F8/JSYZ8XI5/FW9V9F8JSYZ8XI5.LARGE.jpg", "https://cdn.instructables.com/FQE/O27C/JSYZ8XLM/FQEO27CJSYZ8XLM.LARGE.jpg", "https://cdn.instructables.com/FYZ/1S02/JSYZ8XOP/FYZ1S02JSYZ8XOP.LARGE.jpg", "https://cdn.instructables.com/FWC/0V5C/JSYZ8WPT/FWC0V5CJSYZ8WPT.LARGE.jpg", "https://cdn.instructables.com/FK5/ACII/JSYZ8WR6/FK5ACIIJSYZ8WR6.LARGE.jpg", "https://cdn.instructables.com/F09/WYOG/JSYZ8WOP/F09WYOGJSYZ8WOP.LARGE.jpg"], "step_title": "Step 2: Take Your Machine Apart!"}, {"step": 3, "steps_text": "Chances are, an old machine may be missing parts or have broken pieces from its years of service. Check out www.vintagemachinery.org and search for your band saw by manufacturer to find reprinted PDF manuals and parts lists of common old machines. Ebay is a good source for replacement parts (though they are expensive) and local used machinery dealers may have parts for vintage machinery in stock.\nBand saws have some consumable parts in them as well. Check the following:\nBandsaw Tires - The rubber \"tires\" are the surface of the wheel the saw blade rides on. The old rubber tires may be dry rotted and if so, consider replacing them\nBearings - The wheels have bearings pressed into them. Additionally, bandsaws use ball bearings to help guide the saw blade as well. If they dont spin freely, now is the time to replace them. Industrial suppliers like Granger and local Bearing Distributors can help you replace your bearings if you bring them the originals\nBlade Blocks - The band saw blade is guided by metal \"blade blocks\" that keep the blade straight while you cut. These wear out. A modern blade block called \"Cool Blocks\" are made of a fiberous material and they are excellent!\nThe Motor - How does it sound? Does the shaft and pulley spin freely? Its it under powered (some old machines often didnt come with a motor, the buyer supplied whatever motor he had, or could afford)\nThe Blade - Buy some new blades!", "step_imgs": ["https://cdn.instructables.com/F8D/FLSY/JSYZ8ZK5/F8DFLSYJSYZ8ZK5.LARGE.jpg", "https://cdn.instructables.com/FKY/C8ZU/JSYZ8XI3/FKYC8ZUJSYZ8XI3.LARGE.jpg", "https://cdn.instructables.com/FSC/VJ8T/JSYZ935F/FSCVJ8TJSYZ935F.LARGE.jpg", "https://cdn.instructables.com/F52/GRUU/JSYZ8ZPG/F52GRUUJSYZ8ZPG.LARGE.jpg"], "step_title": "Step 3: Determine What Needs to Be Replaced"}, {"step": 4, "steps_text": "Time to strap on some kitchen gloves and get dirty!\nFirst things first, safety. PPE (personal protective equipment) it essential! Protect you eyes with ANZI approved safety glasses and consider lab style goggles if splash is a concern. Wear gloves when using chemicals. Hospital style gloves are great, and wear chemical resistant gloves when using paint stripper. Respiratory protection is important when sanding or other processes that create dust. PROTECT YOUR BODY!\nStep 1. Remove DRY Dirt and Debris First!\nBand saws hold TONS of saw dust inside the wheel guards. Be sure to remove all the dry debris out of the machine first before applying any wet cleaning chemicals. Vacuums or air blowers are great ways to remove this stuff. If you don't have a good shop vac or a compressor air gun, PC duster works well too.\nStep 2. Cleaning and De-greasing:\nI am a huge fan of Krud Kutter for degreasing old machinery although any de greaser will work! Spray on your de greaser and use scrub brushes to work it down into the surfaces. Large faced brushes work well for open, flat surfaces and small brushes (old toothbrushs work great) are excellent for complicated surfaces to get into the nooks and crannys. This step can take a while!\nFor large parts, especially really nasty ones, put the part in a big plastic tote and pour some de greaser in the bottom and scrub away!\nFor small parts, place them in a jar or pot of de greaser and allow them to soak. Later, scrub them clean with a small brush.\n\nOnce each part is clean de greased, wipe them with warm water to get the de greaser off and pat dry.", "step_imgs": ["https://cdn.instructables.com/F97/EISJ/JSYZ8XLO/F97EISJJSYZ8XLO.LARGE.jpg", "https://cdn.instructables.com/FRE/INRH/JSYZ8XOB/FREINRHJSYZ8XOB.LARGE.jpg", "https://cdn.instructables.com/FMG/6UFC/JSYZ8XI4/FMG6UFCJSYZ8XI4.LARGE.jpg", "https://cdn.instructables.com/FNZ/YS8N/JSYZ8XP6/FNZYS8NJSYZ8XP6.LARGE.jpg", "https://cdn.instructables.com/FR4/85YC/JSYZ93U7/FR485YCJSYZ93U7.LARGE.jpg"], "step_title": "Step 4: CLEAN EVERYTHING"}, {"step": 5, "steps_text": "Right now, you should be staring at a huge pile of squeaky clean cast and machined band saw parts. Years of cigarette tar, saw dust, oil, grease and dirt are a distant memory. Now is the time to ask yourself a few questions. How do your parts look? Are they rusty? Is the paint flaking? Do repairs need to be made? Do you like the color?\nIf your machine was just dirty, but is in great shape, skip ahead to Step 9 - Reassembly.\nHere are my thoughts. You've come this far. If the machine was in great shape, you probably wouldn't be reading this instructable!\nIf the paint is flaking, repaint.\nIf you hate the color OR would like your saw to match other machinery in your shop, paint it!\nIf some jerk painted it a stupid color years ago, Paint it!\nOver all, if your gonna restore a machine, PAINT IT!", "step_imgs": [], "step_title": "Step 5: To Repaint or Not to Repaint?"}, {"step": 6, "steps_text": "Uh oh! Time to bust out the nastiest chemical in the shop, paint stripper! I prefer Jasco brand paint stripping gel.\nMove your parts to a well ventilated area and don your PPE. Minimum requirement for this job are lab goggles, closed toed shoes (yes I wore shop flops for my restoration and it was dumb!), long sleeves and long pants, and chemical resistant gloves. Get a bowl to pour some stripping gel into and a paint brush. Apply a thick coat of stripper to the surfaces. The paint should quickly absorb the stripper and begin to wrinkle. When, after a minute or so, I see dry spots forming where I applied stripper, I apply some more. Let the stripper work for 15-20 minutes or as directed. Using a metal scraper, scrape away the old paint and discard of it right away, it should scrape up easily. Do this until the bulk of the paint is gone. Use chem resistant plastic brushes to scrub away the remaining paint. Remove any remaining stripper with paper towels. Repeat as necessary until all the paint is gone.\nTo fully remove the stripper, apply denatured alcohol or acetone to the surfaces and wipe clean. Repeat this until your paper towels are coming up clean.\nCongratulations! You are the first person to see this machine in the raw in probably 60 years or whenever it was making its way down the production line!", "step_imgs": ["https://cdn.instructables.com/FZQ/LFHR/JSYZ8XOC/FZQLFHRJSYZ8XOC.LARGE.jpg", "https://cdn.instructables.com/F4F/7RSA/JSYZ94EH/F4F7RSAJSYZ94EH.LARGE.jpg", "https://cdn.instructables.com/FQ7/Z53X/JSYZ94L4/FQ7Z53XJSYZ94L4.LARGE.jpg", "https://cdn.instructables.com/FC1/1EWU/JSYZ94SZ/FC11EWUJSYZ94SZ.LARGE.jpg", "https://cdn.instructables.com/FB3/DFG0/JSYZ94YH/FB3DFG0JSYZ94YH.LARGE.jpg", "https://cdn.instructables.com/FG6/HLZC/JSYZ95R9/FG6HLZCJSYZ95R9.LARGE.jpg"], "step_title": "Step 6: Strip the Old Paint"}, {"step": 7, "steps_text": "Now that we are down to bare metal, lets get the rust (if any) off! Your options are to use mechanical abrasive methods (best for large parts) or chemical methods (limited to smaller parts usually). For a run down on mechanical rust removal, check out my down and dirty rust removal video\nFor small parts, there are some great chemical options! Evapo-Rust is an inexpensive and safe rust removal chemical. You soak your rusty parts in a cup of Evapo-Rust and take it out a few hours later. The rust is gone and a black oxide coating is left in its place that can be brushed to a shine with a wire brush or wheel.\nFor large parts like castings, I recommend using a wire wheel on a grinder (angle or bench) to remove the rust. Sand paper is an effective alternative if you don't own a grinder. Additionally, Evapo-Rust Gel can be painted onto large parts to chemically remove rust without submersion.", "step_imgs": ["https://cdn.instructables.com/F46/O3T5/JSYZ98XJ/F46O3T5JSYZ98XJ.LARGE.jpg", "https://cdn.instructables.com/FET/YKQ5/JSYZ9A2A/FETYKQ5JSYZ9A2A.LARGE.jpg", "https://cdn.instructables.com/FHA/NJVB/JSYZ9ACK/FHANJVBJSYZ9ACK.LARGE.jpg"], "step_title": "Step 7: Rust Removal"}, {"step": 8, "steps_text": "To allow the paint to adhere properly to bare metal, you need to apply primer to your parts.\nStep 1. Before applying any primer, be sure to prepare the clean metal surfaces for priming. Wear clean latex hospital gloves and wipe each part of your machine down with acetone. This will remove any oils from the surfaces prior to primer application.\nStep 2. Once the surfaces are clean and oil free, use masking tape to cover up any parts you don't want painted. Some examples are the table top, holes for bearings, any mating surfaces, any machined surfaces that will be sliding or bearing on moving parts or places you expect will be oiled or experience wear.\nFor metal that still has rust pits that you cant remove or that is still corroded, use a spray on rust converting primer. This stuff will chemically halt the corrosion and convert it into a paintable surface. For clean bare metal, use a Self Etching primer. I personally like Rustoleum products.\nStep 3. Apply a 2-3 light coats of primer to your parts or follow the instructions on the can.\nStep 4. Once the primer is dry, apply your paint! I recommend using the same brand paint and primer to avoid compatibility issues. I painted my bandsaw with Rustoleum Coastal Grey - Satin.\nBe sure to consider applying a clear coat to your paint to seal the surface and give it a more durable finish.", "step_imgs": ["https://cdn.instructables.com/FQS/Y6PB/JSYZ9BPD/FQSY6PBJSYZ9BPD.LARGE.jpg", "https://cdn.instructables.com/FP7/D1KS/JSYZ9C0B/FP7D1KSJSYZ9C0B.LARGE.jpg", "https://cdn.instructables.com/FY6/U6IJ/JSYZ9CB7/FY6U6IJJSYZ9CB7.LARGE.jpg", "https://cdn.instructables.com/FA3/BCIH/JSYZ9CEH/FA3BCIHJSYZ9CEH.LARGE.jpg", "https://cdn.instructables.com/FB3/CEK0/JSYZ9COP/FB3CEK0JSYZ9COP.LARGE.jpg", "https://cdn.instructables.com/FS9/5VQ2/JSYZ9CPR/FS95VQ2JSYZ9CPR.LARGE.jpg", "https://cdn.instructables.com/FK4/D8J9/JSYZ9CT5/FK4D8J9JSYZ9CT5.LARGE.jpg", "https://cdn.instructables.com/FVA/XVIN/JSYZ9CWK/FVAXVINJSYZ9CWK.LARGE.jpg"], "step_title": "Step 8: Prime and Paint"}, {"step": 9, "steps_text": "Now that everything has received your TLC and been repainted, its time to put your band saw back together!\nHere is where that video you made earlier really comes in handy! Work your way back from the end of your video and try to reinstall parts in reverse order.\nHopefully, you kept all of your parts and hardware organized throughout cleaning and painting. If so, you should have no trouble getting everything back together without having any \"spare parts\" at the end!\nBe sure to lubricate moving parts or places where you expect wear might occur (screw threads, moving parts, parts that touch or slider past each other, etc). Refer to www.vintagemachinery.org to find the manual for your saw!", "step_imgs": ["https://cdn.instructables.com/FZG/G4MG/JSYZ9D63/FZGG4MGJSYZ9D63.LARGE.jpg", "https://cdn.instructables.com/F1P/IU2W/JSYZ9DFI/F1PIU2WJSYZ9DFI.LARGE.jpg", "https://cdn.instructables.com/FPL/G183/JSYZ9D7A/FPLG183JSYZ9D7A.LARGE.jpg", "https://cdn.instructables.com/F90/66FG/JSYZ9D8H/F9066FGJSYZ9D8H.LARGE.jpg", "https://cdn.instructables.com/FKX/9MUS/JSYZ9DBZ/FKX9MUSJSYZ9DBZ.LARGE.jpg", "https://cdn.instructables.com/FC1/M11F/JSYZ9DGS/FC1M11FJSYZ9DGS.LARGE.jpg", "https://cdn.instructables.com/FY8/JKWI/JSYZ9DUU/FY8JKWIJSYZ9DUU.LARGE.jpg", "https://cdn.instructables.com/F8K/0XMB/JSYZ9DR7/F8K0XMBJSYZ9DR7.LARGE.jpg"], "step_title": "Step 9: Reassemble!"}, {"step": 10, "steps_text": "Congratulations!! You just rebuilt a heritage band saw! Most people would have been satisfied with a piece of cheap junk from China, but not you! You know quality when you see it! You're likely exhausted from this journey. It has been a labor of love bringing this old gal back to life. Take a few minutes to relax and find comfort in knowing that this machine, built so carefully decades ago by American hands, WILL outlive you, and thats a good thing! Thanks to your labor, your children and THEIR children will be able to make whatever they desire on this, what is now a family heirloom tool that you cared about enough to restore! We are but custodians of these beautiful iron beasts! I hope this guide was helpful for you, and congratulations again for your hard work!\nBe sure to check out my youtube channel! www.youtube.com/partsrestorationphilly\nCheck out my daily photos of my workshop happenings on Instagram! www.instagram.com/partsandrestoration", "step_imgs": ["https://cdn.instructables.com/FR7/XVO0/JSYZ9EFZ/FR7XVO0JSYZ9EFZ.LARGE.jpg", "https://cdn.instructables.com/FXH/XX04/JSYZ9EJF/FXHXX04JSYZ9EJF.LARGE.jpg", "https://cdn.instructables.com/F5K/2Q9J/JSYZ9EHD/F5K2Q9JJSYZ9EHD.LARGE.jpg", "https://cdn.instructables.com/F7Y/PDVH/JSYZ9EMB/F7YPDVHJSYZ9EMB.LARGE.jpg", "https://cdn.instructables.com/FH0/RHO6/JSYZ9EKU/FH0RHO6JSYZ9EKU.LARGE.jpg", "https://cdn.instructables.com/FFG/R9X7/JSYZ9EQ2/FFGR9X7JSYZ9EQ2.LARGE.jpg"], "step_title": "Step 10: Sit Back and Admire!"}], "channel": "Tools"}, {"category": "Technology", "description": "Just got a 3D printer early this year, Creality Ender 3. It works like a charm out of the box. After one month testing, a friend of mine asking if I could take a printing service job. Well, why not? I am a beginner in 3D modelling, but you can just pick a model from the World Wide Web and I print it for you, yes. All he had to pay is the filament price and coffee (for the time spent on this project).\nTwo hundreds of keychain in various forms which he is using as gifts. There were also many combinations of keychain type in this project that I need to attached and detached the rings and the chains.\nI simply use my nails to attach/detach the rings but hundreds of them? I won't risk the pain on my fingers and nails. Using some other tools like tweezers is handy but doing that hundreds of times I think I would stab into my fingers several times >.< oh.. no...\nThen I built this simple ring to kill all the risks. Yes, I am Lord of the Ring ...", "title": "Simple Keychain Tool", "url": "https://www.instructables.com/id/Simple-Keychain-Tool/", "steps": [{"step": 1, "steps_text": "I designed mine with FreeCAD, complex tools built by enthusiasts for free, but here I will show you how to do it in TinkerCAD which is much simpler and also free.\nCreate a solid cylinder a little larger than your index finger size. Here I make a 24 mm in diameter and the height is 10 mm.\nCreate a hollow cylinder at the size of your index finger and place it in the center of the solid cylinder. This hollow cylinder is the size of the first section of your index finger. Mine is 20 mm so I get a 2 mm wall for the ring and that is strong enough.\nClick on the solid cylinder. By holding the shift key, click on the hollow cylinder so now you are selecting both objects.\nClick on the icon-group at the right top of the page to join the objects as one.", "step_imgs": ["https://cdn.instructables.com/F8J/24JU/JSYZ73MT/F8J24JUJSYZ73MT.LARGE.jpg"], "step_title": "Step 1: The Ring"}, {"step": 2, "steps_text": "Add a rectangle pad on the side of the ring (a solid box), approximately 2 mm pop out from the surface of the ring.", "step_imgs": ["https://cdn.instructables.com/F0C/IZ3G/JSYZ73LA/F0CIZ3GJSYZ73LA.LARGE.jpg"], "step_title": "Step 2: The Pad"}, {"step": 3, "steps_text": "Add a 3 mm x 2 mm x 2 mm hollow rectangle (hollow box) and place it at one side of The Pad as in the picture. This gap is used to hold the chain link or O-ring of keychain.\nSelect The Pad and The Gap (multiple select by holding shift key) and click on the icon-group to join them.\nCreate a solid triangle which is called roof on Tinkercad. Resize and place it horizontally aligned with The Gap. I will call this triangle The Blade. This triangle has a 2 mm wide at its bottom (stick to the pad) and sharp point on its top and this is where we put the ring into open position.\nMultiple select The Blade and The Pad-Gap and click icon-group.\nLastly select The Pad-Gap-Blade and The Ring and click icon-group.", "step_imgs": ["https://cdn.instructables.com/FMA/5A9M/JSYZ73LD/FMA5A9MJSYZ73LD.LARGE.jpg"], "step_title": "Step 3: The Gap and the Blade"}, {"step": 4, "steps_text": "After you get it printed, now what? How to use it?\nPicture #1 : Detaching the chain.\nPut the chain/O-ring on the left of The Gap.\nStab the ring of keychain on The Blade.\nTurn the ring clockwise (according to the picture and my right-handed version :D )\nPicture #2 : Attaching the chain.\nPut the chain/O-ring on the right of The Gap.\nStab the ring on The Blade.\nTurn the ring clockwise (again, my version, right-handed).\nEvery tool needs practices to master. Once you get used to it, you will do it faster and faster and the most important thing is avoiding the pain on your nails. The pointy blade will be worn out but the 2 mm base of The Blade will serve you for long. I make a curvy edges with FreeCAD tool called fillet with Part Module which has the similar simple building tool like TinkerCAD.\nGet it on Thingiverse : thing:3479153.", "step_imgs": ["https://cdn.instructables.com/FIU/G21P/JSYZ73SO/FIUG21PJSYZ73SO.LARGE.jpg", "https://cdn.instructables.com/FQU/4UOZ/JSYZ73RU/FQU4UOZJSYZ73RU.LARGE.jpg"], "step_title": "Step 4: How to Use"}], "channel": "3D Printing"}, {"category": "Technology", "description": "HRV Arduino Controller with Air Economizer\nSo my history with this project is I live in Minnesota and my circuit board fried on my LifeBreath 155Max HRV. I didn't want to pay the $200 for a new one.\nI always wanted something with an air economizer since our springs and falls here are perfect times to take in cool low humidity outside air and condition the house rather than turning on the air conditioner or opening windows. This is where this project fits in.\nI wrote up a detailed description of operation for all the modes, setpoint control, etc can be found here \"HRV Control Narrative.docx\"\nAll source code, photos, wiring schematics and documentation can be found on my GitHub page.", "title": "HRV (Home Air Exchanger) Arduino Controller With Air Economizer", "url": "https://www.instructables.com/id/HRV-Home-Air-Exchanger-Arduino-Controller-With-Air/", "steps": [{"step": 1, "steps_text": "(1) Arduino ESP32 - Used due to the amount of GPIO required for this project. ESP8266 just wasn't enough GPIO.\n(1) 120V to 5V step down power supply - Don't use the cheap power supply PCB's. I went through two other types before I found out that this was the most stable.\n(2) DHT 22 temperature sensors - Inside sensor & Outside Remote Sensor. Measure inside and outside temperature and humidity.\n(1) 0.96\" OLED display for local indication of the mode it is operating and for temp/humidity indication. Be sure you desolder and solder pins so that board is configured for I2C communication. Instructions for SPI and I2C can be found here.\n(1) 8-Channel SSR 5 Volt High Level trigger relay board\n(1) LM1117 Linear Voltage regulator to power ESP32 at 3.3V\n(1) Rotary Encoder KY-040 & Knob used as a push button. Future functionality to include a menu and be able to select modes of operation and control setpoints.\n(1) Enclosure to house the OLED display and encloder. Get the large one. Dimensions are 100mmx68mmx50mm.", "step_imgs": ["https://cdn.instructables.com/FQC/GV0U/JSYZ8EGX/FQCGV0UJSYZ8EGX.LARGE.jpg", "https://cdn.instructables.com/FUU/PZ5E/JSYZ8F2Y/FUUPZ5EJSYZ8F2Y.LARGE.jpg", "https://cdn.instructables.com/FJM/VWS7/JSYZ8F30/FJMVWS7JSYZ8F30.LARGE.jpg", "https://cdn.instructables.com/F4K/UYYG/JSYZ8F31/F4KUYYGJSYZ8F31.LARGE.jpg", "https://cdn.instructables.com/F1Q/W5E5/JSYZ8F32/F1QW5E5JSYZ8F32.LARGE.jpg", "https://cdn.instructables.com/FQZ/826Z/JSYZ8F35/FQZ826ZJSYZ8F35.LARGE.jpg", "https://cdn.instructables.com/FWP/54F2/JSYZ8F36/FWP54F2JSYZ8F36.LARGE.jpg", "https://cdn.instructables.com/FYP/27N0/JSYZ8F37/FYP27N0JSYZ8F37.LARGE.jpg", "https://cdn.instructables.com/FPW/FNAK/JSYZ8F38/FPWFNAKJSYZ8F38.LARGE.jpg"], "step_title": "Step 1: HARDWARE"}, {"step": 2, "steps_text": "The way this HRV is programmed is in 4 modes.\nOff - Self explanatory\nContinuous- On 20 / Off 40 with variable run times.\nHigh Occupancy - 100% blower speed for a timed off delay setpoint. Imagine thanksgiving dinner with 20 guests.\nAir Economizer - When air is cooler and more desirable outside then pull it in to the house. You control the indoor temperature/humidity set points for only when it is safe based on a outdoor/indoor conditions.", "step_imgs": [], "step_title": "Step 2: Principal of Operation"}, {"step": 3, "steps_text": "Blynk App for iOS is used to control and monitor the status of the HRV.\nThe arduino writes the temps, humidity and equipment running status to blynk and reads the setpoints and run commands from the blynk server. All you need to do is sign up for an account and get an auth token. There are plenty of tutorials online how to do this.\nOnce you have your auth token for your project scan this QR code from your phone in the blynk app and it will download the project already configured and ready for your arduino.", "step_imgs": ["https://cdn.instructables.com/FAO/CY7Y/JSYZ8E7H/FAOCY7YJSYZ8E7H.LARGE.jpg", "https://cdn.instructables.com/FN8/2N37/JSYZ8E6O/FN82N37JSYZ8E6O.LARGE.jpg", "https://cdn.instructables.com/F4N/1SAA/JSYZ8E5V/F4N1SAAJSYZ8E5V.LARGE.jpg", "https://cdn.instructables.com/FD3/QMYF/JSYZ85RA/FD3QMYFJSYZ85RA.LARGE.jpg"], "step_title": "Step 3: SOFTWARE"}, {"step": 4, "steps_text": "Source code can be found here.\nSpecial Libraries you need to install:\nBlynk by Volodymyr Shymanskyy (v 0.4.10) -- uses BlynkSimpleEsp32.h for reading and writing data to their iOS app.\nAdafruit SSD1306 by AdaFruit Version 1.1.2 -- uses Adafruit_SSD1306.h, SPI.h & Wire.h for the OLED local display\nArduinoOTA by Ivan Grokhotkov and Miguel Ajo version 1.0.0 -- uses ArduinoOTA.h, mDNS.h, WiFiClient.h & WiFiUdp.h for over the air updates.\nWhen uploading code the successful settings i used are as follows:\nBoard: NodeMCU-32S\nUpload Speed: 512000\nFlash: 40MHz\nNotes:\n1.) Since you are using OTA libraries the serial monitor in the arduino ide will not be supported.", "step_imgs": [], "step_title": "Step 4: ARDUINO CODE"}, {"step": 5, "steps_text": "Unplug the HRV power cord so you are not working on it hot. Take plenty of close up photos as a backup while you are removing wires as you will find them useful later.\nKeypad remove the keypad and ribbon cable from the exterior of the HRV and throw away.\nPCB Disconnect all the ribbon cables to remove the board and throw away.\nAuto-transformer has 6 wires. YOU NEED THIS PART. This is controls the speed of the 120 volt blower motor. Low speed is 73 volts and high speed is 120 volts and taps in between. Clip off the connector wasting as minimal amount of wire length as possible. YOU WILL NEED THE LENGTH!!!. Document the colors now or later. You can use a multi-meter later to pin-out the transformer taps to get the voltage for the fan speeds. See my wiring diagram.\nFan Motor has just two leads that will wire to the new SSR board. 120 volt motor.\nSolenoid for damper has 3 wires (120 volts - Common, Open, Close). Clip the close to connector and will wire to the new SSR board.\nNOTE: If you do not have an auto-transformer type HRV and one of the newer units they use ECM motors then you will need to control the motor differently and my code/wiring will not work for your HRV system.", "step_imgs": ["https://cdn.instructables.com/F0N/PKCQ/JSYZ85RP/F0NPKCQJSYZ85RP.LARGE.jpg", "https://cdn.instructables.com/FG8/N5SX/JSYZ85RW/FG8N5SXJSYZ85RW.LARGE.jpg", "https://cdn.instructables.com/FLG/TP68/JSYZ85RS/FLGTP68JSYZ85RS.LARGE.jpg"], "step_title": "Step 5: Demo"}, {"step": 6, "steps_text": "The wiring diagram can be found here.\nThe general principal is I have all the 120v power inside of the HRV and a ribbon cable connecting to the remote OLED display.\nHRV enclosure contains the 5v power supply, auto transformer (existing), SSR relay board, fuses and breakout board. I used breakout boards for an easy way to disconnect my ribbon cable in case I needed to service anything.\nOLED Enclosure contains the arduino controller, OLED and encoder button.\nAll of these components, pinouts and how the breakout boards are wired are clearly identified on the wiring diagram.", "step_imgs": ["https://cdn.instructables.com/F8M/8HMM/JSYZ85R8/F8M8HMMJSYZ85R8.LARGE.jpg", "https://cdn.instructables.com/FJA/NSU9/JSYZ85Q0/FJANSU9JSYZ85Q0.LARGE.jpg", "https://cdn.instructables.com/FVU/IACX/JSYZ85P9/FVUIACXJSYZ85P9.LARGE.jpg", "https://cdn.instructables.com/FSP/GIT9/JSYZ85Q2/FSPGIT9JSYZ85Q2.LARGE.jpg"], "step_title": "Step 6: Wiring"}, {"step": 7, "steps_text": "I hope this helps. It took me 2 years of on/off time to complete this project just finding the time and initiative to do this project. I hope you enjoyed reading this and perhaps inspired to try this.\nThings I would have done differently or future improvements.\nInclude a weather API in lieu of the outdoor temperature sensor. Right now it has a sampling period that would not be needed. See control description.\nUse the blynk bridging functionality and put the inside temperature transmitter inside the house somewhere. Use a ESP-01 over wifi. Ribbon cables were a mess and would have made project simpler. See the Blynk API documentation on Bridging two devices.\nI wanted to add a menu library to the OLED display. Change setpoints locally and view all the debug information fromm the OLED display. That would have been a time commitment but I still would like to do that some day.\nClean up code a bit. A lot of debug lines still exist but are not hurting anything for operation.", "step_imgs": [], "step_title": "Step 7: Closing"}], "channel": "Arduino"}, {"category": "Technology", "description": "18650 Li-ion cells are a great way to power Projects. Which provides a nominal voltage of 3.7V which is not sufficient for most of the application for let's say you want to power a BLDC motor with an ESC which requires 9V to start. So we need more voltage which can be achieved by connecting them in series. So in this tutorial, I will show you how you can make a 18650 Li-ion Battery Pack with a BMS circuit and all the things you need to know before you built one!", "title": "How to Make a 18650 Li-ion Battery Pack!", "url": "https://www.instructables.com/id/How-to-Make-a-18650-Li-ion-Battery-Pack/", "steps": [{"step": 1, "steps_text": "If you don't want to read all the stuff watch video tutorial I made for you!", "step_imgs": [], "step_title": "Step 1: Watch the Video!"}, {"step": 2, "steps_text": "18650 Li-ion cells - 18650 batteries are used for powering everything from laptop batteries to electric vehicles. It is a standardized type of lithium-ion battery, cylindrical in shape and measuring 18mm in diameter by 65mm in length (give or take a few 1/10s of a millimeter). You can buy them in a pack of 4 from sites like banggod.com or you can extract them from old laptop battery which I have already shown in my previous tutorial\nBMS - A battery management system (BMS) is an electronic system that manages a rechargeable battery (cell or battery pack), such as by protecting the battery from operating outside its safe operating area, monitoring its state, calculating secondary data, reporting that data, controlling its environment, authenticating it and / or balancing it. Basically, it adds over charge, over discharge Protection and some of them also offers balance changing.\nPlastic Spacer- Replacing the traditional general adhesive with a professional battery holder, the combination is very convenient, the connection is more firm, and the battery maintenance is also convenient. It is the best choice for battery packs. It makes building battery pack much less painful.\nSpot welder - One of the purposes of spot welding is to join 2 or more components together in a mainly permanent fashion. you can buy one or built one which I have already shown in my previous tutorial\nNickel Ribbon - Nickel ribbon is commonly used in battery building due to its ease of use in spot welding and soldering as well its high corrosion resistance over time.", "step_imgs": ["https://cdn.instructables.com/FMX/SBTE/JSYZ86HN/FMXSBTEJSYZ86HN.LARGE.jpg", "https://cdn.instructables.com/F8F/LHZ4/JSYZ86HS/F8FLHZ4JSYZ86HS.LARGE.jpg", "https://cdn.instructables.com/F29/I12D/JSYZ86HX/F29I12DJSYZ86HX.LARGE.jpg", "https://cdn.instructables.com/FWV/YJT6/JSYZ86I9/FWVYJT6JSYZ86I9.LARGE.jpg", "https://cdn.instructables.com/F72/DL7P/JSYZ86IN/F72DL7PJSYZ86IN.LARGE.jpg"], "step_title": "Step 2: Everything We Need"}, {"step": 3, "steps_text": "First, we need to check the capacity of all the cells & make sure all the cells are at the same voltage. It is mandatory that all the cells are at the same voltage else cells will end up charing each other and it can lead to unexpected results.", "step_imgs": ["https://cdn.instructables.com/FGU/N9TY/JSYZ871O/FGUN9TYJSYZ871O.LARGE.jpg", "https://cdn.instructables.com/F4W/LDAS/JSYZ874C/F4WLDASJSYZ874C.LARGE.jpg", "https://cdn.instructables.com/F5F/LC8P/JSYZ871P/F5FLC8PJSYZ871P.LARGE.jpg"], "step_title": "Step 3: Check the Battery and Charge Them Up!"}, {"step": 4, "steps_text": "18650 cell can provide a Nominal voltage of 3.7V, Minimum voltage of 3V and Maximum voltage of 4.2V. So if we consider nominal voltage, connecting 6 cells in series will give us 22.2V which is a 6S1P Configuration. Where 6S means 6 Cells in series and 1P means 1 cell in Parallel. By adding another 6 Cells in parallel we can not only double the capacity but also the amount of current Pack can deliver.\nKeeping these things in my mind I decided to built 6S1P Configuration.", "step_imgs": ["https://cdn.instructables.com/FPM/KMF0/JSYZ87GO/FPMKMF0JSYZ87GO.LARGE.jpg", "https://cdn.instructables.com/FHN/KOQ0/JSYZ87GC/FHNKOQ0JSYZ87GC.LARGE.jpg", "https://cdn.instructables.com/F2B/3E0B/JSYZ87GP/F2B3E0BJSYZ87GP.LARGE.jpg", "https://cdn.instructables.com/FQC/FXAS/JSYZ891D/FQCFXASJSYZ891D.LARGE.jpg"], "step_title": "Step 4: Calculations!"}, {"step": 5, "steps_text": "For building the battery pack I brought those tiny black Plastic spacers which snap like Lego and can be very useful as we don't need to use adhesive instead. Now make 2 pairs of 6 plastic spacers, Insert the cells in alternation pattern.\nNow I measured the spacing between 2 cells and it was about 25mm. So I used Nickel Ribbon marked 25mm on it and used sharp scissors to snap it. Now Place the Nickel pieces on top of cells and make a series connection use a spot welder to fuse nickel ribbon and battery top.", "step_imgs": ["https://cdn.instructables.com/F6T/AHXV/JSYZ8D6Y/F6TAHXVJSYZ8D6Y.LARGE.jpg", "https://cdn.instructables.com/FF3/KCQM/JSYZ8D7B/FF3KCQMJSYZ8D7B.LARGE.jpg", "https://cdn.instructables.com/FHU/I8RF/JSYZ8D7P/FHUI8RFJSYZ8D7P.LARGE.jpg", "https://cdn.instructables.com/FF4/VZNL/JSYZ8D8Q/FF4VZNLJSYZ8D8Q.LARGE.jpg", "https://cdn.instructables.com/FPW/YIKZ/JSYZ8D9F/FPWYIKZJSYZ8D9F.LARGE.jpg", "https://cdn.instructables.com/FHG/GD22/JSYZ8D5K/FHGGD22JSYZ8D5K.LARGE.jpg", "https://cdn.instructables.com/FTC/6AAX/JSYZ8D5N/FTC6AAXJSYZ8D5N.LARGE.jpg"], "step_title": "Step 5: Building the Pack and Spot Welding"}, {"step": 6, "steps_text": "Now we can add and XT60 plug and call it for the day but we can also add a BMS which adds over charge, over discharge and some of the also add Balance charging to the battery pack. we just have to solder it to the battery pack as shown on the board. Also, some BMS like mine does not offer Balance charging so you need to add and Balance charging connector and You are done!", "step_imgs": ["https://cdn.instructables.com/FO8/V8I7/JSYZ8DMO/FO8V8I7JSYZ8DMO.LARGE.jpg", "https://cdn.instructables.com/FTL/44YQ/JSYZ8DN4/FTL44YQJSYZ8DN4.LARGE.jpg", "https://cdn.instructables.com/FX2/WSQD/JSYZ8DNY/FX2WSQDJSYZ8DNY.LARGE.jpg", "https://cdn.instructables.com/FUA/VSRK/JSYZ8DNZ/FUAVSRKJSYZ8DNZ.LARGE.jpg", "https://cdn.instructables.com/FMZ/6GAR/JSYZ8DNI/FMZ6GARJSYZ8DNI.LARGE.jpg", "https://cdn.instructables.com/FFQ/5040/JSYZ8DO0/FFQ5040JSYZ8DO0.LARGE.jpg", "https://cdn.instructables.com/FEC/R88O/JSYZ8DOC/FECR88OJSYZ8DOC.LARGE.jpg", "https://cdn.instructables.com/FAQ/681M/JSYZ8DLY/FAQ681MJSYZ8DLY.LARGE.jpg"], "step_title": "Step 6: Adding BMS"}, {"step": 7, "steps_text": "If you like my work\nFeel free to check out my YouTube channel for more awesome stuff:\nhttps://www.youtube.com/c/Nematics_lab\nYou can also follow me on Facebook, Twitter etc for upcoming projects\nhttps://www.facebook.com/NematicsLab/\nhttps://www.instagram.com/nematic_yt/\nhttps://twitter.com/Nematic_YT", "step_imgs": ["https://cdn.instructables.com/FZK/8YVD/JSYZ8ENY/FZK8YVDJSYZ8ENY.LARGE.jpg"], "step_title": "Step 7: Done!"}], "channel": "Electronics"}, {"category": "Technology", "description": "In this video production basics tutorial I will show you how to take out the green screen in Adobe Premiere CC. Removing or keying the green screen or blue screen background out is fairly easy to do using Premiere. I usually use After Effects to remove the green, but Ultra Key in Premiere does a great job as well. There are a number of reasons why you may just want to use Premiere. If you aren't doing very many motion graphics, and let's say you just want to have your subject with a different background and not much else happening, Premiere is a great choice. If I can do it, you can do it, let's get keying! :)\nDon't forget to follow me and check out my other instructables! :)\nIf you have any questions or comments leave them down below and I will get back to you as soon as I can. :)\nFollow the easy steps below or watch the video tutorial or do both! :)", "title": "How to Remove Green Screen in Adobe Premiere Pro CC", "url": "https://www.instructables.com/id/How-to-Remove-Green-Screen-in-Adobe-Premiere-Pro-C/", "steps": [{"step": 1, "steps_text": "Open up premiere and created a new project. Next let's import our footage and background. You can drag the footage and background over to your project panel or you can go to \"file\" then \"import\" and do it that way.", "step_imgs": ["https://cdn.instructables.com/FG9/M1TG/JSYZ6F12/FG9M1TGJSYZ6F12.LARGE.jpg", "https://cdn.instructables.com/FL3/B6C3/JSYZ6F13/FL3B6C3JSYZ6F13.LARGE.jpg", "https://cdn.instructables.com/F7Q/12H8/JSYZ6F16/F7Q12H8JSYZ6F16.LARGE.jpg", "https://cdn.instructables.com/FAD/NMG9/JSYZ6F1X/FADNMG9JSYZ6F1X.LARGE.jpg"], "step_title": "Step 1: Import Footage and Background"}, {"step": 2, "steps_text": "Now let's create a new sequence with our footage. Right click on the footage and then select \"new sequence from clip\". This will create a new sequence with your footage.", "step_imgs": ["https://cdn.instructables.com/FYI/XBEE/JSYZ6F21/FYIXBEEJSYZ6F21.LARGE.jpg", "https://cdn.instructables.com/FCU/RMC5/JSYZ6F22/FCURMC5JSYZ6F22.LARGE.jpg"], "step_title": "Step 2: Create New Sequence"}, {"step": 3, "steps_text": "Now we need to grab the v1 layer and raise it up to v2. This way we can drag the background over into our sequence and place it below the green screen footage. Drag the edge of the background to the right to match the length of the footage. Or you may have more then one background that will be changing throughout the video.", "step_imgs": ["https://cdn.instructables.com/FQX/6O0K/JSYZ6F23/FQX6O0KJSYZ6F23.LARGE.jpg", "https://cdn.instructables.com/FM5/W6J6/JSYZ6F24/FM5W6J6JSYZ6F24.LARGE.jpg"], "step_title": "Step 3: Background"}, {"step": 4, "steps_text": "Now we need to start keying out that green screen. We will do this by using the \"Ultra Key\" effect. In the effects panel you can type \"Ultra Key\" or just \"key\" and you will find the effect. Grab that and drag it over and place it on your green screen footage, in this case V2 (Video layer 2, Matt_Greenscreen)", "step_imgs": ["https://cdn.instructables.com/FW2/7HHT/JSYZ6F26/FW27HHTJSYZ6F26.LARGE.jpg", "https://cdn.instructables.com/FDH/65IK/JSYZ6F29/FDH65IKJSYZ6F29.LARGE.jpg"], "step_title": "Step 4: Ultra Key Effect"}, {"step": 5, "steps_text": "Now go over to the effects panel at the top left, we will see that the effect has been applied. It hasn't done anything yet because we need to use the eyedropper to select the color that we want to take out, which in this case is the green screen. Click on the eyedropper then click on the green. Here is a tip, it is important to have a well lit and evenly lit green screen background, it makes the keying process easier. After we click on it, you will notice the background disappear. It does a decent job just with that one click, but we need to fine tune it so it looks much better.", "step_imgs": ["https://cdn.instructables.com/FYJ/Q8EA/JSYZ6F2C/FYJQ8EAJSYZ6F2C.LARGE.jpg", "https://cdn.instructables.com/F0G/5B12/JSYZ6F2E/F0G5B12JSYZ6F2E.LARGE.jpg", "https://cdn.instructables.com/FE9/8XWN/JSYZ6F2H/FE98XWNJSYZ6F2H.LARGE.jpg"], "step_title": "Step 5: Color Picker"}, {"step": 6, "steps_text": "Next switch from \"composite\" output to \"alpha channel\" output. See how much noise is there. Ideally we want solid black for the background and solid white for the subject. Open up the \"Matte Generation\" drop down and play with the settings. Usually you will do a high \"Pedestal\" setting and then you will work with the \"Transparency\" setting. I can't just give you values that will work every time, it will vary depending on your footage. This looks pretty good with the settings I used.", "step_imgs": ["https://cdn.instructables.com/FR5/A4OJ/JSYZ6F2I/FR5A4OJJSYZ6F2I.LARGE.jpg", "https://cdn.instructables.com/F1E/Z05I/JSYZ6F45/F1EZ05IJSYZ6F45.LARGE.jpg", "https://cdn.instructables.com/FDR/MQKQ/JSYZ6F4P/FDRMQKQJSYZ6F4P.LARGE.jpg", "https://cdn.instructables.com/FN1/TUFP/JSYZ6F4Q/FN1TUFPJSYZ6F4Q.LARGE.jpg"], "step_title": "Step 6: Cleaning the Matte"}, {"step": 7, "steps_text": "Now let's clean up the edges a little bit by using the \"Matte Cleanup\" settings. You will want to adjust the choke amount, this will take away any outlines that might be there. We don't want the subject looking like a cartoon with a black outline. You can adjust the other settings as well to see how they effect your footage.", "step_imgs": ["https://cdn.instructables.com/FTX/CCBQ/JSYZ6F5B/FTXCCBQJSYZ6F5B.LARGE.jpg"], "step_title": "Step 7: Cleaning Up the Edges"}, {"step": 8, "steps_text": "Sometimes there will be a bit of green screen spill on your subject. You can remove that by adjusting the \"spill suppression\" settings.", "step_imgs": ["https://cdn.instructables.com/FJF/PWG6/JSYZ6F5D/FJFPWG6JSYZ6F5D.LARGE.jpg"], "step_title": "Step 8: Spill Suppression"}, {"step": 9, "steps_text": "Now let's crop out that corner of the light that is showing in the top left corner of the footage. In the effects area type in crop. Next drag that over to your footage. Then select which ever side you need to bring in. In this case I did a slight adjustment to the left crop. Now I want to stage my character in a better location. Because let's say I want to bring up text and other graphics on the right hand side of me. So I will just use the motion settings and move me over to the left and then scale me down a bit. There we go!", "step_imgs": ["https://cdn.instructables.com/FPJ/JAFW/JSYZ6F5E/FPJJAFWJSYZ6F5E.LARGE.jpg", "https://cdn.instructables.com/FRE/9RB1/JSYZ6F5H/FRE9RB1JSYZ6F5H.LARGE.jpg", "https://cdn.instructables.com/FBX/ZCY5/JSYZ6F5L/FBXZCY5JSYZ6F5L.LARGE.jpg"], "step_title": "Step 9: Crop and Move/Scale"}, {"step": 10, "steps_text": "Now watch those steps in action by watching the video tutorial! :)", "step_imgs": [], "step_title": "Step 10: Video Tutorial"}], "channel": "Digital Graphics"}, {"category": "Technology", "description": "In celebration of the latest Marvel Superhero making her big screen debut, Captain Marvel, we wanted to create a project harnessing her Kree Superpowers for aspiring Captain Marvels to go #HigherFurtherFaster using CAD (Computer Aided Design), our 3D Printer, and Electronics.\nWe decided to make a Captain Marvel Power Gauntlet to allow for us to feel like we can take on a few Skrulls ourselves. Follow these simple steps to create your own Power Gauntlet inspired by Captain Marvel.", "title": "MLAB | CAPTAIN MARVEL POWER GAUNTLET", "url": "https://www.instructables.com/id/MLab-Captain-Marvel-Power-Gauntlet/", "steps": [{"step": 1, "steps_text": "In this Step-by-Step, we will show you how to make a 3D model of Captain Marvel's famous logo for our Power Gauntlet.\nCheck out the mLab Episode VIII: 'Captain Marvel Power Gauntlet' above to see how we brought the following steps to life.\nIn order to create our 3D model, we will use Sketchbook and Tinkercad 3D Designs. Sketchbook, is a software that allows for you to transform your drawings into a digital format on a wide variety of devices (i.e. your computer, iOS and Android Device, and even your Fire Tablet). The second software application we are using, Tinkercad, is a 3D design or CAD software that allows for you to transform your ideas and sketches into 3D models simply using your computer. As an added bonus, both software applications are free to use!\nNow, if the term \"CAD\" sounds unfamiliar to you, don\u2019t fear. CAD stands for Computer-Aided Design.\nCAD is a type of software that allows for us to build 3D objects using our computer.\nOnce we are finished with our Tinkercad CAD model, we can export the model to a 3D Printer, a machine that uses materials such as plastic in order to print physical objects. If you don't have access to a 3D Printer, you can also order a 3D print from online 3D Printing resources or explore your local resources to 3D Print your CAD Model (For Example; your local school or library or makerspace).\nRegardless of what you decide to do with your CAD Model, the most important step is to get started.\nSo...Let's Get Started!", "step_imgs": [], "step_title": "Step 1: Introduction to CAD"}, {"step": 2, "steps_text": "In order to begin, we need to pick a component of Captain Marvel that we would like to bring to life.\nHence, we decided to take a quick look at the 'Captain Marvel' Trailer. Enjoy!\nBased on the Captain Marvel Trailer, we decided to design a Power Gauntlet inspired by Captain Marvel's ability to shoot energy pulses from her fists.\nWe wanted to use White/Yellow LEDs in order to illuminate our Gauntlet in a manner similar to Captain Marvel's Gloves in the Trailer, alongside add Captain Marvel's Symbol to the Gauntlet and LEDs. In order to do so, we need to first create a CAD Model of Captain Marvel's Symbol and 3D Print her Symbol for use on our Power Gauntlet. Later, we will need to lay out and wire the electronic components in order to illuminate Captain Marvel's Gauntlet.\nIn order to get started, given we aren't artists, we need to make a Sketch of our Captain Marvel Power Gauntlet to serve as a Canvas or a 'Battle Plan' for our Captain Marvel Power Gauntlet. Just like an Artist would use a Canvas to apply their Masterpiece, we will do the same with our Sketch.\nIf you already have a Sketch or would like to just jump straight into creating a CAD Model of your Captain Marvel Power Gauntlet in Tinkercad, feel free to move on to the next step.\nNow, to create our Sketch of our Captain Marvel Power Gauntlet, we used the Sketchbook App on our iPad in order to trace over an image of Captain Marvel's Logo to obtain an outline of her symbol to populate our Gauntlet (shown in the video below).\nYou can also use Sketchbook on your Phone, Fire Tablet, Computer (highly recommend either a Touchscreen Computer or use a Wacom Tablet or Digital Tablet accessory) to create a digital Sketch of Captain Marvel's Symbol and overall Power Gauntlet. If you prefer more traditional methods, you can use traditional pen and paper in order to outline Captain Marvel's logo, snap a picture, and use the image as a Canvas as well for your CAD Model.\nHere is how we brought our Sketch of Captain Marvel's Power Gauntlet to reality;\n[Sketchbook]\nNow, it's time for us to bring our Sketch to life using Tinkercad.", "step_imgs": [], "step_title": "Step 2: Captain Marvel Power Gauntlet Battle Plan"}, {"step": 3, "steps_text": "After developing our Sketch of Captain Marvel's Power Gauntlet, we can now transform our Sketch into a CAD Model using Tinkercad.\nIn Tinkercad, we are going to bring a 'Basic Shape' from the Right Toolbar;\nBring the blue 'Star' Basic Shape from the Right Toolbar onto your Workplane.\nEdit your 'Star' Basic Shape using the Shape Toolbar\nEdit the 'Points' of your 'Star' Basic Shape from (5) to (8)\nIf you desire, Edit the 'Color' of your Basic Shape Solid to your desired Color.\nSince, we want to make the interior of our Captain Marvel Symbol hollow in order to disguise the electronics for our Captain Marvel Power Gauntlet.\nIn order to do so, we need to Duplicate our Captain Marvel Symbol\nUsing the Upper Toolbar;\nDuplicate your 'Star' Basic Shape\nEdit your 'Star' Basic Shape using the Shape Toolbar\nEdit your 'Star' Basic Shape from a Solid to a Hole\nEdit the Size of your Duplicate Symbol to your desired Thickness [1/8\"]\nIn our Tinkercad Model;\nOur Original Symbol is a Width: 2.5\" and Length: 2.5\".\nOur Duplicate Symbol is a Width: 2.437\" and Length: 2.437\"\nNow, it's time to hollow our Symbol for our Electronic components;\nMove your Duplicate Symbol up and down using the black Cone above the Shape until we have our desired Thickness.\nIn our Tinkercad Model;\nWe selected the Original Symbol and moved it (1/8\") from the Workplane.\nDrag your Mouse across all of the Basic Shapes on your Workplane in order to 'Select All'.\nSelect 'Group' from the Right-Side of the Upper Toolbar.\nVoila!\nOnce we have our Captain Marvel Symbol, we can continue to further edit our Symbol to fit our LEDs, Power Source, and more before we send our CAD Model to our 3D Printer.", "step_imgs": ["https://cdn.instructables.com/FWQ/AC4W/JSYZ6CRN/FWQAC4WJSYZ6CRN.LARGE.jpg"], "step_title": "Step 3: Putting the Battle Plan Into Action"}, {"step": 4, "steps_text": "If you have access to a 3D Printer;\nCongratulations! You can make your Captain Marvel Symbol into reality.\nIf not, you can have your CAD Model printed at your local school, library, or maker-space with public access to a 3D Printer or you can order online and have it shipped to your home through VooDoo Manufacturing.\nHow do you export your CAD Model for 3D Printing? It's simple.\nIn Tinkercad, you can go to the upper Right Hand Corner of the Upper Toolbar and Export your CAD Model as a .STL File.\nFor example, we are using a Dremel 3D20 3D Printer, so we will be using Dremel DigiLab.\nIf .STL sounds a like an alien format, don't panic just yet.\nSTL files are a very popular file format for 3D or CAD Models and its similar to exporting a document as a Microsoft Word (.doc) or PDF format (.pdf).\nOnce you upload the .STL File to your 3D Printing Software, the software will transform your CAD model into a language that machines, in particular 3D Printers, can understand.\nSo, in order to recap:\n.STL = Language for 3D Modeling and Printing Software\n.gCode = Language for 3D Printers to understand CAD Models\nIn our case, we used Dremel DigiLab, which allows for you to upload .STL files and convert the file into the .gCode that corresponds to our Dremel 3D20 3D Printer.", "step_imgs": ["https://cdn.instructables.com/FPW/B1US/JSYZ6CPF/FPWB1USJSYZ6CPF.LARGE.jpg"], "step_title": "Step 4: Send Your CAD Model to the 3D Printer"}, {"step": 5, "steps_text": "For our Captain Marvel Power Gauntlet, we wanted to ensure every inch our our Gauntlet showcases Captain Marvel's Superpowers. Therefore, we wanted to add the Power to Captain Marvel's Power Gauntlet.\nIn order to do so, we will need the following items for (1) Glove, (if you plan to create a Pair of Gauntlets, double the number of materials);\nMaterials\n(5) 5mm LEDs\n(1) CR2032 3V Coin Cell Battery\n(1) CR2032 Coin Cell Battery Holder\n(20) 2\" Strand of Electric Wire w/ Metal Ends Striped (or Uncovered)*\n(1) Push Button\nDouble Sided Tape\nA Glove\nTools and Equipment\nPair of Long-Nosed Plier\nScissors\nHot Glue Gun\nGlue Gun Sticks\nOptional;\nSoldering Iron with Stand\nSolder (Highly Recommended: Lead-Free)\nFume Extractor\n*(We used Jumper Wire in order to make our Circuit. If you do use Jumper Wires and decide to solder your circuits, make sure not to solder or heat the rubber ends of the Jumper Wires.)\nIn order to create our LED Circuit to incorporate LEDs into our Captain Marvel Power Gauntlet, we need to make and test our LED Circuit.\nTo test our LED Circuit, we used Tinkercad Circuits;\nNow that we have a plan for the electronics of our Captain Marvel Power Gauntlet, it's time to bring our plan to reality.\nFeel free to follow along with the mLab Episode for the following section;\nPart A:\nFirst, we need to lay out our materials for our LED Circuit onto our Captain Marvel Power Gauntlet.\nOn our LED, or the \u2018Light\u2019 for our Gauntlet, each leg plays a unique role in our circuit. One leg is Positive or the Anode and the other leg is Negative or the Cathode, just like on a AA or AAA Battery.\nIn Electronic Circuits, just like when you put a AA or AAA Battery in a device incorrectly and it doesn\u2019t turn on, we have to make sure that we place our LEDs, Batteries, and Push Button in our circuit are placed correctly.\nFor our LEDs, we are going to wire the Positive Leg of each LED on a \u2018Finger\u2019 to each other.\nThen repeat wiring the Negative Leg of each LED.\nIn order to do so, take the LED you placed on your pinkie knuckle and twist the Positive Leg around your long-nosed pliers making a loop.\nNext, take a wire and feed the metal end through the loop.\nTo finish, take your long-nosed pliers and bend the metal end of the jumper wire around the loop.\nWoot! Woot! You've completed your first loop, let\u2019s do the same for the negative leg of the pinkie knuckle LED.\nPart B:\nNow that we have our first LED wired, let's connect our Knuckle LEDs together;\nNegative to Negative. Positive to Positive.\nOnce we have all of our Knuckle LEDs wired, we can now connect our circuit to our Coin Cell Battery Holder and Push Button.\nLet's connect the Positive Leg of our left-most (Thumb) Knuckle LED on the Thumb to the Positive Lead from by Coin Cell Battery Holder.\nFinally, we will connect the Negative Leg of my left-most (Thumb) Knuckle LED to my Push Button, then connect the other end of our Push Button to our Coin Cell Battery Holder.\nPlace a CR2032 Coin Cell Battery into the Coin Cell Battery Holder.\nNow, it's time for a test-drive of our Circuit. Press the Button.\n--------------------------------------------------------------------------------\nGiven we have now tested the Power of our Captain Marvel Power Gauntlet, it's time to bring everything together.", "step_imgs": ["https://cdn.instructables.com/F31/EFWE/JSYZ5UQA/F31EFWEJSYZ5UQA.LARGE.jpg"], "step_title": "Step 5: Power Your Gauntlet - Part I"}, {"step": 6, "steps_text": "Before we bring everything together, if you would like to make your connections a little more permanent, we can solder our connections.\nIn order to do so, please make sure to do so in a well-ventilated area and with the guidance and supervision of an Adult (unless you are one).\nTo Solder, you will need to use a Soldering Iron with a Stand featuring a damp Sponge or Wire-Type Soldering Iron Tip Cleaner, Solder (highly recommend lead-free), and a Fume Extractor.\nOn our Circuit;\nClean the Tip of your Soldering Iron on your Sponge or Wire-Type Soldering Iron Tip Cleaner.\nAdd a little Solder to the Tip of your Soldering Iron until it covers the entire Tip.\nClean the Tip of your Soldering Iron again. You should see a shiny metal coating on the Tip (as shown)\nPlace your Soldering Iron Tip on the metal connection you want to solder on your Circuit\nTIP: If you are using Jumper Wires or Electric Wires, make sure you DO NOT TOUCH THE PLASTIC OR RUBBER!\nPlace the Solder on the Connection and hold until the Solder liquefies.\nGuide the molten Solder using the Soldering Iron Tip until the connection is covered.\nBOOM! You\u2019ve just soldered your first connection in your Circuit!\nWe will continue to do this for the remaining components to ensure our Circuit is more robust for fighting Skrulls.\nOnce we have our Circuits ready for showtime, it's time for everything to come together.", "step_imgs": ["https://cdn.instructables.com/FBP/39PG/JSYZ5V35/FBP39PGJSYZ5V35.LARGE.jpg"], "step_title": "Step 6: Power Your Gauntlet - Part II"}, {"step": 7, "steps_text": "Now that our Captain Marvel Symbols are 3D Printed and Electronics are working, we can assemble our Captain Marvel Kree Power Gauntlet.\nPRO TIP: You can use a Hot Glue Gun to ensure your newly soldered electrical connections don\u2019t break upon repeated use of your Power Gauntlet. If you decide to use a Hot Glue Gun, please make sure you have Adult Supervision.\nIn order to ensure our Electronics don\u2019t move around too much on our Gauntlet (i.e. our Glove), you can use Double-Sided Tape.\nUsing your Pair of Scissors, Cut a strip of Double-Sided Tape\nPlace the Strip where you would like to place your LED on your Glove\nRepeat until you place Double-Sided Tape everywhere you want to place a LED on your Glove\nPlace your LEDs, carefully, on each Double-Sided Tape Strip on your Glove\nRepeat the Steps above for your Battery Holder or any wires you may hand to nail down (for wires, makes sure you leave enough room for bending and flexing. Don't cripple your Power Gauntlet).\nPRO TIP:As you place the LEDs on each Double-Sided Tape Strip, make sure you haven't disturbed your connections. Keep your Circuit ON to ensure you can catch any flickering or OFF LEDs as you are assembling.\nOn our version, we will be adding our freshly 3D-Printed 'Captain Marvel' Star Force Symbols on each LED and Battery Holder using just a touch of Hot Glue.\nPRO TIP: For our 'Captain Marvel' Star Force Symbols on each LED, we simply added a 5mm (~0.20 inches) hole in the middle of our 'Captain Marvel' Star Force Symbols.\nNow, it's time for the moment of truth...does your Power Gauntlet unleash Captain Marvel's Kree powers in your hand.", "step_imgs": [], "step_title": "Step 7: Putting the Marvel in Captain Marvel"}, {"step": 8, "steps_text": "It's a journey full of twists and turns, but you've created your own Captain Marvel Power Gauntlet.\nWhen it comes to your Captain Marvel Power Gauntlet, it's very important to customize it in order to make it your very own. As you have seen so far, Tinkercad allows you to make CAD Models and Circuit Designs to bring your ideas to life. Given our favorite colors are Blue and Yellow, we customized our Power Gauntlet using Blue Satin gloves, Golden Yellow Captain Marvel Symbols for our LEDs and Battery Holder, and concealing our push button inside our glove.\nHowever, you can take this a step further in terms of customizing your Captain Marvel Power Gauntlet.\nFor example, try exporting your Captain Marvel Symbol as a .SVG file and using a Cutting Machine (i.e. Cricut or Laser Cutter) and make your Symbols out of Pleather and attach to a Pleather Glove. Perhaps make a Mold of one of your Captain Marvel Symbols and use a Hot Glue Fun and Glitter Glue Stick to make Glitter versions of Captain Marvel's Symbol to reflect the LEDs better.\nWhatever you decide to do, simply #BuildMakeLearn.\nPlus, don't forget to share snapshots of your creations with us on Social Media (Instagram, Twitter, and Facebook: @Mbadika) using the Hashtags - #HigherFurtherFaster #mLabBuilds.", "step_imgs": ["https://cdn.instructables.com/F1A/SOM4/JSYZ6D5H/F1ASOM4JSYZ6D5H.LARGE.jpg"], "step_title": "Step 8: #HigherFurtherFaster"}], "channel": "Wearables"}, {"category": "Technology", "description": "Breathing solder fumes can cause serious health problems, a fume extractor is a cheap and easy way to minimize the inhalation of such fumes.\nIn this instructable I will show you how I designed and built this minimalist mostly 3D printed fume extractor; My goal was to make something functional, aesthetically appealing, inexpensive, compact and simple.\nAn important feature of this project is the removable filter cartridge that makes changing the activated carbon filter effortless and allows you to use the filters of the Hakko 491, 493, FA-400 fume extractors which are easy to find.\nLet's get started!", "title": "Minimalist 3D Printed Fume Extractor", "url": "https://www.instructables.com/id/Minimalist-3D-Printed-Fume-Extractor/", "steps": [{"step": 1, "steps_text": "After sketching and testing some ideas I came up with this design, then I used Fusion 360 to make the 3D model.\nIf you are new to 3D modeling and Fusion 360, I suggest you take a look at these classes: 3D DESIGN CLASS, 2D CAD AND CAM CLASS, DESIGN SKETCHING CLASS.", "step_imgs": ["https://cdn.instructables.com/FKA/GI3M/JSUP17D3/FKAGI3MJSUP17D3.LARGE.jpg", "https://cdn.instructables.com/F6W/BK0J/JSUP17CE/F6WBK0JJSUP17CE.LARGE.jpg", "https://cdn.instructables.com/FB1/HMF7/JSUP17D4/FB1HMF7JSUP17D4.LARGE.jpg", "https://cdn.instructables.com/FT8/OGO2/JSUP17D5/FT8OGO2JSUP17D5.LARGE.jpg", "https://cdn.instructables.com/FUM/TRQE/JSUP17D8/FUMTRQEJSUP17D8.LARGE.jpg"], "step_title": "Step 1: IDEATION & DESIGN"}, {"step": 2, "steps_text": "You will need the following tools, parts and materials:\nTOOLS\n3D Printer [Amazon]\nMultimeter [Amazon] [Aliexpress] [Banggood]\nFiles & Sand Paper [Amazon]\nAllen wrench [Amazon]\nDigital LCD TS100 Mini Soldering Iron [Amazon] [Aliexpress] [Banggood]\nSolder wire [Amazon]\nWire stripper [Amazon]\nPhillips screwdriver\nWire cutters [Amazon] [Aliexpress]\nHot glue gun [Amazon]\nM3 Hand Tap Drill [Amazon] [Aliexpress]\n\nBILL OF MATERIALS\n(5pcs) 3D printed parts (I used PLA filament [Amazon])\n(1) High air flow case fan 80mm*80mm*38mm [Amazon] [Amazon]\n(1) Rocker switch 2 ON-OFF 10x15mm [eBay] [Aliexpress]\n(1) Green 3mm LED [Amazon] [Aliexpress]\n(1) 680 Ohm resistor [Amazon] [Aliexpress]\n(1) 12V 3A Female DC jack connector 5.5 X 2.5 mm [Amazon] [Aliexpress]\n(1) 12v DC power adapter [Amazon] [Banggood] (Make sure your DC Power adapter provides the amps your fan needs.)\n(1) Activated carbon filter 130mm*130mm*10mm [Amazon] [Aliexpress]\n(2) M3 x 10mm Button Head Socket Screws [Banggood] [Amazon] [Aliexpress]\n(2) M3 x 3mm and OD=4.2mm inserts [Amazon] [Aliexpress]\n(20cm) 22 AWG wire red and black preferably.[Amazon]\n(4) M5*10mm pc case mount screws [Amazon] [Aliexpress]\nShrink tubing [Amazon] [Aliexpress] or Liquid Electrical Tape [Amazon]\n(4) Rubber feet [Amazon] [Aliexpress]\nUpdate: You can use this 12v DC Power adapter 5.5mm x 2.1mm Plug [Amazon] with this 12V 3A Female DC jack connector 5.5 x 2.1mm [Amazon] instead of the 5.5 x 2.5 mm power adapter and connector.\nAll components and materials are easily sourced, the links might expire but I will try my best to keep them updated.", "step_imgs": ["https://cdn.instructables.com/FE8/D6JX/JSUP1M44/FE8D6JXJSUP1M44.LARGE.jpg", "https://cdn.instructables.com/FI8/K4XQ/JSUP2ARC/FI8K4XQJSUP2ARC.LARGE.jpg"], "step_title": "Step 2: TOOLS AND BOM"}, {"step": 3, "steps_text": "You can download the STL files on Thingiverse\nI have printed the enclosure with PLA filament on my Monoprice Select Mini v2 3D printer using Cura slicing software (see picture for the settings I used).\nIn order to minimize post processing I made a two part design for the enclosure and cartridge this way you won't need to print supports and post-processing is going to be minimum.\nDrill and tap the threads with a M3 bit tap, then use your soldering iron tip to heat the inserts and press it into the PLA plastic when it gets hot enough.\nTip: Tap the insert again after attach it, it will make easier to insert the screws later.", "step_imgs": ["https://cdn.instructables.com/F55/8LIE/JSUP2JRT/F558LIEJSUP2JRT.LARGE.jpg", "https://cdn.instructables.com/FBL/QR8L/JSUP2JQ1/FBLQR8LJSUP2JQ1.LARGE.jpg"], "step_title": "Step 3: PRINT AND PREPARE 3D PARTS"}, {"step": 4, "steps_text": "Sand and file all the rough edges.\nInsert the fan to one half of the enclosure, then attach the other side, parts should fit snugly together.\nMake sure cut a notch in the fan so the wires can slide easily, also get rid of the signal wire (usually a yellow wire).\nCut the 130 mm x 130 mm carbon filter in half both ways, you will end up with 4 equal size pieces, we will use 2 pieces to improve filtration; add the carbon filters to the cartridge one in each side and snap it together.\nAttach the fan grill to the back, my fan came with a grill and (4) M5*10mm pc case mount screws so I reused them.\nTip: If you don't have the fasteners you can use super glue for a permanent joint.", "step_imgs": ["https://cdn.instructables.com/FHS/423G/JSUP2E0A/FHS423GJSUP2E0A.LARGE.jpg", "https://cdn.instructables.com/FI4/AYRI/JSUP1MIS/FI4AYRIJSUP1MIS.LARGE.jpg", "https://cdn.instructables.com/FFR/O3H3/JSUP1MIT/FFRO3H3JSUP1MIT.LARGE.jpg", "https://cdn.instructables.com/FGL/UDJW/JSUP2EPW/FGLUDJWJSUP2EPW.LARGE.jpg", "https://cdn.instructables.com/FG8/AD7Y/JSUP2GEZ/FG8AD7YJSUP2GEZ.LARGE.jpg", "https://cdn.instructables.com/FZH/D45G/JSUP46J6/FZHD45GJSUP46J6.LARGE.jpg"], "step_title": "Step 4: ASSEMBLY"}, {"step": 5, "steps_text": "After snapping together the two sides of the enclosure, pull the wires to the front and solder all the connections as shown in the circuit schematic (make sure the polarity of the DC jack connector and DC power jack match).\nDon't forget to use heat-shrink tubing around exposed wires and connections to insulate and protect the wires from abrasion.\nFinally add some hot glue to the switch and LED to hold it in place and install the lid with the two M3 screws.\nIf you are new to electronics, I suggest you take a look at this class: ELECTRONICS CLASS", "step_imgs": ["https://cdn.instructables.com/FHG/QJ79/JSUP4DQ0/FHGQJ79JSUP4DQ0.LARGE.jpg", "https://cdn.instructables.com/FOP/VP1E/JSUP4NBX/FOPVP1EJSUP4NBX.LARGE.jpg"], "step_title": "Step 5: WIRING AND SOLDERING"}, {"step": 6, "steps_text": "Thank you for looking, if you found this project helpful please vote for it in the contest and don't forget to share your build and comments!", "step_imgs": ["https://cdn.instructables.com/FHQ/FF24/JSYZ6978/FHQFF24JSYZ6978.LARGE.jpg"], "step_title": "Step 6: THANK YOU"}], "channel": "3D-Printing"}, {"category": "Technology", "description": "In this Instructable I\u2019ll show you how you can build a non contact voltage detector for checking of live power wires.", "title": "Non Contact Voltage Detector", "url": "https://www.instructables.com/id/Non-Contact-Voltage-Detector-2/", "steps": [{"step": 1, "steps_text": "A transistor is a device that can be used in two basic operations, as an electronic switch or as an amplifier. Depending on the current we apply to it\u2019s base, it can control a much larger current through the collector and emitter path with a typical multiplication of around 200 times. This is called the transistor gain.\nBy connecting the output of one transistor to the base of another, we can multiply this gain to now get an amplification of 40 000 times. By building a circuit with three such stages we can create a device that is capable of detecting even the tiniest charges and movement of electricity.", "step_imgs": ["https://cdn.instructables.com/F06/4QKB/JSSUGBB8/F064QKBJSSUGBB8.LARGE.jpg", "https://cdn.instructables.com/FNK/RM6S/JSSUGBBW/FNKRM6SJSSUGBBW.LARGE.jpg", "https://cdn.instructables.com/F2D/GNVF/JSSUGBCM/F2DGNVFJSSUGBCM.LARGE.jpg"], "step_title": "Step 1: Transistor Operation"}, {"step": 2, "steps_text": "To begin, take a piece of perfboard with at list five to six rows of holes. I\u2019m using this 2 by 8 cm board that I\u2019ve purchased online.\nPlace the first transistor on the first row of holes and the second one, one row apart. Additionally, move the second transistor one hole up so its emitter aligns with the base of the first transistor. Same as with the second transistor, the third one is placed one row apart with its emitter being aligned with the base of the second transistor.\nAll three of the resistors connect to the collectors of the transistors and the values are all marked on the schematic.\nCheck out the full schematic on EasyEDA:\nhttps://easyeda.com/bkolicoski/Non-Contact-Voltage...\nThe LED is connected with it\u2019s negative side to the resistor on the first transistor and its positive side is then commoned with the resistors.", "step_imgs": ["https://cdn.instructables.com/FQE/6BBX/JSSUGBDB/FQE6BBXJSSUGBDB.LARGE.jpg", "https://cdn.instructables.com/FDE/PRX9/JSSUGBDW/FDEPRX9JSSUGBDW.LARGE.jpg", "https://cdn.instructables.com/FK7/8MOB/JSSUGBG2/FK78MOBJSSUGBG2.LARGE.jpg", "https://cdn.instructables.com/FI1/4868/JSSUGBQ0/FI14868JSSUGBQ0.LARGE.jpg"], "step_title": "Step 2: Assemble the Components"}, {"step": 3, "steps_text": "The sensor for the circuit will be this copper rod that I\u2019ve soldered on the top of the PCB and it is then connected with a piece of wire to the base of the third transistor.\nThe entire circuit is powered with a 9v battery and as soon as you bring it close to the wires connected to the mains voltage, the LED starts flickering.\nWhile this is a nice indicator for isolated cables, it should never be used to test bare wires. For testing open contacts, only use proper isolated measuring equipment.", "step_imgs": ["https://cdn.instructables.com/FHW/AI95/JSSUGBQ8/FHWAI95JSSUGBQ8.LARGE.jpg", "https://cdn.instructables.com/F2X/LHQR/JSSUGBQJ/F2XLHQRJSSUGBQJ.LARGE.jpg"], "step_title": "Step 3: Add the Antenna"}, {"step": 4, "steps_text": "As a final experiment I wanted to see how the detector will react with one more stage so I soldered one more transistor with a 5MOhm resistor so we now got 4 stages in total of amplification. The detector is a bit more sensitive now where it can detect the wire a bit further apart than before. Additionally it is also more sensitive to false triggering to a static electricity as well.", "step_imgs": ["https://cdn.instructables.com/F6R/1GS2/JSSUGBRG/F6R1GS2JSSUGBRG.LARGE.jpg", "https://cdn.instructables.com/FM1/375K/JSSUGBSU/FM1375KJSSUGBSU.LARGE.jpg", "https://cdn.instructables.com/FTK/SHOF/JSSUGBYO/FTKSHOFJSSUGBYO.LARGE.jpg", "https://cdn.instructables.com/FGU/U4RC/JSSUGBYG/FGUU4RCJSSUGBYG.LARGE.jpg", "https://cdn.instructables.com/FR7/INSC/JSSUGBW5/FR7INSCJSSUGBW5.LARGE.jpg", "https://cdn.instructables.com/FRQ/DOY8/JSSUGBR6/FRQDOY8JSSUGBR6.LARGE.jpg"], "step_title": "Step 4: Experiment With 4th Stage"}, {"step": 5, "steps_text": "I hope that this Instructable was educational and interesting so I suggest to follow me and don\u2019t forget to subscribe to my YouTube channel.", "step_imgs": ["https://cdn.instructables.com/FLB/V2ST/JSSUGBQR/FLBV2STJSSUGBQR.LARGE.jpg", "https://cdn.instructables.com/FVF/SIZK/JSSUGB8A/FVFSIZKJSSUGB8A.LARGE.jpg", "https://cdn.instructables.com/FE0/YAGV/JSSUGB7F/FE0YAGVJSSUGB7F.LARGE.jpg"], "step_title": "Step 5: Enjoy"}], "channel": "Electronics"}, {"category": "Technology", "description": "Nowadays, air pollutionis omnipresent and more particularly in our cities. Large cities are prey all year with pollution levels sometimes reaching (and often for certain) levels very dangerous to human health. Children are extremely sensitive to the quality of the air they breathe. This polluted air leads to them, among other allergy problems. The air is polluted outside our home, but also at levels of the most important times, inside our homes and cars.\nThe air quality level is available at the following site. This Chinese site gathers all the air quality measurements of the sensors of the whole mode. The air quality level is formatted according to an AQI index, which may vary slightly from one country to another. This document explains how to calculate this index. This other document is an understanding guide.\nIn order to know the quality of the air we breathe, wherever we go and in real time, I set about creating a portable atmospheric particle counter (which we will call CPA later). , able to fit in the pocket.\nIt was created for:\nHold in the pocket.\nHave a great autonomy of operation.\nBe easy to understand\nCan save the measurements on PC.\nTo be rechargeable.\nTo be able to access it with your phone without the presence of the local networks of Wifi communication.\nBe able to control an air purification device if the pollution exceeds a certain threshold.\nCharacteristics\nSize: 65x57x23mm\nMeasured particles: PM1, PM2.5 and PM10\nAutonomy: between 3 hours and several weeks depending on the chosen operating mode.\nLithium-ion battery 3v7 - 680 mAh\nMicro USB interface for charging and data transfer.\nMemory of 2038 measurements (680 per type of PMxx)\nSampling period: continuous, 5min, 15min, 30min, 1h\n3v3 command output according to pollution level.\nMulticolored LED interface for ease of understand\nControl interface on PC, tablet, phone (Android, iOS) via Wifi.", "title": "Portable Micro Particles Counter PM1 PM2.5 PM10", "url": "https://www.instructables.com/id/Portable-Micro-Particle-Counter/", "steps": [{"step": 1, "steps_text": "I began by thinking about the shape that I could give the box, inspired by modern designs of objects.\nHere are some drawn boxes.\nIn the end, I chose the simplest case to make and the smallest : see the main photo on this instructable.", "step_imgs": ["https://cdn.instructables.com/FAP/FDFX/JSUOZ3Y3/FAPFDFXJSUOZ3Y3.LARGE.jpg", "https://cdn.instructables.com/FIT/CQ7H/JSUOZ405/FITCQ7HJSUOZ405.LARGE.jpg", "https://cdn.instructables.com/F9B/I1LS/JSUOZ3YQ/F9BI1LSJSUOZ3YQ.LARGE.jpg", "https://cdn.instructables.com/F2O/7EGF/JSUOZYOX/F2O7EGFJSUOZYOX.LARGE.jpg"], "step_title": "Step 1: The Prototypes of Box"}, {"step": 2, "steps_text": "I have in all 3 prototype cards. But only 2 are visible here.\nThe prototypes have made it possible to develop the 5V and 3v3 power supplies. These were difficult to develop because I had to find the components to obtain the power needed to start the WiFi microcontroller (ESP8266 - 12). The electronic charging part of the Lithium-ion battery was faster to operate.After, I changed several times the location of the various switches and connectors for good ergonomics of the device.", "step_imgs": ["https://cdn.instructables.com/F4R/H8R3/JSUOZ4DK/F4RH8R3JSUOZ4DK.LARGE.jpg", "https://cdn.instructables.com/FNP/KBR4/JSUOZ4E9/FNPKBR4JSUOZ4E9.LARGE.jpg"], "step_title": "Step 2: Card Prototypes"}, {"step": 3, "steps_text": "The LEDs are visible by transparency through the housing. The air inlets are on the left side of the case. On the right side we find :\nThe display mode selection button.\nThe on / off switch.\nThe selection switch for transferring measurements to the PC. It allows switching between a serial link between the ESP8266 and the particle sensor or between the ESP8266 and the micro USB port. Attention, if this one is not well positioned, the communication between the electronic card and the sensor will not be assured anymore and the CAP will not be able to start correctly.\nThe micro USB socket for recharging the battery or serial protocol transfer measures.", "step_imgs": ["https://cdn.instructables.com/F3I/RJXB/JSUOZ44H/F3IRJXBJSUOZ44H.LARGE.jpg", "https://cdn.instructables.com/FXV/MOYZ/JSUOZ40U/FXVMOYZJSUOZ40U.LARGE.jpg"], "step_title": "Step 3: The Box"}, {"step": 4, "steps_text": "I tested two different sensors. The SDS011 V1.2 PM2.5 Laser sensor from Nova Fitness Co. Ltd. (doc) with the usb serial interface key.\nThe other sensor (metalic case) is PMS7003M from PLANTOWER (doc).\nThis is the one I use in my case. It is able to measure the concentration of fine particles of less than 1\u03bcm (PM1); less than 2.5\u03bcm (PM2.5) and less than 10\u03bcm (PM10). The operating principle of the PSM7003M sensor is as follows: a laser illuminates the dust of the air. An optical sensor captures the laser light and generates an electrical signal proportional to the rate and size of dust in the air.\nIts characteristics are show in the table of characteristic.", "step_imgs": ["https://cdn.instructables.com/F5S/C11N/JSUOZ41M/F5SC11NJSUOZ41M.LARGE.jpg", "https://cdn.instructables.com/FM5/OB41/JSUOZ429/FM5OB41JSUOZ429.LARGE.jpg", "https://cdn.instructables.com/FO8/ZOHT/JSUOZ432/FO8ZOHTJSUOZ432.LARGE.jpg"], "step_title": "Step 4: The Sensor"}, {"step": 5, "steps_text": "There is just the place of the battery on the side of the sensor.", "step_imgs": ["https://cdn.instructables.com/FHN/R7DG/JSUOZ4F3/FHNR7DGJSUOZ4F3.LARGE.jpg"], "step_title": "Step 5: Mounting"}, {"step": 6, "steps_text": "The heart of the system is the ESP8266 (type ESP-12F). This microcontroller is equipped with a Wifi transmitter. The ESP8266 is available in several variants. The ESP8266 communicates with the PMS7003 sensor via serial link. It recovers the particle concentration values and the number of particles. Then, it calculates the index of quality AQI, If the mode of control of the output is in \"Automatic\" and the level of pollution in PM2.5 is higher than 50 (indexe of quality of the air AQI PM2.5 > 50), the output is set high (3v3). Otherwise, it is set low (0v).\nThe ESP8266 is configured in Access Point -> AP (Wifi point). That is, it is recognized as a Wifi terminal on which the phone can connect. The phone must select this Wifi terminal and enter the code APPSK (a bit like a WEP code of an ADSL box) to access it. Then, the phone enters the IP address to reach. Here it will be 192.168.4.1. Then, the web page is displayed on the phone, from which one controls the box and visualizes the pollution values. The APPSK code configured in the program is \"AQI_index\". The APPSK code can be modified by the programmer because it is contained in the program loaded in the ESP8266. The address to load the integrated web page is: \"192.168.4.1\".\nThe ESP8266 measures the battery voltage. If it is below its limit voltage (3v2 = 0%), the device is put in standby. The battery is 100% when the voltage is 4v2.\nThe ESP can store up to 2038 samples of PM1, PM2.5 and PM10 particle concentration value. About 680 samples per particle size. These measurements can be downloaded by connecting a cable equipped with a USB / Serial converter and launching the transfer via the embedded application. The values of the transferred samples are normalized as follows to save memory space:\nPM1: (\u03bcg / cm3) / 5\nPM2.5: (\u03bcg / cm3) / 5\nPM10: (\u03bcg / cm3) / 6\nTo find the right concentration value, then multiply the value by 5 or 6 depending on the case.", "step_imgs": [], "step_title": "Step 6: Operation"}, {"step": 7, "steps_text": "See the video of the web interface\nIt is the interface available after connection between the CPA and the telephone. It allows to visualize the microparticle concentration values for PM1, PM2.5 and PM10, in \u03bcg / m3. The index of air quality is AQI, represented by a number and a literal expression, according to the table of definition of the AQI index.\nThere is also the battery gauge.\nA section is dedicated to the automatic control of the output of control of the CPA, under the name of Fan Configuration. After the \":\" of the section title, the current mode is displayed (Automatic, Start, Stop). At the base, this output would control an air purification device (fan = fan). It is thus possible to force on or off, or leave it in automatic mode with a trip when the air exceeds an AQI index of 50.\nA section is dedicated to the \"Measure config\" measurement. After the \":\" is indicated the current mode (continued, periodic 5min, 15min, 30min, 1h, stop). It is thus possible to take measurements continuously (in fact the sampling period is close to 2 seconds), or every 5, 15, 30 min, 1h, or stop sampling.\nThe section \"Display Mode\" allows to choose how the information (all those available on the web interface) will be displayed on the box via multicolored LEDs. After the \":\" is indicated the current mode (Compiled, PM1.0, PM2.5, PM10). Each press of \"Display Mode\" switches from one display mode to another in the following order:\nCompiled\nPM1.0\nPM2.5\nPM10", "step_imgs": ["https://cdn.instructables.com/F6P/OWX0/JSUOZ48M/F6POWX0JSUOZ48M.LARGE.jpg"], "step_title": "Step 7: Web Interface 1/4"}, {"step": 8, "steps_text": "The meaning of the LED color in \"Compiled\" mode is as follows:\nBattery level:\n> 30% = green\n> 10% and <30%: orange\n<10% = red\nMemory level:\n> 30% = green\n> 10% and <30%: orange\n<10% = red\nControl output:\nHigh output: green\nLow output: red\nAutomatic control mode: blue", "step_imgs": ["https://cdn.instructables.com/FL6/SMQ2/JSUOZ4A1/FL6SMQ2JSUOZ4A1.LARGE.jpg"], "step_title": "Step 8: Web Interface 2/4"}, {"step": 9, "steps_text": "Output PM1.0, PM2.5 and PM10:\nThe color of the LED is that corresponding to the color table of the AQI index. The meaning of the color of the 10 LEDs in \"PM1.0, PM2.5, PM10\" mode is as follows:\nThe color of the LEDs represents the level of air pollution as indicated in the table of the AQI index. For example, if the LEDs are red, it means that the level of pollution is bad for health.\nThe number of LEDs lit represents the value of the AQI index for the color in question, as indicated in the table of the AQI index. For example, if there is only one green LED on 10, the index is 1 / 10th of the maximum green index, ie 50/10 = 5. If 5 green LEDs on 10, the value is 50 / 10x5 = 25. If 5 purple LEDs are lit, the value is (300-201) /10x5+201=250.5.\nEach time the push button is pressed, one of the 4 LEDs on the right flashes orange. It indicates which is the selected display mode:", "step_imgs": ["https://cdn.instructables.com/FX0/03HI/JSUOZ47X/FX003HIJSUOZ47X.LARGE.jpg", "https://cdn.instructables.com/FHW/MO3G/JSUOZ45W/FHWMO3GJSUOZ45W.LARGE.jpg"], "step_title": "Step 9: Web Interface 3/4"}, {"step": 10, "steps_text": "The \"Data Remaining\" section indicates the remaining memory space for saving the measurements. After the \":\" is indicated the remaining %. Pressing the \"clear memory\" button erases the memory. Pressing the \"download\" button starts the transfer of the samples to the PC.\nAt the end of the web interface, the table of the AQI index is displayed.", "step_imgs": [], "step_title": "Step 10: Web Interface 4/4"}, {"step": 11, "steps_text": "Switch the On / Off switch to the On position.\nA rainbow of LEDs appears to make sure all the LEDs work .... and then it's pretty.\nThe turquoise LEDs light up one after the other. This allows the particle sensor time to initialize.\nOne of the LED display modes appears.\nOn the phone or PC, choose the Wifi network starting with \"AQI_I3D-\"\nEnter the code \"AQI_index\"\nOpen for example Google and type in the address bar: 192.168.4.1\nThe web page is displayed\nThe video", "step_imgs": [], "step_title": "Step 11: Getting Started"}, {"step": 12, "steps_text": "To transfer the data from the box to the PC you must:\nConnect a micro USB cable / serial link (3v3 voltage level) to USB PC.\nOpen a serial terminal on the PC and configure it as follows: 9600 BAUDS, 1 stop bit, parity NONE, 1 start bit.\nSwitch the micro switch \"enable data upload\"\nOn the interface, press \"Download\"\nOn the serial terminal, wait for the end of transfer and copy the data.\nSwitch the micro switch \"enable data upload\" to the original position\nIf the CAP appears not to work, it is possible that the switch is not put back in place.", "step_imgs": [], "step_title": "Step 12: Transfer of Data to the PC"}, {"step": 13, "steps_text": "In the 5min, 15min, 30min, and 1h sampling modes, the CAP automatically goes into sleep after taking its measurement sample and does not wake until 5, 15, 30, or 60 minutes later. The autonomy of the CAP is thus extremely increased.", "step_imgs": [], "step_title": "Step 13: Standby Between Sampling Phase"}, {"step": 14, "steps_text": "In the case where the CAP has some operating problems, it is possible to reset all operating parameters and restart the CAP reliably. For that :\nTurn off the CAP Stay on the push button Light the CAP.\nThe rainbow of LED appears\nA turquoise LED strip appears in less than a second\nTurn off the CAP\nThe CAP is now reset.", "step_imgs": [], "step_title": "Step 14: Reset to Factory Mode"}, {"step": 15, "steps_text": "Is available here\nTo program the card it is necessary:\nOpen Arduino on the PC\nConfigure Arduino for the ESP8266 board\nConnect the UBS Micro USB / Serial Cable (3v3) between the card and the PC\nToggle the SW3 button to \"prgm\"\nStay on the \"SW1\" button\nSwitch on the device -> The device enters programming mode\nReleasing \"SW1\"\nUnder Arduino, start programming\nAfter the end of programming, switch \"SW3\" to \"SW3\"\nShut down and restart the device", "step_imgs": [], "step_title": "Step 15: The Program Under Arduino"}, {"step": 16, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/F4T/P6T8/JSUP01EG/F4TP6T8JSUP01EG.LARGE.jpg", "https://cdn.instructables.com/F79/X2HW/JSUP01EH/F79X2HWJSUP01EH.LARGE.jpg", "https://cdn.instructables.com/FVS/QS87/JSUP01EI/FVSQS87JSUP01EI.LARGE.jpg"], "step_title": "Step 16: Electrical Diagrams"}, {"step": 17, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/F3X/TQAY/JSUOZ4BG/F3XTQAYJSUOZ4BG.LARGE.jpg", "https://cdn.instructables.com/FYO/ATNB/JSUOZ4BC/FYOATNBJSUOZ4BC.LARGE.jpg"], "step_title": "Step 17: PCB"}, {"step": 18, "steps_text": "Here it is", "step_imgs": [], "step_title": "Step 18: Nomenclature"}, {"step": 19, "steps_text": "You want to do it, no worries, I propose several kits possible depending on the budget you want to put\nVisite my website (french version available)", "step_imgs": ["https://cdn.instructables.com/FQ2/YR5X/JSUOZ4F6/FQ2YR5XJSUOZ4F6.LARGE.jpg"], "step_title": "Step 19: Do It Yourself"}, {"step": 20, "steps_text": "The next step is to associate the device with an ionizer. So that the air is polluted, the device starts the ionizer, An ionizer allows somehow to drop the fine particles on the ground. It generates negative electrons that associate with surrounding gas and dust, turning their positive electric charge into a negative charge. As the ground and most objects have a positive charge, the negatively charged particles by the ionizer are attracted and sticks to them. The air is thus cleaned up. The ionization of the air is also a lot of other health benefits.\nToday, the ionizer works. This presentation will be the subject of an upcoming blog.", "step_imgs": [], "step_title": "Step 20: And More ..."}], "channel": "Sensors"}, {"category": "Technology", "description": "Anyone who plays arounsd with elecronics knows how important a 3rd hand is. It gives you the ability to hold solder in one hand and the soldering iron in the other and easily add solder to a component.\nI've been using some homemade 3rd hands for some time and can't imagine building a circuit without one. Recently I was using a couple of magnets for a project and a resister got stuck to it. I had a bit of an epiphany and realised that adding a magnet to a 3rd hand would be a quick and easy way to hold a part whist I add solder to it.\nThe project is an easy one and will definitely become a welcome addition to your solder station.", "title": "Magnetic 3rd Hand", "url": "https://www.instructables.com/id/Magnetic-3rd-Hand/", "steps": [{"step": 1, "steps_text": "Parts:\n1. PVC Cap 100mm - Hardware store. If you are in Australia then you can get these from Bunnings\n2. 3 X Square washers - Hardware store, Bunnings\n3. Plastic Flexible Water Oil Coolant Pipe Hose - eBay\n4. Rare Earth Magnets - eBay\nTools:\n1. Epoxy Glue\n2. Drill\n3. Superglue", "step_imgs": ["https://cdn.instructables.com/FOX/DSW9/JSUP4X9G/FOXDSW9JSUP4X9G.LARGE.jpg", "https://cdn.instructables.com/F19/456G/JSUP4X9J/F19456GJSUP4X9J.LARGE.jpg", "https://cdn.instructables.com/FU4/AC4S/JSUP4X9I/FU4AC4SJSUP4X9I.LARGE.jpg"], "step_title": "Step 1: Parts and Tools"}, {"step": 2, "steps_text": "Steps:\n1. First drill a hole into the middle of the PVC cap. The hole shjould be big enough to fit the tap section of the pipe into it.\n2. Next, scratch-up the inside of the PVC cap. This will ensure that the epoxy glue sticks to the bottom of the cap\n3. Add some epoxy glue to the bottom of the cap and add one of the square washers to the bottom.\n4. Add more glue to the washer and glue the other 2 washers so there are 3 in total. Enure the hole is aligned to the hole in the cap", "step_imgs": ["https://cdn.instructables.com/F4N/84PB/JSUP4X9K/F4N84PBJSUP4X9K.LARGE.jpg", "https://cdn.instructables.com/FFT/V1B3/JSUP4X9L/FFTV1B3JSUP4X9L.LARGE.jpg", "https://cdn.instructables.com/F17/ILIS/JSUP4XA3/F17ILISJSUP4XA3.LARGE.jpg", "https://cdn.instructables.com/FKE/4VW3/JSUP4XA6/FKE4VW3JSUP4XA6.LARGE.jpg", "https://cdn.instructables.com/FQ9/DU1N/JSUP4XA7/FQ9DU1NJSUP4XA7.LARGE.jpg", "https://cdn.instructables.com/FIS/1PX9/JSUP4XAA/FIS1PX9JSUP4XAA.LARGE.jpg"], "step_title": "Step 2: Drilling and Gluing"}, {"step": 3, "steps_text": "Steps:\n1. On the tap section, there is a plastic hex nut which fits nice and tightly into the holes of the washer\n2. Place the bottom of the tap into the top of the cap and with a small hammer, tap it into place\n3. Make sure that the end of the tap is flush with the washer so the cap sits flat", "step_imgs": ["https://cdn.instructables.com/FWK/Q2AS/JSUP4XAS/FWKQ2ASJSUP4XAS.LARGE.jpg", "https://cdn.instructables.com/FV2/F3US/JSUP4XAR/FV2F3USJSUP4XAR.LARGE.jpg"], "step_title": "Step 3: Add the Tap Section to the Base"}, {"step": 4, "steps_text": "Steps:\n1. Add some superglue to the top of the pipe section.\n2. Next, place the magnet on top of the pipe and hold down until it is stuck fast\n3. I also added another magnet to the one glued to the pipe which gives you more area to attach components.", "step_imgs": ["https://cdn.instructables.com/FOY/UW96/JSUP4XAJ/FOYUW96JSUP4XAJ.LARGE.jpg", "https://cdn.instructables.com/FO4/AS85/JSUP4XAK/FO4AS85JSUP4XAK.LARGE.jpg", "https://cdn.instructables.com/F91/EZ2O/JSUP4XAE/F91EZ2OJSUP4XAE.LARGE.jpg", "https://cdn.instructables.com/FLY/VF4H/JSUP4XAM/FLYVF4HJSUP4XAM.LARGE.jpg", "https://cdn.instructables.com/FTJ/0QUC/JSUP4XAO/FTJ0QUCJSUP4XAO.LARGE.jpg"], "step_title": "Step 4: Adding a Magnet"}, {"step": 5, "steps_text": "Steps:\n1. Push the pipe into the tap section. If you need to reduce the size of the pipe, then just pull a few sections off which is what I did.\n2. Now you are ready to use the 3rd hand. Just place whatever component againt the magnet which will hold it in place and start to solder.", "step_imgs": ["https://cdn.instructables.com/FKG/65X7/JSUP4XB4/FKG65X7JSUP4XB4.LARGE.jpg", "https://cdn.instructables.com/F7J/P8VZ/JSUP4XBX/F7JP8VZJSUP4XBX.LARGE.jpg", "https://cdn.instructables.com/F08/UTJB/JSUP4XC2/F08UTJBJSUP4XC2.LARGE.jpg", "https://cdn.instructables.com/F45/5EFB/JSUP4XC8/F455EFBJSUP4XC8.LARGE.jpg", "https://cdn.instructables.com/FWC/YM06/JSUP4XC9/FWCYM06JSUP4XC9.LARGE.jpg"], "step_title": "Step 5: Finishing Up"}], "channel": "Gadgets"}, {"category": "Technology", "description": "This unique clock reminds you to appreciate every single day, by displaying your current age in days (or weeks) on a seven segment display.\nThe inspiration of using a picture frame as enclosure and displaying something motivating came from awall99\u00b4s LightBox project. https://www.instructables.com/id/Ribba-LightBox-Ke...", "title": "Arduino LifeClock", "url": "https://www.instructables.com/id/Arduino-LifeClock/", "steps": [{"step": 1, "steps_text": "Electronics:\nArduino Pro Mini 5V (or any other arduino with >= 12 GPIO Pins)\n4 Digit 7 Segment Display\nDS3231 Real Time Clock Module\n4x 200 Ohm Resistors\nMaterials:\nPicture Frame\nPerf Board (matching size)\nMicroUSB Breakout (or any other 5-12V power source)\nWires/Hardwires\nPin Headers (male, female)\nTools:\nSoldering Iron\nFTDI Programmer (in case of a pro mini)", "step_imgs": ["https://cdn.instructables.com/FQV/PQ8Q/JSL385PM/FQVPQ8QJSL385PM.LARGE.jpg", "https://cdn.instructables.com/F82/F35F/JSL385IS/F82F35FJSL385IS.LARGE.jpg", "https://cdn.instructables.com/FQ0/Z2S3/JSL385KV/FQ0Z2S3JSL385KV.LARGE.jpg", "https://cdn.instructables.com/F0I/IMBY/JSL385PL/F0IIMBYJSL385PL.LARGE.jpg", "https://cdn.instructables.com/F8K/9LUQ/JSL385ON/F8K9LUQJSL385ON.LARGE.jpg", "https://cdn.instructables.com/FZ6/OCMA/JSL385MR/FZ6OCMAJSL385MR.LARGE.jpg", "https://cdn.instructables.com/F50/47Z2/JSL385LT/F5047Z2JSL385LT.LARGE.jpg"], "step_title": "Step 1: You Will Need"}, {"step": 2, "steps_text": "Before permanently assembling the components we need to check if everything works properly.\nConnect everything according to the schematic\nCheck the COM-Port and install the latest drivers\nCompile and upload the provided sketch\nConnections:\nCommon Cathode Display\nPin 2 - COM4 (resistor)\nPin 3 - g\nPin 4 - c\nPin 5 - DP\nPin 6 - d\nPin 7 - e\nPin 8 - COM1 (resistor)\nPin 9 - a\nPin 10 - f\nPin 11 - COM2 (resistor)\nPin 12 - COM3 (resistor)\nPin 13 - b\nDS3231\nGND - GND\n5V/VCC - VCC\nA4 - SDA\nA5 -SCL\nIf you are using a common anode display you need to make sure to adjust the pins on the breadboard or later on in the code.", "step_imgs": ["https://cdn.instructables.com/FFL/U74R/JSL38ALM/FFLU74RJSL38ALM.LARGE.jpg", "https://cdn.instructables.com/FKN/VTIR/JSL38DI8/FKNVTIRJSL38DI8.LARGE.jpg", "https://cdn.instructables.com/FA1/D44V/JSL38E6L/FA1D44VJSL38E6L.LARGE.jpg"], "step_title": "Step 2: Prototyping"}, {"step": 3, "steps_text": "We need to modify some of our components, so that they fit inside the frame.\nArduino\nSolder on male pin headers (as shown)\nAdd two wires to SDA and SCL\nDS3231\nDesolder the 6 pinheaders\nSolder on 4 pin headers on the other side (as shown)\nMicroUSB Breakout\nSolder on pin headers", "step_imgs": ["https://cdn.instructables.com/F4X/76V9/JSSTYBWT/F4X76V9JSSTYBWT.LARGE.jpg", "https://cdn.instructables.com/FX7/29GK/JSSTZDOY/FX729GKJSSTZDOY.LARGE.jpg"], "step_title": "Step 3: Modify the Parts"}, {"step": 4, "steps_text": "If everything worked flawlessly, you can start building the circuit board. The whole circuit board has to fit into the chosen picture frame. If your perf board has different dimensions you probably need to adjust the placement of the components.\n1) Arrangement:\nPosition every component as shown in the schematic. If the diameter of your wires is >1mm you need to drill two holes to put the A4-SDA (grey) and A5-SDA (white) through it.\n2) Attaching:\nIf every component is placed properly you can begin soldering on the components. Make sure to remove the remaining legs afterwards.\n3) Wiring:\nYou can either use ordinary cables, by simply connecting them on the backside of the perf board, or silver wire on the front side. For doing so, you need to cut the silver wire to the matching length and bend its ends. Now you just have to place them accordingly and solder them on.\n4) Check Connections:\nIf something does not work as it should or if you want be sure that you have connected everything correctly, you can check it using the continuity functionality of your multimeter.", "step_imgs": ["https://cdn.instructables.com/FKO/XBRS/JSUOZ906/FKOXBRSJSUOZ906.LARGE.jpg", "https://cdn.instructables.com/F0A/DQPD/JSSTZHZT/F0ADQPDJSSTZHZT.LARGE.jpg", "https://cdn.instructables.com/FIP/96WK/JSUOZ90W/FIP96WKJSUOZ90W.LARGE.jpg"], "step_title": "Step 4: Building the Circuit Board"}, {"step": 5, "steps_text": "Drill 4 mounting holes and 1 hole for cables into the back plate of your frame\nScrew down the perf board (additionally with a few standoffs)\nFix the microUSB breakout on the backside and connect it with the power cables (RAW, GND)\nDepending on what you prefer, you can put the glass pane back in or use some kind of passepartout.", "step_imgs": ["https://cdn.instructables.com/FXO/KK42/JSUP1FKC/FXOKK42JSUP1FKC.LARGE.jpg"], "step_title": "Step 5: Modify the Picture Frame"}, {"step": 6, "steps_text": "Before uploading the code you need to make sure to install the necessary libraries and to define two parameters.\n1) Your age in days (line 21) [https://www.calculator.net/age-calculator.html]\n2) Additionally the time of your birth (line 23)\nIf the displayed value is wrong or needs to be changed, you have to clear the EEPROM!\nHopefully I could inspire you with that project. If you have any questions or improvements, please tell me :^)", "step_imgs": ["https://cdn.instructables.com/F3N/BT75/JSSUO5YE/F3NBT75JSSUO5YE.LARGE.jpg"], "step_title": "Step 6: The Code"}], "channel": "Arduino"}, {"category": "Technology", "description": "TESS-W is a photometer designed to measure and continuous monitoring the night sky brightness for ligth pollution studies. It was created during the STARS4ALL H2020 European Project with an open design (hardware and software). The TESS-W photometer has been designed to send data via WIFI. The data is visualized in real time and shared (open data). Browse http://tess.stars4all.eu/ for more information.\nThis document contents some technical details of the TESS-W night sky brightness photometer and describes how to build it. It includes the electronic and optical schematics of the sensor and also the weather proof enclosure.\nMore information about the TESS photometer was presented in Zamorano et al. \u201cSTARS4ALL night sky brightness photometer\u201c at Artificial Light At Night Meeting (ALAN2016) Cluj, Napoca, Romania, september 2016.\nTESS-W has developped by a team and the design is based in the work of Crist\u00f3bal Garc\u00eda.\nThis is the first working version of the Instructables. Keep tuned.", "title": "TESS-W Night Sky Brightness Photometer", "url": "https://www.instructables.com/id/TESS-W-Night-Sky-Brightness-Photometer/", "steps": [{"step": 1, "steps_text": "The photometer is enclosed into a weather proof box that contents the custom made electronics and optical parts. TESS has a custom made Printed Circuit Board (PCB) with an ESP8266. The ESP8266 is a low-cost WIFI chip with full TCP/IP stack and microcontroller capability. The electronic is used to reads the frequency provided by the TSL237 light sensor (for night sky brightness data) and also the MLX90614ESF-BA Infrared thermometer module (for cloud cover information).\nThe sky brightness detector is a TSL237 photodiode that converts light to frequency. It is the same sensor used by the SQM photometers. However, the bandpass is more extended to the red range with the use a dichroic filter (labelled UVIR on the plots) with respect to the BG38 color filter of the SQM.\nThe light from the sky is collected with the optics that includes a dichroic filter to select the bandpass. The filter fully covers the collector (1). The sensor (not seen in this picture) is located on a printed circuit board along with the custom-made electronics (2). The WIFI module (3) with an antenna inside the box that extends the WIFI range. A near-infrared sensor (4) is used to measure sky temperature. Finally, the heater (5) is switched on when needed to get rid of condensation on the window or even to melt the ice or snow (6). The field of view (FoV) is FWHM=17 degrees.\nThe spectral response of the TESS-W is compared with the astronomical Johnson B, V and R photometric bands and with the spectra of a the light polluted sky of Madrid and the Calar Alto astronomical observatory dark sky.", "step_imgs": ["https://cdn.instructables.com/F14/16DK/JSUOYMV5/F1416DKJSUOYMV5.LARGE.jpg", "https://cdn.instructables.com/F12/3K6T/JSUOYMTB/F123K6TJSUOYMTB.LARGE.jpg", "https://cdn.instructables.com/F89/XA71/JSUOYMTC/F89XA71JSUOYMTC.LARGE.jpg", "https://cdn.instructables.com/FTE/6ESX/JSUOYMTD/FTE6ESXJSUOYMTD.LARGE.jpg"], "step_title": "Step 1: Description of TESS-W"}, {"step": 2, "steps_text": "Electronic board\nThe main component of TESS is a custom made electronic board (PCB, printed circuit board).\nThe file needed for the PCB can be downloaded from\nhttps://github.com/cristogg/TESS-W/blob/master/docs/TessWifi-PCB-files.zip\nThe PCB has been designed to fit inside the selected enclosure box (see later).\nMain components\nThe PCBs electronic parts can be browsed on the accompanied the image and in the file provided.", "step_imgs": ["https://cdn.instructables.com/FFL/3U3D/JSUOYNSP/FFL3U3DJSUOYNSP.LARGE.jpg", "https://cdn.instructables.com/FP2/C5MD/JSUOYNSQ/FP2C5MDJSUOYNSQ.LARGE.jpg", "https://cdn.instructables.com/F46/4GAE/JSUOYNUW/F464GAEJSUOYNUW.LARGE.jpg", "https://cdn.instructables.com/F4Z/VXNN/JSUOYP00/F4ZVXNNJSUOYP00.LARGE.jpg"], "step_title": "Step 2: TESS-W Photometer Electronics"}, {"step": 3, "steps_text": "Design and components\nThe light from the sky is collected with the optics that includes a dichroic filter to select the bandpass. The filter fully covers the collector. The photometer enclosure has a clear window that allow the sky light to enter into the photometer. The inside is protected with a glass clear window.\nThe optical design is depicted in the first figure. The light pass the clear filter window (1) and enter through a hole (3) of the enclosure cover (2). The clear window is glued to the enclosure cover. The dichroic filter (4) is located on top of the light collector (5). The detector (6) has been placed at the collector exit.\nThe clear window\nThe first component is a transparent window that allows the light pass to the rest of the components and seals the photometer. This is a window made in glass (BAK7) because it should resist the weather. The window has a thickness of 2 mm and a diameter of 50 mm. The transmission curve has been measured at the LICA-UCM optical workbench. It is almost constant ~90% in the wavelength range 350nm -1050nm, that means that the clear window does not introduce change in the colour of the light.\nThe dichroic filter\nThe dichroic filter is a rounded filter of 20 mm in diameter to cover completely the light collector. This assures that there is no unfiltered light reaching the detector. This is important since the TSL237 detector is sensible in the infrared (IR). The UVIR filter was designed to transmit from 400 to 750 nm, i.e. it cuts the ultraviolet response of the detector below 400 nm and the IR response over 750 nm. The transmission curve is similar to a combination of a long pass and a short pass filter with almost flat response reaching almost 100% as measured in LICA-UCM optical workbench (see the plots at the description)\nThe light collector\nIn order to gather the light from the sky TESS uses a light collector. This collector is very cheap because it is made in plastic using injection moulding. This lenses are used to beam the light in flashlights. The inside part is a transparent paraboloid reflector. The black holder prevents the stray light to reach the detector.\nWe are using black light collectors with nominal 60 degrees FoV. When used in TESS the FoV is reduced due to the position of the detector outside the collector. The final measured FoV (including the possible vignetting from the enclosure cover) has been measured in the optical workbench. The angular response is similar to a Gaussian function of 17 degrees full width at half maximum (FWHM).\nThe box\nThe electronics and optics of the TESS photometer are protected by a simple enclosure based on a commercial plastic box that is suited to be outdoor and to resist the weathering.\nThe box is small (outside: 58 x 83 x 34 mm; inside: 52 x 77 x 20 mm). The box has a screw cover to access the inside. The sealed construction provides enough level of protection against the entry of both water and dust. To prevent that the screws suffer from rusting, the original screws have been changed by stainless steel screws.\n.", "step_imgs": ["https://cdn.instructables.com/F27/VV3O/JSUOYP6D/F27VV3OJSUOYP6D.LARGE.jpg", "https://cdn.instructables.com/FT1/W1KJ/JSUOYP6V/FT1W1KJJSUOYP6V.LARGE.jpg", "https://cdn.instructables.com/FBY/ZBVX/JSUOYP6U/FBYZBVXJSUOYP6U.LARGE.jpg"], "step_title": "Step 3: TESS-W Photometer Optics"}, {"step": 4, "steps_text": "The box\nThe electronics and optics of the TESS photometer are protected by a simple enclosure based on a commercial plastic box that is suited to be outdoor and to resist the weathering.\nThe box is small (outside: 58 x 83 x 34 mm; inside: 52 x 77 x 20 mm). The box has a screw cover to access the inside. The sealed construction provides enough level of protection against the entry of both water and dust. To prevent that the screws suffer from rusting, the original screws have been changed by stainless steel screws.\nBox machining\nIt is necessary to perform some simple machining on the box. The window that allow light to reach the light collector has a width of 20 mm in diameter. It is covered by a clear window that should be glued with weather resistant silicone. The small hole is the IR thermometer port and has 8.5 mm in diameter. On the other side of the box it is necessary a 12 mm hole for the cable gland. The two perforations of 2.5 mm are used to secure the heater to the box cover.", "step_imgs": ["https://cdn.instructables.com/F8R/FD7D/JSUP2J8G/F8RFD7DJSUP2J8G.LARGE.jpg", "https://cdn.instructables.com/FW1/48X0/JSUOYPIU/FW148X0JSUOYPIU.LARGE.jpg", "https://cdn.instructables.com/FWS/Q1DC/JSUOYPNF/FWSQ1DCJSUOYPNF.LARGE.jpg"], "step_title": "Step 4: TESS-W Enclosure"}, {"step": 5, "steps_text": "1. Preparation\n1. Paint the box inside in black.\nBox machining\n2. Drilling:\n\u25cf 1x 20 mm for the window.\n\u25cf 1x 12 mm for the cable gland.\n\u25cf 1x 8.5 mm for the thermopile.\n\u25cf 2x 2.5 mm for the heater.\n\u25cf 2x 1 mm on the side of the box.\n3. Drill the aluminium diffuser plate (1 mm thickness) for the heater resistance,\n4. Screw the resistance and plate to the cover.\n5. Glue the 8mm spacers for the PCB.\n6. Glue the clear window (the resistance heater should be screwed in place)\nThermopile\n7. Remove the voltage regulator and connect both terminals by soldering a bridge.\n8. Solder a single-head 4-pin wire to board connector of 60 mm length.\n9. Glue the thermopile to the cover.\nAntenna\n10. Drill a hole to secure the antenna to the box.\n11. Trim the corners of the antenna.\n12. Remove the ceramic antenna of the wifi module and also the antenna conector and the red LED.\n2. Mounting\nPlease follow this ordered sequence:\n1. Secure the antenna to the box using a screw.\n2. Place the cable gland and the power cord.\n3. Secure the collector (black cilinder) to the PCB (two screws).\n4. Secure the PCB to the box (two screws).\n5. Screw power cable to the green board connector. (Red wire to positive).\n6. Solder antenna cable to wifi module.\n7. Solder to resistance heater a single-head 2-pin wire to board connector cable of 55 mm.\n8. Connect the thermopile and the resistance (be careful not to break the PCB).\nThe resistance acts as a heater and is connected to the cover with a aluminium plate. The pictures explain the next processes: The antenna should be screwed to the box, the regulator of the thermopile has been replaced by a bridge, and the two spacers (in black) for the PCB should be be glued to the box. The inside of the box is painted in black.\nOne of the figures shows the original WIFI module that has a ceramic antenna and a socket to connect an extra antenna (top). We use an antenna whose cable is soldered to the wifi module (bottom). Note that the ceramic antenna, the socket and red LED near the cable have been removed.", "step_imgs": ["https://cdn.instructables.com/FV9/ZIW5/JSUOYQIA/FV9ZIW5JSUOYQIA.LARGE.jpg", "https://cdn.instructables.com/F9B/I6U3/JSUOYQI9/F9BI6U3JSUOYQI9.LARGE.jpg", "https://cdn.instructables.com/FAX/TIXF/JSUOYQI8/FAXTIXFJSUOYQI8.LARGE.jpg", "https://cdn.instructables.com/FUT/PKSH/JSUOYQI5/FUTPKSHJSUOYQI5.LARGE.jpg"], "step_title": "Step 5: Mounting the TESS-W Photometer"}, {"step": 6, "steps_text": "The photometers should be calibrated to assure that the measurements from different devices are consistent. The TESS-W are cross calibrated relative to a master photometer at Laboratorio de Investigaci\u00f3n Cient\u00edfica Avanzada (LICA) of the Universidad Complutense de Madrid.\nThe setup is an integrating sphere whose interior could be illuminated by a light source and with several optical ports to connect the photometers. The light source employed is a LED of 596 nm with 14 nm FWHM.\nIf you wish to calibrate your TESS-W photometer, you can contact LICA-UCM.", "step_imgs": ["https://cdn.instructables.com/F80/IEJ0/JSUOYSJR/F80IEJ0JSUOYSJR.LARGE.jpg", "https://cdn.instructables.com/FLG/OBZL/JSUOYSWG/FLGOBZLJSUOYSWG.LARGE.jpg", "https://cdn.instructables.com/FWA/F0L6/JSUOYSWM/FWAF0L6JSUOYSWM.LARGE.jpg"], "step_title": "Step 6: TESS-W Photometric Calibration"}, {"step": 7, "steps_text": "WIFI module software\nCommunication and software\nThe complete system includes a sensor network and a software broker that mediates between information producers and consumers that is reserved to calibrated sensors. Once you have calibrated your photometer (see Step 6), STARS4ALL will provide you with the credentials to publish in the broker.\nA sample consumer in Python to store data in an SQLite database has been developed. This consumer can be installed in one or many PCs or servers. The software main characteristics are listed below:\n\u25cf Custom software for TESS developed in C .\n\u25cf MQTT publisher software developed in the Arduino IDE and ESP8266 libraries.\n\u25cf MQTT Broker either in an in-house deployment or an available third party (ie test mosquitto.org)\n\u25cf MQTT subscriber software receiving data from publishers and storing it into a relational database (SQLite).\nMQTT is an M2M / Internet of Things lightweight protocol suited for constrained devices that requires far less overhead than HTTP based communications.\nEach sensor sends periodically measurements to a remote MQTT server through a local router. This server - named \u201cbroker\u201d in the MQTT world - receives data from many sensors and redistribute to all subscribed parties, thus decoupling publishers from consumers. The remote server can be deployed either in-house in a central facility for the project. Alternatively, we can use available, free MQTT brokers such as test.mosquitto.org.\nAny software client can subscribe to the broker and consume the information published by the TESS devices. An special MQTT client will be developed to collect all these data and store them in an SQLite database.\nDevice configuration\n\u25cf Instrument configuration will be reduced to a minimum to help maintenance.\n\u25cf Each device needs this configuration:\no WiFi SSID and password.\no Photometer calibration constant.\no MQTT Broker IP address and port.\no Instrument friendly name (unique per device)\no MQTT channel name (as described above)\nWiFi configuration\nWhen first connected to the power, TESS-W creates a WiFi access point. The user fills in the settings that includes the name (SSID) and password of the WiFi router, the zero point of the photometry and the Internet address and name of the broker repository. After a reset and switch off and switch on cycle, the TESS photometer begins to produce and to send data.\nAt first boot, TESS starts as an access point with the name TESSconfigAP. A mobile phone must connect to this access point.\n\u25cf Browse with an Internet browser the following URL: http://192.168.4.1\n\u25cf Fill in the form with the parameters listed in 2.3\n\u25cf Reboot the device, which will connect to the local router.\nWhen the device loses the link with the WiFi router, reboot and configures itself again as an access point, which is convenient to change the configuration.\nSoftware\nThe TESS-W Firmware an documentation can be found at the github repository\nhttps://github.com/cristogg/TESS-W\nFor the ESP8266\nhttps://github.com/cristogg/TESS-W/blob/master/tess-w-v2_0/tess-w-v2_0.ino.generic.bin\nFor the microprocessor\nhttps://github.com/cristogg/TESS-W/blob/master/tess-u/tess-u.hex", "step_imgs": ["https://cdn.instructables.com/FV5/HMGK/JSUOZ4C3/FV5HMGKJSUOZ4C3.LARGE.jpg", "https://cdn.instructables.com/FCI/P3BW/JSUOZ4QH/FCIP3BWJSUOZ4QH.LARGE.jpg", "https://cdn.instructables.com/FO0/M1BH/JSUOZ4T6/FO0M1BHJSUOZ4T6.LARGE.jpg"], "step_title": "Step 7: TESS-W Software"}, {"step": 8, "steps_text": "The STARS4ALL Foundation is the continuation of the STARS4ALL project that is in charge of the operation of the TESS-W photometers network. This is a citizen science project which produce data of interest for light pollution studies.\nOnce your photometer is calibrated and configured will start to send the measurements to the STARS4ALL infrastructure. These measurements can be visualized from our platform (http://tess.stars4all.eu/plots/). Plus, all data generated in the network can be downloaded from our Zenodo community (https://zenodo.org/communities/stars4all)", "step_imgs": ["https://cdn.instructables.com/F2J/U031/JSUOZ5U5/F2JU031JSUOZ5U5.LARGE.jpg", "https://cdn.instructables.com/FTS/B6XJ/JSUOZ654/FTSB6XJJSUOZ654.LARGE.jpg"], "step_title": "Step 8: Final Remarks"}], "channel": "Sensors"}, {"category": "Technology", "description": "This Instructable is a variant of the original IV Swinger 2:\nhttps://www.instructables.com/id/IV-Swinger-2-a-50-IV-Curve-Tracer/\nIf you came here from there, welcome!\nOtherwise, please visit that Instructable first. You may or may not end up back here depending on which variant you have chosen.", "title": "IV Swinger 2 - PCB (PV Cell, EMR)", "url": "https://www.instructables.com/id/IV-Swinger-2-PCB-PV-Cell-EMR/", "steps": [{"step": 1, "steps_text": "Please refer to Step 1 in the original Instructable:\nhttps://www.instructables.com/id/IV-Swinger-2-a-50-IV-Curve-Tracer/\nIf you are back here, it means you have chosen:\nPCB - PV cell version, electromechanical relay (EMR)\nAttached to this step are the following:\nPDF of the steps of this Instructable\nPDF of the schematic of this version\nPDF with images of the top and bottom of the PCB", "step_imgs": [], "step_title": "Step 1: Understand the HW Design / Choose Variant"}, {"step": 2, "steps_text": "Before spending time building the hardware, install the Arduino software and the IV Swinger 2 application on the laptop that you\u2019ll be using.\nInstall Arduino IDE:\nhttps://www.arduino.cc/en/Main/Software\nInstall IV Swinger 2 app:\nhttps://github.com/csatt/IV_Swinger/releases\nMake sure both of the above come up before proceeding. If necessary, upgrade the OS on your computer", "step_imgs": [], "step_title": "Step 2: Install Software"}, {"step": 3, "steps_text": "Currently, the PCB must be purchased from a manufacturing house that will actually fabricate it for your order. The downside of this is that you\u2019ll probably have to buy more than you need. I have used the following two:\nOSH Park:\nhttps://oshpark.com\nMade in USA\nCost: $25 for 3 PCBs (includes shipping)\nTime: < 12 days to ship\nPCBWay:\nhttps://www.pcbway.com\nMade in China\nCost: $5 for 10 PCBs + shipping ($16 DHL to CA)\nTime: < 5 days to ship\nAmazingly, I have put in orders to PCBWay on a Monday and had the boards in my hands in California on Friday.\nI have shared this PCB design on PCBWay, and you can order it directly using the following link:\nhttps://www.pcbway.com/project/shareproject/IV_Swinger_2_cell_Rev_A_2019_01_06.html\nAlternately, you can order PCBs from OSH Park (or anywhere else) by uploading the ZIP archive of the Gerber files, which are found in the GitHub repository:\nIV_Swinger/PCB/IV_Swinger_2_cell/Gerber/*.zip\nSoon, I hope to find someone who wants to sell individual PCBs on eBay (possibly in kits, that include all the other parts too).", "step_imgs": ["https://cdn.instructables.com/FKP/LTGN/JSUOUC21/FKPLTGNJSUOUC21.LARGE.jpg"], "step_title": "Step 3: Order PCB"}, {"step": 4, "steps_text": "The other necessary parts to build an IV Swinger 2 can all be purchased online from Amazon and Digi-Key.\nThe EMR PV cell version bill of materials (BOM) is attached to this step. It can also be downloaded from:\nhttps://github.com/csatt/IV_Swinger/raw/master/PCB/BOM/emr_cell_BOM.pdf\nThe BOM has an Amazon link and a Digi-Key link at the bottom. The Amazon link is a \u201cwish list\u201d that can be used to populate your cart. Some of the items come in quantities larger (in some cases much larger) than needed to build a single IV Swinger 2. You may, of course, choose to find equivalents that are offered in smaller quantities. Also, many of the items are things that you may already have, so don\u2019t necessarily just blindly order everything on the list.\nThe Digi-Key link is a pre-populated shopping cart. Again, you\u2019ll want to check if you already have any of the items before ordering.\nIn both cases, it is possible (or probable) that certain items will go out of stock or be discontinued, so you\u2019ll have to find suitable substitutions. Note that there are some of the Digi-Key items have *ALTERNATE* in the \u201cCustomer Reference field. These should only be ordered if the primary version of the same part is marked as \u201cbackorder\u201d.\nAlso included below is the link to donate to the original Arduino developers. I donate $5 for each $10 Arduino clone that I buy. This is your choice, but I think it is the right thing to do.\nDonate to Arduino.cc:\nhttps://www.arduino.cc/en/Main/Contribute", "step_imgs": [], "step_title": "Step 4: Buy Other Parts"}, {"step": 5, "steps_text": "Holding:\nVise\n3rd hand tool with magnifying glass\nTape (preferably Kapton, but Scotch ok)\nLong/needle-nosed pliers\nSoldering:\nSoldering iron (preferably temp controlled solder station)\nTip cleaner\nRosin core solder\nSolder sucker or solder wick\nCutting:\nWire cutter (flush cut)\nWire stripper\nDrilling:\nDrill\n1/16\" bit (pilot for 9/64\")\n9/64\" bit (standoffs)\n11/64\" bit (pilot for 13/64\")\n13/64\" bit (binding posts)\n3/8\" Forstner bit (preferred - USB cable hole)\nAlternate: 1/8\u201d, 3/16\u201d, 7/32\u201d, 1/4\u201d, 9/32\u201d, 5/16\u201d, 11/32\u201d, 3/8\u201d, and 25/64\u201d normal bits\nOther:\nDigital Multimeter (DMM)\nSmall Phillips screwdriver\n1.5V battery\nSharpie\nRuler\nWater spray bottle", "step_imgs": ["https://cdn.instructables.com/FFS/EJ3Z/JSUOUHUS/FFSEJ3ZJSUOUHUS.LARGE.jpg", "https://cdn.instructables.com/FXP/83FD/JSUOUHSP/FXP83FDJSUOUHSP.LARGE.jpg", "https://cdn.instructables.com/FC2/TQMT/JSUOUHSO/FC2TQMTJSUOUHSO.LARGE.jpg", "https://cdn.instructables.com/FH5/UFRD/JSUOUHVI/FH5UFRDJSUOUHVI.LARGE.jpg", "https://cdn.instructables.com/F2E/M3PJ/JSUOUHRZ/F2EM3PJJSUOUHRZ.LARGE.jpg"], "step_title": "Step 5: Gather / Buy Tools"}, {"step": 6, "steps_text": "NOTE: the video above is for the 1-channel relay used for the PV module version. The process is basically the same for the 2-channel relay, but there are some minor differences.\nThis will confirm that your 2-channel relay module is the correct type (active-low trigger) and that it is functional.\nWith Arduino powered off:\nConnect relay module GND to Arduino GND with female-to-male jumper___________\nConnect relay module VCC to Arduino 5V with female-to-male jumper ___________\nConnect female-to-male jumper to relay module IN1 (male end not connected) ___________\nConnect Arduino to laptop with USB cable:\nArduino: green LED should be on ___________\nArduino: yellow LED should be blinking once per second (assuming fresh-out-of box Arduino, running the default \"Blink\" sketch) ___________\nRelay module: no LEDs should be on ___________\nRelay module (K1 screw terminal): C (middle) terminal should have continuity with NC (bottom) terminal and no continuity with NO (top) terminal ___________\nConnect the male end of the jumper from the relay module IN1 pin to the GND socket near the blinking yellow LED on the Arduino ___________\nRelay module: should click and IN1 LED should come on ___________\nRelay module (K1 screw terminal): C (middle) terminal should have continuity with NO (top) terminal and no continuity with NC (bottom) terminal ___________\nConnect the male end of the jumper from the relay module IN1 pin to the \"13\" socket near the blinking yellow LED on the Arduino ___________\nRelay module: should click once per second ___________\nRelay module: IN1 LED should blink exactly opposite from the Arduino's yellow LED ___________\nNOTE: If your relay module behaves in the opposite manner to that described in each of the above three steps, that indicates that it is the wrong type, i.e. it has an active-high trigger instead of an active-low trigger. Your relay module may have a jumper that selects active-high/low, in which case you should change the jumper and try again. Otherwise, don\u2019t despair \u2013 there is a configuration setting in the software Preferences that will allow you to use your active-high relay.\nRepeat all of the above for the IN2 input and test the continuity on the screw terminal block K2.", "step_imgs": [], "step_title": "Step 6: Manually Test the Relay Module"}, {"step": 7, "steps_text": "Soldering NOTES:\nIf you don't have a lot of soldering experience, read this:\nAdafruit: Common Soldering Problems\nSoldering components to the PCB is pretty mistake-proof, but doing it in the order described is recommended (shortest -> tallest).\nSome components have a correct and an incorrect orientation and some don\u2019t matter. Pay attention to the instructions.\nI highly recommend using 63/37 0.031\u201d (or 0.8mm) rosin core solder. Yes, it is 37% lead, but it is not a health risk for you (really), and environmentally insignificant when used by hobbyists. You\u2019ll solder like a pro.", "step_imgs": ["https://cdn.instructables.com/F79/K6UP/JSUOUNSP/F79K6UPJSUOUNSP.LARGE.jpg"], "step_title": "Step 7: Prepare for Soldering"}, {"step": 8, "steps_text": "Solder 1/4W resistors to PCB:\nResistors can be inserted in either orientation. It is very important to use the correct value for each, however.\nInsert all resistors before soldering. Tape down on front to hold in place OR bend leads slightly on back.\n\nPV cell version (EMR) \u2013 16 joints:\nR3 (1k): _______\nR4 (1k): _______\nR5 (22k): _______\nR6 (22k): _______\nR7 (22k): _______\nRF (75k): _______\nRF1 (680k): _______\nRg (1k): _______\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface. Solder all 16 leads\n_______\nInspect with magnifying glass to make sure all joints are good and there are no solder bridges _______\nNOTE: A solder bridge is ok between the ends of RF and RG\nTrim all leads\n_______\nUse multimeter to measure exact resistances of soldered resistors:\nWith the PCB still upside down, measure the resistances with a DMM. The resistances (but unfortunately not the names) are marked on the back. Record the exact values of the ones marked with an asterisk (*) below \u2013 these values will be used later (\u201cStep 28: Apply resistor calibration\u201d). The others should just be close to their specified value (should be 1%, but don\u2019t worry as long as it is < 10%) - the main point is to catch any mistakes you might have made.\n\nPV cell version (EMR):\nR3 (1k): _______\nR4 (1k): _______\nR5 (22k): _______\nR6 (22k): _______\nR7 (22k): _______\nRF (75k): _______ *\nRF1 (680k): _______ *\nRG (1k): _______ *", "step_imgs": ["https://cdn.instructables.com/FGR/TQ6Z/JSUOUOFM/FGRTQ6ZJSUOUOFM.LARGE.jpg", "https://cdn.instructables.com/F7O/HFOK/JSUOUPK9/F7OHFOKJSUOUPK9.LARGE.jpg"], "step_title": "Step 8: 1/4W Resistors"}, {"step": 9, "steps_text": "Solder IC sockets to PCB \u2013 16 joints:\nInsert both sockets before soldering. Tape down on front to hold in place.\nMake sure notch is on the left end as marked on the PCB\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface and solder all 16 pins\n________\nInspect with magnifying glass to make sure all joints are good\n________\nIf you have opted not to use sockets, solder the ICs directly to the PCB instead of the sockets. Make sure dot is on the left end of the TLV2462 (pin 1). Make sure notch and dot are on the left end of the MCP3202 (pin 1).", "step_imgs": ["https://cdn.instructables.com/FIX/TIZ1/JSUOUQ73/FIXTIZ1JSUOUQ73.LARGE.jpg", "https://cdn.instructables.com/FH9/HY8I/JSUOUQ4T/FH9HY8IJSUOUQ4T.LARGE.jpg"], "step_title": "Step 9: IC Sockets"}, {"step": 10, "steps_text": "The shunt resistor lies flat on the PCB and should be soldered down at this point.\nSolder horizontal shunt resistor to PCB \u2013 2 joints:\nInsert 5m\u03a9 shunt resistor (either way). Tape down to hold in place.\nSHUNT: ________\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface and solder both leads\n________\nTrim both leads\n_______\nRe-flow/add solder on both leads\n_______\n(This is because leads are thick, and may not have heated well before trimming)\nInspect with magnifying glass to make sure joints are good\n________", "step_imgs": ["https://cdn.instructables.com/FBK/AZ75/JSUOUVA3/FBKAZ75JSUOUVA3.LARGE.jpg", "https://cdn.instructables.com/FU0/0S2T/JSUOUVDL/FU00S2TJSUOUVDL.LARGE.jpg"], "step_title": "Step 10: Horizontal Shunt Resistor"}, {"step": 11, "steps_text": "Solder stacking connectors and female header to PCB \u2013 30 joints:\nInsert stacking connectors A1, A2, and A3 and female header FH. These connectors are symmetrical, so there\u2019s no \u201cbackwards\u201d. Tape down to hold in place.\nA1 (10 pin): ________\nA2 (8 pin): ________\nA3 (8 pin): ________\nFH (4 pin): ________\n\nNOTES: Stacking connector A4 is not needed. Stacking connector A1 can be 8-pin (pins 9 and 10 are not used).\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface and solder all pins\n________\nNOTE: the pins on A1, A2, and A3 that are actually used on the PCB are circled on the back of the PCB. Soldering the others provides physical support only.\nInspect with magnifying glass to make sure joints are good and there are no solder bridges\n________", "step_imgs": ["https://cdn.instructables.com/FMN/BFVJ/JSUOUVVB/FMNBFVJJSUOUVVB.LARGE.jpg", "https://cdn.instructables.com/FT0/JQA3/JSUOUVVA/FT0JQA3JSUOUVVA.LARGE.jpg"], "step_title": "Step 11: Stacking Connectors and Female Header"}, {"step": 12, "steps_text": "The cell versions need either a x1 DIP switch or a 2-pin jumper header. Both have the same purpose \u2013 to select whether current measurements are multiplied by a factor of approximately 10 (for lower power PV cells). Only one of these should be installed.\nSolder x1 DIP switch (or jumper header) to PCB \u2013 2 joints:\nInsert x1 DIP switch with the \u201cON\u201d end toward the top of the board. Tape down to hold in place. OFF=LO_CUR: ________ (PHOTOS SHOW THIS OPTION)\n-OR-\nInsert 2-pin jumper header. Tape down to hold in place.\nJP: ________\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface and solder both pins\n________\nInspect with magnifying glass to make sure joints are good and there are no solder bridges\n________", "step_imgs": ["https://cdn.instructables.com/FYV/0UFJ/JSUOUWAU/FYV0UFJJSUOUWAU.LARGE.jpg", "https://cdn.instructables.com/FJ9/24PN/JSUOUWAH/FJ924PNJSUOUWAH.LARGE.jpg"], "step_title": "Step 12: DIP Switch or Jumper Header"}, {"step": 13, "steps_text": "Solder screw terminal blocks to PCB \u2013 4 joints:\nInsert screw terminal blocks with the openings facing left. Tape down to hold in place.\nJ1: ________\nJ2: ________\nNOTE: The screw terminal blocks may be omitted entirely, soldering the 18ga wire directly to the holes in the PCB (later).\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface and solder all joints\n________\nInspect with magnifying glass to make sure joints are good and there are no solder bridges\n________", "step_imgs": ["https://cdn.instructables.com/FT5/R4NL/JSUOX3FZ/FT5R4NLJSUOX3FZ.LARGE.jpg", "https://cdn.instructables.com/FPR/ULO9/JSUOX2XS/FPRULO9JSUOX2XS.LARGE.jpg"], "step_title": "Step 13: Screw Terminal Blocks"}, {"step": 14, "steps_text": "The small filter capacitors are not polarized, so it doesn\u2019t matter which lead goes in which hole.\nSolder 0.1uF capacitors to PCB - 4 joints:\nInsert both capacitors before soldering. Bend leads on back to hold in place.\nC3: ________\nC6: ________\nFlip board upside down and hold with vise or 3rd hand tool and solder all four joints\n________\nInspect with magnifying glass to make sure joints are good and there are no solder bridges\n________\nTrim all 4 leads\n_______\nSolder 2.2nF (2200pF) capacitors to PCB - 4 joints:\nInsert both capacitors before soldering. Bend leads on back to hold in place.\nC4: ________\nC5: ________\nFlip board upside down and hold with vise or 3rd hand tool and solder all four joints\n________\nInspect with magnifying glass to make sure joints are good and there are no solder bridges\n________\nTrim all 4 leads\n_______", "step_imgs": ["https://cdn.instructables.com/FKJ/WZR7/JSUOX3RJ/FKJWZR7JSUOX3RJ.LARGE.jpg", "https://cdn.instructables.com/FLE/G1GS/JSUOX3QS/FLEG1GSJSUOX3QS.LARGE.jpg", "https://cdn.instructables.com/FQ5/GSFL/JSUOX3Q0/FQ5GSFLJSUOX3Q0.LARGE.jpg"], "step_title": "Step 14: Filter Capacitors"}, {"step": 15, "steps_text": "The purpose of the bypass diode is to protect the electronics in case the PV is connected to the IV Swinger 2 backwards.\nThe cell versions require one 15A, 45V bypass diode (15SQ045).\nSolder bypass diode to PCB \u2013 2 joints:\nBend lead on striped end of diode around the diode so that it points in the same direction as the other lead.\nInsert leads as follows:\nPad D1, striped end (top): ________\nPad D2, non-striped end (bottom): ________\nFlip board upside down and hold with vise or 3rd hand tool and solder both (or all four) leads\n________\nTrim leads\n_______\nRe-flow/add solder on both/all leads\n_______\n(This is because leads are thick, and may not have heated well before trimming)\nInspect with magnifying glass to make sure joints are good\n________", "step_imgs": ["https://cdn.instructables.com/FKU/ZE22/JSUOX4F2/FKUZE22JSUOX4F2.LARGE.jpg", "https://cdn.instructables.com/F6A/1V6E/JSUOX4F0/F6A1V6EJSUOX4F0.LARGE.jpg", "https://cdn.instructables.com/FM5/QBW4/JSUOX4EU/FM5QBW4JSUOX4EU.LARGE.jpg", "https://cdn.instructables.com/FRN/Y3E7/JSUOX4ET/FRNY3E7JSUOX4ET.LARGE.jpg"], "step_title": "Step 15: Bypass Diode"}, {"step": 16, "steps_text": "Solder load capacitors to PCB:\nCell versions use 22000\u00b5F, 6.3V load capacitors.\nThese are polarized electrolytic capacitors, so orientation is important.\nInsert load capacitors in position. Stripe side (shorter lead) goes to the right \u2013 this is the negative lead. Tape to hold in place.\nC1 ________\nC2 ________\nFlip board upside down and hold with vise or 3rd hand tool\n________\nSolder all 4 leads\n________\nTrim all 4 leads\n_______\nRe-flow/add solder on all 4 leads\n_______\n(This is because leads are thick, and may not have heated well before trimming)\nInspect with magnifying glass to make sure joints are good\n________", "step_imgs": ["https://cdn.instructables.com/F2D/PS48/JSUOX4XX/F2DPS48JSUOX4XX.LARGE.jpg", "https://cdn.instructables.com/FEU/ADU0/JSUOX4XP/FEUADU0JSUOX4XP.LARGE.jpg"], "step_title": "Step 16: Load Capacitors"}, {"step": 17, "steps_text": "Some people think it is important to clean off the flux residue from the PCB after soldering. It makes it looks nicer, but since the PCB sits on top of the Arduino, you don\u2019t see the back anyway.\nFunctionally, it shouldn\u2019t matter. The solder manufacturer Kester says this:\n\u201cRosin flux residues are non-conductive and non-corrosive. Under normal circumstances they do not have to be removed from a printed circuit assembly. Rosin residue removal would be for cosmetic considerations. In an environment where the working temperature of the assembly will exceed 200\u00b0F the rosin residues will melt and become conductive, in these situations flux removal is required.\u201d\nIf you do want to clean it off, see this Instructable:\nhttps://www.instructables.com/id/Cleaning-up-your-PCB/", "step_imgs": [], "step_title": "Step 17: Optionally Clean Flux Residue From PCB"}, {"step": 18, "steps_text": "Using the digital multimeter (DMM) set on the continuity check (beep), check that there is no continuity between the following:\nPower to ground (mandatory):\nLeft IC socket, pin 8 to pin 4\nOR\nRight IC socket, pin 8 to pin 4\nOther (recommended):\nAll \u201cneighbor\u201d pins or solder joints. None should indicate continuity, except the pairs circled in the pictures which are connected.\nThe idea is to find solder bridges that you didn\u2019t see visually", "step_imgs": ["https://cdn.instructables.com/FXI/4E38/JSUOX5PR/FXI4E38JSUOX5PR.LARGE.jpg", "https://cdn.instructables.com/F4Q/O0IW/JSUOX5QB/F4QO0IWJSUOX5QB.LARGE.jpg", "https://cdn.instructables.com/FER/JBAG/JSUOX5QA/FERJBAGJSUOX5QA.LARGE.jpg"], "step_title": "Step 18: Check for Shorts"}, {"step": 19, "steps_text": "Static electricity can destroy ICs. Take off your shoes and touch something metal connected to ground before handling them, if possible.\nInsert TLV2462 in left socket _________\nMake sure dot is on the left end (pin 1)\nLegs may have to be bent inward slightly\nInsert MCP3202 in right socket __________\nMake sure notch and dot are on the left end (pin 1)\nLegs may have to be bent inward slightly", "step_imgs": ["https://cdn.instructables.com/FL8/WI08/JSUOX63D/FL8WI08JSUOX63D.LARGE.jpg", "https://cdn.instructables.com/FCB/2E0I/JSUOX6LM/FCB2E0IJSUOX6LM.LARGE.jpg"], "step_title": "Step 19: Insert ICs"}, {"step": 20, "steps_text": "Prepare load circuit wires:\nNOTE: This can be any stranded AWG 18 or AWG 16 insulated wire such as from a typical household extension/lamp cord or heavier speaker wire. AWG 18 solid core is fine too. If solid core is used, ignore the instructions to twist and \u201ctin\u201d the strands.\n\"BLK1\": BLK1 (lower black) binding post to B1 screw terminal on PCB (J1)\nCut to length: 9 cm\n________\nStrip 1 cm on each end and twist strands\n________\nCrimp cable ring connector on one end using pliers (or vise / ViseGrips / crimping tool)\n________\nHeat crimp with the soldering iron and flow solder into strands\n________\nHeat the strands of the other twisted end and flow solder into the strands (i.e. \"tin\" it)\n________\n\"RED1_A\": RED1 (lower red) binding post to relay module #1 NO terminal and to R1 screw terminal on PCB (J1)\nThis is a \u201cY\u201d with a cable ring connector in the middle.\nCut two wires to length: 9cm each\n1: ________\n2: ________\nStrip 1 cm on each end of both and twist strands\n1: ________\n2: ________\nInsert one end of each into the cable ring connector and crimp cable ring connector using pliers (or vise / ViseGrips / crimping tool)\n________\nHeat crimp with the soldering iron and flow solder into strands\n________\nHeat the strands of the other twisted ends and flow solder into the strands (i.e. \"tin\" them)\n________\n\u201cRED_1B\u201d: RED1 (lower red) binding post to relay module #2 NC terminal\n\u201cBLK2\u201d: BLK2 (upper black) binding post to relay module #2 NO terminal\n\u201cRED2\u201d: RED2 (upper red) binding post to relay module #2 C terminal\nCut to length: 9 cm\nRED_1B: ________\nBLK2: ________\nRED2: ________\nStrip 1 cm on each end and twist strands\nRED_1B: ________\nBLK2: ________\nRED2: ________\nCrimp cable ring connector on one end using pliers (or vise / ViseGrips / crimping tool) RED_1B: ________\nBLK2: ________\nRED2: ________\nHeat crimp with the soldering iron and flow solder into strands\nRED_1B: ________\nBLK2: ________\nRED2: ________\nHeat the strands of the other twisted end and flow solder into the strands (i.e. \"tin\" it)\nRED_1B: ________\nBLK2: ________\nRED2: ________\n\"Relay C\": Relay module #1 C terminal to Relay C screw terminal on PCB (J2)\n\u201cRelay NC\u201d: Relay module #1 NC terminal to Relay NC screw terminal on PCB (J2)\nCut two wires to length: 9 cm each\nRelay C: ________\nRelay NC: ________\nStrip 1 cm on each end of each and twist strands\nRelay C: ________\nRelay NC: ________\nHeat the strands of both ends of each and flow solder into the strands (i.e. \"tin\" them) Relay C: ________\nRelay NC: ________", "step_imgs": ["https://cdn.instructables.com/FLW/YPZM/JSUOXAZH/FLWYPZMJSUOXAZH.LARGE.jpg"], "step_title": "Step 20: Prepare Load Circuit Wires"}, {"step": 21, "steps_text": "Refer to the drawings of off-PCB connections for this step. These connections use the load circuit wires that were prepared in the previous step.\nMake binding post connections:\nRemove outer nuts and washers from threaded posts\n________\nInsert threaded post of black side through the cable ring connector on load circuit wire:\n\u201cBLK1\"\n________\nInsert threaded post of red side through the cable ring connectors on load circuit wires:\n\u201cRED1_A\u201d and \u201cRED_1B\u201d\n________\nInsert threaded post of black side of second binding post through the cable ring connector on load circuit wire\n\u201cBLK2\u201d\n________\nInsert threaded post of red side of second binding post through the cable ring connector on load circuit wire \u201cRED2\u201c\n________\nPut washers back on\n________\nPut nuts on and tighten\n________\nMake PCB connections:\nLoosen screw and insert the twisted/soldered end of the load circuit wire from the black binding post into the lower hole of screw terminal J1 and tighten down the screw.\n\u201cBLK1\u201d\n_________\nLoosen screw and insert the twisted/soldered end of the load circuit wire from the red binding post into the adjacent hole of screw terminal J1 and tighten down the screw.\n\u201cRED1_A\u201d\n_________\nLoosen screw and insert one twisted/soldered end of the \u201cRELAY NC\u201d load circuit wire into the upper hole of screw terminal J2 and tighten down the screw.\n\u201cRELAY NC\u201d\n_________\nLoosen screw and insert one twisted/soldered end of the \u201cRELAY C\u201d load circuit wire into the lower hole of screw terminal J2 and tighten down the screw.\n\u201cRELAY C\u201d\n_________\nMake relay module switching side (screw-down) connections:\nLoosen screw and insert the twisted/soldered end of the \u201cRED1_A\u201d load circuit wire into the top (\u201cNormally Open\u201d - NO) screw terminal hole on the relay #1 module (lower module) and tighten down the screw. \u201cRED1_A\u201d\n_________\nLoosen screw and insert the end of the \u201cRELAY C\u201d load circuit wire into the center (\u201cCommon\u201d - C) screw terminal hole on the relay #1 module (lower module) and tighten down the screw.\n\u201cRELAY C\u201d\n_________\nLoosen screw and insert the end of the \u201cRELAY NC\u201d load circuit wire into the bottom (\u201cNormally Closed \u2013 NC) screw terminal hole on the relay #1 module (lower module) and tighten down the screw.\n\u201cRELAY NC\u201d\n__________\nLoosen screw and insert the twisted/soldered end of the \u201cBLK2\u201d load circuit wire into the top (\u201cNormally Open\u201d - NO) screw terminal hole on the relay #2 module (upper module) and tighten down the screw. \u201cBLK2\u201d\n_________\nLoosen screw and insert the end of the \u201cRED2\u201d load circuit wire into the center (\u201cCommon\u201d - C) screw terminal hole on the relay #2 module (upper module) and tighten down the screw.\n\u201cRED2\u201d\n_________\nLoosen screw and insert the end of the \u201cRED1_B\u201d load circuit wire into the bottom (\u201cNormally Closed \u2013 NC) screw terminal hole on the relay #2 module (upper module) and tighten down the screw.\n\u201cRED1_B\u201d\n__________", "step_imgs": ["https://cdn.instructables.com/FSV/J6QI/JSUOXGKX/FSVJ6QIJSUOXGKX.LARGE.jpg", "https://cdn.instructables.com/FTF/HDFG/JSUOXHS4/FTFHDFGJSUOXHS4.LARGE.jpg", "https://cdn.instructables.com/F31/2VFZ/JSUOXHS3/F312VFZJSUOXHS3.LARGE.jpg", "https://cdn.instructables.com/FNP/XE11/JSUOXIFL/FNPXE11JSUOXIFL.LARGE.jpg"], "step_title": "Step 21: Make Load Circuit Connections"}, {"step": 22, "steps_text": "Refer to the drawings of off-PCB connections for this step. These connections use the 4-inch male-to-female jumpers.\nMake relay module control/power side (jumper) connections:\nConnect the BLUE jumper from PCB connector A2, pin 6 (Arduino pin D2) to the IN pin on the relay module (IN1 pin on 2-relay module)\n__________\nConnect the WHITE jumper from PCB connector A2, pin 4 (Arduino pin D4) to the IN2 pin on the 2-relay\n__________\nConnect the BLACK jumper from PCB connector A3, pin 7 (Arduino, GND) to the GND pin on the relay module\n__________\nConnect the RED jumper from PCB connector A3, pin 5 (Arduino, +5V) to the VCC pin on the relay module\n__________", "step_imgs": ["https://cdn.instructables.com/FGB/UXMO/JSUOXJS7/FGBUXMOJSUOXJS7.LARGE.jpg", "https://cdn.instructables.com/FTD/PMJF/JSUOXJVI/FTDPMJFJSUOXJVI.LARGE.jpg"], "step_title": "Step 22: Make Relay Power/control Side Connections"}, {"step": 23, "steps_text": "Check all off-PCB connections:\nUse the drawing of off-PCB connections and double-check that all connections match the drawing.\n__________\nTug all wires connected to screw-terminal blocks gently to make sure they are securely connected.\n__________", "step_imgs": [], "step_title": "Step 23: Check All Off-PCB Connections"}, {"step": 24, "steps_text": "Mate PCB with Arduino:\nPut tape on metal USB connector housing where PCB will touch it\n________\nLine up stacking connector pins on bottom of the PCB with the corresponding connectors on the top of the Arduino and press the boards together, taking care not to bend any of the pins.\n________\nFor now, move the slider on the DIP switch that was installed in \u201cStep 12: DIP switch or jumper header\u201d above to the ON position. If you opted to install jumper header JP instead, slide the jumper over the pins to short them together.\n__________", "step_imgs": ["https://cdn.instructables.com/FWE/7ZMY/JSUOXMJP/FWE7ZMYJSUOXMJP.LARGE.jpg", "https://cdn.instructables.com/F13/9M2Y/JSUOXLJK/F139M2YJSUOXLJK.LARGE.jpg", "https://cdn.instructables.com/FU6/DG7J/JSUOXP5X/FU6DG7JJSUOXP5X.LARGE.jpg"], "step_title": "Step 24: Mate PCB With Arduino"}, {"step": 25, "steps_text": "NOTE: The video above is from the original non-PCB Instructable. It was much easier to see the Arduino LEDs without a PCB on top of it!\nSmoke test:\nConnect Arduino to laptop via USB\nCheck for smoke \u263a\n_______\nCheck that relay module LEDs are off\n________\nCheck that Arduino yellow LED is blinking once per second (assuming that it\u2019s still loaded with \u201cBlink\u201d sketch)\n_______", "step_imgs": ["https://cdn.instructables.com/F1H/X1ZU/JSUOXSZK/F1HX1ZUJSUOXSZK.LARGE.jpg"], "step_title": "Step 25: Smoke Test"}, {"step": 26, "steps_text": "NOTE: The video above is also from the original non-PCB Instructable.\nLoad IV Swinger 2 Arduino sketch:\nOpen Arduino application on your computer\n________\nFind where the Arduino software looks for sketches:\nArduino->Preferences->Sketchbook location\nUse your browser to go to:\nhttps://raw.githubusercontent.com/csatt/IV_Swinger/master/Arduino/IV_Swinger2/IV_Swinger2.ino\nRight-click and use \u201cSave As\u201d to save IV_Swinger.ino to the Arduino sketchbook folder found above (make sure your browser doesn\u2019t add an extension like .txt to the file name)\nGo back to the Arduino application and find the IV_swinger2.ino sketch using:\nFile->Open\nThe Arduino application will inform you that IV_Swinger2.ino must be in a folder named IV_Swinger2 and it will offer to do that for you. Accept its kind offer.\nClick on arrow button or select \u201cUpload\u201d from \u201cSketch\u201d menu\n_________\nCheck Arduino LEDs: Yellow LED should be blinking. This is not the same yellow LED that the Blink sketch controls.\n_________", "step_imgs": [], "step_title": "Step 26: Load Arduino Sketch"}, {"step": 27, "steps_text": "NOTE: The video above is also from the original non-PCB Instructable. It also includes the first test of Step 29 in this Instructable\nConnect via IV Swinger 2 application:\nOpen the IV Swinger 2 application\n________\nVerify that \u201cSwing!\u201d button text changes to RED and the message below it changes from \u201cNot connected\u201d to \u201cConnected\u201d (briefly, then disappears). The yellow LED should no longer be on.\n_________\nIf not, pull down the \u201cUSB Port\u201d menu and select the correct port. If it isn\u2019t obvious which one to select:\nClose the IV Swinger 2 application and disconnect the IV Swinger 2 USB cable from the laptop\nRe-open the IV Swinger 2 application (leave the cable disconnected)\nPull down the USB Port menu and take note of the listed ports\nConnect the USB cable from the IV Swinger 2 hardware to the laptop\nPull down the USB Port menu and select the port that is new to the list", "step_imgs": [], "step_title": "Step 27: Connect Via IV Swinger 2 App"}, {"step": 28, "steps_text": "Apply resistor calibration:\nIn the IV Swinger 2 app, select \u201cResistors\u201d from the \u201cCalibrate\u201d menu\n________\nEnter the values you measured and recorded in \u201cStep 8: 1/4W resistors\u201d above.\nValues are in ohms\nIMPORTANT: You must enter a value of 0.0 for R1 (which does not exist on cell versions). Do not change the value for R2.\nNote that there is no RF1 value to enter. This is by design. Later (not now!), you will enter the value of RF+RF1 for RF if you set the DIP switch to the OFF position (or remove the jumper).________", "step_imgs": ["https://cdn.instructables.com/FZY/J0YD/JSUOY07Z/FZYJ0YDJSUOY07Z.LARGE.jpg", "https://cdn.instructables.com/F6O/HP7H/JSUOY05V/F6OHP7HJSUOY05V.LARGE.jpg"], "step_title": "Step 28: Apply Resistor Calibration"}, {"step": 29, "steps_text": "NOTE: The video above is also from the original non-PCB Instructable. It shows using a 9V battery, but for the cell version, you need to use a 1.5V battery. The \"nothing connected\" test is in the video attached to Step 27.\nSanity tests:\n\u201cNothing connected\u201d test\nClick the \u201cSwing!\u201d button. You should hear the relay click twice and see an error dialog saying \u201cERROR: Voc is zero volts\u201d\n_________\nBattery test\nUse 1.5V battery\nStrip both ends of two wires and screw one end of each into the side holes of the binding posts. If you happen to have a battery connector or holder with wires, use that. Use the RED1 and BLK1 binding posts. Leave RED2 and BLK2 unconnected.\n_________\nConnect the wire from the RED1 binding post to the positive terminal of the battery (you can either tape it or hold it with your thumb/finger)\n_________\nConnect the wire from the BLK1 binding post to the negative terminal of the same battery\n_________\nClick the \u201cSwing!\u201d button. You should get an IV curve that looks like the photo.\n_________\nIf you get an error dialog that says: \u201cERROR: Voc is zero volts\u201d check that you don\u2019t have the battery backwards and that the wires are making good contact with the terminals.\nIf you get an error dialog that says: \u201cERROR: Timed out polling for stable Isc\u201d\nClick on Preferences, click on Arduino tab, change value of \u201cIsc stable ADC\u201d to 500, click OK\nRetry the battery test; it should work\nClick on Preferences, click on Arduino tab, click on \u201cRestore Defaults\u201d, click OK", "step_imgs": ["https://cdn.instructables.com/FZ9/5W77/JSUOY2IM/FZ95W77JSUOY2IM.LARGE.jpg", "https://cdn.instructables.com/FO2/1CBE/JSUOY2IT/FO21CBEJSUOY2IT.LARGE.jpg"], "step_title": "Step 29: Sanity Tests"}, {"step": 30, "steps_text": "The acrylic baseball display case used for the IV Swinger 2 enclosure needs to have several holes drilled through it for attachments.\nCase side definitions (see photo):\nFront: side with the USB connector\nBack: side opposite from front\nLeft: side with binding posts and relay module\nRight: side opposite from left\nBottom: side with Arduino\nTop: side above PCB\nThe case comes in two U-shaped halves:\nBase: Left / Bottom (with fins) / Right\nLid: Front / Top / Back\nAll the attachments are made to the base half. The lid half has nothing attached to it, but does need a 3/8\u201d hole in the front for the USB cable.\nCare must be taken when drilling acrylic or else it will crack:\nUse a drill press if you have one\nUse vise (with rubber guards) to hold case\nPosition so that the hole being drilled is close to the vise jaw\nStart with 1/16\u201d pilot for all holes\nDrill slowly with light pressure\nSpray water on hole as it is being drilled to cool\nUse a Forstner bit to drill the 3/8\u201d hole for the USB cable. Otherwise, you\u2019ll have to start with 1/16\u201d pilot and drill incrementally larger holes until you get to 3/8\u201d (actually 25/64\u201d)", "step_imgs": ["https://cdn.instructables.com/F93/JHIM/JSUOY3Q0/F93JHIMJSUOY3Q0.LARGE.jpg"], "step_title": "Step 30: Prepare for Case and Final Assembly"}, {"step": 31, "steps_text": "IMPORTANT: For this step and the next three, look straight down with one eye when making the Sharpie dots (the plastic distorts/refracts if you look at an angle, and you\u2019ll miss the mark).\nMark holes for Arduino standoffs:\nAttach four 15mm standoffs to Arduino:\nUnplug the USB cable from the Arduino\n_______\nCarefully remove the PCB from the Arduino\n_______\nInsert threaded/male end of each standoff through its hole in the Arduino from the back\n________\nScrew nuts onto the threaded ends of the standoffs on the front of the Arduino \u2013 hold the nut with your finger and turn the standoff to tighten it. Use pliers to tighten more.\nNOTE: The hole nearest the Arduino reset button doesn\u2019t have room for a nut\n________\nPlace the Arduino in position, standing on its standoffs (including the one without a nut). The Arduino should be touching the right side of the case, with the USB connector facing the front. The single fin should be facing toward you so the fins look like a \u201cY\u201d. See photo.\n________\nPUT LID ON THE CASE. This is important because the fit is very tight!\n________\nTurn the case over and look at it from the bottom. The Arduino will probably stay in place, but you can make sure by squeezing the front and back together with the hand you\u2019re holding it with. Use a Sharpie to mark the centers of the four holes.\n________\nRemove the lid from the case and remove the Arduino\n________", "step_imgs": ["https://cdn.instructables.com/F5R/TUH8/JSUOY53H/F5RTUH8JSUOY53H.LARGE.jpg", "https://cdn.instructables.com/F6D/6SJK/JSUOY52T/F6D6SJKJSUOY52T.LARGE.jpg", "https://cdn.instructables.com/FP2/G4QX/JSUOY523/FP2G4QXJSUOY523.LARGE.jpg", "https://cdn.instructables.com/F3N/WQ3W/JSUOY51E/F3NWQ3WJSUOY51E.LARGE.jpg"], "step_title": "Step 31: Mark Holes for Arduino Standoffs"}, {"step": 32, "steps_text": "Mark holes for relay module:\nAttach 4 standoffs to relay module:\nDisconnect all wires from relay module\n________\nInsert threaded/male end of each standoff through its hole in the relay module from the back\n________\nScrew nut on the threaded end on the front of the relay module and tighten it\n________\nUse the Sharpie to make a dot on the left side of the case at the following position:\n0.5 cm from the left (i.e. back) edge\n0.5 cm from the top edge\n________\nHold the relay in position inside the case, with the hole of the upper left standoff aligned with the Sharpie dot. You can hold it with one hand and mark with the other \u2013 or use a small clamp to hold it in place.\n_________\nUse Sharpie to mark the centers of the other three holes\n_________", "step_imgs": ["https://cdn.instructables.com/FAB/COEL/JSUOY771/FABCOELJSUOY771.LARGE.jpg", "https://cdn.instructables.com/FCX/TKFA/JSUOY77O/FCXTKFAJSUOY77O.LARGE.jpg", "https://cdn.instructables.com/FSU/L89K/JSUOY76Y/FSUL89KJSUOY76Y.LARGE.jpg"], "step_title": "Step 32: Mark Holes for Relay Module Standoffs"}, {"step": 33, "steps_text": "Mark holes for binding posts:\nRemove top nuts, washers, cable rings, and bottom nuts from the binding posts. Remove the black plastic backing plate.\n________\nHold the plastic backing plate in position on the inside of the left side of the case. It should be about 1mm from the front inner edge of the case and about 1mm from the bottom.\n________\nUse Sharpie to mark the centers of the two holes\n________\nRepeat the above for the upper pair of binding posts, which goes immediately above the first pair, with the top of the backing plate 1mm from the top\n_______", "step_imgs": ["https://cdn.instructables.com/FT5/0M2E/JSUOY84S/FT50M2EJSUOY84S.LARGE.jpg", "https://cdn.instructables.com/FBI/LPU6/JSUOY849/FBILPU6JSUOY849.LARGE.jpg"], "step_title": "Step 33: Mark Holes for Binding Posts"}, {"step": 34, "steps_text": "NOTE: The video above is also from the original Instructable which has a slightly different hole pattern. But it is very similar. Note that I've had complete success without using water.\nDrill 12 marked holes:\nUse something pointy to make an indentation in the middle of each of the Sharpie marks. The tip of the Forstner bit is perfect for this, but you can also use a needle or the tip of an X-acto blade (poke and twirl). This will keep the drill bit centered when you start drilling the hole.\n________\nDrill 1/16\u201d pilot holes\n________\nSwitch to 9/64\u201d bit and re-drill all holes\n________\nEnlarge holes for binding posts:\nSwitch to 11/64\u201d bit and re-drill the binding post holes\n________\nSwitch to 13/64\u201d bit and re-drill the binding post holes one more time\n________\nClean up case:\nRemove burrs around holes with X-acto knife or your fingernails\n________\nWash case off and dry\n________", "step_imgs": ["https://cdn.instructables.com/FZI/CLZC/JSUOY95P/FZICLZCJSUOY95P.LARGE.jpg", "https://cdn.instructables.com/FCL/ZLDZ/JSUOY993/FCLZLDZJSUOY993.LARGE.jpg", "https://cdn.instructables.com/F4W/O2QN/JSUOY98Y/F4WO2QNJSUOY98Y.LARGE.jpg"], "step_title": "Step 34: Drill Marked Holes"}, {"step": 35, "steps_text": "Install binding posts:\nInsert the binding posts through their holes with the RED terminals toward the TOP of the case\n________\nSlide backing plates over the posts on the inside of the case\n________\nThread nuts on the posts and tighten down\n________", "step_imgs": ["https://cdn.instructables.com/F6J/23UC/JSUOY9QN/F6J23UCJSUOY9QN.LARGE.jpg"], "step_title": "Step 35: Install Binding Posts"}, {"step": 36, "steps_text": "Install Arduino (without PCB) in case:\nAttach the one Arduino standoff that won\u2019t have a nut onto the bottom of the case with an M3 screw\n________\nInsert the Arduino, put the lid on the case, and screw down the other three standoffs with M3 screws.\nTIP: start all screws before tightening any of them.\n________\nRemove the lid\n________\nMate PCB back onto Arduino:\nLoad circuit wires should still be screwed to PCB. If not, insert them back to into their correct screw terminal block openings and tighten them down.\n________\nLine up stacking connector pins on bottom of the PCB with the corresponding connectors on the top of the Arduino and press the boards together, taking care not to bend any of the pins.\n________", "step_imgs": ["https://cdn.instructables.com/FP3/1SQW/JSUOYAJG/FP31SQWJSUOYAJG.LARGE.jpg", "https://cdn.instructables.com/FPG/8YRO/JSUOYAJC/FPG8YROJSUOYAJC.LARGE.jpg", "https://cdn.instructables.com/FTG/DHY0/JSUOYAJ7/FTGDHY0JSUOYAJ7.LARGE.jpg"], "step_title": "Step 36: Install Arduino and PCB"}, {"step": 37, "steps_text": "Reconnect wires to screw-down side of relay module:\nThis needs to be done BEFORE the relay module is attached to the case, while you still have screwdriver access.\nRestore connections as before, following the off-PCB connections drawing.\n_________\nInstall relay module in case:\nInsert the relay module into the case and screw down its standoffs with four M3 screws.\nTIP: start all screws before tightening any of them.\n________\nRestore relay module control/power side (jumper) connections:\nRestore connections as before, following the off-PCB connections drawing.\n_________", "step_imgs": ["https://cdn.instructables.com/FSC/ADOH/JSUOYBXN/FSCADOHJSUOYBXN.LARGE.jpg", "https://cdn.instructables.com/FIZ/Z0Q6/JSUOYBXJ/FIZZ0Q6JSUOYBXJ.LARGE.jpg", "https://cdn.instructables.com/FOK/UFKI/JSUOYBXE/FOKUFKIJSUOYBXE.LARGE.jpg", "https://cdn.instructables.com/F8Q/3PQ1/JSUOYBWL/F8Q3PQ1JSUOYBWL.LARGE.jpg"], "step_title": "Step 37: Install Relay Module"}, {"step": 38, "steps_text": "Restore connections to binding posts:\nRestore connections as before, following the off-PCB connections drawing. Tighten nuts securely.\n_________", "step_imgs": ["https://cdn.instructables.com/FSV/C5D0/JSUOYCSY/FSVC5D0JSUOYCSY.LARGE.jpg", "https://cdn.instructables.com/FL6/60NL/JSUOYCST/FL660NLJSUOYCST.LARGE.jpg"], "step_title": "Step 38: Restore Binding Post Connections"}, {"step": 39, "steps_text": "Drill USB connector hole:\nPut the lid on the case\n_________\nMake indentation in the exact center of the USB connector using the tip of the Forstner bit (or whatever pointy thing you used for the other drill-starting indentations). NOTE: it is very important that this hole is precisely centered. You need to look at it from all four directions before making the indentation since the refraction through the plastic distorts the apparent position (you\u2019ll see what I mean as soon as you turn it 90 degrees).\n_________\nUse 3/8\u201d Forstner bit to drill the hole\nDrill slowly, spraying with water often\nReduce pressure when hole is getting close to \u201cpunching through\u201d\nAlternative to Forstner bit is to use following succession of normal bits: 1/16\u201d, 1/8\u201d, 3/16\u201d, 7/32\u201d, 1/4\u201d, 9/32\u201d, 5/16\u201d, 11/32\u201d, 3/8\u201d, 25/64\u201d\n_________\nClean up the edge of the hole with X-acto knife or your fingernail\n__________\nWash lid off and dry\n________\nPut lid on and insert the USB cable to make sure it fits\n________\nIf it doesn\u2019t, try loosening the Arduino standoff screws. This might give you enough \u201cplay\u201d to get the connector in. Then, with the connector still in, re-tighten the screws\nIf that isn\u2019t enough, you may have to enlarge the hole with a round file or some other way", "step_imgs": ["https://cdn.instructables.com/FRE/OJBK/JSUOYE21/FREOJBKJSUOYE21.LARGE.jpg", "https://cdn.instructables.com/FCJ/XEPX/JSUOYE1X/FCJXEPXJSUOYE1X.LARGE.jpg", "https://cdn.instructables.com/FF9/0EDW/JSUOYE1U/FF90EDWJSUOYE1U.LARGE.jpg", "https://cdn.instructables.com/FD8/MZXX/JSUOYE1Q/FD8MZXXJSUOYE1Q.LARGE.jpg"], "step_title": "Step 39: Drill USB Connector Hole"}, {"step": 40, "steps_text": "Your IV Swinger 2 is now complete!\nRepeat the tests you did in \u201cStep 29: Sanity tests\u201d to make sure everything got hooked back up correctly.\nYou may now test it with a real PV cell. Refer to the IV Swinger 2 User Guide for information on how to build and connect a bias battery, which is necessary for typical high power PV cells.\nIf accuracy is important to you, see the IV Swinger 2 User Guide for instructions on how to perform a calibration. There is also a Help dialog available from the Calibrate menu in the application", "step_imgs": [], "step_title": "Step 40: Final Test"}], "channel": "Arduino"}, {"category": "Technology", "description": "The beginning of the project came from an idea, an inspiration from a video posted on the Internet on the YouTube channel \"I like to do things\" ...\nThen came the need to make a stand for one of my monitors that housed a clock, a digital analog converter - DAC - integrated into an audio amplifier for my computer. Possessing these two ingredients, the project was able to start ...", "title": "Clock, Amplifier and a Little Amount of Wood...", "url": "https://www.instructables.com/id/Clock-Amplifier-and-a-Little-Amount-of-Wood/", "steps": [{"step": 1, "steps_text": "As I said, the idea came from a YouTube channel video \"I Like To Make Stuff\", posted at https://www.youtube.com/watch?v=2P-8-zd7sXg&t=101s, which demonstrates how to mount a digital clock that, when off, looks like a blank wooden box but when turned on, the digits appear through the wooden sheet, causing a rather interesting effect.\nAllied to this, the need, which was the great responsibility for the execution of the project, to mount a support for one of my monitors that also worked as a DAC and a 30W amplifier for the sound of my computer. From there, it was to give wings to the creativity and to initiate the projects of the electronic and structural part of the equipment.", "step_imgs": [], "step_title": "Step 1: Inspiration and Need"}, {"step": 2, "steps_text": "This phase consists of several elements that make up the clock and the sound system.\nThe clock, which integrates the functions of the thermometer and of the air relative humidity, is composed of the following components:\n1 x Arduino Nano\n1 x DHT22\n1 x 4-digit 7-segment display\n1 x 3-digit 7-segment display\n1 x Real time clock DS1307\n1 x MAX7219\n1 x PAM8610 15x15W D class stereo amplifier\n1 x 5V voltage regulator\n1 x Stainless steel led button\n1 x PCM2704\nThe other components are easily found in electronic component stores.\nPrinted circuit boards were made in Eagle software, inkjet printer-printed photolites, and are produced by the photographic process, with a welding mask and layout, to give a semi-professional finish.", "step_imgs": ["https://cdn.instructables.com/F81/X2FM/JSUP0TDF/F81X2FMJSUP0TDF.LARGE.jpg", "https://cdn.instructables.com/FRN/LFO6/JSUP0TEM/FRNLFO6JSUP0TEM.LARGE.jpg", "https://cdn.instructables.com/FJE/SWBS/JSUP0TDH/FJESWBSJSUP0TDH.LARGE.jpg"], "step_title": "Step 2: Electronics..."}, {"step": 3, "steps_text": "The assembly box and all its elements were designed in a CAD software and had its parts cut laser in MDF of 3mm and 6mm of thickness, whose assembly, due to the precision of the cut, had no greater difficulties, as can be seen in the photos below.\nThe finish was made with three layers of black spray paint and clear wood veneer coating. The greatest difficulty was to curl the wood sheet, which had to be softened with water, to facilitate its application on the surfaces of the MDF box.\nAfter the glue was dried, three layers of marine varnish were applied to protect and brighten the wood sheet.", "step_imgs": ["https://cdn.instructables.com/FKI/ZFTY/JSUP0TEO/FKIZFTYJSUP0TEO.LARGE.jpg", "https://cdn.instructables.com/F5P/5XJ9/JSUP0TEQ/F5P5XJ9JSUP0TEQ.LARGE.jpg", "https://cdn.instructables.com/FC9/KKOJ/JSUP0TES/FC9KKOJJSUP0TES.LARGE.jpg", "https://cdn.instructables.com/FIR/3QYA/JSUP0TEU/FIR3QYAJSUP0TEU.LARGE.jpg", "https://cdn.instructables.com/FXU/59DM/JSUP0TEW/FXU59DMJSUP0TEW.LARGE.jpg", "https://cdn.instructables.com/FVS/ILR3/JSUP0TF0/FVSILR3JSUP0TF0.LARGE.jpg", "https://cdn.instructables.com/FPS/QZDD/JSUP0TF6/FPSQZDDJSUP0TF6.LARGE.jpg", "https://cdn.instructables.com/FRO/Y9E6/JSUP0TFA/FROY9E6JSUP0TFA.LARGE.jpg", "https://cdn.instructables.com/FRV/57IY/JSUP0TFE/FRV57IYJSUP0TFE.LARGE.jpg", "https://cdn.instructables.com/FRT/VDFS/JSUP0TFC/FRTVDFSJSUP0TFC.LARGE.jpg", "https://cdn.instructables.com/FXI/KK44/JSUP0TF8/FXIKK44JSUP0TF8.LARGE.jpg", "https://cdn.instructables.com/FZ7/U6SD/JSUP0TFK/FZ7U6SDJSUP0TFK.LARGE.jpg", "https://cdn.instructables.com/FPB/RK8L/JSUP0TFM/FPBRK8LJSUP0TFM.LARGE.jpg", "https://cdn.instructables.com/FQI/3KMZ/JSUP0TFS/FQI3KMZJSUP0TFS.LARGE.jpg", "https://cdn.instructables.com/FXA/KEQB/JSUP0TFY/FXAKEQBJSUP0TFY.LARGE.jpg", "https://cdn.instructables.com/F5J/GJJG/JSUP0TFX/F5JGJJGJSUP0TFX.LARGE.jpg", "https://cdn.instructables.com/FSQ/4N9Z/JSUP0TFO/FSQ4N9ZJSUP0TFO.LARGE.jpg", "https://cdn.instructables.com/F1X/ZNR9/JSUP0TG0/F1XZNR9JSUP0TG0.LARGE.jpg", "https://cdn.instructables.com/FGF/MIFJ/JSUP0TG2/FGFMIFJJSUP0TG2.LARGE.jpg", "https://cdn.instructables.com/F7Q/LIH8/JSUP0TG4/F7QLIH8JSUP0TG4.LARGE.jpg"], "step_title": "Step 3: The Box..."}, {"step": 4, "steps_text": "Due to the precision of the laser cut, the final assembly of the project presented no major difficulties. All the parts fit well in their proper places, the spinning was organized so as to allow a clean and tight fit to the box.", "step_imgs": ["https://cdn.instructables.com/FJO/RMEP/JSUP0TG7/FJORMEPJSUP0TG7.LARGE.jpg", "https://cdn.instructables.com/F1Q/0QM3/JSUP0TG8/F1Q0QM3JSUP0TG8.LARGE.jpg", "https://cdn.instructables.com/FOE/LA1K/JSUP0TG9/FOELA1KJSUP0TG9.LARGE.jpg", "https://cdn.instructables.com/F87/04MP/JSUP0TGG/F8704MPJSUP0TGG.LARGE.jpg", "https://cdn.instructables.com/FCQ/DTYG/JSUP0TGI/FCQDTYGJSUP0TGI.LARGE.jpg", "https://cdn.instructables.com/F4U/QEMK/JSUP0TGK/F4UQEMKJSUP0TGK.LARGE.jpg"], "step_title": "Step 4: The Final Assembly!"}, {"step": 5, "steps_text": "After placing the rubber feet and closing the box, tests were performed that demonstrated the design was successful, with all its functions working properly, requiring no further post-assembly adjustment.", "step_imgs": ["https://cdn.instructables.com/F2M/RQ22/JSUP0TGC/F2MRQ22JSUP0TGC.LARGE.jpg", "https://cdn.instructables.com/FTS/LSIL/JSUP0TGN/FTSLSILJSUP0TGN.LARGE.jpg", "https://cdn.instructables.com/FHN/LNUR/JSUP0TGP/FHNLNURJSUP0TGP.LARGE.jpg", "https://cdn.instructables.com/F81/JFY5/JSUP0TGT/F81JFY5JSUP0TGT.LARGE.jpg", "https://cdn.instructables.com/FNE/M0DR/JSUP0TGY/FNEM0DRJSUP0TGY.LARGE.jpg", "https://cdn.instructables.com/F2Y/12RI/JSUP0TH2/F2Y12RIJSUP0TH2.LARGE.jpg", "https://cdn.instructables.com/FWF/V2RF/JSUP0TH4/FWFV2RFJSUP0TH4.LARGE.jpg", "https://cdn.instructables.com/FW5/FZEI/JSUP0TH5/FW5FZEIJSUP0TH5.LARGE.jpg", "https://cdn.instructables.com/FQW/1BCZ/JSUP0TH6/FQW1BCZJSUP0TH6.LARGE.jpg", "https://cdn.instructables.com/F9Z/VM33/JSUP0TH7/F9ZVM33JSUP0TH7.LARGE.jpg", "https://cdn.instructables.com/F4F/61UZ/JSUP0TQU/F4F61UZJSUP0TQU.LARGE.jpg", "https://cdn.instructables.com/FXI/45WB/JSUP0THJ/FXI45WBJSUP0THJ.LARGE.jpg", "https://cdn.instructables.com/FSC/LTB9/JSUOYTZO/FSCLTB9JSUOYTZO.LARGE.jpg", "https://cdn.instructables.com/FO9/E16J/JT2SL7L0/FO9E16JJT2SL7L0.LARGE.jpg"], "step_title": "Step 5: Final Result."}, {"step": 6, "steps_text": "This was a project designed to meet a need that turned out to be an extremely pleasurable job for the execution and final result.\nI thank you for your interest in the project and encourage your assembly by those who have an interest in executing it or as inspiration for developing an idea of your own.", "step_imgs": [], "step_title": "Step 6: Conclusion!"}], "channel": "Arduino"}, {"category": "Technology", "description": "Angstrom is a 12 channel tuneable LED light source that can be built for under \u00a3100. It features 12 PWM controlled LED channels spanning 390nm-780nm and offers both the ability to mix multiple channels to a single 6mm fibre-coupled output as well as the capability of outputting any or all channels simultaneously to individual 3mm fibre outputs.\nApplications include microscopy, forensics, colorimetry, document scanning etc. You can easily simulate the spectrum of various light sources such as compact fluorescent lamps (CFL).\nAdditionally the light sources could be used for interesting theatrical lighting effects. The power channels are more than capable of handling additional LEDs with a higher rated power supply, and the multiple wavelengths create a beautiful and unique multicoloured shadow effect that normal white or RGB LED sources cannot duplicate. It's a whole rainbow in a box!.", "title": "Angstrom - a Tuneable LED Light Source", "url": "https://www.instructables.com/id/Angstrom-a-Tuneable-LED-Light-Source/", "steps": [{"step": 1, "steps_text": "Baseboard: The unit is assembled on a wooden base, approximately 600mm X 200mm x 20mm. Additionally, a stress relief wooden block 180mm X 60mm X 20mm is used to align the optical fibres.\nA 5V 60W power supply is connected to the mains power via a fused IEC plug, fitted with a 700mA fuse, and a small toggle switch rated at least 1A 240V is used as the main power switch.\nThe main circuit board is constructed from standard phenolic copper-clad stripboard, 0.1 inch pitch. In the prototype, this board measures approximately 130mm X 100mm. An optional second board, of around 100mm X 100mm was fitted to the prototype but this is only to fit additional circuitry, such as signal processing logic for spectroscopy etc and is not required for the base unit.\nThe main LED assembly constitutes 12 3W star LEDs, each a different wavelength. These are discussed in more detail in the section on the LED assembly below.\nThe LEDs are mounted on two aluminium heatsinks which in the prototype were 85mm x 50mm x 35mm deep.\nA Raspberry Pi Zero W is used to control the unit. It is fitted with a header and plugs into a matching 40 pin socket on the main circuit board.", "step_imgs": ["https://cdn.instructables.com/FNH/ORWR/JSUOZUUB/FNHORWRJSUOZUUB.LARGE.jpg"], "step_title": "Step 1: Parts Required - Baseboard, Power, Controller and LED Assembly"}, {"step": 2, "steps_text": "The 12 LEDs have the following centre wavelengths. They are 3W star LEDS with a 20mm heatsink base.\n390nm\n410nm\n440nm\n460nm\n500nm\n520nm\n560nm\n580nm\n590nm\n630nm\n660nm\n780nm\nAll but the 560nm unit were sourced from FutureEden. The 560nm unit was sourced from eBay as FutureEden do not have a device covering this wavelength. Note that this unit will ship from China so allow time for delivery.\nThe LEDs are attached to the heatsink using Akasa thermal tape. Cut 20mm squares and then simply stick one side to the LED and the other to the heatsink, ensuring you follow the manufacturer's instructions as to which side of the tape goes to the LED heatsink.", "step_imgs": ["https://cdn.instructables.com/FCK/GGLE/JSL35CMU/FCKGGLEJSL35CMU.LARGE.jpg"], "step_title": "Step 2: Parts Required: LEDs"}, {"step": 3, "steps_text": "Each LED channel is controlled from a GPIO pin on the Raspberry Pi. PWM is used to control the LED intensity. A power MOSFET (Infineon IPD060N03LG) drives each LED via a 2W power resistor to limit LED current.\nValues of R4 for each device and measured current are shown below. The resistor value changes because the voltage drop across the shorter wavelength LEDs is higher than for the longer wavelength LEDs. R4 is a 2W resistor. It will get quite warm during operation so be sure to mount the resistors clear of the controller board, keeping the leads long enough so that the resistor body is at least 5mm clear of the board.\nThe Infineon devices are available cheaply on eBay and are also stocked by suppliers such as Mouser. They are rated at 30V 50A which is a huge margin but they are cheap and easy to work with, being DPAK devices and therefore easily hand-solderable. If you want to substitute devices, be sure to pick one with appropriate current margins and with a gate threshold such that at 2-2.5V the device is fully on, since this matches the logic levels (3.3V max) available from the Pi GPIO pins. The gate/source capacitance is 1700pf for these devices and any replacement should have roughly similar capacitance.\nThe snubber network across the MOSFET (10nF capacitor and 10 ohm 1/4W resistor) are to control rise and fall times. Without these components and the 330 ohm gate resistor, there was evidence of ringing and overshoot on the output which could have lead to unwanted electromagnetic interference (EMI).\nTable of resistor values for R4, the 2W power resistor\n\n385nm 2.2 ohm 560mA\n415nm 2.7 ohm 520mA\n440nm 2.7 ohm 550mA\n460nm 2.7 ohm 540mA\n500nm 2.7 ohm 590mA\n525nm 3.3 ohm 545mA\n560nm 3.3 ohm 550mA\n590nm 3.9 ohm 570mA\n610nm 3.3 ohm 630mA\n630nm 3.9 ohm 610mA\n660nm 3.9 ohm 630mA\n780nm 5.6 ohm 500mA", "step_imgs": ["https://cdn.instructables.com/F1E/2OXO/JSKOUVTM/F1E2OXOJSKOUVTM.LARGE.jpg"], "step_title": "Step 3: Parts Required: LED Control Circuitry"}, {"step": 4, "steps_text": "The LEDs are coupled to an optical combiner via 3mm plastic fibre. This is available from a number of suppliers but the cheaper products may have excessive attenuation at short wavelengths. I purchased some fibre on eBay which was excellent but some cheaper fibre on amazon which had significant attenuation at around 420nm and lower. The fibre I purchased from eBay was from this source. 10 metres should be ample. You need only 4 metres to couple the LEDs assuming 12 X 300mm lengths, but one of the options when building this unit is to also couple individual wavelengths out to 3mm output fibre so it's handy to have extra for this option.\nhttps://www.ebay.co.uk/itm/Fibre-Optic-Cable-0-25-...\nThe output fibre is flexible 6mm fibre encased in a tough plastic outer sheath. It's available from here. A 1 metre length will probably suffice in most cases.\nhttps://www.starscape.co.uk/optical-fibre.php\nThe optical combiner is a tapered plastic lightguide which is made from a piece of 15 x 15mm square rod, cut to approximately 73mm and sanded down so that the output end of the guide is 6mm x 6mm.\nAgain,note that some grades of acrylic can have excessive attenuation at short wavelengths. Unfortunately it's hard to determine what you're going to get, but rod from this source worked well\nhttps://www.ebay.co.uk/itm/SQUARE-CLEAR-ACRYLIC-RO...\nHowever rod from this source had excessive attenuation and was almost completely opaque to 390nm UV light.\nhttps://www.ebay.co.uk/itm/Acrylic-Clear-Solid-Squ...", "step_imgs": ["https://cdn.instructables.com/F44/JKR1/JSL35CN6/F44JKR1JSL35CN6.LARGE.jpg", "https://cdn.instructables.com/FOU/MML3/JSL35D3J/FOUMML3JSL35D3J.LARGE.jpg", "https://cdn.instructables.com/FF0/3W81/JSL35E28/FF03W81JSL35E28.LARGE.jpg"], "step_title": "Step 4: Parts Required: Fibre Optics and Combiner"}, {"step": 5, "steps_text": "Some parts are 3d printed. They are\nThe LED fibre adaptors\nThe fibre mounting plate\nThe (optional) fibre output adaptor (for individual outs). This is just the fibre mounting plate re-printed.\nThe optical coupler mounting plate\nAll parts are printed in standard PLA except the fibre adaptors. I recommend PETG for these as PLA softens too much; the LEDs get quite warm.\nAll the STLs for these parts are included in the attached files for the project. See the step on configuring the Raspberry Pi for the zip file which contains all the project assets.\nPrint the fibre adaptors for the LEDs with 100% infill. The others can be printed with 20% infill.\nAll parts were printed at a layer height of 0.15mm using a standard 0.4mm nozzle at 60mm/sec on a Creality Ender 3 and also a Biqu Magician. Any low-cost 3D printer should do the job.\nThe parts should all be printed vertically with the holes pointing up - this gives the best precision. You can skip supports for them; it'll make the main coupler mounting plate look a little ragged on the trailing edge but this is just cosmetic; a touch of sandpaper will tidy it up.\nImportant: Print the fibre mounting plate (and the optional second copy of it for the individual fibre output adaptor) at a scale of 1.05 i.e 5% enlarged. This ensures the holes for the fibre have sufficient clearance.", "step_imgs": ["https://cdn.instructables.com/FQ1/9CB4/JSL35EF6/FQ19CB4JSL35EF6.LARGE.jpg", "https://cdn.instructables.com/FN8/XVPV/JSL35EHR/FN8XVPVJSL35EHR.LARGE.jpg", "https://cdn.instructables.com/F96/HA0C/JSL35EKV/F96HA0CJSL35EKV.LARGE.jpg"], "step_title": "Step 5: Parts Required: 3d Printed Parts"}, {"step": 6, "steps_text": "The controller board is fabricated from standard copper stripboard (sometimes known as veroboard). I am not including a detailed layout because the board design I ended up with got a bit untidy due to having to add components like the snubber network that I had not originally planned. The top of the board, shown above partially built, has the power resistors and the socket for the Raspberry Pi. I used a right angle header for the Pi so it sits at right angles to the main board but if you use a normal straight header then it will simply sit parallel to the board instead. It will occupy a little more room that way so plan accordingly.\nVeropins were used to connect wires to the board. To cut tracks a small twist drill bit is useful. For the Pi socket use a sharp craft knife to cut the tracks as you don't have a spare hole between the two sets of socket pins.\nNote the double row of 1mm copper wire. This is to provide a low impedance path for the nearly 7 amps of current that the LEDs consume at full power. These wires go to the source terminals of the power MOSFETs and thence to ground.\nThere is only a small 5V wire on this board supplying power to the Pi. This is because the 5V main power feed goes to the anodes of the LEDs, which are connected via a standard PC IDE disk cable on a second board in my prototype. However you don't need to do this and can just wire them up directly to a socket on the first board. In that case you will be running a duplicate set of copper wires along the anode side to handle the current on the +5V side. In the prototype these wires were on the second board.", "step_imgs": ["https://cdn.instructables.com/FQD/LGC9/JSL35FK6/FQDLGC9JSL35FK6.LARGE.jpg", "https://cdn.instructables.com/FPR/6JXG/JSL35GS3/FPR6JXGJSL35GS3.LARGE.jpg", "https://cdn.instructables.com/FLG/WDLC/JSL35H80/FLGWDLCJSL35H80.LARGE.jpg", "https://cdn.instructables.com/FM7/TCQ1/JSL35J4W/FM7TCQ1JSL35J4W.LARGE.jpg"], "step_title": "Step 6: Assembling the Main Controller Board"}, {"step": 7, "steps_text": "The MOSFETs were mounted on the copper side of the board. They are DPAK devices and so the tab must be soldered directly to the board. To do this, use an appropriately large tip on the soldering iron and quickly tin the tab lightly. Tin the copper tracks where you're going to attach the device. Place it on the board and heat the tab up again. The solder will melt and the device will be attached. Try and do this reasonably quickly so as not to overheat the device; it will tolerate several seconds of heat so don't panic. Once the tab (drain) is soldered you can then solder the gate and source leads to the board. Don't forget to cut the tracks first for the gate and source leads so they don't short out to the drain tab!. You can't see from the picture but the cuts are underneath the leads towards the body of the device.\nEagle-eyed readers will note only 11 MOSFETs. This is because the 12th was added later when I got the 560nm LEDs. It doesn't fit on the board due to the width, so was placed elsewhere.", "step_imgs": ["https://cdn.instructables.com/F35/D03B/JSL35I8B/F35D03BJSL35I8B.LARGE.jpg"], "step_title": "Step 7: The Power MOSFETs"}, {"step": 8, "steps_text": "Here is a closeup picture of the LEDs and heatsinks. The controller board wiring was from an earlier version of the prototype before I switched to using an IDE cable to connect the LEDs to the controller.\nAs mentioned previously, the LEDs are attached using squares of Akasa thermal tape. This has the advantage that if a LED fails, it's easy to remove it using a sharp knife to cut through the tape.\nAs long as the heatsink is sufficiently large, there's nothing to stop you mounting all the LEDs on a single heatsink. On the heatsinks shown, at full power, the heatsink temperature reaches 50 degrees C and so these heatsinks are probably slightly smaller than optimal. In hindsight it would probably also have been a good idea to put three of the longer wavelength LEDs on each heatsink rather than put all six of the shorter wavelength emitters on one and the longer wavelength emitters on the other. This is because, for a given forward current, the short wavelength emitters dissipate more power due to their higher forward voltage drop, and hence get warmer.\nYou could of course add fan cooling. If you plan to fully enclose the LED assembly this would be wise.", "step_imgs": ["https://cdn.instructables.com/FWU/6D6I/JSPABZJT/FWU6D6IJSPABZJT.LARGE.jpg"], "step_title": "Step 8: LEDs and Heatsinks"}, {"step": 9, "steps_text": "The LEDs are connected to the controller board via a standard 40 pin IDE cable. Not all the cable pairs are used, allowing room for expansion.\nThe wiring diagrams above show the IDE connector wiring and also the wiring to the Raspberry Pi itself.\nThe LEDs are denoted by their colours (UV = ultraviolet, V = violet, RB = royal blue, B = blue, C = cyan, G = green, YG = yellow-green, Y = yellow, A = amber, R = bright red, DR = deep red, IR = infrared), i.e by ascending wavelength.\nNote: don't forget to ensure that the +5V connection side of the cable socket has 2 x 1mm thick wires running in parallel down the stripboard to provide a high current path. Similarly the source connections to the MOSFETs, which are grounded, should have similar wires run to provide the high current path to ground.", "step_imgs": ["https://cdn.instructables.com/FF8/JNLX/JSPAC46L/FF8JNLXJSPAC46L.LARGE.jpg", "https://cdn.instructables.com/FV1/YDJH/JSPAC46Q/FV1YDJHJSPAC46Q.LARGE.jpg"], "step_title": "Step 9: LED Wiring"}, {"step": 10, "steps_text": "Without plugging the Raspberry Pi into the board, you can test that your LED drivers are working correctly by connecting the GPIO pins via a cliplead, to the +5V rail. The appropriate LED should light.\nNever connect the GPIO pins to +5V when the Pi is plugged in. You will damage the device, it runs internally on 3.3V.\nOnce you are confident that the power drivers and LEDs are working correctly, you can proceed with the next step, which is to configure the Raspberry Pi.\nDo not look directly into the end of the optical fibres with the LEDs running at full power. They are extremely bright.", "step_imgs": ["https://cdn.instructables.com/FVF/TID2/JSPACC0M/FVFTID2JSPACC0M.LARGE.jpg"], "step_title": "Step 10: Testing the Controller Board"}, {"step": 11, "steps_text": "Each LED is coupled via 3mm optical fibre. The 3d printed fibre adaptor fits snugly over the LED assembly and guides the fibre. The strain relief block is mounted approximately 65mm in front of the LED heatsinks.\nThis provides enough room to get your fingers in and push the fibre adaptors onto the LEDs and then fit the fibre.\nDrill 4mm holes through the strain relief block in line with the LEDs.\nEach length of fibre is approximately 250mm long, However because each fibre takes a different path, the actual fitted length will vary. The easiest way to get this right is to cut fibre lengths of 300mm. You must then straighten the fibre or it will be impossible to manage. It's like 3mm thick perspex rod, and is much stiffer than you imagine.\nTo straighten the fibre, I used a 300mm length (approx) of 4mm OD brass rod. The inside diameter of the rod is sufficient for the fibre to slide smoothly into the rod. Ensure both ends of the rod are smooth, so you don't scratch the fibre while sliding it in and out of the rod.\nPush the fibre into the rod so that it is flush at one end and with a little length sticking out the other, or all the way in if the rod is longer than the fibre. Then dip the rod into a deep saucepan filled with boiling water for about 15 seconds. Remove the rod and reposition the fibre if necessary so that the other end is flush with the rod end, then heat that end in the same way.\nYou should now have a perfectly straight piece of fibre. Remove by pushing another piece of fibre through until you can grip and remove the straightened fibre.\nWhen you have straightened all twelve pieces of fibre, cut a further twelve pieces approx 70mm long. These will be used to guide the fibres through the coupling plate. Then when construction is complete, they will be used to populate the individual fibre out coupler, so they are not wasted.\nStraighten these cut pieces in the same way. Then fit them to the coupler plate. You can see how they should look in the photo above. The staggered layout is to minimise the area occupied by the fibres (minimal spherical packing density). This ensures that the fibre combiner can operate as efficiently as possible.\nTake each full length piece of cut fibre and sand one end flat, working up to 800 and then 1500 grit sandpaper. Then polish with metal or plastic polish - a small rotary tool with a polishing pad is handy here.\nNow remove ONE cut fibre and slide the full length fibre into the coupler plate. Then fit it back through the strain relief so that the polished end is touching the LED lens front via the LED fibre coupler. Repeat for each fibre. Keeping the short pieces of fibre in the holes makes sure each long fibre is easy to get in exactly the right place.\nNOTE: Don't push too hard on the violet and ultraviolet LEDs They are encapsulated with a soft polymer material unlike the other LEDs, which are epoxy encapsulated. It's easy to deform the lens and cause the bonding wires to break. Trust me, I learned this the hard way. So be gentle when fitting the fibres to these two LEDs.\nIt doesn't much matter what order you route the fibres through the coupler but try and layer the fibres so that they don't cross over each other. In my design the bottom six LEDs were routed to the lowest three holes for the left three LEDs and then the next three holes for the right three LEDs and so forth.\nWhen you have all the fibres routed through the coupler, position it on the base board and drill two mounting holes, then screw it down.\nThen, using a very sharp pair of diagonal cutters, cut each piece of fibre as close to the coupler face as possible. Then pull each piece out, sand and polish the cut end and replace it, before moving on to the next fibre.\nDon't worry if the fibres aren't all exactly flush with the coupler face. It's best to err on the side of having them slightly recessed rather than protruding but a millimetre or two difference won't really matter.", "step_imgs": ["https://cdn.instructables.com/FZZ/XKGF/JSPABZWN/FZZXKGFJSPABZWN.LARGE.jpg", "https://cdn.instructables.com/FFT/M7RA/JSPAC1LM/FFTM7RAJSPAC1LM.LARGE.jpg"], "step_title": "Step 11: Fibre Optic Coupling the LEDs"}, {"step": 12, "steps_text": "The Raspberry Pi configuration process is documented in the attached rtf document which is part of the zip file attachment. You do not need any additional hardware to configure the Pi other than a spare USB port on a PC to plug it in, a suitable USB cable and an SD card reader to create the MicroSD card image. You also need a MicroSD card; 8G is more than large enough.\nWhen you have configured the Pi, and plugged it into the main controller board, it should come up as a WiFi access point. When you connect your PC to this AP and browse to http://raspberrypi.local or http://172.24.1.1 you should see the above page. Simply slide the sliders to set up the intensity and wavelengths of light you wish to see.\nNote that the minimum intensity is 2; this is a peculiarity of the Pi PWM library.\nThe second picture shows the unit emulating the spectrum of a CFL lamp, with emissions at approximately 420nm, 490nm and 590nm (violet, turquoise and amber) corresponding to the typical three phosphor coating lamps.", "step_imgs": ["https://cdn.instructables.com/FZ5/HLQG/JSPACCJH/FZ5HLQGJSPACCJH.LARGE.jpg", "https://cdn.instructables.com/FQH/3H9I/JSUOWFWT/FQH3H9IJSUOWFWT.LARGE.jpg"], "step_title": "Step 12: Configuring the Raspberry Pi"}, {"step": 13, "steps_text": "The fibre beam combiner is made from a 15 x 15mm square acrylic rod. Note that some acrylic plastics have excessive absorption in the spectrum from 420nm and below; to check this before you start, shine the UV LED through the rod and verify that it does not excessively attenuate the beam (use a piece of white paper so you can see the blue glow from the optical whiteners in the paper).\nYou can print off the 3D printable jig for sanding the rod down or construct your own from some suitable plastic sheet. Cut the rod to approximately 73mm and sand and polish both ends. Then fix the jig to two opposite sides of the rod using double sided adhesive tape. Sand using 40 grit paper until you are within 0.5mm or so of the jig lines, then progressively increase to 80,160,400,800,1500,3000,5000 and finally 7000 grit paper to get a tapered polished surface. Then remove the jig and reposition to sand the other two sides. You should now have a tapered pyramid suitable for mounting in the fibre combiner plate. The narrow end is 6mm x 6mm to match the fibre takeoff.\nNote: in my case I didn't quite sand down to 6mm x 6mm so the combiner sticks out a bit from the mounting plate. This doesn't matter as the 6mm fibre is a press fit and will butt with the narrow end of the combiner if pushed in far enough.\nStrip back about 1 inch of the outer jacket from the 6mm fibre, taking care not to damage the fibre itself. Then, if the outer jacket of the fibre isn't a snug enough fit into the coupler plate, just wrap a piece of tape round it. It should then be able to be pushed in and snugly bed with the combiner pyramid. Mount the whole assembly to the baseplate in line with the fibre outputs.\nNote that you do lose some light when combining. You can see the reason from the optical traces above, because concentrating the light down also causes the beam angle to increase and we lose some light in the process. For maximum intensity at a single wavelength, use the optional fibre coupler plate to pick off a LED or LEDs directly to 3mm fibre.", "step_imgs": ["https://cdn.instructables.com/FEI/LYH6/JSUOZSLO/FEILYH6JSUOZSLO.LARGE.jpg", "https://cdn.instructables.com/FDY/MRC4/JSUOZSMV/FDYMRC4JSUOZSMV.LARGE.jpg", "https://cdn.instructables.com/FKO/5JTB/JSUOZT6O/FKO5JTBJSUOZT6O.LARGE.jpg", "https://cdn.instructables.com/FQF/QAA8/JSUOZTWM/FQFQAA8JSUOZTWM.LARGE.jpg"], "step_title": "Step 13: The Fibre Combiner"}, {"step": 14, "steps_text": "This is just a second print of the main fibre guide. Again, remember to print at 105% scale to allow clearance for the fibres through the holes. You simply screw this plate down in line with the main fibre guide, unscrewing the combiner assembly and replacing it with this plate. Don't forget to fit it the right way round, the holes only line up in one direction!.\nNow put those 12 pieces of fibre you cut off into the holes in the plate. To pick off one or more wavelengths, just remove one piece of fibre and place a longer length into the hole. You can pick off all 12 wavelengths simultaneously if you wish.", "step_imgs": [], "step_title": "Step 14: The Individual Fibre Output Coupler Plate"}, {"step": 15, "steps_text": "The Pi can drive more channels if you wish. However availability of LEDs in other wavelengths is likely to be a challenge. You can get 365nm UV LEDs cheaply but the flexible fibre 6mm cable starts to absorb strongly even at 390nm. However I did find that individual fibres would work with that wavelength, so if you wanted, you could add or replace a LED to give you a shorter UV wavelength.\nAnother possibility is to increase brightness by doubling up on the LEDs. You could, for example, design and print a 5 X 5 fibre coupler (or 4 X 6) and have 2 LEDs per channel. Note that you'd need a much larger power supply as you'll be drawing nearly 20 amps. Each LED needs its own dropping resistor; don't parallel the LEDs directly. The MOSFETs have more than enough capacity to drive two or even several LEDs per channel.\nYou can't really use higher power LEDs because they don't emit light from a small area like the 3W LEDs and so you can't efficiently fibre couple them. Look up 'conservation of etendue' to understand why this is.\nThe light loss through the combiner is quite high. This is unfortunately a consequence of the laws of physics. In reducing the beam radius we also increase its divergence angle and so some light escapes because the light guide and fibre only have an acceptance angle around 45 degrees. Note that the power output from individual fibre outputs is significantly higher than the combined wavelength coupler.", "step_imgs": [], "step_title": "Step 15: More Power!. More Wavelengths!"}], "channel": "LEDs"}, {"category": "Technology", "description": "Omni-wheels only have traction in the direction of rotation.\nThis instructable explains how to make an XY plotter from four Omni-wheels, four 28BYJ-48 stepping motors, an Arduino Uno R3 microcontroller, an SG90 servo, and an HC-06 Bluetooth module.\nMetal-work is simple ... all you need is a screw-driver, three drills, a rat-tail file, and a sharp knife,.\nThe CNC plotter has an on-board interpreter that recognises the g-code output from \u201cInkscape\u201d. All that is required is an XON XOFF terminal that can send text-files one line at a time.\nThe plotter may also be controlled using a cell-phone or tablet as explained in instructable https://www.instructables.com/id/CNC-Graphics-Tab...\nExtremely large drawings are possible due to the Bluetooth design. The plotter accuracy is excellent providing the wheels don\u2019t slip! The plotter has a resolution of 22 steps per mm.\nThe cost to build this plotter is less than $100 USD ... the most expensive items being the Omni-wheels and couplings.\nThe opening photo shows the assembled plotter.\nThe video shows the plotter in operation. To conserve batteries an external power source is being used.\nPhoto 2 shows three sample plots.", "title": "Omni Wheel CNC Plotter", "url": "https://www.instructables.com/id/Omni-Wheel-CNC-Plotter/", "steps": [{"step": 1, "steps_text": "The circuit diagram for the omni-wheel plotter is shown in photo 1.\nHeat-sinking is required for input voltages over 7 volts as the LM7805 regulator can only disspate 2 watts.\nA 7 volt power supply with a trailing lead is suitable for day to day use. Rechargeable batteries are recommended as the current drain approaches 900mA.\nThe shield layout is shown in photo 2. The holes in columns 4 and 14 (pale red and green stripes) are connected together on some proto-boards. For this reason I have left these columns clear. You may also find it necessary to connect GND and +5V jumpers to the HC-06 circuit.\nArduino ports B and C are each connected to two 28BYJ-48 stepping motors.\nMotors W1 and W3, and W2 and W4, are wired such that they always rotate in opposite directions. The 560 ohm resistors provide a degree of isolation between the motor controllers.\nThe 1 amp LM7805 regulator supplies 5 volts to the four motors and to the pen-lift servo. The 1N4007 diodes provide reverse voltage protection to the Arduino and the LM7805 regulator.\nThe HC-06 bluetooth module obtains its power from the Arduino. The 1200 ohm and 2200 ohm resistors form a voltage divider which lowers the Arduino TX output voltage to a safe level for the bluetooth RX input.\nKey Points\nAll points labelled 5V (in red) are connected to the LM7805 5V output.\nAll points labelled GND are connected together.\nProgram the arduino BEFORE connecting the bluetooth module as it is not possible to program an Arduino when two devices are competing for the same serial connection.", "step_imgs": ["https://cdn.instructables.com/FFD/FC0I/JSUP08R8/FFDFC0IJSUP08R8.LARGE.jpg", "https://cdn.instructables.com/F9N/LAVQ/JSUP08RA/F9NLAVQJSUP08RA.LARGE.jpg"], "step_title": "Step 1: Circuit Diagram"}, {"step": 2, "steps_text": "The estimated cost for this plotter is less than $100 USD.\nThe following items were obtained from https://www.aliexpress.com/:\n1 only Arduino UNO R3 with USB Cable\n1 only SG90 servo\n1 only HC-06 Bluetooth module\n4 only 28BYJ-48 5V stepper motors with ULN2003 motor controllers [1]\n4 only 58mm plastic omni wheels\n4 only 5mm metal omni wheel couplings [2]\n24 only Arduino female-female jumper cables\n1 only proto-board to make the shield\nThe following items were obtained locally:\n1 only 6 cell AAA battery holder\n6 only 1.5 volt AA batteries\n1 only PCB two-terminal screw mount for battery wires\n1 only SPDT miniature switch\n2 only 1N4007 diodes\n1 only LM7805 regulator\n17 only 560 ohm resistors\n1 only 1200 ohm resistor\n1 only 2200 ohm resistor\n24 only M3 x 6mm bolts\n14 only M3 x 10mm bolts\n14 only M3 nuts\n9 only M4 x 10mm bolts\n4 only M4 x 50mm bolts\n21 only M4 nuts\n2 only M4 washers\n12 only tapped nylon spacers (9mm x M3\n2 only 40-pin male header strips\n1 only small female header strip (four pins used for Bluetooth module)\n1 only small sheet of 1mm (18 gauge) aluminium\n1 only base from a 20cm baking pan.\n[1]\n28BYJ-48 stepper motors were chosen for this plotter as:\nthe motors are low current\nthe motors are extremely low cost\nThe down side to these motors is that they have a tiny bit of mechanical back-lash in the 64:1 gearing which can affect the plotter accuracy\nSmall direct drive motors would be more accurate but:\nare significantly more expensive,\nwould require a larger battery due to the larger current drain,\nand would require the purchase of separate motor controllers.\nA code change would also be required.\n[2]\nThe most expensive items are the omni-wheels and the couplings.\nThe combined weight of these \u201cfree postage\u201d items appears to incur an additional postage charge if ordered together. I found it significantly cheaper to split the order.", "step_imgs": [], "step_title": "Step 2: Parts List"}, {"step": 3, "steps_text": "Omni-wheels (photo 1) only have traction in the direction of rotation. Any oblique force causes the wheel to move sideways.\nMovement in any direction is possible if we place omni-wheels along the X-axis and Y-axis as shown in photo 2.\nThe omni-wheel arrangement shown in photo 2 is ideally suited to Bresenham\u2019s line drawing algorithm.\nThe design for this plotter was inspired by the following article http://modwg.co.uk/wp-content/uploads/2015/06/Omni... which explains how to construct 3, 4, 6, and 8 wheeled omni-bots.\nMy wheel arrangement, which differs from that in the above article, offers the following advantages:\nThe wheels are ideally positioned for XY plotting.\nNo tyre scrubbing\nSimpler calculations\nSimpler electronics", "step_imgs": ["https://cdn.instructables.com/FWG/WHOD/JSUP09A0/FWGWHODJSUP09A0.LARGE.jpg", "https://cdn.instructables.com/FB0/YOU6/JSUP09A3/FB0YOU6JSUP09A3.LARGE.jpg"], "step_title": "Step 3: Theory"}, {"step": 4, "steps_text": "This step derives the forward, and inverse, kinematic equations for my \u201comni wheel CNC plotter\u201d and may be omitted.\nAssumptions\nThe robot X-axis lies along W2, W4.\nThe robot Y-axis lies along W1, W3.\nNormal rotation is clockwise looking towards the robot center.\nOmni wheels (photo 1) only have traction in the \u2018S\u2019 directions.\nThe \u2018x\u2019 and \u2018y\u2019 vector components for any given wheel are derived in photo 2.\nFor the four-wheel robot shown in photo 1 the \u2018x\u2019 and \u2018y\u2019 vector components are:\nx1 = cos(Alpha 1 + PI/2)*S1 = cos(90 + 90)* S1 = cos(180)*S1\nx2 = cos(Alpha 2 + PI/2)*S1 = cos(180 + 90)* S1 = cos(270)*S2\nx3 = cos(Alpha 3 + PI/2)*S1 = cos(270 + 90)*S1 = cos(360)*S3\nx4 = cos(Alpha 4 + PI/2)*S1 = cos(360 + 90)*S1 = cos(450)*S4\ny1 = sin(Alpha 1 + PI/2)*S1 = sin(90 + 90)* S1 = sin(180)*S1\ny2 = sin(Alpha 2 + PI/2)*S1 = sin(180 + 90)* S1 = sin(270)*S2\ny3 = sin(Alpha 3 + PI/2)*S1 = sin(270 + 90)*S1 = sin(360)*S3\ny4 = sin(Alpha 4 + PI/2)*S1 = sin(360 + 90)*S1 = sin(450)*S4\nThe resultant vectors for this robot are:\nx = x1 + x2 + x3 + x4\ny = y1 + y2 + y3 + y4\nThere is also an angular rotational component \"w\" which enables the robot to spin about its Z-axis:\nw= s1 + s2 + s3 + s4\nForward kinematics\nPhoto 3 shows the above equations written in matrix form.\nThe \u201cforward\u201d equations are not particularly useful as they calculate where the robot will be after the wheels have finished rotating.\nReverse kinematics\nWhat we want are the \u201creverse\u201d equations as these allow us to calculate how much each wheel must rotate for the robot to reach a given (X,Y) coordinate.\nThese equations also enable us to simultaneously rotate the robot body.\nCalculating the \u201cinverse matrix\u201d\nThere are several methods for obtaining the \u201cinverse\u201d of a matrix.\nThe \u201cGauss-Jordan\u201d technique, using \u201cidentity\u201d matrices, is perhaps the simplest of the manual methods. A video demonstrating this technique may be found at https://www.youtube.com/watch?v=cJg2AuSFdjw\nAnother way is to use an online \u201cinverse matrix calculator\u201d such as that found at https://www.wolframalpha.com/input/?i=calculate+in...\nThis calculator requires that the matrix information be entered in the following format:\n{{cos(180),cos(270),cos(360),cos(450)},{sin(180),sin(270),sin(360),sin(450)},{1,1,1,1}}\nPhoto 4 shows the output when you click \"compute\".\nHorizontal motion\nThe relative wheel speeds for horizontal motion may be found by plugging the following equation into the online \u201cmatrix calculator\u201d at https://www.wolframalpha.com/input/?i=matrix+calc...\nSubstituting {x,y,w} = {1,0,0} in the reverse kinematics formula:\n{S1,S2,S3,S4} = {{-0.5,0,0.25},{0,-0.5,0.25},{0.5,0,0.25},{0,0.5,0.25}}*{1,0,0}\n{S1,S2,S3,S4} = {-0.5,0,0.5,0}\nThe results are shown in photo 5. A negative sign indicates CCW rotation.\nWheel W1 rotates CCW ... wheel W3 rotates CW.\nVertical motion\nThe relative wheel speeds for vertical motion may be found by plugging the following equation into the online \u201cmatrix calculator\u201d at https://www.wolframalpha.com/input/?i=matrix+calc...\nSubstituting {x,y,w} = {0,1,0} in the reverse kinematics formula:\n{S1,S2,S3,S4} = {{-0.5,0,0.25},{0,-0.5,0.25},{0.5,0,0.25},{0,0.5,0.25}}*{0,1,0}\n{S1,S2,S3,S4} = {0,-0.5,0,0.5}\nThe results are shown in photo 6. A negative sign indicates CCW rotation.\nWheel W2 rotates CCW ... wheel W4 rotates CW.\nAngular motion\nThis feature is not required in this plotter since we are using Bresenham\u2019s line formula which only requires horizontal and vertical movement.\nThe relative wheel speeds for angular motion may be found by plugging the following equation into the online \u201cmatrix calculator\u201d at https://www.wolframalpha.com/input/?i=matrix+calc...\nSubstituting {x,y,w} = {0,0,1} in the reverse kinematics formula:\n{S1,S2,S3,S4} = {{-0.5,0,0.25},{0,-0.5,0.25},{0.5,0,0.25},{0,0.5,0.25}}*{0,0,1}\n{S1,S2,S3,S4} = {0.25,0.25,0.25,0.25}\nThe results are shown in photo 7. A negative sign indicates CCW rotation.\nAll wheels rotate in the same direction.\nDiagonal motion\nThis feature is not required in this plotter since we are using Bresenham\u2019s line formula which only requires horizontal and vertical movement.\nThe relative wheel speeds for vertical motion may be found by plugging the following equation into the online \u201cmatrix calculator\u201d at https://www.wolframalpha.com/input/?i=matrix+calc...\nSubstituting {x,y,w} = {1,1,0} in the reverse kinematics formula:\n{S1,S2,S3,S4} = {{-0.5,0,0.25},{0,-0.5,0.25},{0.5,0,0.25},{0,0.5,0.25}}*{1,1,0}\n{S1,S2,S3,S4} = {-0.5,-0.5,0.5,0.5}\nThe results are shown in photo 8. A negative sign indicates CCW rotation.\nWheels W1 and W2 rotate CCW ... wheels W3 and W4 rotate CW.\nComposite motion\nThis feature is not required in this plotter since we are using Bresenham\u2019s line formula which only requires horizontal and vertical movement.\nIt is possible to combine angular and diagonal motion by varying the {x,y,w} parameters.\nThe relative wheel speeds for combined diagonal and angular motion may be found by plugging the following equation into the online \u201cmatrix calculator\u201d at https://www.wolframalpha.com/input/?i=matrix+calc...\nSubstituting {x,y,w} = {1,1,1} in the reverse kinematics formula:\n{S1,S2,S3,S4} = {{-0.5,0,0.25},{0,-0.5,0.25},{0.5,0,0.25},{0,0.5,0.25}}*{1,1,1}\n{S1,S2,S3,S4} = {-0.25,-0.25,0.75,0.75}\nThe results are shown in photo 9. A negative sign indicates CCW rotation.\nThe relative wheel speeds in this example cause the body to rotate as the plotter moves diagonally.", "step_imgs": ["https://cdn.instructables.com/FVF/LICD/JSUP0A1G/FVFLICDJSUP0A1G.LARGE.jpg", "https://cdn.instructables.com/F7Z/KG06/JSUP0A25/F7ZKG06JSUP0A25.LARGE.jpg", "https://cdn.instructables.com/FIQ/YAZQ/JSYZ8COV/FIQYAZQJSYZ8COV.LARGE.jpg", "https://cdn.instructables.com/FIA/QZHD/JSYZ8COW/FIAQZHDJSYZ8COW.LARGE.jpg", "https://cdn.instructables.com/FXS/TPE5/JSYZ8COX/FXSTPE5JSYZ8COX.LARGE.jpg", "https://cdn.instructables.com/F9P/CR8D/JSYZ8COY/F9PCR8DJSYZ8COY.LARGE.jpg", "https://cdn.instructables.com/FGM/8G2F/JSYZ8COZ/FGM8G2FJSYZ8COZ.LARGE.jpg", "https://cdn.instructables.com/F64/2NXU/JSYZ8CP0/F642NXUJSYZ8CP0.LARGE.jpg", "https://cdn.instructables.com/FJ6/SZ0D/JSYZ8CP1/FJ6SZ0DJSYZ8CP1.LARGE.jpg"], "step_title": "Step 4: Kinematics"}, {"step": 5, "steps_text": "Design considerations\nIt is essential that the Omni-wheels maintain contact with the floor at all times. To allow for wheel imperfections, and undulating surfaces, the chassis must flex.\nTwo possible solutions are shown in photo 1:\nUse flexible plastic such as a CD (red circle) ... not tried\nBuild a pivot joint into the chassis.\nThe second option is described below.\nChassis\nThe chassis dimensions are not critical.\nEach base-plate (photo 1) is made from 1mm (18 gauge) aluminium sheet.\nThe two L-shaped base-plates form a square when butted together.\nA diagonal of 120mm, which is the diameter of a CD, is obtained if you make each baseplate 84mm x 42mm with a 15mm lip.\nEqual traction on each wheel is obtained by loosely clamping the L-shaped base-plates together by means of a single 4mm nut and bolt mid-way through each lip. \u201cDouble-nut\u201d the bolt, as shown in photo 3, to prevent the bolt unscrewing. A 4mm washer was placed beneath the bolt-head and beneath the nuts. Do not place a washer between the base-plates.\nThe aluminium sheet was cut and folded using the method described in my instructable https://www.instructables.com/id/How-to-Cut-Fold-...\nMotor Brackets\nFour motor brackets are required for the 28BYJ-48 stepping motors.\nThe dimensions and holes sizes for each bracket are shown in photo 2. The brackets are made from 1mm (18 gauge) aluminium sheet.\nEach motor bracket is fastened to the base-plates (chassis) by means of 3mm nuts and bolts.\nConstruction tips:\ndrill 3mm pilot holes in the first bracket\nuse this first bracket as a template for the remaining three brackets\nenlarge the 4mm and 9mm holes\nnow fold the brackets\nChassis assembly\nPhoto 3 shows the assembled chassis resting on a flat surface.\nPhoto 4 demonstrates the flexing motion of the chassis when an object is placed beneath the rear motor. All wheels maintain contact with the surface even if one or more wheels are raised.\nComponent tray\nThe component tray is made from the bottom disc from a 20cm baking tin ... ask your better half first !!\nAll electronic modules are attached to this disc using 3mm bolts and threaded nylon spacers.\nThe component tray is attached to the chassis by means of four M4 x 50mm nuts and bolts as shown in photo 5\nThese four bolts pass through the component tray as shown in photo 6. Four additional nuts are then used to anchor the component tray in place.", "step_imgs": ["https://cdn.instructables.com/FGI/KP45/JSUP1J1W/FGIKP45JSUP1J1W.LARGE.jpg", "https://cdn.instructables.com/FCA/1Q9B/JSUP0AGA/FCA1Q9BJSUP0AGA.LARGE.jpg", "https://cdn.instructables.com/FGH/NBHW/JSUP0AGG/FGHNBHWJSUP0AGG.LARGE.jpg", "https://cdn.instructables.com/FBW/7DR8/JSUP0AKA/FBW7DR8JSUP0AKA.LARGE.jpg", "https://cdn.instructables.com/FY0/UUL5/JSUP0AKH/FY0UUL5JSUP0AKH.LARGE.jpg", "https://cdn.instructables.com/FN4/KAC7/JSUP0B8K/FN4KAC7JSUP0B8K.LARGE.jpg"], "step_title": "Step 5: Metal Work"}, {"step": 6, "steps_text": "The pen_lift assembly comprises an SG-90 servo, an ink pen, a simple \u201ccollar\u201d, and a bracket as shown in photo 3.\nThe bracket dimensions are shown in photo 1.\nThe bracket and servo are shown in photo 3. The servo has been cable-tied into position with a small piece of double-sided tape beneath to prevent slippage.\nPhoto 4 shows the completed pen_lift.\nThe orange \u201ccollar\u201d comprises a small plastic disk glued to the center of a radio knob that has been drilled to size ... but anything that enables the servo to raise the pen will do.\nConstruction tip:\nDrill 3mm pilot holes in each of the hole positions ... do not bend the bracket.\nNext place the bracket on the component tray and drill each of the three in-line holes.\nPlace a 3mm bolt in the first hole before drilling the remaining two as shown in photo 2. This ensures that the remaining two holes will be in the correct position.\nNow custom fit each of the center holes to your pen diameter before bending the bracket.", "step_imgs": ["https://cdn.instructables.com/FM4/UFSG/JSUP0BFF/FM4UFSGJSUP0BFF.LARGE.jpg", "https://cdn.instructables.com/F2C/CMJB/JSUP0BFM/F2CCMJBJSUP0BFM.LARGE.jpg", "https://cdn.instructables.com/F7J/APJ2/JSUP0BFW/F7JAPJ2JSUP0BFW.LARGE.jpg", "https://cdn.instructables.com/FWI/ISBZ/JSUP0BG1/FWIISBZJSUP0BG1.LARGE.jpg"], "step_title": "Step 6: Pen Lift"}, {"step": 7, "steps_text": "Plotter software\nUnplug the motor shield. This removes the Bluetooth module and external 9V supply\nConnect a USB cable between your Arduino and your PC\nDownload the attached file \u201comni_wheel_plotter.ino\u201d\nCopy the file contents into a new Arduino sketch using a text editor, such as Notepad++.\nSave the sketch as \u201comni_wheel_plotter\u201d (without the quotes) then upload it to your Arduino.\nClick \u201cTools|Serial Monitor\u201d\nSet the \u201cbaud speed\u201d to 9600 ... a menu should appear\nClose the Arduino IDE (\u201cintegrated development environment\u201d)\nLeave the USB cable connected\nLeave the motor shield disconnected.\nTerminal software\nData flow to the plotter requires a terminal that:\nsupports the XON XOFF protocol,\nis able to send text files, and\ncan be configured to pause after each linefeed character [1]\nSuitable terminal software includes:\n\u201cCoolTerm\u201d for Windows from http://freeware.the-meiers.org/\nhttps://www.instructables.com/id/CNC-Gcode-Sender...\nInstallation instructions for CoolTerm\nDownload the settings file \"default.stc\" (attached)\nDownload \"CoolTerm\" for Windows from \"http://freeware.the-meiers.org/\"\nUnzip the file \"CoolTermWin.zip\"\nCopy the entire folder \"CoolTermWin\" to your \"desktop\"\nCopy \"default.stc\" into the \"CoolTermWin\" folder [2]\nUnplug the motor shield (this disconnects the Bluetooth module & external power)\nConnect a USB cable to your plotter.\nDouble \"left-click\" the file \"CoolTerm.exe\" within the \"CoolTermWin\" folder to run.\nLeft_click \"Connect\"\nType \"menu\" ... a menu should appear (photo 1)\nExperiment with the options. [3]\nUnplug the USB cable.\n[1]\nIt is essential that the terminal waits for an XOFF signal between lines of g-code as the plotter does not have an input buffer.\n[2]\nThe \"default.stc\" file contains the Omni wheel plotter settings that I use. The default port when using a USB cable is COM3 ... you may need to change this.\n[3]\nAt this stage the Arduino \u201cthinks\u201d that the motor shield is connected. This step confirms that both software packages are working.", "step_imgs": ["https://cdn.instructables.com/FOF/T00W/JSUP5QDJ/FOFT00WJSUP5QDJ.LARGE.jpg"], "step_title": "Step 7: Software Installation"}, {"step": 8, "steps_text": "We are now ready to talk to the plotter via Bluetooth:\nPower up the plotter\nDisconnect the USB cable from the plotter.\nPlug the motor shield into the plotter\nPlug the HC-06 Bluetooth module (photo 1) into the shield\nApply power to the shield ... a Bluetooth LED should start flashing.\n\u201cPair\u201d your PC to the plotter\nOpen \u201cSettings\u201d on your PC and select \u201cDevices: Bluetoth, printers, mouse\u201d (photo 2).\nClick \u201cBluetooth & other devices\u201d (photo 3).\nTurn on your PC\u2019s Bluetooth (photo 4 ... blue button) then\nclick the \u201c+\u201d button to \u201cAdd bluetooth or another device\u201d.\nNow click \u201cBluetooth: Mice, keyboards, pens, or other kinds of Bluetooth devices\u201d.\nClick \u201cHC-06\u201d in the \u201cAdd a Device\u201d screen (photo 5).\nEnter the pin number 1234 when asked (photo 6).\nWait for a \u201cReady to go\u201d message (photo 7)\nThe Bluetooth LED will continue to flash.\nControlling your plotter via Bluetooth\nDouble \"left-click\" the file \"CoolTerm.exe\" within the \"CoolTermWin\".\nLeft_click \"Connect\" ... the Bluetooth LED should stop flashing.\nIf not then the Bluetooth module is using a different COM port ... mine uses COM8.\nTo change COM ports click \u201cConnect|Options|Rescan serial ports\u201d.\nOnce you have made a connection the Bluetooth LED will stop flashing.\nClick \u201cSave\u201d and save your updated settings to \u201cdefault.stc\u201d\nType \u201cmenu\u201d ... a menu should appear when you press the \u201center\u201d key\nExperiment with the options ... they should work the same as if you had a USB cable.\nSending a g-code file to the plotter\nCopy the attached \u201csquare.gcode\u201d file into your \u201cCoolTermWin\u201d folder.\nRename the file to \u201csquare.gcode.txt\u201d or \u201csquare.txt\u201d [1]\nRun \u201cCoolTerm\u201d [2]\nClick \u201cConnection|Send Textfile\u201d and select the file \u201csquare.txt\u201d\nClick \u201copen\u201d and your plotter should start working.\nThe plot is finished when the progress-bar reaches 100%\n[1]\n\u201cCoolTerm\u201d does not have a \u201cdisplay all files\u201d option ... it only displays files with a file-extension that it supports. The simplest solution is to add a .txt extension to your g-code files.\n[2]\n\u201cCoolTerm\u201d uses the settings in the \u201cdefault.stc\u201d file at startup. The \u201cOpen\u201d and \u201cSave\u201d menus allow you to update the \u201cdefault.stc\u201d file should you need to change your COM port settings.", "step_imgs": ["https://cdn.instructables.com/FK5/UXKH/JSUP0CMP/FK5UXKHJSUP0CMP.LARGE.jpg", "https://cdn.instructables.com/FFO/BUZI/JSUP0CMQ/FFOBUZIJSUP0CMQ.LARGE.jpg", "https://cdn.instructables.com/FNN/326D/JSUP0CNL/FNN326DJSUP0CNL.LARGE.jpg", "https://cdn.instructables.com/FQP/VRBV/JSUP0CNS/FQPVRBVJSUP0CNS.LARGE.jpg", "https://cdn.instructables.com/FK4/N3BE/JSUP0CO6/FK4N3BEJSUP0CO6.LARGE.jpg", "https://cdn.instructables.com/FG9/YLHW/JSUP0COE/FG9YLHWJSUP0COE.LARGE.jpg", "https://cdn.instructables.com/FDX/OSMA/JSUP0COR/FDXOSMAJSUP0COR.LARGE.jpg", "https://cdn.instructables.com/F59/EWUF/JSUP0COV/F59EWUFJSUP0COV.LARGE.jpg", "https://cdn.instructables.com/FNG/W78X/JSUP0COW/FNGW78XJSUP0COW.LARGE.jpg"], "step_title": "Step 8: Connecting Via Bluetooth"}, {"step": 9, "steps_text": "This plotter features:\na small foot-print\nunrestricted paper size (within reason)\n22 steps per mm precision\nBluetooth operation\nThe plotter may be controlled using an Android cell-phone or tablet. Instructions for doing this are given in my instructable https://www.instructables.com/id/CNC-Graphics-Tab...\nThe 64:1 plastic gears within each 28BYJ-48 stepping motor introduce a tiny amount of \u201cbacklash\u201d. Direct drive stepping motors should eliminate this backlash but will require alternate motor controllers, a higher capacity battery, and a few minor code changes.\nUnlike a traditional XY plotter with fixed guide-rails, the accuracy of this plotter is reliant upon:\nall wheels having the same diameter\nall wheels maintaining contact with the surface\nall rollers working freely\nThe plots are remarkably good considering these mechanical requirements.\nNot tried ... coating the wheels with \"grippo\" (as used in outdoor bowls), or a fine grit, may prevent wheel slip on glossy paper.\n  Click here   to view my other instructables.", "step_imgs": [], "step_title": "Step 9: Summary"}], "channel": "CNC"}, {"category": "Technology", "description": "Hi\nIn this project, I had built a very useful panorama photography tool. This motorized pan head is made in a way that this is universal and any camera can be mounted with a standard universal quarter inch thread. The panning head can be mounted on any standard tripod with quarter inch threads and it has a standard quarter-inch bolt on which any camera or mobile can be attached on top of the panning head.\nThis project is very useful in taking stills, changing pan angles while taking stills. Taking panorama shots. This is also a boon while taking video shots and doing product videography. This will give you smooth panning videos for some professional videography. You can manually track a moving object while moving from left to right or right to left for motion videos. I have mentioned some of the uses else more depends on your creativity.\nThis project has two parts. One is motorized panning head and the other is the power supply and the control remote. To keep the things simple I have kept the remote unit wired.\nThis photography tool has the following controls and modes.\n1) On-off switch to turn the panning head on or off.\n2) left or right panning head switch to pan left or right\n3) A switch to pan continuously or a momentary pan switch according to the direction selected in mode 2\n4) Panning speed control.\nI have listed all the steps involved in the process. I hope you would be tempted to make one.", "title": "DIY Motorized Panorama Head Photography Tool", "url": "https://www.instructables.com/id/DIY-Motorized-Panorama-Head-Photography-Tool/", "steps": [{"step": 1, "steps_text": "Take two 75 mm PVC pipe end caps and make holes at the center.", "step_imgs": ["https://cdn.instructables.com/FT0/GKAL/JSUP0AID/FT0GKALJSUP0AID.LARGE.jpg", "https://cdn.instructables.com/FYS/ZMCS/JSUP0AKB/FYSZMCSJSUP0AKB.LARGE.jpg"], "step_title": "Step 1: Take Two Pvc Pipe End Caps"}, {"step": 2, "steps_text": "I have used a DC geared motor with 120 RPM as I had one laying with me. Probably using 60 RPM motor will be more beneficial as it will give you more torque at low RPM. But even using 120 RPM will be quite good enough. As we are going to use the speed controller for this PAN head in later on stage.", "step_imgs": ["https://cdn.instructables.com/FIO/43LC/JSUP0AKG/FIO43LCJSUP0AKG.LARGE.jpg", "https://cdn.instructables.com/FQD/TFM1/JSUP0AKM/FQDTFM1JSUP0AKM.LARGE.jpg"], "step_title": "Step 2: Take DC Geard Motor and Fixing in One of the End Cap"}, {"step": 3, "steps_text": "I have taken a quarter inch nut and made a hex pattern slot at the center bottom part of the end cap. Then I roughened the surface from inside of the end cap and secured it with the epoxy adhesive. I also backed the inside of the bolt with an iron washer to make it more sturdy. Then I drilled a hole at one side and fixed a 12v barrel jack adapter socket to give supply to the motor. Two wires were directly soldered to the motor.", "step_imgs": ["https://cdn.instructables.com/FVY/QO36/JSUP0ALC/FVYQO36JSUP0ALC.LARGE.jpg", "https://cdn.instructables.com/FQP/B18S/JSUP0AND/FQPB18SJSUP0AND.LARGE.jpg", "https://cdn.instructables.com/FGC/6519/JSUP0APA/FGC6519JSUP0APA.LARGE.jpg", "https://cdn.instructables.com/FAU/KHT6/JSUP0APG/FAUKHT6JSUP0APG.LARGE.jpg"], "step_title": "Step 3: Making Bottom Part of PAN Head"}, {"step": 4, "steps_text": "Then I took a pipe piece of 75 mm and closed two end caps back to back. Then I took one quarter inch bolt and filed some of the threaded parts of the bolt to adapt it to the motor adapter. Then I cut the hex part of the bolt and removed any cutting burrs. This will be a universal adapter to fix any camera or mobile phone holder with a standard quarter-inch bolt mount system. This completes our main part of motorized panorama head.", "step_imgs": ["https://cdn.instructables.com/FG3/G0X7/JSUP0ARD/FG3G0X7JSUP0ARD.LARGE.jpg", "https://cdn.instructables.com/FA9/CRRU/JSUP0AAE/FA9CRRUJSUP0AAE.LARGE.jpg", "https://cdn.instructables.com/F4Q/KP4X/JSUP0AAV/F4QKP4XJSUP0AAV.LARGE.jpg", "https://cdn.instructables.com/F68/LQRC/JSUP0AAB/F68LQRCJSUP0AAB.LARGE.jpg", "https://cdn.instructables.com/FCQ/72O8/JSUP0ACN/FCQ72O8JSUP0ACN.LARGE.jpg", "https://cdn.instructables.com/FAL/YPF2/JSUP0ACQ/FALYPF2JSUP0ACQ.LARGE.jpg"], "step_title": "Step 4: Completing the Pan Head Assembly"}, {"step": 5, "steps_text": "I took 30mm PVC pipe piece of about 230 mm length. As shown in the figure there are following parts in the remote.\n1) On-off switch 2 pcs ( one for on off and one for continuous rotation )\n2) Push to on switch 1 pcs ( Momentary rotation)\n3) Two way two pole switch ( Left and right direction panning of the head)\n4) Motor Speed control board ( To control the panning speed of motorized head)\n5) 9v battery terminal clip\n6) 9v battery\n7) RCA socket ( Controlled power out from socket to panorama head from remote)\nAll the electronics are wired up and fixed in the remote body. The output is taken from the RCA socket and fed to the motorized PAN head. I have later on increased the length of the wire coming out form remote to PAN head for about three meters or say about ten feet so that I can control the PAN head from far away and I think that is sufficient.", "step_imgs": ["https://cdn.instructables.com/F7L/5CFR/JSUP0ACX/F7L5CFRJSUP0ACX.LARGE.jpg", "https://cdn.instructables.com/FUV/G3FW/JSUP0ACY/FUVG3FWJSUP0ACY.LARGE.jpg", "https://cdn.instructables.com/FGZ/U0OJ/JSUP0AD5/FGZU0OJJSUP0AD5.LARGE.jpg"], "step_title": "Step 5: Making Remote With 30mm PVC Pipe for Panorama Head"}, {"step": 6, "steps_text": "I installed the PAN head on the small tripod and fixed a mobile phone on to the panning head with standard quarter-inch panning adapter for the smartphone. Here are some of the result of the photographs taken with the motorized PAN head. I think you loved making of this simple but effective photography tool. Do let me know your feedback on what you think about it. I have filmed an entire video of the above project and you can find a video on top of this instructable. Thanks for your time and interest.", "step_imgs": ["https://cdn.instructables.com/FLV/YYXB/JSUP0AEB/FLVYYXBJSUP0AEB.LARGE.jpg", "https://cdn.instructables.com/FIW/G7G7/JSUP0AG9/FIWG7G7JSUP0AG9.LARGE.jpg", "https://cdn.instructables.com/FWF/VORM/JSUP0AGB/FWFVORMJSUP0AGB.LARGE.jpg"], "step_title": "Step 6: Pan Head in Action and Some of the Sample Photos"}], "channel": "Photography"}, {"category": "Technology", "description": "In college, I would constantly sleep over in friends' rooms or find myself in a situation where I need earplugs. I've tried many earplugs, but these seem to be the only ones that work without making my ears sore. Since the earplugs come in a container, I would have to carry them around loosely somewhere before using them. That's when I came up with this idea for EarPods; a simple magnetic case to hold my earplugs. These truly block out the sound and your environment all in a comfortable compact case. The case mimics the real AirPods case's opening and satisfying click sound. It's a really easy 2 part print with very little assembly.", "title": "EarPods Earplug Case", "url": "https://www.instructables.com/id/EarPods-Earplug-Case/", "steps": [{"step": 1, "steps_text": "3D Prints\n5mm x 1mm magnets\nPaper clip\nEarplugs", "step_imgs": ["https://cdn.instructables.com/FXT/ER2Y/JSUOY30D/FXTER2YJSUOY30D.LARGE.jpg"], "step_title": "Step 1: Parts"}, {"step": 2, "steps_text": "Use hot glue or super glue to stick one magnet to each side of the case parts. Make sure they attract when they close; mark with a sharpie to be sure.\nBend a paperclip straight and insert into the backside where the hinge lies. Pull out again and cut the excess paperclip.\nPut a dab of superglue or hot glue to seal the end of the hole where the paperclip was inserted to block it off.\nLet everything dry.\nThis is a nice simple technique for making hinges that aren't 3D printed. The paperclip is metal, so it should last longer than a purely 3D printed hinge.", "step_imgs": ["https://cdn.instructables.com/FYE/DJ43/JSUOY30E/FYEDJ43JSUOY30E.LARGE.jpg", "https://cdn.instructables.com/FT7/HXTD/JSUOY30Y/FT7HXTDJSUOY30Y.LARGE.jpg", "https://cdn.instructables.com/FSM/5BKW/JSUOY313/FSM5BKWJSUOY313.LARGE.jpg", "https://cdn.instructables.com/FKG/BJRD/JSUOY31T/FKGBJRDJSUOY31T.LARGE.jpg", "https://cdn.instructables.com/FY5/239T/JSUOY325/FY5239TJSUOY325.LARGE.jpg", "https://cdn.instructables.com/F39/710J/JSUOY32H/F39710JJSUOY32H.LARGE.jpg"], "step_title": "Step 2: Assembly"}, {"step": 3, "steps_text": "The Earpods have been really convenient. After using them for the past 3 months, they have been an everyday carry item for me. They're light, compact, and fun to open and close, and I can definitely see myself using this hinge idea in another project down the line.", "step_imgs": ["https://cdn.instructables.com/F2Q/1EVS/JSUOY33C/F2Q1EVSJSUOY33C.LARGE.jpg", "https://cdn.instructables.com/FNQ/YULZ/JSUOY33W/FNQYULZJSUOY33W.LARGE.jpg", "https://cdn.instructables.com/FOB/AIDK/JSUOY34L/FOBAIDKJSUOY34L.LARGE.jpg", "https://cdn.instructables.com/F9H/36DA/JSUOY362/F9H36DAJSUOY362.LARGE.jpg", "https://cdn.instructables.com/FFT/EUZM/JSUOY364/FFTEUZMJSUOY364.LARGE.jpg"], "step_title": "Step 3: Conclusion"}], "channel": "3D Printing"}, {"category": "Technology", "description": "About This Candle & How to Read This Instructable\nHere's my take on a LED candle that offers the full experience of a real candle. Start to finish.\nBe sure to watch the YouTube video below!\nBackground:\nI bought my first Arduino about 3 years ago with a LED candle project in mind. I wanted to make a candle that you could light with a match, then blow it out. I've been fine-tuning various aspects of it ever since. About a month ago, I realized that adding smoke was a very real possibility. Since then, I've been finalizing the candle, recording videos, and preparing content for this Instructable.\nHow To Read This Instructable\nThis candle is a very technical candle, so you and I must proceed carefully for the sake of clarity.\n[ Brackets ] will surround secondary information like tips, tricks, and details that are totally OK to skip your first time through this. Then, if you end up actually doing this Instructable, I think you'll find the content in those brackets worth reading.\nI Won't Micromanage Your Soldering Tip\nI built this candle around various things I had available. Notably, the vase. Chances are, my vase is a different size than your vase. Therefore, I'm not going to tell you exactly how to lay out the components and where to solder what. But I will give you clear Fritzing diagrams so you have a clear idea of what connections you need to make.\n[Hopefully this helps keep this content insightful while reducing the inapplicable.]\nSee the brackets? You would have been totally OK skipping over that.\nYou Like Videos? Me too.\nI uploaded this 12-minute video to YouTube as a supplement to this Instructable: Be sure to check it out.\nAdditional Resources\nGitHub Repo\nKeithsTestGarage.com - additional details will be posted here over time.", "title": "LED Candle - Lights, Flickers, Blows Out, Smokes, and Smells", "url": "https://www.instructables.com/id/About-This-Candle-How-to-Read-This-Instructable/", "steps": [{"step": 1, "steps_text": "The whole project is pretty big. I'm splitting it into 3 bite-sized milestones as is very natural, as well as providing a Fritzing diagram and full code for each one. This should be less daunting for both of us.\nMilestone 1: Built-In LED\nLighting with a match\nBlowing out with your breath\nMilestone 2: + NeoPixels\nLighting with a match\nBlowing out with your breath\nFull NeoPixel implementation\nMilestone 3: + Smoke\nLighting with a match\nBlowing out with your breath\nFull NeoPixel implementation\nSmoke", "step_imgs": ["https://cdn.instructables.com/FNI/IPIT/JSUOY5OX/FNIIPITJSUOY5OX.LARGE.jpg", "https://cdn.instructables.com/FAG/FXSJ/JSUOYA6X/FAGFXSJJSUOYA6X.LARGE.jpg", "https://cdn.instructables.com/FXQ/PQVQ/JSUOYAKJ/FXQPQVQJSUOYAKJ.LARGE.jpg"], "step_title": "Step 1: Three Milestones"}, {"step": 2, "steps_text": "Core Parts\nI figure you have a lot of parts on hand, and I'm having trouble trying to figure out how granular to be with my parts list. I think rather than trying to psychoanalyze you from afar, I'll just post links to the items I bought. Then, you can decide what you need, what you don't, and where to deviate from my list.\nMilestone 1\nArduino * Uno (or Pro Mini + FTDI Friend)\n5mm Infrared sensor\nMicrophone MAX4466\n10k resistor\nMilestone 2\nRGBWW NeoPixel Strip (cut 2 segments of 3 pixels, save the rest for another project)\n2x 4.7k resistors\n1000uF capacitor\nMilestone 3\n12v 5A AC/DC power supply\n5.5 x 2.1 Pigtail connector w/ decent wire gauge (I have these 18ga ones)\nKanthal wire\n5A Fuse and holder (here's an inexpensive kit w/ both)\nSmall glass container for holding wick & solution\nTiki torch wick\nCandle stick (some sort of candle to chop and melt)\nVegetable glycerin (cheaper at the pharmacy)\nThief oil\nLarge glass jar\nClips, or something similar\n18ga or larger wire\nSyringe\n10k resistor\nMOSFET Power Transistor P30N06LE **\nProject Etc.\nFiberglass PCB boards. I like this variety kit. Good range of sizes and cheap enough to use them without worrying too much about the cost.\nConnectors - I used a mixture of connectors, but, in the future, I'd definitely only use spring terminals for everything. They pull apart and combine into longer strips. (that would have saved me a lot of desoldering.)\n[* About the Arduino: I'm listing an Arduino Uno, but my photos show an Arduino Pro MIni. They have the same pin mappings. I figure you'll probably build it on an Uno as I did, and then move to something smaller when you're ready.]\n[** I used a IRFZ44N in the pics/video, which seems to work great, but it's not ideal. Get the P30N06LE instead.]\n[Notice: I use affiliate links. Here is my stance on how I will and won't use them. In a nutshell, I'm not going to let affiliate revenue dictate what content I create. Any revenue from your clicks will go towards an oscilloscope, because I can't seem to rationalize pulling $500 out of our regular envelopes for one.]", "step_imgs": ["https://cdn.instructables.com/F3O/RY3W/JSUOYCWS/F3ORY3WJSUOYCWS.LARGE.jpg", "https://cdn.instructables.com/F69/NV4W/JSUOYCWR/F69NV4WJSUOYCWR.LARGE.jpg", "https://cdn.instructables.com/FPN/WDFZ/JSUOYCWQ/FPNWDFZJSUOYCWQ.LARGE.jpg", "https://cdn.instructables.com/FVO/HBW2/JSUOYAZ7/FVOHBW2JSUOYAZ7.LARGE.jpg", "https://cdn.instructables.com/FWU/IXX5/JSUOYCWT/FWUIXX5JSUOYCWT.LARGE.jpg"], "step_title": "Step 2: Gather Parts"}, {"step": 3, "steps_text": "This is a simple step to help you configure the IR and microphone sensors. Once done, you'll be toggling on and off that built-in LED in style.\nNote for Newbies\nI expect this project to be for more advanced users, so I don't plan on giving entry level advice about how to use an Arduino. But, this step is pretty straightforward, so if you're here for the fun, I'd recommend going through this guide first: https://www.arduino.cc/en/Guide/ArduinoUno.\nThen, come on back!\nThe Code\n[ View prettier code at: https://github.com/keith204/KeithsLEDCandle ]\nI've attached this file to this Instructable.\n<p>// FIRST TEST OF MIC AND FLAME SENSOR<br>// Keith Kelly 2019-03-04 <a href=\"http://www.KeithsTestGarage.com\"> www.KeithsTestGarage.com\n</a>\n// Milestone 1 of 3</p><p>#define MIC_PIN A1   // Microphone Pin\n#define FLAME_PIN A3 // IR Sensor Pin</p><p>#define FLAME_DURATION 2000 // millis- duration of flame before lighting candle\n#define FLAME_THRESHOLD 800 // 0...1023 - analog reading of FLAME value to detect\n#define MIC_THRESHOLD 950 // 0...1023 - analog reading of MIC value to detect</p><p>// Vars to keep track of things\nbool smoking = false;\nbool flaming = false;</p><p>bool lit = false;\nint flame_val = 0;\nint mic_val = 0;</p><p>// Vars for tracking pseudo-async times\nunsigned long previousMillis = 0;        // will store last time LED was updated\nunsigned long flameStartedMillis = 0;    // will store last time LED was updated</p><p>void setup(){</p><p>    Serial.begin(9600); // uncomment this to figure sensor readings.</p><p>    // initialize pins\n    pinMode(FLAME_PIN, INPUT);\n    pinMode(MIC_PIN, INPUT);\n    pinMode(LED_BUILTIN, OUTPUT); </p><p>    digitalWrite(LED_BUILTIN, LOW); // Turn OFF built-in LED</p><p>    blowOutCandle();  // Make sure candle is off (but don't smoke)</p><p>}</p><p>void loop(){\n    checkSensors(); // Check for fire and strong winds\n}</p><p>// Checks for fire and strong winds every 50 milliseconds\nvoid checkSensors(){\n  unsigned long currentMillis = millis();\n  if (currentMillis - previousMillis >= 50) { // only check every 50ms\n    flame_val = analogRead( FLAME_PIN );\n    mic_val = analogRead( MIC_PIN );\n    previousMillis = currentMillis;\n    \n    //  Uncomment below to check sensor readings.  \n    Serial.print(mic_val);\n    Serial.print(\" : \");\n    Serial.println(flame_val);\n  }</p><p>  if (lit && mic_val > MIC_THRESHOLD){ // MIC REGISTERED SOUND.  BLOW OUT.\n    blowOutCandle(); // Turn off light (and start SMOKING!)\n    lit = false;\n  }</p><p>  if (!lit){ // if candle isn't lit\n    if (flame_val > FLAME_THRESHOLD)  { // if flame is detected\n        \n        // record the starting time (if flame not yet detected)\n        if (!flaming){  // if not flaming\n          flaming = true; \n          flameStartedMillis = millis();  // record time that flaming begins\n        }\n        else if (checkFlame()){ // has flame been flaming long enough?          \n          lightCandle(); // ok finally light it up. \n          lit = true; \n        }\n    }\n    else{ // no flame detected\n      flaming = false; \n    }    \n  }  \n}</p><p>// Check if flame has been detected long enough.\nbool checkFlame(){    \n  unsigned long currentMillis = millis(); // get current time\n  if (currentMillis - flameStartedMillis >= FLAME_DURATION) {\n    return true;  \n  }\n  else\n    return false;\n}</p><p>// (pseudo)ASYNC light the candle by starting the animations\nvoid lightCandle(){\n    digitalWrite(LED_BUILTIN, HIGH);\n}</p><p>void blowOutCandle(){    \n  digitalWrite(LED_BUILTIN, LOW);\n}</p>\nOpen Serial Monitor and Adjust Thresholds\nOnce you have everything hooked up according to the Fritzing diagram and the code uploaded, open up Serial Monitor and play with some wind & fire.\nYour sensors may read different values than mine. Adjust thresholds at the top of the code file where necessary.\nThat's it. Wire everything up using the Fritzing diagram above. Nothing special here.", "step_imgs": ["https://cdn.instructables.com/FJ2/X61L/JSUOY1LD/FJ2X61LJSUOY1LD.LARGE.jpg"], "step_title": "Step 3: Milestone 1: Simple Test"}, {"step": 4, "steps_text": "For The Non-Smokers...\nThe candle is still really cool without the smoke. That may be all you want. Power with USB or whatever you'd like. Here's the Fritzing diagram and code for that.\nChanges since Milestone 1:\nNo longer using the built-in LED\nFull NeoPixel functionality included\nNeoPatterns.h file now included\nNote: Now that you're using NeoPixels, you need to install a Library from within your Arduino IDE's library manager. The library is: Adafruit_NeoPixel.\nWiring\nAs you can see in the Fritzing diagram, the right side is new. I don't think there's anything notable to say about the wiring at this stage. Follow the diagram and you'll be good to go.\nCode\nView code at: https://github.com/keith204/KeithsLEDCandle. I've also attached the code to this Instructable.\nKeithsCandle_M2_NoSmoke.ino\nTo keep things simple, I've included a bunch of comments in the code to avoid having to explain much here.\n// Using technique from here  https://learn.adafruit.com/multi-tasking-the-ardu...\n//    see link above for a good tutorial on this multi-task-ish way of doing things.\n// Flicker Realistic Candle\n// Keith Kelly 2019-03-04  www.KeithsTestGarage.com\n\n// Milestone 2 of 3\n#ifdef __AVR__\n#include \n#endif\n// NeoPatterns will require the Adafruit NeoPixel library.  Be sure to install that.  \n#include \"NeoPatterns.h\"\n#define NEO_PIN 5    // First RGBW Strip Pin\n#define NEO2_PIN 9   // Second RGBW Strip Pin\n#define NEO_COUNT 3  // First RGBW Strip Count\n#define NEO2_COUNT 3 // Second RGBW Strip Count\n#define MIC_PIN A1   // Microphone Pin\n#define FLAME_PIN A3 // IR Sensor Pin\n#define FLAME_DURATION 2000 // millis- duration of flame before lighting candle\n#define FLAME_THRESHOLD 800 // 0...1023 - analog reading of FLAME value to detect\n#define MIC_THRESHOLD 950 // 0...1023 - analog reading of MIC value to detect\nvoid Strip1Complete(); \nvoid Strip2Complete();\nNeoPatterns Strip1(NEO_COUNT, NEO_PIN, NEO_RGBW + NEO_KHZ800, &Strip1Complete);\nNeoPatterns Strip2(NEO_COUNT, NEO2_PIN, NEO_RGBW + NEO_KHZ800, &Strip2Complete);\nuint32_t baseColor; // What is the ON resting color?\nuint32_t offColor;  // What is the OFF resting color?\n// Vars to keep track of things\nbool flaming = false;\nbool lit = false;\nint flame_val = 0;\nint mic_val = 0;\nbyte rnd = 0;\n// Vars for tracking pseudo-async times\nunsigned long previousMillis = 0;        // will store last time LED was updated\nunsigned long flameStartedMillis = 0;        // will store last time LED was updated\nvoid setup(){\n    //Serial.begin(9600); // uncomment this to figure sensor readings.\n    // initialize pins\n    pinMode(FLAME_PIN, INPUT);\n    pinMode(MIC_PIN, INPUT);\n    pinMode(LED_BUILTIN, OUTPUT); \n    // Make sure the following pins are OFF\n    digitalWrite(LED_BUILTIN, LOW); \n    // Initialize NeoPixel Strip 1\n    Strip1.begin();\n    Strip1.show();\n    baseColor = Strip1.Color(2, 110, 0, 100);// GRBW\n    Strip1.Color1 = baseColor;\n    // Initialize NeoPixel Strip 2\n    Strip2.begin();\n    Strip2.show();\n    baseColor = Strip2.Color(2, 110, 0, 100);// GRBW\n    Strip2.Color1 = baseColor;\n    \n    blowOutCandle();  // Make sure candle is off \n}\nvoid loop(){ \n    checkSensors(); // Check for fire and strong winds\n    Strip1.Update();\n    Strip2.Update();\n}\n// Checks for fire and strong winds every 50 milliseconds\nvoid checkSensors(){\n  unsigned long currentMillis = millis();\n  if (currentMillis - previousMillis >= 50) { // only check every 50ms\n    flame_val = analogRead( FLAME_PIN );\n    mic_val = analogRead( MIC_PIN );\n    previousMillis = currentMillis;\n    \n    //  Uncomment below to check sensor readings.  \n    //    Serial.print(mic_val);\n    //    Serial.print(\" : \");\n    //    Serial.println(flame_val);\n  }\n  if (lit && mic_val > MIC_THRESHOLD){ // MIC REGISTERED SOUND.  BLOW OUT.\n    blowOutCandle(); // Turn off light \n    lit = false;\n  }\n  if (!lit){ // if candle isn't lit\n    if (flame_val > FLAME_THRESHOLD)  { // if flame is detected\n        \n        // record the starting time (if flame not yet detected)\n        if (!flaming){  // if not flaming\n          flaming = true; \n          flameStartedMillis = millis();  // record time that flaming begins\n        }\n        else if (checkFlame()){ // has flame been flaming long enough?          \n          lightCandle(); // ok finally light it up. \n          lit = true; \n        }\n    }\n    else{ // no flame detected\n      flaming = false; \n    }\n    \n  }  \n}\n// Check if flame has been detected long enough.\nbool checkFlame(){    \n  unsigned long currentMillis = millis(); // get current time\n  if (currentMillis - flameStartedMillis >= FLAME_DURATION) {\n    return true;  \n  }\n  else\n    return false;\n}\n//------------------------------------------------------------\n//Completion Routines - get called on completion of a pattern\n//------------------------------------------------------------\n// The below configuration routines are the same except for the strip\n// being used.  I kept them separate so the strips can be configured\n// with different ranges if desired.\nvoid Strip1Complete(){\n    Strip1.Reverse();\n    if (Strip1.Direction == REVERSE){ // go back down\n        Strip1.Interval = random(5,22); // choose random speed in range\n    }\n    else{  // pattern ended.  Stop, then trigger re-flicker\n        \n        /*  This needs an explanation:  \n            \n              rnd = random(random(45,55),random(80,255));\n            You'd think that we could just do random(45,255), right?\n            Selecting the low and high randoms first helps make sure that\n            the ending random number is *more likely* to fall within a limited range.  \n            When observing the flickering of a real candle, the flame generally bounces\n            around in a certain range.  But, every once in a while, it spikes high or low.\n            This random(random, random) solves that problem!  #proudnerddadmoment\n        */\n        rnd = random(random(45,55),random(80,255)); \n        Strip1.Pixel = random(0,Strip1.numPixels()); // pick a random Pixel\n        Strip1.Interval = 1; \n        Strip1.Color2 = Strip1.Color(2,rnd,0,rnd-10); //GRBW random red and random white-10\n    }\n}\nvoid Strip2Complete(){\n    Strip2.Reverse();\n    if (Strip2.Direction == REVERSE){ // go back down        \n        Strip2.Interval = random(5,22); // choose random speed in range\n    }\n    else{  // pattern ended.  Stop, then trigger re-flicker\n        rnd = random(random(45,55),random(80,255)); // see explanation in Strip1Complete().\n        Strip2.Pixel = random(0,Strip2.numPixels()); // pick a random Pixel\n        Strip2.Interval = 1;\n        Strip2.Color2 = Strip2.Color(2,rnd,0,rnd-10); //GRBW random red and random white-10\n    }\n}\n// (pseudo)ASYNC light the candle by starting the animations\nvoid lightCandle(){\n    Strip1.Flicker(Strip1.Color1, Strip1.Color2, 20, 5);\n    Strip2.Flicker(Strip2.Color1, Strip2.Color2, 20, 5);\n}\nvoid blowOutCandle(){    \n  cWipe(offColor, 10); // synchronously turn the candle off.\n  // We don't want no stinking patterns.\n  Strip1.ActivePattern = NONE; \n  Strip2.ActivePattern = NONE;\n}\n// synchronous color wipe\nvoid cWipe(uint32_t c, uint8_t wait) {\n  for (uint16_t i = 0; i < Strip1.numPixels(); i++) {\n    Strip1.setPixelColor(i, c);\n    Strip1.show();\n    delay(wait);\n  }\n  for (uint16_t i = 0; i < Strip2.numPixels(); i++) {\n    Strip2.setPixelColor(i, c);\n    Strip2.show();\n    delay(wait);\n  }\n}\nNeoPatterns.h\nThis has a few patterns in it from Adafruit, so I've omitted most of that content. Grab the file that's attached or in the GitHub repo for the full version.\n[Code segment omitted for clarity.  See attached file.]    \n    // *****************************************\n    // START Custom animation for LED candle\n    // *****************************************\n    \n    // Initialize for a Flicker\n    void Flicker(uint32_t color1, uint32_t color2, uint16_t steps, uint8_t interval, direction dir = FORWARD)\n    {\n        ActivePattern = FLICKER;\n        Interval = interval;\n        TotalSteps = steps;\n        Color1 = color1;\n        Color2 = color2;\n        Index = 0;\n        Direction = dir;\n        Pixel = random(0,numPixels()); // random(min,max) --max is EXCLUSIVE\n    }\n    \n    // Initialize for a Flicker\n    void FlickerUpdate()\n    {\n        // Calculate linear interpolation between Color1 and Color2\n        // Optimize order of operations to minimize truncation error\n        uint8_t red = ((Red(Color1) * (TotalSteps - Index)) + (Red(Color2) * Index)) / TotalSteps;\n        uint8_t green = ((Green(Color1) * (TotalSteps - Index)) + (Green(Color2) * Index)) / TotalSteps;\n        uint8_t blue = ((Blue(Color1) * (TotalSteps - Index)) + (Blue(Color2) * Index)) / TotalSteps;\n        uint8_t white = ((White(Color1) * (TotalSteps - Index)) + (White(Color2) * Index)) / TotalSteps;\n        setPixelColor(Pixel,Color(red, green, blue, white));\n        show();\n        Increment();\n    }\n    // *****************************************\n    // END Custom animation for LED candle\n    // *****************************************\n[Code segment omitted for clarity.  See attached file.]", "step_imgs": ["https://cdn.instructables.com/FDD/L5VA/JSUOY5YP/FDDL5VAJSUOY5YP.LARGE.jpg", "https://cdn.instructables.com/F27/FDVP/JSUOYA1N/F27FDVPJSUOYA1N.LARGE.jpg", "https://cdn.instructables.com/F7Z/TFX6/JSUOY9PC/F7ZTFX6JSUOY9PC.LARGE.jpg"], "step_title": "Step 4: Milestone 2: Full Candle W/o Smoke"}, {"step": 5, "steps_text": "This is for those who want to crank it to eleven. I'm assuming you've already done Milestone 2.\nView code at: https://github.com/keith204/KeithsLEDCandle. I've also attached the code to this Instructable.\nAbout Milestone 3\nThis is a pretty considerable milestone, so I'll move the smoke mechanism information to the next page. For now, here are the code updates.\nCode\nKeithsCandle_M3_FullWithSmoke.ino\n[To keep things simple, I've included a bunch of comments in the code to avoid having to explain much here.]\nKey changes:\nAdded smoke time tracking\nAdded pin mappings and control for controlling the MOSFET\n// Using technique from here  https://learn.adafruit.com/multi-tasking-the-ardu...\n//    see link above for a good tutorial on this multi-task-ish way of doing things.\n// Flicker/Smoke Realistic Candle\n// Keith Kelly 2019-03-04  www.KeithsTestGarage.com\n\n// Milestone 3 of 3\n#ifdef __AVR__\n#include \n#endif\n// NeoPatterns will require the Adafruit NeoPixel library.  Be sure to install that.  \n#include \"NeoPatterns.h\"\n#define NEO_PIN 5    // First RGBW Strip Pin\n#define NEO2_PIN 9   // Second RGBW Strip Pin\n#define NEO_COUNT 3  // First RGBW Strip Count\n#define NEO2_COUNT 3 // Second RGBW Strip Count\n#define MIC_PIN A1   // Microphone Pin\n#define FLAME_PIN A3 // IR Sensor Pin\n#define SMOKE_PIN 3  // Smoke Pin\n#define SMOKE_TIME_MILLIS 1200 // How long should smoke wire be heated?\n#define FLAME_DURATION 2000 // millis- duration of flame before lighting candle\n#define FLAME_THRESHOLD 800 // 0...1023 - analog reading of FLAME value to detect\n#define MIC_THRESHOLD 950 // 0...1023 - analog reading of MIC value to detect\nvoid Strip1Complete(); \nvoid Strip2Complete();\nNeoPatterns Strip1(NEO_COUNT, NEO_PIN, NEO_RGBW + NEO_KHZ800, &Strip1Complete);\nNeoPatterns Strip2(NEO_COUNT, NEO2_PIN, NEO_RGBW + NEO_KHZ800, &Strip2Complete);\nuint32_t baseColor; // What is the ON resting color?\nuint32_t offColor;  // What is the OFF resting color?\n// Vars to keep track of things\nbool smoking = false;\nbool flaming = false;\nbool lit = false;\nint flame_val = 0;\nint mic_val = 0;\nbyte rnd = 0;\n// Vars for tracking pseudo-async times\nunsigned long previousMillis = 0;        // will store last time LED was updated\nunsigned long smokeStartedMillis = 0;    // time smoking started\nunsigned long flameStartedMillis = 0;        // will store last time LED was updated\nvoid setup(){\n    //Serial.begin(9600); // uncomment this to figure sensor readings.\n    // initialize pins\n    pinMode(FLAME_PIN, INPUT);\n    pinMode(MIC_PIN, INPUT);\n    pinMode(SMOKE_PIN, OUTPUT);\n    pinMode(LED_BUILTIN, OUTPUT); \n    // Make sure the following pins are OFF\n    digitalWrite(SMOKE_PIN, LOW);  \n    digitalWrite(LED_BUILTIN, LOW); \n    // Initialize NeoPixel Strip 1\n    Strip1.begin();\n    Strip1.show();\n    baseColor = Strip1.Color(2, 110, 0, 100);// GRBW\n    Strip1.Color1 = baseColor;\n    // Initialize NeoPixel Strip 2\n    Strip2.begin();\n    Strip2.show();\n    baseColor = Strip2.Color(2, 110, 0, 100);// GRBW\n    Strip2.Color1 = baseColor;\n    \n    blowOutCandle(false);  // Make sure candle is off (but don't smoke)\n}\nvoid loop(){\n    smokeCheck(); // Check if we should stop smoking.  \n    checkSensors(); // Check for fire and strong winds\n    Strip1.Update();\n    Strip2.Update();\n}\n// Checks for fire and strong winds every 50 milliseconds\nvoid checkSensors(){\n  unsigned long currentMillis = millis();\n  if (currentMillis - previousMillis >= 50) { // only check every 50ms\n    flame_val = analogRead( FLAME_PIN );\n    mic_val = analogRead( MIC_PIN );\n    previousMillis = currentMillis;\n    \n    //  Uncomment below to check sensor readings.  \n    //    Serial.print(mic_val);\n    //    Serial.print(\" : \");\n    //    Serial.println(flame_val);\n  }\n  if (lit && mic_val > MIC_THRESHOLD){ // MIC REGISTERED SOUND.  BLOW OUT.\n    blowOutCandle(true); // Turn off light (and start SMOKING!)\n    lit = false;\n  }\n  if (!lit){ // if candle isn't lit\n    if (flame_val > FLAME_THRESHOLD)  { // if flame is detected\n        \n        // record the starting time (if flame not yet detected)\n        if (!flaming){  // if not flaming\n          flaming = true; \n          flameStartedMillis = millis();  // record time that flaming begins\n        }\n        else if (checkFlame()){ // has flame been flaming long enough?          \n          lightCandle(); // ok finally light it up. \n          lit = true; \n        }\n    }\n    else{ // no flame detected\n      flaming = false; \n    }\n    \n  }  \n}\n// Check if flame has been detected long enough.\nbool checkFlame(){    \n  unsigned long currentMillis = millis(); // get current time\n  if (currentMillis - flameStartedMillis >= FLAME_DURATION) {\n    return true;  \n  }\n  else\n    return false;\n}\n//------------------------------------------------------------\n//Completion Routines - get called on completion of a pattern\n//------------------------------------------------------------\n// The below configuration routines are the same except for the strip\n// being used.  I kept them separate so the strips can be configured\n// with different ranges if desired.\nvoid Strip1Complete(){\n    Strip1.Reverse();\n    if (Strip1.Direction == REVERSE){ // go back down\n        Strip1.Interval = random(5,22); // choose random speed in range\n    }\n    else{  // pattern ended.  Stop, then trigger re-flicker\n        \n        /*  This needs an explanation:  \n            \n              rnd = random(random(45,55),random(80,255));\n            You'd think that we could just do random(45,255), right?\n            Selecting the low and high randoms first helps make sure that\n            the ending random number is *more likely* to fall within a limited range.  \n            When observing the flickering of a real candle, the flame generally bounces\n            around in a certain range.  But, every once in a while, it spikes high or low.\n            This random(random, random) solves that problem!  #proudnerddadmoment\n        */\n        rnd = random(random(45,55),random(80,255)); \n        Strip1.Pixel = random(0,Strip1.numPixels()); // pick a random Pixel\n        Strip1.Interval = 1; \n        Strip1.Color2 = Strip1.Color(2,rnd,0,rnd-10); //GRBW random red and random white-10\n    }\n}\nvoid Strip2Complete(){\n    Strip2.Reverse();\n    if (Strip2.Direction == REVERSE){ // go back down        \n        Strip2.Interval = random(5,22); // choose random speed in range\n    }\n    else{  // pattern ended.  Stop, then trigger re-flicker\n        rnd = random(random(45,55),random(80,255)); // see explanation in Strip1Complete().\n        Strip2.Pixel = random(0,Strip2.numPixels()); // pick a random Pixel\n        Strip2.Interval = 1;\n        Strip2.Color2 = Strip2.Color(2,rnd,0,rnd-10); //GRBW random red and random white-10\n    }\n}\n// (pseudo)ASYNC light the candle by starting the animations\nvoid lightCandle(){\n    Strip1.Flicker(Strip1.Color1, Strip1.Color2, 20, 5);\n    Strip2.Flicker(Strip2.Color1, Strip2.Color2, 20, 5);\n}\nvoid blowOutCandle(bool shouldSmoke){\n  if(shouldSmoke)\n    smokeStart();\n    \n  cWipe(offColor, 10); // synchronously turn the candle off.\n  // We don't want no stinking patterns.\n  Strip1.ActivePattern = NONE; \n  Strip2.ActivePattern = NONE;\n}\n// SMOKING METHODS\nvoid smokeStart(){\n  digitalWrite(SMOKE_PIN, HIGH); // HEAT SMOKE WIRE\n  smoking = true;\n  smokeStartedMillis = millis(); // record time smoking started\n}\n// Stop smoking if the time has come.\nvoid smokeCheck(){\n  if (!smoking)\n    return; // if not smoking, get out of here.\n    \n  unsigned long currentMillis = millis();\n  if (currentMillis - smokeStartedMillis >= SMOKE_TIME_MILLIS) {\n    smokeStop();    // smoke break is over\n  }\n}\n// Ok seriously now stop it\nvoid smokeStop(){\n  digitalWrite(SMOKE_PIN, LOW); // TURN OFF SMOKE WIRE\n  smoking = false;\n}\n// synchronous color wipe\n// To avoid smoke becoming fire, be sure to only \n//   use synchronous methods like this SPARINGLY and when you\n//   are sure it won't interfere with the smoking.  \n//\n// In other words, here's something that would be very bad:\n//\n//  smokeStart();\n//  cWipe(offColor, 1000);   // CPU would get caught up in\n//                              here for a while and would \n//                              not stop the smoking process\n//                              \n//  At this point, I'm only using it directly after smokeStop();\nvoid cWipe(uint32_t c, uint8_t wait) {\n  for (uint16_t i = 0; i < Strip1.numPixels(); i++) {\n    Strip1.setPixelColor(i, c);\n    Strip1.show();\n    delay(wait);\n  }\n  for (uint16_t i = 0; i < Strip2.numPixels(); i++) {\n    Strip2.setPixelColor(i, c);\n    Strip2.show();\n    delay(wait);\n  }\n}\nNeoPatterns.h\nThis didn't change from last time, but I attached it to this step to save you some clicks.\nNext\nWe make the smoking contraption.", "step_imgs": ["https://cdn.instructables.com/FXV/H7NP/JSUOY1KA/FXVH7NPJSUOY1KA.LARGE.jpg", "https://cdn.instructables.com/FF8/TASK/JSUOY9V8/FF8TASKJSUOY9V8.LARGE.jpg"], "step_title": "Step 5: Milestone 3: Full With Smoke [Code]"}, {"step": 6, "steps_text": "Watch the video for some tips. Here are some important ones that should be stated here though.\nThe Solution\nIs primarily vegetable glycerin, with a couple drops of smell good oil.\nMix it up\nFill the jar halfway\nInject some glycerin solution into the top of the wick to help it get started quicker.\nThe Wire & Wick\nI used 28 gauge Kanthal wire.\nBe sure to remove the webbing from the wick so you only have fiberglass left over.\nWrap the wire 3 or so times.\nBe sure the wire doesn't touch itself.\nThen proceed to measuring the resistance as shown below and on the video.\n4 Ohms\nThe calculations I'm giving you here are all based on 4 ohms of resistance at the wire. Be sure to measure the resistance of the wire where you're clamping it *while the wire is wrapped around the wick full of solution.* Measuring dry may give different resistance measurements.\nIf you clamp and measure 5 ohms, move the lead clamps closer inward to reduce the resistance.\nIf you need more resistance, move the lead clamps farther away.\nPlay With The Numbers\nThis is simply Ohm's law we're working with. Try using fewer volts and less resistance. See what happens. That's part of the awesome joy of doing a project like this!\nSafety\nBe sure to use a fuse in the path of the current that will travel through the wire. That way, if something strange happens, it doesn't turn into something dangerous.", "step_imgs": ["https://cdn.instructables.com/FH5/ZBP0/JSUOYCDI/FH5ZBP0JSUOYCDI.LARGE.jpg", "https://cdn.instructables.com/FGK/9HLT/JSUOYCWX/FGK9HLTJSUOYCWX.LARGE.jpg", "https://cdn.instructables.com/FXY/1JRP/JSUOYCKO/FXY1JRPJSUOYCKO.LARGE.jpg", "https://cdn.instructables.com/FH9/E4KV/JSUOYASB/FH9E4KVJSUOYASB.LARGE.jpg", "https://cdn.instructables.com/FQH/OOW9/JSUOYCOC/FQHOOW9JSUOYCOC.LARGE.jpg", "https://cdn.instructables.com/FLK/UISM/JSUOYCH2/FLKUISMJSUOYCH2.LARGE.jpg", "https://cdn.instructables.com/FJO/CCOF/JSUOYCJC/FJOCCOFJSUOYCJC.LARGE.jpg", "https://cdn.instructables.com/FA9/KN6W/JSUOYB1B/FA9KN6WJSUOYB1B.LARGE.jpg"], "step_title": "Step 6: Milestone 3: Full With Smoke [The Contraption]"}, {"step": 7, "steps_text": "I figure you'll deviate from my design quite a bit, mainly based on what you have handy. Therefore, details will be pretty slim on this. Your best bet is probably to watch the video where I show you how I did it. Then, find whatever container you have around and do something similar or different based on your needs.\nThe Container/Diffuser\nI'd recommend a glass jar with wax melted along the inner walls. Use a diamond hole saw if you're drilling a hole for a power cord. Use low pressure and take it slow.\nFitting the Contents\nThis is the fun challenge. Fitting things into a small space. I 3D printed a tray, but you can use hot melt glue and a chunk of wood.\nStack components however possible. I stacked the LEDs on top of the Arduino. I'd recommend putting the LEDs in the center of the candle area.\nFor the sake of safety when playing with fire, consider using a container that doesn't catch on fire...", "step_imgs": ["https://cdn.instructables.com/FPC/0YBF/JSUOY9G9/FPC0YBFJSUOY9G9.LARGE.jpg", "https://cdn.instructables.com/FJO/E3PS/JSUOY9HX/FJOE3PSJSUOY9HX.LARGE.jpg", "https://cdn.instructables.com/FT0/P3W2/JSUOY9E4/FT0P3W2JSUOY9E4.LARGE.jpg", "https://cdn.instructables.com/FFO/67RX/JSUOYCWN/FFO67RXJSUOYCWN.LARGE.jpg", "https://cdn.instructables.com/FYV/D5OA/JSUOY9LA/FYVD5OAJSUOY9LA.LARGE.jpg", "https://cdn.instructables.com/F17/IT6A/JSUOY9IZ/F17IT6AJSUOY9IZ.LARGE.jpg", "https://cdn.instructables.com/FW9/UC59/JSUOYCWP/FW9UC59JSUOYCWP.LARGE.jpg", "https://cdn.instructables.com/FUW/JR6O/JSUOYCQ9/FUWJR6OJSUOYCQ9.LARGE.jpg", "https://cdn.instructables.com/F0V/FGPJ/JSUOYCWO/F0VFGPJJSUOYCWO.LARGE.jpg", "https://cdn.instructables.com/F30/DUBK/JSUOY9O2/F30DUBKJSUOY9O2.LARGE.jpg"], "step_title": "Step 7: Put It in a Container"}, {"step": 8, "steps_text": "If this took you less than 3 years, I'd say that's a win.\nLinks:\nI'll be posting additional deep dives here: http://www.keithstestgarage.com\nYouTube https://www.youtube.com/channel/UCiANfkB8tb8V3QnN...\nIf you haven't watched the YouTube video, definitely do so.\nQuestions/Comments\nIf you have any questions or comments, let me know!", "step_imgs": ["https://cdn.instructables.com/F9C/TCFU/JSUOYAAU/F9CTCFUJSUOYAAU.LARGE.jpg", "https://cdn.instructables.com/FN1/5C18/JSUOYCTV/FN15C18JSUOYCTV.LARGE.jpg", "https://cdn.instructables.com/FVB/NKET/JSUOYCV9/FVBNKETJSUOYCV9.LARGE.jpg"], "step_title": "Step 8: Summary"}], "channel": "Arduino"}, {"category": "Technology", "description": "There are some examples of 3D printed telegraph keys, but never a complete system \u2014 until now! This instructable contains all the 3D designs for both the telegraph key and sounder.", "title": "3D Printed Telegraph Key & Sounder", "url": "https://www.instructables.com/id/3D-Printed-Telegraph-Key-Sounder/", "steps": [{"step": 1, "steps_text": "Goals\nThere are some examples of 3D printed telegraph keys, but never a complete system \u2014 until now! In this instructable you can download all the .STL files and print your own telegraph system which can be downloaded on the last step.\nMaterials Needed\nMagnet Wire\nM3.5 Bolts\nOne 40 mm long bolt\nOne 20/25 mm long bolt\nOne 15 mm long bolt\nWashers\nC or D Batteries\nWood Screws \u2014 needs to fit in 3.5 mm holes\nFour 6x3 mm neodymium magnets\nPatience...", "step_imgs": ["https://cdn.instructables.com/FLO/8QCX/JSSUP5R9/FLO8QCXJSSUP5R9.LARGE.jpg"], "step_title": "Step 1: Project Overview"}, {"step": 2, "steps_text": "A Little History\nIn 1820 Oersted performed an experiment where he showed a current flowing in a wire creates a magnetic field surrounding a wire. This led to the creation of the electromagnet. Some years later in the 1830s Morse took advantage of this to create an electric telegraph.\nThe Science behind it\nFirst off, the electromagnet is the heart of the telegraph. A current carrying wire itself has a very weak magnetic field surrounding it. However, every time a loop of wire is wrapped around, say a bolt, the amount of magnetism keeps adding up. Eventually, there is enough magnetism to actually do something.\nThe telegraph is a simple loop circuit. When a telegraph key switch is pressed, the circuit is closed, and a current flows in the circuit and energizes the coiled loop of wire, the electromagnet. The electromagnet pulls a lever arm and makes a click. Releasing the key opens the circuit and the lever arm springs back up again.", "step_imgs": ["https://cdn.instructables.com/F2B/4AHN/JSUOVWIX/F2B4AHNJSUOVWIX.LARGE.jpg"], "step_title": "Step 2: Circuit Diagram and Theory"}, {"step": 3, "steps_text": "The telegraph key is the switch that completes the circuit and allows current to flow.\nHere are the parts\nTop Contact Bolt \u2014 this is a 3.5mm bolt. Wire is wrapped around the bolt to make electrical contact. Be sure to sand off the coating if you are using magnet wire. The convenient part about the bolt is that you can adjust how much travel the switch key has before hitting the bottom contact.\nBottom Contact Bolt \u2014 this can be any screw that fits. A wire is wrapped around the bolt for electrical contact.\nHinge \u2014 the hole size is 2 mm and I found 14 gauge home wiring copper wire worked perfectly.\nUpper Magnet \u2014 insert two 6x3 mm neodymium magnets. You may need to shave some of the 3D printed material for the magnets to fit. You want a tight, permanent fit.\nBottom Magnet \u2014 insert two 6x3 mm neodymium magnets. Again, you want a tight permanent, fix. The bottom and top magnets must oppose each other as this is what keeps the key up. The magnets replace what would've been a spring in the original setup.\nOptional screw terminals \u2014 the exposed wires are wrapped underneath a washer and kept in place with wood screws.\nThere has a tendency to be a spark every time the key is closed which leads to the connection becoming poorer and poorer over time. One has to clean the connection, but if you notice the image of the sounder, there is a tiny circuit board. As a modern solution, I added a MOSFET which locally switches the electromagnet on and off which takes the burden off the key. It makes it very responsive. The schematic diagram for this setup is included in a subsequent step.", "step_imgs": ["https://cdn.instructables.com/FZL/57F1/JSUOVM2R/FZL57F1JSUOVM2R.LARGE.jpg", "https://cdn.instructables.com/FKI/GWAV/JSUOVM4C/FKIGWAVJSUOVM4C.LARGE.jpg"], "step_title": "Step 3: The Telegraph Key"}, {"step": 4, "steps_text": "The sounder is what it sounds like \u2014 it makes sound when the electromagnet is energized by the switch. General notes: Be sure any bolts and acorn nuts you buy are magnetic!\nHere are the parts:\nElectromagnet \u2014 a 40 mm long 3.5mm wide bolt is used. There are a few hundred coils around the bolt which are held in place by the two orange face plates. Be sure to leave leave about eight inches of wires so there is plenty of slack to connect later.\nSwinging Lever \u2014 a 20 mm long 3.5 mm bolt is used with an acorn nut at the bottom. The swinging lever is suspended by an upward magnetic force by neodymium magnets.\nMagnetic Force Adjuster Screw \u2014 two 3x6mm neodymium magnets are at the top of this screw. The screw can be lowered or raised to adjust the magnetic strength to find the sweet spot for the swinging lever to operate.\nUpper Magnet \u2014 two 3x6mm neodymium magnets that oppose the bottom magnets. Be careful the direction of the magnets are correct.\nHinge \u2014 a 2 mm hole where 14 gauge house wiring is perfect.\nPaper Tape Hole \u2014 this is an experimental feature where paper tape can be fed through and a mark can be placed on the paper. Still a work in progress!", "step_imgs": ["https://cdn.instructables.com/F3W/3LBO/JSUOVMI6/F3W3LBOJSUOVMI6.LARGE.jpg", "https://cdn.instructables.com/FNC/PKZH/JSUOVNDS/FNCPKZHJSUOVNDS.LARGE.jpg"], "step_title": "Step 4: The Sounder"}, {"step": 5, "steps_text": "As previously said, the spark on the telegraph key can degrade performance. While the telegraph will work with just a battery, switch, and electromagnet, a modern twist is to use a MOSFET to locally turn the sounder on and off. In addition to preventing wear on the telegraph key electrodes, the a long distance of wire does not negatively impact the strength of the sounder.\nParts:\n100k\u03a9 Resistor \u2014 use to keep the MOSFET low\n1N4001 Diode \u2014 used as a flyback diode\nN-Channel MOSFET. I used an IRF3205", "step_imgs": ["https://cdn.instructables.com/FOF/AP76/JSUOWE5E/FOFAP76JSUOWE5E.LARGE.jpg"], "step_title": "Step 5: Final Thoughts"}, {"step": 6, "steps_text": "The part you have been waiting for, the files!\nEverything.stl contains every 3D printed part as one big file\nGrayKeyBase.stl is the gray printed base to the telegraph key\nGraySounderParts.stl is the lower and upper structures of the sounder\nOrangeParts.stl is the orange parts as seen on the cover photo\nWood_SidePlate.stl are the plates that can be screwed onto a wood base", "step_imgs": [], "step_title": "Step 6: The 3D .stl Files"}], "channel": "3D Printing"}, {"category": "Technology", "description": "Hello,\nI've always wanted a YouTube counter for my channel (DIY Machines) but they often cost more than I wanted to pay and required you to get a YouTube API key. So this design is buildable for under \u00a315/$18, does not need an API key and is designed to mount on top of a monitor, stand on the desk or hang on the wall.\nIt will also display your total number of YouTube views as well as your current subscriber count.", "title": "YouTube Subscriber Counter - Solderless, 3D Printable, Wall / Monitor Mountable", "url": "https://www.instructables.com/id/YouTube-Subscriber-Counter-Solderless-3D-Printable/", "steps": [{"step": 1, "steps_text": "I'm going to write out the instructions below in full, but if you prefer an instructional video or you want to see it working before you start then check out this video I made, otherwise read on below...", "step_imgs": [], "step_title": "Step 1: Video Instructions"}, {"step": 2, "steps_text": "You'll need several things for this build, but the items are low cost. I've provided links to them below to help you find what you need on Amazon:\n\u25a0 Wemos D1: https://geni.us/wemosD1\n\u25a0 MAX7219 Display Matrix: https://geni.us/MAX7219DotMatrix\n\u25a0 Mini Breadboard: https://geni.us/MAX7219DotMatrix\n\u25a0 Breadboard Jumper Cables: https://geni.us/MAX7219DotMatrix\n\u25a0 USB A to USB Micro B Cable: https://geni.us/MAX7219DotMatrix\n\u25a0 Nuts and Bolts (Five x M3x10): https://geni.us/MAX7219DotMatrix", "step_imgs": ["https://cdn.instructables.com/F3N/F2RJ/JSPAEQ37/F3NF2RJJSPAEQ37.LARGE.jpg"], "step_title": "Step 2: 'Bill of Materials' AKA 'What You'll Need'"}, {"step": 3, "steps_text": "The 3D files are available on the projects Thingiverse page: https://www.thingiverse.com/thing:3444779\nWe can start by printing the main body and back of the housing. I printed mine in Black PLA, you can of course print yours in your material and colour of choice.\nMine was printed at a layer height of 0.15mm without any raft, brim or supports. None of the parts in this build require supports as long as you orientate them properly on your print bed when slicing them.", "step_imgs": ["https://cdn.instructables.com/FKW/VZKZ/JSPAEQCR/FKWVZKZJSPAEQCR.LARGE.jpg"], "step_title": "Step 3: Print the Main Body"}, {"step": 4, "steps_text": "Since we will be using the USB port to power the YouTube counter once complete we want it to align up nicely with the front of the breadboard. To achieve this mount it so that the first pins from the end with the USB port are in the third hole.\nYou will also want to ensure that there is a row of unused holes available on both side of the breadboard to connect the other components to.\nIf you've chosen to solder your circuit then you don't need to use a breadboard (you can solder directly to the Wemos D1).", "step_imgs": ["https://cdn.instructables.com/FKV/TT0A/JSPAEQEL/FKVTT0AJSPAEQEL.LARGE.jpg"], "step_title": "Step 4: Attach Wemos D1 to Breadboard"}, {"step": 5, "steps_text": "If you have bought one like mine then the four display modules will already be connected together.\nWe just need to take five of the breadboarding wires and attach the female ends to the male pins at the end of the display. They are marked as CLK, CS, DIN, GND and VCC.", "step_imgs": ["https://cdn.instructables.com/FH3/Q6BI/JSPAEQIG/FH3Q6BIJSPAEQIG.LARGE.jpg", "https://cdn.instructables.com/FYB/J734/JSPAEQKF/FYBJ734JSPAEQKF.LARGE.jpg"], "step_title": "Step 5: Attach Wires to Display Modules"}, {"step": 6, "steps_text": "Now we can connect the wires to breadboard. Take alook at the wiring diagram above or check out the table below:\nDisplay module ---> Wemos D1\nCLK ---> D6\nCS ---> D7\nDIN ---> D8\nGND ---> G\nVCC --> 3V3", "step_imgs": ["https://cdn.instructables.com/FCQ/TAJT/JSPAEQUC/FCQTAJTJSPAEQUC.LARGE.jpg", "https://cdn.instructables.com/F5R/DUY6/JSPAEQXE/F5RDUY6JSPAEQXE.LARGE.jpg"], "step_title": "Step 6: Connect the Wires to Breadboard"}, {"step": 7, "steps_text": "This is very simple, connect one end of the USB cable to the Wemos D1 and the other end to your computer. You'll need to have the Arduino IDE installed on your computer to be able to customise then upload the code.", "step_imgs": ["https://cdn.instructables.com/FN2/5CS5/JSPAER0G/FN25CS5JSPAER0G.LARGE.jpg", "https://cdn.instructables.com/FP3/N0TP/JSPAER07/FP3N0TPJSPAER07.LARGE.jpg"], "step_title": "Step 7: Connect to Computer"}, {"step": 8, "steps_text": "You can download the code from the projects Github page: https://github.com/DIY-Machines/YoutubeSubcriberV...\nOpen this in the Arduino IDE. We then need to complete the top three lines of the code.\nThe first two are for your WiFi SSID (or name) and your WiFi password. The third line is for your Youtube Channel ID. I'll show you where to find this.\nGo to YouTube and ensure that you are logged in. Then in the top right click on your account icon and then 'Settings'. On the left hand side of your screen choose 'Advanced settings'.\nHere you can find and copy your channel ID, then paste it into the appropriate place in the Arduino IDE.\nYou can now compile and upload your code. Go for it!", "step_imgs": ["https://cdn.instructables.com/FSD/LRUX/JSPAER23/FSDLRUXJSPAER23.LARGE.jpg", "https://cdn.instructables.com/FNJ/P27E/JSPAERM6/FNJP27EJSPAERM6.LARGE.jpg", "https://cdn.instructables.com/F3B/FPJJ/JSPAERIY/F3BFPJJJSPAERIY.LARGE.jpg", "https://cdn.instructables.com/FE0/ZUGM/JSPAERGM/FE0ZUGMJSPAERGM.LARGE.jpg"], "step_title": "Step 8: Edit the Code and Upload"}, {"step": 9, "steps_text": "We need to ensure the screen is orientated correctly inside the case. To do this, make sure the bottom of the housing is facing you, apply some glue to the inside corners of the display frame and then pop the display modules in place. The are the right way up when the writing on their reverse is upside down. (Check the images above).\nNext the breadboard and controller can be positioned inside and slid all the way over the left hand side.", "step_imgs": ["https://cdn.instructables.com/F7J/U58R/JSPAET59/F7JU58RJSPAET59.LARGE.jpg", "https://cdn.instructables.com/FJD/REG5/JSPAET52/FJDREG5JSPAET52.LARGE.jpg", "https://cdn.instructables.com/FL1/SB8Y/JSPAET56/FL1SB8YJSPAET56.LARGE.jpg", "https://cdn.instructables.com/FKC/Q9A8/JSPAETI6/FKCQ9A8JSPAETI6.LARGE.jpg"], "step_title": "Step 9: Fit the Display and Controller Into the Housing"}, {"step": 10, "steps_text": "Before we fix the back onto the housing insert the USB cable through the opening at the bottom and then connect it to the Wemos D1.", "step_imgs": ["https://cdn.instructables.com/F94/8UUS/JSPAETRO/F948UUSJSPAETRO.LARGE.jpg", "https://cdn.instructables.com/FFI/5NCK/JSPAETRM/FFI5NCKJSPAETRM.LARGE.jpg"], "step_title": "Step 10: Connect USB Power Lead"}, {"step": 11, "steps_text": "We can now position the back cover in place and use four M3 x 10 bolts to secure it in place. Alternatively you can glue it if you wish.", "step_imgs": ["https://cdn.instructables.com/FK8/3THU/JSPAETZ5/FK83THUJSPAETZ5.LARGE.jpg", "https://cdn.instructables.com/FSY/D30V/JSPAETZU/FSYD30VJSPAETZU.LARGE.jpg"], "step_title": "Step 11: Fit the Back Cover"}, {"step": 12, "steps_text": "If you want to mount it on top of your monitor then we will need to print the parts for the arm. As before I did mine with Black PLA at a layer height of 0.15mm.\nYou'll want to join the two newly printed parts with the remaining M3 x 10 bolt. This will allow us to adjust it when we put it on the monitor. Once they have been screwed together you can use glue to attach it the rear cover of the main housing.\nOnce the glue has dried you can place it on your monitor and then use the bolt to adjust the arm so it is sitting smartly on top of the screen.", "step_imgs": ["https://cdn.instructables.com/F4G/UFW7/JSPAEV28/F4GUFW7JSPAEV28.LARGE.jpg", "https://cdn.instructables.com/F7G/9Z7P/JSPAEV1H/F7G9Z7PJSPAEV1H.LARGE.jpg", "https://cdn.instructables.com/FC9/8M2P/JSPAEV1G/FC98M2PJSPAEV1G.LARGE.jpg", "https://cdn.instructables.com/FBP/E5P9/JSPAEUXM/FBPE5P9JSPAEUXM.LARGE.jpg", "https://cdn.instructables.com/FCK/6JHY/JSPAEUXL/FCK6JHYJSPAEUXL.LARGE.jpg", "https://cdn.instructables.com/FIE/FDCU/JSPAEUXI/FIEFDCUJSPAEUXI.LARGE.jpg", "https://cdn.instructables.com/FWA/XK8T/JSPAEUVD/FWAXK8TJSPAEUVD.LARGE.jpg"], "step_title": "Step 12: Adding the Arm to Mount It on Top of Monitors"}, {"step": 13, "steps_text": "Well done. You've finished building your YouTube Subscriber Counter. I hope you enjoyed this project. Don't forget to check my other projects here on Instructables or my YouTube channel at www.youtube.com/c/diymachines (whilst you're there why not subscribe to find out about new projects).\nIf you'd like to, please consider supporting my channel on Patreon: https://www.patreon.com/diymachines\nThank you.\nLewis", "step_imgs": [], "step_title": "Step 13: Done"}], "channel": "3D Printing"}, {"category": "Technology", "description": "This instructable explains how to motorize a time lapse rail using a step motor driven by an Arduino. We will mainly focus on the Motion Controller that drives the step motor assuming you already have a rail you want to motorize.\nFor example when dismantling a machine I found two rails that I could convert into time lapse rails. One rail uses a belt to drive the slider and the other a screw. Pictures in this instructable show a screw driven rail but the same principles apply to a rail driven by a belt. There are just a few parameters that require changing during commissioning.", "title": "Motion Control Slider for Time Lapse Rail", "url": "https://www.instructables.com/id/Motion-Control-Slider-for-Time-Lapse-Rail/", "steps": [{"step": 1, "steps_text": "For time lapse photography I use a Intervalometer called LRTimelapse Pro-Timer designed by Gunther Wegner. This is a high quality Open Source Intervalometer for time lapse, macro and astro photographers that you can build yourself. Gunther, thank you for this fantastic tool that you have made available to the time lapse community. (For more information see lrtimelapse-pro-timer-free)\nI just added some code to control the stepper motor.\nOperating principle: The Time Lapse Rail works on Slave mode. This method is quite reliable. It means that I am using the LRTimelapse Pro-Timer Intervalometer to setup the number of shots and the interval between the shots. The intervalometer sends a signal to the camera to fire the shutter. After a picture is taken the Camera sends a signal back to the motion controller to move the rail\u2019s slider on a Move/Shoot/Move sequence. The signal to start the sequence comes from the camera\u2019s flash hot shoe. The camera\u2019s flash is set to Rear-curtain Synchro, so the signal is sent back to the motion controller when the camera\u2019s curtain closes. This means that the slider will only move when the shutter is closed so will work regardless of exposure length.\nMaterial: Two cables are required from the motion controller to the camera (camera model specific) 1) a Camera Shutter Release Cable with a 2.5 mm Jack and 2) a Hot Shoe Adapter with a Plug to Male Flash PC Sync Cable Cord with a 3.5 mm jack.", "step_imgs": ["https://cdn.instructables.com/FKN/UWW3/JOONSBZ1/FKNUWW3JOONSBZ1.LARGE.jpg", "https://cdn.instructables.com/FKU/BTRC/JOSXXQOR/FKUBTRCJOSXXQOR.LARGE.jpg", "https://cdn.instructables.com/FO5/8N3W/JOONSBXA/FO58N3WJOONSBXA.LARGE.jpg", "https://cdn.instructables.com/FPB/IQOG/JOONSBY1/FPBIQOGJOONSBY1.LARGE.jpg"], "step_title": "Step 1: Operating Principle:"}, {"step": 2, "steps_text": "Hardware: Movement of the slider is by means of a screw connected to a NEMA 17 Stepper motor. The stepper motor is driven by an EasyDriver controlled by an Arduino UNO. To use the controller with a different power bank (from 9v to 30v) I added an LM2596 DC-DC Arduino compatible power supply module to adjust the voltage. See the \u201cArduino Wiring.PDF\u201d attached.\nThe Camera Shutter Release Cable is plugged in to the controller using a 2.5 mm Jack. The jack is wired according to the schematic found in the attached \u201cShutter release.PDF\u201d. The Hot Shoe Adapter\u2019s Cable is plugged in to the controller using a 3.5 mm Jack. Having two different sizes avoids plugging a cables to the wrong port.", "step_imgs": ["https://cdn.instructables.com/FLC/RZ8V/JOOO498R/FLCRZ8VJOOO498R.LARGE.jpg", "https://cdn.instructables.com/F1R/5IAG/JOOO49AG/F1R5IAGJOOO49AG.LARGE.jpg", "https://cdn.instructables.com/FNK/WSXK/JSL38Z5P/FNKWSXKJSL38Z5P.LARGE.jpg", "https://cdn.instructables.com/F1G/5D9L/JOSXX881/F1G5D9LJOSXX881.LARGE.jpg", "https://cdn.instructables.com/F6Y/WI6F/JOSXX883/F6YWI6FJOSXX883.LARGE.jpg", "https://cdn.instructables.com/FJP/WCOT/JOSXX88N/FJPWCOTJOSXX88N.LARGE.jpg"], "step_title": "Step 2: The Motion Controller's Board"}, {"step": 3, "steps_text": "Before coding it is important to differentiate between the various actions you want to achieve. Arduino allows use of what is called void. A void is a section of program (line of code) that can be called at any time, as and when necessary. So having each action on a separate void keeps the code organised and simplifies coding.\nSketch Logics.pdf attached shows the actions I want to achieve and the logic behind them.", "step_imgs": [], "step_title": "Step 3: Arduino Code"}, {"step": 4, "steps_text": "The first void is used to send the rail to the Home position when starting the controller.\nThe controller has a direction toggle switch. On start-up the slider moves in the direction selected by the toggle until it hits the limit switch at the end of the rail; it then moves back by a distance defined by the user (This is 0 or the value that correspond to the opposite end of the rail). This is now the home position for the slider.\nThis void was tested using the code found in the attached file called BB_Stepper_Rail_ini.txt", "step_imgs": [], "step_title": "Step 4: Arduino Code 1 - Rail Home Position"}, {"step": 5, "steps_text": "The second void is used to move the slider manually. This is useful when you set up your camera spanning before you start the time-lapse sequence.\nThe controller has a push button with two functions: 1) a short push (less than a second) moves the slider by a user defined amount. 2) a long push (more than a second) moves the slider to the middle or the end of the rail. Both functions send the slider in the direction selected by the toggle switch.\nThis void was tested using the code found in the attached file called BB_Dual-function-push-button.txt", "step_imgs": [], "step_title": "Step 5: Arduino Code 2 - Dual Function Push Button"}, {"step": 6, "steps_text": "The third void is used to move the slider by a certain amount after each shot. The cameras flash needs setting to \u201crear curtain\u201d. At the end of the shot a flash signal is sent from the flash hot shoe to the controller. This starts the sequence and moves the slider by a certain amount. The distance for each move is calculated by dividing the length of the rail by the number of shots selected in LRTimelapse Pro-Timer. However a maximum distance can be defined to avoid a fast movement when the number of shots is low.\nThis void was tested using the code found in the attached file called Slave mode.txt", "step_imgs": [], "step_title": "Step 6: Arduino Code 3 \u2013 Slave Mode"}, {"step": 7, "steps_text": "The fourth void is a ramping option for smoother easing in and out. It means the distance of each move will gradually increase up to the set value and at the end of the rail will decrease in the same way. As a result when looking at the final time-lapse sequence the movement of the camera speed up at the beginning of the rail and slow down at the extremity of the rail. A typical Quad acceleration curve is shown in the attached picture (easing in and out). The distance of the ramping can be defined.\nI tested the algorithm in Excel and have set-up the acceleration and deceleration curves as per the picture attached. This void was tested using the code found in the attached file called BB_Stepper_Quad-Ramping-calculation.txt\nNote: This quad ramping is not to be confused with Bulb ramping where the exposure length changes or Interval ramping where the interval between shots is changed.", "step_imgs": ["https://cdn.instructables.com/FBW/TG8Q/JSPAA1XN/FBWTG8QJSPAA1XN.LARGE.jpg", "https://cdn.instructables.com/FNX/G79J/JSL39C24/FNXG79JJSL39C24.LARGE.jpg"], "step_title": "Step 7: Arduino Code 4 \u2013 Quad Ramping"}, {"step": 8, "steps_text": "LRTimelapse Pro-Timer is a free Open Source DIY Intervalometer for time-lapse, macro and astro photographers made available to the time-lapse photographer\u2019s community by Gunther Wegner. After building a unit for my camera I found it so good that I started to think about how to drive my rail with it. The attached LRTimelapse Pro-Timer 091_Logics.pdf is a short manual that shows how to navigate the program.\nThe attached BB_Timelapse_Arduino-code.pdf shows the structure of LRTimelapse Pro-Timer Free 0.91 and in green the lines of code I added to operate the slider.\nBB_LRTimelapse_091_VIS.zip contains the Arduino code if you want to have a go.\nThe attached BB_LRTimer_Modif-Only.txt document lists the additions I have made to Pro-Timer. It makes it easier to integrate them to new versions of Pro-Timer when Gunther makes them available.", "step_imgs": [], "step_title": "Step 8: Arduino Code 5 \u2013 Integration With LRTimelapse Pro-Timer"}, {"step": 9, "steps_text": "The pitch of the screw may vary or if using a belt the pitch of the belt and the number of teeth on the pulleys may also vary. In addition the number of steps per rotation of the stepper motor and the length of the rail may differ. As a result the quantity of steps to cross the length of the rail changes from one rail to another.\nTo adapt the controller to different rails some variables can be adjusted in the program:\nCalculate the quantity of steps that correspond to the length of the rail between the limit switches. Enter the value in the variable: long endPos (i.e. this value is 126000 for the rail driven with a screw shown in this instructable)\nTo look at the frame composition at the start, middle and end of the rail when using the spanning effect, I used the long push option with the push button. Enter the number of steps that correspond to the middle of the rail in the variable: long midPos (i.e. this value is 63000 for the rail driven with a screw shown in this instructable)\nIn LRTimelapse Pro-Timer you have to enter how many pictures you want to take. The program divides the length of the rail by this number. If you take 400 picture and your rail is 1 meter each slider movement will be 1000:400= 2.5 mm. For 100 pictures the value would be 10 mm. This is too much for one move. So you may decide not to use the full length of you rail. Enter the maximum move allowed in the variable: const int maxLength (i.e. this value is 500 for the rail driven with a screw shown in this instructable)\nWhen pressing the push button less than a second it moves the slider by a certain distance which can be set in the variable: int inchMoveval (i.e. this value is 400 for the rail driven with a screw shown in this instructable)\nQuad Ramping allows a smooth easing in and out. You can decide what distance the ramping will last at the beginning and end of the rail. This value is entered as a percentage of the rail\u2019s length in the variable: float ratio (i.e. 0.2 = 20% of the rail's length)", "step_imgs": ["https://cdn.instructables.com/FZW/ADIE/JSSU2JJL/FZWADIEJSSU2JJL.LARGE.jpg", "https://cdn.instructables.com/FX4/GY28/JSPA901W/FX4GY28JSPA901W.LARGE.jpg", "https://cdn.instructables.com/FM2/RNBB/JSPAA1OP/FM2RNBBJSPAA1OP.LARGE.jpg"], "step_title": "Step 9: Arduino Code 6 \u2013 Variables and Setting's Values"}, {"step": 10, "steps_text": "The rail is one meter long. It is made of a heavy load linear bearing slider bolted to a slotted Aluminium extrusion bar. I bought the extrusion bar and accessories from RS.com (see the picture rs items.jpg attached). The rail has four legs but can also be mounted on tripods with standard screws.\nSpanning: A tripod\u2019s ball head (as per the picture attached) is mounted on the slider. A little arm connects the head to the screw. If you move the screw away from the rail on one side you get an angle between the screw and the rail. When the slider moves along the rail it creates a rotation of the ball head. If you do not want spanning keep the screw parallel to the rail.\nThe controller is mounted on the slider. I chose that option - instead of the controller at one end of the rail - to avoid multiple cables running along the rail. I have only one cable between the power bank and the controller. All the other cables, to the step motor, to the limit switch, the shutter cable to the camera and the Synchro cable from the camera are all moving with the controller.\nScrew versus Belt: For time-lapse photography both designs work well. The belt allows faster movements compared to the screw, this could be an advantage in case you want to turn the rail into a video slider. One advantage of the screw design is when you put the rail vertical or at an angle, in case of a power cut the slider stays still and will not fall. I would strongly suggest being careful when you do the same thing with a belt driven rail, in case of a power cut or if running out of power the camera will slide down to the bottom of the rail at your own risk!", "step_imgs": ["https://cdn.instructables.com/FUU/KG96/JOOO498U/FUUKG96JOOO498U.LARGE.jpg", "https://cdn.instructables.com/FJ6/BJWJ/JSPAA47D/FJ6BJWJJSPAA47D.LARGE.jpg", "https://cdn.instructables.com/FJ3/5Q5G/JSPAA4BO/FJ35Q5GJSPAA4BO.LARGE.jpg", "https://cdn.instructables.com/FQX/UVPF/JSPA9QR4/FQXUVPFJSPA9QR4.LARGE.jpg"], "step_title": "Step 10: A Few Words About the Rail"}], "channel": "Arduino"}, {"category": "Technology", "description": "Stop-motion animation is a technique where objects are physically manipulated, and photographed frame-by-frame to create the illusion of a moving image.\nOur mini stop-motion animation exhibit is made with a Raspberry Pi, which is a \"tiny and affordable computer that you can use to learn programming through fun, practical projects.\"\nThe rig uses a Raspberry Pi, a pi-camera and five simple commands to create endless storytelling possibilities. It can be connected to any monitor or projector, and learners can work on their own or collaborate in pairs to create their animations.\nThis tool can be used for open-ended exploration, or incorporated into classroom lessons to deepen and reinforce learning. Users can create their own characters to insert themselves into history, art, or a microscopic world, using stop-motion animation and simple, everyday materials to tell a story or illustrate their understanding of a scientific concept in a playful, engaging way.\nThis guide is a still a rough draft! We'll keep working to develop this playful tool for exploration so that it can be used in museums, classrooms, maker spaces and your kitchen table. Feel free to remix the animation station, and please let us know what you come up with as you experiment. Check back for updates as we refine the design of the hardware and software.", "title": "Raspberry Pi Stop-Motion Animation Rig", "url": "https://www.instructables.com/id/Raspberry-Pi-Stop-Motion-Animation-Rig/", "steps": [{"step": 1, "steps_text": "Collect the following electronic components needed to construct the station.\nRaspberry Pi 3 Complete starter kit from Canakit, which includes Raspberry Pi 3 (includes 5V 2.5A power supply, raspberry Pi 3 case, HDMI cable, 32 GB MicroSD card (preloaded with NOOBS), 2x heatsinks Full size breadboard, male to male jumper cables)\nKeyboard and mouse (usb or wireless)\nHDMI compatible monitor\nFive arcade buttons Red, white, green, blue and yellow\nRaspberry Pi Camera module V2\nAdafruit flex cable for Raspberry Pi Camera -2 meters\nAdafruit Pi Camera case\nGikfun proto board\nStranded wire\nCanakit Breakout board and GPIO cable\nMomentary switch (normally open)\n5v computer fan", "step_imgs": [], "step_title": "Step 1: Collect the Materials (electronics)"}, {"step": 2, "steps_text": "Gather the wood for the box:\n1/4\" plywood, 12\" by 17\"\n1/4\" plywood, 13\" by 18\"\n1/2\" plywood, 4\" x 8'\n1x2 common pine board, 4' length\n1x1 common pine board, 4' length\nCollect the following hardware:\nbrad nails, 3/4\" length\n1/4-20 machine screw, 1 3/4\" length\n1/4-20 threaded inserts\n1/4-20 t-nuts\n1/4 washers\n1/4-20 wing-nut\n4-40 screws, 3/4\" length\n4-40 nuts\nYou'll also need the following tools:\nTable saw, scroll saw and/or japanese hand saw\nCordless drill\nSet of drill bits and driver bits (including a 3/4\" and 1\" diameter forstner bit)\nBrad nailer\nPhilips head screwdriver\nSoldering iron and solder\nWire cutter and wire stripper\nHammer or mallet\nWood glue\n2 Quick clamps (at least 18 in wide)", "step_imgs": [], "step_title": "Step 2: Collect the Wood, Hardware and Tools"}, {"step": 3, "steps_text": "Cut the 1/4\" plywood sheet. The 12\"x17\" piece will be the bottom of the box, and the 13\" x 18\" piece will be the top.\nCut the 1/2\" plywood into 4\" strips to make the sides of the box. Cut two of them down to 12\" lengths, and two 18\" lengths.\nGet one of the 18\" pieces (this will be the back of the box) and cut out holes for the plug and the cables\n1/2\" hole for the kill switch\ntwo 1/4\" holes for the arm mount\na 3/4\" diameter hole for the fan\na 3/4\" x 1/2\" rectangle for the hdmi cable\na 1/4\" mouse hole for the power cable.\nSquirt a strip of wood glue on the bottom of the side pieces and use the clamps to connect the sides to the base. Then use the brad nailer to attach the sides to the base, spacing the nails about 2-3 inches apart.\nAttach the front and back pieces with glue and nails in the same manner. Make sure to thread the wire for the power cable through the mouse hole first.\nAt the end of this step you should have the bottom of the box with four sides and the power cable running through the hole in the back of the box finished.", "step_imgs": ["https://cdn.instructables.com/FD4/9QSQ/JQ2O924V/FD49QSQJQ2O924V.LARGE.jpg", "https://cdn.instructables.com/FXK/USIV/JQ2O92I8/FXKUSIVJQ2O92I8.LARGE.jpg", "https://cdn.instructables.com/F8P/MFT1/JQ2O926S/F8PMFT1JQ2O926S.LARGE.jpg", "https://cdn.instructables.com/F17/7J3K/JQ2O9283/F177J3KJQ2O9283.LARGE.jpg", "https://cdn.instructables.com/FTB/98U1/JQ2O9038/FTB98U1JQ2O9038.LARGE.jpg", "https://cdn.instructables.com/FU9/2RHD/JQ2O90BP/FU92RHDJQ2O90BP.LARGE.jpg", "https://cdn.instructables.com/FDM/X7FA/JQ2O900Q/FDMX7FAJQ2O900Q.LARGE.jpg"], "step_title": "Step 3: Build the Bottom of the Box"}, {"step": 4, "steps_text": "Get the 13\" by 18\" piece of 1/4\" plywood to use to make the top of the box.\nUse a drill with a 1\" forstner bit to make a row of five large holes set in about 1\" from the right the side of the lid for the arcade buttons. They should be roughly equally spaced, but you can leave an extra space between the top hole and the other four holes to set the erase movie apart from the other buttons.\nCut two 1.5\" long pieces off of the the 1x2 board and drill a 5/16\" diameter hole in the center of each one. Use a 3/4\" forster bit to make a recessed hole lined up with the 5/16\" hole. Thread the t-nut through the hole and use a screw to force the t-nut flush against the piece. Watch this video for an overview of the process of attaching t-nuts.\nAttach the blocks on the board in the middle 1/2\" from each side with the recessed hole facing toward the center using wood glue and brad nails\nCut a 3\" long piece of the 1x2 and attach to the top of the board 1/2\" from the top\nCut a 1/4\" by 1\" oval slit in the top of the board close to the location of the 3\" block. To do this you can drill two 1/4\" holes in the top of the box and then thread the blade of the scroll saw through the hole. Watch this instructional video for a demo of the process.", "step_imgs": ["https://cdn.instructables.com/FO3/JUIA/JQ2O92SR/FO3JUIAJQ2O92SR.LARGE.jpg", "https://cdn.instructables.com/FLL/A68B/JQ2O92TG/FLLA68BJQ2O92TG.LARGE.jpg", "https://cdn.instructables.com/FST/97CL/JQ2O92TE/FST97CLJQ2O92TE.LARGE.jpg", "https://cdn.instructables.com/FFJ/QN4W/JQ2O930C/FFJQN4WJQ2O930C.LARGE.jpg", "https://cdn.instructables.com/F8E/0WOZ/JQ2O92RH/F8E0WOZJQ2O92RH.LARGE.jpg"], "step_title": "Step 4: Build the Top of the Box"}, {"step": 5, "steps_text": "This camera arm is foldable and removable which makes it easy to store the animation station. It's also really complicated to make. You can adjust this step to fit your needs and woodworking experience level. The goal at the end of the step is to have the camera above the center of the station.\nCut off a 5\" long piece from the 1x1 board and drill three 1/4\" holes (one a 1/2\" from the top) and the other two to match the 1/4\" holes in the back of the box\nCut off an 11\" piece and a 13\" piece from the 1x1 board\nUse a drill and a scroll saw to cut the slots for the camera wire and the drill holes as seen in the pictures accompanying this step. Use the scroll saw and drill technique to cut out the notches in the base of the arms. Test out the curves to make sure they can work as a pivot.\nCut a 2.5\" long piece from the 1x2 board for the camera block\nDraw out the pattern as seen in the pictures to make a space for the camera block to pivot and a flat space to attach the pi camera.\nUse 1/4 -20 pan head bolts, washers and wing nuts to connect the small block to the back of the box\nConnect the short (11\") and long (13\") arms together with a 1/4-20 bolts, washers and wing nuts. Attach the camera block to the curved notch in the top of the short arm piece. Attach the arm structure to the last hole in the short block using a 1/4-20 bolt, washer and hex nut.", "step_imgs": ["https://cdn.instructables.com/FGW/SAQX/JQ2O9BKO/FGWSAQXJQ2O9BKO.LARGE.jpg", "https://cdn.instructables.com/F6E/2PFS/JQ2O9C8R/F6E2PFSJQ2O9C8R.LARGE.jpg", "https://cdn.instructables.com/FH1/DHHZ/JQ2O9CCA/FH1DHHZJQ2O9CCA.LARGE.jpg", "https://cdn.instructables.com/FM4/X2JD/JQ2O9CDV/FM4X2JDJQ2O9CDV.LARGE.jpg", "https://cdn.instructables.com/F5O/OD8D/JQ2O9CGD/F5OOD8DJQ2O9CGD.LARGE.jpg", "https://cdn.instructables.com/F00/IL6L/JQ2O9CI0/F00IL6LJQ2O9CI0.LARGE.jpg", "https://cdn.instructables.com/FR7/KDFI/JQ2O9CBG/FR7KDFIJQ2O9CBG.LARGE.jpg", "https://cdn.instructables.com/F4C/LPZC/JQ2O9DMW/F4CLPZCJQ2O9DMW.LARGE.jpg", "https://cdn.instructables.com/FVA/TAG5/JQ2O9DG0/FVATAG5JQ2O9DG0.LARGE.jpg", "https://cdn.instructables.com/FSB/2SEF/JQ2O9DI6/FSB2SEFJQ2O9DI6.LARGE.jpg", "https://cdn.instructables.com/FPL/E6V7/JQ2O8ZLK/FPLE6V7JQ2O8ZLK.LARGE.jpg"], "step_title": "Step 5: Make the Camera Arm"}, {"step": 6, "steps_text": "Cut a length of colored wire, strip one end and then wrap that end around the metal tab of the COM and the NC (normally closed) terminals. Use the soldering iron to solder the wires to the leads of the switch. Repeat with the other four buttons (using the appropriate colored wire).\nCut a length of black wire and solder it to the the terminals of the metal momentary switch.\nPut the raspberry pi in the plastic case\nAdd a memory card with NOOBs installed\nConnect the canakit cable to the rasberry pi (Make extra extra double-check sure that the PIN 1 indicator is in the corner of the Pi. If you have a gray cable its probably a red stripe, for black cables, a white stripe. That pin must not be next to the TV connector. Turn around or twist the cable until it is right)", "step_imgs": ["https://cdn.instructables.com/FW4/PSU8/JQ2O9E77/FW4PSU8JQ2O9E77.LARGE.jpg", "https://cdn.instructables.com/FEM/7DLF/JQ2O9E8M/FEM7DLFJQ2O9E8M.LARGE.jpg", "https://cdn.instructables.com/FCK/5ODP/JQ2O9E5T/FCK5ODPJQ2O9E5T.LARGE.jpg", "https://cdn.instructables.com/FKW/TYQ0/JQ2O9E76/FKWTYQ0JQ2O9E76.LARGE.jpg"], "step_title": "Step 6: Prepare the Buttons and Raspberry Pi"}, {"step": 7, "steps_text": "Press the breakout board side of the GPIO cable on the gik protoboard as seen in the picture attached to this step. Flip the board over and carefully solder the GPIO board into place by adding a bit of solder on each of the pins.\nConnect one wire from each of the arcade buttons to the Gik board to pin numbers 2, 3, 4, 5, 6 in the following order.\nErase (pink/red wire) pin 2 also labled SDA)\nPlay (green wire), pin 3 also labeled as SCL\nUndo (blue wire) pin 4\nTake a picture (yellow wire) pin 5\nSave (white wire) pin 6\nTake the wires from other side of each of the buttons and connect them to the negative column of the gik proto board (it doesn't matter the order as long as they are in the column).\nConnect one of the wires from the momentary switch (black wire) the row for pin 13 and the other to the negative column.\nConnect the wires from the mini fan to the 5V + and - section of the breadboard", "step_imgs": ["https://cdn.instructables.com/FUM/8ZRC/JRUYVBJD/FUM8ZRCJRUYVBJD.LARGE.jpg", "https://cdn.instructables.com/FOU/SDQH/JRUYVBUF/FOUSDQHJRUYVBUF.LARGE.jpg", "https://cdn.instructables.com/F0Q/RKSL/JRUYVAZ1/F0QRKSLJRUYVAZ1.LARGE.jpg", "https://cdn.instructables.com/FRG/PSHM/JRUYV9NI/FRGPSHMJRUYV9NI.LARGE.jpg", "https://cdn.instructables.com/F5C/3Q4F/JRUYV9BM/F5C3Q4FJRUYV9BM.LARGE.jpg"], "step_title": "Step 7: Solder the Electronics to the Protoboard"}, {"step": 8, "steps_text": "Attach the arcade buttons to the top of the box by twisting off the switch part of the buttons, unscrewing the black plastic nut, pushing the button through the hole, tightening the nut and reconnecting the switch. Do this to all five buttons in the order from top to bottom of red, white, green blue and yellow.\nIf you want, you can label the buttons, either with a piece of paper in the top of the plastic piece or by writing on the side of the button.\nAttach the kill switch to the back of the box in the same way so that the plunger is pointed out the back of the box.\nAllign the mini fan over the 3/4\" hole on the inside of the back of the box. Mark the spaces for the holes and drill pilot holes in the propoer place. Use the 4-40 screws and bolts to secure the fan on the box.", "step_imgs": ["https://cdn.instructables.com/FEI/NIXA/JRUYV6JB/FEINIXAJRUYV6JB.LARGE.jpg", "https://cdn.instructables.com/FQR/X9AW/JRUYV629/FQRX9AWJRUYV629.LARGE.jpg", "https://cdn.instructables.com/F36/UOZF/JQ6YD0PP/F36UOZFJQ6YD0PP.LARGE.jpg", "https://cdn.instructables.com/F48/DIST/JRUYV5C7/F48DISTJRUYV5C7.LARGE.jpg", "https://cdn.instructables.com/FB8/2S5V/JRUYV5FV/FB82S5VJRUYV5FV.LARGE.jpg", "https://cdn.instructables.com/FYJ/G8VN/JRUYV7TA/FYJG8VNJRUYV7TA.LARGE.jpg", "https://cdn.instructables.com/FA2/0XON/JRUYV56S/FA20XONJRUYV56S.LARGE.jpg"], "step_title": "Step 8: Attach Switches and Fan to the Box"}, {"step": 9, "steps_text": "Make two pilot holes in the camera box on the top of the arm and screw on the plastic case using 4-40 bolts and nuts (be sure to remove the piece of foam first)\nAttach the flex cable to the Raspberry Pi. Thread the cable through the slot of the top of the box, through the slots in the arm and then attach to the camera. Place camera inside case and position the arm over the box.", "step_imgs": ["https://cdn.instructables.com/FQ0/RB66/JRUYV4Z7/FQ0RB66JRUYV4Z7.LARGE.jpg", "https://cdn.instructables.com/FF4/6PEH/JRUYV52S/FF46PEHJRUYV52S.LARGE.jpg", "https://cdn.instructables.com/FWW/4QKG/JQ2O9DLG/FWW4QKGJQ2O9DLG.LARGE.jpg", "https://cdn.instructables.com/FMD/HTEB/JQ2O9DK5/FMDHTEBJQ2O9DK5.LARGE.jpg", "https://cdn.instructables.com/FDU/L74D/JQ2O9DOM/FDUL74DJQ2O9DOM.LARGE.jpg"], "step_title": "Step 9: Attach the Camera to the Station"}, {"step": 10, "steps_text": "Use the double stick tape or screws to connect the Raspberry Pi case to the base of the box. Attach the protoboard and other components to the base of the box using screws or double stick tape. You may want to add p-straps to the wires to make everything tidier.\nPlug in the power cable and the HDMI cable to the Raspberry Pi\nAttach a mouse and keyboard to the Raspberry Pi (if you are using the bluetooth keyboard follow the instructions to connect).\nConnect the Raspberry Pi to the monitor using the HDMI cable.", "step_imgs": ["https://cdn.instructables.com/F9E/3W3J/JRUYV4H7/F9E3W3JJRUYV4H7.LARGE.jpg", "https://cdn.instructables.com/FAJ/XIEQ/JRUYV4J5/FAJXIEQJRUYV4J5.LARGE.jpg", "https://cdn.instructables.com/FDJ/DJZD/JSL3770G/FDJDJZDJSL3770G.LARGE.jpg"], "step_title": "Step 10: Connect the Raspberry Pi and Plug in Cables"}, {"step": 11, "steps_text": "Follow the Canakit quick start guide to get your Rasperry Pi up and running.\nOnce you've checked that your Raspberry Pi software is up to date, open the terminal and type:\nsudo apt-get update\nsudo apt-get upgrade\nInstall ffmpeg, omxplayer, python, and pygame on your Raspberry Pi by typing these commands into the terminal\nsudo apt-get install ffmpeg\nsudo apt-get install omxplayer\nsudo apt-get install python\nsudo apt-get install pygame\nEnable Camera by typing in the terminal:\nsudo raspi-config\nA new window will open, use the cursor keys to move to the camera option, and select 'enable'. On exiting, it will ask to reboot. Reboot your the Raspberry Pi.", "step_imgs": ["https://cdn.instructables.com/FLS/3C1U/JSL3770H/FLS3C1UJSL3770H.LARGE.jpg"], "step_title": "Step 11: Set Up Raspberry Pi and Camera"}, {"step": 12, "steps_text": "Go to https://github.com/wonderfulideaco/pi-stop-motion...\nClick the green button to download a zip file of the repository to your Raspberry Pi Open the zip file and drag the folder onto your desktop Rename the folder stop_motion\nTo make a movie, open the terminal and navigate to the stop motion folder by typing:\nCd ~/Desktop/stop_motion\nAnd then type\npython3 src/run.py", "step_imgs": [], "step_title": "Step 12: Download the WICO Animation Software"}, {"step": 13, "steps_text": "When you first open the animation program you can see the last movie by pressing the green play button. To delete the last movie and start a new one, press the pink trash button.\nTo make your movie you can operate the station with the following commands:\nTake a picture - yellow \"camera\" button\nDelete a frame - blue \"undo\" button\nPlay your movie - green \"play\" button\nDelete your movie forever - pink \"trash can\" button\nSave your movie use the white button. When you press the button a text prompt will appear where you can enter your movie\u2019s name. Then press return and after 10 or 20 seconds, the text prompt will disappear, your movie is saved and you can continue the explorations.\nWhen you want to exit the program you can use the escape switch hidden on the back right corner of box. You can make, save, and delete as many movies as you like in a session. When you are done, press the escape button (momentary switch) to exit the animation program and go back to the desktop.", "step_imgs": ["https://cdn.instructables.com/FZO/H4AW/JSL378HC/FZOH4AWJSL378HC.LARGE.jpg"], "step_title": "Step 13: Make Your First Movie"}, {"step": 14, "steps_text": "Play a movie\nNote: the movies take a while to process, so you may need to wait until the end of the session or day to replay the movies.\nOpen the stop_motion folder on the desktop, then open the file marked movies to find your movie Open the terminal window and type\ncd Desktop/stop_motion/movies\nPress enter, then type omxplayer name of your movie\n(For example) omxplayer movie_penny_20180313_1922.mp4\nPress enter to play movie\nIf it didn\u2019t play! Don\u2019t worry, just give it more time to process the movie, and try again later.\nSave your movies\nIt can be helpful to save the movies to google drive so that you can view and process them on another machine. To do this, open the Web Browser, navigate to your google drive, make a new folder for your animations and drag and drop your movies from the movie folder on the Raspberry Pi to your new google drive folder. Once they have been uploaded and processed, you can click to play!\nDelete movies and shutdown the Pi\nThe Raspberry Pi has a limited amount of memory, so once you have saved your movies to a google drive, please delete them from the Raspberry Pi to make space for more lovely animations!\nOpen the stop_motion folder on the desktop, then open the file marked movies Select all the movies and drag them to the wastebasket. Empty the wastebasket.\nThe Raspberry Pi is a little fragile so please make sure you shut it down safely when you\u2019re done. To do it right, click on the raspberry icon in the top left corner of the desktop and select Shutdown again from the shutdown options menu", "step_imgs": ["https://cdn.instructables.com/FNJ/XZXQ/JSL378IL/FNJXZXQJSL378IL.LARGE.jpg"], "step_title": "Step 14: Playing, Saving, Deleting Movies"}, {"step": 15, "steps_text": "Materials\nWhen searching for materials, don\u2019t fret! You don\u2019t need much to make a stop motion movie - you can start with just your hands. But, here are some materials that lend well to this activity and lead to more detailed products: Colored shapes Cardstock + brad characters (pre-made or students can create their own) Text + thought bubbles, scene descriptions (laminated shapes and strips), use dry-erase pens\nAs with many projects, limiting the available materials can often lead to more thoughtful creations. However, if students would like to explore other materials, let them go! You can even have a station to the side for students to create their own props, characters, and scenery.\nSet Up\nOrganize materials around station for easy access and visibility, and consider placing common stop motion tips around the station, like \u201cWatch out for your hands!\u201d. As mentioned above, you can also have separate station close by for prop creation.\nThe whole station can fit on one table with props around it. It\u2019s best to have 2 chairs in front for one person to make a movie and other to watch the process, or for one person to direct while the other photographs.\nPrompts\nThere are different levels of instruction we can give for stop motion animation, from letting students just create movies (after providing basic background and instructions) to starting with a prompt like \u201cmake a video where\u2026..\u201d.\nIf you would like to focus on group work skills, students can create collaborative videos. This can look like: brainstorming a plot and taking turns moving props / taking pictures, each person is allotted a certain number of pictures, or each person is allotted 2 minutes at the station to create their scene in a larger movie.", "step_imgs": ["https://cdn.instructables.com/FY3/DAOT/JSL37AXX/FY3DAOTJSL37AXX.LARGE.jpg"], "step_title": "Step 15: Stop Motion Animation in a Classroom or Museum"}, {"step": 16, "steps_text": "Once the movies are downloaded onto google drives, you can continue expanding them using your choice of video editing software like final cut or adobe premiere. Students can get the chance to use these tools to give the animation station higher ceilings and longer engagements. Some initial ideas for further directions might include connecting videos together, composing soundtracks or writing subtitles (and adding them in post-production).\nWe made a short zine with ideas about how to connect the animation station to the Next Generation Science Standards (NGSS) that is attached here as well!\nPlease reach out to us on our website (https://wonderfulidea.co/contact) with questions or to share your version of the machine. We're excited to see the different directions that this tinkering exhibit goes in as people build, remix and share the concept!\n---\nPrototyping time and R&D with Lodestar Charter School students for the Raspberry Pi Stop Motion Station was made possible through the generous support of Cognizant \u201cMaking the Future\u201d grant.", "step_imgs": [], "step_title": "Step 16: Going Further"}], "channel": "Raspberry Pi"}, {"category": "Technology", "description": "I built this Arduino based automatic LED light controller for a set of poorly lit stairs in our new home. The stairs are quite dangerous - especially at night - but not any more thanks to the Motion Activated Automatic LED Stair Lighting with Arduino (a.k.a. \"the stair butler\").\nBy carefully positioning the LED's and PIR sensor, this project could easily be adapted into:\nA night light for a baby's room - LED under crib, PIR facing door. This is especially handy when checking on baby at night time and you do not want to turn on the room lights (or you are carrying baby).\nA courtesy lamp for the elderly\nA welcome home at night light - position LED's in the entry hall with sensor facing the door. LED's turn on automatically when you open the front door.\nA security light. By adding a WiFi module, you can get it to report when the lights came on and/or when motion was detected. Capture data on a computer and analyse it as you see fit.\nMany other scenarios where automated lighting (or with a WiFi module) remote monitoring and/or control is required.\nThis relatively simple project uses a PIR motion sensor to detect people (and cats) approaching the stairs. When it detects someone approaching, the LED light strip is turned on. The LED light strip is controlled via a MOSFET and features a rather cool \"fade on\" and \"fade off\" effect. The project illustrates how to control a 1 Amp 12 volt power feed using one of the Arduino's 5 volt digital pins digital pins. Finally, there is a light level sensor which is used to ensure that the LED's are turned on only when it is dark enough to warrant doing so.\nThe Arduino controlling program (sketch) uses a form of mulit-tasking known as cooperative multitasking. This allows me to to manage fading the LED's on and off while simultaneously detecting movement via the PIR motion detector and reporting light levels. The value add is that it is relatively simply to detect new motion while fading the lights off and simply fade them back on again without too much complexity. This cooperative multi-tasking technique can be used for any project where you need things to happen independently but at the same time.", "title": "Motion Activated Automatic LED Stair Lighting With Arduino", "url": "https://www.instructables.com/id/Motion-Activated-Automatic-LED-Stair-Lighting-With/", "steps": [{"step": 1, "steps_text": "You will need the following parts\nOne Arduino. I used a Leonardo, but any should work.\nOne LED light strip (not shown in the photo). This should be 12 volts or less as the Arduino will also be powered by the LED light strip's power supply through the Arduino's external power jack. Mine is about 1.4m long and draws about 0.5A when turned on.\nOne 1 AMP 12-V DC power supply with a 2.1mm Barrel jack suitable to plug into your Arduino.\nOne N-Channel MOSFET. I used IRF-1405. I also tried IRF540N. Both worked just fine.\nOne PIR motion detector (mine is a HC-SR501 PIR).\nOne LDR (Light Detecting Resistor) photo detector\nOne 10K Resistor (Brown, Black, Black, Red, and any other colour)\nOne 470 Ohm Resistor (Yellow, Violet, Black, Black and any other colour)\nOne breadboard\nHookup wire.\nIf you wish to make a more permanent setup, then I would recommend getting a second set of parts 1 through 7 from the above list - plus:\nOne prototyping board\nWire to connect the components\nOne 2 way screw terminal block (for connecting the LED strip)\nOne 3 pin header (for connecting the PIR).\nSolder and Soldering Iron\nIt is not strictly necessary to get the second set of parts, but in my circumstance I find it easier to have two setups of the project. One setup is connected to my computer so I can test revisions of the program. Once I'm happy with any changes I've made, I can then upload the updated code to the equipment installed at the stairs.\nOptionally, for initial testing, you might consider not using the 12 volt supply. In this case simply temporarily substitute the MOSFET and LED light strip with a single LED + 470 ohm resistor. Once you get the project running, just replace the 470 ohm resistor + LED with the MOSFET + LED Strip.", "step_imgs": ["https://cdn.instructables.com/FY6/RPSS/JSPABELF/FY6RPSSJSPABELF.LARGE.jpg"], "step_title": "Step 1: What You Will Need"}, {"step": 2, "steps_text": "Connecting the bits together is relatively straight forward. Apart from the power connections, there are three main parts to the circuit:\nThe motion detector (Pin 2 on Arduino)\nThe LDR light level sensor (Pin A0 on Arduino)\nThe LED control (Pin 3 on Arduino)\nImportant note: The LED strip is powered from a 12V power source. This will be extracted from the VIN pin on the Arduino. You must be careful to never connect the 12V power source to any of the other Arduino pins. If you fail to keep the 12V separate from the other pins, the \"magic smoke\" that makes electronic stuff work might escape. If your \"magic smoke\" escapes, your Arduino probably will not work anymore and may even damage your computer if it is connected via USB.\nNote: LED light strips are typically 12 volt. The Arduino will not be able to supply enough power (voltage or current) directly to turn on an LED light strip. For initial testing, you can remove the 12 volt light strip and MOSFET and simply connect a single LED with a 470 Ohm resistor between Pin 3 and Ground.\nHook up your components by following the wiring diagram shown above and/or follow the instructions below. The wire colours correspond to the wiring diagram shown above.\nPower connections:\n12V supply (VIN) to one of the power rails on your breadboard (red wire)\n5V supply (5V) to the other power rail on your breadboard (orange wire)\nGround (GND) to one of the ground rails on your breadboard (black wire)\nConnect both of the ground rails on your breadboard together (black wire)\nLight level sensor:\nInsert your LDR and 10K resistor (Brown, Black, Black, Red) so that one of the LDR's leads is connected to the one of the resistor leads.\nConnect the point where the LDR and resistor are connected to A0 on the arduino (grey wire)\nConnect the other end of the LDR to the ground rail\nConnect the other end of the 10K resistor to the 5V rail (orange wire)\nNote when mounting the LDR, ensure it is facing into your stair well. If it isn't positioned in this way, it may detect ambient light from another location that isn't flowing into the stair well. In this case, the LED might not always turn on when you expect it to as there is a lot of ambient light near the sensor - even though the stair well is dark.\nPIR Motion Detector:\nConnect the Power pin on the PIR to the 5V rail on the breadboard (Orange wire)\nConnect the Ground pin on the PIR to the GND rail on the breadboard (Black wire)\nConnect the Signal pin on the PIR to pin 2 (D2) on the Arduino (yellow wire)\nEnsure the PIR can \"see\" into the stairwell area so that only movement in or towards the stair well activates the LED's.\nMOSFET and LED Strip\nBeware: this is the only step where the 12 volts meets the 5V. Actually the 12V and 5V never actually meet because inside the MOSFET, the 5V signal (which is connected to the MOSFET's gate) is insulated from the rest of the circuit (i.e. the 12 volt parts connected to the MOSFET's source and drain). This Wikipedia article explains the basics of how the MOSFET works and shows the insulating layer between the gate and the rest of the components.\nInsert the MOSFET into your breadboard.\nConnect the Gate Pin to the 470 ohm resistor. Check the datasheet for your MOSFET to determine which pin is the Gate.\nAssuming you are using the same MOSFET as me, the Gate Pin is most likely the one on the left when you hold the MOSFET so that the heat sink is on top and the writing on the case is facing you.\nConnect the other end of the resistor to Pin 3 on the Arduino (Green wire)\nConnect the MOSFET's drain (most likely the middle pin and heat sink) to the Cathode of the LED strip (blue wire)\nConnect the MOSFET's source (right pin when holding the MOSFET as described above) to GND (black wire)\nConnect the Anode of the LED Strip to the 12V rail (red wire)\nCheck your connections\nOnce you've connected everything up, take a break, then double check your connections. Remember if you incorrectly connect any of the 12 Volt (VIN red wire) connections to the rest of the circuit you will probably release the \"magic smoke\" and that will be bad for your Arduino.", "step_imgs": ["https://cdn.instructables.com/F6D/N584/JSPABTMS/F6DN584JSPABTMS.LARGE.jpg", "https://cdn.instructables.com/F9W/45RR/JSYZCXN0/F9W45RRJSYZCXN0.LARGE.jpg"], "step_title": "Step 2: Hook Everything Up"}, {"step": 3, "steps_text": "Following is the entire program. Simply copy and paste it into a new project in the Arduino IDE. No special libraries are required, so there is no need to download anything else.\n/******************************************************************************\n * Automatic Stair light controller\n * \n * Detects motion via a PIR (pin 2 digital) and gradually turns on an LED Light strip (pin 3 digital).\n * When motion ceases the LED light strip is gradually turned off.\n * \n * An LDR (Analog A0) is used to detect ambient light levels. The LED is only turned on if the ambient\n * light level is lower than a specified threshold.\n *\n/ Define a constant that determines at what light level should\n// should the LED strip be turned on. If the light level is above\n// this threshold, the LED strip will not be turned on when motion is triggered.\n#define LIGHT_ON_THRESHOLD 200\n// The pins to which the various peripherals are connected.\nint pirPin = 2;             // Input: The signal from the PIR.\nint ledStripPin = 3;        // Output: PWM signal to the MOSFET.\nint lightSensorPin = A0;    // Input: The reading from the ligh sensor (LDR)\n// Cooperative multi-tasking data.\n// Cooperative multi-tasking works by activating a task from time to time.\n// The period of time between activations depends upon the task.\n// This variables is used to track the point in time that we last checked the\n// Arduino clock. Our main loop will continually check to see if the Arduino's clock\n// has ticked over (> 1ms has passed since we last did anything). If it has, then\n// the individual tasks are checked to see if it is time that they should be activated.\n//\n// You can visually see this working if you activate the Serial monitor in the Arduino IDE.\n// What you will see is that the ambient light level reporting will seemingly randomly appear\n// in amongst any other debugging messages you might add to the program (e.g. outputting the\n// brightness level during a fade).\n//\nunsigned long timePrev = 0;\n// Multi-tasking sub tasks:\n// - Read the PIR once every 10 ms.\n// - If turning on the LED's, adjust the brightness ever 10 ms\n// - It turning off the LED's, adjust the brightness every 30 ms\n// - Report the light leveel once every second (this is primarily for testing).\n#define PIR_TIME 10               // Check the PIR every 10 ms\nunsigned int pirReadTmr = 0;      // A counter to measure how long since we last checked the PIR\n#define FADE_ON_TIME 10           // LED's \"fade on\", the brightness is increased every 10 ms.\n#define FADE_OFF_TIME 30          // LED's \"fade off\", the brightness is decreased every 30 ms.\nunsigned int faderTime = FADE_ON_TIME;  // will be set to either FADE_ON_TIME or FADE_OFF_TIME depending upon\n                                        // whether we are turning the LED's on or off.\nunsigned int faderDelayTmr = 0;   // A counter to measure how long since we last adjusted the LED brightness.\n#define LIGHT_CHECK_TIME 1000     // Check the ambient light level once every 1000 ms (once per second)\nunsigned int lightCheckTmr = 0;   // A counter to measure how long since we last reported the ambient light level.\n/*****************************************************************************\n * Setup:\n * - Initialise the Serial comm's just in case we are debugging/testing.\n * - set up the MOSFET (ledStripPin) and builtin LED PIN to output\n * - Initialise the multi-tasking timer (timePrev),\n */\nvoid setup() {\n  \n  Serial.begin(9600);\n  int cnt = 0;\n  // Wait for the the Serial port to initialise (but don't wait forever)\n  while (!Serial && cnt < 100) {\n      cnt++;\n      delay(10);\n  }\n  // Set the digital outputs (LED_BUILTIN and LED Strip MOSFET)\n  pinMode(LED_BUILTIN, OUTPUT);\n  digitalWrite(LED_BUILTIN, LOW);\n  pinMode(ledStripPin, OUTPUT);\n  Serial.println(\"Ready\");\n  // Initialise the time Keeper\n  timePrev = millis();\n}\n/*****************************************************************************\n * Loop:\n * - Check to see if the time has changed.\n *   - If the time has changed, work out how long has elapsed since the last\n *     time we checked (should always be 1 ms)\n *   - Update the 3 sub-task time counters.\n *   - Check each sub-task time counter to see if it has passed it's respective\n *     threshold.\n *     - If we have passed the threshold, call the appropriate sub-task.\n *     - reset the appropriate time counter to 0.\n */\nvoid loop() {\n  // Get the current time in millis.\n  // Note that the value is unsigned long. If you do not use unsigned long, then\n  // after a few days your multi-tasking might \"freak out\" (the technical term for\n  // not performing as expected).\n  unsigned long timeNow = millis();\n  // Has the time progressed since last time we checked?\n  if (timeNow != timePrev) {\n    // Yep, so work out how long has passed (normally 1 ms)\n    unsigned int delta = timeNow - timePrev;\n    // Capture the current time so we can check if time has moved on from \"right now\".\n    timePrev = timeNow;\n    // Update the sub-task time counters.\n    pirReadTmr += delta;\n    faderDelayTmr += delta;\n    lightCheckTmr += delta;\n    // Has the pir timer passed it's threshold? If so, check the PIR.\n    if (pirReadTmr >= PIR_TIME) {\n      processPir();\n      pirReadTmr = 0;\n    }\n    // Has the fader timer passed it's threshold? If so, adjust the brightness of the LED's\n    if (faderDelayTmr >= faderTime) {\n      processFade();\n      faderDelayTmr = 0;\n    }\n    // Has the ambient light level timer passed it's threshold? If so, report the ambient light level.\n    if (lightCheckTmr >= LIGHT_CHECK_TIME) {\n      processLightCheck();\n      lightCheckTmr = 0;\n    }\n  }\n}\n/*****************************************************************************\n * Multi-tasking sub tasks start here\n */\n // Variable to track the last known state of the PIR - initially this should be OFF.\nint pirState = LOW;\n// Variables to track what the LED control is doing.\nbool fadeDisabled = true;     // Are we fading? true = NO, false = YES\nbool fadeUp = true;           // Which direction are we fading? true = ON (i.e. getting brighter), false = OFF (i.e. getting dimmer)\nint brightness = 0;           // The current brightness. Initially the LED's are off, therefore the brightness is 0.\n/*************************************\n * Process PIR\n * - Called when it is time to check the PIR to see if it has changed state.\n * - If the PIR has changed state, initiate the appropriate action for the LED.\n * \n * Note. It is possible that the PIR will report that \"motion has stopped\". This might happen\n * part way through the LED turning off cycle. If this occurs, then the fadeOFf will immediately be\n * stopped and the fadeOn will be initiated.\n * This could happen if someone moves out of sight of the PIR, but returns shortly after the PIR\n * stops reporting motion.\n * The overall result is the that the LED's will smoothly transition from whatever brightness level\n * they happened to be at back to full brightness with no ugly blinking, flashing or sudden jump to\n * an extreme level of brightness.\n * \n * While the above scenario can be handled without multi-tasking, it is much easier (IMHO) to do with\n * this form of multi-tasking. That is checking the PIR state changes while simultaneously adjusting the\n * LED brightness (and as it happens, simultaneously reporting the ambient brightness once every second).\n */\nvoid processPir() {\n  // Read the PIR and see if it's state has changed from last time we checked.\n  int val = digitalRead(pirPin);\n  if (val != pirState) {\n    pirState = val;         // PIR state has changed, so record this new state for subsequent state change checking.\n    if (pirState == HIGH) { // Has the PIR detected motion?\n      Serial.println(\"Motion Detected\");        // Yep!\n                            // Signal that motion has been detected by turning the BUILTIN_LED on.\n      digitalWrite(LED_BUILTIN, HIGH);\n                            // Determine if we need to turn on the LED Strip.\n                            // we will turn on the LED strip if:\n                            // a) the ambient light level is less than the LIGHT_ON_THRESHOLD, or\n                            // b) the current state of the LED's is on (brightness > 0)\n      if (getLightLevel() < LIGHT_ON_THRESHOLD || brightness > 0) {\n        fadeOn();           // initiate the turn LED's on sub-task\n      }\n    } else {                // Motion no longer detected.\n      Serial.println(\"Motion ended\");\n                            // Signal that motion is no longer detected by turning the BUILTIN_LED off.\n      digitalWrite(LED_BUILTIN, LOW);\n      fadeOff();            // initiate the turn LED's off sub-task\n    }\n  }\n}\n/*************************************\n * Fade On\n *   Initiates the turning ON of the LED strip.\n */\nvoid fadeOn() {\n  fadeDisabled = false;       // Enable the fader sub-task.\n  fadeUp = true;              // Set the direction to \"turn on LED's\" (i.e. \"get brighter\").\n  faderTime = FADE_ON_TIME;   // Set the timer threshold that controls how frequently we increase the brightness.\n}\n/*************************************\n * Fade Off\n *   Initiates the turning OFF of the LED strip.\n */\nvoid fadeOff() {\n  fadeDisabled = false;       // Enable the fader sub-task.\n  fadeUp = false;             // Set the direction to \"turn off LED's\" (i.e. \"get dimmer\").\n  faderTime = FADE_OFF_TIME;  // Set the timer threshold that controls how frequently we decrease the brightness.\n}\n/*************************************\n * Fader sub-task\n *   Adjusts the brightness of the LED strip.\n *   Note that the brightness of the LED's is written to the LED strip PIN using analogWrite.\n *   This means that the Arduino uses PWM to rapidly switch the LED's on and off during the period of time\n *   between calls to this sub-task (either 10 or 30 ms). The proportion of time that the LED's are ON compared\n *   to the time that they are off is directly related to the value written to the port (i.e. the value in brightness).\n *   A value of 0 means the LED's are ON for 0% of the time and OFF 100% of the time (i.e. totally off).\n *   A value of 63 or 64 means roughly 25% of the time ON and 75% of the time off (i.e. one quarter brightness).\n *   A value of 127 means roughly 50% of the time ON and 50% of the time OFF (i.e. half brightness).\n *   A value of 255 means 100% of the time ON and 0% of the time OFF (i.e. full brightness).\n *   \n *   Each time this sub-task is called, it will increase (or decrease) the brightness by 1 if the sub-task is enabled.\n */\nvoid processFade() {\n  // First, check to see if the sub-task is active?\n  if (fadeDisabled) {\n    return;                   // No, just return (i.e. do nothing).\n  }\n// Debug: Output the current brightness level every 32 steps and when it reaches the maximum.\n//  if ((brightness & 0x1F) == 0 || brightness == 255) {\n//      Serial.print(\" ** brightness = \");\n//      Serial.println(brightness);\n//  }\n  // The sub-task is active (i.e. we are \"fading\" the LED's)\n  if (fadeUp) {               // Are we increasing the brightness?\n    if (brightness < 255) {   // Yep, is the current brightness less than the maximum possible value?\n      brightness++;           // Yep, increase the brightness and write it to the ledStripPin\n      analogWrite(ledStripPin, brightness);\n    } else {\n      fadeDisabled = true;    // We have reached the maximum brightness (=255) so this task is done. Disable it.\n//      Serial.println(\"Fade on done.\");\n    }\n  } else {                    // We are decreasing the brightness (turning the LED's off)\n    if (brightness > 0) {     // Is the current brightness more than the minimum possible value?\n      brightness--;           // Yep, decrease the brightness by 1 and write it to the ledStripPin.\n      analogWrite (ledStripPin, brightness);\n    } else {\n      fadeDisabled = true;    // We have reached the minimum brightness (= 0) so this task is done. Disable it.\n//      Serial.println(\"Fade off done.\");\n    }\n  }\n}\n/*************************************\n * get Light Level\n *  Check and return the ambient light level in a range from 0 (darkest) to 1023 (brightese)\n */\nint getLightLevel() {\n  // Calculate the light level as the inverse of the value read.\n  // The circuit (LDR connected to ground and resistor connected to +5V) means that as it get's darker, the\n  // LDR resistance get's higher. Therefore the reading at A0 gets closer to +5V which is read as higher values at A0.\n  // Similarly as it get's brighter, the LDR's resistance get's closer to zero, therefore the voltage at A0 gets lower,\n  // which is read as lower values at A0.\n  // This is, IMHO, counter intuitive, so the easy solution is to subtract the A0 reading from 1023 which means\n  //    brighter ambient light (low reading) gives a higher result (e.g. 1023 - 0 = 1023)\n  //    darker ambient light (high reading) gives lower result (e.g. 1023 - 1023 = 0)\n  int lightLevel = 1023 - analogRead(lightSensorPin);      // Photo resistor with 10K voltage divider\n  return lightLevel;  \n}\n/*************************************\n * process Light check\n *  sub task that periodically reports the current ambient light level.\n */\nvoid processLightCheck() {\n  int lightLevel = getLightLevel();\n  Serial.print(\"Light level: \");\n  Serial.println(lightLevel);\n}", "step_imgs": [], "step_title": "Step 3: The Code"}, {"step": 4, "steps_text": "Once you have programmed the Arduino and connected everything up, it is time to do some testing.\nTesting is easiest if the Arduino is connected to your computer and you monitor the debug messages on the serial monitor in the Arduino IDE.\nIf you are nervous (like I was) about connecting the 12 Volt supply. You can simply leave the 12 volt supply and MOSFET out of the circuit. Instead, simply connect a single LED and 470 ohm resistor between PIN 3 and ground.\nOnce running, try waving your hand in front of the PIR. You should see:\nA message in the Serial Monitor stating that movement has been detected.\nThe Arduino's built in LED should turn on.\nIf the light reading is less than the threshold, your LED strip (or test LED) should \"fade on\".\nWait for a while without moving. After a few seconds, you should see:\nA message in the Serial Monitor stating that movement has ceased.\nThe Arduino's built in LED should turn off.\nThe LED strip (or test LED) should \"fade off\".\nTroubleshooting\nIf you saw the messages and the builtin LED turn on / off but the LED strip (or test LED) did not light, then:\nDouble check all of the connections.\nCheck the orientation of the test LED / LED strip. The Anode (usually a red wire) connects to the positive voltage supply. The Cathode (usually a black wire) connects to the drain of the MOSFET.\nEnsure that the reported ambient light levels are less than the threshold set in the Arduino program's constant: LIGHT_ON_THRESHOLD.\nTip: You can artificially lower the ambient light levels by covering the LDR with your fingers or a piece of card.\nIf nothing seems to have happened (no motion detected/ceased messages):\nDouble check all of the connections.\nEnsure that the PIR is correctly connected (the Signal goes to PIN 2 on Arduino).\nTry adjusting the sensitivity. On my PIR, there are two screw variable resistors labelled Sx and Tx. Sx is the sensitivity. Try turning it to either extreme. Mine worked best when it was set in the middle.\nYou see motion detected message, but never see the motion ceased message:\nDouble check all of the connections.\nMake sure you (and anyone else nearby - including your cat if you have one) are perfectly still (try covering the PIR) while waiting for motion detection to cease. The PIR is very sensitive to the slightest motion even at quite long distances.\nCheck the Tx setting on your PIR. The Tx is the time delay before the PIR reports that motion has ceased. On mine, the best setting was fully counter-clockwise (the minimum delay).\nIf you have used a single test LED (i.e. no MOSFET and not 12 volts), then once you are happy that it is working correctly:\nDouble check all of your connections\nRemove the test LED and 470 ohm resistor.\nHook up the MOSFET and your LED strip as per the wiring instructions above.\nDouble check all of your connections.\nPlug in your 12 volt supply.\nAdmire your handiwork.", "step_imgs": ["https://cdn.instructables.com/FFU/506M/JSPAF5XE/FFU506MJSPAF5XE.LARGE.jpg"], "step_title": "Step 4: Testing"}, {"step": 5, "steps_text": "Installation will depend upon the design of your stair case.\nIn my case, there was a single wooden rail. I just stuck the LED strip under the stair rail. My LED strip had a sticky back, but it was insufficient to hold the LED strip on to the wooden railing (even though I thoroughly cleaned the railing first). In the end I simply stuck some double sided (1mm thick) tape to the hand rail and my LED strip to the double sided tape.\nI built a second copy of the electrical circuit on an Arduino prototyping shield. This along with a second Arduino was installed near the approach to the top of the stairs. For now, the Arduino and senors simply sit on the floor up against the wall. Some double sided tape holds the PIR to a door frame. The PIR is facing down into the stair well and detects motion both at the top of the stairs and the bottom. The PIR connects to the Arduino prototyping shield via some jumper wires. The photo shows my finished rig with the two sets of cables leading to the PIR and the LED strip.", "step_imgs": ["https://cdn.instructables.com/FGK/0U36/JSPABEMM/FGK0U36JSPABEMM.LARGE.jpg", "https://cdn.instructables.com/F4G/1R4O/JSPAB9KI/F4G1R4OJSPAB9KI.LARGE.jpg"], "step_title": "Step 5: Installation"}], "channel": "Arduino"}, {"category": "Technology", "description": "A while ago, my friend sent me a photo of an old speaker case lying on his rooftop. As you can see in the image (in the next step), it's in a horrible condition. Fortunately, when I asked him to give it to me, he agreed. I had been planning to build a loud Bluetooth speaker and this marked it's beginning! It's not going to be easy to turn junk to something neat, but I will not give up on this particular one because it involves recycling wood.\nSo the plan is to build a Bluetooth speaker that can push a whopping 60w of power to the drivers! The amp I've chosen for this is an inexpensive 60w mono amp with a clear sound signature even at high volume. The speaker will also include a subwoofer for good amount of bass. If you've seen my previous project (which was also a Bluetooth speaker by the way), you may realize that I'm pretty concerned about the aesthetic appearance of stuff, especially furniture. So even this build will have a pleasing appearance. And trust me, even after having all these properties, the speaker system will be quite inexpensive to build.\nIf you think my project is worth it, please vote it for the trash to treasure contest.\nI will be providing international purchasing links to most of the materials, so that you don't have to wander around different online stores to find similar stuff that I've used. I will be writing the instructable simultaneously as I build the speaker, so sit back and experience my building process as you read ahead...\nMaterials and tools:\n1x Woofer ~30-60w https://www.amazon.com/Dayton-Audio-PC105-8-Full-R...\n1x Subwoofer ~30-60w https://www.amazon.com/BOSS-Audio-CXX8-Car-Subwoof...\nWood (or MDF board)\n60w Audio amplifier board: https://www.amazon.com/Aideepen-TPA3118-Digital-Am...\nBluetooth audio receiver board:\nWood glue / Adhesive\nSand paper\nCovering material (eg. Vaneer, fabric or chart) : Sample: https://www.amazon.com/Sauers-SCV-2X8-WLNT-FC-Waln...\nFurniture legs (optional) https://www.amazon.com/Furniture-Glides-Straight-W...\nCopper wires\nSmps power supply (12-24v min 2A) https://www.amazon.com/TMEZON-Power-Adapter-Supply...\n5v DC wall adapter https://www.amazon.com/Certified-Charger-Universal...\nSelf tapping screws and nails https://www.amazon.com/Parts-Express-Self-Tapping-...\nHammer, screwdriver, pliers, etc.", "title": "A Great Sounding Bluetooth Speaker Build | Upcycled!", "url": "https://www.instructables.com/id/A-Great-Sounding-Bluetooth-Speaker-From-Trash/", "steps": [{"step": 1, "steps_text": "If you're going to build the outer case from scratch, I would recommend fiber board (MDF) over wood since it is more dense. Being dense means good amount of rigidity which provide good damping. In other words, the sound would be clearer and have better quality on MDF compared to wood. Some expensive wood might make a better case but if you want to keep the cost low, just use MDF. Anyway, in this case, I'm going to restore the old wooden speaker box instead of building a new one.\nAs I mentioned earlier, the case is in a pretty bad condition. It, being left on the roof, had to go through different weather conditions, under sunshine, rain and what not. The wood has gone quite weak. Restoring it to a new speaker will take a lot of work. Since it is a budget build, this is probably the best way to cut down on the total cost of the project. So let's get to work...\nI began by cleaning the inside of the speaker, which had a lot of dust and twigs. After that, I removed the black wooden covering all around the box. Some parts were stuck too hard to the wood and required a lot of force to remove. If you're doing the same, I'll suggest wearing gloves to avoid tiny pieces of wood getting inside your skin. Trust me it hurts.\nI later used a sandpaper to remove any rough surfaces, but then the wood started showing it's age. On the front part of the box, the top layer of wood started peeling off. At first I thought I can just remove that layer off, anyway removing one layer will not weaken the wood. But then I realized that I underestimated the wood's age. After removing the first layer, the second started coming out.\nThis time I couldn't remove it because that would really weaken the wood. So instead, I thought of glueing it to the wood underneath. I used adhesive wherever the wood was peeling off and clamped the wood well, especially around the holes where most of the wood was peeling off. Tip: In case you don't have many clamps, use something hard and flat (like a CD or acrylic) below the clamp so that the force is distributed over a large surface area. This will also avoid too much pressure on the wood where you clamp it.\nNow I will leave the box untouched for the night so that the glue can dry. Hopefully everything will be fine tomorrow morning.", "step_imgs": ["https://cdn.instructables.com/FSU/BU37/JSCG4WBR/FSUBU37JSCG4WBR.LARGE.jpg", "https://cdn.instructables.com/FVN/RIYY/JSCG4WAV/FVNRIYYJSCG4WAV.LARGE.jpg", "https://cdn.instructables.com/FGT/Y7TJ/JSCG4WAU/FGTY7TJJSCG4WAU.LARGE.jpg", "https://cdn.instructables.com/FFP/OHHB/JSCG4W93/FFPOHHBJSCG4W93.LARGE.jpg", "https://cdn.instructables.com/FFX/X3CL/JSCG4WBU/FFXX3CLJSCG4WBU.LARGE.jpg"], "step_title": "Step 1: Restoration of the Old Speaker Case"}, {"step": 2, "steps_text": "After examining the speaker today, I was pretty happy seeing that the adhesive has done it's job well. The wood had become a little stronger. I only hope it will handle the vibrations of the subwoofer. Now it's time to hide the wood's old appearance and strengthen it a bit more.\nFirst of all, I removed all the rusty nails from the front face. It wasn't a hard job. Since I had removed a layer of wood earlier, the heads of the nails protruded out from the layer underneath. It was just a matter of pulling them out using a plier. Because of being rusted, they could be pulled out from a little amount of force. Although that face was still stuck on to the case pretty well, even after removing the nails, I nailed a few 1 inch nails around the corners, to avoid the face from being damaged due to a lot of vibration.\nI then moved on to the bottom face and removed the nails that held the four rubber legs. At first my plan was to replace them with new ones, but the old ones look undamaged and clean. So I might use the same. Anyway that is to be done after covering the wooden surface.\nTo cover the surface, I'll be using black chart. This is quite a hard material and has a nice matte look, perfect for our build. The only problem though, is that it is not waterproof. Nevertheless, it's fine, considering it's low cost.\nFirst, I cut the chart according to the dimensions of my box. I scored along the folding lines using a screw driver (any blunt object will work). I then stuck it on the wooden box using adhesive, making sure to apply lots of it, especially at the edges. I didn't stick all the faces at once. First, I covered two opposite faces and placed the box in such a way that one of the covered faces was facing up. Obviously the other will be at the bottom. In this way, I can place weights on the top face and let it dry for a while, allowing the two faces to stick well to the wood.\nAfter covering all the faces, we need to work on the front of the box, where the speakers will be fixed.", "step_imgs": ["https://cdn.instructables.com/FHC/2XDB/JSL345FB/FHC2XDBJSL345FB.LARGE.jpg", "https://cdn.instructables.com/FX8/6CQR/JSL345E9/FX86CQRJSL345E9.LARGE.jpg", "https://cdn.instructables.com/FZS/GKX1/JSL345GC/FZSGKX1JSL345GC.LARGE.jpg", "https://cdn.instructables.com/FEL/CAVE/JSSUN9RK/FELCAVEJSSUN9RK.LARGE.jpg", "https://cdn.instructables.com/F2U/VTBY/JSSUN9SY/F2UVTBYJSSUN9SY.LARGE.jpg", "https://cdn.instructables.com/FCU/7K30/JSSUN9TY/FCU7K30JSSUN9TY.LARGE.jpg", "https://cdn.instructables.com/FHV/GZAG/JSSUN9TG/FHVGZAGJSSUN9TG.LARGE.jpg"], "step_title": "Step 2: From Old to New..."}, {"step": 3, "steps_text": "Please note that I shall be referring to the speakers as drivers, to avoid confusion. My build will have one mid range driver (woofer) and a low frequency driver (subwoofer). I didn't want to order them online because they'll take a lot of time to arrive. So, I bought them from a local audio store.\nFor the mid range driver, I would suggest speakers by Dayton Audio. They make very good quality drivers at decent prices. You can find the link in the 'materials and tools' section of the instructable. I've also provided the link to buy a subwoofer. While these could make very good drivers, neither of these brands can be found here in India. So I had to buy alternatives. The holes in my box measure 6 inch and 4 inch, and I've bought the drivers accordingly to avoid any sort of carpentry. Make sure that your drivers are rated according to the wattage your amplifier can supply.", "step_imgs": ["https://cdn.instructables.com/FTO/J7LW/JSSUN9FZ/FTOJ7LWJSSUN9FZ.LARGE.jpg", "https://cdn.instructables.com/FGW/FZ5H/JSSUN9GJ/FGWFZ5HJSSUN9GJ.LARGE.jpg", "https://cdn.instructables.com/FUC/8S6E/JSSUN9IF/FUC8S6EJSSUN9IF.LARGE.jpg"], "step_title": "Step 3: Choosing the Right Drivers"}, {"step": 4, "steps_text": "If the whole speaker is made black, it will become boring to look at. So we need to make the front attractive. Most high end speakers like Amazon's echo or Google Home Max are covered with a nice looking fabric. So I'm going to make something similar. After searching for a while, I found an old T shirt of mine which had the exact fabric which I was looking for. After washing it well and drying, it was good as new.\nI took a stiff piece of cardboard and cut the required shape for the front. After cutting out the speaker holes, I cut another similar piece and stuck them together for rigidity. If you're doing the same, I'll suggest using a thin piece of MDF or wood instead. If you're wondering why there's a little hole in the left side, it's called as a 'port'. It allows passage of air into and out of the box so that the subwoofer can function properly. Generally, ports contain a small pipe whose diameter and length is precisely chosen for resonance with the bass frequency for, obviously, good bass. But I didn't want to complicate it too much. In case you want to add a pipe, you can use this online calculator\nAfter sanding the edges and curving the corners, I cut a piece from the t-shirt and stuck the fabric on the cardboard. It rook quite a lot of time to stick the fabric around the curved corners and the speaker holes, but the final outcome looks beautiful. This small touch can change the complete appearance of the final product.", "step_imgs": ["https://cdn.instructables.com/FX4/HKY0/JSSUN9PL/FX4HKY0JSSUN9PL.LARGE.jpg", "https://cdn.instructables.com/FLL/SUEU/JSSUN9JC/FLLSUEUJSSUN9JC.LARGE.jpg", "https://cdn.instructables.com/F6D/NG1N/JSSUN9KA/F6DNG1NJSSUN9KA.LARGE.jpg", "https://cdn.instructables.com/FE4/QKXA/JSSUN9L9/FE4QKXAJSSUN9L9.LARGE.jpg", "https://cdn.instructables.com/FY8/QWV5/JSSUN9MT/FY8QWV5JSSUN9MT.LARGE.jpg", "https://cdn.instructables.com/FRR/49XO/JSSUN9QL/FRR49XOJSSUN9QL.LARGE.jpg"], "step_title": "Step 4: A Little Make-up"}, {"step": 5, "steps_text": "Now let's have a look at the amplifier. Mine is a Tpa3118 60w mono Amp. I would suggest using a stereo Amp. A good option would be a Tpa3116 50w x 2 stereo amplifier. You might say that I always suggest different materials than what I use. But this is because here in India, finding some stuff are difficult so it's actually me who is using alternatives. A stereo amplifier would be better because you'll have full control on your subwoofer independently. You may add a low pass filter or a crossover. Since I couldn't find the Tpa3116 Amp, I had to use the 3118 one. I shall connect the two drivers in parallel, although it's not preferred to connect a subwoofer and a mid range woofer in parallel. After a quick test, everything seems to work fine.\nHere's the plan for the connections. First, the 12v power supply goes to the power terminals of the Amp. The input of the amp goes to the output of the Bluetooth module. Then the output of the amp goes to the woofer and subwoofer in parallel. A 5v buck converter or a Lm7805 may be taken in parallel from the 12v supply to step it down to 5v and connect it to the input of the Bluetooth module.\nBut there's a problem. If the amp and the Bluetooth module is powered from the same supply, a weird sound appears in the drivers, even when there's no music playing. This is because of something called ground loop. It's due to the two audio devices sharing the same ground. This can be fixed by adding n inexpensive 5v DC-DC isolating converter.\nWhile this is the best plan for the connections, I couldn't find the isolating converter. So the only way was to either use an audio transformer or separate 5v power supply. I went with the second idea and made the final design. You can find the wiring diagram in the images above.", "step_imgs": ["https://cdn.instructables.com/FHH/KCYS/JSSUI3V7/FHHKCYSJSSUI3V7.LARGE.jpg", "https://cdn.instructables.com/F6D/Y3RY/JSSUI3TQ/F6DY3RYJSSUI3TQ.LARGE.jpg", "https://cdn.instructables.com/FVA/I9VJ/JSUP0S3I/FVAI9VJJSUP0S3I.LARGE.jpg", "https://cdn.instructables.com/FO9/AAR1/JSSUI3WC/FO9AAR1JSSUI3WC.LARGE.jpg", "https://cdn.instructables.com/FB9/1YDO/JSSUN9UG/FB91YDOJSSUN9UG.LARGE.jpg", "https://cdn.instructables.com/FO1/45QC/JSSUN9V0/FO145QCJSSUN9V0.LARGE.jpg", "https://cdn.instructables.com/FNG/VPD2/JSSUN9V2/FNGVPD2JSSUN9V2.LARGE.jpg"], "step_title": "Step 5: Wiring the Circuits"}, {"step": 6, "steps_text": "I made all the connections as per the plan and fixed the amp inside the box, on the back face with self tapping screws. The Bluetooth module didn't have any holes, so I had to stick with double sided tape. The output of the Bluetooth module has three terminals while the input of the amp has just two. So I connected the ground of the Bluetooth to the ground of the amp, and then I soldered the left and right channels of the Bluetooth together and connected them to the positive input of the amp.\nAfter another quick test, I realized that the inductors of the amp were getting hot. So, I stuck a heatsink on them. Then finally I made a hole in the back to pass the two power cords, stuck some epoxy compound to seal the hole and made the remaining connections. I then fixed the two drivers on the respective holes with self tapping screws. Again a successful quick test, and we're ready to finish it up. All I need to do is to stick the front piece I made earlier.", "step_imgs": ["https://cdn.instructables.com/F9A/RWZ3/JSSUI4E8/F9ARWZ3JSSUI4E8.LARGE.jpg", "https://cdn.instructables.com/F40/MH66/JSSUI3YS/F40MH66JSSUI3YS.LARGE.jpg", "https://cdn.instructables.com/FEZ/WDCB/JSSUI40T/FEZWDCBJSSUI40T.LARGE.jpg", "https://cdn.instructables.com/FHM/D8QU/JSSUI4B8/FHMD8QUJSSUI4B8.LARGE.jpg", "https://cdn.instructables.com/FFH/7DZZ/JSSUI455/FFH7DZZJSSUI455.LARGE.jpg", "https://cdn.instructables.com/F37/LMQ6/JSSUI4AC/F37LMQ6JSSUI4AC.LARGE.jpg"], "step_title": "Step 6: The Final Assembly"}, {"step": 7, "steps_text": "This build required quite a lot of time and work, but when I look at the speaker and the box I started with, I realize the worth of my work. This project has come out to be beyond my expectation. The sound is very good, although not insanely loud, because of the 24w power supply instead of a 60w one. I'm pretty happy with the quality of the sound and the bass.\nAll I want to say is, before buying something new, especially to replace some existing product, please think a few times. You can upcycle the existing one, with a little hard work, to come out with something better than what you thought of buying for that money. Please recycle stuff like wood that can help tackle environmental problems. Doing so, you can be the part of a small change that can make a big difference!\nPlease consider voting this instructable for the trash to treasure contest.\nThank you for reading my instructable. I hope you will enjoy upcycling something as much as I did in making this one.", "step_imgs": ["https://cdn.instructables.com/FC2/OZ6V/JSSUI4FY/FC2OZ6VJSSUI4FY.LARGE.jpg", "https://cdn.instructables.com/FD0/Q8C7/JSSUI47H/FD0Q8C7JSSUI47H.LARGE.jpg", "https://cdn.instructables.com/FK6/M2IG/JSSUI49C/FK6M2IGJSSUI49C.LARGE.jpg"], "step_title": "Step 7: Final Words..."}], "channel": "Audio"}, {"category": "Technology", "description": "\"Baby, stop stealing the remote!\"\nHmm... doesn't work.\nOur 18 month old always picks the smallest remote (Amazon Fire TV Stick) from the bin and carries it around. Then she proceeds to lose it in the most random place in the house that will take us a day and a half to find!\nAh! Anyone else have this problem? If only we had a decoy remote! Something that looked and felt like the real thing?\nLet's get started!\nNote: If you are brand new to 3D printing/modeling/design like me (less than a month now), or maybe never touched a 3D printer before, these instructions show the basic steps needed to complete a 3D product. I hope this helps! In reality this project turned out way better than I thought it would!!!", "title": "3D Printed Decoy TV Remote", "url": "https://www.instructables.com/id/The-Decoy-Remote/", "steps": [{"step": 1, "steps_text": "How in the world are we going to replicate this perfectly manufactured remote by Amazon? Where do we even start?\nFirst thing to replicating an object with a 3D print is discovering everything we can about it. We use good digital calipers (or a ruler) to take measurements as best we can of all the major parts of the object. For something like a TV remote we sketch it out on paper, noting the basic shapes, measuring the dimensions, buttons, and distances between each component.\nOnce we've gathered the info on it, next step is reproducing the sketch in a 3D model.\nNote: Besides PLA filament, the first thing I bought to go with my printer was a good set of digital calipers. Here is a link to the ones I bought from Amazon: Vinca Calipers", "step_imgs": ["https://cdn.instructables.com/F2O/LRE0/JSKOW7M5/F2OLRE0JSKOW7M5.LARGE.jpg", "https://cdn.instructables.com/F9J/D0R6/JSKOW6SE/F9JD0R6JSKOW6SE.LARGE.jpg", "https://cdn.instructables.com/FQH/C66N/JSKOW6XL/FQHC66NJSKOW6XL.LARGE.jpg", "https://cdn.instructables.com/FNJ/6OQQ/JSKOW6RG/FNJ6OQQJSKOW6RG.LARGE.jpg"], "step_title": "Step 1: Discovering the Real Deal"}, {"step": 2, "steps_text": "Wait wait wait! We have to use 3D modeling software? Yikes!!!\nI know this sounds like a daunting task, but try it! It was much easier to learn than I thought. I had used Tinkercad just a little for one previous project, and fumbled through that one on my own. This time, I enrolled in the easy 3D printing class offered by Instructables (Easy-3D-Printing Class) and in one evening learned the simple skills and tricks I needed to design a TV remote. I honestly am still surprised how easy and fun Tinkercad is to use.\nFirst, we use common shapes to simply piece together the remote. Cylinders for buttons, boxes with a radius on the edges for the top and bottom of the remote, etc. The video shows how quickly we can model a simple remote from measurements in just 7 minutes! (Ok, ok, so it took me much longer than 7 minutes the first time I did it.)\nHere is a link to the first version product created in the video: Fire TV Stick Remote v1\nAnd a link to the second version where sloping sides were added: Fire TV Stick Remote v2", "step_imgs": ["https://cdn.instructables.com/F61/TPFX/JS4YY2LB/F61TPFXJS4YY2LB.LARGE.jpg", "https://cdn.instructables.com/F7P/X2YJ/JS4YY2RB/F7PX2YJJS4YY2RB.LARGE.jpg"], "step_title": "Step 2: Modeling the Counterfeit"}, {"step": 3, "steps_text": "With Tinkercad it is super easy for us to export the design to an .STL file for 3D printing. Then we can just use free slicer software such as Ultimaker's Cura or Slic3r to prepare for printing. The slicer software takes the 3D model and establishes the settings for 3D printing. After printing the prototype, we measure and compare the fake to the real deal to make sure everything lines up. If adjustments are needed or anything looks off, we go back to the modeling step!\n3D print files are published on Thingiverse: Amazon Fire TV Stick Remote", "step_imgs": ["https://cdn.instructables.com/F2W/T0BI/JSKOW6U3/F2WT0BIJSKOW6U3.LARGE.jpg", "https://cdn.instructables.com/FP6/B5CD/JS4YY0WY/FP6B5CDJS4YY0WY.LARGE.jpg", "https://cdn.instructables.com/FOI/UT1U/JS4YY0YK/FOIUT1UJS4YY0YK.LARGE.jpg", "https://cdn.instructables.com/FN2/A1V2/JSKOW6WQ/FN2A1V2JSKOW6WQ.LARGE.jpg"], "step_title": "Step 3: 3D Printing the Prototype"}, {"step": 4, "steps_text": "After printing the prototype, the details and proportions were an exact match, but something still didn't seem quite right to me? Just one thing was missing... weight!!! I realized even with a great paint job, filament is very light and my baby will not be fooled. I needed to make it EVEN MORE REAL!!!\nSo, if a real remote weighs about as much as the batteries inside, why don't we just use 2 dead AAA batteries to make it about the same weight? Great idea! (Thanks!) So we measure the battery dimensions, add them to our sketch, and then add a hollow space inside the print to hold them side by side as shown in the video. We include a small inset cover to glue on the back to hold the batteries in as shown in the video. Last of all if we are adventurous, we add the little etched logo at the bottom!\nHere is a link to the final version adding battery slot and logo: Fire TV Stick Remote v3\n3D print files are published on Thingiverse: Amazon Fire TV Stick Remote", "step_imgs": ["https://cdn.instructables.com/FBE/4AZ1/JSKOW71O/FBE4AZ1JSKOW71O.LARGE.jpg", "https://cdn.instructables.com/FDH/4WV3/JSKOW70Y/FDH4WV3JSKOW70Y.LARGE.jpg", "https://cdn.instructables.com/F3T/3YIG/JSKOW6QM/F3T3YIGJSKOW6QM.LARGE.jpg"], "step_title": "Step 4: Refining and Final Printing"}, {"step": 5, "steps_text": "We next clean up the print by removing any strings and cutting off the brim and/or supports as needed. Then we just pop 2 dead AAA batteries into the slot with some folded paper to make it snug, and superglue the cover on.\nSince I'm still honing my printer, I printed with a brim and didn't print with really fine detail, so I decided to try some sanding. It took some added time and wasn't very easy to hold while sanding, but there is a great tutorial here if you want to make it much better!\nFor basic sanding, we can use 200 grit sandpaper first, then wet sand with 400 grit sandpaper. It takes about 10-15 minutes to see it become more smooth.\nAfter wiping off the dust we spray paint with our base color, in this case black satin, using multiple coats all around on both sides.", "step_imgs": ["https://cdn.instructables.com/FHW/FNGB/JSL38VDV/FHWFNGBJSL38VDV.LARGE.jpg", "https://cdn.instructables.com/FDQ/B2TT/JSKOW703/FDQB2TTJSKOW703.LARGE.jpg", "https://cdn.instructables.com/FVR/J3H3/JSKOW6PQ/FVRJ3H3JSKOW6PQ.LARGE.jpg", "https://cdn.instructables.com/FM7/KECO/JSKOW71N/FM7KECOJSKOW71N.LARGE.jpg"], "step_title": "Step 5: Assembling, Sanding and Spray Painting"}, {"step": 6, "steps_text": "At this point we're just missing a few important details! Using a toothpick, we dip the tip in our basic white paint, making sure to not get too much on the tip and carefully draw the button icons. Too much paint on the toothpick tip means we won't be able to do the fine lines. We take it slow and re-dip a lot, wiping off any excess if we get too much.", "step_imgs": ["https://cdn.instructables.com/FB4/RZ91/JSL38VD0/FB4RZ91JSL38VD0.LARGE.jpg", "https://cdn.instructables.com/FGQ/GGIU/JSL38VF9/FGQGGIUJSL38VF9.LARGE.jpg", "https://cdn.instructables.com/FHH/WYBJ/JSL38VF1/FHHWYBJJSL38VF1.LARGE.jpg"], "step_title": "Step 6: Finishing the Details"}, {"step": 7, "steps_text": "Now we just put the original remote on a shelf the baby can't reach and plant the decoy along with the other remotes. It works!!! See if your kids take the bait as well...", "step_imgs": ["https://cdn.instructables.com/FII/1G76/JSSUND65/FII1G76JSSUND65.LARGE.jpg", "https://cdn.instructables.com/FK5/BUO8/JSSUND76/FK5BUO8JSSUND76.LARGE.jpg", "https://cdn.instructables.com/FJ6/V89J/JSSUND87/FJ6V89JJSSUND87.LARGE.jpg", "https://cdn.instructables.com/FOQ/VXHW/JSSUI038/FOQVXHWJSSUI038.LARGE.jpg"], "step_title": "Step 7: Planting the Decoy"}], "channel": "3D Printing"}, {"category": "Technology", "description": "(If you like this project, please vote for me in the \"Faux-Real\" Contest. Thanks!)\nA few weeks ago I went to a toy store in this nice far-away country I am living, named Azerbaijan, and I found Hot Wheels had recently released a model of the Batwing from the classic 1989 Tim Burton's movie \"Batman\". I loved that movie and it influenced me in so many ways! And in my opinion, all the gadgets and vehicles built for that film will always be the best of the whole franchise.\nBut then I saw the price tag: USD $20! For this small model?\nLater, I searched for it in Amazon and...USD $244.44? SERIOUSLY???!!!\nThat's crazy! For that price, I could build my own batwing. And bigger. So I decided to do exactly that. Using the power of Tinkercad and a small 3D printer, I will show you how to design and print your own batplane. Its size will be limited only by the size of your 3D printer. And in my case, it's small; so at the end, my model will be Hot Wheels sized :-)\nAlso, this project was amazing to compare traditional ways of making to CAD/CAM. In 2007, I took a seminar in props and model making, and my first project was the same Batwing. It took me one week of drawing, cutting, sandpapering and painting to complete it. Now, it feels so different to design it sitting down in front of my computer and not modeling it with my own hands... (being honest, I miss the tools but I don't miss to be fully covered in sawdust in the middle of the summer.)\nIf you want to download the Batwing for printing, this is the link.\nMmmm... I think I need to return to that toy store. Quick.", "title": "Create the Batwing From the \"Batman\" Movie", "url": "https://www.instructables.com/id/Create-the-Batwing-From-the-Batman-Movie/", "steps": [{"step": 1, "steps_text": "Thanks to the magic of internet, now it's easy to find blueprints of almost any Hollywood prop or vehicle. And I found a very good one created by Georg Joergens. Also, I found several photos from the set of Batman, where I could see the Batwing prop from different points of view.\nThe following step was very important: Using a small ruler and the blueprints, I measured every part of the Batwing in all the views, and transfer most of the measurements to the design in Tinkercad, to have the most accurate possible scale. I must recognize that's a little bit... embarrassing, because probably there must be a smarter or more \"technological\" way to do that than a using a physical ruler over a computer screen. Even Fusion 360 has the option of importing the photo and sketch over it! But I wanted to do it with Tinkercad, I didn't have a better idea at that moment and, at the end, it worked perfectly!", "step_imgs": ["https://cdn.instructables.com/FLY/P0MZ/JSIUNPJV/FLYP0MZJSIUNPJV.LARGE.jpg", "https://cdn.instructables.com/FR1/H5FV/JSL38O20/FR1H5FVJSL38O20.LARGE.jpg", "https://cdn.instructables.com/FLG/5NN6/JSL38O24/FLG5NN6JSL38O24.LARGE.jpg", "https://cdn.instructables.com/FEQ/16DL/JSL38O3E/FEQ16DLJSL38O3E.LARGE.jpg", "https://cdn.instructables.com/FMA/2OY8/JSL38O42/FMA2OY8JSL38O42.LARGE.jpg"], "step_title": "Step 1: Get the Blueprints and Photos of the Original Batwing"}, {"step": 2, "steps_text": "From the Tinkercad Basic Shapes, I took a sphere and flattened it. Then, using Metacapsules as holes, I created the profile of one wing.", "step_imgs": ["https://cdn.instructables.com/FZZ/MMKU/JSIUNPKX/FZZMMKUJSIUNPKX.LARGE.jpg", "https://cdn.instructables.com/F1E/22WR/JSIUNPKY/F1E22WRJSIUNPKY.LARGE.jpg", "https://cdn.instructables.com/FG4/9OFR/JSIUNPLG/FG49OFRJSIUNPLG.LARGE.jpg", "https://cdn.instructables.com/FTV/KLDM/JSIUNPLI/FTVKLDMJSIUNPLI.LARGE.jpg", "https://cdn.instructables.com/FQ4/GV06/JSIUNPLJ/FQ4GV06JSIUNPLJ.LARGE.jpg", "https://cdn.instructables.com/FO0/5JC0/JSIUNPM2/FO05JC0JSIUNPM2.LARGE.jpg", "https://cdn.instructables.com/FUN/ZQED/JSIUNPM4/FUNZQEDJSIUNPM4.LARGE.jpg"], "step_title": "Step 2: Creating One Wing"}, {"step": 3, "steps_text": "I used a box as reference for the body of the jet, to calculate more or less the size of the body. Then, using a hole box, I cut the flattened sphere in half and duplicated it. Then, using the Flip tool, I created the other wing.", "step_imgs": ["https://cdn.instructables.com/FH6/BZA7/JSIUNPM5/FH6BZA7JSIUNPM5.LARGE.jpg", "https://cdn.instructables.com/FSG/MH7U/JSIUNPM7/FSGMH7UJSIUNPM7.LARGE.jpg", "https://cdn.instructables.com/F4P/863C/JSIUNPM8/F4P863CJSIUNPM8.LARGE.jpg", "https://cdn.instructables.com/FW0/J9IJ/JSIUNPMR/FW0J9IJJSIUNPMR.LARGE.jpg", "https://cdn.instructables.com/FFK/V5A8/JSIUNPMS/FFKV5A8JSIUNPMS.LARGE.jpg", "https://cdn.instructables.com/FGU/XJRC/JSIUNPNR/FGUXJRCJSIUNPNR.LARGE.jpg"], "step_title": "Step 3: Bat-shape"}, {"step": 4, "steps_text": "I used a box for the main body of the Batwing, and two hole boxes to give some sharpness to the front of the jet. For the ears, I used two long boxes and increased their radius to make them look pointy.", "step_imgs": ["https://cdn.instructables.com/FLO/NUC3/JSIUNPPT/FLONUC3JSIUNPPT.LARGE.jpg", "https://cdn.instructables.com/FB0/ILR6/JSIUNPQD/FB0ILR6JSIUNPQD.LARGE.jpg", "https://cdn.instructables.com/FYT/94H6/JSIUNPQE/FYT94H6JSIUNPQE.LARGE.jpg", "https://cdn.instructables.com/FJX/P4KC/JSIUNPQW/FJXP4KCJSIUNPQW.LARGE.jpg", "https://cdn.instructables.com/F67/MPG2/JSIUNPSD/F67MPG2JSIUNPSD.LARGE.jpg", "https://cdn.instructables.com/F2W/UITQ/JSIUNPSE/F2WUITQJSIUNPSE.LARGE.jpg", "https://cdn.instructables.com/FLI/33AU/JSIUNPSF/FLI33AUJSIUNPSF.LARGE.jpg", "https://cdn.instructables.com/FM2/KM83/JSIUNPSG/FM2KM83JSIUNPSG.LARGE.jpg", "https://cdn.instructables.com/FWD/2EXL/JSIUNPSH/FWD2EXLJSIUNPSH.LARGE.jpg", "https://cdn.instructables.com/FV8/SN85/JSIUNPSK/FV8SN85JSIUNPSK.LARGE.jpg"], "step_title": "Step 4: Head and Body"}, {"step": 5, "steps_text": "I created the cockpit using a box, with an increased radius to make it look like an egg; and a paraboloid for the section in the back. Also, I temporary used two boxes to recreate the turbine area over each wing.", "step_imgs": ["https://cdn.instructables.com/FJ7/K6CB/JSIUNPSL/FJ7K6CBJSIUNPSL.LARGE.jpg", "https://cdn.instructables.com/F5Z/RMQ5/JSIUNPSM/F5ZRMQ5JSIUNPSM.LARGE.jpg", "https://cdn.instructables.com/FH4/A4HO/JSIUNPSN/FH4A4HOJSIUNPSN.LARGE.jpg", "https://cdn.instructables.com/FBY/GD31/JSIUNPSO/FBYGD31JSIUNPSO.LARGE.jpg", "https://cdn.instructables.com/FPU/DHQ5/JSIUNPSP/FPUDHQ5JSIUNPSP.LARGE.jpg", "https://cdn.instructables.com/FJZ/U9JM/JSIUNPSQ/FJZU9JMJSIUNPSQ.LARGE.jpg", "https://cdn.instructables.com/F0D/TBOD/JSIUNPSR/F0DTBODJSIUNPSR.LARGE.jpg", "https://cdn.instructables.com/FPR/H95O/JSIUNPSU/FPRH95OJSIUNPSU.LARGE.jpg"], "step_title": "Step 5: Basic Cockpit"}, {"step": 6, "steps_text": "Using a flattened box, a cylinder, a cone and a half sphere, I created the housing for the turbine.", "step_imgs": ["https://cdn.instructables.com/FDX/6HKS/JSIUNPSX/FDX6HKSJSIUNPSX.LARGE.jpg", "https://cdn.instructables.com/FDV/72NF/JSIUNPSY/FDV72NFJSIUNPSY.LARGE.jpg", "https://cdn.instructables.com/FPK/23Y7/JSIUNPSZ/FPK23Y7JSIUNPSZ.LARGE.jpg", "https://cdn.instructables.com/FF8/NZQ6/JSIUNPT2/FF8NZQ6JSIUNPT2.LARGE.jpg", "https://cdn.instructables.com/FRD/FD29/JSIUNPT3/FRDFD29JSIUNPT3.LARGE.jpg"], "step_title": "Step 6: Turbine (basic)"}, {"step": 7, "steps_text": "Now we start with the complex shapes (as if the wing creation was not complicated enough). The Batwing has some kind of curved section over the wings. Curiously, there was a shape in the Tinkercad library that was perfect for this task: the heart.\nAfter that, I placed a capsule over the turbine, to replicate the missiles launcher of the Batwing.", "step_imgs": ["https://cdn.instructables.com/FIA/JATM/JSIUNPKD/FIAJATMJSIUNPKD.LARGE.jpg", "https://cdn.instructables.com/FX9/VDLH/JSIUNPKF/FX9VDLHJSIUNPKF.LARGE.jpg", "https://cdn.instructables.com/FB3/6LXE/JSKOVTPH/FB36LXEJSKOVTPH.LARGE.jpg", "https://cdn.instructables.com/F9U/9AG1/JSKOVTPI/F9U9AG1JSKOVTPI.LARGE.jpg", "https://cdn.instructables.com/F53/FUML/JSKOVTPJ/F53FUMLJSKOVTPJ.LARGE.jpg"], "step_title": "Step 7: Putting My \"heart\" in This Project"}, {"step": 8, "steps_text": "After duplicating the details of one wing on the other one, I needed to create the complex shape of the tail. The best figure in Tinkercad's library was the \"Arrowheead\" (not my typo. That's the name in the catalog). I cut the section of the arrowhead and placed in the back of the cockpit.", "step_imgs": ["https://cdn.instructables.com/FFI/NC4F/JSKOVTPK/FFINC4FJSKOVTPK.LARGE.jpg", "https://cdn.instructables.com/F1Z/OI1N/JSKOVTPL/F1ZOI1NJSKOVTPL.LARGE.jpg", "https://cdn.instructables.com/F72/NU6X/JSKOVTPR/F72NU6XJSKOVTPR.LARGE.jpg", "https://cdn.instructables.com/F45/057X/JSKOVTQJ/F45057XJSKOVTQJ.LARGE.jpg", "https://cdn.instructables.com/F9J/F4GR/JSKOVTQQ/F9JF4GRJSKOVTQQ.LARGE.jpg", "https://cdn.instructables.com/FBW/F73T/JSKOVTQT/FBWF73TJSKOVTQT.LARGE.jpg", "https://cdn.instructables.com/F13/EXXL/JSKOVTQU/F13EXXLJSKOVTQU.LARGE.jpg"], "step_title": "Step 8: The Tail"}, {"step": 9, "steps_text": "For the ailerons, I combined and shaped two circular trapezoids, and created the wing details using round roof shapes in hole mode. Then I placed the ailerons over the turbines.", "step_imgs": ["https://cdn.instructables.com/FKY/RF63/JSKOVTQW/FKYRF63JSKOVTQW.LARGE.jpg", "https://cdn.instructables.com/F03/34FB/JSKOVTQX/F0334FBJSKOVTQX.LARGE.jpg", "https://cdn.instructables.com/F9Z/2OML/JSKOVTQY/F9Z2OMLJSKOVTQY.LARGE.jpg", "https://cdn.instructables.com/FGJ/0EGF/JSKOVTRP/FGJ0EGFJSKOVTRP.LARGE.jpg", "https://cdn.instructables.com/F2A/CU1E/JSKOVTRQ/F2ACU1EJSKOVTRQ.LARGE.jpg", "https://cdn.instructables.com/FR6/F4BV/JSKOVTRR/FR6F4BVJSKOVTRR.LARGE.jpg", "https://cdn.instructables.com/FZ9/MCAW/JSKOVTRS/FZ9MCAWJSKOVTRS.LARGE.jpg"], "step_title": "Step 9: Aileron"}, {"step": 10, "steps_text": "I took a Wedge and inserted four boxes in hole mode to create the air intakes for the turbines.", "step_imgs": ["https://cdn.instructables.com/FUQ/NI2X/JSL38NNO/FUQNI2XJSL38NNO.LARGE.jpg", "https://cdn.instructables.com/FVG/QECH/JSL38NOT/FVGQECHJSL38NOT.LARGE.jpg", "https://cdn.instructables.com/FOX/4DUY/JSL38NPN/FOX4DUYJSL38NPN.LARGE.jpg", "https://cdn.instructables.com/FL5/X0TD/JSL38NQ0/FL5X0TDJSL38NQ0.LARGE.jpg", "https://cdn.instructables.com/F92/TZG4/JSL38NQM/F92TZG4JSL38NQM.LARGE.jpg"], "step_title": "Step 10: Turbine (details)"}, {"step": 11, "steps_text": "As you could see in the photos, the Batwing wings has several details. I replicated them using Boxes, Cycloids, Cremalleras and a very useful shape named New Banana.", "step_imgs": ["https://cdn.instructables.com/FUD/4GIX/JSL38NRL/FUD4GIXJSL38NRL.LARGE.jpg", "https://cdn.instructables.com/FVS/M19C/JSL38NS2/FVSM19CJSL38NS2.LARGE.jpg", "https://cdn.instructables.com/FSP/CQL0/JSL38NT2/FSPCQL0JSL38NT2.LARGE.jpg", "https://cdn.instructables.com/FIO/4Y8K/JSL38NT5/FIO4Y8KJSL38NT5.LARGE.jpg", "https://cdn.instructables.com/FYR/TXLB/JSL38NUU/FYRTXLBJSL38NUU.LARGE.jpg", "https://cdn.instructables.com/FT7/YORG/JSL38NV1/FT7YORGJSL38NV1.LARGE.jpg", "https://cdn.instructables.com/FXD/2QZD/JSL38NV3/FXD2QZDJSL38NV3.LARGE.jpg", "https://cdn.instructables.com/FAG/Y7XL/JSL38NVD/FAGY7XLJSL38NVD.LARGE.jpg", "https://cdn.instructables.com/FT8/QVLZ/JSL38NVI/FT8QVLZJSL38NVI.LARGE.jpg", "https://cdn.instructables.com/FX4/JN5E/JSL38NVN/FX4JN5EJSL38NVN.LARGE.jpg", "https://cdn.instructables.com/FK7/ZYFY/JSL38NVS/FK7ZYFYJSL38NVS.LARGE.jpg", "https://cdn.instructables.com/FWJ/36QZ/JSL38NWB/FWJ36QZJSL38NWB.LARGE.jpg", "https://cdn.instructables.com/F7I/YCLH/JSL38NX5/F7IYCLHJSL38NX5.LARGE.jpg", "https://cdn.instructables.com/FVK/LX2I/JSL38NX7/FVKLX2IJSL38NX7.LARGE.jpg", "https://cdn.instructables.com/FOB/UJP9/JSL38NYA/FOBUJP9JSL38NYA.LARGE.jpg", "https://cdn.instructables.com/F3O/ZGLZ/JSL38NZL/F3OZGLZJSL38NZL.LARGE.jpg", "https://cdn.instructables.com/FMM/3DAE/JSL38O0Q/FMM3DAEJSL38O0Q.LARGE.jpg", "https://cdn.instructables.com/FQD/OC28/JSL38O1G/FQDOC28JSL38O1G.LARGE.jpg"], "step_title": "Step 11: Wing Details"}, {"step": 12, "steps_text": "First, I removed the inferior part of the cockpit, so it stops looking like an egg with bat wings. Then, using Boxes, Roof, a Clip and a Bezier Bean, I gave shape to the intricate parts below the jet.\nNow, there is an extra pair of ailerons under the wings. I could create them in the same way of the top ailerons, or copy them and paste them below, but I already had them grouped with the rest of the jet, so... I duplicated the jet and group it with a big hole box leaving only the top part of the ailerons remaining. Then I stick them to the inferior part of the plane.", "step_imgs": ["https://cdn.instructables.com/F4I/EVFZ/JSPABB0I/F4IEVFZJSPABB0I.LARGE.jpg", "https://cdn.instructables.com/FW7/Q0BW/JSPABB0M/FW7Q0BWJSPABB0M.LARGE.jpg", "https://cdn.instructables.com/F22/UZKF/JSPABB18/F22UZKFJSPABB18.LARGE.jpg", "https://cdn.instructables.com/F64/58MB/JSPABB19/F6458MBJSPABB19.LARGE.jpg", "https://cdn.instructables.com/FBV/C41R/JSPABB1A/FBVC41RJSPABB1A.LARGE.jpg", "https://cdn.instructables.com/FCS/R7OK/JSPABB1B/FCSR7OKJSPABB1B.LARGE.jpg", "https://cdn.instructables.com/FQ0/FQAF/JSPABB1X/FQ0FQAFJSPABB1X.LARGE.jpg", "https://cdn.instructables.com/FK6/V71I/JSPABB1Z/FK6V71IJSPABB1Z.LARGE.jpg", "https://cdn.instructables.com/F1R/TRMA/JSPABB20/F1RTRMAJSPABB20.LARGE.jpg", "https://cdn.instructables.com/FBJ/3TE7/JSPABB21/FBJ3TE7JSPABB21.LARGE.jpg", "https://cdn.instructables.com/FNX/C6S5/JSPABB22/FNXC6S5JSPABB22.LARGE.jpg", "https://cdn.instructables.com/FGN/4WZX/JSPABB23/FGN4WZXJSPABB23.LARGE.jpg", "https://cdn.instructables.com/F2L/QOMY/JSPABB2Q/F2LQOMYJSPABB2Q.LARGE.jpg", "https://cdn.instructables.com/FM6/COMJ/JSPABB2R/FM6COMJJSPABB2R.LARGE.jpg", "https://cdn.instructables.com/F97/B60Z/JSPABB2V/F97B60ZJSPABB2V.LARGE.jpg", "https://cdn.instructables.com/FVC/OEMT/JSPABB2W/FVCOEMTJSPABB2W.LARGE.jpg", "https://cdn.instructables.com/F4P/GXG5/JSPABB2Z/F4PGXG5JSPABB2Z.LARGE.jpg", "https://cdn.instructables.com/FAS/MBGI/JSPABB30/FASMBGIJSPABB30.LARGE.jpg", "https://cdn.instructables.com/FPU/NL2G/JSPABB32/FPUNL2GJSPABB32.LARGE.jpg"], "step_title": "Step 12: Meanwhile, Below the Jet..."}, {"step": 13, "steps_text": "I wanted to create a stand to keep the Batwing in the air. I could create it by myself, but Tinkercad author Maker_Mark already had a good one, so I used it and flattened it a little and attached it a Donut Slice modified with two small cylinders to attach the Batwing.", "step_imgs": ["https://cdn.instructables.com/FVL/2DZH/JSPABB34/FVL2DZHJSPABB34.LARGE.jpg", "https://cdn.instructables.com/FX6/1AK9/JSPABB3V/FX61AK9JSPABB3V.LARGE.jpg", "https://cdn.instructables.com/FDS/R4LP/JSPABB4L/FDSR4LPJSPABB4L.LARGE.jpg", "https://cdn.instructables.com/FAH/F5ZH/JSPABB5Z/FAHF5ZHJSPABB5Z.LARGE.jpg", "https://cdn.instructables.com/F79/9IA5/JSPABB64/F799IA5JSPABB64.LARGE.jpg"], "step_title": "Step 13: A Stand for the Batwing"}, {"step": 14, "steps_text": "I removed the modified box I placed at the beginning as the windshield, and then I added some details to make it look like a cockpit. Then I copied the plane, transformed it into a hole and group it with the windshield, to create a negative shape, so it can be attached to the original plane.", "step_imgs": ["https://cdn.instructables.com/FR4/WLLF/JSPABB65/FR4WLLFJSPABB65.LARGE.jpg", "https://cdn.instructables.com/F3U/Y8SG/JSPABB68/F3UY8SGJSPABB68.LARGE.jpg", "https://cdn.instructables.com/FQ7/EWOX/JSPABB6U/FQ7EWOXJSPABB6U.LARGE.jpg", "https://cdn.instructables.com/FU6/YZ2H/JSPABB7G/FU6YZ2HJSPABB7G.LARGE.jpg", "https://cdn.instructables.com/FPI/Z87V/JSPABB82/FPIZ87VJSPABB82.LARGE.jpg", "https://cdn.instructables.com/F08/Q44Y/JSPABB9D/F08Q44YJSPABB9D.LARGE.jpg", "https://cdn.instructables.com/FFX/VGAF/JSPABB9Z/FFXVGAFJSPABB9Z.LARGE.jpg", "https://cdn.instructables.com/FXD/ID17/JSPABBAL/FXDID17JSPABBAL.LARGE.jpg", "https://cdn.instructables.com/FQF/P4CF/JSPABBAM/FQFP4CFJSPABBAM.LARGE.jpg", "https://cdn.instructables.com/FKG/16HI/JSPABBAN/FKG16HIJSPABBAN.LARGE.jpg", "https://cdn.instructables.com/F9M/OSJX/JSPABBAO/F9MOSJXJSPABBAO.LARGE.jpg"], "step_title": "Step 14: The Cockpit"}, {"step": 15, "steps_text": "I used the Cura slicer for Biqu Magician 3D printer, with the following settings:\nScale: 100%\nRetraction distance: 3 mm\nRetraction retract speed: 50 mm/sec\nPrime speed: 25 mm/sec\nZ hop when retracted: enabled\nMax Z speed: 120 mm/s\nZ hop height: 1 mm\nTravel speed: 200 mm/s\nLayer height: 0.15 mm\nPrint temp initial layer: 200 degrees (for good bonding)\nMain Printing Temperature: 180 degrees for main print temp\nOverhang: 30 degrees\nBrim: enabled\nSupport Pattern: Grid\nInfill Density: 70%\nAll the other settings: default\nMaterial: PLA (black for the jet, transparent for windshield and stand)", "step_imgs": ["https://cdn.instructables.com/FPB/A7AX/JSSUHQ38/FPBA7AXJSSUHQ38.LARGE.jpg", "https://cdn.instructables.com/FG8/LWMA/JSSUHQ39/FG8LWMAJSSUHQ39.LARGE.jpg", "https://cdn.instructables.com/FLV/R180/JSSUHQ3A/FLVR180JSSUHQ3A.LARGE.jpg"], "step_title": "Step 15: Slicing and Settings"}, {"step": 16, "steps_text": "After 3 hours of printing, finally I got my miniature Batwing. I had to file the windshield to make it fit to the cockpit. Also, I glued two small metal pieces from a clip, to simulate the machine guns located in the ears.\nAnd the Batwing is ready for action!", "step_imgs": ["https://cdn.instructables.com/FLW/UKNE/JSSUHQP5/FLWUKNEJSSUHQP5.LARGE.jpg", "https://cdn.instructables.com/FGC/EZQZ/JSSUHQP6/FGCEZQZJSSUHQP6.LARGE.jpg", "https://cdn.instructables.com/FC2/4HZ3/JSSUHQP8/FC24HZ3JSSUHQP8.LARGE.jpg", "https://cdn.instructables.com/FQS/08S0/JSSUHQPT/FQS08S0JSSUHQPT.LARGE.jpg", "https://cdn.instructables.com/FFM/FNL3/JSSUHQPY/FFMFNL3JSSUHQPY.LARGE.jpg", "https://cdn.instructables.com/FVP/HFZ6/JSSUHQMS/FVPHFZ6JSSUHQMS.LARGE.jpg", "https://cdn.instructables.com/FD5/OC2H/JSSUHQQ1/FD5OC2HJSSUHQQ1.LARGE.jpg", "https://cdn.instructables.com/FPX/9W0X/JSSUHQO3/FPX9W0XJSSUHQO3.LARGE.jpg", "https://cdn.instructables.com/FP3/Y2AR/JSSUHQOD/FP3Y2ARJSSUHQOD.LARGE.jpg", "https://cdn.instructables.com/FEO/2FJC/JSSUHQOA/FEO2FJCJSSUHQOA.LARGE.jpg", "https://cdn.instructables.com/FMQ/10IT/JSSUHQMY/FMQ10ITJSSUHQMY.LARGE.jpg"], "step_title": "Step 16: Printing And... It's Ready!"}], "channel": "3D Printing"}, {"category": "Technology", "description": "First of all, english isn't my mother languaje, so you may find some grammatical mistakes in the explanations. I will be grateful if you help me to correct my Instructable. That being said, let's start.\nA magnetic stirrer is a laboratory equipment, used for, well, stirring, to enhance or promote some chemical reactions. It's used for stirring low viscosity liquids, using a magnetic bar immersed in the liquid. This kind of stirring has lots of benefits, like being able to stir in a closed container, the use of less mechanical parts than other kind of stirrers (or shakers), being quieter than mechanical stirrers, etc.\nA magnetic stirrer is a very useful tool for me: I am a home brewer, and I love growing and culturing my own yeast, first because it's funny, and then, because it helps me to save lots of money, as I don't have to buy yeast. In this article, we can see the benefits of constantly stirring our growth media for yeast, in comparison with the hand shaking of the media, the method which I've been using until today.\nBut buying a magnetic stirrer is a nonsense for me: they are very expensive, and have a lots of features that surpass my needs, so I decided to build mine, a very simple magnetic stirrer, which will be enough to ensure the best yeast culturing.\nMaterials Needed\n- Cooler, fan (It will be the motor of our stirrer. Mine is a 5v fan from a laptop base)\n- Power supply for our fan (I used a 5v charger for an old phone)\n- Two small neodymium magnets\n- Balsa wood - High Impact Polystyrene (HIPS)\n- Some cables and solder\n- Male and female power supply jacks\n- Glue. I used wood glue, superglue and epoxy bi-component adhesive.\n- Plywood", "title": "Simple and Small Magnetic Stirrer", "url": "https://www.instructables.com/id/Simple-and-Small-Magnetic-Stirrer/", "steps": [{"step": 1, "steps_text": "First of all, we got to prepare our motor to be connected to the power supply. So, we have to solder a female power supply jack to our fan, and the male power supply jack to the phone charger. For this project, the polarity isn't that significant, so you can't solder wrong your cables, as you just have two options and both are correct.\nIn a fan is important a correct polarity on the connections to ensure a proper airflow, but here, we are interested just in spinning, and not in blowing air.", "step_imgs": ["https://cdn.instructables.com/F5X/82YE/JSPABY5Y/F5X82YEJSPABY5Y.LARGE.jpg", "https://cdn.instructables.com/FHJ/6YEK/JSPABXZD/FHJ6YEKJSPABXZD.LARGE.jpg", "https://cdn.instructables.com/FHZ/GCNH/JSPABXUR/FHZGCNHJSPABXUR.LARGE.jpg"], "step_title": "Step 1: Preparing Your Fan and Power Supply"}, {"step": 2, "steps_text": "In this step, we are going to make this piece. It will hold the magnets and attach them to the fan. The wood piece is a balsa stick, and both magnets are glued to it with super glue. In this step, there are some variables to take them at count:\n-Orientation of the magnets: This magnets have their poles, each one in every face. So we got to glue them one with the north magnetic pole looking upwards, and the other, with the south magnetic pole looking upwards.\n-Distance between the magnets: You have to make sure the separation between your magnets is a bit longer than the length of your stir bar\n-The piece needs to be glued aligned to the fan axis.\nAt this this step, I suggest you test your fan, if it still working despite the magnetic influence of your magnets, if the spinning is balanced or not, and if the piece with the magnets interacts fine with our stirring bar", "step_imgs": ["https://cdn.instructables.com/FZR/GGCF/JSPABZ0Q/FZRGGCFJSPABZ0Q.LARGE.jpg", "https://cdn.instructables.com/F2W/F857/JSPABY9C/F2WF857JSPABY9C.LARGE.jpg"], "step_title": "Step 2: Fan and Magnets."}, {"step": 3, "steps_text": "Now, the magnetic mechanism works fine, you need an enclosure to put your fan in. You could use any box big enough to contain or fan, the cable and the magnets spinning, but I preferred to make my box from scratch, to make it as small as possible.\nFirst we need four strips of balsa wood. They need to be longer than our fan sides, and wider than our fan plus magnet plus the piece of wood that holds them. They will be the sides of our prism.\nWe need to make a hole in one of them, to put the power supply female connector through it. I have made the hole with my drill, and then I modified it with a chisel, as the shape of the connector is like the union of a square and a circle. I made the hole as fit as possible, this will help to keep the jack in place.\nTo assemble the sides of the box, I've held together the four pieces of wood with tape, while I put wood glue on them. Then I've arrayed the pieces in a squared based prism, and secured them with a rubber band.\nAfter some curing time, I've glued my wood prism to its base, a piece of high impact polystyrene. At this step, I've used some epoxy bi-component adhesive.", "step_imgs": ["https://cdn.instructables.com/FD6/EGPU/JSPACXJB/FD6EGPUJSPACXJB.LARGE.jpg", "https://cdn.instructables.com/FM4/WJFU/JSPABXQO/FM4WJFUJSPABXQO.LARGE.jpg", "https://cdn.instructables.com/FCF/MIBN/JSPABXNA/FCFMIBNJSPABXNA.LARGE.jpg", "https://cdn.instructables.com/F69/OSX8/JSPABXKR/F69OSX8JSPABXKR.LARGE.jpg", "https://cdn.instructables.com/FBX/ABCE/JSPABXIS/FBXABCEJSPABXIS.LARGE.jpg", "https://cdn.instructables.com/FR0/8RRQ/JSPABXI4/FR08RRQJSPABXI4.LARGE.jpg"], "step_title": "Step 3: The Case"}, {"step": 4, "steps_text": "In order to glue the fan in its place, first we need to make some separator to put between the fan and the HIPS, to leave room beneath the cooler for the cable. I've made them with more wood, glued with super glue. Also used superglue to attach the fan in the case, and the connector in the sides of the box.\nNow you should check if your magnets aren't beneath the level of the sides of your case.", "step_imgs": ["https://cdn.instructables.com/FJI/DXPP/JSPABXHU/FJIDXPPJSPABXHU.LARGE.jpg", "https://cdn.instructables.com/FXN/631B/JSPABXEZ/FXN631BJSPABXEZ.LARGE.jpg", "https://cdn.instructables.com/F77/MJIJ/JSPABXEO/F77MJIJJSPABXEO.LARGE.jpg"], "step_title": "Step 4: Assembling"}, {"step": 5, "steps_text": "The magnets were well located, they weren't higher than they should be. But, when the magnets interacts with our stir bar, the spinning part of the fan raises up, elevating the magnets position, and therefore, putting them in contact with the superior part of the case.\nI hope the raise of the fan is noticeable in the video above.\nTo fix this, I've made a simple plywood separator wich elevates the place of the top of the case, or the stand for the jars.\nThen I've tested the stirrer to check if the separator accomplish its purpose.\nAs you can see in the videos, this build is near its end", "step_imgs": ["https://cdn.instructables.com/FKI/T81Z/JSPABXEI/FKIT81ZJSPABXEI.LARGE.jpg"], "step_title": "Step 5: Improvising"}, {"step": 6, "steps_text": "After gluing the separator, I've started sanding the sides of the box. First with sandpaper grit 80, then 150, and 600 for a smooth finishing. I've used some liquid wax as finishing of the wood sides.\nAlso, I've built a removable plate to put between the flash or the jar, and the separator, to prevent spills to go directly to the plywood.\nAnd that is my first stirred starter, before inoculating on it a wild mixed culture I've harvested from some fruit. You may notice that the color of the starter media was modified in an editing software for the cover of this instructable.", "step_imgs": ["https://cdn.instructables.com/FO3/6L6L/JSPABXE0/FO36L6LJSPABXE0.LARGE.jpg", "https://cdn.instructables.com/F6K/LRLM/JSPABXEB/F6KLRLMJSPABXEB.LARGE.jpg", "https://cdn.instructables.com/FER/N3ZO/JSPABXDZ/FERN3ZOJSPABXDZ.LARGE.jpg", "https://cdn.instructables.com/F5S/OLUX/JSPABXBF/F5SOLUXJSPABXBF.LARGE.jpg", "https://cdn.instructables.com/FBH/S52Q/JSPAD060/FBHS52QJSPAD060.LARGE.jpg", "https://cdn.instructables.com/F2C/NHNH/JSSU0SC9/F2CNHNHJSSU0SC9.LARGE.jpg"], "step_title": "Step 6: Finishing Touches"}, {"step": 7, "steps_text": "You can tweak this project at your desire. I made the most simple version of a DIY stirrer, as it satisfies my need. But you could try using a 25 ohm potenciometer to regulate the fan spinning velocity. Also you could use a bigger fan or a dc motor instead of a fan, put an on/off switch, an on/off led, or even use a heated plate to keep your liquid warm. You could use a box you already have laying around in your home/workshop, instead of building one.\nHope you enjoyed my first instructable, and my first tutorial written on English. Any suggestion you have about the project or the instructable, will be well received.", "step_imgs": [], "step_title": "Step 7: Possible Variations."}, {"step": 8, "steps_text": "Some members of the community asked in the comments section about the stirrer, or how to make one, if mine is bought or DIY.\nI have two magnetic bars at the moment. They are the ones showed in the photos above. They were bought on Aliexpress some time ago. I decided to bought mine for just one reason: The bough ones are made of PTFE. Let me explain. PTFE (polytetrafluoroethylene), better known as Teflon, is a polymer with very cool characteristics for lab appliances. It is very resistant to chemical corrosion, which allows you to stir lot of liquids with it, without fearing to your bar to be destroyed with the liquid you are stirring. Lets imagine a stir bar made of Polystyrene mixing some nail polish remover, it will be destroyed in a few seconds. That wont occur to a PTFE bar. So, if you have to sanitize it, which is something you always have to do in yeast propagation, sanitize your equipment, you can do it with any chemical, and your magnetic bar will be fine with it. But there are other things about this material. This polymer is a thermostable polymer, which means it can't be melted again after being molded for the first time. This allows everything you built in this material to withstand high temperatures without receiving any deformation, so you could hot sterilize it by putting it on your media while you boil it, which is the method used to kill any microorganism in the grow media used for yeast starters. Also, PTFE has a very low friction coefficient. That is an advantage, because the stir bar has less resistance to its spinning that if it were made of any other material.\nBut there exists other shapes of magnetic stirrer \"bars\". I made a model on blender to show you different shapes, without using any internet photo. You may notice that every kind of stirrer has a pivot point, where the bar makes contact with the vessel in which is contained with the liquid to stir. This pivot point is always located beneath the gravity center of the stir bar. These shapes of bars has different uses, related to the kind of stirring you need to get.", "step_imgs": ["https://cdn.instructables.com/FA6/LG8H/JSUOZXVL/FA6LG8HJSUOZXVL.LARGE.jpg", "https://cdn.instructables.com/FMA/LVED/JSUOZXVP/FMALVEDJSUOZXVP.LARGE.jpg", "https://cdn.instructables.com/F18/3O74/JSUP034J/F183O74JSUP034J.LARGE.jpg"], "step_title": "Step 8: Update - About the Magnetic Bar (Stirring Bar)"}], "channel": "Tools"}, {"category": "Technology", "description": "I like to sometimes take a bit of a tour of my local auto salvage yard just to see what is new and interesting,\nOften during those trips I will see something that make me stop for a moment and think \"I could do something interesting with that...\"\nOn my last trip to the yard, I noticed a number of vehicles (mostly minivans) that had these DVD players and screens built into them. These systems were meant to entertain back seat passengers during those long road trips.\nBeing intrigued by this, I researched a little bit about them, focusing on the various makes and models of vehicles that I found in the yard that had one of those systems installed.\nThe main problem that I had found with a lot of those systems was that they were electronically connected to the main stereo unit installed in the front dashboard of the vehicle. In essence this meant that the DVD player and screen, even though they were physically separate from the car's audio system, wouldn't be able to work without being able to talk to the main stereo unit,In order to do what I wanted to do, I really wanted the DVD and screen to act as a stand alone device.\nThankfully there appeared to be one vehicle that seemed to fit that bill - DVD units from mid 2000's Ford minivans.\nSo, grabbing my bag of tools - I headed back to the junkyard to identify a suitable donor for my entertainment system.", "title": "Junkyard Entertainment System", "url": "https://www.instructables.com/id/Junkyard-Entertainment-System/", "steps": [{"step": 1, "steps_text": "To build the entertainment system, I needed the following items:\nElectronic Parts\nDVD player / LCD screen combo - fresh from the junkyard\n2 infrared transmitter and receiver kits - I ordered mine from eBay for a few dollars\n12 volt power supply - I got mine from my local surplus store\n3 power sockets - I got them for a few cents off of eBay\n2 power switches - Sourced from the local surplus store\nHook up wire\nTwo 1/8 inch phono plugs - from eBay\nLead wires with DuPont connectors - I got mine off of eBay\n2 car speakers with included speaker grills - I also got these from my local surplus store\n2 LED's\nTools\nSocket wrench and sockets\nWire cutters\nTable saw\nMiter saw\nDrill Press\nBrad nailer\nScroll Saw\nRouter with round over and straight bits\nCorner clamps\nHot glue gun\nScrewdrivers\nSoldering iron\nRotary tool with cut off wheel and a small straight bit\nMaterials\nVarnish\nBlack paint\nWood glue\nFelt furniture protectors\nPaint brushes\nHalf inch think birch for the screen, DVD player and speaker cabinets - I got my wood from my scrap bin\nTwo 10\" X 3\" pieces for the DVD sides\nTwo 10\" X 8\" pieces for the DVD top and bottom\nOne 7\" X 2.25\" piece for the DVD back\nOne 10\" X 6.5\" piece for the screen back\nTwo 9.25\" X 3\" pieces for the screen cabinet sides\nOne 10\" X 1.5\" piece for the screen top\nOne 3\" X 9\" piece for the screen cross member\nEight 7\" X 5\" pieces for the speaker cabinets\nTwo 6.5\" X 6.5\" pieces for the speaker backs.\nFour 1.5\" X 10\" pieces of half inch thick red cedar for the screen frame", "step_imgs": [], "step_title": "Step 1: What You Need to Build This"}, {"step": 2, "steps_text": "Once I had targeted my quarry, I was pleasantly surprised to see that removing the entertainment unit from the van was a very simple matter of just removing 4 bolts with a socket wrench and popping the whole unit out from the van's roof\nTo complete the removal, we also wanted to make sure that we kept the connector that connected the entertainment unit to the vehicle's wiring harness, The removal of the unit was completed by cutting the wires going into the unit with wire cutters. I made sure to leave a few inches of wire hanging outside of the connector in order to help make things easier for myself later on.\nWith that, our DVD player and screen was free!\nThe next step was to try and see if we can make our new acquisition come back to life.\nThat is where things started to get a little interesting.\nLooking at the wiring for the connector for the entertainment unit, I notice that it utilized a 20 pin connector that was used for many years by Ford for these entertainment units. However an internet search for the wiring diagrams for these connectors showed a connector layout that was much different than the wiring I had for my unit.\nIt turns out that there seemed to be some differences on how things were wired over the various model years.\nMy entertainment unit had a 2004 manufacturing date stamp - so a quick internet search for 2004 Ford Freestar wiring diagrams provided my answer.\nFor the record, the wiring layout for my particular DVD player was this:\nPin #1 - White with Yellow Stripe wire - Voltage on all times\nPin #2 - Light Green with Black Stripe wire - Audio System On\nPin #3 - Light Green with Red Stripe wire - Illumination\nPin #4 - Braided wire - Shield\nPin #5 - White wire - Left Audio\nPin #6 - Red wire - Right Audio\nPin #7 - White wire - Left Audio\nPin #8 - Red wire - Right Audio\nPin #9 - Not Used\nPin #10 - Not Used\nPin #11 - Light Blue with Pink Stripe wire - Audio Protocol A\nPin #12 - Tan wire - Audio Protocol B\nPin #13 - Not Used\nPin #14 - Black wire - Ground\nPin #15 - Light Green wire - Left Audio\nPin #16 - Black wire - Right Audio\nPin #17 - Light Green wire - Left Audio\nPin #18 - Black wire - Right Audio\nPin #19 - Not Used\nPin #20 - Not Used\nArmed with that information, I connected the wires for Pin 1, Pin 2 and Pin 3 together and hooked them up to a positive terminal, and I hooked the Ground wire on Pin 14 to the negative terminal of a 12 volt power source.\nI turned on the power source - and the entertainment unit came alive.\nThe ultimate test - playing a DVD, was also successful\nA very promising start. I now have the foundation for an interesting project.\nThe next step will be to rearrange the screen and DVD controls to so that we can view the screen with the unit sitting on a table (versus its old life of living on a ceiling)", "step_imgs": [], "step_title": "Step 2: Salvaging the Entertainment System"}, {"step": 3, "steps_text": "The main issue was in the way that the DVD player and the screen were installed in the minivan. Since the entertainment unit was installed in the roof of the minivan, the screen and player were upside down in the traditional home viewing sense where you would have your screen sitting on top of a table, not hanging down from the ceiling.\nIn order to make things \"right side up\" and to have things ready for a new cabinet, I needed to remove the player and screen components from their original containers.\nTo start the removal, I flipped the unit over in order to see the underside.\nFrom that viewpoint I could easily see the DVD player itself and some infrared LED's that were used to send audio to a pair of infrared headphones (sadly those headphone were not present in the minivan when I removed the unit).\nAn initial inspection showed that the DVD player was attached to the plastic housing with a series of small bolts and that the electrical connections to the screen and infrared LED's were made with a few plastic connectors..\nThe first task was to disconnect the DVD from the screen and infrared LED's - this was done by gently pulling on the connectors until they were free from the DVD player\nNext I removed the 4 bolts that attached the player to the housing with a socket wrench. Once the bolts were removed, the DVD Player just simply lifted out of the housing\nWith the DVD player out of the way, I had a bit of a brainwave.\nI had wondered about making this entertainment unit Bluetooth audio capable, however the player had wireless capability already via the infrared headphone transmitters. This would be a bit of an intriguing thing to pursue since I would be able to take advantage of an out of the box function of the player versus having to try and put something together.\nA quick internet search showed that I could easily get headphones that would work with the unit, but speakers that use infrared are a bit hard to come by.\nBut I think it's something worth looking into further (Stay tuned!) So, with that in mind, I removed the infrared LED\"s from the housing by removing the bolts that secured the LED's with a socket wrench.\nThe last major component to remove was the screen.\nHere, we were in luck.\nWhen I inspected the case that contained the screen, I noticed that the case a snap together housing. Because of this, the case can be opened by prying open the case at the seam with a slotted screwdriver.\nI had to be careful when opening the housing so that the screwdriver didn't slip and damage the screen.\nWith the case for the screen removed, the screen was now very easily accessible. The screen board was attached to the back of the case with 4 screws. Removing the screws freed the screen.\nWith everything now removed, it was probably a good idea to reconnect everything, apply power and make sure things still worked.\nAs a final test, I wanted to see what I had to work with from an audio perspective.\nWhile a DVD was playing, I hooked up a small speaker to one of the pairs of audio wires on the wiring harness connector.\nWhile there was sound coming from the speaker, it was quite faint.\nIf I were to use these audio feeds for my project, I would definitely need to add some sort of amplifier circuit.\nNow that I've mined my raw materials, I need to now do some more investigation on the best way to produce wireless audio.", "step_imgs": ["https://cdn.instructables.com/F4M/6UQT/JR0YR357/F4M6UQTJR0YR357.LARGE.jpg", "https://cdn.instructables.com/FLD/4YAT/JR0YR356/FLD4YATJR0YR356.LARGE.jpg", "https://cdn.instructables.com/F9U/4M75/JR0YR3AR/F9U4M75JR0YR3AR.LARGE.jpg", "https://cdn.instructables.com/FIN/NU00/JR0YR3AS/FINNU00JR0YR3AS.LARGE.jpg", "https://cdn.instructables.com/FEH/LB1K/JR0YR3AT/FEHLB1KJR0YR3AT.LARGE.jpg", "https://cdn.instructables.com/FZ0/BTHJ/JR0YR3AV/FZ0BTHJJR0YR3AV.LARGE.jpg", "https://cdn.instructables.com/F4Q/MR13/JR0YR3AX/F4QMR13JR0YR3AX.LARGE.jpg", "https://cdn.instructables.com/FYE/AOSR/JR0YR3BO/FYEAOSRJR0YR3BO.LARGE.jpg", "https://cdn.instructables.com/FJK/I7T3/JR0YR3BP/FJKI7T3JR0YR3BP.LARGE.jpg", "https://cdn.instructables.com/FPI/EBTA/JR0YR3BI/FPIEBTAJR0YR3BI.LARGE.jpg", "https://cdn.instructables.com/FWC/EUS5/JR0YR3BJ/FWCEUS5JR0YR3BJ.LARGE.jpg", "https://cdn.instructables.com/FVO/SCWQ/JR0YR3BK/FVOSCWQJR0YR3BK.LARGE.jpg", "https://cdn.instructables.com/F1A/A9PP/JR0YR3BL/F1AA9PPJR0YR3BL.LARGE.jpg", "https://cdn.instructables.com/F2G/VZ8P/JR0YR3BM/F2GVZ8PJR0YR3BM.LARGE.jpg", "https://cdn.instructables.com/F5R/HUMX/JR0YR3BN/F5RHUMXJR0YR3BN.LARGE.jpg", "https://cdn.instructables.com/FQB/79H8/JR0YR3BQ/FQB79H8JR0YR3BQ.LARGE.jpg"], "step_title": "Step 3: Preparing the Entertainment System for Its New Life"}, {"step": 4, "steps_text": "While I can easily get the DVD player to start up and play movies, the DVD player was reliant on the vehicle's radio for sound, so the movies the DVD player showed were definitely of the silent variety.\nWhile it would be fairly simply to hook up an audio amplifier to the audio outputs of the DVD player and connect a couple of wired speakers to the amplifier, I wanted to add a bit of a twist to this project and make the audio from the DVD player wireless.\nThe obvious choice would have been to hook the DVD player up to a Bluetooth based connection, but I really wanted to keep the cost of the project down to a minimum. With that criteria, I ended up settling for a much more older, but still a very robust technology - Infrared.\nBefore Bluetooth became the norm, the vast majority of wireless audio headphones used infrared as the means of transmitting audio signals. While they did work well, they did suffer from the drawback that the infrared transmitter and receiver needed to be in direct line of sight of each other in order to work, something that is not an issue with today's Bluetooth devices.\nThe good news though, is that transmitting infrared audio is fairly simple, requiring a relatively few parts to construct. A quick look on eBay turned up several infrared transmitter and receiver kits for only a few dollars. A quick click on the Buy Now button and I had 2 kits heading my way.\nAfter a few weeks, the kits arrived.\nNow one thing to note - that old saying \"You get what you pay for\" is still true. While I did get the kits in good shape and came with all the parts there was one thing that was missing - Instructions.\nTo the kit manufacturer's credit, the printed circuit boards were very well marked.\nSo the advice I would offer is this; if you a newbie to the world of electronics, this may pose to be a bit of a challenge for you, but if you have assembled a few kits before, the lack of instructions shouldn't be too much of a problem, just follow the diagram on the printed circuit board.\nI started assembling the kit with the most complex part first - the receiver. I started the assembly by first installing the electrolytic capacitors. For those that aren't familiar with these types of capacitors, they need to be installed in the correct polarity on the circuit board. On the capacitor itself, the negative lead should be marked on the side of the capacitor, while the location for the negative lead on the board should be also marked. So as long as you install the negative wire in the negative hole on the board, things will be fine. Once the capacitors are installed, just solder them into place.\nNext I installed the socket for the amplifier chip (don't install the chip itself onto the board) .\nLooking at the socket, there should be a small notch in one end of the socket itself - this notch should match a notch marked on the circuit board location for the socket. Make sure that the socket is seated into the board with the notch markings matching and solder the socket into place.\nWith the socket in place we then installed the ceramic capacitors onto the circuit board. While these capacitors are not sensitive to circuit polarity, they can be a bit hard to understand what value they have since they typically are stamped with a 3 digit code. Once again, the circuit board held the clue. Insert the capacitor that has the same value as the one stamped on the board and solder them in place.\nWith the capacitors installed, the next step is to install the resistors. As before, just insert the appropriate resistor into the correct spot on the board and solder them in place.\nFinally we need to install the red LED and the infrared receiver LED. There is a bit of a trick for LED's. On the circuit board, there is a symbol for the LED on the board for the red LED and a negative and positive terminal for the receiver. In cases like that, I tend to have a bit of a hard time knowing which side is which on a LED. In those cases I find drawing a cheat sheet quite helpful. (Oh, by the way, the short lead of an LED is the negative connection). Install the LED's in the right polarity on the board and solder them into place.\nTo finish up the board, I just soldered in the connectors for the speakers and the power, insert the amplifier chip into the socket (make sure that the notch on the chip aligns with the notch on the socket) and the receiver board is done.\nThe assembling of the transmitter board is very similar, albeit with less parts. Assembly followed the exact same process that I followed for the receiver.\nWith the infrared transmitter and receiver all wired up, it's now time to try them out on the DVD player.\nWhile waiting for the kits to arrive I had gone out and bought a 12 volt power supply and a power connector to hook up to the DVD player.\nLuckily the Infrared transmitter also ran on 12 volts, so hooking it up to power was a simple matter of soldering it in with the power connection for the DVD player.\nThe audio input for the transmitter was a standard small head phone jack. For testing purposes I soldered the left side audio inputs of the DVD player to a similar sized headphone plug and plugged it into the headphone jack of the transmitter.\nWith everything all hooked up, it was time for a quick smoke test. Connecting the power to the DVD player, the red LED on the transmitter lit up with no smoke in sight - so far so good.\nWith the transmitter hooked up, I then hooked up the receiver. Hook up was a simple matter of connecting the receiver to a small speaker and powering it up with a 9 volt battery.\nFinally all I had to do make sure that the infrared LED's on the transmitter and receiver were pointing to each other, I then put a DVD into the player, sat back and watched the show.", "step_imgs": ["https://cdn.instructables.com/FL4/7BGZ/JR0YV4GC/FL47BGZJR0YV4GC.LARGE.jpg", "https://cdn.instructables.com/FTU/UEUK/JR0YV4GY/FTUUEUKJR0YV4GY.LARGE.jpg", "https://cdn.instructables.com/FLM/C4MQ/JR0YV4HK/FLMC4MQJR0YV4HK.LARGE.jpg", "https://cdn.instructables.com/FXE/MT4H/JR0YV4HM/FXEMT4HJR0YV4HM.LARGE.jpg", "https://cdn.instructables.com/FKR/TO2L/JR0YV4HO/FKRTO2LJR0YV4HO.LARGE.jpg", "https://cdn.instructables.com/FWZ/X4YP/JR0YV4I8/FWZX4YPJR0YV4I8.LARGE.jpg", "https://cdn.instructables.com/FBL/TUEI/JR0YV4IA/FBLTUEIJR0YV4IA.LARGE.jpg", "https://cdn.instructables.com/FD8/OQYA/JR0YV4IC/FD8OQYAJR0YV4IC.LARGE.jpg", "https://cdn.instructables.com/F0P/M7WK/JR0YV4IE/F0PM7WKJR0YV4IE.LARGE.jpg", "https://cdn.instructables.com/FEF/UQS6/JR0YV4IG/FEFUQS6JR0YV4IG.LARGE.jpg", "https://cdn.instructables.com/FYB/JVQ2/JR0YV4II/FYBJVQ2JR0YV4II.LARGE.jpg", "https://cdn.instructables.com/FO4/NJMO/JR0YV4AN/FO4NJMOJR0YV4AN.LARGE.jpg", "https://cdn.instructables.com/FQZ/A58A/JR0YV4AO/FQZA58AJR0YV4AO.LARGE.jpg", "https://cdn.instructables.com/FNL/V38V/JR0YV4AP/FNLV38VJR0YV4AP.LARGE.jpg", "https://cdn.instructables.com/F7C/RL5O/JR0YV4AQ/F7CRL5OJR0YV4AQ.LARGE.jpg", "https://cdn.instructables.com/FFH/0I77/JR0YV4AR/FFH0I77JR0YV4AR.LARGE.jpg", "https://cdn.instructables.com/FPI/Z2US/JR0YV4AS/FPIZ2USJR0YV4AS.LARGE.jpg", "https://cdn.instructables.com/FZB/5MFB/JR0YV4AT/FZB5MFBJR0YV4AT.LARGE.jpg", "https://cdn.instructables.com/FU4/A7V4/JR0YV4AX/FU4A7V4JR0YV4AX.LARGE.jpg", "https://cdn.instructables.com/FT4/LN49/JR0YV4B0/FT4LN49JR0YV4B0.LARGE.jpg"], "step_title": "Step 4: Figuring Out Wireless Sound"}, {"step": 5, "steps_text": "Now that the electronic part of the project has been sorted out, I now needed to look into how we should package everything up.\nMy intent for this project was to have everything contained in a wooden cabinet so that it could very easily fit in a home setting. The woodworking part of this project will be separated into two parts; building a case for the DVD player, and a frame for the LCD screen.\nFor this project, I wanted to make things as functional as possible with as little frills as possible - basically I'm just building a box. For this box, I used some 1/2 inch birch that I had laying around the shop. In order to make things as neat as possible, I wanted to have the corners of the box meet at a 45 degree angles.\nI started by taking measurements of the DVD player in order to get the width and lengths of all sides that I needed for the box. For the length of the box, I added an extra 2 inches to the length in order to allow some working room for adding the infrared transmitters later on.\nI then cut out 4 pieces of birch to the sizes that I had measured with a miter saw, making sure that all the corner edges where cut at a 45 degree angle.\nWhen I started to assemble the box around the player, I encountered my first hiccup.\nWhen the DVD player was installed in the minivan, it was attached using screws through a mounting flange that is part of the DVD player housing. Unfortunately these flanges stick out from the side of the DVD player, preventing a proper fit for the case. I needed to remove those flanges. A few minutes work with my rotary tool soon addressed that but removing the flanges.\nI then started work on the case. The first thing I did was to add a 1/4 inch deep groove along one end of the box side pieces. The purpose of the groove was to add some clearance for the face plate of the DVD player. This was done with a 1/2 straight bit on the router table.\nOnce the grooves were cut, I then switched the straight bit on my router to a round over bit and rounded over the edge opposite to the side where I had put the groove.\nI then started to do a bit of a test fit of the case pieces with the DVD player. During the test fit, I did find a couple of complications.\nThe first thing I found was that the DVD player had a exhaust fan coming out of one side. Obviously I needed to provide some way for the hot air to vent from the player.\nTo create a exhaust vent in the side of the case, I first marked the location of the fan on the corresponding side piece for the case.\nOnce the location was marked out, I then drilled out a series of small ventilation holes within the location that I marked into the side.\nWith the ventilation holes in place I then glued the side piece to the case bottom.\nWith the one side now attached to the bottom of the case, I then focused my attention the other side of the case, which is where I found the another complication. I quickly found out that I needed to have some sort of access for the video connector.\nTo create the access for the connector, I followed the same process that I followed for the ventilation holes, I first traced out the location of the connector and then I drilled out a pilot hole in the middle of the area that I had traced out and cut the opening out with a scroll saw.\nIn order to make sure that I had cut the opening to the right size, I made a test fit of the video connector in order to make sure that everything was good.\nOnce I had confirmed that the video connector slot was the right size I then glued that side of the case to the case bottom.\nNext I drilled a 5 mm hole about an inch from the back of each case side in order to allow for the installation of the infrared transmitters later on.\nWith all the holes and openings cut and drilled out, we should be able to button up the case - but sadly no....\nA final wrinkle in our plans had popped up - the power connector for the DVD player is positioned pointing up. In order to do what I wanted to do, I really needed the power connector to point out towards the back of the case.\nLuckily, the power connector for the DVD player is bolted to the chassis of the DVD player with just a couple of machine screws. Removing the screws allowed me to re position the power connector in the direction that I wanted\nWith that last hurdle removed, I started to do the final assembly of the case. I first gave the case a quick sanding.\nThen as an added flare I gave the inside groove of the case a coat of black paint in order to blend it in a bit with the front face plate of the DVD player once the case is assembled.\nWith that, I was able to then do the final assembly of the case. Now for this project, I had to do things a bit out of sequence. In order to make things easier later on, I needed to have the DVD player installed in the case before I applied any final finish to the wood. I just find it easier to do it this way than to have to deal with varnishing many smaller pieces later on.\nSo, having said that, I installed the DVD player into the case and buttoned it up with some wood glue, held in place with some masking tape until the glue dried.\nWith that the case for the DVD player was complete.", "step_imgs": ["https://cdn.instructables.com/FVS/C3ZK/JR6OIHIQ/FVSC3ZKJR6OIHIQ.LARGE.jpg", "https://cdn.instructables.com/F81/NWB6/JR6OII3K/F81NWB6JR6OII3K.LARGE.jpg", "https://cdn.instructables.com/FE9/TIN7/JR6OII4E/FE9TIN7JR6OII4E.LARGE.jpg", "https://cdn.instructables.com/FGK/PEDD/JR6OII58/FGKPEDDJR6OII58.LARGE.jpg", "https://cdn.instructables.com/FCD/Q5QI/JR6OII6L/FCDQ5QIJR6OII6L.LARGE.jpg", "https://cdn.instructables.com/FWJ/JNAR/JR6OII83/FWJJNARJR6OII83.LARGE.jpg", "https://cdn.instructables.com/FDJ/YHLJ/JR6OII8Z/FDJYHLJJR6OII8Z.LARGE.jpg", "https://cdn.instructables.com/FH5/QURG/JR6OII92/FH5QURGJR6OII92.LARGE.jpg", "https://cdn.instructables.com/F87/QRWZ/JR6OIIB2/F87QRWZJR6OIIB2.LARGE.jpg", "https://cdn.instructables.com/FJ5/4GEI/JR6OIICJ/FJ54GEIJR6OIICJ.LARGE.jpg", "https://cdn.instructables.com/F97/5TWE/JR6OIIER/F975TWEJR6OIIER.LARGE.jpg", "https://cdn.instructables.com/FL0/IG5H/JR6OIIIV/FL0IG5HJR6OIIIV.LARGE.jpg", "https://cdn.instructables.com/FIO/ZGWO/JR6OIIKJ/FIOZGWOJR6OIIKJ.LARGE.jpg", "https://cdn.instructables.com/FM0/JUY9/JR6OIILY/FM0JUY9JR6OIILY.LARGE.jpg", "https://cdn.instructables.com/F0I/UU89/JR6OIIT5/F0IUU89JR6OIIT5.LARGE.jpg", "https://cdn.instructables.com/FIX/I32U/JR6OIIU0/FIXI32UJR6OIIU0.LARGE.jpg", "https://cdn.instructables.com/F4W/JUGK/JR6OIJ19/F4WJUGKJR6OIJ19.LARGE.jpg", "https://cdn.instructables.com/FK0/VSPN/JR6OIJ5N/FK0VSPNJR6OIJ5N.LARGE.jpg", "https://cdn.instructables.com/F9G/KR9D/JR6OIJ95/F9GKR9DJR6OIJ95.LARGE.jpg", "https://cdn.instructables.com/FYV/P38S/JR6OIJCI/FYVP38SJR6OIJCI.LARGE.jpg", "https://cdn.instructables.com/FK8/63WH/JR6OIJDO/FK863WHJR6OIJDO.LARGE.jpg", "https://cdn.instructables.com/FXP/987T/JR6OIJGS/FXP987TJR6OIJGS.LARGE.jpg", "https://cdn.instructables.com/FU9/QPUC/JR6OIJKD/FU9QPUCJR6OIJKD.LARGE.jpg", "https://cdn.instructables.com/FHZ/A63D/JR6OIJMM/FHZA63DJR6OIJMM.LARGE.jpg", "https://cdn.instructables.com/F6Z/F4JE/JR6OIKIL/F6ZF4JEJR6OIKIL.LARGE.jpg", "https://cdn.instructables.com/FQ4/GQIW/JR6OIKQH/FQ4GQIWJR6OIKQH.LARGE.jpg", "https://cdn.instructables.com/F1A/CMXV/JR6OIKV4/F1ACMXVJR6OIKV4.LARGE.jpg", "https://cdn.instructables.com/F6S/ZRU3/JR6OIKWI/F6SZRU3JR6OIKWI.LARGE.jpg", "https://cdn.instructables.com/F38/KVIS/JR6OIKYF/F38KVISJR6OIKYF.LARGE.jpg", "https://cdn.instructables.com/F91/FYEX/JR6OIL4K/F91FYEXJR6OIL4K.LARGE.jpg", "https://cdn.instructables.com/FJT/DTKS/JR6OILAB/FJTDTKSJR6OILAB.LARGE.jpg", "https://cdn.instructables.com/FRL/U8AX/JSAOROWZ/FRLU8AXJSAOROWZ.LARGE.jpg", "https://cdn.instructables.com/F9P/S4GH/JR6OIL15/F9PS4GHJR6OIL15.LARGE.jpg"], "step_title": "Step 5: Building the DVD Cabinet"}, {"step": 6, "steps_text": "Now that we have our cabinet built, the next step is to do something for the LCD screen for the entertainment unit. My plan is to have the entertainment unit as an \"all in one\" affair. More specifically, I want to have the LCD screen and DVD player to be joined together as one piece. My design vision for the screen is to give it a look of a framed picture that would \"sit\" on top of the DVD player.\nBut before I can build the decorative picture frame, I need to first build a cabinet that would allow me to house the screen and attach it to the DVD player.\nI started by building a frame to hold the LCD screen. To build the frame, I used four 1/2 inch X 1/2 inch birch strips cut roughly to the size of the LCD screen. These strips will be used as side frames for the screen.\nI then roughly assembled the strips around the frame and measured out the overall dimensions of the screen and strips combined in order to come up with a measurement for a back mount for the frame.\nWith that measurement I then cut out a piece of 1/2 inch birch to that size to serve as a back mount. In my particular case, my board already had a 1/4 inch groove cut into it which made it perfect later on for routing the wiring harness for the screen (if I didn't have that groove, I would have needed to cut one out with my router).\nWith the back mount cut out I then proceeded to cut the side frames to size. For neatness I cut the ends of the side strips at a 45 degree angle so that corners were as neat as possible. During the test fitting of the screen I noticed that some of the electrolytic capacitors on the back of the screen stuck out a little bit, which prevented the screen from lying flat on the back mount. To allow room for them I had to cut out a little bit of wood from the back mount.\nBefore gluing the frame strips to the back mount, I added a small pass through hole into the back mount to allow access for the wiring harness. I then placed the screen on top of the back mount and proceeded to install the strips by gluing them to the back mount and placing them snugly around the screen.\nWhen I attached the strip that was in the location where I had cut the wiring harness access hole, I made sure to route the wiring harness through the hole before installing the strip.\nWhen building the mounting frame, I noticed that the length of the wiring harness was not enough for it to reach the connector on the DVD player.\nIn essence, I needed to lengthen the wiring harness by about a foot. This meant I had to cut each of the wires on the harness and splice a length of wire to each wire. There were about 20 wires that made up the harness, so this was a bit of a monotonous process and I needed to take great care since I need to make sure I didn't connect the wrong wires together.\nTo do this I cut each wire individually and solder the splices together one wire at a time.\nOnce all the wires were lengthened, I applied a little bit of hot glue around the splices to provide some insulation.\nhe next step in the process was to build a mount in order to attach the screen to the DVD player. For this I decided to make the DVD player cabinet act as a cradle for the screen cabinet, with 2 arms coming down from the screen cabinet and attaching to the sides of the DVD player.\nTo do this, I cut out two 3.5 inch by 8 inch pieces of 1/2 inch birch. I then test fitted the two pieces by standing them up against the sides of the DVD player and marked the location of the top of the DVD player on the two pieces with a pencil.\nMy plan is to have the screen positioned at a slight upward angle in order to make the viewing of the screen a little bit easier. I figured that having the screen at a 15 degree angle was probably the best option.\nFrom one of the outer edges of the line that I had marked on the 2 pieces of birch I then drew a 15 degree line to the top of each piece.\nI then made a cut along that line with a saw.\nWith the DVD player mounts cut out, I then started the assembly of the screen cabinet.\nI took another 3.5 inch wide piece of 1/2 inch birch and cut it to the length of the frame that we just built for the screen. This piece of wood will serve as a cross piece in order to attach the two DVD player mounts together. I applied glue to both ends of this piece of birch and attached it to the 2 DVD players mounts such that the cross piece was sitting on top of the DVD player while it was attached to the mounts. I made sure that the sides with the angled cuts were both pointing in the same direction.\nAs an added measure of keeping the cabinet square, I also dry fitted the screen frame into the mounting assembly while the glue dried.\nWith the mounting frame now put together, I then glued the LCD screen into the mounting frame. When gluing the screen in place, I made sure that the screen was flush with the angled cuts in the frame.\nI will be enclosing the back of the frame cabinet, so I need to provide a way for the wiring harness to be able to come out of the frame cabinet so that it can be connected to the DVD player. I made this possible by drilling a 1 inch hole on the right hand side of the cross piece of the cabinet.\nWith the wiring harness looked after, we need to enclose the back of the screen cabinet. I took measurements of the back of the frame assembly and cut out a piece of 1/2 inch birch to size. I then glued the outside edges of the frame and nailed the back into place with brad nails.\nAs a last step, I then took measurements of the top of the frame assembly and cut out a piece of 1/2 inch birch to size. I glued the outside edges of the frame top and attached the piece into place.\nWith that the screen cabinet is built and ready to be attached to the DVD player.\nWe still need to do a little more work to the cabinet, such as installing a decorative frame and applying a varnish to it, but that will be covered as part of the installation to the DVD player.", "step_imgs": ["https://cdn.instructables.com/FF0/YXHM/JRGOO28U/FF0YXHMJRGOO28U.LARGE.jpg", "https://cdn.instructables.com/FKT/PZ8S/JRGOO2KV/FKTPZ8SJRGOO2KV.LARGE.jpg", "https://cdn.instructables.com/FCQ/G602/JRGOO2N5/FCQG602JRGOO2N5.LARGE.jpg", "https://cdn.instructables.com/FXC/R6QT/JRGOO2PF/FXCR6QTJRGOO2PF.LARGE.jpg", "https://cdn.instructables.com/FIK/4ZD6/JRGOO2RQ/FIK4ZD6JRGOO2RQ.LARGE.jpg", "https://cdn.instructables.com/FWE/ZQ46/JRGOO36F/FWEZQ46JRGOO36F.LARGE.jpg", "https://cdn.instructables.com/FJU/LZHO/JRGOO36T/FJULZHOJRGOO36T.LARGE.jpg", "https://cdn.instructables.com/FB2/G89L/JRGOO36U/FB2G89LJRGOO36U.LARGE.jpg", "https://cdn.instructables.com/FDN/FK5Q/JRGOO37J/FDNFK5QJRGOO37J.LARGE.jpg", "https://cdn.instructables.com/F29/XA3H/JRGOO3AW/F29XA3HJRGOO3AW.LARGE.jpg", "https://cdn.instructables.com/FD8/O43T/JRGOO3BL/FD8O43TJRGOO3BL.LARGE.jpg", "https://cdn.instructables.com/F7K/F4QX/JRGOO3BM/F7KF4QXJRGOO3BM.LARGE.jpg", "https://cdn.instructables.com/F8C/GA09/JRGOO3BN/F8CGA09JRGOO3BN.LARGE.jpg", "https://cdn.instructables.com/FRD/HZA9/JRGOO3CD/FRDHZA9JRGOO3CD.LARGE.jpg", "https://cdn.instructables.com/FHF/2ZHX/JRGOO3LM/FHF2ZHXJRGOO3LM.LARGE.jpg", "https://cdn.instructables.com/FET/C6N6/JRGOO3LO/FETC6N6JRGOO3LO.LARGE.jpg", "https://cdn.instructables.com/FX8/F2NZ/JRGOO3LP/FX8F2NZJRGOO3LP.LARGE.jpg", "https://cdn.instructables.com/FV3/HYGH/JRGOO3LQ/FV3HYGHJRGOO3LQ.LARGE.jpg", "https://cdn.instructables.com/F6D/ZYQT/JRGOO3LR/F6DZYQTJRGOO3LR.LARGE.jpg", "https://cdn.instructables.com/FWK/HYFL/JRGOO3LS/FWKHYFLJRGOO3LS.LARGE.jpg", "https://cdn.instructables.com/FED/C65M/JRGOO3LX/FEDC65MJRGOO3LX.LARGE.jpg", "https://cdn.instructables.com/FQH/D7SP/JRGOO3M2/FQHD7SPJRGOO3M2.LARGE.jpg", "https://cdn.instructables.com/FZA/VJXL/JRGOO3NW/FZAVJXLJRGOO3NW.LARGE.jpg", "https://cdn.instructables.com/FIH/W04J/JRGOO3O4/FIHW04JJRGOO3O4.LARGE.jpg", "https://cdn.instructables.com/FTU/6KWV/JRGOO3O7/FTU6KWVJRGOO3O7.LARGE.jpg", "https://cdn.instructables.com/FAN/QNQZ/JRGOO3OA/FANQNQZJRGOO3OA.LARGE.jpg", "https://cdn.instructables.com/FRS/DVKA/JRGOO3OD/FRSDVKAJRGOO3OD.LARGE.jpg", "https://cdn.instructables.com/FJ5/8G2Z/JRGOO3OI/FJ58G2ZJRGOO3OI.LARGE.jpg", "https://cdn.instructables.com/FTJ/1200/JRGOO3PG/FTJ1200JRGOO3PG.LARGE.jpg", "https://cdn.instructables.com/FFI/5F01/JRGOO3PI/FFI5F01JRGOO3PI.LARGE.jpg", "https://cdn.instructables.com/FM4/3WUY/JRGOO3QG/FM43WUYJRGOO3QG.LARGE.jpg", "https://cdn.instructables.com/F6C/MGFO/JRGOO3QT/F6CMGFOJRGOO3QT.LARGE.jpg", "https://cdn.instructables.com/FD2/U33L/JRGOO3RG/FD2U33LJRGOO3RG.LARGE.jpg", "https://cdn.instructables.com/FQX/XGGG/JRGOO3RI/FQXXGGGJRGOO3RI.LARGE.jpg"], "step_title": "Step 6: Building the Screen Cabinet"}, {"step": 7, "steps_text": "Now that we have the 2 major pieces of the unit safely housed in their custom made cabinets, the final step is to now merge the two into one.\nDue to the amount of work that were done in the previous steps, this will be actually a very straight forward process. At it's core, we just need to plug in the wiring harness from the screen into the DVD player, apply a bit of wood glue to the bottom of the screen cabinet and attach it to the top of the DVD player.\nWhen attaching the screen cabinet I made sure to have the screen cabinet attached in the center of the DVD player while covering up the wiring harness going into the DVD player.\nOnce the glue has dried, the screen is now permanently attached tot he DVD player.\nAt this point we can now finally start applying a finish to the (now combined) cabinet. Since I needed to have all the electronic components installed before I could apply varnish, I need to be extra careful that I don't gum up the works while I'm finishing the cabinet, so the speak.\nThe screen will have a finished frame added in the next step, so I won't be applying any varnish near the screen itself, but I do need to take some care around the DVD player.\nBefore varnishing, I masked off the outside edges of the DVD player face plate with some masking tape\nThen I applied a couple of coats of varnish to the cabinet. While I applied the varnish, I also made sure to not apply too much varnish around the ventilation hole for the DVD player.\nNext we need to add the finishing touch to the LCD screen. As I mentioned in a previous post I wanted to create the illusion of having the screen look like a framed picture. In order to create that feel, I made a picture frame out of some 2 inch wide red cedar that I had left over from a previous project.\nCreating the frame itself was basically cutting the cedar pieces to size so that the cedar pieces will fit neatly around the screen. Once the pieces were cut to size, the frame was assembled using wood glue and corner clamps.\nAfter the glue was dry the frame was given a quick sanding followed by a couple of coats of varnish.\nFinally the frame was attached to the screen with some wood glue and clamps.\nNow that the screen was taken care of, we now focused our attention to the back of the entertainment unit.\nIn one of my earlier posts, I built and tested out a couple of infra red transmitters in order to provide the sound for the DVD player. The time has come to permanently install the transmitters into the cabinet,\nI first soldered a couple of wires with DuPont female connectors connected to them to the positive and negative leads for the power connector for the DVD player.\nNext I took a 1/8 inch phono jack plug and soldered the left side speaker wires on the DVD player wiring harness to it.\nI then plugged the audio jack into the infrared transmitter followed by the DuPont connectors being plugged into the transmitter's power sockets\nI gave everything a quick test by plugging in the DVD player into a power source.\nIf things went well, the LED on the transmitter should light up and you should hear sound if you aim an infrared receiver at the transmitter.\nOnce everything checks out, insert the infrared LED of the transmitter into the hole in the left side of the DVD cabinet and hold it in place with some hot glue.\nRepeat the process again for the right side infrared transmitter.\nThe last step is to button up the back of the DVD cabinet.\nI took a 2.25 inch by 7 inch piece of 1/2 inch birch and I marked out the location for the power socket for the DVD player.\nI then drilled a 3/8 inch hole at that spot and widened out the hole a little bit with a rotary tool.\nAfter that I installed the power socket into the hole, secured it in place with some hot glue and installed the birch back into the cabinet - I wanted to make the back friction fit into the case in order to allow for easier access if I need to access the infrared transmitters at some time in the future.\nWith that the entertainment unit was complete - except for a small exception.....\nWe still need speakers.", "step_imgs": ["https://cdn.instructables.com/F2F/KDP7/JS8TGY25/F2FKDP7JS8TGY25.LARGE.jpg", "https://cdn.instructables.com/F2B/7B05/JS8TGY4T/F2B7B05JS8TGY4T.LARGE.jpg", "https://cdn.instructables.com/F4I/IQ41/JS8TGY4U/F4IIQ41JS8TGY4U.LARGE.jpg", "https://cdn.instructables.com/FQ1/J861/JS8TGYEL/FQ1J861JS8TGYEL.LARGE.jpg", "https://cdn.instructables.com/F7S/J9G1/JS8TGYC0/F7SJ9G1JS8TGYC0.LARGE.jpg", "https://cdn.instructables.com/FEC/AINI/JS8TGYZM/FECAINIJS8TGYZM.LARGE.jpg", "https://cdn.instructables.com/FJW/LSOE/JS8TGYZO/FJWLSOEJS8TGYZO.LARGE.jpg", "https://cdn.instructables.com/F59/IVPS/JS8TGYZP/F59IVPSJS8TGYZP.LARGE.jpg", "https://cdn.instructables.com/F11/8MSV/JS8TGYZR/F118MSVJS8TGYZR.LARGE.jpg", "https://cdn.instructables.com/FMQ/UNMD/JS8TGZ12/FMQUNMDJS8TGZ12.LARGE.jpg", "https://cdn.instructables.com/FUJ/IYJP/JS8TGZ2D/FUJIYJPJS8TGZ2D.LARGE.jpg", "https://cdn.instructables.com/FIP/95AW/JS8TGZ3O/FIP95AWJS8TGZ3O.LARGE.jpg", "https://cdn.instructables.com/FH8/6582/JS8TGZEW/FH86582JS8TGZEW.LARGE.jpg", "https://cdn.instructables.com/FWL/FOL2/JS8TGZEX/FWLFOL2JS8TGZEX.LARGE.jpg", "https://cdn.instructables.com/FSH/FFSG/JS8TGZF1/FSHFFSGJS8TGZF1.LARGE.jpg", "https://cdn.instructables.com/FHF/FHZ8/JS8TGZFT/FHFFHZ8JS8TGZFT.LARGE.jpg", "https://cdn.instructables.com/F6S/G92R/JS8TGZFW/F6SG92RJS8TGZFW.LARGE.jpg", "https://cdn.instructables.com/FJG/SJV1/JS8TGZFY/FJGSJV1JS8TGZFY.LARGE.jpg", "https://cdn.instructables.com/F2K/RPZS/JS8TGZG7/F2KRPZSJS8TGZG7.LARGE.jpg", "https://cdn.instructables.com/FAR/AIAG/JS8TGZG8/FARAIAGJS8TGZG8.LARGE.jpg", "https://cdn.instructables.com/FZU/K3D4/JS8TGZGC/FZUK3D4JS8TGZGC.LARGE.jpg", "https://cdn.instructables.com/F9Z/OBOF/JS8TGZGE/F9ZOBOFJS8TGZGE.LARGE.jpg", "https://cdn.instructables.com/F49/AZIT/JS8TGZGH/F49AZITJS8TGZGH.LARGE.jpg", "https://cdn.instructables.com/FKP/0OUC/JS8TGZGJ/FKP0OUCJS8TGZGJ.LARGE.jpg", "https://cdn.instructables.com/F8E/L9HP/JS8TGZGL/F8EL9HPJS8TGZGL.LARGE.jpg", "https://cdn.instructables.com/F4K/X51O/JS8TGZGO/F4KX51OJS8TGZGO.LARGE.jpg"], "step_title": "Step 7: Putting Everything Together"}, {"step": 8, "steps_text": "With the completion of the display and DVD units of the system, the only thing left to do to complete the system was to give it a voice.\nAs you may recall in a previous step, I constructed and tested an infrared transmitter and receiver system that would allow the entertainment system to transmit sound wirelessly. Now that we have installed the transmitter part of this arrangement into the DVD player, we needed to give the receiver the same treatment.\nTherefore the focus of this of this post will be on building a wireless speaker. Even though these particular speakers will be for our entertainment system, you can build these for almost any situation where you would like to have wireless sound.\nConstruction of the speaker itself is fairly straight forward since it really comprises of 3 main components:\nA Speaker\nA cabinet for the speaker\nThe infrared receiver to drive the speaker.\nAlmost any speaker will work. In my case I picked up some very inexpensive car speakers that came with their own speaker grill at my local surplus store.\nLikewise, speaker cabinet in itself is fairly easy to build.\nTo build the cabinet, I based the dimensions around the speaker grill and the depth of the speaker itself. Based on that information I determined that a finished speaker cabinet of 6 inches by 6 inches with a depth of 5 inches would work the best.\nArmed with that information, I cut out four pieces of 1/2 inch birch 6 inches wide but a little longer than 6 inches in order to allow for some trimming for length later.\nThe next step in the process was to prepare the sides of the cabinet. More specifically I wanted to add a 1/2 inch groove along each edge of the sides in order allow for the speaker grill and back of the cabinet to seamlessly and snugly fitted into the sides when everything was assembled.\nTo create the grooves, I installed a 1/2 inch straight bit into a router and set the router's cutting depth to 1/4 inch.\nWhen the router was set up, I took the 1/2 inch birch boards and just ran the two long edges of the boards through the router such that I had a 1/2 inch wide and 1/4 inch deep groove along each long side of the boards. While doing that also I made sure that the grooves are on the same side of the board.\nOnce the grooves where in place I then switched the router over to a round over bit and rounded over the one of the edges opposite from the side that we put the groove on. This edge will act as the front of the cabinet go forward.\nWith the edges prepared I then cut a 45 degree angle off of one end of the boards, making sure that the \"long\" part of the 45 degree angle was on the side of the board that does not have the groove.\nUsing the speaker grill as a template I then cut the boards to size by cutting a 45 degree angle at the other end of the boards, again making sure that the long part of that 45 degree angle was on the side that did not have a groove.\nTaking one of the boards, I then marked and drilled a 5 mm hole 1.5 inches in from the back and bottom of the board. The purpose of the hole will allow the sensor from the receiver access to the outside world.\nNow that all the cabinet pieces have been cut out, the body of the cabinet can be assembled. I started by applying glue to a 45 degree edge of two of the boards. I then joined the two other boards to the glued boards so that I had 2 half squares.\nWhen assembling the boards, I also made sure that the sides that had the rounded over edges were both on the same side.\nI then clamped the joined pieces together with corner clamps and allowed the glue to dry.\nWhen the glue had dried, I removed the clamps and applied glue to the remaining 45 degree edges. I then joined the 2 half squares together and clamped them with the corner clamps until the glue had dried.\nWith the body of the cabinet built, this was a good time to give things a good sanding and couple of coats of varnish.\nOnce the varnish had dried, the speaker was installed.\nInstallation was simply a matter of applying some hot glue along the back edge of the speaker grill and inserting the speaker assembly into the front of the speaker cabinet.\nThe speaker was held firmly in place until the hot glue had dried.\nWith the front of the cabinet sorted out, I then shifted my focus to the back of the cabinet. I cut out a 6 inch by 6 inch piece of 1/2 inch birch.\nOnce I cut it out I then gave the back a quick test fit into the cabinet. It should be a friction fit since I don't want to permanently attach the back to the cabinet just in case I need to access the infrared received at some point in the future.\nNext on the agenda was to wire everything up in the cabinet.\nFor the speaker, I wanted to have a few key features. I wanted to have the power to be provided from a source outside of the speaker, I also wanted to be able to turn the speaker on or off and I wanted some sort of indication that the speaker was working.\nTo accomplish that in addition to the infrared receiver I needed to have a power socket, a LED and an on/off switch along with some wire leads with DuPont connectors attached to them.\nAs I just mentioned, I wanted to have some way to provide some sort of indication that the speaker was powered on. The receiver does have a LED installed on its circuit board to indicate power, however with the receiver enclosed inside the speaker cabinet, it won't be very useful.\nTo provide that external indication, I carefully removed the LED from the receiver's circuit board and replaced it with a couple of lengths of wire that had female DuPont connectors on the end of them. I then inserted a new LED into the DuPont sockets\nWith the LED installed I then hooked up the speaker wires to the receiver output jacks, inserted the receiver sensor in the hole that I had drilled into the side of the cabinet and glued the receiver in place with hot glue. .\nI then marked the location for the on/off switch and the power connector on the cabinet back and created the access openings for them by first drilling a pilot hole at the marked locations followed by enlarging the openings to fit with a rotary tool.\nWhile I was there I also drilled out a 5 mm hole for the LED.\nAfter creating the access holes I then soldered the switch up such that one of the connectors on the switch was attached to the positive wire going into the receiver. The other connector on the switch was then soldered to a length of wire that was in turn soldered to the positive terminal of the power socket.\nThe negative wire from the receiver was then soldered to the negative connector on the power socket.\nThe switch, power socket and the LED where then installed into the cabinet back and secured in place with hot glue.\nAt this point this effectively completes the speaker build. The only thing left to do now is to install the back into the cabinet, apply some felt feet to the bottom of the speaker, plug it in and turn it on.\nOf course we want to try it out. I put in a DVD into the entertainment system, grabbed some popcorn and watched the show.\nI am quite pleased on how things turn out - something was likely to be destined for the crusher is now living a new life.\nThanks for checking out my Instructable!\nIf you find this intriguing, please check out my site to see what other things I'm tinkering with!", "step_imgs": ["https://cdn.instructables.com/FS8/I15H/JSAOTY4U/FS8I15HJSAOTY4U.LARGE.jpg", "https://cdn.instructables.com/FU2/PTPQ/JSAOTY4T/FU2PTPQJSAOTY4T.LARGE.jpg", "https://cdn.instructables.com/F04/Q83O/JSAOTY9M/F04Q83OJSAOTY9M.LARGE.jpg", "https://cdn.instructables.com/FDB/14F0/JSAOTY9L/FDB14F0JSAOTY9L.LARGE.jpg", "https://cdn.instructables.com/FLR/265H/JSAOTYHB/FLR265HJSAOTYHB.LARGE.jpg", "https://cdn.instructables.com/FL3/DOI3/JSAOTYHM/FL3DOI3JSAOTYHM.LARGE.jpg", "https://cdn.instructables.com/FPY/Q82Q/JSAOTYHX/FPYQ82QJSAOTYHX.LARGE.jpg", "https://cdn.instructables.com/FSS/TOH3/JSAOTYR4/FSSTOH3JSAOTYR4.LARGE.jpg", "https://cdn.instructables.com/F0S/PCGG/JSAOTYXN/F0SPCGGJSAOTYXN.LARGE.jpg", "https://cdn.instructables.com/F7M/VWYO/JSAOTYXY/F7MVWYOJSAOTYXY.LARGE.jpg", "https://cdn.instructables.com/FYT/WJG8/JSAOTYYO/FYTWJG8JSAOTYYO.LARGE.jpg", "https://cdn.instructables.com/FJ7/ITYQ/JSAOTYYA/FJ7ITYQJSAOTYYA.LARGE.jpg", "https://cdn.instructables.com/FJR/08MT/JSAOTYYZ/FJR08MTJSAOTYYZ.LARGE.jpg", "https://cdn.instructables.com/FW1/66LL/JSAOTZ5B/FW166LLJSAOTZ5B.LARGE.jpg", "https://cdn.instructables.com/FED/7UWF/JSAOTZ5G/FED7UWFJSAOTZ5G.LARGE.jpg", "https://cdn.instructables.com/FXQ/T4VI/JSAOTZ68/FXQT4VIJSAOTZ68.LARGE.jpg", "https://cdn.instructables.com/FV3/PXC1/JSAOTZ6B/FV3PXC1JSAOTZ6B.LARGE.jpg", "https://cdn.instructables.com/FS0/IPSQ/JSAOTZ6C/FS0IPSQJSAOTZ6C.LARGE.jpg", "https://cdn.instructables.com/F3Y/9FJO/JSAOTZBN/F3Y9FJOJSAOTZBN.LARGE.jpg", "https://cdn.instructables.com/F8F/SROI/JSAOTZBT/F8FSROIJSAOTZBT.LARGE.jpg", "https://cdn.instructables.com/FX8/N1YB/JSAOTZC0/FX8N1YBJSAOTZC0.LARGE.jpg", "https://cdn.instructables.com/FVR/VBGI/JSAOTZCR/FVRVBGIJSAOTZCR.LARGE.jpg", "https://cdn.instructables.com/FH7/GZYP/JSAOTZDI/FH7GZYPJSAOTZDI.LARGE.jpg", "https://cdn.instructables.com/FQJ/FFUX/JSAOTZJ1/FQJFFUXJSAOTZJ1.LARGE.jpg", "https://cdn.instructables.com/F8R/8A0L/JSAOTZJJ/F8R8A0LJSAOTZJJ.LARGE.jpg", "https://cdn.instructables.com/F9G/AL6R/JSAOTZK4/F9GAL6RJSAOTZK4.LARGE.jpg", "https://cdn.instructables.com/F0G/BT65/JSAOTZR9/F0GBT65JSAOTZR9.LARGE.jpg", "https://cdn.instructables.com/F6W/WPLD/JSAOTZRZ/F6WWPLDJSAOTZRZ.LARGE.jpg", "https://cdn.instructables.com/FND/M87S/JSAOTZT0/FNDM87SJSAOTZT0.LARGE.jpg", "https://cdn.instructables.com/FW0/128K/JSAOTZSK/FW0128KJSAOTZSK.LARGE.jpg", "https://cdn.instructables.com/F58/KWMG/JSAOTZTG/F58KWMGJSAOTZTG.LARGE.jpg", "https://cdn.instructables.com/F15/BTVA/JSAOU01L/F15BTVAJSAOU01L.LARGE.jpg", "https://cdn.instructables.com/FJA/X1RR/JSAOU01S/FJAX1RRJSAOU01S.LARGE.jpg", "https://cdn.instructables.com/FCY/E6YP/JSAOU021/FCYE6YPJSAOU021.LARGE.jpg", "https://cdn.instructables.com/FFJ/T9NG/JSAOU029/FFJT9NGJSAOU029.LARGE.jpg", "https://cdn.instructables.com/F99/M65Y/JSAOU02K/F99M65YJSAOU02K.LARGE.jpg", "https://cdn.instructables.com/FKX/IMX7/JSAOU02T/FKXIMX7JSAOU02T.LARGE.jpg", "https://cdn.instructables.com/FX0/JH8P/JSAOU031/FX0JH8PJSAOU031.LARGE.jpg", "https://cdn.instructables.com/FGX/655I/JSAOU03I/FGX655IJSAOU03I.LARGE.jpg", "https://cdn.instructables.com/FA9/SSAK/JSAOU03T/FA9SSAKJSAOU03T.LARGE.jpg", "https://cdn.instructables.com/FDR/ZVOH/JSAOU03Z/FDRZVOHJSAOU03Z.LARGE.jpg"], "step_title": "Step 8: Building the Wireless Speakers"}], "channel": "Reuse"}, {"category": "Technology", "description": "Motto: In Verbis Virtus...(There is power in words)\nThere are many other Word Clock projects here on Instructables and elsewhere on the Internet so it is rather difficult to choose only one project as a source of inspiration because each of them offered me useful ideas. But if I must choose one, it's going to be the one that started all, the beautiful project created by Doug Jackson, presented on Wikifab. Also, I must mention two projects from here, namely: Design and 3D Print an RGB Word Clock by .A. and IKEA Ribba Word Clock by WhiteClockCompany, who influenced my project a lot too.\nIt's hard to bring something new with any future design, but hopefully my project will grab your attention with the fresh and cool ideas inside.\nWhat are the pros of my project?\nvery affordable, cheap electronics and other parts;\nopensource web server for easy management;\naccurate time from ntp server;\nit is possible to have multiple languages;\nminute by minute time indication (not by 5 minutes like standard word clocks), dynamic time display and amazing flexibility for future ideas...\nThe idea behind this Word Clock is to have all the words necessary for telling the time and to place these words in an 8x8 letters layout as in a word search puzzle. In this way, with a small number of leds we can tell the time minute by minute. Because the words are placed randomly you can tell the time by reading the flashing words each after another (the words are already displayed on the clock face). I started with using only one color, red, also green 8x8 matrix led arrays. You can see how my first clocks are working...\nI have published also an application that you can download from Google Play Puzzle WordClock.\nSadly, the electronics were a little bit complicated when using the MAX7219 led driver and the ESP12 module of ESP8266 microcontroller, the wiring was tedious and prone to errors. But with the WS2812 RGB Led Matrix things became much easier (and cheaper ...). The schematics are simple, there is no need for the esp12 board, an ESP-01 module can be used. Also the flashing words are gone, I used color change to accentuate the words for telling the time (using many colors was a big deal).\nSo I restarted the project with a new look and new electronics, see the renderings above of how I wanted the new word clock to look.\nIf you find my project interesting and useful, please take your time and vote for it in the REMIX CONTEST.", "title": "VERBIS - Desktop 8x8 RGB LED Matrix Word Clock", "url": "https://www.instructables.com/id/VERBIS-Desktop-8x8-RGB-LED-Matrix-Word-Clock/", "steps": [{"step": 1, "steps_text": "Parts...\nwooden photo frame (80x80mm interior): wide frame (2cm), thin frame (1cm);\n3mm plexiglass support;\n80x80mm 3mm grey smoked transparent display plexiglass sheet;\n3D printed 80x80mm 8x8 plastic grid;\nletter layout 80x80mm Printed Paper Sheet;\n3d printed plastic box for electronics;\n2mm diameter 10mm length screws.\nWooden photo frame\nYou can make your own frame, there are a dozen of articles about this, even here on Instructables. But a simpler solution would be finding a framing company where you can order a personalized frame with your required dimensions and you can choose from many frame types. This is exactly what I did. I ordered my frames with a specific dimension: the framed photo, in my case object (display) is 80x80mm. I also asked for an accurate dimension, I didn't want the frame to be too big for the 3D printed plastic grid.\nPlexiglass support\nThe plexiglass support can be also be made DIY but for an amateur it is not very easy to cut and blend plexiglass. So I ordered several supports from an advertising company that makes all kinds of plexiglass objects. The dimensions I used are: width - 120mm, first part length - 180mm, second part length - 50mm, 15\u00b0 bending angle.\nDisplay plexiglass sheet\nThe 3mm grey smoked plexiglass sheet can be cut from a bigger sheet, obtaining the required 80x80mm dimension.\nPlastic grid\nThe STL file for 3D printing can be downloaded from Tinkercad\nDisplay Printed Paper Sheet\nThe SVG file for the Printed Paper Sheet is attached, and it can be edited with Inkscape. You can make your own display layout based on this SVG file, I used Word Search Construction Kit software to generate a words layout for the time display. You can print the file repeatedly on the same sheet of paper to achieve a good, opaque, black background. I got very good results with a cheap inkjet printer and standard white copier paper. I cut off the layout with a pair of scissors.\nPlastic box for electronics\nThe files that you can 3d print are also on Tinkercad. I used some already purchased jewelry boxes, I only designed a new box base because the boxes were too tall. The files on Tinkercad are based on this type of boxes.\nDetailed instructions (follow the images above)\nchoose (and mark) a side of the frame to be the top of the clock, clean the smoked plexiglass sheet, put it in the frame;\nplace the printed paper sheet and the 3D printed grid;\ndrill with 2 mm diameter bit through the plastic grid to make room for the screws in the frame;\nscrew the plastic grid;\nmark on the frame the place for holes and lock the frame to the plexiglass support;\ndrill the holes with a 2mm diameter bit (enlarge the holes in the support with a 3mm diameter bit, make the coining with a 10mm diameter bit) and screw it all together.\nThe last two images shows an almost finished enclosure.", "step_imgs": ["https://cdn.instructables.com/FZT/0T3B/JS5CDL9J/FZT0T3BJS5CDL9J.LARGE.jpg", "https://cdn.instructables.com/FHU/R1IA/JS5CDL8D/FHUR1IAJS5CDL8D.LARGE.jpg", "https://cdn.instructables.com/F26/2TAV/JS5CGB6L/F262TAVJS5CGB6L.LARGE.jpg", "https://cdn.instructables.com/FT6/XV3V/JS5CDLBO/FT6XV3VJS5CDLBO.LARGE.jpg", "https://cdn.instructables.com/FG5/5MD3/JS5CDLCW/FG55MD3JS5CDLCW.LARGE.jpg", "https://cdn.instructables.com/FJK/5QDT/JSOZ7EXG/FJK5QDTJSOZ7EXG.LARGE.jpg", "https://cdn.instructables.com/F1C/2QAK/JS5CDLDK/F1C2QAKJS5CDLDK.LARGE.jpg", "https://cdn.instructables.com/FD6/4GQP/JS5CDLDW/FD64GQPJS5CDLDW.LARGE.jpg", "https://cdn.instructables.com/F7E/SY33/JS5CDLE8/F7ESY33JS5CDLE8.LARGE.jpg", "https://cdn.instructables.com/FAX/AE7M/JS5CDLEY/FAXAE7MJS5CDLEY.LARGE.jpg", "https://cdn.instructables.com/FCB/JUTC/JS5CDLFS/FCBJUTCJS5CDLFS.LARGE.jpg", "https://cdn.instructables.com/FLD/QAAR/JS5CDLGQ/FLDQAARJS5CDLGQ.LARGE.jpg", "https://cdn.instructables.com/FHM/72KK/JS5CDLH2/FHM72KKJS5CDLH2.LARGE.jpg", "https://cdn.instructables.com/F8G/DTIC/JS5CDLHH/F8GDTICJS5CDLHH.LARGE.jpg", "https://cdn.instructables.com/FQJ/KKS5/JS5CDLHU/FQJKKS5JS5CDLHU.LARGE.jpg", "https://cdn.instructables.com/FCU/Q9V9/JS5CDLI8/FCUQ9V9JS5CDLI8.LARGE.jpg"], "step_title": "Step 1: The Enclosure"}, {"step": 2, "steps_text": "Parts...\nESP-01 Board;\n5v to 3.3v stabilizer module;\n80x80mm RGB 8x8 LedMatrix;\n3pin 2.54mm Pitch XH Pin Header+Connector;\nFemale DC Conector cable 5.5mmx2.1mm(2.5mm);\n5v/1.5A Power supply with 5.5mmx2.1mm(2.5mm) Male connector.\nESP-01\nCheap and versatile microcontroller module with WiFi capability, if you don't know about it read this good instructable by TonesB ESP8266 WiFi Module for Dummies.\n3.3v stabilizer module\nThe ESP-01 requires to be powered with 3.3v, I used here a 4pin module.\nLed Matrix 64led RGB Matrix with WS8212 IC\nYou can read more in Getting Started With NeoPixel / WS2812 RGB LED by Open Green Energy.\n3 Pin Header and connector\nI used this connector because it permits easy assembly-disassembly of the enclosure.\nDC connector and DC power supply\nThe power supply is 5v and 1.5A maximum, it is rather enough because not all leds are lightened up at full brightness and full white. Also I opted for a separate DC connector because it is simple to replace a defective power supply.\nSchematics - Very simple, made with Fritzing, see the image above.\nDetailed instructions\nsolder the 3pin connector to the LED Matrix;\nchange the order of the red and black wire in the header (it is good to respect some rules for colors used in wirings, so a red color wire for 5v and a black color wire for ground);\ndrill a hole in the plexiglass support where the 3pin connector is located and enlarge the hole (with a Dremel for example) to accommodate the 3pin connector;\nmake the modules soldering like in images;\nplace in the box the modules, the power and the XH wire ends in the plastic box;\ntwist and solder together the wire ends; isolate and strengthen the twisted wire ends with 2mm interior heat shrink tubing;\nfix the Led Matrix to the 3D printed plastic grid (with a hot melt glue gun);\nassemble all :)", "step_imgs": ["https://cdn.instructables.com/F74/YQWE/JS5CDL6R/F74YQWEJS5CDL6R.LARGE.jpg", "https://cdn.instructables.com/FU4/QFM6/JS5CDL7D/FU4QFM6JS5CDL7D.LARGE.jpg", "https://cdn.instructables.com/F7N/Q0U1/JS8UGKIQ/F7NQ0U1JS8UGKIQ.LARGE.jpg", "https://cdn.instructables.com/FOA/E2CG/JS5CDLB0/FOAE2CGJS5CDLB0.LARGE.jpg", "https://cdn.instructables.com/FGW/741D/JS5CDLAG/FGW741DJS5CDLAG.LARGE.jpg", "https://cdn.instructables.com/FVF/GRIG/JSPA9TFD/FVFGRIGJSPA9TFD.LARGE.jpg", "https://cdn.instructables.com/F4H/KJN8/JS5CDLK5/F4HKJN8JS5CDLK5.LARGE.jpg", "https://cdn.instructables.com/F70/7J3X/JS5CDLKX/F707J3XJS5CDLKX.LARGE.jpg", "https://cdn.instructables.com/FZ5/25N6/JS5CDLMB/FZ525N6JS5CDLMB.LARGE.jpg", "https://cdn.instructables.com/FGZ/LI5M/JS5CDLMD/FGZLI5MJS5CDLMD.LARGE.jpg", "https://cdn.instructables.com/FAX/JAB4/JS5CDLMM/FAXJAB4JS5CDLMM.LARGE.jpg", "https://cdn.instructables.com/FFV/419W/JS5CDLMO/FFV419WJS5CDLMO.LARGE.jpg", "https://cdn.instructables.com/FRV/NE1K/JS5CDLMQ/FRVNE1KJS5CDLMQ.LARGE.jpg", "https://cdn.instructables.com/FQY/KTLK/JS5CDLMU/FQYKTLKJS5CDLMU.LARGE.jpg", "https://cdn.instructables.com/FZP/YALZ/JS5CDLMY/FZPYALZJS5CDLMY.LARGE.jpg", "https://cdn.instructables.com/FPD/Y88M/JS5CDLNU/FPDY88MJS5CDLNU.LARGE.jpg", "https://cdn.instructables.com/FFC/EXPW/JS5CDLNV/FFCEXPWJS5CDLNV.LARGE.jpg", "https://cdn.instructables.com/FFW/QAGL/JSL39UYW/FFWQAGLJSL39UYW.LARGE.jpg"], "step_title": "Step 2: The Electronics"}, {"step": 3, "steps_text": "There are several ways for programming the ESP-01 board, take a look if you want to find more information and read instructables, such as:\nGetting Started With the ESP8266 ESP-01 - by JayconSystems;\nDefinitive Guide to Setting Up Your New ESP01 Module - by ZiyueP;\nESP8266 As a Microcontroller - by JayconSystems.\nMy way for flashing the ESP-01 is using an adapter with a PL2303 chip (USB to Serial converter), depicted in this instructable too Getting Started With Esp 8266 Esp-01 With Arduino IDE (by electronicGURU). Also to make the programming easier, I used a breadboard adapter like this and I connected it to the USB to Serial converter. You can see in the images the wiring between these two modules: 3.3v-RED, Ground-BLACK, RX from the converter to TX on adapter-PURPLE, TX from the converter to RX on adapter-GREY. On the adapter I soldered a switch (PROG) between GPIO0 and GND pins and a switch (RESET) between RST and GND pins.\nStep by step instructions:\ndownload and install the Arduino IDE;\ndownload the source for the Verbis word clock;\ninstall in Arduino IDE the ESP support libraries - more here;\ninsert the ESP-01 Board in the breadboard adapter and connect the USB to Serial converter to an USB port of the computer;\nopen in Files-Examples-ESP8266 the CheckFlashConfig sketch and then make the configuration options in TOOLS like in the image (you will have another COM port eventually);\nopen a serial monitor (TOOLS - SERIAL MONITOR), make the configs (Both NL&CR, 115200 baud) and push the RESET switch on the breadboard adapter;\nyou will see something like in the image above with the 'ready' word on the last line, it means the ESP Board is working and you can find on your phone a new WiFi Access Point;\nto put the ESP board in programming mode, gently push the PROG switch and keep pushing, then push and release the RESET switch, THEN(!) release the PROGRAM switch, in the SERIAL MONITOR you must see a garbled line after the ready line (see image);\nclick the UPLOAD button in the Arduino IDE, wait for the sketch to be compiled and uploaded, then verify the SERIAL MONITOR again, if you have a line with 'Flash Chip configuration ok' then the programming options in the Arduino IDE are good. If no, make the necessary changes;\nunzip the sources and open, with the Arduino IDE, the VerbisMain.ino file, put the ESP board in programming mode and upload the program, if everything is good you will see in the SERIAL MONITOR the word clock's initial configuration and a WiFi Access Point on your phone.\nThe programming of the ESP-01 board can be made before you solder any wire to the module (see step 2 - The Electronics) but can also be made when the soldering is already made (everything assembled in the electronics box). In this case remove the RED wire between the converter and the adapter (very important !!!) because you will use 3.3v from the stabilizer module, not from the USB to Serial Converter (see image).", "step_imgs": ["https://cdn.instructables.com/FR3/GQ8P/JSCG2U71/FR3GQ8PJSCG2U71.LARGE.jpg", "https://cdn.instructables.com/FOE/GADS/JSAOTE3J/FOEGADSJSAOTE3J.LARGE.jpg", "https://cdn.instructables.com/F42/GBP1/JSAOTE5R/F42GBP1JSAOTE5R.LARGE.jpg", "https://cdn.instructables.com/F9K/3ANL/JSAOT7LZ/F9K3ANLJSAOT7LZ.LARGE.jpg", "https://cdn.instructables.com/FSA/2HKE/JSAOT7LY/FSA2HKEJSAOT7LY.LARGE.jpg", "https://cdn.instructables.com/F21/YEYY/JSC1ZAC3/F21YEYYJSC1ZAC3.LARGE.jpg", "https://cdn.instructables.com/FQM/OQZ9/JSAOT7M0/FQMOQZ9JSAOT7M0.LARGE.jpg", "https://cdn.instructables.com/FJH/QH08/JSAOT7M1/FJHQH08JSAOT7M1.LARGE.jpg", "https://cdn.instructables.com/F6O/3XQ4/JSAOT7M4/F6O3XQ4JSAOT7M4.LARGE.jpg", "https://cdn.instructables.com/F80/L4QE/JSC1YSS9/F80L4QEJSC1YSS9.LARGE.jpg", "https://cdn.instructables.com/F7W/C1EY/JSCG2XMD/F7WC1EYJSCG2XMD.LARGE.jpg"], "step_title": "Step 3: The Software and Programming the ESP-01 Board"}, {"step": 4, "steps_text": "After correctly flashing the ESP-01 module, start the clock. On the display you will see an animation like bellow.\nYou will find a new WiFi Access Point on your phone called VERBIS and a serial (a bunch of numbers). You can connect to this Access Point, with no password, open a browser (Chrome is preferred) and go to http://192.168.4.1 page. (When the ESP-01 is in Access Point mode it will always have the IP 192.168.4.1 This IP is hardwired in the microcontroller's firmware).\nYou will see now the word clock's main menu. Go to the 'NETWORK CONFIGURATION' submenu and wait for the search for the surrounding routers to finish. Select your router's name from the list (in my case the 'mi' router), the name will be copied to the 'SSID' textbox, enter the password and push the 'SAVE' button. Wait a little bit and try to reconnect to the clock on the same IP (192.168.4.1). Select 'NETWORK INFORMATION' where you can find what IP the clock has gotten. Restart the clock (unplug and plug the power adapter) and you will see a pattern like bellow on the display.\nThe clock is trying to connect to the router and the ntp server. If there is connection with the ntp server, the word clock's internal time will synchronize with the NTP server's time and the corresponding words will appear on the display. If there is no connection, the pattern will continue to show. The clock will try to reconnect to the NTP server each minute until a successful connection.\nIf you have no router you can access the 'MANUAL TIME SETTING' submenu and enter the time in the corresponding text boxes. Also if the clock is connected to a router but it doesn't have a connection to the ntp server, you can use this submenu to set the time until a time synchronization. In this case, when the connection to the ntp server will occur, the time will synchronize automatically in the background.\nThe 'NTP SETTING' submenu options are pretty explanatory, I don't have too much to say about them...\nIf you access the 'DISPLAY SETTINGS' submenu you can change the two colors between which the transition occurs when the words are displayed. Also, you can change if the words 'IT IS' are displayed or not at the beginning of the time telling.", "step_imgs": ["https://cdn.instructables.com/F4T/Z63M/JSL39H0E/F4TZ63MJSL39H0E.LARGE.jpg", "https://cdn.instructables.com/FDQ/QPV0/JSCG4ZGN/FDQQPV0JSCG4ZGN.LARGE.jpg", "https://cdn.instructables.com/F7E/F426/JSCG4ZGO/F7EF426JSCG4ZGO.LARGE.jpg", "https://cdn.instructables.com/FTJ/J74D/JSCG4ZGQ/FTJJ74DJSCG4ZGQ.LARGE.jpg", "https://cdn.instructables.com/FH6/SHWR/JSCG4ZHK/FH6SHWRJSCG4ZHK.LARGE.jpg", "https://cdn.instructables.com/FVY/CEZ1/JSL39H09/FVYCEZ1JSL39H09.LARGE.jpg", "https://cdn.instructables.com/FHH/RWVY/JSCG4ZHL/FHHRWVYJSCG4ZHL.LARGE.jpg"], "step_title": "Step 4: Configuring and Using the Clock"}, {"step": 5, "steps_text": "What's next?\nAn alternate enclosure can be made using a wide wooden photo frame, you can see a rendering and an actual image above. The 15\u00b0 tilt is made with a small plexiglass support.\nThe electronics can be drastically simplified by using a WS2812 RGB LED Controller Module (in the image with the wide photo frame the clock is made with such a module). The box used in this case is also on Thinkercad. Of course, you will need an ESP-01 module for this approach.\nIf you have access to a laser cutter you can make your paper sheet by laser cutting a black sheet, use stencil fonts in this case.\nYou can make a VERBIS word clock also in other languages. I have made the letter layout and the programming for german, hungarian and romanian. Change in the first line of the source code the language (DE_clock, RO_clock or HU_clock). The printable layouts are attached too.\nBut why stop here? Print a paper sheet (empty sheet in the image above) and you can make a digital clock, very similar to this Full Binary Clock; you can make a Fibonacci clock like in the instructable The Fibonacci Clock but also a digital clock (with the hours and minutes colors changing alternatively similar to VERBIS word clock).\nAlso this very cute clock Amazing Binary Clock in a LED Matrix deserves a try.\nOf course you need to modify the ESP-01 firmware but I think it is not so difficult if you already have a template you can rely on.\nBut many many other projects are possible with this cheap and easy to build design.", "step_imgs": ["https://cdn.instructables.com/FNX/78KS/JSL39YGA/FNX78KSJSL39YGA.LARGE.jpg", "https://cdn.instructables.com/FJQ/08LX/JSL39X9L/FJQ08LXJSL39X9L.LARGE.jpg", "https://cdn.instructables.com/FUU/FGPD/JSL39UYV/FUUFGPDJSL39UYV.LARGE.jpg", "https://cdn.instructables.com/FJ4/26QB/JSL39W5H/FJ426QBJSL39W5H.LARGE.jpg", "https://cdn.instructables.com/FJ0/1JUU/JSL39VZI/FJ01JUUJSL39VZI.LARGE.jpg", "https://cdn.instructables.com/FN2/O0WM/JSL39W6M/FN2O0WMJSL39W6M.LARGE.jpg", "https://cdn.instructables.com/FCA/PGWR/JSL39W32/FCAPGWRJSL39W32.LARGE.jpg"], "step_title": "Step 5: Final Thoughts"}], "channel": "Clocks"}, {"category": "Technology", "description": "My Dear Makers,\nI embarked on an ambitious project last month: the creation of a homemade hand-cranked motion picture camera from scratch. I also endeavored to develop the film myself using household chemicals and further to reverse the film negative so that it could be projected and viewed!\nI'm still working out the bugs in my processes so you will be learning with me over the next few weeks. It's exciting to be in the same shoes as the first motion picture pioneers of the early 20th century. I've loaded a couple clips that are proof of concept. My camera can hold 100 feet of 35mm film. Most tests have been shorter runs of film. Clearer, better results are completely possible with experimentation!\nFor this project, I used a 3D printer and a laser cutting machine but one could complete it using hand tools and careful measurements, too. I admit, although the idea has been rattling in my brain meat for years, it was not until I found a book called The Boy Mechanic (published in 1915) that I found a basic enough design that would work. I have included the photos from this book to reference as well.\nSo let's get started!", "title": "Working Hand Crank 35mm Motion Picture Camera", "url": "https://www.instructables.com/id/Hand-Crank-Motion-Picture-Camera/", "steps": [{"step": 1, "steps_text": "The materials list can vary from maker to maker. There are certainly substitutions allowed here but I will tell you what I used and later I plan to provide my source files for 3D printed parts and laser cut parts.\na) $30, Several sheets 4.8mm thick Baltic Birch Wood (Ganahl Lumber, Home Depot)\nb) $5, A couple meters of 8mm thick dowel rod (You'll have to sand it a little sometimes) (Ganahl, Home Depot)\nc) $20, 10+, 16mm outer diameter, 8mm inner diameter ball bearings.(Amazon)\nd) $20, Polyurethane belt material for pulley systems. (amazon in various thicknesses and lengths)\ne) $10, Black cotton velvet and black felt.\nf) $15, an enlarger lens with a 3.5 inch focal length and F-Stop adjustments (ebay, vintage stock works fine)\ng) $35, Thick and Medium CA glue and Accelerator (this is more preference but I love this stuff.)\nh) $40, 100' roll of 35mm film, 100 ISO or 50 ISO (available from B & H Photo, Amazon, Ultrafine Xtreme)\ni) $20--$100, Film Developer and Reversal Chemicals (I use all home brewed film chemicals and I may need to publish another instructable for this)", "step_imgs": [], "step_title": "Step 1: Materials and Cost"}, {"step": 2, "steps_text": "Filming motion is a complicated venture. The problem is as follows: how do we expose film, then cover the film, and move it out of the way so another piece of the film can be exposed? Not only that, but the film must remain absolutely still while it is being exposed to light. This process being done in rapid succession is what a motion picture is made from. It is literally a series of still photographs taken in rapid succession. There are other factors, such as flicker rate and frame rate that we can come to later.\nFor now, remember that the device we are building moves the film, holds it still for exposure, covers it, then moves it forward. It does all of this with 1 moving part: The Cylinder Shutter.", "step_imgs": ["https://cdn.instructables.com/FZR/ELJF/JSPAALEJ/FZRELJFJSPAALEJ.LARGE.jpg", "https://cdn.instructables.com/FZP/TU1I/JSPAALG5/FZPTU1IJSPAALG5.LARGE.jpg", "https://cdn.instructables.com/FYN/PLIQ/JSPAALEI/FYNPLIQJSPAALEI.LARGE.jpg"], "step_title": "Step 2: The Source Material and Basic Concepts"}, {"step": 3, "steps_text": "This is the heart of the camera. It's like a Swiss clock, in a way, because of it's simplicity and multi-tasking function. I used a 3D printer to make it but you could just as easily do this with hand tools and dowel rod. The dimensions are laid out in the antique book page I scanned so I will leave that up to you.\nThe cylinder has some off-set metal prongs that stick out a few millimeters. These are responsible for advancing the film. Their proper placement ensures that the cylinder rotates freely while the film stays completely still to be exposed. The cylinder also rotates freely against the film as it covers the film so no light hits it. Then, the teeth grip the film and advance it. This is the process that makes capturing motion possible with 1 moving part.\nLet's get a body for this heart...", "step_imgs": ["https://cdn.instructables.com/FJF/VJX7/JSPAAM5H/FJFVJX7JSPAAM5H.LARGE.jpg", "https://cdn.instructables.com/F8J/HB9L/JSPAALSF/F8JHB9LJSPAALSF.LARGE.jpg", "https://cdn.instructables.com/FYK/494K/JSPAALQ3/FYK494KJSPAALQ3.LARGE.jpg", "https://cdn.instructables.com/FRE/LQZE/JSPAALQ0/FRELQZEJSPAALQ0.LARGE.jpg", "https://cdn.instructables.com/FNK/WH54/JSPAALQ2/FNKWH54JSPAALQ2.LARGE.jpg", "https://cdn.instructables.com/FHL/WUDD/JSPAALQ4/FHLWUDDJSPAALQ4.LARGE.jpg"], "step_title": "Step 3: The Cylinder Shutter"}, {"step": 4, "steps_text": "Body General\nThe basic design follows what was outlined in the 100 year old instructions. I've made mine with 4.8mm thick wood that was cut in a laser bed. I also integrated 16mmx8mm ball bearings so that the rotation of the pulley system would be smooth and prevent damage to surrounding wood from pressure. The cuts that accept the ball bearings are slightly smaller so they pressure fit. I also use a little glue because I was not hugged enough as a child.\nLight Leaks\nLight leaks are common and easy to take care of from the inside of the camera. Glue strips of black felt wherever there is a leaky joint. You'll note from my design I use sliding doors. This is an easy way to ensure that an access port is light tight. After all, light doesn't turn around corners, unless it is in close proximity at near right angles to a black hole or other gravitational anomaly.\nThe Shutter's Home\nThe cylinder shutter's home is noted in the second photo, object C. It lives in that triangular room. That's why I made an access port on one side of the camera--in case I need to get in there again. The position is pretty important. My designs are precise and the result of hours of experimentation. The trouble was, the cylinder needs to be far enough away to let film slide without the engaged teeth and close enough for the teeth to engage properly without ripping the film. It was maddeningly. You could alternatively hit yourself in the face with a plank of wood. Which brings us to the pressure plate.\nThe Pressure Plate\nThis is what keeps the film from moving between frames of motion. You'll note it in the diagram as E and K. You use strips of velvet here. It will take some experimentation. The back door plate needs to be carved or dremeled out so that the teeth don't hit it when the cylinder turns. Sanding and placing strips of velvet over and over is a great way to find yourself.", "step_imgs": ["https://cdn.instructables.com/FKB/XBIC/JSPAAP4N/FKBXBICJSPAAP4N.LARGE.jpg", "https://cdn.instructables.com/FBL/3MTJ/JSPAAOWF/FBL3MTJJSPAAOWF.LARGE.jpg", "https://cdn.instructables.com/FLX/EI29/JSPAAOX9/FLXEI29JSPAAOX9.LARGE.jpg", "https://cdn.instructables.com/FR3/S85R/JSPAAOX7/FR3S85RJSPAAOX7.LARGE.jpg", "https://cdn.instructables.com/FQZ/H13C/JSPAAOX6/FQZH13CJSPAAOX6.LARGE.jpg", "https://cdn.instructables.com/FYJ/YV3U/JSPAAOX8/FYJYV3UJSPAAOX8.LARGE.jpg"], "step_title": "Step 4: The Body of the Camera"}, {"step": 5, "steps_text": "The pulley system is designed to facilitate the rapid movement of the cylinder shutter without cranking wildly like a lunatic. The crossover you see is because the pulley won't crank in the proper direction without crossing the belt. It looks cool too. You'll need a few drops of silicone lubricant so the belt will easily slide on itself.\nThe smaller pulley wheel is about 3cm while like larger one is closer to 9cm. This gives approx. 3:1 ratio. Although a greater ratio might be better, it would not fit in the design without a more radical change to the dimensions of the box. No time for that!\nThe belt is a 'polyurethane belt' material available on amazon. The thickness you'll need will vary based on your wood thickness. I used 3/16\" It's a great material for pulley systems because it can be made in any size and melted together. It's stretchy enough to keep tension but not enough to become loose with use.", "step_imgs": ["https://cdn.instructables.com/F4H/H4UM/JSPAAUIC/F4HH4UMJSPAAUIC.LARGE.jpg", "https://cdn.instructables.com/F3K/4CSP/JSPAAUHB/F3K4CSPJSPAAUHB.LARGE.jpg"], "step_title": "Step 5: The Pulley System"}, {"step": 6, "steps_text": "The lens I used was meant for an enlarger. I only used it because I knew it had a 3.5\" focal length. This is important because the front of the camera is 3.5\" from the back. If the focal length were wrong, the film would get fuzzy images.\nI think you could probably use any kind of lens with f-stop adjustments as long as it has the proper focal length. Alternatively, you could find a lens and adjust the size of the camera to match its focal length. I just really liked how this one looked.\nI will tell you though, it has an extreme telephoto effect. You have to stand about 6 meters away to get a whole body on film. If you know a little more about lenses and focal length, feel free to comment!", "step_imgs": ["https://cdn.instructables.com/FX6/8AU2/JSPAA6Z4/FX68AU2JSPAA6Z4.LARGE.jpg", "https://cdn.instructables.com/FNE/YZ6U/JSPAA6JC/FNEYZ6UJSPAA6JC.LARGE.jpg"], "step_title": "Step 6: The Lens"}, {"step": 7, "steps_text": "Developing Film\nI created a separate instructable for film developing. Check it out! :)\nConcluding Notes\nThis was a remarkably involved and technical project. It was intensely fun. I have not gone over every little detail here and I'm still working on the camera myself! (such as the take-up roll in the bottom part of the camera. There is another pulley I'm installing for taking up the loose film that's been exposed). There is definitely potential here and I believe I will very soon achieve a 1 minute movie with remarkable clarity.", "step_imgs": [], "step_title": "Step 7: Conclusion, Files, and to Be Continued!"}, {"step": 8, "steps_text": "Okay, so you can't crunch 100' of film in the bottom half of the camera. It's a tricky bit to design because the movement of the film is intermittent and you don't want the take-up reel to yank on the film. My solution was to over-engineer the take-up reel to under-perform. The result is a loose roll of film that stays out of the way during filming. That's really all that is needed.\nThere can be some slippage or tightening depending on how you make the take-up reel. I encourage you to experiment. Knowing how this very basic motion picture camera works insside and out allows you to become mechanically creative and to come up with your own solutions. I've found that a loose belt is helpful so it doesn't have enough force to yank on the film even if the ratio isn't perfect.\nStay curious.", "step_imgs": ["https://cdn.instructables.com/FQW/UNMF/JSSUP1FR/FQWUNMFJSSUP1FR.LARGE.jpg", "https://cdn.instructables.com/FQ9/8Q41/JSSUP1FO/FQ98Q41JSSUP1FO.LARGE.jpg", "https://cdn.instructables.com/FU3/XXFH/JSSUP1FL/FU3XXFHJSSUP1FL.LARGE.jpg"], "step_title": "Step 8: The Take-Up Reel (continuation 03/04/2019)"}], "channel": "Photography"}, {"category": "Technology", "description": "Hi makers, we are here again with a beautiful and stylish lamp Project. VORONOI HEART LAMP. In this project, we benefited from epoxy resin material and 3D printer.", "title": "VORONOI HEART LAMP", "url": "https://www.instructables.com/id/VORONOI-HEART-LAMP/", "steps": [{"step": 1, "steps_text": "In mathematics, a Voronoi diagram is a partitioning of a plane into regions based on distance to points in a specific subset of the plane. That set of points (called seeds, sites, or generators) is specified beforehand, and for each seed there is a corresponding region consisting of all points closer to that seed than to any other. These regions are called Voronoi cells. The Voronoi diagram of a set of points is dual to its Delaunay triangulation.", "step_imgs": ["https://cdn.instructables.com/FP6/QDTG/JSL39U6Q/FP6QDTGJSL39U6Q.LARGE.jpg"], "step_title": "Step 1: What Is VORONOI ?"}, {"step": 2, "steps_text": "Epoxy resin is known for its strong adhesive qualities, making it a versatile product in many industries. It offers resistance to heat and chemical applications, making it an ideal product for anyone needing a strong hold under pressure. Epoxy resin is also a durable product which can be used with various materials, including: wood, fabric, glass, china or metal.\nSo we think about Voronoi heart. We designed it as a lamp. There is no more materials. You will find them easly. In this project, we are using just Arduino Nano, a resistor and a red led. That\u2019s it. After you have a Voronoi heart lamp, use it yourself or give it to your loved ones. We bet they'll certainly like it.", "step_imgs": ["https://cdn.instructables.com/F65/41DY/JSL39U78/F6541DYJSL39U78.LARGE.jpg", "https://cdn.instructables.com/FP4/5KYY/JSL39U79/FP45KYYJSL39U79.LARGE.jpg", "https://cdn.instructables.com/FJH/213W/JSL39U7A/FJH213WJSL39U7A.LARGE.jpg"], "step_title": "Step 2: What Is EPOXY ?"}, {"step": 3, "steps_text": "We need some electonic and printable materials . As you can see in pics;\n- Arduino Nano\n- Red Led\n- Voronoi Heart\n- Boxes\n- Epoxy Resin + Hardener", "step_imgs": ["https://cdn.instructables.com/FG8/E5NI/JSL39U88/FG8E5NIJSL39U88.LARGE.jpg", "https://cdn.instructables.com/FDW/CADZ/JSL39U84/FDWCADZJSL39U84.LARGE.jpg", "https://cdn.instructables.com/F2B/LL2R/JSL39U83/F2BLL2RJSL39U83.LARGE.jpg", "https://cdn.instructables.com/FAS/TVNR/JSL39U86/FASTVNRJSL39U86.LARGE.jpg", "https://cdn.instructables.com/FGR/X6FQ/JSL39U87/FGRX6FQJSL39U87.LARGE.jpg", "https://cdn.instructables.com/FFY/9BS3/JSL39U85/FFY9BS3JSL39U85.LARGE.jpg"], "step_title": "Step 3: Materials"}, {"step": 4, "steps_text": "Firstly, we are starting with epoxy. we need resin and hardener. we have 100%. 20% Hardener + 80% resin.", "step_imgs": ["https://cdn.instructables.com/F3Q/19K7/JSL39UH0/F3Q19K7JSL39UH0.LARGE.jpg", "https://cdn.instructables.com/FGO/LS9Y/JSL39UH3/FGOLS9YJSL39UH3.LARGE.jpg", "https://cdn.instructables.com/FHF/JKPJ/JSL39UHU/FHFJKPJJSL39UHU.LARGE.jpg", "https://cdn.instructables.com/FQB/VVXL/JSL39UHV/FQBVVXLJSL39UHV.LARGE.jpg", "https://cdn.instructables.com/FH3/AXGS/JSL39UHW/FH3AXGSJSL39UHW.LARGE.jpg"], "step_title": "Step 4: Making Epoxy"}, {"step": 5, "steps_text": "We are soldering the led legs. and than we put it into the voronoi heart. as you can see pics.", "step_imgs": ["https://cdn.instructables.com/FWV/U291/JSL39VR3/FWVU291JSL39VR3.LARGE.jpg", "https://cdn.instructables.com/FB4/06QA/JSL39VRF/FB406QAJSL39VRF.LARGE.jpg", "https://cdn.instructables.com/FEG/F1H6/JSL39VRL/FEGF1H6JSL39VRL.LARGE.jpg", "https://cdn.instructables.com/FH5/X517/JSL39VSK/FH5X517JSL39VSK.LARGE.jpg", "https://cdn.instructables.com/FN9/H4O8/JSL39VSQ/FN9H4O8JSL39VSQ.LARGE.jpg"], "step_title": "Step 5: Assemble Voronoi Heart and Led"}, {"step": 6, "steps_text": "now we have voronoi heart with led. We are putting it in a box. This box will be a mold. Than we will split them for epoxy.\nNOT: please wait min 2 days for drying epoxy. This is important", "step_imgs": ["https://cdn.instructables.com/FDY/QVA3/JSL39W14/FDYQVA3JSL39W14.LARGE.jpg", "https://cdn.instructables.com/FRG/MKHH/JSL39W1R/FRGMKHHJSL39W1R.LARGE.jpg", "https://cdn.instructables.com/FIN/P7RO/JSL39W1Y/FINP7ROJSL39W1Y.LARGE.jpg", "https://cdn.instructables.com/FK3/WI4O/JSL39W47/FK3WI4OJSL39W47.LARGE.jpg", "https://cdn.instructables.com/FO4/RUME/JSL39W4C/FO4RUMEJSL39W4C.LARGE.jpg", "https://cdn.instructables.com/FKQ/AXXP/JSL39W2D/FKQAXXPJSL39W2D.LARGE.jpg", "https://cdn.instructables.com/FRE/M6SB/JSL39W30/FREM6SBJSL39W30.LARGE.jpg"], "step_title": "Step 6: Filling Epoxy"}, {"step": 7, "steps_text": "we are splitting and sanding now. As you can see in pics.", "step_imgs": ["https://cdn.instructables.com/FZW/9IXU/JSL39WQZ/FZW9IXUJSL39WQZ.LARGE.jpg", "https://cdn.instructables.com/FMW/A3M6/JSL39WR9/FMWA3M6JSL39WR9.LARGE.jpg", "https://cdn.instructables.com/FTT/D9P8/JSL39WRA/FTTD9P8JSL39WRA.LARGE.jpg", "https://cdn.instructables.com/F6L/YIPV/JSL39WRI/F6LYIPVJSL39WRI.LARGE.jpg", "https://cdn.instructables.com/FUA/W033/JSL39WRM/FUAW033JSL39WRM.LARGE.jpg", "https://cdn.instructables.com/FFL/MAIC/JSL39WRO/FFLMAICJSL39WRO.LARGE.jpg", "https://cdn.instructables.com/FJJ/46QE/JSL39WRS/FJJ46QEJSL39WRS.LARGE.jpg", "https://cdn.instructables.com/FVM/F795/JSL39WS0/FVMF795JSL39WS0.LARGE.jpg", "https://cdn.instructables.com/FZP/ZUBL/JSL39WSZ/FZPZUBLJSL39WSZ.LARGE.jpg"], "step_title": "Step 7: Split and Sand"}, {"step": 8, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/F1B/5281/JSL39WZE/F1B5281JSL39WZE.LARGE.jpg", "https://cdn.instructables.com/F7O/Q6H3/JSL39X03/F7OQ6H3JSL39X03.LARGE.jpg", "https://cdn.instructables.com/F5M/8T01/JSL39X04/F5M8T01JSL39X04.LARGE.jpg", "https://cdn.instructables.com/FO3/3732/JSL39X07/FO33732JSL39X07.LARGE.jpg", "https://cdn.instructables.com/FPK/FLIV/JSL39X08/FPKFLIVJSL39X08.LARGE.jpg", "https://cdn.instructables.com/F35/9Z4O/JSL39X09/F359Z4OJSL39X09.LARGE.jpg"], "step_title": "Step 8: Again Epoxy"}, {"step": 9, "steps_text": "Connection is simple. Just need a few materials.", "step_imgs": ["https://cdn.instructables.com/FKK/FA3A/JSL39X98/FKKFA3AJSL39X98.LARGE.jpg", "https://cdn.instructables.com/FQB/J0XT/JSL39X99/FQBJ0XTJSL39X99.LARGE.jpg", "https://cdn.instructables.com/FVH/YNZO/JSL39X9B/FVHYNZOJSL39X9B.LARGE.jpg"], "step_title": "Step 9: Electronic Connections"}, {"step": 10, "steps_text": "And results.\nThanks For Patience...", "step_imgs": ["https://cdn.instructables.com/F60/85HC/JSL39XJN/F6085HCJSL39XJN.LARGE.jpg", "https://cdn.instructables.com/FD8/8843/JSL39XKS/FD88843JSL39XKS.LARGE.jpg", "https://cdn.instructables.com/FNP/JHK5/JSL39XLY/FNPJHK5JSL39XLY.LARGE.jpg"], "step_title": "Step 10: Results"}, {"step": 11, "steps_text": "Needed Files in here...", "step_imgs": [], "step_title": "Step 11: Files"}, {"step": 12, "steps_text": "https://www.instructables.com/id/NIGHT-LAMP-USING-ARDUINO-EPOXY-RESIN/", "step_imgs": [], "step_title": "Step 12: Check Other Project"}], "channel": "Arduino"}, {"category": "Technology", "description": "To get started with Arduino, you'll need some basics. In this tutorial, we'll go beyond a little blinky light and teach you about:\nVariables\nInput and Output pins\nSensors and reading data\nMapping results\nFunctions\nIn another tutorial, I'll cover classes and why we might use them.\nBut, we might still make a little light blink... Just because... Hello, World! Ok. Bad joke.\nThis will be fairly simple, but it will progressively get more difficult. I suggest breaking it in to parts and just going through one section at a time.\nTo do this, you'll need a Tinkercad account (open www.tinkercad.com) and use Google to sign up (makes things easier) or just sign up with your email. Let's get started!\nI'll embed the circuit design here for reference. It is basic, but it isn't meant to be about electronics design but about interacting with various components using code features in Arduino.", "title": "Arduino 101", "url": "https://www.instructables.com/id/Arduino-101/", "steps": [{"step": 1, "steps_text": "Let's setup the environment. Throughout this tutorial, we wont need much other than an Arduino. Check out the pictures above, but you'll need to:\nUse the drop-down menu to change to All components.\nType Arduino in the search and put an Arduino board by click-dragging on to the canvas\nOpen the Code menu and change to Text (you can clear the warning that appears)\nClear all the code, leaving the void setup() and void loop() functions in place (see the image for what the code panel should look like)", "step_imgs": ["https://cdn.instructables.com/FUZ/K3W6/JSITPXDL/FUZK3W6JSITPXDL.LARGE.jpg", "https://cdn.instructables.com/F4I/0IO8/JSITPXB0/F4I0IO8JSITPXB0.LARGE.jpg", "https://cdn.instructables.com/FGR/UUAV/JSITPXCB/FGRUUAVJSITPXCB.LARGE.jpg", "https://cdn.instructables.com/FKE/MK8H/JSITPXB1/FKEMK8HJSITPXB1.LARGE.jpg", "https://cdn.instructables.com/FS2/A8WS/JSITPXEW/FS2A8WSJSITPXEW.LARGE.jpg"], "step_title": "Step 1: Environment Setup"}, {"step": 2, "steps_text": "Let's talk conventions.\nA convention is something all programmers do to keep their code clean and organised. You can adopt a certain convention that is published, or you can follow a general guide and define your own. If you're starting out, it is best to have good code from the outset. If you've been programming a bit and have poor code management, then now is the time!\nI suggest reading this: http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#main. These C++ core guidelines will help you understand more.\nThese are my (very basic) conventions.\nCamel case for writing variable names - First word lower case, remainder with a first letter capital, because... camels.\nint someVariableName;\n// I find this better than:\nint some_variable_name;\nMinimise spaces between symbols but maintain legibility\nint someVariable = 9;\n// Rather than\nint someVariable=9\nIn my opinion, the second is much less readable.\nDeclare one, maybe two variables maximum on one line. Never two separate instructions on a line\nint someVar, anotherVar;\n\n// Gross. Debugging, please?!\nint someVar; someVar = someVar - 10;\n\n// Much clearer\nint someVar;\nsomeVar = someVar - 10;\nUse constants where possible/beneficial\nCode to describe functions and where necessary, but clearer code is better\nFunctions with capitals for first letter of all words\nvoid MyGreatFunction();\n// It's clear this is different to a variable in a call, now\n\nint someVar = MyGreatFunction();\nClear indenting at all times using 4 spaces or 1 tab.\nvoid MyGreatFunction() {\n int someVar = 10;\n}\n\n// Rather than this...\n\nvoid MyGreatFunction()\n{\nint someVar = 10;\n}\n// It's more compact, too!\nThis is be no means exhaustive, but it gives most of the basics for what we need. Stick to your own styles and you'll be able to create great code!", "step_imgs": ["https://cdn.instructables.com/FBL/CTTI/JSL33ZY1/FBLCTTIJSL33ZY1.LARGE.jpg"], "step_title": "Step 2: Arduino Basics"}, {"step": 3, "steps_text": "If you haven't seen an Arduino before, or aren't familiar with it, let's look at the characteristics of the board and features of the environment.\nFirst, the Arduino is a prototyping board with a microprocessor attached that is capable of controlling inputs, outputs and talking to other devices. It uses C++ as a core programming language. Take a look at the image. There are:\nDigital pins for logic input and output. This can be a simple True / False, or it can be used as an analog pin with a little code. You can also attach lights and other devices that can be turned on and off with 5v power. We'll use these for a number of things. You can extend these with other devices, too.\nAnalog pins are read/write pins too, but they are not digital and don't provide a logic output or input. These are good for resistive devices like temperature or light sensors.\nPower and ground - these are provided so you can route power to a device without using up a digital pin set to high. We often use a breakout board to extend these pins as they are very useful and easily extended\nThat's the board. For the code, we have two critical functions. Let's look at these.\nvoid setup() {\n}\nThis function runs once every time the Arduino loads, like when you plug it in to a USB outlet or you connect a battery. It only runs once and cannot be called (without potential problems).\nvoid loop() {\n}\nThe loop runs endlessly after the setup function completes, and it will not halt unless the board is unplugged, you accidentally crash the loop or exit it prematurely.\nWhenever you start your code, you should delete everything in the Arduino IDE (an Integrated Development Environment) or in Tinkercad. Often, these programs put stuff in there to show you where to start, but it can get in the way, so clear it and that way you won't run in to issues that aren't yours.", "step_imgs": ["https://cdn.instructables.com/FLW/ZHSU/JSL33ZXB/FLWZHSUJSL33ZXB.LARGE.jpg"], "step_title": "Step 3: Characteristics & Features"}, {"step": 4, "steps_text": "A function is a piece of code that runs when we call it. They usually provide a return value, but in some cases, no value. We know this because the function starts with void. This means that compiler won't expect a return value at the end of the function. If I was to write a function like this -\nbool myFunction(){\n // do something\n return someBooleanValue;\n} \nThen the function would be required to return a value of either true or false. Normally, in the loop() function, we do all the work we need to do. We can extract parts of this work into other functions, or we can create our own classes that help us attach objects we can interact with. We'll do more in another tutorial, though!", "step_imgs": [], "step_title": "Step 4: Functions"}, {"step": 5, "steps_text": "The images above capture declaration of variables on the global scope. Wait, what?!\nThe global scope is like the root of the program. It's a space where all functions can access your variables. This is good and bad. Sometimes, it can cause conflicts and sometimes, it can help functions communicate easily. Generally, you would declare variables here that need to be declared once and used many times. Try and only access/change/update them in one location, though. The idea is that if multiple functions are updating the same variable, then you might have an unexpected result or code that is really hard to follow, but we can get to that when we discuss functions. Let's look at the code.\nint onBoardLed = 13;\nIn this first line of code, we are doing three things. First, we name a variable onBoardLed. A variable is a bucket, and we can put stuff into that bucket as long as it is the same type. Array's are a little different, but that's for later. The second thing we are doing is using an assignment symbol. The equals sign indicates the variable will hold that value. In this case, we are assigning an integer - a whole number. Hence, at the start of the line we typed int. That makes this type an integer type variable. We can also use:\nfloat (decimal number, 7 digits of precision)\ndouble (decimal number, 15 digits of precision)\nbool (true/false, 0/1)\nchar\nThese are the main ones we will use in Arduino. For the time being, it's unlikely we will even use an Array, but we'll still cover them later.\nWhen assigning a variable, remember that the value of a variable can be changed. So the following is valid:\nint onBoardLed = 13;\nonBoardLed = 12;\nThis might have unexpected results. Let's look at a better example.\nconst int onBoardLed = 13;\nint someInteger = 0;\n\nvoid SomeFunction() {\n onBoardLed = 9;\n someInteger = 9;\n}\nIn this example, I assigned the onBoardLed to a const int - a constant integer. This is no longer a variable but a constant, which means it cannot change. The first line inside SomeFunction would fail, because you're trying to assign a value to a constant. Try it in Tinkercad! Type the code in and click Start Simulation. You'll see the compiler will throw an error.\nDelete the code from Tinkercad you typed in and go back to the two basic functions in the image above. You can re-type the constant for onBoardLed. You should have this:\nconst int onBoardLed = 13;\n\nvoid setup() {\n}\n\nvoid loop() {\n}\nThe other place we can assign variables in within the local scope, which is within a function. If you do that, the variable is only available within that function and not by another. Let's see an example.\n// A global variable\nint myVar = 10;\n\nvoid SomeFunction() {\n // A local variable\n int fooVariable = 15;\n}\n\nvoid anotherFunction() {\n // If I tried to reference fooVariable here, the code would fail\n fooVariable = 5;\n\n // But I can reference myVar\n myVar = 5;\n}\nYou'll notice the errors created (see fourth image for the error).\nThe general principle is:\nIf you want to declare variables, do so globally if you know you'll need to access them in a number of functions. For Arduino, we'll declare variables for pins and some other reference points we don't want constantly updated or reset. In the next step, we'll do a practical example of this.\nDeclare variables you're happy to destroy locally - sometimes we don't need to keep track of every variable, so we can 'lose' them each time the program loops.\nSo, that's variables. Let's do a practical example on the Arduino.", "step_imgs": ["https://cdn.instructables.com/FEH/L676/JSKOQPPV/FEHL676JSKOQPPV.LARGE.jpg", "https://cdn.instructables.com/FQ2/WS0R/JSKOQPHF/FQ2WS0RJSKOQPHF.LARGE.jpg", "https://cdn.instructables.com/FGT/EP2U/JSKOQPGZ/FGTEP2UJSKOQPGZ.LARGE.jpg", "https://cdn.instructables.com/FTL/Z5JN/JSKOROIN/FTLZ5JNJSKOROIN.LARGE.jpg"], "step_title": "Step 5: Variables"}, {"step": 6, "steps_text": "Ok, let's look at a practical example. First, the code.\nYou started out with the base code:\nvoid setup() {\n}\n\nvoid loop() {\n}\nLet's do a blinky light, because we have to start somewhere...\nFirst, assign a variable with the value of the on board LED, which is on pin 13.\nconst int onBoardLed = 13;\nThat should go above the setup() function. That puts it on the global scope. Note, I made it constant so I can't reassign it somewhere later by accident.\nNow, let's setup the pin.\nconst int onBoardLed = 13;\nvoid setup() {\n pinMode(onBoardLed, OUTPUT);\n}\nInside the setup() function, I make a call to a function called pinMode(). This function takes two arguments minimum, the variable pin value (which we assigned to onBoardLed) and the mode of the pin, which can be either INPUT or OUTPUT. This must be in capitals because it is a constant value in the Arduino library and is defined as such. We are going to use it as an OUTPUT pin.\nNext, type the code that will make the light blink, once per second.\nconst int onBoardLed = 13;\n\nvoid setup() {\n pinMode(onBoardLed, OUTPUT);\n}\n\nvoid loop() {\n // Turn the light on and wait one second\n digitalWrite(onBoardLed, HIGH);\n delay(1000);\n\n // Turn the light off and wait one second\n digitalWrite(onBoardLed, LOW);\n delay(1000);\n}\nIf you write this code into the Tinkercad Code editor, you should have something similar to the image above.\nLet's go through the code.\nYou know how to do variables and constants, so I won't rehash that. The loop() function contains two new functions.\ndigitalWrite(onBoardLed, HIGH);\n// And\ndelay(1000);\nThe first is a function, digitalWrite() that takes two arguments. This is where we use digital pins. The first argument is a value that refers to a pin on the board, usually a digital pin. Then, it takes either HIGH or LOW to set the status of the pin, which is essentially ON or OFF. This is the logic of the pin. For this scenario, this is how we use the pin.\nThe second is the delay() function, which literally pauses the loop for the number of milliseconds defined as the single argument the function expects. You can set this to any number of milliseconds. Go ahead and try it! What happens to the LED on the board?\nIf everything worked as planned, you'll have a faint but blinking light on the board. Well done! On to the next concept...!", "step_imgs": ["https://cdn.instructables.com/F0J/ZM2X/JSL340W5/F0JZM2XJSL340W5.LARGE.jpg"], "step_title": "Step 6: Practical Example With Variables"}, {"step": 7, "steps_text": "Let's talk about input and output pins and complete three examples or reading and writing analog and writing digital pins. You wrote to a digital pin in the last step, so we won't rehash that one. Otherwise, we'll break this in to two steps, one for analog and one for digital. Let's get started!\nFor this step, go to Tinkercad and use the same circuit we have been working on. You'll need to access the components panel (on the right, where we added the Arduino from) and add three items:\nPotentiometer\nSlideswitch\nLED (any colour is fine - you can change it when clicked)\nTwo resistors, set to 150\u03a9 (read below on how to do this)\nTwo resistors, set to 10K\u03a9\nIn the second image you'll see I've clicked the resistor and changed its value to 150 Ohms. I won't go too much into how we determine resistance because that's another conversation all together. Essentially, you need to solve for the total supply voltage less the forward voltage of the LED (it's voltage requirement), divided by the forward current (milliamp requirements) of the LED. It looks like this (where I is impedance / current):\nR = (Vs - Vf) / If\nSo in our case it is:\nR = (5 - 2.2) / 20\nR = 0.14 K\u03a9 or 140\u03a9\nTinkercad errs on the side of caution and alerts you at 140\u03a9 that your LED will burn out quickly. I'm not 100% sure what their settings are for forward voltage so I dial it up to 150\u03a9 to get rid of the warning. Either way, it'll work (it's just a sim, after all).\nIn real circuits, I usually use a little over anyway just to protect the circuit, so take from that what you will.", "step_imgs": ["https://cdn.instructables.com/FZM/AG73/JSPA8NBE/FZMAG73JSPA8NBE.LARGE.jpg", "https://cdn.instructables.com/F8B/GGZ7/JSPA893X/F8BGGZ7JSPA893X.LARGE.jpg"], "step_title": "Step 7: Input and Output Pins"}, {"step": 8, "steps_text": "Digital read is diverse and the way you interect with it depends entirely on the device you've plugged in. We're going to use a slideswitch and read the value of the switch on two pins, using digitalRead(). We'll then use our previous experience with digitalWrite() to turn on one of two LEDs. Let's wire it up!\nCheck out the image above. Search for and add a Breadboard Small from the Components panel. Place it over the Arduino. This won't connect it but it makes it easier for prototyping. We need to connect wires between the Arduino and the components. Let's start with the slide switch.\nPlace the slide switch into the breadboard. Take a look at images 2 and 3. Remember, the dots on a breadboard are connected vertically, but the channel in the middle disconnects the top block from the bottom. We'll use this gap later in the tutorial. The dots are not connected horizontally, so you need to make sure you connect all devices across the columns. Place the slideswitch in the same orientation as per image 3.\nWiring up\nTo wire up, connect the left and right columns to digital pins 2 and 3. Then connect the middle wire to ground (GND) on the board. Colour the wires green (or whatever you like other than red or black) for the connections to digital and black to GND. Do this by clicking the wire, then selecting the colour.\nAdd the 10K\u03a9 resistors from the same column of the outer pins to a spot where they can be easily routed to GND. This makes sure they go to ground when the switch is turned off.\nGreat! Let's do the code.", "step_imgs": ["https://cdn.instructables.com/FEE/YD2S/JSPA8NO5/FEEYD2SJSPA8NO5.LARGE.jpg", "https://cdn.instructables.com/FOK/N92Z/JSPA95AS/FOKN92ZJSPA95AS.LARGE.jpg", "https://cdn.instructables.com/FJM/S3OM/JSPA963O/FJMS3OMJSPA963O.LARGE.jpg", "https://cdn.instructables.com/FH6/3PC8/JSPA9M0A/FH63PC8JSPA9M0A.LARGE.jpg"], "step_title": "Step 8: Digital Read"}, {"step": 9, "steps_text": "Click the Code button on the interface and change \"Blocks\" to \"Text\". We love blocks, but we need to learn text code, too. Remove all the code so it just reads:\nvoid setup(){\n}\n\nvoid loop() {\n}\nOk, to read the digital pin, we need to run a couple of functions inside the loop. Let's write the code then go through it.\n// Assign constants\nconst int switchPosition1 = 2;\nconst int switchPosition2 = 3;\n\nvoid setup() {\n // Assign the pin types (INPUT or OUTPUT)\n pinMode(switchPosition1, INPUT);\n pinMode(switchPosition2, INPUT);\n}\n\nvoid loop() {\n int positionOneActive = digitalRead(switchPosition1);\n int positionTwoActive = digitalRead(switchPosition2);\n\n // Respond to active position\n if (positionOneActive == HIGH){\n  // do something\n }\n if (positionTwoActive == HIGH){\n  // do something\n }\n}\nOk.. That's quite a bit.\nFirst, we assigned the two switch positions. This is so we can read the pin values.\nThen, in the setup function we set the pin types. We have done this before, except last time we used an OUTPUT type.\nNow, in the loop we introduced a new function and an if() statement. This is so we can make decisions based on input. Let's look at it.\nif (positionOneActive == HIGH)\nFirst, we state the if, then inside the round braces, we use a comparative. We can compare in many ways, such as:\n== or equal to\n<= or less than or equal\n>= or greater than or equal\netc...\nThere are a few comparatives and it is best to find the one you need for your use case.\nSo, in this case we are checking if the positionOneActive is HIGH, in which case we can \"do something\". In the next step, we're going to turn on a light as a result of this work.", "step_imgs": ["https://cdn.instructables.com/FO3/A6NR/JSPA97O0/FO3A6NRJSPA97O0.LARGE.jpg", "https://cdn.instructables.com/FJC/VEZH/JSPA97PP/FJCVEZHJSPA97PP.LARGE.jpg", "https://cdn.instructables.com/F50/5LVR/JSPA97RE/F505LVRJSPA97RE.LARGE.jpg"], "step_title": "Step 9: Coding"}, {"step": 10, "steps_text": "First, let's wire up the lights.\nWe discussed earlier that columns are connected and rows are not. This means we can easily connect wires to pins on the board. The best place to start is by placing the LEDs and the resistors on the board. See the image for placement.\nRoll over the bottom of each LED. You'll notice one is the Cathode and the other is the Anode. The Cathode is the negative, whilst the Anode is the Positive. This is only relevant at the moment because we need to connect the Anode to the digitalPin, and the Cathode to the GND.\nPlace a wire from the Cathode to the GND\nPlace another from the top of the column to digital pins 4 and 5. Make sure they contact the breadboard in the same column as the pin for the Anode.\nBridge the gap with a resistor.\nOk, this is where we ended up. So let's replace the comments below (the ones that read // do something) and add two more pin positions\n// Assign constants\nconst int switchPosition1 = 2;\nconst int switchPosition2 = 3;\nconst int led1 = 4;\nconst int led2 = 5;\n\nvoid setup() { \n // Assign the pin types (INPUT or OUTPUT)\n pinMode(switchPosition1, INPUT);\n pinMode(switchPosition2, INPUT);\n pinMode(led1, OUTPUT);\n pinMode(led2, OUTPUT);\n}\n\nvoid loop() {\n int positionOneActive = digitalRead(switchPosition1);\n int positionTwoActive = digitalRead(switchPosition2);\n\n // Respond to active position\n if (positionOneActive == HIGH){\n  digitalWrite(led1, HIGH);\n } \n if (positionOneActive == LOW){\n  digitalWrite(led1, LOW);\n } \n if (positionTwoActive == HIGH){\n  digitalWrite(led2, HIGH);\n }\n if (positionTwoActive == LOW){\n  digitalWrite(led2, LOW);\n }\n}\nOk, so a few things.\nFirst, we added the new led1 and led2 pins to the list of constants. Then, I added the two pinMode() function calls to assign led1 and led2 as OUTPUT types.\nThe loop() is where the real meat is. For the IF statements, I need any case that is true or false to fire every time the conditions are checked.** I added these in for all conditions.\nThen, I used the digitalWrite() function to write to the LEDs. Check it out in Tinkercad. Does your circuit work when you toggle the switch?\n** There are more efficient ways to write this, like with else or some other shorter notation. I did this for clarity :)", "step_imgs": ["https://cdn.instructables.com/FRG/PWGL/JSPA9MF2/FRGPWGLJSPA9MF2.LARGE.jpg"], "step_title": "Step 10: Do Something..."}, {"step": 11, "steps_text": "Ok, this is the last step!\nMapping integers is a powerful way to manage some devices. Let's say you want to move a servo motor with a potentiometer. One way to do that is add a little code that reads the value of the potentiometer. What we do is convert the reading from the usual value on the analog pin of between 0 and 1023 to something that is more usable. Let's just do the mapping - motors are another day!\nFor this, we'll read the value and print to the serial. Rather than rewrite the entire codebase from previous steps, I'll start with a blank setup() and loop(). You can add the code to your existing code in Tinkercad and it will work just fine.\n// Assign a constant with the pin value\nconst int potPosition = A0;\n\nvoid setup() {\n pinMode(potPosition, INPUT);\n Serial.begin(9600);\n}\n\nvoid loop() {\n //Read the value and print to Serial\n int currentPotValue = analogRead(potPosition);\n int mappedPotValue = map(currentPotValue, 0, 1023, 0, 50);\n Serial.print(\"Pot Value (original): \");\n Serial.println(currentPotValue);\n\n Serial.print(\"Pot Value (new): \");\n Serial.println(mappedPotValue);\n\n delay(500);\n}\nSo the Map() function just reshuffles the numbers. It takes 5 arguments. The first is the variable we want to map. The second and third are the original range. The fourth and fifth are the new. Arduino manages all the overhead for us and does the conversion.\nI added a delay to make it a little easier to read.\nGreat!", "step_imgs": ["https://cdn.instructables.com/FEE/ENVP/JSPA9MI7/FEEENVPJSPA9MI7.LARGE.jpg"], "step_title": "Step 11: Mapping Results (of Input)"}, {"step": 12, "steps_text": "This get's you through some serious work with the Arduino. It's a great way to get your head around the basics and understand just what you can do. There is so much more, too. In another tutorial, we'll cover using basic motors like servos. We'll also look at functions and classes. There have been a few requests for SD card data, too, so I'll cover that.\nIf you'd like to see the circuit on Tinkercad you can do that, and I have embedded it above.\nIf you have questions, please leave a comment and I'll endeavour to get back to you quickly. Also if you see errors, message me and I'll fix the error and provide due credit. Thank you!", "step_imgs": [], "step_title": "Step 12: Final Notes"}], "channel": "Arduino"}, {"category": "Technology", "description": "We wanted to tackle stress in people's everyday lives. Working with how to make people slow down, and how to create time for your personal space. Looking at our alternatives, we chose to focus on music and sound, as these have been known to help people get into a certain moods. However, we didn\u2019t just want to play some slow music and hope for people to calm down. Instead, wanted to create more of a multi-modal experience.\nTouch seemed like an interesting choice to explore, as this is an essential part of our calming more intimate lives.\nSo, taking inspiration from the five elements of japanese culture. We chose the name Sui, which means water. Often represented by a circle, or in our case a ball. Now on Sui rests Chi, which means earth. Unlike Sui, Chi is stable and unmoving. This might just sound like gibberish, but what we wanted to have, was to have this idea of a duality. The moving and the unmoving. Our moldable ball, and our more stable box.\nThe idea is to to squeeze the ball, and with this haptic interaction you will be able to control the sounds of the box. Pushing it will make the waves roll in, and then releasing the grip making the waves roll out again. What we hope to achieve here is a more direct interaction with these calming sounds, as well as more parts of your senses slowing down to accommodate this different pace. Creating a more powerful impact. Currently we\u2019re planning to have three different sounds. Waves, rain and the blowing wind.", "title": "Sui - Stress Reliever \u6c34", "url": "https://www.instructables.com/id/Sui-Stress-Reliever-%E6%B0%B4/", "steps": [{"step": 1, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FJO/GHU3/JSPA9SPX/FJOGHU3JSPA9SPX.LARGE.jpg", "https://cdn.instructables.com/FJ8/LFOR/JSPA9SPQ/FJ8LFORJSPA9SPQ.LARGE.jpg", "https://cdn.instructables.com/FO0/7W67/JSPA9SPT/FO07W67JSPA9SPT.LARGE.jpg"], "step_title": "Step 1: In the Wild"}, {"step": 2, "steps_text": "1x Arduino Uno\nWires\n4x 1m Red Wires\n1x 0.1m Red Wire\n4x 1m Blue Wire\n1x 0.1m Black Wire\nGeneral\n1x Stripboard\n4x Force Sensitive Resistor\n1x Computer with Arduino software\n1x Speaker\n1x Wood\n1x Elastic fabric", "step_imgs": [], "step_title": "Step 2: Materials"}, {"step": 3, "steps_text": "Electronics\nThe technical setup of \u201cthe stress ball\u201d consists of multiple parts connected together. The heart of the product is the Arduino that tracks and registers the movements of the user by using four Force Sensitive Resistors. These resistors are connected to the Arduino using standard electrical wires from the 5V jack of the Arduino (Red Wire) to a stripboard where the the four sensors are connected in parallel. On each of the parallel instance, a 10K Ohm resistor is connected in serial with the Force Sensitive Resistor and a measuring point that is connected to the analog inputs of the Arduino (yellow wires). Finally each of the parallel instance is then connected to the ground of the Arduino (black wire). All the wires are soldered to the stripboard and to the sensors in order for the connections to be able to withstand the movements of the user.\nThe Force Sensitive Resistors change its resistance according to the pressure of the user onto the sensory surface. These changes are then monitored by the Arduino using its analog input ports. When the resistance of one of the ports hits the threshold of 400 Ohms, a signal is then sent to a computer (Mac or Rasberry Pie) using the serial port reading from the USB-connection between the Arduino and the computer. To describe the fullstack, The Arduino simply prints out the value of the resistance and the command play using the module Serial.println(). This is then picked up by a simple python script that consists of a while-loop iterating over the serial messages from the Arduino to the computer. The relaxing sound is then being played using the python library playsound that plays a pre recorded mp3 file. This can easily be evolved into using the Java based Proccessing or Pure Data that can use inputs to create sounds using their synth-libraries.\nCode\nBellow is the running code of Sui\nArduino Code\nWe save our input from A0, A1, A2 and A3.\n \nint fsrPin0 = 0;     // the FSR and 10K pulldown are connected to a0\nint fsrPin1 = 1;\nint fsrPin2 = 2;\nint fsrPin3 = 3;\nint fsrReading0;     // the analog reading from the FSR resistor divider\nint fsrReading1;\nint fsrReading2;\nint fsrReading3;\n \nvoid setup(void) {\n  // We'll send debugging information via the Serial monitor\n  Serial.begin(9600);   \n}\n \nvoid loop(void) {\n  fsrReading0 = analogRead(fsrPin0); \n  fsrReading1 = analogRead(fsrPin1);\n  fsrReading2 = analogRead(fsrPin2);\n  fsrReading3 = analogRead(fsrPin3);\n \n  // We'll have a few threshholds, qualitatively determined<br>if (fsrReading0 > 300) {\n    Serial.println(\"A0: \" + String(fsrReading0));\n  }    <br>if (fsrReading1 > 300) {\n    Serial.println(\"A1: \" + String(fsrReading1));\n  }    <br>if (fsrReading2 > 300) {\n    Serial.println(\"A2: \" + String(fsrReading2));\n  }    <br>if (fsrReading3 > 300) {\n    Serial.println(\"A3: \" + String(fsrReading3));\n  }    <br>delay(100);\n}\nPython Code\nPicking up the output from the Arduino\n#!/usr/bin/python3<br>import serial<br>import time<br>from playsound import playsound<br>class SqueezeBall(object):<br>    #Constructor<br>    def __init__(self):<br>        print(\"building\")<br>    #Method for playing sounds<br>    def play(self):<br>        playsound('ocean.mp3')<br>    #Main method<br>    def main(self):<br>        ser = serial.Serial('/dev/tty.usbmodem14101', 9600)<br>        # read from Arduino<br>        input = ser.read()<br>        print (\"Read input \" + input.decode(\"utf-8\") + \" from Arduino\")<br>        # write something back<br>        while 1:<br>          # read response back from Arduino<br>          for i in range (0,3):\n               input = ser.read()\n               getVal = str(ser.readline())\n               #print(getVal)\n               if (\"play\" in getVal):\n                   self.play()<br>                   print(\"play\")\n          time.sleep(1)<br>if __name__ == \"__main__\":\n   ball = SqueezeBall()\n   ball.main()", "step_imgs": ["https://cdn.instructables.com/FOZ/ZAVN/JSPA9PK1/FOZZAVNJSPA9PK1.LARGE.jpg", "https://cdn.instructables.com/F6Z/ASTD/JSPA9Q48/F6ZASTDJSPA9Q48.LARGE.jpg", "https://cdn.instructables.com/F09/0SNK/JSPA9PKS/F090SNKJSPA9PKS.LARGE.jpg"], "step_title": "Step 3: Arduino Setup"}, {"step": 4, "steps_text": "The ball itself is made up of a silicone filled ball which we bought at Teknikmagasinet.\nThe outer fabric is bought at Ohlssons tyger in Stockholm. The fabric is stretchable in all directions since we want the interaction to be as smooth as possible. The innerball should be able to move in any direction without being stopped by the stretch of the fabric.\nWhen sewing the outer fabric for the ball the circuit was first measured. We then sketched out a template for the fabric, making 5 to 6 of these that then together would present the hole ball. The fabric was cut out with the template and then sew together with the help of a sewing machine. It is very important to have the right setting at the machine since the fabric is very stretchable. To create a simple opening for the cords and sensors into the ball we used velcro.", "step_imgs": ["https://cdn.instructables.com/FMW/21WN/JSPA9Q34/FMW21WNJSPA9Q34.LARGE.jpg", "https://cdn.instructables.com/F62/RV13/JSPA9Q38/F62RV13JSPA9Q38.LARGE.jpg"], "step_title": "Step 4: Sewing the Ball"}, {"step": 5, "steps_text": "The arduino and cables are hidden away in a wooden box. For this a finger jointed laser cut box is used. This box consists of 6 pieces of wood that are cut out using a laser cutter using a similar pattern to the one below.\nPut these pieces together and place the arduino inside. Drill holes in the box for the wires from the arduino. Make three additional holes at the top of the box for the switches. Make sure they fit nicely.", "step_imgs": ["https://cdn.instructables.com/FUS/0WLS/JSPA9RSA/FUS0WLSJSPA9RSA.LARGE.jpg", "https://cdn.instructables.com/FBV/E2ZM/JSPA9RSB/FBVE2ZMJSPA9RSB.LARGE.jpg", "https://cdn.instructables.com/FJY/OYQL/JSPA9RSI/FJYOYQLJSPA9RSI.LARGE.jpg"], "step_title": "Step 5: Making the Box"}], "channel": "Art"}, {"category": "Technology", "description": "Hi,\nin this Instructable I want to show you, how you can build your own CNC-Mill for less then 500\u20ac. I designed this machine for CNC-beginners, who don't want to spend a lot of money for their first experiences with CNC machines but also expecting a rigid and professional looking CNC.\nThis machine is perfect for maker, tinkerer and everyone who wants to start CNC-Machining.\nIn the pricerange of sub 500\u20ac you will not find any other CNC with these features:\n710 Watt spindle motor\nMGN linear-rails on all axis\n1204 ballscrews on all axis\neffective workarea of 250x220mm\nmax. travelspeed of 3000mm/min (at 12V)\nhigh accuracy of 0.1mm in all axis\nsuper rigidportal frame (out of one piece of wood and aluminium extrusions)\nBelow on this site, you will find a detailed instruction + a bill of materials (BOM) with links, where you can source the required parts.\nThe complete CNC is build out of CNC milled screen printing wood plates. So assembling will not be a problem. For the build you don't need any expensive tools like (3D-Printers, CNC or Lasers). The only special tool is a M5 and M6 thread cutter.\nVideo of CNC in action:\nIf you like my Instructable, please vote for me in the Build a Tool Contest\nYou can see the CNC live at Makerfaire Ruhr 2019\nI really like to see, when someone has rebuilded the CNC, so please post a photo of the CNC in the comments with \"I made it\" :-)\nChange Log:\n[06.03.2019] Added step \"Configure Estlcam for This Machine\" + video of test run\n[07.03.2019] Added video of CNC in action\n[15.03.2019] Added photo of Linear Parts", "title": "LOW COST DIY 500\u20ac CNC MILL", "url": "https://www.instructables.com/id/LOW-COST-DIY-500-CNC-MILL/", "steps": [{"step": 1, "steps_text": "The complete CNC is designed in Fusion 360, below you will see the complete CNC in an interactive 3D-model:\nRequired Parts:\nCNC-Milled-Parts:\nHere are all required CNC-milled parts. You can buy all the CNC-milled parts in my Online Shop. The total cost of all the CNC-milled parts will be 150\u20ac + shipping.\nQuantity Description How the part looks like\n1x\nY_Axis_Front\n1x\nY_Axis_Rear\n1x\nY_Axis_Nut\n2x\nPortal_Side\n1x\nPortal\n1x\nX_Motor\n1x\nX_Bearing\n1x\nX_Carriage\n1x\nZ_Motor\n1x\nZ_Plate_Front\n2x\n(normal+mirror)\nZ_Plate_Side\n1x\nSpindle_Mount\n1x\nMain_Plate\nAluminium Extrusion Parts:\nI am trying to use as much standart aluminium extrusion parts, so it will be relativly easy to source the parts.\nQuantity Description Link Price\n10x 2040 extrusion angle bracket\nAliexpress 9,10\u20ac (for 20 pieces)\n2x 428mm 20x20mm aluminium extrusion 6mm slot\ndold-mechatronik 2,07\u20ac\n2x 400mm 20x40mm aluminium extrusion 6mm slot\ndold-mechatronik 3,70\u20ac\n1x 330mm 20x60mm aluminium extrusion 5mm slot\ndold-mechatronik 4,26\u20ac\nNuts, Screws and Washers:\nI am trying to be as accurate as possible while counting all the screws and nuts. If you find any fault on the list, please tell me, so I can update the parts list. Also I recommend to buy some more screws.\nQuantity Description Where to buy\nPrice\n84x M3 T-slot Nut Slot 6mm\nAliexpress\n5,60\u20ac\n40x M4 T-slot Nut Slot 6mm\nAliexpress\n5,60\u20ac\n32x M4x20mm DIN912 cylinderhead screw\nlocal hardware store\n-\n32x\nM4x16mm DIN912 cylinderhead screw\nlocal hardware store\n-\n8x M4x12mm DIN912 cylinderhead screw\nlocal hardware store\n-\n8x M3x16mm DIN912 cylinderhead screw\nlocal hardware store\n-\n52x M3x12mm DIN912 cylinderhead screw\nlocal hardware store\n-\n8x M3x10mm DIN912 cylindergead screw\nlocal hardware store\n-\n84x M3x8mm DIN912 cylinderhead screw\nlocal hardware store\n-\n6x\nM5x20mm DIN912 cylinderhead screw\nlocal hardware store\n-\n12x\nM5x10mm DIN912 cylinderhead screw\nlocal hardware store\n-\n16x\nM6x20mm DIN912 cylinderhead screw\nlocal hardware store\n-\n8x M3 nylon nut\nlocal hardware store\n-\n24x M4 nylon nut\nlocal hardware store\n-\n8x M3 washer\nlocal hardware store\n-\n6x M5 washer\nlocal hardware store\n-\n80x M4 washer\nlocal hardware store\n-\n16x M6 washer\nlocal hardware store\n-\nLinear parts and custom machined ballscrews:\nFor the CNC mill you will need three custom machined 1204 ballscrews. I have attached a drawing with the dimesions at the bottom of this step. Additionally you will need MGN12 linear rails, ballscrew, bearings and housings. Because it was a littlebit hard to source all the parts, I contacted a manufacture, who can supply all these parts for a resonable price. This manufacture will also make the custom machined ballscrews. You can buy all the parts here: Aliexpress\nQuantity Description\n1x\n1204 Ballscrew 425mm\n1x\n1204 Ballscrew 395mm\n1x\n1204 Ballscrew 200mm\n4x\n400mm MGN12 Linear Rail\n2x\n250mm MGN12 Linear Rail\n12x\nMGN12H Linear Rail Wagon\n2x\nFF10 Ballscrew Bearing\n3x\n24mm 1204 Ballscrew Housing\n3x\n5 to 8mm shaft coupler (rigid ; not the red or flexible)", "step_imgs": ["https://cdn.instructables.com/F6Z/UR2S/JSL37UHD/F6ZUR2SJSL37UHD.LARGE.jpg"], "step_title": "Step 1: Mechanical Parts"}, {"step": 2, "steps_text": "Electrical Parts for the CNC:\nHere you will find all the required electronic parts for the CNC mill. For the router you can use the Katsu from Amazon or a Makita RT0700C. Both will fit to the CNC-milled parts.\nQuantity Description Link Price\n1x 710W 230V spindle motor\nAmazon 59,99\u20ac\n3x inductive limit switches NPN\nAliexpress 4,44\u20ac\n3x\nNema 17 Motors\nStepper-Online 33,00 \u20ac\n1x Arduino Uno + CNC-Shield + DRV8825\nAliexpress 9,76\u20ac\n1x 12V Powersupply\n-\n-\nsome\nwires\n-\n-", "step_imgs": ["https://cdn.instructables.com/FWF/SOZ1/JSPA9GSO/FWFSOZ1JSPA9GSO.LARGE.jpg"], "step_title": "Step 2: Electrical Parts"}, {"step": 3, "steps_text": "What you need for this step:\nQuantity Description\n32x\nM3x8mm DIN912 cylinderhead screw\n32x\nM3-T-Slot-Nut 6mm-Slot\n2x\n400mm MGN12 Linear-Rail\n4x\nMGN12H-Linear-Rail-Wagon\n1x\nY_Axis_Front\n1x\nY_Axis_Rear\n8x\nM6x20mm DIN912 cylinderhead screw\n8x\nM6 washer\n2x\n20x40mm aluminium extrusion 6mm slot\nWhat you have to do:\nAt frist you have to cut eight M6 threads inside the aluminium extrusions. After that you need to attach the MGN12 linear rails to the alumnium extrusions by using the M3x8mm screws. Then you have to take the two wood parts and attach them to the aluminium extrusion with eight M6x20mm screws.", "step_imgs": ["https://cdn.instructables.com/FWS/82E8/JSL37WMH/FWS82E8JSL37WMH.LARGE.jpg", "https://cdn.instructables.com/FWR/RQHX/JSL37WO3/FWRRQHXJSL37WO3.LARGE.jpg", "https://cdn.instructables.com/FZ7/5UL2/JSL37WPP/FZ75UL2JSL37WPP.LARGE.jpg", "https://cdn.instructables.com/F6X/UH2R/JSL37WRF/F6XUH2RJSL37WRF.LARGE.jpg"], "step_title": "Step 3: The Main Frame"}, {"step": 4, "steps_text": "What you need for this step:\nQuantity Description\n8x\nM3x16mm DIN912 cylinderhead screw\n4x\nM3-nylon nut\n8x\nM3-washer\n1x\nFK10 Bearing\n1x\n1204-ballscrew housing\n1x\n395mm 1204-ballscrew with custom end-machining\n1x\nNema 17 Stepper Motor\n1x\n5x8mm shaft-coupler\nWhat you have to do:\nNow it is time to install the Y-ballscrew to the main frame. At first install the Nema 17-motor to the rear plate and fix it with four M3x16mm screws. Then you can slide the 395mm ballscrew in. Once the ballscrew is in place, attach the FK10 bearing at the front plate. The FK10 bearing is fixed by four M3x16mm screws and M3-nylon nuts.", "step_imgs": ["https://cdn.instructables.com/FLR/38VK/JSL37ZXB/FLR38VKJSL37ZXB.LARGE.jpg", "https://cdn.instructables.com/FUD/IAU0/JSL37ZXC/FUDIAU0JSL37ZXC.LARGE.jpg", "https://cdn.instructables.com/FAS/KNOC/JSL37ZZM/FASKNOCJSL37ZZM.LARGE.jpg", "https://cdn.instructables.com/F09/SN8F/JSL38019/F09SN8FJSL38019.LARGE.jpg"], "step_title": "Step 4: Y-Ball-Screw"}, {"step": 5, "steps_text": "What you need for this step:\nQuantity Description\n4x\nM5x10mm DIN912 cylinderhead screw\n1x\nY_Axis_Nut\nWhat you have to do:\nFor that step, you have to install the Y_Axis_Nut plate to the ballscrew housing. You do that with four M5x10mm screws.", "step_imgs": ["https://cdn.instructables.com/FIA/9FDE/JSL382O5/FIA9FDEJSL382O5.LARGE.jpg", "https://cdn.instructables.com/FMH/6OXJ/JSL382O6/FMH6OXJJSL382O6.LARGE.jpg"], "step_title": "Step 5: Y-Ballscrew Plate"}, {"step": 6, "steps_text": "What you need for this step:\nQuantity Description\n4x\nM4x16mm DIN912 cylinderhead screw\n4x\nM4-T-slot nut 5mm Slot\n1x\n330mm 60x20mm aluminium extrusion 5mm slot\n6x\nM5x20mm DIN912 cylinderhead screw\n6x\nM5 washer\n16x\nM3x12mm DIN912 cylinderhead screw\n16x\nM3 washer\n2x\nPortal_Side\nWhat you have to do:\nAt first you have to connect the two Portal_Side plates to the linear wagons. After that you have to attach the 60x20mm extrusion to the Portal_Side plates by using the six M5 screws. Finally connect the ballscrew housing from the previous step to the extrusion.", "step_imgs": ["https://cdn.instructables.com/FQC/KWD1/JSL38L1X/FQCKWD1JSL38L1X.LARGE.jpg", "https://cdn.instructables.com/FXG/7NMY/JSL38KYP/FXG7NMYJSL38KYP.LARGE.jpg", "https://cdn.instructables.com/F5X/US2N/JSL38L18/F5XUS2NJSL38L18.LARGE.jpg", "https://cdn.instructables.com/F9N/BFWN/JSL38L4B/F9NBFWNJSL38L4B.LARGE.jpg"], "step_title": "Step 6: The Portal Side"}, {"step": 7, "steps_text": "What you need for this step:\nQuantity Description\n1x\nMain_Plate\n16x\nM6 hammer nut\nWhat you have to do:\nYou have to hammer the 16 hammer nuts to the predrilled holes.", "step_imgs": ["https://cdn.instructables.com/FRA/E62N/JSL38NY3/FRAE62NJSL38NY3.LARGE.jpg", "https://cdn.instructables.com/F1R/4MJ7/JSL38NY5/F1R4MJ7JSL38NY5.LARGE.jpg"], "step_title": "Step 7: The Main Plate"}, {"step": 8, "steps_text": "What you need for this step:\nQuantity Description\n8x\nM4x12mm DIN912 cylinderhead screw\n8x\nM4 T-Slot mut 6mm slot\n8x\nM4 washer\n\nWhat you have to do:\nYou have to connect the preassembled Main_Plate to the main frame. The connection is made with eight M4x12mm screws.", "step_imgs": ["https://cdn.instructables.com/F5D/6JWY/JSL38OIR/F5D6JWYJSL38OIR.LARGE.jpg", "https://cdn.instructables.com/F45/W630/JSL38O99/F45W630JSL38O99.LARGE.jpg", "https://cdn.instructables.com/F89/XAZK/JSL38OIQ/F89XAZKJSL38OIQ.LARGE.jpg"], "step_title": "Step 8: Attach the Main Plate to the Main Frame."}, {"step": 9, "steps_text": "What you need for this step:\nQuantity Description\n32x\nM3x8mm DIN912 cylinderhead screw\n32x\nM3-T-slot nut 6mm slot\n8x\nM4x12mm DIN912 cylinderhead screw\n8x\nM4x20mm DIN912 cylinderhead screw\n32x\nM4 washer\n2x\n400mm MGN12 Linear Rail\n4x\nMGN12H Linear Wagon\n2x\n428mm 20x20mm 6mm slot aluminium extrusions\n4x\n4020 angle bracket\n1x\nportal plate\n\nWhat you have to do:\nAt first you have to connect the linear rail to the aluminium extrusion.Then place the extrusions on the portal plate. Now screw the extrusions to the extrusions. Don't forget to place the angle brackets.", "step_imgs": ["https://cdn.instructables.com/F6I/GSVR/JSL39TAY/F6IGSVRJSL39TAY.LARGE.jpg", "https://cdn.instructables.com/F69/IVJ4/JSL39TB0/F69IVJ4JSL39TB0.LARGE.jpg", "https://cdn.instructables.com/FT3/6345/JSL39TB1/FT36345JSL39TB1.LARGE.jpg", "https://cdn.instructables.com/FKH/7SJ2/JSL39TB2/FKH7SJ2JSL39TB2.LARGE.jpg"], "step_title": "Step 9: Portal"}, {"step": 10, "steps_text": "What you need for this step:\nQuantity Description\n4x\nM3x10mm DIN912 cylinderhead screw\n4x\nM3x16mm DIN912 cylinderhead screw\n8x\nM3 washer\n4x\nM3 nylon nut\n1x\n425mm 1204 Ballscrew\n1x\n1204 24mm Ballscrew housing\n1x\n5x8mm coupler\n4x\nM6x20mm DIN912 cylinderhead screw\n4x\nM6 washer\n1x\nNema 17 Motor\n1x\nX_Bearing\n1x\nX_Motor\n1x\nFF10 Bearing\n\n\nWhat you have to do:\nYou have to place the ballscrew between the two linear rails. The connection of the motor and the FF10 bearing is made by four M6 screws. Don't forget to cut the four M6 threads to the aluminium extrusions.", "step_imgs": ["https://cdn.instructables.com/FGS/ZBU4/JSL39YTC/FGSZBU4JSL39YTC.LARGE.jpg", "https://cdn.instructables.com/FMJ/APSQ/JSL39YTD/FMJAPSQJSL39YTD.LARGE.jpg", "https://cdn.instructables.com/FKU/5VDX/JSL39YTB/FKU5VDXJSL39YTB.LARGE.jpg", "https://cdn.instructables.com/FDA/RUEK/JSL39YTH/FDARUEKJSL39YTH.LARGE.jpg", "https://cdn.instructables.com/FKF/HNXF/JSL39YTJ/FKFHNXFJSL39YTJ.LARGE.jpg"], "step_title": "Step 10: X-Ballscrew"}, {"step": 11, "steps_text": "What you need for this step:\nQuantity Description\n4x\nMGN12H Linear Rail Wagon\n32x\nM3x12mm DIN912 cylinderhead screw\n32x\nM3 washer\n1x\nX-Carriage plate\nWhat you have to do:\nConnect the X-Carriage plate to the linear wagons by using the M3x12mm screws and the predrilled holes.", "step_imgs": ["https://cdn.instructables.com/FUQ/G3RL/JSL3A0R5/FUQG3RLJSL3A0R5.LARGE.jpg", "https://cdn.instructables.com/FQ1/PNF5/JSL3A0RV/FQ1PNF5JSL3A0RV.LARGE.jpg", "https://cdn.instructables.com/FG2/DJUE/JSL3A0OX/FG2DJUEJSL3A0OX.LARGE.jpg", "https://cdn.instructables.com/F93/RDIW/JSL3A0PP/F93RDIWJSL3A0PP.LARGE.jpg"], "step_title": "Step 11: X-Carriage"}, {"step": 12, "steps_text": "What you need for this step:\nQuantity Description\n1x\nZ-Plate_Front\n2x\n250mm MGN12 Linear Rail\n2x\n250mm 20x20 aluminium extrusions\n8x\nM4x16 DIN912 cylinderhead screw\n16x\nM4 washer\n8x\nM4 t slot nut\n20x\nM3x8mm DIN912 cylinderhead screw\n20x\nM3 t slot nut\nWhat you have to do:\nConnect the linear rails to the extrusions by using the M3x8mm screws. After that attach the extrusions to the Z_Plate_Front .", "step_imgs": ["https://cdn.instructables.com/FWV/9MTP/JSL3A2SO/FWV9MTPJSL3A2SO.LARGE.jpg", "https://cdn.instructables.com/FTQ/CM6Z/JSL3A2TO/FTQCM6ZJSL3A2TO.LARGE.jpg", "https://cdn.instructables.com/FBP/XZYE/JSL3A2QI/FBPXZYEJSL3A2QI.LARGE.jpg"], "step_title": "Step 12: Z-Axis Part 1:"}, {"step": 13, "steps_text": "What you need for this step:\nQuantity Description\n1x\nSpindle_Mount plate\n1x\nZ_Motor plate\n4x\nM6x20mm DIN912 screws\n4x\nM6 washer\n\nWhat you have to do:\nConnect the Spindle_Mount at the bottom of the Z-Axis and the and the Z_Motor plate at the top of the Z-axis. Don't forget to cut a M6 thread inside the extrusions.", "step_imgs": ["https://cdn.instructables.com/FUU/3NS5/JSL3A4MT/FUU3NS5JSL3A4MT.LARGE.jpg", "https://cdn.instructables.com/FKG/G1VX/JSL3A4MQ/FKGG1VXJSL3A4MQ.LARGE.jpg", "https://cdn.instructables.com/F2M/TPZT/JSL3A4MR/F2MTPZTJSL3A4MR.LARGE.jpg", "https://cdn.instructables.com/FAK/IKF5/JSL3A4MS/FAKIKF5JSL3A4MS.LARGE.jpg"], "step_title": "Step 13: Z-Axis Part 2:"}, {"step": 14, "steps_text": "What you need for this step:\nQuantity Description\n2x\nZ_Plate_Side\n8x\nM4x16mm DIN912 cylinderhead screw\n16x\nM4 washer\n8x\nM4 T-slot-nut\n\nWhat you have to do:\nPlace the Z_Plate_Side plates at the side of the Z-axis. Then connect them with the M4x16mm screws", "step_imgs": ["https://cdn.instructables.com/F6G/DWLF/JSL3A5CW/F6GDWLFJSL3A5CW.LARGE.jpg", "https://cdn.instructables.com/FJV/FRVN/JSL3A5D1/FJVFRVNJSL3A5D1.LARGE.jpg", "https://cdn.instructables.com/F1J/4XSR/JSL3A5DV/F1J4XSRJSL3A5DV.LARGE.jpg", "https://cdn.instructables.com/F3V/BLJ8/JSL3A5E6/F3VBLJ8JSL3A5E6.LARGE.jpg"], "step_title": "Step 14: Z-Axis Part 3:"}, {"step": 15, "steps_text": "What you need for this step:\nQuantity Description\n1x\nNema17 Motor\n4x M3x10mm DIN912 cylinderhead screw\n1x\n200mm 1204 Ballscrew\n1x\n1204 Ballscrew Housing\n1x\n5x8mm shaft coupler\n\n\nWhat you have to do:\nAttach the Nema 17 motor to the predrilled holes and connect it with four M3x10mm screws. After that connect the ballscrew to the Nema 17 motor with the 5x8mm shaft coupler.", "step_imgs": ["https://cdn.instructables.com/FJG/MNC8/JSL3A78U/FJGMNC8JSL3A78U.LARGE.jpg", "https://cdn.instructables.com/F7B/HIZA/JSL3A7A3/F7BHIZAJSL3A7A3.LARGE.jpg", "https://cdn.instructables.com/FU5/WRMJ/JSL3A7AU/FU5WRMJJSL3A7AU.LARGE.jpg"], "step_title": "Step 15: Z-Axis Part 4:"}, {"step": 16, "steps_text": "What you need for this step:\nQuantity Description\n4x\nM5x16mm DIN912 cylinderhead screw\n4x M5 washer\nWhat you have to do:\nSlide the Z-Axis into the linear wagons on the X-Carriage. Then connect the Z-ballscrew to the X-Carriage with four M5x16mm screws.", "step_imgs": ["https://cdn.instructables.com/FX4/9GCW/JSL3A94X/FX49GCWJSL3A94X.LARGE.jpg", "https://cdn.instructables.com/F64/7LEM/JSL3A94S/F647LEMJSL3A94S.LARGE.jpg", "https://cdn.instructables.com/F02/HNBJ/JSL3A93I/F02HNBJJSL3A93I.LARGE.jpg", "https://cdn.instructables.com/FF4/13BC/JSL3A91F/FF413BCJSL3A91F.LARGE.jpg", "https://cdn.instructables.com/F5J/IN53/JSL3A947/F5JIN53JSL3A947.LARGE.jpg"], "step_title": "Step 16: Connect the Z-Axis and the Portal"}, {"step": 17, "steps_text": "What you need for this step:\nQuantity Description\n6x\n2040 angle bracket\n32x\nM4x20mm DIN912 screws\n64x\nM4 washer\n32x M4 nylon nut\nWhat you have to do:\nFinally connect the portal to the main frame. You do this by using six additional angle brackets. All the requiered holes are predrilled. Please take a look at the pictures, where the angle brackets are located.", "step_imgs": ["https://cdn.instructables.com/F0N/BKJM/JSL3AB53/F0NBKJMJSL3AB53.LARGE.jpg", "https://cdn.instructables.com/FDP/CG42/JSL3AB6I/FDPCG42JSL3AB6I.LARGE.jpg", "https://cdn.instructables.com/FKZ/TNG5/JSL3AB14/FKZTNG5JSL3AB14.LARGE.jpg", "https://cdn.instructables.com/FTL/JIVO/JSL3AB2B/FTLJIVOJSL3AB2B.LARGE.jpg", "https://cdn.instructables.com/FAK/SJY8/JSL3AB2Y/FAKSJY8JSL3AB2Y.LARGE.jpg", "https://cdn.instructables.com/FGH/XLHZ/JSL3AB4M/FGHXLHZJSL3AB4M.LARGE.jpg"], "step_title": "Step 17: Connect the Portal to the Main Frame"}, {"step": 18, "steps_text": "For the connection between the spindle and the machine, I am using the allready existing spindle mount. You simply need to remove the plastic part at the bottom of the mount.", "step_imgs": ["https://cdn.instructables.com/FRZ/VPMO/JSPA9AJA/FRZVPMOJSPA9AJA.LARGE.jpg", "https://cdn.instructables.com/FVS/LTQP/JSPA9AKJ/FVSLTQPJSPA9AKJ.LARGE.jpg", "https://cdn.instructables.com/FGM/KJ92/JSPA9AL6/FGMKJ92JSPA9AL6.LARGE.jpg"], "step_title": "Step 18: Prepare the Spindle"}, {"step": 19, "steps_text": "What you need for this step:\nQuantity Description\n4x\nM4x16mm DIN912 cylinder head screw\n4x\nM4 washer\n1x\nSpindle mount\nWhat you have to do:\nPlace the spindle mount on the Z-axis. Then connect it to the Z-axis with four M4x16mm screws. Once completed, you can slide the spindle inside the spindle mount.", "step_imgs": ["https://cdn.instructables.com/FAD/7FEL/JSPA9CSO/FAD7FELJSPA9CSO.LARGE.jpg", "https://cdn.instructables.com/FJ2/M6L7/JSPA9CUG/FJ2M6L7JSPA9CUG.LARGE.jpg", "https://cdn.instructables.com/FNT/YN61/JSPA9CWU/FNTYN61JSPA9CWU.LARGE.jpg"], "step_title": "Step 19: Attach the Spindle Mount to the Machine"}, {"step": 20, "steps_text": "For the electronics I am using an Arduino Uno with a CNC-shield. This is the cheapest methode to controll the CNC.\nFor the connection you have to connect the X-Motor to the X-Motor-Port, the Y-Motor to the Y-Motor-Port and the Z-Motor to the Z-Motor Port. Then you have to connect 12V to the board at the blue terminal pins. After that connect it to your PC and flash the software (GRBL or ESTLCAM) to the Arduino.\nNow you should be able to move your machine.\n\n(coming soon):\nOn the machine there are also holders for inductive 12mm end switches in the CNC milled frame. I am still waiting for delivery, so when they arrieved, I will update the instruction.", "step_imgs": ["https://cdn.instructables.com/FQQ/0FXJ/JSPA9DPP/FQQ0FXJJSPA9DPP.LARGE.jpg"], "step_title": "Step 20: Electronics"}, {"step": 21, "steps_text": "To controll the machine you need 3 types of software:\n1. CAD software:\nInside the CAD software you create your 3D-File, which you want to manufature. I personally use Fusion360 for this kind of application.\n2.CAM software:\nIn the CAM software you define the tool path of your CNC machine, here you can also use Fusion360, because it has a build in CAM-module.\n3. G-code Sender:\nThe G-code sender took the G-code file, from the CAM-Software and sends it to the controller of the machine. Because I am using an Arduino as the controller you can use GRBL as a software on the Arduino and a G-code sender like \"Univerversal-Gcode-Sender\" or \"bcnc\"\nAs an alternative I also want to mention Estlcam. In Estlcam, the CAM and controller part are combined in one software (If you use an Arduino as your controller). Also it is more simple to use compared to other CAM Software.", "step_imgs": [], "step_title": "Step 21: Software"}, {"step": 22, "steps_text": "I personally recommend to use Estlcam over GRBL for this CNC because of these aspects:\nIt is a lot easier to configurate than GRBL\nIt has a build in CAM, so you don't need any additional Software\nController and CAM are combined in one Software\nNow I want to show you which configuration you have to do, that the machine will work propably:\n1. Open Estlcam and go to \"Einstellungen\" then click on \"CNC Steuerung\"\n2. After that a window will open with some configurations. There you will see all the basic values for this machine. Once you have all the settings like in the picture, connect your Arduino to your computer, select the right COM-Port, click on \"Steuerung-Programmieren\":\n3. If the programming of the Arduino was a success, close \"Estlcam\" and open \"CNC-Controller\". Now you should be able to move your machine.\n4.Here is a video of the test-file. The test file can be downloaded at the bottom of this step. The feedrate in the testfile is 2400mm/min.", "step_imgs": [], "step_title": "Step 22: Configure Estlcam for This Machine"}, {"step": 23, "steps_text": "Here I will show you some CNC-milled parts, which where milled on this machine. ( list will be extended in the future )", "step_imgs": [], "step_title": "Step 23: CNC-Milled Results"}], "channel": "CNC"}, {"category": "Technology", "description": "Floating Pinion Demonstrator 2 is an updated Autodesk Fusion 360 design of my original Floating Pinion Demonstrator design of around 3 years ago. With this update, and the PLA Spring Motor Demonstrator 2 update, I'll finish with an updated model that was very popular with our kids, grandkids, nieces and nephews.\nThe original Floating Pinion Demonstrator was designed as yet another \"proof of concept\" tool (I do this quite often) to test whether a 3D printed PLA floating pinion would successfully engage (under spring energy) and disengage (after spring energy is depleted) a 3D printed PLA spring motor from a 3D printed drive train (in this model, simply a drive wheel) in order to allow coasting after the spring energy was depleted. As a result of that successful test, I was able to design a number of 3D printed floating pinion PLA spring powered vehicles.\nLike PLA Spring Motor Demonstrator 2, Floating Pinion Demonstrator 2 is a fairly easy print and assembly, and even though it was originally designed as a proof of concept tool, it is still a fun desktop conversation piece. Please note that the drive wheel in this design is unloaded, and as such the spring energy is depleted quite rapidly, so maintain a firm grip on the model or mount the model in a vice or other suitable rigid holding fixture before operation.\nAs usual, I probably forgot a file or two or who knows what else, so if you have any questions, please do not hesitate to point them out as I do make mistakes in plenty.\nDesigned using Autodesk Fusion 360, sliced using Cura 3.5.0, and printed in PLA and Tough PLA on an Ultimaker 2+ Extended and an Ultimaker 3 Extended.", "title": "Floating Pinion Demonstrator 2", "url": "https://www.instructables.com/id/Floating-Pinion-Demonstrator-2/", "steps": [{"step": 1, "steps_text": "I printed the following parts at .15mm layer height:\nSix \"Bolt, Frame.stl\", 100% infill, Magenta PLA.\nOne \"Frame, Left.stl\", 50% infill, Black Tough PLA.\nOne \"Frame, Right.stl\", 50% infill, Black Tough PLA.\nOne \"Gear, Floating.stl\", 100% infill, Magenta PLA.\nOne \"Gear, Idler (50, 1.12).stl\", 20% infill, Magenta PLA.\nOne \"Gear, Pawl (50, 1.12).stl\", 20% infill, Magenta PLA.\nOne \"Guide, Gear, Floating.stl\", 100% infill, Black Tough PLA.\nOne \"Knob and Axle.stl\", 100% infill, Magenta PLA.\nOne \"Nut, Gear, Floating.stl\", 20% infill, Magenta PLA.\nOne \"Pawl.stl\", 100% infill, Black Tough PLA.\nOne \"Spring.stl\", 100% infill, Black Tough PLA.\nTwo \"Wrench.stl\", 20% infill, Magenta PLA.\nPrior to assembly, I test fit and trimmed, filed, sanded, etc. all parts as necessary for smooth movement of moving surfaces, and tight fit for non moving surfaces. If you decide to make your own Floating Pinion Demonstrator 2, depending on the colors you chose, your printer model and your printer settings, more or less trimming, filing and/or sanding may be required. I carefully filed all edges that contacted the build plate to make absolutely certain that all build plate \"ooze\" was removed and that all edges were smooth. I used small jewelers files and plenty of patience to perform this step. I also used 6mm by 1 right hand threaded taps and dies to prepare the threaded parts prior to assembly.", "step_imgs": [], "step_title": "Step 1: Print and Prepare the Parts."}, {"step": 2, "steps_text": "I assembled the floating pinion and guide as follows:\nPositioned \"Gear, Floating.stl\" into \"Guide, Gear, Floating.stl\".\nSecured \"Gear, Floating.stl\" in \"Guide, Gear, Floating.stl\" using \"Nut, Gear, Floating.stl\".\nOnce secured, I insured that \"Gear, Floating.stl\" moved easily throughout the slot in \"Guide, Gear, Floating.stl\", then applied a small dot of thick cyanoacrylate glue to secure \"Nut, Gear, Floating.stl\" to \"Gear, Floating.stl\".", "step_imgs": ["https://cdn.instructables.com/F3Q/7Q2G/JSPA7PF1/F3Q7Q2GJSPA7PF1.LARGE.jpg", "https://cdn.instructables.com/FPN/8MY2/JSPA7PGD/FPN8MY2JSPA7PGD.LARGE.jpg", "https://cdn.instructables.com/FXW/EG6O/JSPA7PHD/FXWEG6OJSPA7PHD.LARGE.jpg"], "step_title": "Step 2: Assemble the Floating Pinion and Guide."}, {"step": 3, "steps_text": "To assemble the PLA spring motor, I performed the following steps:\nAttached the floating pinion assembly to \"Frame, Right.stl\" using two \"Bolt, Frame.stl\".\nPlaced \"Knob and Axle.stl\" into \"Frame, Right.stl\".\nPressed \"Spring.stl\" onto \"Knob and Axle.stl\" while placing the spring retainer over the axle on \"Frame, Right.stl\".\nPressed \"Pawl.stl\" onto \"Knob and Axle.stl\".\nPlaced \"Gear, Pawl.stl\" onto \"Pawl.stl\".\nPlaced \"Gear, Idler (50, 1.12).stl\" onto the axle on \"Frame, Right.stl\".\nPlaced \"Frame, Left.stl\" onto the spring motor assembly.\nSecured \"Frame, Left.stl\" to the spring motor assembly using two \"Bolt, Frame.stl\".", "step_imgs": ["https://cdn.instructables.com/FPD/8S47/JSPA7PIA/FPD8S47JSPA7PIA.LARGE.jpg", "https://cdn.instructables.com/FNV/ATMN/JSPA7PMS/FNVATMNJSPA7PMS.LARGE.jpg", "https://cdn.instructables.com/FEI/O2OR/JSPA7PP4/FEIO2ORJSPA7PP4.LARGE.jpg", "https://cdn.instructables.com/FNC/G009/JSPA7PQN/FNCG009JSPA7PQN.LARGE.jpg", "https://cdn.instructables.com/FEQ/60XE/JSPA7PU0/FEQ60XEJSPA7PU0.LARGE.jpg", "https://cdn.instructables.com/F13/8ONH/JSPA7PWG/F138ONHJSPA7PWG.LARGE.jpg", "https://cdn.instructables.com/FRY/U71E/JSPA7PXH/FRYU71EJSPA7PXH.LARGE.jpg", "https://cdn.instructables.com/FZP/LHBZ/JSPA7PZ2/FZPLHBZJSPA7PZ2.LARGE.jpg", "https://cdn.instructables.com/FF8/ERCK/JSPA7Q04/FF8ERCKJSPA7Q04.LARGE.jpg", "https://cdn.instructables.com/FKZ/PXSS/JSPA7Q08/FKZPXSSJSPA7Q08.LARGE.jpg", "https://cdn.instructables.com/FML/E3SW/JSPA7Q15/FMLE3SWJSPA7Q15.LARGE.jpg", "https://cdn.instructables.com/F0B/YR2R/JSPA7Q16/F0BYR2RJSPA7Q16.LARGE.jpg", "https://cdn.instructables.com/FFM/W804/JSPA7Q1B/FFMW804JSPA7Q1B.LARGE.jpg", "https://cdn.instructables.com/F5I/LFA2/JSPA7Q1G/F5ILFA2JSPA7Q1G.LARGE.jpg", "https://cdn.instructables.com/F9F/765T/JSPA7Q1H/F9F765TJSPA7Q1H.LARGE.jpg"], "step_title": "Step 3: Assemble the PLA Spring Motor."}, {"step": 4, "steps_text": "For the final assembly, I performed the following steps:\nSecured one \"Wrench.stl\" onto \"Frame, Left.stl\" using double sided tape.\nInstalled two \"Bolt, Frame.stl\" into \"Frame, Right.stl\".\nSecured the remaining \"Wrench.stl\" onto \"Frame, Right.stl\" using double sided tape.\nAnd that is how I printed and assembled Floating Pinion Demonstrator 2.\nHope you enjoy it!", "step_imgs": ["https://cdn.instructables.com/FMV/53TK/JSPA7Q1W/FMV53TKJSPA7Q1W.LARGE.jpg", "https://cdn.instructables.com/FIO/ZHOE/JSPA7Q2U/FIOZHOEJSPA7Q2U.LARGE.jpg", "https://cdn.instructables.com/FND/C43Q/JSPA7Q44/FNDC43QJSPA7Q44.LARGE.jpg", "https://cdn.instructables.com/FX5/HKGW/JSPA7Q48/FX5HKGWJSPA7Q48.LARGE.jpg", "https://cdn.instructables.com/FRT/K1YQ/JSPA7Q4E/FRTK1YQJSPA7Q4E.LARGE.jpg", "https://cdn.instructables.com/F8A/8U8Q/JSPA7Q4G/F8A8U8QJSPA7Q4G.LARGE.jpg", "https://cdn.instructables.com/FXG/TQVO/JSPA7Q4Q/FXGTQVOJSPA7Q4Q.LARGE.jpg"], "step_title": "Step 4: Final Assembly."}], "channel": "3D Printing"}, {"category": "Technology", "description": "I love retro tech. It's so much fun to play with older tech since they are usually larger and more aesthetic than modern equivalents. The only problem with old tech such as Nixie tubes is that they are rare, expensive, and generally difficult to work with. Since the library near me just got a laser cutter for the public to use, I knew I had to make a project to learn how to use it. What better thing to do than combine my passion for old tech with lasers. These LED \"Nixie\" tubes are much cheaper, less dangerous, and can be powered off of USB power.\nIf you like this project consider voting for it in the Faux-Real Contest.\nThe template I used for my PCB was provided by Connor Nishijima on github (https://github.com/connornishijima/lixie-arduino)\nMy original inspiration for this was the version that Make did (https://makezine.com/projects/led-nixie-display/), but Connor's PCB was much cheaper to produce as the PCB's are smaller.", "title": "Faux Nixie Tube Clock", "url": "https://www.instructables.com/id/Faux-Nixie-Tube-Clock/", "steps": [{"step": 1, "steps_text": "Materials:\nElectronics:\nArduino Nano\n10K Resistor\nPushbutton\nToggle Switch\nWS2812B LED's\nMisc Wire\nMini USB cable\nUSB-B extender (commonly used for 3D Printers)\nCoin Cell Battery\nDS3231 RTC module\nOther:\n3mm Plywood\n1/16\" Acrylic\nM3 Screws and Nuts\n\nTools:\nLaser Cutter\nSandpaper (220 Grit)\nMouse Sander\nAllen Keys\nUtility Knife\nSuper Glue\nSolder Reflow Oven (A toaster oven will also work)\nWire Cutters\nSoldering Iron\n60/40 Lead solder\nSyringe and Tips\nSolder Paste\nHot Glue and Glue Dun", "step_imgs": ["https://cdn.instructables.com/FRO/LF0Z/JSL33IQZ/FROLF0ZJSL33IQZ.LARGE.jpg", "https://cdn.instructables.com/FI6/RMDV/JSL39G0T/FI6RMDVJSL39G0T.LARGE.jpg", "https://cdn.instructables.com/FMI/TCC2/JSL33IOR/FMITCC2JSL33IOR.LARGE.jpg", "https://cdn.instructables.com/FGB/TU20/JSL33IOS/FGBTU20JSL33IOS.LARGE.jpg", "https://cdn.instructables.com/FCZ/N4QL/JSL33IN9/FCZN4QLJSL33IN9.LARGE.jpg", "https://cdn.instructables.com/FZ7/P3F9/JSL39I3K/FZ7P3F9JSL39I3K.LARGE.jpg"], "step_title": "Step 1: Materials and Tools"}, {"step": 2, "steps_text": "Using the SVG files (or Fusion360 file) that I have provided, cut out the pieces of the frame.\nThe pieces that have text on them have a separate svg file that includes the text in it. These pieces are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, Back, Bottom, Top.\nYou will need:\n4 x 0 (acrylic)\n4 x 1 (acrylic)\n4 x 2 (acrylic)\n4 x 3 (acrylic)\n4 x 4 (acrylic)\n4 x 5 (acrylic)\n4 x 6 (acrylic)\n4 x 7 (acrylic)\n4 x 8 (acrylic)\n4 x 9 (acrylic)\n1 x Back (wood)\n1 x Bottom (wood)\n3 x Button (wood)\n4 x Feet1 (wood)\n4 x Feet2 (wood)\n1 x Front (wood)\n2 x Side (wood)\n4 x Slot (wood)\n1 x Spacer (wood)\n2 x Top Cover (wood)\n2 x Top Slot (wood)\n1 x Top (wood)\nIn making this I used the Glowforge at my local makerspace, but any laser cutter will work (Duh!). If you are using a Glowforge these are the settings that worked for me. With the wood I used 250 speed, 100 power, and 2 passes (for the more delicate pieces you might want to use less power and slower). For cutting the acrylic I used 200 speed, 100 power, and 1 pass. For engraving the wood I used 250 speed, 10 power, and 1 pass. For engraving the acrylic I used 500 speed, 50 power, and 1 pass. I recommend messing with settings and find what works best for you before cutting out all of the pieces.\nDon't peel the protective layer off the acrylic, leave it on until a later step.", "step_imgs": ["https://cdn.instructables.com/F1X/JDYM/JSL33IOV/F1XJDYMJSL33IOV.LARGE.jpg", "https://cdn.instructables.com/FE1/AW1U/JSL39FZD/FE1AW1UJSL39FZD.LARGE.jpg", "https://cdn.instructables.com/F72/X2MQ/JSL33IQA/F72X2MQJSL33IQA.LARGE.jpg"], "step_title": "Step 2: Laser Cutting"}, {"step": 3, "steps_text": "Order or make the PCB's for the digits using the gerber or Eagle files I have provided. I used the PCB files developed by Connor Nishijima as a base, the only edits I made were to add the 5v line in (since the original files dint have a 5V line for some reason) and change the silkscreen a bit. Using either a syringe filled with solder paste (the method I chose) or a stencil and a spreader tool, apply solder paste to the pads on the PCB's. When applying the solder paste a little bit goes a long way, you only need just enough to coat the pads. You'll need to make four of these, and it might be a good idea to make an extra to test on or in case one of them breaks. Carefully place the WS2812B LED's on the pads, being careful to note the orientation of the LED's. They don't have to be perfect since when they are cooking the surface tension of the solder will straighten them out. It is very difficult to remove an LED if it is put on wrong (I did this on my first board and spent close to a half hour trying to fix it without ruining anything. After placing all the LED's on the board, put them in the reflow oven, or in my case a toaster oven and then turn it on AFTER placing the boards in. Keep a close eye on the oven when it cooking, you don't want to exceed 220 degrees Celsius or you'll start to damage the boards. The solder should start to melt around 200 degrees Celsius. Once the solder joints have melted, turn off the oven and wait for it to cool off. Don't try to remove the boards until the have cooled, if you don't the LED's will move and the board will be ruined. After they are complete I recommend plugging them into an arduino and using one of the NeoPixel example codes to verify that the boards indeed work.", "step_imgs": ["https://cdn.instructables.com/FO8/7SR4/JSL33IR0/FO87SR4JSL33IR0.LARGE.jpg", "https://cdn.instructables.com/FB8/XSSK/JSL33IN8/FB8XSSKJSL33IN8.LARGE.jpg", "https://cdn.instructables.com/FJ2/588Z/JSL33IND/FJ2588ZJSL33IND.LARGE.jpg", "https://cdn.instructables.com/FQV/N5KN/JSL33INA/FQVN5KNJSL33INA.LARGE.jpg", "https://cdn.instructables.com/FUP/0U3W/JSL33INB/FUP0U3WJSL33INB.LARGE.jpg", "https://cdn.instructables.com/FXK/GKZO/JSL33INC/FXKGKZOJSL33INC.LARGE.jpg"], "step_title": "Step 3: Making the Digits"}, {"step": 4, "steps_text": "Plug the arduino Nano into your computer and open up the Arduino environment. Open the sketch and upload the code, making sure that you have selected the right board and COM port. If you ever need to update the clock's firmware you can do it through the USB extension cable and not disassemble it.\nTo make sure you are using the most up to date code check my Github here: https://github.com/ZGoode/Faux-Nixie-Clock", "step_imgs": ["https://cdn.instructables.com/F8O/N1N2/JSL357T0/F8ON1N2JSL357T0.LARGE.jpg"], "step_title": "Step 4: Programming the Arduino"}, {"step": 5, "steps_text": "Connect all of the wires to the Arduino Nano as shown in the Fritzing diagram. Double check all wiring before plugging in to power. Fixing a burnt Nixie display is very difficult and annoying to have to deal with.\nWhen mounting the toggle switches you will need to sand off about a millimeter from the top side (the side that is facing the PCB's making up the Nixies). This is to make them fit properly without interfering with the PCB.\nYou will also need to splice together the USB-B cable and the Mini-B cable. This serves two purposes, one to power the clock, and two to give you USB access so as to reprogram or update it without disassembling.\nDS3231 Pinout\nSCL - A5\nSDA - A4\nLixie Pinout\nDIN - 7\nButtons\nHour - 9\nMinute - 8\nColor - 10\nSwitches\nDaylight Savings - 11\nTime Set - 12\n24 Hour - 13", "step_imgs": ["https://cdn.instructables.com/F8F/2O1Q/JSUOWQT8/F8F2O1QJSUOWQT8.LARGE.jpg", "https://cdn.instructables.com/FU5/VUJO/JSL368YL/FU5VUJOJSL368YL.LARGE.jpg", "https://cdn.instructables.com/F1B/XV3Z/JSL368YC/F1BXV3ZJSL368YC.LARGE.jpg", "https://cdn.instructables.com/FFN/JBPS/JSL368YI/FFNJBPSJSL368YI.LARGE.jpg", "https://cdn.instructables.com/FHK/07DU/JSL368YX/FHK07DUJSL368YX.LARGE.jpg", "https://cdn.instructables.com/FSV/YPN0/JSL368YE/FSVYPN0JSL368YE.LARGE.jpg", "https://cdn.instructables.com/FP5/LXAF/JSL368YJ/FP5LXAFJSL368YJ.LARGE.jpg"], "step_title": "Step 5: Electronics"}, {"step": 6, "steps_text": "After all of the electronics are tested and working and the wires have been cleaned up, prepare to close up the box. Tape down or glue the Arduino and RTC so that they don't end up touching one of the bolts or other wires. Make sure that everything that should be plugged in is plugged in. Super Glue the box shut, putting the bottom piece on last. After closing the box insert the feet pieces into their slots on the bottom.\nAt this point you need to take careful precautions to keep the acrylic clean. Before peeling off the protective plastic I recommend using rubber gloves to keep your skin oils from getting on the digits. Peel off the plastic protection and insert the numbers in the slots in this order (from front to back): 3, 8, 9, 4, 0, 5, 7, 2, 6, 1. After the digits are in place put the top slot piece onto each side to keep the acrylic number aligned and then super glue the top piece on to finish the clock. At this point you are done with assembly and ready to start setting up the clock for use.", "step_imgs": ["https://cdn.instructables.com/FTI/D9SB/JSL39FZV/FTID9SBJSL39FZV.LARGE.jpg", "https://cdn.instructables.com/FPJ/C14Q/JSL39G4Y/FPJC14QJSL39G4Y.LARGE.jpg", "https://cdn.instructables.com/FM0/ZP0V/JSL39G1M/FM0ZP0VJSL39G1M.LARGE.jpg", "https://cdn.instructables.com/FYA/VQKL/JSL39G31/FYAVQKLJSL39G31.LARGE.jpg"], "step_title": "Step 6: Final Assembly"}, {"step": 7, "steps_text": "To set the time: Toggle the set switch to on (making sure the DST or Daylight Savings Time is set correctly) and press the hour and minute buttons to change the time. After the time is set toggle the set switch to off and it should function correctly.\nTo change the color/pattern used in the digits: Press the button labeled color\nTo turn on or off Daylight Savings Mode: Toggled the switch in the back labeled DST\nTo change to 24 hour mode: Toggle the switch on the back labeled 24HR\nBecause of the RTC used, you should only have to set the time when either the battery dies or when plugging it in for the first time.", "step_imgs": ["https://cdn.instructables.com/FPI/3WER/JSL39G3L/FPI3WERJSL39G3L.LARGE.jpg", "https://cdn.instructables.com/FDG/6UZ7/JSL39HEV/FDG6UZ7JSL39HEV.LARGE.jpg"], "step_title": "Step 7: How to Use It"}], "channel": "Clocks"}, {"category": "Technology", "description": "PLA Spring Motor Demonstrator 2 is an updated Autodesk Fusion 360 design of my original PLA Spring Motor Demonstrator design of 5 years ago.\nThe original PLA Spring Motor Demonstrator was designed as a \"proof of concept\" tool to test whether a 3D printed PLA spring could power a gear train and move a vehicle. As a result of that successful test, I was able to design a number of 3D printed PLA spring powered vehicles.\nThis updated version has a 1 (drive) to 125 (driven) gear ratio in three gear stages and, as shown in the side by side comparison photograph, is slightly smaller than the original. And while not a requirement, I used Ultimaker \"Tough PLA\" for the pawl, spring and frames for additional strength and longevity.\nPLA Spring Motor Demonstrator 2 is a fairly easy print and assembly, and even though it was originally designed as a proof of concept tool, it is still a fun desktop conversation piece.\nAs usual, I probably forgot a file or two or who knows what else, so if you have any questions, please do not hesitate to point them out as I do make mistakes in plenty.\nDesigned using Autodesk Fusion 360, sliced using Cura 3.5.0, and printed in PLA and Tough PLA on an Ultimaker 2+ Extended and an Ultimaker 3 Extended.", "title": "PLA Spring Motor Demonstrator 2", "url": "https://www.instructables.com/id/PLA-Spring-Motor-Demonstrator-2/", "steps": [{"step": 1, "steps_text": "I printed the following parts at .15mm layer height:\nFour \"Bolt, Frame.stl\", 100% infill, Magenta PLA.\nOne \"Frame, Left.stl\", 50% infill, Black Tough PLA.\nOne \"Frame, Right.stl\", 50% infill, Black Tough PLA.\nThree \"Gear, Idler (50, 1.12).stl\", 20% infill, Magenta PLA.\nOne \"Gear, Pawl (50, 1.12).stl\", 20% infill, Magenta PLA.\nOne \"Knob and Axle.stl\", 100% infill, Magenta PLA.\nOne \"Pawl.stl\", 100% infill, Black Tough PLA.\nOne \"Spring.stl\", 100% infill, Black Tough PLA.\nTwo \"Wrench.stl\", 20% infill, Magenta PLA.\nPrior to assembly, I test fit and trimmed, filed, sanded, etc. all parts as necessary for smooth movement of moving surfaces, and tight fit for non moving surfaces. If you decide to make your own PLA Spring Motor Demonstrator 2, depending on the colors you chose, your printer model and your printer settings, more or less trimming, filing and/or sanding may be required. I carefully filed all edges that contacted the build plate to make absolutely certain that all build plate \"ooze\" was removed and that all edges were smooth. I used small jewelers files and plenty of patience to perform this step. I also used 6mm by 1 right hand threaded taps and dies to prepare the threaded parts prior to assembly", "step_imgs": [], "step_title": "Step 1: Print and Prepare the Parts."}, {"step": 2, "steps_text": "To assemble the spring motor, I performed the following steps:\nPlace \"Knob and Axle.stl\" into \"Frame, Right.stl\".\nPress \"Spring.stl\" onto \"Knob and Axle.stl\" while placing the spring retainer over the axle on \"Frame, Right.stl\".\nPress \"Pawl.stl\" onto \"Knob and Axle.stl\".\nPlace \"Gear, Pawl.stl\" onto \"Pawl.stl\".\nPlace the first \"Gear, Idler (50, 1.12).stl\" onto the axle on \"Frame, Right.stl\".\nPlace the second \"Gear, Idler (50, 1.12).stl\" onto \"Knob and Axle.stl\".\nPlace the third \"Gear, Idler (50, 1.12).stl\" onto the axle on \"Frame, Right.stl\".\nPlace \"Frame, Left.stl\" onto the spring motor assembly.\nSecured \"Frame, Left.stl\" to the spring motor assembly using two \"Bolt, Frame.stl\".", "step_imgs": ["https://cdn.instructables.com/FPE/N1YP/JSL38RTS/FPEN1YPJSL38RTS.LARGE.jpg", "https://cdn.instructables.com/F2A/O224/JSL38RTT/F2AO224JSL38RTT.LARGE.jpg", "https://cdn.instructables.com/FQV/5OOV/JSL38RTU/FQV5OOVJSL38RTU.LARGE.jpg", "https://cdn.instructables.com/FVS/A2A3/JSL38RTV/FVSA2A3JSL38RTV.LARGE.jpg", "https://cdn.instructables.com/FQE/0MB6/JSL38RTW/FQE0MB6JSL38RTW.LARGE.jpg", "https://cdn.instructables.com/FY2/OIXG/JSL38RTX/FY2OIXGJSL38RTX.LARGE.jpg", "https://cdn.instructables.com/F4U/TKOW/JSL38RTY/F4UTKOWJSL38RTY.LARGE.jpg", "https://cdn.instructables.com/FFD/KT9D/JSL38RTZ/FFDKT9DJSL38RTZ.LARGE.jpg", "https://cdn.instructables.com/FFS/TFTW/JSL38RU0/FFSTFTWJSL38RU0.LARGE.jpg", "https://cdn.instructables.com/FF7/RZW2/JSL38RU1/FF7RZW2JSL38RU1.LARGE.jpg", "https://cdn.instructables.com/F7Z/E9N1/JSL38RU5/F7ZE9N1JSL38RU5.LARGE.jpg", "https://cdn.instructables.com/F8M/X8F9/JSL38RU8/F8MX8F9JSL38RU8.LARGE.jpg"], "step_title": "Step 2: Assemble the Spring Motor."}, {"step": 3, "steps_text": "For the final assembly, I performed the following steps:\nInstalled two \"Bolt, Frame.stl\" into \"Frame, Right.stl\".\nSecured one \"Wrench.stl\" onto \"Frame, Right.stl\" using double sided tape.\nSecured the remaining \"Wrench.stl\" onto \"Frame, Left.stl\" using double sided tape.\nAnd that is how I printed and assembled PLA Spring Motor Demonstrator 2.\nHope you enjoy it!", "step_imgs": ["https://cdn.instructables.com/FVJ/TEIV/JSL38RUC/FVJTEIVJSL38RUC.LARGE.jpg", "https://cdn.instructables.com/FA0/S267/JSL38RUD/FA0S267JSL38RUD.LARGE.jpg", "https://cdn.instructables.com/FRM/NW8I/JSL38RUB/FRMNW8IJSL38RUB.LARGE.jpg", "https://cdn.instructables.com/FNN/F2GN/JSL38RUW/FNNF2GNJSL38RUW.LARGE.jpg", "https://cdn.instructables.com/FEU/I2PD/JSL38RVF/FEUI2PDJSL38RVF.LARGE.jpg", "https://cdn.instructables.com/FW2/KPME/JSL38RVY/FW2KPMEJSL38RVY.LARGE.jpg"], "step_title": "Step 3: Final Assembly."}], "channel": "3D Printing"}, {"category": "Technology", "description": "I know that I am not the first to make a word clock, using an Arduino. Still it was always something on my 'to do' list to make a Dutch one.\nFor a different project I've bought a 'colorduino / rainbowduino / funduino' a long time ago to test something. This gave me the inspiration to make an 8 x 8 word clock.\nI noticed now that I am also not te first to make a 8 x 8 word clock and not the first to make a Dutch word clock. I couldn't find an other Dutch 8 x 8 word clock, so still a first? ;)\nIt is an easy build and if you use my designs and a laser to cut the case it is just putting together like a kit.\n***I've made an other version using a neopixel matrix instead of the colorduino.", "title": "Dutch 8x8 Word Clock", "url": "https://www.instructables.com/id/Dutch-8x8-Word-Clock/", "steps": [{"step": 1, "steps_text": "Materials:\nColorduino (15,- aliexpress)\n5 M3 nuts and bolts (M3 x 12)\nAcrylic 3mm for the case\nTroglass Reverse (www.graveermaterialen.nl)\nTape\nTools:\nLasercutter (or makerspace)\nPliers\nComputer with Arduino IDE (www.arduino.cc)", "step_imgs": ["https://cdn.instructables.com/F7E/XFMB/JSL33UK8/F7EXFMBJSL33UK8.LARGE.jpg"], "step_title": "Step 1: You Will Need"}, {"step": 2, "steps_text": "It took some puzzling to get it all in and it would have been nicer to use only one letter per led, but I still like what I came up with. All the words are in one piece and both minutes and hours are spelled with separate letters.\nThe clock will have an accuracy of five minutes, what is normal for word clocks.\nI used Gravit Designer to design the clock.\nI added both the Gravit files and the PDF so you can tinker with it if you like.\nYou will need to cut this file from Troglass Reverse (or any other brand). You can make your own Troglass Reverse by spraying black paint on a piece of clear 3 mm acrylic.", "step_imgs": ["https://cdn.instructables.com/FHA/LALA/JSL33UK1/FHALALAJSL33UK1.LARGE.jpg", "https://cdn.instructables.com/FPB/M57K/JSL33UK2/FPBM57KJSL33UK2.LARGE.jpg"], "step_title": "Step 2: Design the Front"}, {"step": 3, "steps_text": "I have designed a case that holds everything perfectly in place and is hold together with just 5 bolts.\nCut this from 3 mm material. I have used black acrylic.\n(There where still a few small errors in the design when I've cut it, but they are fixed in the added designs.)", "step_imgs": ["https://cdn.instructables.com/FQ8/EY9Y/JSL33UK5/FQ8EY9YJSL33UK5.LARGE.jpg", "https://cdn.instructables.com/F90/G3AY/JSL33UK6/F90G3AYJSL33UK6.LARGE.jpg", "https://cdn.instructables.com/F3Z/AB41/JSL33UK7/F3ZAB41JSL33UK7.LARGE.jpg"], "step_title": "Step 3: Design the Case"}, {"step": 4, "steps_text": "Put the two front plates in one side panel.\nPut the front screen from the back in the front panels.\nUse one bolt to attach the side to the second front panel.\nStick the nut for the other side with some tape in place. (this will make your live so much easier when you are closing up)\nPut de 8 x 8 matrix on top of the colorduino.\nPut the colorduino behind the front screen.\nPut in the third panel in place to hold the colorduino.", "step_imgs": ["https://cdn.instructables.com/F6A/8BHA/JSL33UK9/F6A8BHAJSL33UK9.LARGE.jpg", "https://cdn.instructables.com/FQ7/PELS/JSL33UKA/FQ7PELSJSL33UKA.LARGE.jpg", "https://cdn.instructables.com/FQT/CNKO/JSL33UKG/FQTCNKOJSL33UKG.LARGE.jpg", "https://cdn.instructables.com/FTE/PQRA/JSL33UKH/FTEPQRAJSL33UKH.LARGE.jpg"], "step_title": "Step 4: Add the Screen"}, {"step": 5, "steps_text": "Hold the USB pcb in het opening in the fourth panel.\nTape the USB pcb in place.\nTape the nuts for the side panels in place.\nTape the nut for the top panel in place. (use a small nut for this)\nFold the cable so that it will fit.\nPut the back panels in the side, with the USB port at the opening in the side.\nPut the other side on.\nBolt the sides to the panels.\nPut the top panel on.\nBolt the top on. (I couldn't because my design was still a bit off)", "step_imgs": ["https://cdn.instructables.com/FF8/D4KY/JSL33UKK/FF8D4KYJSL33UKK.LARGE.jpg", "https://cdn.instructables.com/FOE/59PY/JSL33UKO/FOE59PYJSL33UKO.LARGE.jpg", "https://cdn.instructables.com/FBX/NMR3/JSL33UKR/FBXNMR3JSL33UKR.LARGE.jpg"], "step_title": "Step 5: Add the USB"}, {"step": 6, "steps_text": "Before you start your Arduino IDE, you should put the TimeLib.h and the Colorduino.h libraries in the libraries folder in your Arduino folder. It was a bit hard to find the TimeLib library because I was used to work with the Time.h library, but that one doesn't seem to work anymore from Arduino 1.6 and newer.\nYou can use the Sketch as I wrote it or you can change it how you like.\nThe clock doesn't have any buttons, so you have to set the time in the sketch. When you use the clock stand alone, you set the time by plugging it in at exactly 8 o'clock.\nAt the top of the sketch you can change the colors. You can also set the time at which the clock starts here.\nThe colors of the 'voor', 'over', 'half' en 'uur' text, you can change in the bottom of the sketch.", "step_imgs": ["https://cdn.instructables.com/FLU/66GY/JSL33Z1E/FLU66GYJSL33Z1E.LARGE.jpg", "https://cdn.instructables.com/FS7/XG56/JSL33Z32/FS7XG56JSL33Z32.LARGE.jpg"], "step_title": "Step 6: The Software"}, {"step": 7, "steps_text": "This build was so much easier than I was expecting. Even the code was easy after not doing any Arduino projects for a long time.\nMost difficult was to put in those pesky nuts and to find the right Time.h library.\nI'm still tuning in the colors, but you might do that better than me.\nHave fun!", "step_imgs": ["https://cdn.instructables.com/F6I/N6GV/JSL33UKY/F6IN6GVJSL33UKY.LARGE.jpg", "https://cdn.instructables.com/FVC/VMH8/JSL33UKZ/FVCVMH8JSL33UKZ.LARGE.jpg", "https://cdn.instructables.com/F5U/PDZ1/JSL33UL3/F5UPDZ1JSL33UL3.LARGE.jpg", "https://cdn.instructables.com/FIA/7TFL/JSL33UKS/FIA7TFLJSL33UKS.LARGE.jpg", "https://cdn.instructables.com/FPF/2WBN/JSL33UKT/FPF2WBNJSL33UKT.LARGE.jpg"], "step_title": "Step 7: It Works"}], "channel": "Arduino"}, {"category": "Technology", "description": "Good morning\n\nReplacing laptop battery is easy.\nBut then, you are left with the old battery, just begging for attention.\nIt's an untapped potential of 4 cell Lipo battery. It's not good enough for my laptop, but could still be used.\nAt the same time, there are these essential charging cables which end up in a pile at the bottom of your backpack together with the power bank.\nSo, using the old laptop battery AND solving the cable mess?\nWhy not? The solution is this Tidy Power Bank (the name might need some tweaks)\nThe outcome is cute, simple, useful and brings order to your life, which is a clear win in my book.\nFollow along this simple ible and you can make one for you.\nThis instructable is also a test bed for this new (to me) 2s USB charger. I have big plans for it in the future.\nFollow me on Instagram @medanilevin, @dosimplecarbon for more frequent and cool stuff.\nThank you.", "title": "Tidy Power Bank From Laptop Battery", "url": "https://www.instructables.com/id/Tidy-Power-Bank-From-Laptop-Battery/", "steps": [{"step": 1, "steps_text": "1. First of all you need a battery. Ideally it comes from an ultrabook (mine is from XPS 13) so it's flat and has a nice form factor. But the instructions will work for any two (at least) Lithium cells.\n2. 2s USB charger. So far I'm loving this thing. It plugs into USB port (5v) and charges 2 lithium batteries in series (8.4v max) which is kind of magic, and it's yours for just 2.42$.\n3. USB charging port with step down module. It can deliver 3A, so capable of fast charging. Or here.\n4. Storage pouch. Look at the inner dimensions in the link and use something that will suit your battery.\n5. Heat shrink. I'll just repeat my suggestion, get this bag for long time supply. Worth every cent.\n6. 2s BMS unit. Or here. It's responsible for keeping your battery from overcharging and discharging, small and important thingy.\nIn addition some cables and wrapping tape (this one is suited for batteries and electronics), but any office scotch will work.\n\nStandard tools are needed as well: soldering iron, hand tools, hot glue gun. Multimeter comes in handy (I'm using this tiny unit, saved me numerous times).\nYou'll also need an access to a 3d printer, for a really small part.", "step_imgs": [], "step_title": "Step 1: Things You'll Need"}, {"step": 2, "steps_text": "Take your battery and remove the wrapping material.\nBe careful, you don't want to pierce the aluminum walls of the cells.\nUse a sharp utility knife to lift the tip and slowly go from there.\nGo slow, the aluminum walls of the actual cell can go off together with the plastic wrapping.\nOnce the cells are exposed, clip them loose from the supporting pcb and wiring using cutters.\nThat's it, you'll need only the cells for the rest of this instructable.", "step_imgs": ["https://cdn.instructables.com/F97/8ES7/JSEZ6ZUL/F978ES7JSEZ6ZUL.LARGE.jpg", "https://cdn.instructables.com/FS7/JLX3/JSEZ6ZUM/FS7JLX3JSEZ6ZUM.LARGE.jpg", "https://cdn.instructables.com/FF3/X2PX/JSEZ6ZUN/FF3X2PXJSEZ6ZUN.LARGE.jpg", "https://cdn.instructables.com/FJ2/4TGC/JSEZ6ZUO/FJ24TGCJSEZ6ZUO.LARGE.jpg"], "step_title": "Step 2: Breaking Up the Battery"}, {"step": 3, "steps_text": "My battery included 4 individual cells.\nFor the power bank, you'll need voltage from 2 cells only - 2 cells in series or shortly 2s.\nSo, we will use the second pair to increase the capacity of the power bank and connect them in parallel.\nIn my case these are two bigger and two smaller cells.\nTake 1 big and 1 small cell and wrap each pair together.\nMake sure that the leads are aligned: + with +, and - with -. This is called parallel connection with 2 cells, or shortly 2p.\nOnce wrapped, solder the tabs together, and then add leads to the tabs.\nDifferent colors work best here... I had only red, so added a short black shrink to make the distinction.\nNow you have two batteries, each one is built from two cells in parallel.", "step_imgs": ["https://cdn.instructables.com/F82/L3RG/JSIUM9UW/F82L3RGJSIUM9UW.LARGE.jpg", "https://cdn.instructables.com/F9E/AM2S/JSEZ6ZUR/F9EAM2SJSEZ6ZUR.LARGE.jpg", "https://cdn.instructables.com/FSS/WA63/JSEZ6ZUS/FSSWA63JSEZ6ZUS.LARGE.jpg", "https://cdn.instructables.com/FAN/7285/JSEZ6ZUT/FAN7285JSEZ6ZUT.LARGE.jpg"], "step_title": "Step 3: Making Two 2p Batteries"}, {"step": 4, "steps_text": "Now it's time to make the bigger pack from the previously made 2p packs.\nTwo cells are stacked together, but this time with - to + alignment.\nWire one side of + and - together (from different cells).\nThe other pair will be your +/- output from the whole battery.\nNow the BMS unit.\nIt's short for Battery Management System. A fancy name to say that this tiny pcb keeps your batteries from over discharging and from over charging. And you really want to do this for lithium based cells.\nNow for the fun part - wiring all together.\nLooking at the photos:\n1. Solder the combined +/- to BM spot.\n2. Solder battery output + to B+\n3. Solder battery output - to B-\n4. Add wire lead (make it longer than needed) to B+/- - this will be the input for the charger.\n5. Add wire lead, also longer, to P+/- - this will be the output for the USB port.\n6. Shrink everything and tape it to the pack.\nMake sure you mark all the leads appropriately!!\nAnd, yes, you need to insert the shrink BEFORE you solder all the sides...\nOtherwise you need to de-solder and insert the shrink and solder again (ask me how I know... or just look at the pictures...)", "step_imgs": ["https://cdn.instructables.com/FOO/4HTE/JSEZ6ZUX/FOO4HTEJSEZ6ZUX.LARGE.jpg", "https://cdn.instructables.com/FG7/1MH6/JSEZ6ZUZ/FG71MH6JSEZ6ZUZ.LARGE.jpg", "https://cdn.instructables.com/F32/XVJ4/JSEZ6ZV0/F32XVJ4JSEZ6ZV0.LARGE.jpg", "https://cdn.instructables.com/FHJ/YWB1/JSEZ6ZV8/FHJYWB1JSEZ6ZV8.LARGE.jpg", "https://cdn.instructables.com/FUF/WIO8/JSEZ6ZVB/FUFWIO8JSEZ6ZVB.LARGE.jpg", "https://cdn.instructables.com/FHU/US0H/JSEZ6ZWF/FHUUS0HJSEZ6ZWF.LARGE.jpg"], "step_title": "Step 4: Combine the Batteries and Wire the BMS"}, {"step": 5, "steps_text": "The charger unit has these huge female plugs at the end.\nYou don't want them. Just clip them out.\nNow solder the charger board to the B+/- leads you made before.\nThis is also a good point to plug it in ad see if it's charging and that everything is wired as it should.", "step_imgs": ["https://cdn.instructables.com/F4A/QBVV/JSEZ6ZV1/F4AQBVVJSEZ6ZV1.LARGE.jpg", "https://cdn.instructables.com/FXY/MYKC/JSEZ6ZV5/FXYMYKCJSEZ6ZV5.LARGE.jpg", "https://cdn.instructables.com/FOY/SQ5H/JSEZ6ZV7/FOYSQ5HJSEZ6ZV7.LARGE.jpg", "https://cdn.instructables.com/F14/OU5B/JSEZ6ZXH/F14OU5BJSEZ6ZXH.LARGE.jpg", "https://cdn.instructables.com/FR5/5L39/JSEZ6ZV9/FR55L39JSEZ6ZV9.LARGE.jpg"], "step_title": "Step 5: Add the Charger"}, {"step": 6, "steps_text": "Now you should have the battery pack, with soldered and shrinked charger, and another lead for the output with nothing at the end (for now)\nDo a dry fit inside the box for everything.\nMake sure the charger lead is folding as it should.\nSee where you want your output to go.\nPrint the USB thingy, simple PLA is fine.\nDry fit it to the box. It's designed to go over the side curve.\nWhen you are happy with the results, cut the hole for it and hot glue in place.", "step_imgs": ["https://cdn.instructables.com/FYM/3SRS/JSEZ6ZXI/FYM3SRSJSEZ6ZXI.LARGE.jpg", "https://cdn.instructables.com/F5Q/3HKT/JSEZ6ZXJ/F5Q3HKTJSEZ6ZXJ.LARGE.jpg", "https://cdn.instructables.com/F66/CPBN/JSEZ6ZXK/F66CPBNJSEZ6ZXK.LARGE.jpg", "https://cdn.instructables.com/FNP/7375/JSEZ6ZXM/FNP7375JSEZ6ZXM.LARGE.jpg", "https://cdn.instructables.com/FFO/B44Z/JSEZ6ZXN/FFOB44ZJSEZ6ZXN.LARGE.jpg", "https://cdn.instructables.com/F0Y/6GEB/JSEZ6ZXO/F0Y6GEBJSEZ6ZXO.LARGE.jpg"], "step_title": "Step 6: 3D Print and Fit Everything Inside"}, {"step": 7, "steps_text": "First thing first.\nDe-solder the LED from this pcb. It will be permanently connected and you don't want anything to drain the battery.\nNext check the placement and see that you like the length of the wires.\nSolder the wires to the appropriate tabs on the pcb.\nSlide it into the 3D printed thingy and secure it with hot glue.", "step_imgs": ["https://cdn.instructables.com/FN6/826P/JSEZ6ZXL/FN6826PJSEZ6ZXL.LARGE.jpg", "https://cdn.instructables.com/F0K/WOW6/JSEZ6ZXP/F0KWOW6JSEZ6ZXP.LARGE.jpg", "https://cdn.instructables.com/F59/JGI0/JSEZ6ZZI/F59JGI0JSEZ6ZZI.LARGE.jpg", "https://cdn.instructables.com/F6W/P4QU/JSEZ6ZZY/F6WP4QUJSEZ6ZZY.LARGE.jpg", "https://cdn.instructables.com/FZZ/V24O/JSEZ700N/FZZV24OJSEZ700N.LARGE.jpg"], "step_title": "Step 7: Finish With USB Output"}, {"step": 8, "steps_text": "I've put several cables which are in daily use (micro usb, usbC...) into the meshed pocket inside the box.\nIt's a small space, so make sure you don't over stuff it. Basically use shorter cables.\nThat's it.\nCharge whatever you want through the USB output.\nOnce empty, open and use the charger to recharge the inside battery.\nEnjoy,\nDani\nFollow me on Instagram @medanilevin, @dosimplecarbon for more frequent and cool stuff.\nThank you.", "step_imgs": ["https://cdn.instructables.com/FW0/00WX/JSEZ700P/FW000WXJSEZ700P.LARGE.jpg", "https://cdn.instructables.com/F3Y/VLV5/JSEZ700Q/F3YVLV5JSEZ700Q.LARGE.jpg", "https://cdn.instructables.com/F2T/H6F1/JSEZ700S/F2TH6F1JSEZ700S.LARGE.jpg", "https://cdn.instructables.com/FF2/Q4YD/JSEZ700W/FF2Q4YDJSEZ700W.LARGE.jpg", "https://cdn.instructables.com/F31/VD97/JSEZ700O/F31VD97JSEZ700O.LARGE.jpg"], "step_title": "Step 8: Put the Cables Inside - You Are Done!"}], "channel": "Reuse"}, {"category": "Technology", "description": "Hi everyone, I'm happy to show you the second version of my WiFi smart strip project, now with the integration with Home Assistant. You can found the first version on my instructable profile if you want to see it.\nThere are a lot of improvement in this new design :\nInstead of using three different boards (5V power supply, NodeMCU and 4-relay-board) with jumper between them, now there is a PCB. We save a lot of space and connections are stronger\nNow we can see wich outlet is powered on thanks to 3 different led, one for each outlet.\nWe can also control the 3 outlets with phisycal push button, not only with voice.\nThere is also a temperature sensor, that we can choose to use for the internal smart strip temperature or for the room temperature where the smart strip is located. (In my case I chose the second option)\nThanks to Home Assistant we can set up a lot of automations that involves our strip.\nAfter powered on the strip for the first time, you will be able to program it via ota (wireless), so you will not need anymore to connect your Esp12f to the USB port of your pc.\nLike the previous version we control only 3 of the 4 outlets in the \"smart\" way. The last outlets is directly connected to the 220V.\nPay attention with 220V, if you don't know what are you doing you can seriously risk your life!\nI am not responsible for anything!", "title": "Wifi Smart Strip 2.0", "url": "https://www.instructables.com/id/Wifi-Smart-Strip-20/", "steps": [{"step": 1, "steps_text": "These are all the components we are going to use:\n1x Hi-Link 5V power supply\n1x little 2 screw terminal (for AC input)\n3x 3 screw termianl (relay output)\n2x 100uF Electrolytic Capacitor\n1x AMS117 3.3V regulator\n3x push button\n1x ESP12F\n3x 1K Ohm resistor\n3x 5K Ohm resistor\n3x BC547 NPN transistor\n3x PC817 Optocoupler\n3x Coloured led\n3x IN4007 diode\n3x 5V relay\n1x DHT11 temperature sensor\nWelder\nElectric cables\nCables for leds and push buttons(better some thicker cables to avoid electrical disturbances)\nJumper\nBreadboard\nA USB to Serial converter\n1x Mammut Clamp\nDrill\nHot glue\nObviously everything else I used in the first version of the strip\nThere are a lot of components but this is not as difficult to assembly as it seems!", "step_imgs": [], "step_title": "Step 1: Necessary Materials"}, {"step": 2, "steps_text": "The first thing you need is to program the esp12f before soldering it to the pcb.\nThere are a lot of breakout boards really useful for programming this board, so you can choose wich one you prefer, but fortunately I had some very thin jumper that could be inserted in the small hole of the esp12f pins. So they are able to make the necessary \"contact\" with pins of the board.\nNow you have to connect the board with the USB to Serial converter in this way:\nEsp12f -------- Usb to Serial\nVCC --> 3.3V\nCH-PD --> 3.3V\nGND --> GND\nGPIO15 --> GND\nGPIO0 --> GND\nTX --> RX\nRX --> TX\nNow you can plug your USB to Serial converter in the pc and you should be able to see the new serial port through the Arduino Ide.\nThen I suggest you to join this great Facebook Community for ESP8266 for the Smart Home to download the firmware. Obviously is 100% free. There you can find the github project with the code and also with the configuration for the integration with Home-Assistant.\nhttps://www.facebook.com/groups/351472505248816/\nAfter downloading the firmware you have to run the jar tool that will create the configuration file to upload on the esp12f. In the tool you have to setup your WiFi SSID and password, your mqtt broker, username, and password.\nThen you have to select all the other things that you can see in the pictures, obviously with the same pin settings. However, everything is explained in the Wiki.\nAfter the configuration file is generated, open SmartHome_v50beta5nc.ino in the Arduino IDE. Then select the type of your board (in my case everything worked with \"NodeMCU 1.0 esp12e\").\nYou have to do one last thing if you want to use the DHT11 temperature sensor instead of the DHT22. You have to go to routine_termostato.ino and change the line DHTTYPE DHT22 with DHTTYPE DHT11. Then save and upload the code.\nYou are done! Now we can solder everything on the pcb.", "step_imgs": ["https://cdn.instructables.com/FM1/P5LR/JSL33PE1/FM1P5LRJSL33PE1.LARGE.jpg", "https://cdn.instructables.com/FAH/0LUP/JSL33TG6/FAH0LUPJSL33TG6.LARGE.jpg", "https://cdn.instructables.com/FNI/UFRZ/JSL33TG7/FNIUFRZJSL33TG7.LARGE.jpg", "https://cdn.instructables.com/F8T/VJA4/JSL33TG8/F8TVJA4JSL33TG8.LARGE.jpg"], "step_title": "Step 2: Program the Esp12f"}, {"step": 3, "steps_text": "Before starting, obviously you can modify the pcb, if you want. For example you can choose different type of screw terminal if for some reasons you don't like mine!\nHere you can download the gerber file of the pcb:\nhttps://www.dropbox.com/s/lyl27vyue1t1v3j/Gerber_d...\nWell, after printed it we can start to solder.\nMy skills are not so developed, and you can easily see with my esp12f soldering, so I hope you can do better than me! I modified a bit the original pcb I used because there were some errors, but I didn't want to make print it again. There is only one thing I couldn't change, the transistors direction. You have to solder them in the opposite way compared to what is designed on to the pcb (as you can see in the previous image).\nThe value of resistors below the esp12f is of 5K (they are pulldown resistors for the push button), and the value of the resistors below the optocouplers is of 1k (they are connected to the bases of the transistors).\nPay attention to everything you are going to solder, especially the two electrolytic capacitors that has polarity, so if you solder them wrong they could explode. Also the optocoupler and diodes need to be soldered in the right way!\nInstead of soldering push buttons, leds and the temperature sensor directly to the pcb, connect them to wires and then solder wires to the printed circuit. For push buttons you only need to solder the two higher pins. The other two are useless. (The longer leg of the led must be connected to the higher pin, the shorter leg to the lower one and, for the push buttons, the two leg that must be connected are those ones that are closer to each other).\nIn this way you can place leds, push buttons and dht11 (or dht22) everywhere you want in the case of the strip. In the Intro image you can see where I choose to put them.\nNow we can drill all the holes where we want for these components!", "step_imgs": ["https://cdn.instructables.com/FF4/EXDT/JSIUSEPL/FF4EXDTJSIUSEPL.LARGE.jpg"], "step_title": "Step 3: Solder Everything to the Pcb"}, {"step": 4, "steps_text": "There is not a lot to say, decide where you want to put the sensor, push buttons and led and drill the holes!\nMine are not perfect and not even aligned, so, again, do it better than me :)", "step_imgs": ["https://cdn.instructables.com/FAL/4IWX/JSIUSEQH/FAL4IWXJSIUSEQH.LARGE.jpg", "https://cdn.instructables.com/FR2/L1TT/JSIUSEQB/FR2L1TTJSIUSEQB.LARGE.jpg"], "step_title": "Step 4: Drill the Strip"}, {"step": 5, "steps_text": "Before inserting the pcb in the strip, I suggest to already connect the electric wires to the AC input and to the relay output, as you can see in the image of two steps ago.\nNow make all the connections between the board and the four outlets. If you don't know how to do that you can read and see images on my instructable of the first version of this strip. Connections are the same of that images!\nAfter inserting temperature sensor, push buttons and leds, secure their cables with hot glue and try to isolate everything in order to avoid electrical distrubances.\nNow you can close the strip, and connect it to the 220V. If you followed well this guide averything should work without any problem!", "step_imgs": ["https://cdn.instructables.com/FTP/BODI/JSIUSEQC/FTPBODIJSIUSEQC.LARGE.jpg"], "step_title": "Step 5: Assembly the Smart Strip"}, {"step": 6, "steps_text": "You should be able to see now the smart strip ip address. If you don't know how to do that, download the Fing application, scan the WiFi network and you should be able to recognize the right ip address.\nType that ip in your browser and you will be connected the esp12f web server.\nThere you can control indipendently all the three outlets, but not the fourth one.\nThat one is directly connected to 220V!\nNow, in the wiki of the project (from where you downloaded the firmware) you can easily find all the code to add to your configuration.yaml for Home Assistant.\nIn the wiki, in the down-left corner, you had to select \"Interruttore\". Then you can copy and paste the code in to your configuration.yaml three times beacause you have to control three outlets. Pay attention that you have to change the number in \"interruttore/1\" and \"interruttore/1/ack\" with 2 and then with 3 in order to have three different entities! In availabilty_topic you have to delete all the numbers and write the MAC address of you smart strip, without capital letters and without \":\" .\nThen for the temperature sensor select \"Termostato\" and copy only the first two blocks of code, in order to measure temperature and humidity. Remember to change the availability topic.\nSave the file, check the configurations and if everything is ok you can reboot Home Assistant.\nNow you should be able to control the three outlets and monitor temperature and humidity of the room (or of the internal strip if you soldered the sensor directly to the pcb)!", "step_imgs": [], "step_title": "Step 6: Setting Up With Home Assistant"}, {"step": 7, "steps_text": "Congratulations, now you can involve your smart strip in every automations you want through Home Assistant. Then, if you want to control it through voice, you can also connect Home Assistant with Alexa or Google Assistant and your done!\nEnjoy! :)", "step_imgs": [], "step_title": "Step 7: Enjoy!"}], "channel": "Microcontrollers"}, {"category": "Technology", "description": "Hey there! This is my first Instructable. The Quiz buzzer plans kicked off when my colleague, who also hosts a game show asked for people who could build a Quiz Buzzer. I took upon this project and with the help of few friends (Blaze and Errol) and Arduino i was able to accomplish this. Currently, this buzzer supports 2 players but can be easily extended to upto 9 Players by modifying the code and adding more Pushbuttons. It cost me about INR 1500 ($21) and with all the details, parts and plans i took about 3 hours to get it done.", "title": "Arduino Quiz Buzzer", "url": "https://www.instructables.com/id/Arduino-Quiz-Buzzer/", "steps": [{"step": 1, "steps_text": "You will need\n* 1 X Arduino Uno\n* 1 X RED LED Matrix Display with MAX 7219 Driver\n* 3 X 220 Ohm Resistors\n* 1 X Perf Board\n* 3 X Spring Push Speaker Terminal\n* 3 X Push Button\n* 15 meter twisted wire\n* Project Box\n* 10 X M3 Mounting Screw and Nuts", "step_imgs": ["https://cdn.instructables.com/FEW/9NU8/JRQOMDN2/FEW9NU8JRQOMDN2.LARGE.jpg", "https://cdn.instructables.com/FAX/Y7V5/JRQOMDNI/FAXY7V5JRQOMDNI.LARGE.jpg", "https://cdn.instructables.com/F1E/85W5/JRQOMDMN/F1E85W5JRQOMDMN.LARGE.jpg", "https://cdn.instructables.com/FPS/F69D/JRQOO56C/FPSF69DJRQOO56C.LARGE.jpg", "https://cdn.instructables.com/FY6/B81B/JRQOO567/FY6B81BJRQOO567.LARGE.jpg", "https://cdn.instructables.com/F55/S8F3/JRQOO569/F55S8F3JRQOO569.LARGE.jpg", "https://cdn.instructables.com/FLO/NJMV/JRQOO568/FLONJMVJRQOO568.LARGE.jpg", "https://cdn.instructables.com/FIZ/IMUP/JRQOMDMM/FIZIMUPJRQOMDMM.LARGE.jpg"], "step_title": "Step 1: Gather All the Materials"}, {"step": 2, "steps_text": "Solder the Resistors and Wires on the Perf Board according to the schematic. Also, solder wires to the LED Matrix .", "step_imgs": ["https://cdn.instructables.com/F7M/UXT9/JRQOMA7Q/F7MUXT9JRQOMA7Q.LARGE.jpg", "https://cdn.instructables.com/FT8/MJH1/JRQOMA8D/FT8MJH1JRQOMA8D.LARGE.jpg", "https://cdn.instructables.com/FDX/5BJK/JSL33TA5/FDX5BJKJSL33TA5.LARGE.jpg"], "step_title": "Step 2: The Circuit"}, {"step": 3, "steps_text": "Here I'm going to use a 7\" length of PVC Pipe with two end caps on either side. A hole is drilled into one of the endcaps to secure the pushbutton. Additionally hot glue is used after soldering the wires to secure the contacts. On the other endcap a hole is drilled to pass the 5 meter long wire, i made a knot so that the contacts don't come off when the wires are pulled. The end of the wired are stripped off the insulation and coated with lead solder.", "step_imgs": ["https://cdn.instructables.com/FIH/X1EV/JRQOMAIU/FIHX1EVJRQOMAIU.LARGE.jpg", "https://cdn.instructables.com/FDG/M4GA/JRQOMAGN/FDGM4GAJRQOMAGN.LARGE.jpg", "https://cdn.instructables.com/FJ9/9SIB/JRQOMAJT/FJ99SIBJRQOMAJT.LARGE.jpg", "https://cdn.instructables.com/FFM/S4JE/JRQOMA7S/FFMS4JEJRQOMA7S.LARGE.jpg", "https://cdn.instructables.com/F2B/CFZT/JRQOMAK7/F2BCFZTJRQOMAK7.LARGE.jpg"], "step_title": "Step 3: Make the Handheld Pushbutton"}, {"step": 4, "steps_text": "Connect the Arduino Uno to the computer and upload the code.", "step_imgs": [], "step_title": "Step 4: Upload the Code"}, {"step": 5, "steps_text": "I bought an empty Battery Eliminator Box and spray painted it black. Drilled holes to attach the speaker terminals and two vertical slits to attach the LED matrix display. The front portion has one speaker terminal terminal which will be used to reset the buzzer and the back contains two terminals for the contestants", "step_imgs": ["https://cdn.instructables.com/FZF/AKSV/JSIUOGRL/FZFAKSVJSIUOGRL.LARGE.jpg", "https://cdn.instructables.com/F6U/KP27/JRQOMAC8/F6UKP27JRQOMAC8.LARGE.jpg", "https://cdn.instructables.com/F5H/7F8N/JRQOMAA2/F5H7F8NJRQOMAA2.LARGE.jpg", "https://cdn.instructables.com/FEB/2XD5/JRQOMAFO/FEB2XD5JRQOMAFO.LARGE.jpg"], "step_title": "Step 5: Prepare the Project Box"}, {"step": 6, "steps_text": "Separate the LED Matrix from the driver board, now use the two vertical slits on the project box (shown in the previous step) to pass the driver board from the inside and lock the LED matrix into place.", "step_imgs": ["https://cdn.instructables.com/FZT/R8S3/JRQOMABL/FZTR8S3JRQOMABL.LARGE.jpg", "https://cdn.instructables.com/FNR/KMGS/JRQOMAC7/FNRKMGSJRQOMAC7.LARGE.jpg", "https://cdn.instructables.com/FOF/E6DH/JRQOMACA/FOFE6DHJRQOMACA.LARGE.jpg"], "step_title": "Step 6: Assemble the LED Matrix"}, {"step": 7, "steps_text": "Attach the Arduino Uno and the Perfboard to the project box using Nuts and bolts.Solder the wires to the Speaker terminals and secure all connections with hot glue.", "step_imgs": ["https://cdn.instructables.com/F9L/U92I/JRQOMA8X/F9LU92IJRQOMA8X.LARGE.jpg", "https://cdn.instructables.com/F5V/5HI7/JRQOMAAD/F5V5HI7JRQOMAAD.LARGE.jpg", "https://cdn.instructables.com/FK5/AV89/JRQOMAL8/FK5AV89JRQOMAL8.LARGE.jpg", "https://cdn.instructables.com/FOV/792O/JRQOMALQ/FOV792OJRQOMALQ.LARGE.jpg", "https://cdn.instructables.com/FDL/M6CV/JRQOMAMV/FDLM6CVJRQOMAMV.LARGE.jpg", "https://cdn.instructables.com/F0E/MV03/JRQOMAMW/F0EMV03JRQOMAMW.LARGE.jpg"], "step_title": "Step 7: Final Assembly"}, {"step": 8, "steps_text": "Use a 5V adapter to power the device, i modified an old cellphone charger for this project. Connect the Handheld Pushbutton to the Quiz Buzzer and test the Reset and Player buttons. And we are done!!", "step_imgs": ["https://cdn.instructables.com/FWJ/7LUI/JRQOMAD9/FWJ7LUIJRQOMAD9.LARGE.jpg", "https://cdn.instructables.com/FZW/XBO5/JRQOMAEP/FZWXBO5JRQOMAEP.LARGE.jpg"], "step_title": "Step 8: Testing"}], "channel": "Arduino"}, {"category": "Technology", "description": "I have a job in the construction industry where I am frequently in places where I need my laptop but there is nowhere to set it down to use it. Luckily there is already a manufactured solution for this issue in the form of a folding magnetic mount for laptops. You can find it on Amazon for about $150. If you've read any of my other 'ibles then you'll know that this just will not do. I was looking to recreate this device for as little dough as possible.\nSPOLIER: I did it for $55.00.", "title": "Magnetic Laptop Mount", "url": "https://www.instructables.com/id/Magnetic-Laptop-Mount/", "steps": [{"step": 1, "steps_text": "The commercially available device is made from High Density Polyethylene (HDPE). You can buy the stuff from Amazon for about $20 a square foot. But you know what is also made of HDPE and is a little cheaper? Cutting Boards! I got a 30\" x 18\" cutting board 1/2\" thick from Amazon for $25.00. I also needed some super strong cup magnets. I actually had 10 of them already but they cost $20 for a pack of ten. Here is a complete list:\nMaterial\nBig 'ol Cutting Board\nFour Cup Magnets\nPiano Hinge\nTee Nuts\n10-24 3/4\" Bolts (4 of)\nWood Screws\nTools\nTable Saw\nMiter Saw\nDrill Press\nDrill Bits\nVelcro (optional)", "step_imgs": ["https://cdn.instructables.com/F85/CRCE/JSITP6YJ/F85CRCEJSITP6YJ.LARGE.jpg", "https://cdn.instructables.com/F3Q/E1TX/JSITP73P/F3QE1TXJSITP73P.LARGE.jpg"], "step_title": "Step 1: Material and Tools"}, {"step": 2, "steps_text": "This stuff cuts like butter with a table saw and a normal drill bit. I cut out the pieces per my plans and laid out the locations of the holes. When using either the saw or the drill press just take your time. If the HDPE gets too hot it will start to melt. After cutting and layout I dry fit the pieces.", "step_imgs": ["https://cdn.instructables.com/FKW/FP1G/JSITP7ZB/FKWFP1GJSITP7ZB.LARGE.jpg", "https://cdn.instructables.com/F1V/XIYV/JSITP7ZA/F1VXIYVJSITP7ZA.LARGE.jpg", "https://cdn.instructables.com/FG6/5J5M/JSITP7WR/FG65J5MJSITP7WR.LARGE.jpg", "https://cdn.instructables.com/FLQ/5IF3/JSITP74E/FLQ5IF3JSITP74E.LARGE.jpg", "https://cdn.instructables.com/F66/5HX8/JSITP6ZU/F665HX8JSITP6ZU.LARGE.jpg", "https://cdn.instructables.com/FUC/V5E5/JSITP79S/FUCV5E5JSITP79S.LARGE.jpg"], "step_title": "Step 2: Cutting and Layout"}, {"step": 3, "steps_text": "Finding a type of glue to bond HDPE is near impossible for cheap. You can use a torch to melt the surface of both pieces and stick them together that way which is actually pretty good for large pieces however it makes smaller pieces more brittle which I found out. So the melting method was a no-go. I decide to just mechanically fasten all the pieces with screws and bolts. To my surprise I found that the HDPE responds to screws exactly the same way wood does. This was a game changer, because woodworking I can do.", "step_imgs": ["https://cdn.instructables.com/FNT/Q3GF/JSITP79N/FNTQ3GFJSITP79N.LARGE.jpg", "https://cdn.instructables.com/F28/CW6W/JSITP75S/F28CW6WJSITP75S.LARGE.jpg", "https://cdn.instructables.com/FHV/K600/JSITP79Q/FHVK600JSITP79Q.LARGE.jpg"], "step_title": "Step 3: Bonding"}, {"step": 4, "steps_text": "Like when you work with small pieces of hardwood you want to pre-drill the screw holes. For most of the holes it only took a small 1/16\" bit. For the Tee Nuts it took a 5/16\" bit. A tee nut is a barbed nut you can insert into wood or plastic and then run a bolt through. These tee nuts are what I used to attach the magnets. I used a forstner bit to countersink the tee nuts so they would be flush with the surface of the board. I used a 1 3/4\" hole saw to create a makeshift handle and to take some weight out.", "step_imgs": ["https://cdn.instructables.com/F78/V6EB/JSITP7CO/F78V6EBJSITP7CO.LARGE.jpg", "https://cdn.instructables.com/F3W/6Z6R/JSITP79X/F3W6Z6RJSITP79X.LARGE.jpg", "https://cdn.instructables.com/FMY/9Z09/JSITP7A0/FMY9Z09JSITP7A0.LARGE.jpg", "https://cdn.instructables.com/F6Q/3Y9C/JSITP7E0/F6Q3Y9CJSITP7E0.LARGE.jpg", "https://cdn.instructables.com/FJ8/XQW0/JSITP7BC/FJ8XQW0JSITP7BC.LARGE.jpg", "https://cdn.instructables.com/FGB/YBZM/JSITP7FC/FGBYBZMJSITP7FC.LARGE.jpg"], "step_title": "Step 4: Drilling"}, {"step": 5, "steps_text": "I hand tightened all of the screws and bolts to avoid striping out any of the plastic. I did screw up on one bolt and over tightened it which cracked one of the cup magnets. Not a big deal, it still works. The piano hinge was a little tricky because of how small it is. You can add a pad of velcro if you have any reservations about the laptop sliding off.", "step_imgs": ["https://cdn.instructables.com/FRS/HMMP/JSITP7FB/FRSHMMPJSITP7FB.LARGE.jpg", "https://cdn.instructables.com/F3V/Y59Y/JSITP7FD/F3VY59YJSITP7FD.LARGE.jpg", "https://cdn.instructables.com/FQ3/HC2I/JSITP7FG/FQ3HC2IJSITP7FG.LARGE.jpg", "https://cdn.instructables.com/FOJ/1PRD/JSITP7FJ/FOJ1PRDJSITP7FJ.LARGE.jpg", "https://cdn.instructables.com/F64/PFE6/JSITP7GT/F64PFE6JSITP7GT.LARGE.jpg", "https://cdn.instructables.com/FFH/2BQV/JSITP7JF/FFH2BQVJSITP7JF.LARGE.jpg", "https://cdn.instructables.com/F23/8URQ/JSITP7MQ/F238URQJSITP7MQ.LARGE.jpg"], "step_title": "Step 5: Assembly"}, {"step": 6, "steps_text": "The magnets are rated for a 97 lbs (44 kg) vertical pull each...EACH! I tested the device on the back of one of my tool boxes. Even though the tool box is pretty thin metal it stuck like a champ. This thing its not moving unless someone really tries to move it. The point is to have somewhere to place my laptop while I take down some information, not to provide anyone with a spot to rest their elbows. I have every confidence that it will support my laptop with no issues. I am concerned that when i'm on a roof with this thing in the desert sun it may get a little \"flexible\" but I will just be careful to limit the time in the sun.\nThe whole thing fits in my laptop bag like the commercially available one, was much cheaper, and functions as planned and only took about 4 hours to make. :)", "step_imgs": ["https://cdn.instructables.com/F2P/LB3A/JSITP7JH/F2PLB3AJSITP7JH.LARGE.jpg", "https://cdn.instructables.com/FJX/HJMC/JSITP7MA/FJXHJMCJSITP7MA.LARGE.jpg", "https://cdn.instructables.com/FHB/64P5/JSITP7M5/FHB64P5JSITP7M5.LARGE.jpg", "https://cdn.instructables.com/F9J/6J11/JSITP7M7/F9J6J11JSITP7M7.LARGE.jpg", "https://cdn.instructables.com/FFF/I1Q1/JSL33K0K/FFFI1Q1JSL33K0K.LARGE.jpg", "https://cdn.instructables.com/F3Q/A9JA/JSL33K0P/F3QA9JAJSL33K0P.LARGE.jpg", "https://cdn.instructables.com/F40/Q6GP/JSL33K0G/F40Q6GPJSL33K0G.LARGE.jpg"], "step_title": "Step 6: Testing"}], "channel": "Laptops"}, {"category": "Technology", "description": "The Anet A8 is an extremely popular 3D printer because of its affordability and modifiability. This Printer comes usually as a kit which is easy and fun to put together. Its design is based on the Prusa i3 printer as a cheaper alternative and as such an excellent kit for amateurs who are eager to learn about FDM printing. Many upgrades are readily available on the market as DIY projects or ready to buy. The print quality is somewhat OK, which depends on the actual requirements. I\u2019m using this machine to create prototypes for many of my projects which unfortunately sometimes not quite reach the necessary quality for the purpose. Many of my original printers\u2019 parts have been already replaced to archive that little bit higher quality level.\nIn this tutorial I\u2019ll show you how to assemble the latest upgrade for my Anet A8. The I-Bot uses the BONDTECH BMG extruder in conjunction with a E3D V6 All-Metal HotEnd. As drive is a MOONS NEMA17 MS17HD5P4100 stepper motor used and the cooling fans are two NOCTUA NF-A4x10 FLX.\nThere\u2019re sure some cheaper alternatives out there to realize this product, but the goal here is to use high quality components to prevent eventual possible quality contamination of the final product.", "title": "I-Bot Extruder", "url": "https://www.instructables.com/id/I-Bot-Extruder/", "steps": [{"step": 1, "steps_text": "Here is the list with the parts necessary to build the I-Bot Extruder:\n1 set - of printed plastic parts\nyou can get the design files here\nprint them yourself or have somebody do it for you\n1 pcs - BONDTECH BMG\n2 pcs - 40x40x10 NOCTURA Fan NF-A4x10 FLX\n1 pcs - 2-Phase stepper motor MOONS MS17HD5P4100\n4 pcs - Drylin bearings IGUS RJ4JP-01-08\n1 pcs - E3D V6 All-Metal HotEnd\n3 pcs - 8 mm cable clip\nI got those out of an assortment which I bought at Harbor Fright\n3 pcs - Tapered Heat-Set Inserts for Plastic\nBrass, M2 x 0.40 mm Thread Size, 4.800 mm Installed Length - McMASTER CARR\n18 pcs - Tapered Heat-Set Inserts for Plastic\nBrass, M2.5 x 0.45 mm Thread Size, 3.4 mm Installed Length - McMASTER CARR\n8 pcs - Tapered Heat-Set Inserts for Plastic\nBrass, M3 x 0.50 mm Thread Size, 3.800 mm Installed Length - McMASTER CARR\nAll screws I used came out of this two boxes from AMAZON: AssortmentA and AssortmentB\n3 pcs - M2 x 10mm socket head screw\n6 pcs - M2.5 x 10mm socket head screw\n12 pcs - M2.5 x 16mm socket head screw\n6 pcs - M3 x 20mm socket head screw\n2 pcs - M3 x 30mm socket head screw\n3 pcs - M2 washers\n24 pcs - M3 washers\nMake sure the plastic parts are cleaned up as good as possible if necessary to ensure proper fitting. I used PETG as printing material because of its mechanical properties. The printer settings probably differ from device to device, I used the following settings:\nbed temperature 60\u00b0 C / 70\u00b0 C for the first layer\nprint temperature 235\u00b0 C / 240\u00b0 C for the first layer\nslicer software is Slic3R\nnozzle 0.4 mm\nprint bed - glass with BuildTak", "step_imgs": ["https://cdn.instructables.com/FYE/FOL3/JSKOVZFE/FYEFOL3JSKOVZFE.LARGE.jpg", "https://cdn.instructables.com/FR0/52JU/JSKOW0U3/FR052JUJSKOW0U3.LARGE.jpg", "https://cdn.instructables.com/FQY/BP70/JSKOW0U4/FQYBP70JSKOW0U4.LARGE.jpg"], "step_title": "Step 1: The Parts..."}, {"step": 2, "steps_text": "The E3D V6 ALL-METAL hot end has a heat sink which need to be cooled for proper working of the device. This is done with a snap on air duct which consists of the following parts:\n1 pcs - AirDuct A1 Cover\n1 pcs - AirDuct_A1\n1 pcs - NF-A4x10 FLX Fan\n4 pcs - M3 x 20mm socket head screw\n4 pcs - M3 washers\n4 pcs - Tapered Heat-Set Inserts for Plastic\nBrass, M3 x 0.50 mm Thread Size, 3.800 mm Installed Length\nPlease make sure the fan is mounted in such way that the air is blown into the air duct. The most fans have some kind of markings on the side to show the direction of flow. If there is no such marking, the most fans blowing air from the open end to the side where the fan motor is mounted. In cases where this is not clear the flow orientation must be tested by powering up the fan briefly.\nThe four Heat-Set inserts have to be installed in the holes of the AirDuct_A1 part from the side where the fan is going to be mounted.\nI'll not going into details of how to install those inserts in this tutorial, but here is a good one from Randy Cox on his YouTube channel.\nThe screws with washers are inserted from the side of the \"AirDuct_A1 Cover\" through the holes in the fan into the thread inserts.\nBe careful tightening the screws because the thread inserts don't withstand a lot of torque.", "step_imgs": ["https://cdn.instructables.com/F4R/SB7F/JSKOVZT5/F4RSB7FJSKOVZT5.LARGE.jpg", "https://cdn.instructables.com/F48/DMOS/JSKOVZVT/F48DMOSJSKOVZVT.LARGE.jpg", "https://cdn.instructables.com/FCX/T68W/JSKOW0GY/FCXT68WJSKOW0GY.LARGE.jpg", "https://cdn.instructables.com/FNE/Z58S/JSKOW0GZ/FNEZ58SJSKOW0GZ.LARGE.jpg"], "step_title": "Step 2: Heat Sink Cooling..."}, {"step": 3, "steps_text": "Small cable clips are used to help with the wiring of the device. Here are the parts for that installation:\n1 pcs - Extruder Bracket M002\n3 pcs - 8 mm cable clip\n3 pcs - M2 x 10mm socket head screw\n3 pcs - M2 washers\n3 pcs - Tapered Heat-Set Inserts for Plastic\nBrass, M2 x 0.40 mm Thread Size, 4.800 mm Installed Length\nI got my cable clips out of an assortment box which is probably not necessary the only source of those. A ruler can be used to identify the correct size of the clips as shown in the picture. Those clips are not necessary for a correct functioning of the extruder, the wiring can be don different ways.\nThe Heat-Set inserts have to be installed into the correct holes, see picture. The 3 cable clips are mounted using the M2 screws with washers.\nBe careful tightening the screws because the thread inserts don't withstand a lot of torque.", "step_imgs": ["https://cdn.instructables.com/FCG/ICJA/JSKOW0UU/FCGICJAJSKOW0UU.LARGE.jpg", "https://cdn.instructables.com/FGR/NNXG/JSKOW0V0/FGRNNXGJSKOW0V0.LARGE.jpg", "https://cdn.instructables.com/FTC/4KDH/JSKOW0UM/FTC4KDHJSKOW0UM.LARGE.jpg"], "step_title": "Step 3: Extruder Bracket Preparation..."}, {"step": 4, "steps_text": "Before we can proceed with anything else, the Bearing-Bracket Base has to be mounted to the Extruder-Bracket. Those parts will fit only one way together, but check the pictures to prevent eventually confusion with the mounting direction. The parts are used for this step are as follows:\n1 pcs - Extruder Bracket M002 with or without the cable clips installed\n1 pcs - BB-Base\n6 pcs - M2.5 x 10mm socket head screw\n6 pcs - M3 washer\n18 pcs Tapered Heat-Set Inserts for Plastic\nBrass, M2.5 x 0.45 mm Thread Size, 3.4 mm Installed Length\nInsert all 18 heat-set inserts from the back side of the BB-Base.\nI would like to direct you at this point to the video from Randy Cox on his YouTube channel about working with heat-set inserts.\nUse M2.5 screws with washers to fasten the two parts. The M3 washers are a tight fit which depends on the print and might have to be pushed in with the help of some proper tool.\nBe careful tightening the screws because the thread inserts don't withstand a lot of torque.", "step_imgs": ["https://cdn.instructables.com/FLX/LV8N/JSKOW1QD/FLXLV8NJSKOW1QD.LARGE.jpg", "https://cdn.instructables.com/FJV/WU1I/JSKOW1QI/FJVWU1IJSKOW1QI.LARGE.jpg", "https://cdn.instructables.com/FN8/O4N2/JSKOW1QJ/FN8O4N2JSKOW1QJ.LARGE.jpg", "https://cdn.instructables.com/FPC/JEJQ/JSKOW1QK/FPCJEJQJSKOW1QK.LARGE.jpg", "https://cdn.instructables.com/FG9/MKNR/JSKOW1QM/FG9MKNRJSKOW1QM.LARGE.jpg"], "step_title": "Step 4: Extruder Bracket - BB-Base Installation..."}, {"step": 5, "steps_text": "A proper part cooling is almost as important as any other parameter in the printing process. Therefore a special designed AirDuckt_A2 is used to provide an optimum part cooling. The following parts building this critical component:\n1 pcs - Extruder Bracket M002\nENSURE STEP 04 IS PROPERLY DONE BEFORE YOU PROCEED\n1 pcs - AirDuct_A2\n1 pcs - AirDuct A2 Cover\n1 pcs - NF-A4x10 FLX Fan\n2 pcs - M3 x 20mm socket head screw\n2 pcs - M3 x 30mm socket head screw\n2 pcs - M3 washers\n4 pcs - Tapered Heat-Set Inserts for Plastic\nBrass, M3 x 0.50 mm Thread Size, 3.800 mm Installed Length\nThe four Heat-Set inserts have to be installed in the holes of the AirDuct_A2 part from the side where the Extruder Bracket is going to be.\nThis installation is kind of a 2-Step procedure. The 2 M3 x 20mm srews without washers have to be mounted first before the 2 M3 x 30mm srews with washers which holding the fan cover can be installed.\nBe careful tightening the screws because the thread inserts don't withstand a lot of torque.", "step_imgs": ["https://cdn.instructables.com/FZG/W36O/JSKOW2XK/FZGW36OJSKOW2XK.LARGE.jpg", "https://cdn.instructables.com/FVF/NMCH/JSKOW2XM/FVFNMCHJSKOW2XM.LARGE.jpg", "https://cdn.instructables.com/FY7/97NI/JSKOW2XF/FY797NIJSKOW2XF.LARGE.jpg", "https://cdn.instructables.com/FI2/CHQW/JSKOW2WC/FI2CHQWJSKOW2WC.LARGE.jpg", "https://cdn.instructables.com/FDI/2F7V/JSKOW2X9/FDI2F7VJSKOW2X9.LARGE.jpg", "https://cdn.instructables.com/F10/UEZR/JSKOW2XG/F10UEZRJSKOW2XG.LARGE.jpg"], "step_title": "Step 5: Part Cooling..."}, {"step": 6, "steps_text": "The BONDTECH BMG with the E3D hot end installation is straight forward and can be seen in the pictures. However, it's the most important step and should not be underestimated.\nThe assembly of the E3D V6 ALL-METAL hot end is detailed explained in this video from Thomas Sanladerer on his YouTube channel. This guy has a lot of experience with 3D printing and you can find some awesome videos there.\nThe same is to say about the correct assembly of the BONDTECH BMG itself. You can find a very good tutorial on the BONDTECH YouTube channel about that.\nThe parts used for this step are:\n1 pcs - BondTech BMG\n1 pcs - 2-Phase stepper motor MOONS MS17HD5P4100\n1 pcs - E3D V6 All-Metal HotEnd", "step_imgs": ["https://cdn.instructables.com/FST/86ZS/JSKOW4I2/FST86ZSJSKOW4I2.LARGE.jpg", "https://cdn.instructables.com/F2L/DEG9/JSKOW56V/F2LDEG9JSKOW56V.LARGE.jpg", "https://cdn.instructables.com/F45/KYXH/JSKOW4NT/F45KYXHJSKOW4NT.LARGE.jpg", "https://cdn.instructables.com/FMH/XFPH/JSKOW4NU/FMHXFPHJSKOW4NU.LARGE.jpg", "https://cdn.instructables.com/F6Q/O1V8/JSKOW4QI/F6QO1V8JSKOW4QI.LARGE.jpg", "https://cdn.instructables.com/FH3/JHZB/JSKOW4QO/FH3JHZBJSKOW4QO.LARGE.jpg", "https://cdn.instructables.com/F01/AH9Y/JSKOW4XF/F01AH9YJSKOW4XF.LARGE.jpg"], "step_title": "Step 6: BONDTECH BMG Installation..."}, {"step": 7, "steps_text": "DryLin bearings are used to provide smooth movement along the X-Axis. Those bearings are very precise, noiseless and maintenance free.\nThe parts for this step are:\n1 pcs - BB-Cover T\nBearing Bracket Cover Top\n1 pcs - BB-Cover B\nBearing Bracket Cover Bottom\n4 pcs - Drylin bearings IGUS RJ4JP-01-08\n12 pcs - M2.5 x 16mm socket head screw\n12 pcs - M3 washer\nThe two covers are non-symmetrical and can't be installed at the wrong place. The bottom cover \"BB-Cover B\" has a little grove which will fit to the bottom part of the \"BB-Base\" and the top cover \"BB-Cover T\" don't have this grove which will makes it impossible to install it on the bottom side of the \"BB-Base\".\nBefore the cover are mounted using the M2.5 screws with M3 washers, the DryLin bearings have to be places onto the base bracket as pictured. The screws can be tightened, but should allow for some play for an easier installation on the actual X-Axis.\nYou need to keep in mind that also here the threads are just heat-set inserts and not meant to hold a lot of torque.", "step_imgs": ["https://cdn.instructables.com/FYJ/9ZVG/JSKOW74S/FYJ9ZVGJSKOW74S.LARGE.jpg", "https://cdn.instructables.com/FXQ/SDNN/JSKOW74T/FXQSDNNJSKOW74T.LARGE.jpg", "https://cdn.instructables.com/FNQ/FN0R/JSKOW75W/FNQFN0RJSKOW75W.LARGE.jpg", "https://cdn.instructables.com/FLF/J17A/JSKOW75X/FLFJ17AJSKOW75X.LARGE.jpg", "https://cdn.instructables.com/FHP/TT0M/JSKOW74R/FHPTT0MJSKOW74R.LARGE.jpg"], "step_title": "Step 7: Linear Bearing Installation..."}, {"step": 8, "steps_text": "From here on the I-Bot Extruder is completed and ready for installation onto the X-Axis, which will be explained in another tutorial.\nA few more things which have to be mentioned to make this tutorial complete.\nYou'll find 2 holes in the plastic above the stepper motor. those holes can be used to hold a small Zip-Ty for the cable coming from the device.\nThe linear guide rods on my Anet A8 have a distance of 46mm. I've seen versions of that particular printer with different measurements, please keep this in mind if you attempt to build the I-Bot Extruder for your printer.\nAll used parts can be replaced by cheaper after marked versions and the I-Bot Extruder will probably still work just fine. My goal with this project was to use high quality products to support a high quality end product.\nAs you probably already know: \"Cheap products are the most expensive.\"", "step_imgs": ["https://cdn.instructables.com/F6J/2SLJ/JSKOWCFV/F6J2SLJJSKOWCFV.LARGE.jpg", "https://cdn.instructables.com/FWD/6D7Z/JSKOWCFW/FWD6D7ZJSKOWCFW.LARGE.jpg", "https://cdn.instructables.com/FWB/RXJA/JSKOWCFX/FWBRXJAJSKOWCFX.LARGE.jpg", "https://cdn.instructables.com/FXG/NM22/JSKOWCFY/FXGNM22JSKOWCFY.LARGE.jpg", "https://cdn.instructables.com/F62/12ZM/JSKOWCFZ/F6212ZMJSKOWCFZ.LARGE.jpg", "https://cdn.instructables.com/FHO/YWXB/JSKOWCG0/FHOYWXBJSKOWCG0.LARGE.jpg", "https://cdn.instructables.com/FMH/RSNX/JSKOWCG1/FMHRSNXJSKOWCG1.LARGE.jpg", "https://cdn.instructables.com/FCA/DD6F/JSKOWCG2/FCADD6FJSKOWCG2.LARGE.jpg", "https://cdn.instructables.com/FAD/9UU9/JSKOWCG3/FAD9UU9JSKOWCG3.LARGE.jpg", "https://cdn.instructables.com/FBX/L6JF/JSKOWCG4/FBXL6JFJSKOWCG4.LARGE.jpg"], "step_title": "Step 8: Finally Finished..."}], "channel": "3D Printing"}, {"category": "Technology", "description": "These binoculars are a great value, not the best, but at ~$35 they're not so expensive you get nervous about other people touching them. However, they don't fit faces with narrow set eyes; the InterPupillary Distance (IPD) doesn't get smaller than ~60mm. Fortunately, it's just a silly design decision that you can fix. Shown is the stock range of adjustment.\nAll these parts probably have precise technical names, but I didn't know where to find them. I contrived names I hope you find fairly descriptive.", "title": "Narrowing the IPD of the Celestron Cometron 7x50 Binoculars", "url": "https://www.instructables.com/id/Narrowing-the-IPD-of-the-Celestron-Cometron-7x50-B/", "steps": [{"step": 1, "steps_text": "Here you can see the stops on the underside that prevent the IPD from narrowing. There are similar stops on the top that limit how wide the IPD can be. There's some adjustment to be had there, but not a ton. The widest they can go in stock form is ~73mm. I bet you can get an extra 2 or 3mm, maybe 5, but probably not more than that without changing major structure.\nWe're simply going to file the minimum IPD stops so we can get more travel. This instructable is mostly about how these binoculars disassemble and reassemble. I wrecked a pair the first time I tried this, figuring out how to take them apart.", "step_imgs": ["https://cdn.instructables.com/FE8/5SL7/JS0OTJ3O/FE85SL7JS0OTJ3O.LARGE.jpg", "https://cdn.instructables.com/FWC/PA6D/JS0OTJ2E/FWCPA6DJS0OTJ2E.LARGE.jpg"], "step_title": "Step 1: Stock Adjustment Range"}, {"step": 2, "steps_text": "You can probably pry it off with your fingernail. It's just held in place by some soft glue. Loosen up the set screws if you like.", "step_imgs": ["https://cdn.instructables.com/FV1/GMI5/JS0OTNG0/FV1GMI5JS0OTNG0.LARGE.jpg", "https://cdn.instructables.com/FNY/6SYV/JS0OTNGP/FNY6SYVJS0OTNGP.LARGE.jpg"], "step_title": "Step 2: Pop Off the Eyepiece Focuser Locknut Cover"}, {"step": 3, "steps_text": "Both the eyepiece focus locknut and the spindle locknut have very small set screws that take a flat blade screwdriver. They're in an unusual spot on both locknuts. I suspect they help keep the locknuts from loosening up. I haven't paid them much attention, but I keep giving my binoculars away before I have the opportunity to notice them loosen up. They might not be that important, but if you have a small flat blade screwdriver, it's not taxing to loosen them first.\nThe focus locknut comes off with a flat blade screwdriver. It's made of cheesy brass, so it's helpful if you have a screwdriver that fits this well too. I used a larger flat blade screwdriver.\nThe left eyepiece will just slide off, followed by the right eyepiece. There's a brass thrust washer between them, and one more between the right eyepiece and the boss on the focus plunger. Don't lose or bend them. Here one has stuck to the eyepiece, the other one I had to remove from the focus plunger.\nEverything that moves has some nice clear grease on it. You can try to not touch it, and reassemble without regreasing, but some parts will require it.\nShown as well is the spindle locknut to the right of the eyepiece locknut.", "step_imgs": ["https://cdn.instructables.com/FBU/VH8M/JQQYIS6T/FBUVH8MJQQYIS6T.LARGE.jpg", "https://cdn.instructables.com/F06/7EV5/JQQYIS72/F067EV5JQQYIS72.LARGE.jpg", "https://cdn.instructables.com/FDL/LIHX/JQQYIS7H/FDLLIHXJQQYIS7H.LARGE.jpg"], "step_title": "Step 3: Remove the Eyepiece Focus Locknut"}, {"step": 4, "steps_text": "Ok, we're getting closer. We're trying to take the spindle out, but the focus plunger is in the way. The focus plunger is held in by a pin, and that pin is behind a door under the rubber focus grip.\nPeel the focus grip back. You can stick a small screwdriver in to get it started. It's easier if you start at the back and roll it forward as pictured. It's a little tricky, rotating the whole focus adjuster while peeling the grip back will help.\nWith the grip out of the way, you can just pop off the focus drive pin door. If you look at the bottom of the binoculars and rotate the door cavity towards you, the drive pin should come into view. I've done this 4 or 5 times now with this model of binoculars, and every one of these has had the Phillips drive of the focus drive pin really mangled. This is also brass, really soft, and we don't want to ruin this. Find a screwdriver that fits pretty good, fit it up very straight, and apply enough pressure to keep from stripping it out. Good luck.", "step_imgs": ["https://cdn.instructables.com/FIY/XYKQ/JQQYIRUD/FIYXYKQJQQYIRUD.LARGE.jpg", "https://cdn.instructables.com/FB0/IBHP/JQQYIRV7/FB0IBHPJQQYIRV7.LARGE.jpg"], "step_title": "Step 4: Remove the Focus Plunger Drive Pin"}, {"step": 5, "steps_text": "Ok, with the drive pin out, the focus plunger slides out.\nThere is a cap over the spindle on the end the focus plunger came out. This will slide off after you pry a little bit.", "step_imgs": ["https://cdn.instructables.com/F3E/4X9B/JQQYIRUC/F3E4X9BJQQYIRUC.LARGE.jpg", "https://cdn.instructables.com/F8I/5TA0/JQQYIRUF/F8I5TA0JQQYIRUF.LARGE.jpg"], "step_title": "Step 5: Remove the Focus Plunger & Spindle Cover"}, {"step": 6, "steps_text": "This cover is on the front, and will unscrew, probably with just your fingers. The center of it is threaded 1/4\"-20 for a tripod adapter.", "step_imgs": ["https://cdn.instructables.com/F8P/LK08/JQQYIS7U/F8PLK08JQQYIS7U.LARGE.jpg"], "step_title": "Step 6: Remove Spindle Locknut Cover"}, {"step": 7, "steps_text": "The spindle locknut takes an unfortunate flat blade screwdriver-like object to undo. Most screwdrivers aren't going to fit this very well. I used a gasket scraper from an auto parts store. It's nice if you can find something that fits this pretty well as it's made of aluminum and will yield before the might of your fingers if you're not very careful.\nWe're going to use the spindle locknut to help us get the spindle out. Loosen it ~1.5 turns.", "step_imgs": ["https://cdn.instructables.com/FDF/S48T/JQQYIS6L/FDFS48TJQQYIS6L.LARGE.jpg"], "step_title": "Step 7: Loosen Spindle Locknut"}, {"step": 8, "steps_text": "So, we're about to do something kind of mean to our optics. The right way to get the spindle out is with a press, but it you don't have one you can get it moving with some rudeness.\nSince we loosened the spindle locknut ~1.5 turns, it's protruding that much. If we put this locknut on the corner of a table and put our weight on the prism housing, it'll pop the spindle loose.\nHow rude is this? Well, we're not plastically deforming our prism housing. We are probably messing up the collimation, but that'll probably happen anyway when we file the stops down, and they probably got bumped out of collimation on their way to us, and these are rather cheap 7x50s. Also, you can use a press.\nOnce the spindle is loose, pull it out.", "step_imgs": ["https://cdn.instructables.com/F4C/6RR8/JS0OTYRW/F4C6RR8JS0OTYRW.LARGE.jpg", "https://cdn.instructables.com/FN4/XDYZ/JQQYIRUX/FN4XDYZJQQYIRUX.LARGE.jpg"], "step_title": "Step 8: This Isn't Very Nice"}, {"step": 9, "steps_text": "With the spindle out now, we can separate the halves. There are some washers in there that help things move smoothly without binding or rocking, so we'll try not to lose, bend, or install them in the wrong order.\nIn the middle is the focus barrel. We know that we rolled the rubber grip forward. On that front side is a black washer (I think it's plastic) and some of that clear grease. There is no washer on the back side.\nOn both sides of the focus barrel is the whole right side. The left side surrounds the right side. Between the right and left side, and both the front and the back are brass thrust washers.", "step_imgs": ["https://cdn.instructables.com/FJG/KHM4/JS0OU1DV/FJGKHM4JS0OU1DV.LARGE.jpg", "https://cdn.instructables.com/FGV/4E8A/JQQYIRV4/FGV4E8AJQQYIRV4.LARGE.jpg", "https://cdn.instructables.com/F5X/M99J/JQQYIRV0/F5XM99JJQQYIRV0.LARGE.jpg"], "step_title": "Step 9: Try to Keep the Parts in Order"}, {"step": 10, "steps_text": "Now we have it apart, but before we go filing, we can take a couple preventative steps to help keep dirt from getting in our pivots and optics. Cleaning the grease off the pivot faces with a paper towel will keep aluminum filings from sticking to the grease. We can wrap the whole housing to keep filings out of the open housing and away from the objectve lens & cover. Stretch wrap or plastic bags with masking tape work fine. Leave the ears exposed, that's what we're filing.", "step_imgs": ["https://cdn.instructables.com/FST/3V0I/JS0OU2A5/FST3V0IJS0OU2A5.LARGE.jpg"], "step_title": "Step 10: Keep It Clean"}, {"step": 11, "steps_text": "Try not to squeeze too hard when holding the binocular half. It's aluminum and easy to crush.\nThis pair got filed down about 6mm/1/4\" on each of the four stops. I used a square (flat would be great too) file and stayed away from the face that the greased washer sits on until I got close and then slowly worked my way in.\nAt 6mm, the stops on the eyepiece will hit first, and you can feel it flex and it's kinda gross. You can do the same filing with the eyepieces, but you might wait until you've reassembled the body to see how much looks like the right amount.\nIf you have aluminum filings everywhere, as long as they didn't work their way into the body, they'll clean up ok with alcohol and paper towels.", "step_imgs": ["https://cdn.instructables.com/FC8/PCKA/JQQYIRV6/FC8PCKAJQQYIRV6.LARGE.jpg", "https://cdn.instructables.com/FL7/WQTD/JS0OU3B9/FL7WQTDJS0OU3B9.LARGE.jpg"], "step_title": "Step 11: Give It the Business"}, {"step": 12, "steps_text": "Make sure there's grease on all the sliding surfaces. I had a dollop of grease on the end of the focus plunger, so I used that. It might be silicone based food safe grease. That's a great option as the lubrication requirements are not that demanding and people's hands could come into contact with the grease some. Any grease intended for lubrication would work great.\nReassemble everything in the order it came apart:\nFrom the inside moving out:\nFocus barrel with the grip rolled forward with black washer forward\nRight side body\nBrass washers on both outer sides of the right side body\nLeft side\nWith that in place, insert the spindle. There are two notches in it that can line up with a nub on the back face of the left side body. Orient it so the slot in the spindle for the drive pin is facing down.", "step_imgs": ["https://cdn.instructables.com/F8N/2298/JS0OU44K/F8N2298JS0OU44K.LARGE.jpg"], "step_title": "Step 12: Reassemble"}, {"step": 13, "steps_text": "Put the spindle lock nut on finger tight.\nInsert the focus plunger with the threaded hole for the drive pin aligned with the slot in the spindle.\nPush on the focus plunger cap.\nInstall the focus drive pin taking care not to strip it's head or threads. Verify the focus travel seems reasonable.\nPlace the focus drive pin door in it's home and cover it with the rubber grip.\nTighten up the spindle lock nut and snug its setscrew.\nScrew on the spindle lock nut cover.\nOne of the smaller brass washers goes on the focus plunger.\nThe right eyepiece goes on next, followed by its washer, then the left eyepiece.\nThis is the time to check the eyepiece stops to see if you want to file them too.\nThe focus locknut is next, after it's tight snug up the little setscrews.\nThe focus locknut cover needs to be glued back on, but you don't need any serious glue. Double sided tape can work if it's the real sticky stuff like carpet tape. Hot glue it fine too. I'd stay away from superglue or epoxy. If you need to get back in epoxy might give you some real trouble. Superglue will probably be able to be peeled off because the rubber is flexible, but it might make getting the locknut off difficult depending where is sneaks into.", "step_imgs": ["https://cdn.instructables.com/F4X/40MN/JS0OU5L6/F4X40MNJS0OU5L6.LARGE.jpg", "https://cdn.instructables.com/FMV/PTLY/JS0OU5KF/FMVPTLYJS0OU5KF.LARGE.jpg"], "step_title": "Step 13: Button It Up"}, {"step": 14, "steps_text": "It's probably worthwhile googling for \"binoculars collimation\" and following instructions, or knowing that you're choosing to ignore that. Here's an instructable from someone else you can try: https://www.instructables.com/id/How-to-Fix-Double-Vision-on-Binoculars/\nGo look at stuff!", "step_imgs": [], "step_title": "Step 14: Collimate & Enjoy"}], "channel": "Science"}, {"category": "Technology", "description": "A tool is something that makes life easier and more convenient. I have got a rather huge mass of cardboard (a cause of a new furnishings :-)) and appropriate number of ideas to make something with it (Bag for Containers). One problem is bend operations. Cardboard plates have a multiply layer (as usual) so I get clumsy splits during bending. To prevent such behavior I decided to flatten cardboard according the bend line. At this moment we get situation for a ... NEW TOOL. How to make flattening along the path? Certainly, using a one of the ancient inventions \u2013 the Wheel. We need only move the wheel (roller) along the path on cardboard surface with giving insignificant pressure. This principle we use in home preservation to connect bank and cover (or let's remember about the roller-machine for road construction). Concept of a tool is very simple: roller (wheel) and handle \u2013 nothing more.", "title": "Cardboard Bender", "url": "https://www.instructables.com/id/Cardboard-Bender/", "steps": [{"step": 1, "steps_text": "Materials:\n- 1 wooden slat (300x30x20 mm) for a Handle;\n- 2 aluminum plates (150x20x1 mm) for a Bracket;\n- 1 wooden cylinder (D45xH16) for a Roller;\n- 1 screw M5x40;\n- 2 screws M4x30;\n- 1 spring washers M5;\n- 2 spring washers M4;\n- 3 plane washers M5 (D15);\n- 3 plane washers M5 (D10);\n- 2 hexagon nuts M5;\n- 2 hexagon nuts M4.\nTools:\n- screwdriver with a bit set;\n- combination pliers;\n- drill, hacksaw, rasp, file, sandpaper (to prepare parts).", "step_imgs": ["https://cdn.instructables.com/F9U/AFNZ/JSITQZND/F9UAFNZJSITQZND.LARGE.jpg"], "step_title": "Step 1: Materials and Tools"}, {"step": 2, "steps_text": "According to design drawing the \"hand-made\" parts are: the Roller, the Handle and two Brackets (link1 (google drive), link2 (yandex drive)). The main part is a Roller. You can make it from a wooden cylinder using a turning lathe (or hand rasp ;-)). Keep in mind that outside working surface of a Roller need to have appropriate width (no more then 4-5 mm) and shape (rounded edges). For a Brackets you can use appropriate aluminum or steel plates. I made these elements using a piece of standard aluminum angle profile by cutting it along the corner edge. The Handle is any wooden slat with appropriate geometry. What about screws, nuts, washers ... Certainly you can see the parts list in the design drawing and on Step 1. But perhaps you find analogical elements into your \"home workshop\". So, we have prepared all parts. Let's start assembling.", "step_imgs": ["https://cdn.instructables.com/FO9/J2UH/JSITR1C1/FO9J2UHJSITR1C1.LARGE.jpg"], "step_title": "Step 2: Parts Preparation"}, {"step": 3, "steps_text": "The base of assembly is a Roller axis.", "step_imgs": ["https://cdn.instructables.com/F3W/MHAH/JSITR40D/F3WMHAHJSITR40D.LARGE.jpg", "https://cdn.instructables.com/FI9/2UGE/JSITR44P/FI92UGEJSITR44P.LARGE.jpg"], "step_title": "Step 3: Assembly \u2026"}, {"step": 4, "steps_text": "Put the first Bracket on the axis.", "step_imgs": ["https://cdn.instructables.com/FES/Z5ON/JSITR55F/FESZ5ONJSITR55F.LARGE.jpg", "https://cdn.instructables.com/F8U/7QRX/JSITR59S/F8U7QRXJSITR59S.LARGE.jpg", "https://cdn.instructables.com/FJB/JU5K/JSITR5E4/FJBJU5KJSITR5E4.LARGE.jpg"], "step_title": "Step 4: Assembly \u2026"}, {"step": 5, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FUY/BLTQ/JSITR5XC/FUYBLTQJSITR5XC.LARGE.jpg", "https://cdn.instructables.com/F6J/SRNW/JSITR61O/F6JSRNWJSITR61O.LARGE.jpg"], "step_title": "Step 5: Assembly \u2026"}, {"step": 6, "steps_text": "We will use two washers for each side of Roller as a slide bearings.", "step_imgs": ["https://cdn.instructables.com/F6O/KQ6J/JSITR72X/F6OKQ6JJSITR72X.LARGE.jpg", "https://cdn.instructables.com/FV3/F2U6/JSITR779/FV3F2U6JSITR779.LARGE.jpg"], "step_title": "Step 6: Assembly \u2026"}, {"step": 7, "steps_text": "Put the Roller on the axis.", "step_imgs": ["https://cdn.instructables.com/F3O/970Q/JSITR7AI/F3O970QJSITR7AI.LARGE.jpg", "https://cdn.instructables.com/FL6/OGJV/JSITR7AJ/FL6OGJVJSITR7AJ.LARGE.jpg", "https://cdn.instructables.com/FAC/FLZQ/JSITR7AK/FACFLZQJSITR7AK.LARGE.jpg"], "step_title": "Step 7: Assembly \u2026"}, {"step": 8, "steps_text": "Put two washers on the other side of Roller.", "step_imgs": ["https://cdn.instructables.com/FXV/ELT2/JSITR7DW/FXVELT2JSITR7DW.LARGE.jpg", "https://cdn.instructables.com/FBR/X64Q/JSITR7EL/FBRX64QJSITR7EL.LARGE.jpg"], "step_title": "Step 8: Assembly \u2026"}, {"step": 9, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FUQ/SIW7/JSITR7HS/FUQSIW7JSITR7HS.LARGE.jpg", "https://cdn.instructables.com/F6H/QC1M/JSITR7HV/F6HQC1MJSITR7HV.LARGE.jpg"], "step_title": "Step 9: Assembly \u2026"}, {"step": 10, "steps_text": "Put the second Bracket on the axis.", "step_imgs": ["https://cdn.instructables.com/FMI/PAPE/JSITR7ND/FMIPAPEJSITR7ND.LARGE.jpg", "https://cdn.instructables.com/FWD/GVEO/JSITR7O8/FWDGVEOJSITR7O8.LARGE.jpg", "https://cdn.instructables.com/F39/CIKD/JSITR7OA/F39CIKDJSITR7OA.LARGE.jpg", "https://cdn.instructables.com/FP9/LHC6/JSITR7OB/FP9LHC6JSITR7OB.LARGE.jpg"], "step_title": "Step 10: Assembly \u2026"}, {"step": 11, "steps_text": "Put the additional washer on the outside surface of the second Bracket.", "step_imgs": ["https://cdn.instructables.com/FQW/76KO/JSITR7V9/FQW76KOJSITR7V9.LARGE.jpg", "https://cdn.instructables.com/FAU/FRNQ/JSITR7VB/FAUFRNQJSITR7VB.LARGE.jpg"], "step_title": "Step 11: Assembly \u2026"}, {"step": 12, "steps_text": "We use only one nut until the final fixation.", "step_imgs": ["https://cdn.instructables.com/FQC/QZII/JSITR80S/FQCQZIIJSITR80S.LARGE.jpg", "https://cdn.instructables.com/FQ2/6M8S/JSITR81B/FQ26M8SJSITR81B.LARGE.jpg", "https://cdn.instructables.com/FEZ/Y0R7/JSITR81C/FEZY0R7JSITR81C.LARGE.jpg"], "step_title": "Step 12: Assembly \u2026"}, {"step": 13, "steps_text": "Put the Handle between Brackets.", "step_imgs": ["https://cdn.instructables.com/FAT/XIVN/JSITR86Z/FATXIVNJSITR86Z.LARGE.jpg", "https://cdn.instructables.com/F4W/UML9/JSITR871/F4WUML9JSITR871.LARGE.jpg", "https://cdn.instructables.com/FIK/9BPG/JSITR872/FIK9BPGJSITR872.LARGE.jpg"], "step_title": "Step 13: Assembly \u2026"}, {"step": 14, "steps_text": "Put the first screw to fix Handle in Brackets.", "step_imgs": ["https://cdn.instructables.com/F5I/DK9Y/JSITR8EN/F5IDK9YJSITR8EN.LARGE.jpg", "https://cdn.instructables.com/FEJ/GNCT/JSITR8EO/FEJGNCTJSITR8EO.LARGE.jpg", "https://cdn.instructables.com/FDI/0D9D/JSITR8G1/FDI0D9DJSITR8G1.LARGE.jpg", "https://cdn.instructables.com/FSY/KBMQ/JSITR8G2/FSYKBMQJSITR8G2.LARGE.jpg"], "step_title": "Step 14: Assembly \u2026"}, {"step": 15, "steps_text": "Use the spring washer to prevent auto disassembly.", "step_imgs": ["https://cdn.instructables.com/FYV/QYF9/JSITR8V9/FYVQYF9JSITR8V9.LARGE.jpg", "https://cdn.instructables.com/FBX/N8PK/JSITR8VA/FBXN8PKJSITR8VA.LARGE.jpg"], "step_title": "Step 15: Assembly \u2026"}, {"step": 16, "steps_text": "Put the fixing nut for a Handle.", "step_imgs": ["https://cdn.instructables.com/FGZ/Y0PI/JSITR936/FGZY0PIJSITR936.LARGE.jpg", "https://cdn.instructables.com/FLD/3EJP/JSITR945/FLD3EJPJSITR945.LARGE.jpg", "https://cdn.instructables.com/FJR/2BKW/JSITR953/FJR2BKWJSITR953.LARGE.jpg"], "step_title": "Step 16: Assembly \u2026"}, {"step": 17, "steps_text": "Make the same operations for the second mounting \"screw-nut\" subassembly on the Handle.", "step_imgs": ["https://cdn.instructables.com/F3H/89PP/JSITR9GU/F3H89PPJSITR9GU.LARGE.jpg", "https://cdn.instructables.com/F75/SWEG/JSITR9L7/F75SWEGJSITR9L7.LARGE.jpg"], "step_title": "Step 17: Assembly \u2026"}, {"step": 18, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FST/N3NA/JSITR9RW/FSTN3NAJSITR9RW.LARGE.jpg", "https://cdn.instructables.com/F1H/4G4G/JSITR9S0/F1H4G4GJSITR9S0.LARGE.jpg"], "step_title": "Step 18: Assembly \u2026"}, {"step": 19, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/F6V/TU5J/JSITR9YV/F6VTU5JJSITR9YV.LARGE.jpg", "https://cdn.instructables.com/F03/4OWU/JSITR9YW/F034OWUJSITR9YW.LARGE.jpg", "https://cdn.instructables.com/FYV/TQOU/JSITR9YY/FYVTQOUJSITR9YY.LARGE.jpg", "https://cdn.instructables.com/FQH/BB4Z/JSITR9Z0/FQHBB4ZJSITR9Z0.LARGE.jpg"], "step_title": "Step 19: Assembly \u2026"}, {"step": 20, "steps_text": "Put spring washer on the Roller axis.", "step_imgs": ["https://cdn.instructables.com/F66/5TCQ/JSITRA7W/F665TCQJSITRA7W.LARGE.jpg", "https://cdn.instructables.com/FWK/JHHS/JSITRA7Y/FWKJHHSJSITRA7Y.LARGE.jpg"], "step_title": "Step 20: Assembly \u2026"}, {"step": 21, "steps_text": "Put the second fixing nut on the Roller axis.", "step_imgs": ["https://cdn.instructables.com/FVI/XQSU/JSITRARM/FVIXQSUJSITRARM.LARGE.jpg", "https://cdn.instructables.com/F6O/138U/JSITRARO/F6O138UJSITRARO.LARGE.jpg", "https://cdn.instructables.com/F93/N1Z1/JSITRART/F93N1Z1JSITRART.LARGE.jpg", "https://cdn.instructables.com/FRK/0LIA/JSITRARV/FRK0LIAJSITRARV.LARGE.jpg"], "step_title": "Step 21: Assembly \u2026"}, {"step": 22, "steps_text": "Test our new device in action.", "step_imgs": ["https://cdn.instructables.com/F0M/GA8U/JSITRB25/F0MGA8UJSITRB25.LARGE.jpg", "https://cdn.instructables.com/FU8/K2HT/JSITRB27/FU8K2HTJSITRB27.LARGE.jpg", "https://cdn.instructables.com/FYJ/BLWH/JSITRB29/FYJBLWHJSITRB29.LARGE.jpg"], "step_title": "Step 22: Finish"}], "channel": "Tools"}, {"category": "Technology", "description": "We are nation of obsessive counters: of pulse, steps, followers and calories. Most of these numbers mean little as physiology cannot be reduced to these metrics. But we try and I wondered how do we count a breath? Remember the cinematic days before hospital demise a cold mirror was a crude indicator of expiring breath. I needed a micro controller-sensor that would do this. Published methods of sensing a breath have included a expanding force sensor around your midsection, a temp probe that works on exhaled air being warmer than inhaled stuff, and sip/blow switches available on quadriplegic control units and strange laser sensors that look at patients expanding girth while in MRI machines. The easy method I settled on was an analogue thin-film sensor for detecting relative pressure differences that occur with rising water levels in washing machines. With a little bit of data tinkering the very sensitive unit is able to detect the subtle uptick in pressure that accompanies exhalation in a monitored space.", "title": "Catching Your Breath", "url": "https://www.instructables.com/id/Catching-Your-Breath/", "steps": [{"step": 1, "steps_text": "This project is fairly simple in construction. It involves a Analog read with a microcontroller, a sensor, a lipobattery for power and a neopixel stick and SD card for output. The absolute size of the unit can be reduced further if you want to forgo the card output and downsize the battery.\n1. Adafruit Feather 32u4 Adalogger--great board about $20\n2. LipoBattery--I used the same size as the Featherboard which had plenty of power--with the new travel mailing restrictions these are getting harder to obtain.\n3. Power Button--generic\n4. MP3V5004G Series 0 to 3.92 kPa (0 to 400 mm H2O) 0.6 to 3.0 V Output -- Mouser Electronics about $17\n5. 0.125 OD hose for gas engines\n6. 1/8 ID vinyl hose\nTo make your sensor waterproof you must enclose it some container--I used a small plastic pill bottle.", "step_imgs": ["https://cdn.instructables.com/FOY/JLVS/JSEZ4T4A/FOYJLVSJSEZ4T4A.LARGE.jpg"], "step_title": "Step 1: Gather Your Materials"}, {"step": 2, "steps_text": "This is such a tiny unit. The sensor is only 1/2 inch across so it can be mounted on the back of the lipo battery which is mounted to the backside of the microcontroller. The signal and the power have a couple of small capacitors attached to a tiny board that I mounted the sensor on. Follow the wiring diagram included with the sensor. The output of the sensor is sent to A0. The power to the sensor comes off the 3 volts on the microcontroller. Originally I had a tilt sensor so the unit would only turn on when upright but unfortunately the switch was a little quirky with movement so I changed to a tiny pushbutton. The code sets up a new recording file with each new boot.", "step_imgs": ["https://cdn.instructables.com/F1L/H9ZL/JSEZ4T4I/F1LH9ZLJSEZ4T4I.LARGE.jpg", "https://cdn.instructables.com/FTC/G7NO/JSEZ4T54/FTCG7NOJSEZ4T54.LARGE.jpg"], "step_title": "Step 2: Wire It Up"}, {"step": 3, "steps_text": "This will of course vary with what you want to use the device for. In my case I wanted to test it with a variety of conditions just to see how it would respond. I built one variation for snorkel use and another for biking and hiking. The sensor has two ports with a very sensitive strain gauge baffle in-between. It has On-Chip Signal conditioning with temperature compensation. The relative uptick in the pressure from your breathing must enter the upper tube and the lower tube must be exposed to the relative stability of outside air--it cannot be sealed in a container as the increase in pressure from the upper tube would cause a reverse increase in pressure in the lower tube nullifying the output. I used a small plastic tube that snuggly fit the output bib and sealed this in a larger tube that was more easily manipulated. When using it inside a waterproof sealed container make sure that you provide a tiny vent hole or multiple ones in the container. Alternatively you can lead an additional small vent tube to the outside for the lower barb. The tube must sense a slight increase in air pressure for it to trigger so designing a breath catcher is necessary -- in the case of the snorkel all your breath is directed into the tube which easily triggers a pulse. The mask works well even when there are multiple holes for air input as it restricts sudden outflow and raises the pressure.", "step_imgs": ["https://cdn.instructables.com/FKC/9I5S/JSEZ6MP0/FKC9I5SJSEZ6MP0.LARGE.jpg", "https://cdn.instructables.com/F52/IHGP/JSEZ4T4M/F52IHGPJSEZ4T4M.LARGE.jpg", "https://cdn.instructables.com/FCN/0HM1/JSEZ4T4Y/FCN0HM1JSEZ4T4Y.LARGE.jpg", "https://cdn.instructables.com/F96/7KZB/JSEZ6MML/F967KZBJSEZ6MML.LARGE.jpg"], "step_title": "Step 3: Build It"}, {"step": 4, "steps_text": "I have included two programs for the sensor. The first utilizes the SD file system to count breaths the other program is designed to light the LED stick blue if your breathing and red if you're not. The program first initializes the sensor to remove any baseline drift by subtracting the A0 reading for the baseline reading. It then has the loop function where you can set the sampling time in microseconds and calls a function to have a rolling mean for ten readings. A call is made when a sustained high pressure is followed by a sustained low pressure measurement. This is considered a breath which is counted and timed. The file system can be triggered by calculating the rate/min for each breath but this is highly variable. I found more usable results if the breaths in ten seconds were counted and then multiplied by six and placed in the file system. It also ignores overly long stops and breaks in breathing so the data wouldn't look so spotty.\nThe second program is designed for a safety snorkel sensor. With the high rate of sudden death while snorkeling it is sometimes hard to tell if people with their face in the water are snorkeling or in trouble with apnea. This device can act as a monitor to signal with flashing LED's if a snorkeler has not taken a breath in a set period and change its flash pattern from running blue to running red. The device is small and light enough to sit near the end of the snorkel with its sense tube running down into the top end of the snorkel. Monitoring for hyperventilation with resultant shallow water drowning may also prove useful.", "step_imgs": ["https://cdn.instructables.com/FRA/VAQQ/JSEZ4T5A/FRAVAQQJSEZ4T5A.LARGE.jpg", "https://cdn.instructables.com/FTU/Y3IG/JSEZ4WXD/FTUY3IGJSEZ4WXD.LARGE.jpg", "https://cdn.instructables.com/FUU/MJJL/JSEZ4WXC/FUUMJJLJSEZ4WXC.LARGE.jpg", "https://cdn.instructables.com/FM6/VTO9/JSEZ4WXB/FM6VTO9JSEZ4WXB.LARGE.jpg"], "step_title": "Step 4: Program It"}, {"step": 5, "steps_text": "Attempts to quantify the human body with a variety of sensors seems to fascinate people and especially the tech sector. How often we breath is interesting as it provides some information about how we increase our need for oxygen and what triggers it. This sensor is limited to telling us how often we breath not how much. Quantifying the volume under the curve would take a lot more math and a totally different method but may be interesting for someone else to work on. It is much like the limitations in the measurement of pulse and the total cardiac output--the increase in tidal volume is the missing piece. I included the sensors output on an hour long uphill hike, a bike ride and several snorkeling excursions. Keeping up with oxygen demand immediately ramps up tidal volume and with this the rate of air exchange, excursions in pulse rate follow. The jiggling of your body is now dutifully noted on sensors and sent to the cloud -- I doubt this instrument will fit on a watch. The data will of course outlive all of us. I guess this is what they mean by the singularity.", "step_imgs": ["https://cdn.instructables.com/FEL/OGY2/JSEZ4TAT/FELOGY2JSEZ4TAT.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F8Q/AWS2/JSEZ4T4P/F8QAWS2JSEZ4T4P.LARGE.jpg"], "step_title": "Step 5: Using It"}], "channel": "Arduino"}, {"category": "Technology", "description": "The Instructablist would like to draw attention to the recent developments by Messrs. Galvani and Edison and the use of their research in developing a practical Luminiferous Aether Disturbance Generator.\nReaders are warned that there are considerable risks involved in using Galvanic energy in this way and care should be taken at all times to alleviate the risk of death or even worse, as the long term dangers of luminiferous aether disturbances are currently not fully understood by luminous aetherium scientists.\nYOU PROCEED AT YOUR OWN ACCEPTANCE OF THESE RISKS.", "title": "The Galvani-Edison Luminiferous Aether Disturbance Generator", "url": "https://www.instructables.com/id/The-Galvani-Edison-Luminiferous-Aether-Disturbance/", "steps": [{"step": 1, "steps_text": "The Luminiferous Aether Disturbance Generator was, to a certain degree a build up of randomly found bits from an original concept. Originally, a brass holder for an Aether Disturber with a Galvanic energy controller was purchased with no real idea how to use the device safely.\nThen, by chance, the inventor came across a suitable sized protective chamber sold by Messrs. Ikea & Co of Sweden. Described by them as a BEG\u00c5VNING Glass dome with base, but unable to speak Swedish, I can only presume that BEG\u00c5VNING is Swedish for \"Safety\". As of today, I can say that the completed Luminous Aether Generator has continued to work safely whilst encased within the protective BEG\u00c5VNING Glass dome with no known side effects or health risks.\nOther items collected were some Galvanic wire connectors, a Galvanic Energy Variable Flow Restrictor from Messrs. Sodial of Amazonia (somewhat curiously referred to as a \"table lamp whole range dimmer\") and an LED (Luminous Edison Device) Aether Disturber capable of having its emitted luminous aether regulated by the restrictor device.\nA suitable wooden mounting base was also purchased to provide both a stable support whilst protecting the user from the Galvanic elements of the design in the form of a turned wooden bowl.\nEagle eyed Galvanists will also note that there is no earth attached to the metal base. This is because everything within the base is double insulated and my house is also protected by an ELCB. However, if you are concerned, you should fit an earth to the metal base and the Aether Disturber holder.", "step_imgs": ["https://cdn.instructables.com/FXW/BZQZ/JSIUMH36/FXWBZQZJSIUMH36.LARGE.jpg", "https://cdn.instructables.com/F4T/HGJZ/JSIUMJI6/F4THGJZJSIUMJI6.LARGE.jpg", "https://cdn.instructables.com/FU0/WSHH/JSIUMH0D/FU0WSHHJSIUMH0D.LARGE.jpg"], "step_title": "Step 1: Collect the Parts"}, {"step": 2, "steps_text": "It was found that the brass Aether Disturber holder could be mounted centrally on the brass base by using the screw on Galvanic cable holder and a suitably sized hole was drilled. Similarly, a hole for the Galvanic Energy Variable Flow Restrictor was drilled and then fitted beneath the brass plate. The extra holes around the rim were designed to allow the brass base to be surely fitted to a wooden plinth, which had the dual purposes of containing the huge Galvanic energies involved whilst providing a stable base in case of an excessive Luminous Aether flux disturbance causing a breech in the time-space continuum field (fortunately, as it turned out, not an issue, but as always, better to be safe than sorry). The smaller holes were used for standard brass round head slotted screws, the larger holes for suitably powerful bolts. In reality, only a couple of screws were necessary but it was felt more were visually better. Random placement would also work. The only criteria is to make sure that none of the screws pierce or come near the cables or Galvanic Energy Variable Flow Restrictor.\n\nAll holes were drilled using a pilot hole followed by a larger drill if necessary. Using this particular base it was also found best to drill from the top as, although it appears to be a solid brass base, it is in fact a composite base of an alloy centre with a brass sheet outside. Drilling from inside can cause the brass sheet to distort.", "step_imgs": ["https://cdn.instructables.com/FDM/2Z0S/JSIUMH3G/FDM2Z0SJSIUMH3G.LARGE.jpg", "https://cdn.instructables.com/F6K/B4IK/JSIUMH58/F6KB4IKJSIUMH58.LARGE.jpg", "https://cdn.instructables.com/FV9/95IP/JSIUMH3Q/FV995IPJSIUMH3Q.LARGE.jpg", "https://cdn.instructables.com/FN3/RMBJ/JSIUMH89/FN3RMBJJSIUMH89.LARGE.jpg"], "step_title": "Step 2: Luminous Aether Generator Base Design"}, {"step": 3, "steps_text": "It is important to channel to the Galvanic energy safely through the Galvanic Energy Flow Restrictor to the brass Aether Disturber holder. In order to facilitate this, the protective cover on the Galvanic cable to the Aether Disturber holder was cut away for approx. 7.34cms in order to splice in the Galvanic Energy Flow Restrictor cables. The \"live\"/brown cable was cut into two, the safety insulation pared back and the Galvanic Energy Flow Restrictor placed in the circuit, using suitable two-way lever wire connectors.\nFinally, drill a large centre hole in the wooden bowl (approx 2.451cm) and a smaller hole in the side which is used to take the Galvanic energy conductor through to a suitable plug.\nTo complete the Luminiferous Aether Disturbance Generator, feed the Galvanic energy conductor through the two holes in the wooden bowl and the mount the brass base on to the bottom of the upside down wooden bowl before inserting the Aether Disturber in its holder.", "step_imgs": ["https://cdn.instructables.com/FQ4/T0XP/JSIUMH6R/FQ4T0XPJSIUMH6R.LARGE.jpg", "https://cdn.instructables.com/FT0/5UII/JSIUMHC9/FT05UIIJSIUMHC9.LARGE.jpg", "https://cdn.instructables.com/FZD/A0E5/JSIUMHCH/FZDA0E5JSIUMHCH.LARGE.jpg", "https://cdn.instructables.com/FSO/2JQP/JSIUMHDU/FSO2JQPJSIUMHDU.LARGE.jpg"], "step_title": "Step 3: Installation of the Galvanic Energy Flow Restrictor and the Energy Directors."}, {"step": 4, "steps_text": "IT IS VITALLY IMPORTANT TO BE FULLY TRAINED IN THE USAGE OF AND AWARE OF THE DANGERS OF BOTH GALVANIC ENERGY AND LUMINOUS AETHER DISTURBANCES. YOU HAVE BEEN WARNED! FURTHER PROGRESS IS AT YOUR OWN COGNISANCE.\nConnect the Luminiferous Aether Disturbance Generator to an appropriate external Galvanic energy conduit source.\nWith the protective cover removed, turn the Aether Disturber holder switch to \"On\".\nTest Galvanic Energy Flow Restrictor performs by rotating the control dial. There should be a visible variance in the luminous aether disturbance.\nReplace the BEG\u00c5VNING (Safety) Glass dome.\nNow, bask in the heady glory of your Luminiferous Aether Disturbance Generator as it brings the healing power of Aether waves to the darkness of your night.\nThere is also a little piece of satisfying personal theatre involved as you have remove the BEG\u00c5VNING (Safety) Glass dome before turning the Luminiferous Aether Disturbance Generator on or off, always remembering to return it for the safe operation of the device.\nFinally, I have entered this into the Galvanic Institute's 1897 Exhibition at the Crystal Palace where I hope to gain a Prince Albert of Saxe-Coburg and Gotha Award. Should you be visiting, please vote for me.", "step_imgs": ["https://cdn.instructables.com/FMH/3KY8/JSIUMHE1/FMH3KY8JSIUMHE1.LARGE.jpg", "https://cdn.instructables.com/F7M/Z8H7/JSIUMHDT/F7MZ8H7JSIUMHDT.LARGE.jpg", "https://cdn.instructables.com/F48/MSGU/JSIUMHE7/F48MSGUJSIUMHE7.LARGE.jpg", "https://cdn.instructables.com/FWC/9Y65/JSIUMHEJ/FWC9Y65JSIUMHEJ.LARGE.jpg", "https://cdn.instructables.com/F54/ZPYB/JSIUMHED/F54ZPYBJSIUMHED.LARGE.jpg", "https://cdn.instructables.com/FCK/1A44/JSIUMHIN/FCK1A44JSIUMHIN.LARGE.jpg", "https://cdn.instructables.com/F7K/3GI8/JSIUMHIK/F7K3GI8JSIUMHIK.LARGE.jpg"], "step_title": "Step 4: Luminiferous Aether Disturbance Generator Testing and Usage Information."}], "channel": "Art"}, {"category": "Technology", "description": "Hi \"D\" here. This is a walkthrough of sorts for the Instructable \"The Christmas Machine\". If you have not read through it please do so first. And, if you have time please read through \"The Christmas Box II\" before that. I promise after you do this will make a lot more sense.", "title": "The Christmas Machine: the Walkthrough", "url": "https://www.instructables.com/id/The-Christmas-Machine-the-Walkthrough/", "steps": [{"step": 1, "steps_text": "It is finished, I think. The last of its kind. The last of my work.\nThe others, all well and grand in their own way, have seemingly brought me here. Each of them adding in their own way to this final creation.\nI have been asked to leave a record of what it is, as well as to give insight into its mechanisms and secrets, but these are not for me to say. This would be best told by those who have taken up the quest. Two will come after me. I am but the creator. They are the ones who will discover, they are the ones who will tell the tale.\n\"D\" Maker of Things", "step_imgs": ["https://cdn.instructables.com/FW2/DX8Z/JSIUPQD5/FW2DX8ZJSIUPQD5.LARGE.jpg", "https://cdn.instructables.com/FKW/P1TA/JSIUPO0X/FKWP1TAJSIUPO0X.LARGE.jpg", "https://cdn.instructables.com/F3R/9TRM/JSIUPNY2/F3R9TRMJSIUPNY2.LARGE.jpg", "https://cdn.instructables.com/FBS/1YHJ/JSIUPNDH/FBS1YHJJSIUPNDH.LARGE.jpg", "https://cdn.instructables.com/FXE/VIWR/JSIUPPW0/FXEVIWRJSIUPPW0.LARGE.jpg"], "step_title": "Step 1: Prologue"}, {"step": 2, "steps_text": "The crate came today. It's getting to be expected about this time every year. When we were younger, dad had us believing that other people had sent us things. Now we know better, although we're actually still not sure about the first one. But that's OK. These things seem to make him happy, and they're cool and make us think about things. We weren't sure exactly what to do with it. All his other boxes came to us locked. This one was open and he said we could check it out all we wanted as long as we didn't break anything. That kinda took the fun out of it. well, we thought so at first. He said he could send it back if we didn't want to bother with it. But we said it was OK. Mom just sat it in the living room by the front door.", "step_imgs": ["https://cdn.instructables.com/FJO/CTGT/JSIUPQWN/FJOCTGTJSIUPQWN.LARGE.jpg"], "step_title": "Step 2: Every End Has a Beginning..."}, {"step": 3, "steps_text": "At first we were kind of stuck. The dial turned and we could rotate the magnifying glass. I liked the little sword and claimed it, but Dad said not to take it far because we would need it later. There were two wires hanging on the side along with a speaker of some kind. The other side had a round opening but it was locked. There was a candle holder mounted close to the round opening. The back had a thick wire making a trail across the rear of the thing. We found each area had a number 1,4,5,6 but no 2 or 3?\nMy brother asked if we could open the metal cover on the front and he said yes. There was a number 3 on a plate under it along with some switches and a round piece. we couldn't figure out what it was.\nThe front drawer was open and there were a few things inside.", "step_imgs": ["https://cdn.instructables.com/FDY/QWI1/JSIUPOB8/FDYQWI1JSIUPOB8.LARGE.jpg", "https://cdn.instructables.com/FEK/ROYI/JSIUPRH2/FEKROYIJSIUPRH2.LARGE.jpg", "https://cdn.instructables.com/FH1/B66A/JSIUPRGS/FH1B66AJSIUPRGS.LARGE.jpg", "https://cdn.instructables.com/FA8/XLBW/JSIUPRGN/FA8XLBWJSIUPRGN.LARGE.jpg", "https://cdn.instructables.com/F66/60D6/JSIUPRFV/F6660D6JSIUPRFV.LARGE.jpg", "https://cdn.instructables.com/FH7/PUBS/JSIUPRI4/FH7PUBSJSIUPRI4.LARGE.jpg", "https://cdn.instructables.com/F9G/VZBS/JSIUPRI3/F9GVZBSJSIUPRI3.LARGE.jpg", "https://cdn.instructables.com/F7C/038O/JSIUPRMC/F7C038OJSIUPRMC.LARGE.jpg"], "step_title": "Step 3: ...at First Glance"}, {"step": 4, "steps_text": "One of the things in the drawer was an electric cord. We'd never seen one like it before. We saw that it fit into a plug on the back of the box and we plugged it in. We couldn't find another plug on the box to plug the other end into. Our Dad had told us that everything we needed to solve the box was in the house somewhere. He said nothing was hidden and we would need no tools. We found a box marked \"Drive 2\" and it had a matching plug for the cord. We plugged it in and turned the two switches on. A light began to flicker in the drawer handle. If we turned the dial on the upper disc it would make each of the numbers on the box blink with a small red light but we still could not see a number 2. Nothing else happened yet.\nThe small box was originally used to transmit wireless audio signal back in the 1970s. Once removed from the trash I removed the original components and installed a 12 volt gel cell battery along with a re-setable circuit breaker. I then chose a microphone cord to transfer power to the Machine", "step_imgs": ["https://cdn.instructables.com/FZL/KQKM/JSIUPSEL/FZLKQKMJSIUPSEL.LARGE.jpg", "https://cdn.instructables.com/FJP/Q8V6/JSIUPSEP/FJPQ8V6JSIUPSEP.LARGE.jpg"], "step_title": "Step 4: Power Up"}, {"step": 5, "steps_text": "We're used to getting a gift on Thanksgiving, and it usually has something to do with the box. This year we went to the market to get sodas when we ran out at my Aunts house and when we got back there was a wooden box in one of the bags. It had a weird knob thing in it, and we knew what it was for.\nThe knob was originally mounted to a hand operated grinding wheel used to sharpen knives. Once I removed it, it was mated to a shaft with various spacers that were used to properly affix the pinion gear to the shaft.", "step_imgs": ["https://cdn.instructables.com/FCJ/FR41/JSIUPRFL/FCJFR41JSIUPRFL.LARGE.jpg"], "step_title": "Step 5: Thanksgiving..."}, {"step": 6, "steps_text": "When we got home we looked for where the gearknob went, and we found a small hole next to the round cover that the shaft would fit into. If you pushed in until it clicked and turned it, The round piece opened and we found something marked number 2.\nThe \"Rack\" or straight gear was soaked in steeping hot water until it\nwas flexible enough and then was sat around the inside edge of an appropriately sized cooking pot until it cooled and retained the proper curve it needed to sit correctly on the outside surface of the Iris. It was then epoxied into position.\nPushing the key in place released a U shaped spring lock behind the Iris that would stop the Iris from moving if someone attempted to turn it without the proper key being inserted. It was not visible from the outside of the Machine.", "step_imgs": ["https://cdn.instructables.com/FIT/0J0I/JSIUPT6Q/FIT0J0IJSIUPT6Q.LARGE.jpg", "https://cdn.instructables.com/FLO/P8EG/JSIUPT6U/FLOP8EGJSIUPT6U.LARGE.jpg", "https://cdn.instructables.com/FQR/LV6V/JSIUPT6X/FQRLV6VJSIUPT6X.LARGE.jpg", "https://cdn.instructables.com/FMA/PXQW/JSIUPT70/FMAPXQWJSIUPT70.LARGE.jpg"], "step_title": "Step 6: Task 1"}, {"step": 7, "steps_text": "We didn't know what to do with the disc for a week or so. Later at school my brother found a note in his locker that said, \"...sometimes there's no reason, sometimes there's no rhyme, but you may find an answer {somewhere in time}\". The next day we found an old picture stuck on the big metal tray on the back of the box with a brass magnet. It had a man in a top hat pointing to a clock.\nIt took a while but we figured it out. Four of the clocks in our house were not working. They had been stopped at different times so the hour hands set at 2,6,6,and 7. If you placed the dials on the disc to the same positions as the numbers on the clocks, the disc would open. A stick drive would pull out once you opened it.\nThere were a bunch of clues and codes on the drive. There was also a folder with a bunch of Christmas pictures of us when we were little.", "step_imgs": ["https://cdn.instructables.com/FST/DU1W/JSIUPUT7/FSTDU1WJSIUPUT7.LARGE.jpg", "https://cdn.instructables.com/FE0/4O9U/JSIUPUT9/FE04O9UJSIUPUT9.LARGE.jpg", "https://cdn.instructables.com/FJ0/NM6W/JSIUPUVX/FJ0NM6WJSIUPUVX.LARGE.jpg", "https://cdn.instructables.com/FR2/69JO/JSIUPOBJ/FR269JOJSIUPOBJ.LARGE.jpg", "https://cdn.instructables.com/FOF/RYUP/JSIUPW0E/FOFRYUPJSIUPW0E.LARGE.jpg"], "step_title": "Step 7: Task 2"}, {"step": 8, "steps_text": "A few days later we got a UPS box in the mail. Inside was another box with a couple of new things to figure out. It was locked when we got it and couldn't get it open until a friend at a Christmas party gave us two keys. One was for this box and we didn't know what to do with the other one.", "step_imgs": ["https://cdn.instructables.com/F1Z/RRZ9/JSIUPVZP/F1ZRRZ9JSIUPVZP.LARGE.jpg", "https://cdn.instructables.com/F8H/CFYJ/JSIUPVZB/F8HCFYJJSIUPVZB.LARGE.jpg"], "step_title": "Step 8: Special Delivery"}, {"step": 9, "steps_text": "There was an old photo inside the box with a note on the back that said, \"wouldn't it be nice if you filled this photobook with pictures of you from Christmas past and gave it to your Mom? We printed the pictures and had Dad cut them to fit the book. The note said we couldn't go on to the next step until we did. We didn't mind at all.\nI believe the book is from the early 1900s. I had hoped they would print the pictures in black and white, but they were so into it that I didn't want to get in the way!", "step_imgs": ["https://cdn.instructables.com/FMD/7WPE/JSIUPOBK/FMD7WPEJSIUPOBK.LARGE.jpg", "https://cdn.instructables.com/FX1/9VYV/JSIUPVZX/FX19VYVJSIUPVZX.LARGE.jpg", "https://cdn.instructables.com/F32/U1JT/JSIUPX93/F32U1JTJSIUPX93.LARGE.jpg", "https://cdn.instructables.com/FWI/R6I6/JSIUPX92/FWIR6I6JSIUPX92.LARGE.jpg"], "step_title": "Step 9: The Photobook"}, {"step": 10, "steps_text": "The only other thing in the box was this wooden container. We liked how the outside had things on it that we had connections to. A watch, a turtle, a Tiki. It was cool. So we figured it was for both of us. If you put your fingers on the two large bumps on top and turn the top knob, the sides rotate and you find the things that are on the inside. It had notes with even more clues and six test tubes inside. Two had fluid in them and the others had powder. The top of the container had numbers that seemed to match up with what we were supposed to do with the big box.\nThe test tubes housed chemicals and fluids to be used to make an electrolytic fluid for one of the Machines locks. The notes were clues for each step of the Machine.", "step_imgs": ["https://cdn.instructables.com/FQU/NQ5M/JSIUPVZY/FQUNQ5MJSIUPVZY.LARGE.jpg", "https://cdn.instructables.com/F3B/H3A1/JSIUPVZZ/F3BH3A1JSIUPVZZ.LARGE.jpg", "https://cdn.instructables.com/F0H/66ZI/JSIUPW05/F0H66ZIJSIUPW05.LARGE.jpg", "https://cdn.instructables.com/FRD/N7DG/JSIUPW09/FRDN7DGJSIUPW09.LARGE.jpg", "https://cdn.instructables.com/FPO/VVOQ/JSIUPW0A/FPOVVOQJSIUPW0A.LARGE.jpg"], "step_title": "Step 10: The Brother's Box (carousel of Knowledge)"}, {"step": 11, "steps_text": "We were at the mall and we stopped to get a pretzel. When the lady gave me my change she handed me a box too. I told here it wasn't mine but she just smiled and said \"yes it is\". We looked to see if Dad was around but couldn't see him. There was another box inside the first one and inside that one there was a white crystal. It looked like it was broken. When we got home we found a little box sitting by the TV. It Was locked somehow. Once we figured how to get into it we found the other two pieces of the crystal and we put them together with two o-rings we found in our Dad's stuff. Later we received text messages that told a story about a tiny bird and a garden. We were able to figure out how the crystal fit into the box and we put it in.\nThe story they're referring to is one I made up about an old couple that moved to a house in a forest. Behind the house sat a beautiful meadow and the lady of the house tended to it every day. Her husband found a crystal in the mine where he worked and brought it home for her. She placed it in the garden in the meadow and from that day on the trees bore fruit year round and the flowers bloomed every day. One day a little finch carelessly knocked the crystal from its perch and broke it into three pieces. From then on the trees would grow no fruit and the flowers wilted. The little bird felt so bad that he flew as fast as he could, over ten miles, to the house of a cobbler and flew and shrilled around his head until the man followed it back to the garden. The bird could not speak but somehow the old cobbler knew what he had to do. He repaired (healed) the crystal and made a special mount for it so that the same thing would never happen again. And once again, the meadow was filled with beauty and song. And the little finch sat guard on it every day until his death. The cobbler then erected a small statue above the crystal in his memory.", "step_imgs": ["https://cdn.instructables.com/FZD/IZS4/JSIUQ4UL/FZDIZS4JSIUQ4UL.LARGE.jpg", "https://cdn.instructables.com/FB3/9SR4/JSIUQ4ZC/FB39SR4JSIUQ4ZC.LARGE.jpg", "https://cdn.instructables.com/FBN/7RVU/JSIUQ4ZD/FBN7RVUJSIUQ4ZD.LARGE.jpg", "https://cdn.instructables.com/FWO/JU86/JSIUQ4ZF/FWOJU86JSIUQ4ZF.LARGE.jpg", "https://cdn.instructables.com/FWF/CN8V/JSIUQ507/FWFCN8VJSIUQ507.LARGE.jpg", "https://cdn.instructables.com/FLA/ZABX/JSIUQ4VD/FLAZABXJSIUQ4VD.LARGE.jpg", "https://cdn.instructables.com/FRT/Q7AC/JSIUQ6XG/FRTQ7ACJSIUQ6XG.LARGE.jpg"], "step_title": "Step 11: The Crystal and the Little Japanese Box"}, {"step": 12, "steps_text": "We turned the dial on the box and the light above the metal box up front lit up. We played with the switches a bit and when we moved the far right one a siren went off and a light began blinking. It was annoying so we turned it back off. We were stuck again. The next day at school we each got a text message with three words. Binary Code Decimal. We figured Dad wanted us to look it up and we did. It still didn't help.", "step_imgs": ["https://cdn.instructables.com/FP0/8MT6/JSIUPZDC/FP08MT6JSIUPZDC.LARGE.jpg", "https://cdn.instructables.com/FSG/FP8T/JSIUQ07L/FSGFP8TJSIUQ07L.LARGE.jpg"], "step_title": "Step 12: Task 3"}, {"step": 13, "steps_text": "We were still stuck and Dad wouldn't help. He just kept saying we had everything we needed. My little brother was getting a bit mad when he spotted a box we had never seen before sitting on a shelf above the TV. When he brought it down he said he could hear it talking. It wasn't loud enough where we could understand it. We saw the lock and ran to get that other key we had. It fit. We got it to open and found a really old phone. When you listened you could hear a British man talking. All he was saying was a list of numbers. So we got one of the small notepads we found in the drawer and wrote them down.\nThe (Phantom Phone) is an old tranceiver that I came across at an antique store. I found the trapezoidial box at the same time and they seemed to go together well. I wanted it to work but couldn't bring myself to hard wire it to the machine. I went on Ebay and searched for the smallest bluetooth speaker I could find and when it arrived I created a new coverplate for the earpiece and fitted the speaker into place. Something I learned. Brass pieces that have been screwed in place for a hundred or so years really don't like coming apart! I almost broke it trying to open the speaker section. It wasn't until I heated it up that I was finally able to break it loose, and then, only as it began to cool.", "step_imgs": ["https://cdn.instructables.com/FSI/K996/JSIUPZDR/FSIK996JSIUPZDR.LARGE.jpg", "https://cdn.instructables.com/F9I/YD84/JSIUPZDU/F9IYD84JSIUPZDU.LARGE.jpg", "https://cdn.instructables.com/F21/0GLM/JSIUQ11G/F210GLMJSIUQ11G.LARGE.jpg", "https://cdn.instructables.com/F9M/CPDU/JSIUPZGN/F9MCPDUJSIUPZGN.LARGE.jpg", "https://cdn.instructables.com/F6S/Q43V/JSIUQ14I/F6SQ43VJSIUQ14I.LARGE.jpg", "https://cdn.instructables.com/F5S/KQRX/JSIUQ155/F5SKQRXJSIUQ155.LARGE.jpg"], "step_title": "Step 13: Trapezoidial Box (thats What They Called It!)"}, {"step": 14, "steps_text": "Dad wouldn't let us use anything to help figure out the box unless we had found it along the way or a friend or stranger had given it to us. I was gonna add up the numbers from the phone myself to see if it was a clue when my brother pulled this addometer out of the drawer. Turns out it's an old calculator. Lucky thing because there were a lot of numbers. But, it takes some getting used to. We added the numbers from the phone and got 101001923. Looking into binary we found that this didn't work out. Binary has eight digits or four. So we were stuck again. Dad said we had all we needed. So we went back. We added the numbers again and got 10100110. We used that number to put the switches in the right positions. When we turned on the master switch the buzzer stayed off and the crystal lit up. After about a minute or so, we started hearing music coming out of the little speaker on the right side.\nOnce they got the math right they figured out that the binary code represented the position of the switches in basic form. 1 stood for on and 0 stood for off. When they positioned the switches in this way and threw the main switch, all was as it should be and the little bird's crystal came to life.", "step_imgs": ["https://cdn.instructables.com/FY7/76AX/JSIUPZDF/FY776AXJSIUPZDF.LARGE.jpg", "https://cdn.instructables.com/FX5/52P0/JSIUPOYH/FX552P0JSIUPOYH.LARGE.jpg", "https://cdn.instructables.com/FOP/YW2E/JSIUQD3T/FOPYW2EJSIUQD3T.LARGE.jpg"], "step_title": "Step 14: The Addometer"}, {"step": 15, "steps_text": "We turned the switch to 4. We got text messages telling us to go to a shop my dad really likes. While we were looking around we were told to look out for boxes that looked like Aladdin would have used them. We found three and the lady at the desk said they were on sale because they were locked and they didn't have the keys. We bought them and took them home. We were able to open the locks and found three gears with letters on them. It took us awhile but we figured how to put them on the box and set them in order to get the correct information we needed. We got a clue that read, T2B 675 T2B DAD We noticed that each gear had a different number of arms and put them in place top to bottom 6 spokes, 7 spokes, 5 spokes. We found that each gear had a small screw sitting next to it and tried setting DAD Next to the screws going top to bottom. Then we tried solving a code clue we had gotten earlier. It worked. But it didn't work for the second one.\nThey had to wait for another message reading T2B567MOM to decode the other coded message.The magnifying glass was built into the box so that it could be moved to the top and bottom gears and make the decoding process easier, keep an eye on the miniature sword it will be important later...", "step_imgs": ["https://cdn.instructables.com/FP0/K5N9/JSIUQBTR/FP0K5N9JSIUQBTR.LARGE.jpg", "https://cdn.instructables.com/FGU/FXHP/JSIUQBDZ/FGUFXHPJSIUQBDZ.LARGE.jpg", "https://cdn.instructables.com/F5W/9VW4/JSIUQBGN/F5W9VW4JSIUQBGN.LARGE.jpg", "https://cdn.instructables.com/FZC/56U1/JSIUQBII/FZC56U1JSIUQBII.LARGE.jpg", "https://cdn.instructables.com/FMB/WRXL/JSIUQBLE/FMBWRXLJSIUQBLE.LARGE.jpg", "https://cdn.instructables.com/FLH/VRRN/JSIUQBPX/FLHVRRNJSIUQBPX.LARGE.jpg", "https://cdn.instructables.com/FPL/6SRI/JSIUQBN2/FPL6SRIJSIUQBN2.LARGE.jpg", "https://cdn.instructables.com/FJH/PKOQ/JSIUQBRM/FJHPKOQJSIUQBRM.LARGE.jpg", "https://cdn.instructables.com/FW6/IYY3/JSIUQGLG/FW6IYY3JSIUQGLG.LARGE.jpg"], "step_title": "Step 15: Task 4"}, {"step": 16, "steps_text": "We turned the dial to 5. dad is an electrician and has told us that electricity flows through a wire kind of like water through a hose. We figured that the wire on the back might work that way. We got another text about electric fluids and used it with another clue from his carousel to figure out what we needed to do. We mixed some of the things that were in the test tubes and poured in just enough to fill the little cup on the back. I was just going to use a test wire I found in Dad's bag to connect the wires, but he told us in the clues not to cheat. Nothing happened. We found that he hadn't finished the wiring in back and used a test wire with clips on the ends to take the place of the piece he forgot. Still nothing happened.", "step_imgs": ["https://cdn.instructables.com/FJV/9V4L/JSIUQGUP/FJV9V4LJSIUQGUP.LARGE.jpg", "https://cdn.instructables.com/FZE/MPYH/JSIUQGUT/FZEMPYHJSIUQGUT.LARGE.jpg"], "step_title": "Step 16: Task 5"}, {"step": 17, "steps_text": "We got another text that said, \"...even a snowflake can be a switch\". Mom had finished putting here Christmas decorations up and there were at least 20 snowflakes in the house. We checked them all and only one looked like it would fit in with the box somehow. It was gold colored and felt metallic. We noticed that two spots on the snowflake had the paint taken off so we started looking for where those spots could go. And it matched up to two points on the speaker that just happened to have wires going to them. It took a bit of force to make it fit but when we got it in place and connected the wires to the box a glass flower shaped cup started to glow. We didn't notice until the next day that it also made a red laser shoot up at the ceiling.\nThe snowflake was a switch I added late in the project. I thought it would make a nice decorative piece and be a nice segue into the final lock or switch. The two wires coming from the machine to the speaker were electrically isolated from the metal speakermount by inserting nylon flange washers between the mounts and the screws on the back of the brass arms that held them in place. Once that was accomplished the metal of the snowflake would be able to complete the circuit, kind of like a knife switch, when it was installed.", "step_imgs": ["https://cdn.instructables.com/FFD/PDKN/JSIUQJFO/FFDPDKNJSIUQJFO.LARGE.jpg", "https://cdn.instructables.com/FWZ/D6UD/JSIUQJB7/FWZD6UDJSIUQJB7.LARGE.jpg", "https://cdn.instructables.com/F8Z/1057/JSIUQJBM/F8Z1057JSIUQJBM.LARGE.jpg", "https://cdn.instructables.com/FS2/SOA7/JSIUQJBB/FS2SOA7JSIUQJBB.LARGE.jpg"], "step_title": "Step 17: Even a Snowflake Can Be a Switch!"}, {"step": 18, "steps_text": "We made sure everything was connected and turned the dial to 6. Nothing. It was Christmas Eve and we were opening our other presents. I opened a card addressed to my brother and me. It talked about a boy who grew flowers in the desert. These flowers came to help the boy when the townspeople said he was the reason there was no water. The flowers shot light into the sky and it rained glowing water and that water filled the town's Well. And, there was a coded message again. We had to use the wheels on the side of the box again. But when we tried to read it it didn't make sense. We used Google translate and found out it was in Latin. It said,\" As the currents feed the flowers, the flowers feed the Well\".\nAgain, Dad wouldn't help. We stopped opening our other presents and decided to finish it. We checked and opened every one of Dad's things in the living room and found two mirrors in two small boxes above the couch. We figured out that we had to redirect the laser into the piece that was called the Well. We found the Well piece in his things months earlier but didn't think it did anything. The Well was supposed to sit where this small metal piece had been sitting on top of a car amp gauge next to the glow flower. After we swapped it out we tried making the laser go through the hole in the Well. It was not easy at all. we didn't know what it was suppose to do. Our mom saw a few lights come on on the front of the box while we were fiddling with it and we kept trying the laser until they stayed on.\nThe story they're speaking of was another of mine. \"The Light Flowers and The Light Well\" It was about a young boy that lived in the desert. His village was running very low on water but he used some of it to try to save a small bunch of flowers he had found near his home. The flowers responded to the love shown by the boy and sprang to life blooming a beautiful silver green. When the villagers saw the flowers they became angry at the boy for wasting their precious water on such silly flowers while they and their animals were at risk of dying of thirst. The boys father reluctantly agreed to beat the boy as a punishment to keep the villagers from burning down their house. The father didn't want to but had no choice. He stalled as long as he could, and just as he was to give his son the first lash, The flowers began to sing. Beautiful sounds began to come from the flowers and they began to glow. They continued to get louder and brighter until they each shot a bright red beam of light into the sky. Clouds began to form and soon it was raining cats and dogs worth of bright glowing rain that fell over the village and filled the Well at the boys home. The villagers felt blessed and realized how terrible they had been to the boy and his family. They built a fortified wall and cistern to protect the well and the flowers from harm.\nOnce they read this, my boys figured out what they needed to do.", "step_imgs": ["https://cdn.instructables.com/FW4/ZU2O/JSIUQN4Y/FW4ZU2OJSIUQN4Y.LARGE.jpg", "https://cdn.instructables.com/FJA/63HP/JSIUQN4Z/FJA63HPJSIUQN4Z.LARGE.jpg", "https://cdn.instructables.com/FBN/E4ZJ/JSIUQNQ9/FBNE4ZJJSIUQNQ9.LARGE.jpg", "https://cdn.instructables.com/FFH/X7IS/JSIUQNSA/FFHX7ISJSIUQNSA.LARGE.jpg", "https://cdn.instructables.com/F40/19SN/JSIUQPN7/F4019SNJSIUQPN7.LARGE.jpg", "https://cdn.instructables.com/F98/DAQV/JSIUQPNT/F98DAQVJSIUQPNT.LARGE.jpg"], "step_title": "Step 18: Task 6"}, {"step": 19, "steps_text": "We finished all six steps. We checked with Dad to make sure. Nothing happened. The front piece lit up. But that type of piece was on a lot of Dad's projects and they didn't say anything or do anything, they just sat there. The piece was held on with tiny screws. Dad said we had all we needed but there was no screwdriver in his case of parts for us to try to remove it. After we finished opening our other presents it hit us. The little sword. Really! We used it to take off the screws holding the decoration piece on and found a key, a little key.\nTo give a bit of backstory. From my very first Christmas box I always included on of these decorative finials. Originally it was meant to light up and say something festive like \"Noel\" or \"Happy Holidays\", but I could never figure out exactly what it should say. It was just as well as everyone who saw it came up with their own idea about what should be there. And do you know what? They were all right!\nWhen my boys tried to open my other boxes they always thought that some secret was hiding behind the finial, but there never was. I was lucky that by now they had overlooked the little thing altogether. A bit of misdirection can go along way. If played well.", "step_imgs": ["https://cdn.instructables.com/FCG/I0XH/JSIUQVYS/FCGI0XHJSIUQVYS.LARGE.jpg", "https://cdn.instructables.com/F21/PS7M/JSIUQPNV/F21PS7MJSIUQPNV.LARGE.jpg", "https://cdn.instructables.com/FZW/7JT2/JSIUQVZ9/FZW7JT2JSIUQVZ9.LARGE.jpg"], "step_title": "Step 19: Now What?"}, {"step": 20, "steps_text": "\"D\" again. And so we reach the end of the Christmas Machine. So much to have gone through. The planning, the building, the endless rebuilding. Was it all worth it? For a small iron key?\nWell, that little key opened another box, in another room, and there were no more tricks, or locks to be opened from there on. And I got to see my boys open the presents that I had been hiding for them all year.\nAnd, in return, I received the best present I ever could have gotten. I got to see my boys work together, enjoy holiday shopping, take pictures with Santa, go out for a good meal, do good deeds for others, learn new things, and watch them become truly excited and happy lost in one of my adventures one last time.\nI have not listed all the things they did over the course of their journey, it would have taken too long for you to read. Suffice it to say that they never let me down, and I think I almost had more fun in all this than they did.\nWhen I started all this, they were 10 and 12, and now they are 16 and 18. And in all respects they have grown into fine young men. Again, if any of these little adventures cause them to look back on things and smile, then it has all been worth it.\nPlease hear me when I say that it is surely true, they grow up way to fast. Take the time to do something fun with your kids before the years fly bye. They are only young once.", "step_imgs": ["https://cdn.instructables.com/FM2/ATYW/JSIUR5TH/FM2ATYWJSIUR5TH.LARGE.jpg", "https://cdn.instructables.com/FAB/4I5D/JSIUR5TV/FAB4I5DJSIUR5TV.LARGE.jpg"], "step_title": "Step 20: Epilogue"}, {"step": 21, "steps_text": "If you've gotten this far, thanks for reading along. As always if I've made too many errors in grammar, had too many misspelled words, been too long winded, or just gone off track, I most sincerely apologize.\n...and to all of you who have been supportive and have had kind things to say about my work along the way....... THANK YOU!", "step_imgs": ["https://cdn.instructables.com/FSR/IJ1I/JSIURHR9/FSRIJ1IJSIURHR9.LARGE.jpg"], "step_title": "Step 21: P.S."}], "channel": "Art"}, {"category": "Technology", "description": "In this tutorial, we're going to make a simple data logger using Arduino. The point is to learn the very basics of using Arduino to capture information and print to the terminal. We can use this basic setup to complete a range of tasks.\nTo get started:\nYou will need a Tinkercad (www.tinkercad.com) account. Head over and sign up with your email or social media account.\nLogging in takes you to the Tinkercad Dashboard. Click \"Circuits\" to the left and select \"Create new Circuit\". Let's get started!\nYou can find the complete file on TInkercad Circuits - Thanks for checking it out!", "title": "Arduino Datalogger", "url": "https://www.instructables.com/id/Arduino-Datalogger/", "steps": [{"step": 1, "steps_text": "You'll need some basic components. These include:\nArduino board\nBreadboard\nAdd those by searching for them and click-dragging them to the middle area.\nPlace the breadboard over the Arduino. It makes it easier to view the connections later.", "step_imgs": ["https://cdn.instructables.com/F8B/OKTU/JSEZ4QFW/F8BOKTUJSEZ4QFW.LARGE.jpg", "https://cdn.instructables.com/FB6/L3OW/JSEZ4QFY/FB6L3OWJSEZ4QFY.LARGE.jpg", "https://cdn.instructables.com/FHA/5YBQ/JSEZ4QFZ/FHA5YBQJSEZ4QFZ.LARGE.jpg", "https://cdn.instructables.com/FHC/SK8K/JSEZ4QG0/FHCSK8KJSEZ4QG0.LARGE.jpg", "https://cdn.instructables.com/F4Z/T2JH/JSEZ4QFQ/F4ZT2JHJSEZ4QFQ.LARGE.jpg"], "step_title": "Step 1: Add Some Components"}, {"step": 2, "steps_text": "A breadboard is a super helpful device for rapid prototyping. We use it to connect components. Some things to note.\nThe dots are connected vertically, but the line in the middle separates this connection from the top and bottom columns.\nColumns are not connected left to right, as in across the row. This means that all components should be connected across the columns rather than down them vertically.\nIf you need to use buttons or switches, connect them across the break in the middle. We'll visit this in a later tutorial.", "step_imgs": ["https://cdn.instructables.com/FO9/XBB8/JSEZ4QFP/FO9XBB8JSEZ4QFP.LARGE.jpg"], "step_title": "Step 2: A Note About Breadboards"}, {"step": 3, "steps_text": "The two sensors we are using are a Photosensitive sensor and Temperature sensor.\nThese sensors evaluate light and temperature. We use Arduino to read the value and display it in the Serial monitor on the Arduino.\nSearch for and add the two sensors. Make sure they are positioned across the columns on the breadboard. Put enough space between them to make it easier to see them.", "step_imgs": ["https://cdn.instructables.com/FGZ/SRQP/JSEZ4QFM/FGZSRQPJSEZ4QFM.LARGE.jpg"], "step_title": "Step 3: Add Two Sensors"}, {"step": 4, "steps_text": "For the photosensitive sensor, add a wire from the 5V pin on the Arduino to the same column as the right leg on the part in the breadboard. Change the wire colour to red.\nConnect the left leg via the pin in the same column to the A0 (A-zero) pin on the Arduino. This is the analog pin, which we will use to read the value from the sensor. Colour this wire yellow or something other than red or black.\nPlace a resistor (search and click-drag) on the board. This completes the circuit and protects the sensor and pin.\nTurn it around so it goes across the columns.\nConnect one leg to the right leg column on the breadboard\nPlace a wire from the other end of the resistor to the ground\nChange the wire colour to black.\nDouble check all connections. If something isn't in the right place, this won't function correctly.", "step_imgs": ["https://cdn.instructables.com/FB9/OIYN/JSEZ4QFK/FB9OIYNJSEZ4QFK.LARGE.jpg", "https://cdn.instructables.com/FVE/BQF5/JSEZ4QH2/FVEBQF5JSEZ4QH2.LARGE.jpg", "https://cdn.instructables.com/F9Z/0D9V/JSEZ4QGW/F9Z0D9VJSEZ4QGW.LARGE.jpg", "https://cdn.instructables.com/FUQ/41DN/JSEZ4QFS/FUQ41DNJSEZ4QFS.LARGE.jpg"], "step_title": "Step 4: Photosensitive Sensor"}, {"step": 5, "steps_text": "Let's look at the code for this component.\nFirst, look at the third image in this step. It contains some code with two functions:\nvoid setup()\n\nvoid loop()\nIn C++, all functions provide their return type, then the name, then the two round braces that can be used to pass in arguments, usually as variables. In this case, the return type is void, or nothing. The name is setup and the function takes no arguments.\nThe setup function runs once when Arduino boots (when you plug it in or attach batteries).\nThe loop function runs in a constant loop from the millisecond the setup function completes.\nEverything you put in the loop function will run when Arduino runs. Everything outside that will only run when called. Like if we defined and called another function outside the loop.\nTask\nOpen the Code panel with the button in Tinkercad. Change the Blocks dropdown to Text. Agree to the warning box that pops up. Now, delete everything you see except the text in the third image in this step.\nVariables\nTo get started, we need to assign some variables so we make our code really efficient.\nVariables are like buckets that can only hold one object (C++ is what we call object-orientated). Yes, we have arrays, but these are special variables and we'll talk about them later. When we assign a variable, we need to tell it what type it is, then give it a value. It looks like this:\nint someVar = A0;\nSo, we assigned a variable and gave it type int. An int is an integer or a whole number.\n\"But you didn't use a whole number!\", I hear you say. That's true.\nArduino does something special for us so we can use A0 as an integer, because in another file it defines A0 as an integer, so we can use the A0 constant to refer to this integer without having to know what it is. If we just typed 0, we would refer to the digital pin at position 0, which wouldn't work.\nSo, for our code we will write a variable for the sensor we have attached. Whilst I recommend giving it a simple name, that's up to you.\nYour code should look like this:\nint lightSensor = A0;\nvoid setup() {\n}\n\nvoid loop() {\n}\nNow, let's tell Arduino how to handle the sensor on that pin. We'll run a function inside setup to set the pin mode and tell Arduino where to look for it.\nint lightSensor = A0;\nvoid setup() {\n pinMode(lightSensor, INPUT);\n}\nvoid loop() {\n}\nthe pinMode function tells Arduino that the pin (A0) will be used as an INPUT pin. Note the camelCaseUsed (see each first letter is a capital, as in it has humps, hence... camel...!) for the variables and function names. This is a convention and good to get used to.\nFinally, let's use the analogRead function to get some data.\nint lightSensor = A0;\nvoid setup() {\n pinMode(lightSensor, INPUT);\n}\nvoid loop() {\n int reading = analogRead(lightSensor);\n}\nYou'll see we stored the reading in a variable. This is important as we need to print it. Let's use the Serial library (a library is code we can add to our code to make things faster for us to write, just by calling it by its definition) to print this to the serial monitor.\nint lightSensor = A0;\nvoid setup() {\n // Set pin modes\n pinMode(lightSensor, INPUT);\n // Add the serial library\n Serial.begin(9600);\n}\nvoid loop() {\n // Read the sensor\n int reading = analogRead(lightSensor);\n // Print the value to the monitor\n Serial.print(\"Light: \");\n Serial.println(reading);\n // delay the next loop by 3 seconds\n delay(3000);\n}\nA few new things! First, you'll see these:\n// This is a comment\nWe use comments to tell other people what our code is doing. You should use these often. The compiler won't read these and convert them in to code.\nNow, we also added the Serial library with the line\nSerial.begin(9600)\nThis is an example of a function that takes an argument. You called the library Serial then ran a function (we know it's a function because of the round braces) and passed in an integer as an argument, setting the Serial function to operate at 9600baud. Don't worry why - just know it works, for now.\nThe next thing we did was print to the serial monitor. We used two functions:\n// This one prints to the serial with no line break (an enter at the end)\nSerial.print(\"Light: \");\n// This one puts in the line break so each time we read and write, it goes on a new line\nSerial.println(reading);\nWhat's important to see is that each has a separate purpose. Make sure your strings use double-quote marks and that you leave the space after the colon. That helps readability for the user.\nFinally, we used the delay function, to slow our loop down and make it only read once every three seconds. This is written in thousands of a second. Change it to read only once every 5 seconds.\nGreat! On we go!", "step_imgs": ["https://cdn.instructables.com/FZP/8I06/JSEZ4RIS/FZP8I06JSEZ4RIS.LARGE.jpg", "https://cdn.instructables.com/FO4/LNJS/JSEZ4RIQ/FO4LNJSJSEZ4RIQ.LARGE.jpg", "https://cdn.instructables.com/FDY/OZNW/JSEZ4RIT/FDYOZNWJSEZ4RIT.LARGE.jpg"], "step_title": "Step 5: Start the Code"}, {"step": 6, "steps_text": "Always check things work by running the simulation. For this circuit, you'll also need to open the simulator to check it works and check your values.\nStart the simulation and check the serial monitor. Change the value of the light sensor by clicking it and changing the value using the slider. You should see the value change in the serial monitor, too. If it doesn't, or if when you press the Start Simulation button you get errors, carefully go back and check all your code.\nFocus on the lines indicated in the red debugging window that will be presented to you.\nIf your code is right and the simulation is still not working, check your wiring.\nReload the page - you might have an unrelated system/server error.\nShake your fist at the computer, and check again. All programmers do this. All. The. Time.", "step_imgs": ["https://cdn.instructables.com/FEJ/UD7C/JSITP1CQ/FEJUD7CJSITP1CQ.LARGE.jpg", "https://cdn.instructables.com/F21/5FAG/JSITP1E5/F215FAGJSITP1E5.LARGE.jpg", "https://cdn.instructables.com/FF5/3I9T/JSITP1PE/FF53I9TJSITP1PE.LARGE.jpg"], "step_title": "Step 6: Simulation"}, {"step": 7, "steps_text": "I am going to assume you're on the right track now. Go ahead and wire up the temperature sensor like the picture suggests. Note the placement of the 5V and GND wires in the same space as the ones for the light. This is ok. It is like a parallel circuit and won't cause issues in the simulator. In an actual circuit, you should use a breakout board or shield to provide better power management and connections.\nNow, let's update the code.\nThe temp sensor code\nThis is a little more tricky, but only because we have to do some math to convert the reading. It's not too bad.\nint lightSensor = A0;\nint tempSensor = A1;\n\nvoid setup() {\n // Set pin modes\n pinMode(lightSensor, INPUT);\n // Add the serial library\n Serial.begin(9600);\n}\nvoid loop() {\n // The temp sensor\n // Creating two variables on one line - oh efficiency!\n // Float var to store a decimal\n float voltage, degreesC;\n\n // Read the value of the pin and convert it to a reading from 0 - 5\n // Essentially voltage  = (5/1023 = 0.004882814);\n voltage = (analogRead(tempSensor) * 0.004882814);\n\n // Convert to Degrees C\n degreesC = (voltage - 0.5) * 100;\n\n // Print to the serial monitor\n Serial.print(\"Temp: \");\n Serial.print(degreesC);\n Serial.println(\"oC\");\n\n // Read the sensor\n int reading = analogRead(lightSensor);\n // Print the value to the monitor\n Serial.print(\"Light: \");\n Serial.println(reading);\n // delay the next loop by 3 seconds\n delay(3000);\n}\nI have made some updates to the code. Let's walk through them individually.\nFirst, I added the line\nint tempSensor = A1;\nJust like the lightSensor, I need to store the value in a variable to make it easier later. If I had to change the location of this sensor (like rewiring the board) then I only have to change the one line of code, not search throughout the entire codebase to change the A0 or A1, etc.\nThen, we added a line to store the reading and the temp in a float. Note two variables on one line.\nfloat voltage, degreesC;\nThis is really helpful because it cuts down on the number of lines I have to write and speeds up the code. It can be harder to find errors, though.\nNow, we'll do the reading and store it, then convert it to our output value.\nvoltage = (analogRead(tempSensor) * 0.004882814);\ndegreesC = (voltage - 0.5) * 100;\nThose two lines look difficult, but in the first we are taking the reading and multiplying it by 0.004... because it converts 1023 (the analog reading returns this value) into a reading out of 5.\nThe second line there multiplies that reading by 100 to move the decimal point. That gives us the temperature. Neat!", "step_imgs": ["https://cdn.instructables.com/FEK/AE21/JSITP09I/FEKAE21JSITP09I.LARGE.jpg"], "step_title": "Step 7: Wire Up the Temp Sensor"}, {"step": 8, "steps_text": "All things going to plan, you should have a working circuit. Test by running the simulation and using the serial monitor. If you have errors, check, check again and shake your fist.\nDid you make it? Share and tell us your story!\nThis is the final circuit embedded for you so you can play/test the final creation. Thanks for completing the tutorial!", "step_imgs": ["https://cdn.instructables.com/FZC/RPKB/JSITP5UQ/FZCRPKBJSITP5UQ.LARGE.jpg"], "step_title": "Step 8: Testing and Checking"}], "channel": "Arduino"}, {"category": "Technology", "description": "Although you can buy analog tide clocks that have a single hand indicating whether the tide is high or low or somewhere in between, what I wanted was something that would tell me at what time low tide will be. I wanted something I could glance at quickly without having to turn it on, or push any buttons, or wait. And I wanted something with long battery life. So I used a TTGO T5 board, which is an ESP32-based board with a 2.13\" e-paper display, connected to a TTL5110 chip. The TPL5110 turns on the T5 every 2.5 hours, and once a day the T5 downloads tide data from NOAA and weather data from OpenWeatherMap, displays the data on the e-paper, then tells the TPL5110 to turn the T5 off.", "title": "Tide and Weather Clock", "url": "https://www.instructables.com/id/Tide-and-Weather-Clock/", "steps": [{"step": 1, "steps_text": "TTGO T5 board $17\nAdafruit TPL5110 board $5\nAdafruit Perma-Proto Quarter-size board (optional) $0.71 (minimum order $8.50)\nLi-Poly battery 1200 mAh $10 (or other appropriate power source)\nJST PH 2-Pin Cable \u2013 Male Header $0.75\n220 uF capacitor", "step_imgs": [], "step_title": "Step 1: Hardware List"}, {"step": 2, "steps_text": "Soldering iron\nWire strippers\nLi-Po battery charger, such as this.", "step_imgs": [], "step_title": "Step 2: Tools"}, {"step": 3, "steps_text": "Assembling the hardware is pretty simple as the schematic shows. I used an Adafruit Perma-proto board which is like a normal protoboard except it is laid out like a breadboard, with the same electrical connections as a breadboard, which is nice. Since I only needed a few connections, and wanted to fit the whole assembly into a small box, I cut one of the boards into fourths with a Dremel cutoff wheel.\nThe 220 uF capacitor is very important. Without it, the TPL5110 will never turn on the T5. It's a little unclear why, but other people using the TPL5110 have had the same problem. Maybe the ESP32 draws more current at startup than the TTL5110 can supply?\nDon't hardwire the battery. Use the JST-PH cable so you can disconnect the battery to charge it. There may be a way to charge the battery from the T5 back through the TPL5110 if the TPL5110 is \"on\", but I can't vouch for that technique.\nI made a wooden box as an enclosure, but anything with minimum interior dimensions of 1.5\" x 2.75\" x 1\" would work.", "step_imgs": ["https://cdn.instructables.com/FX3/RCHQ/JS0OOHSO/FX3RCHQJS0OOHSO.LARGE.jpg", "https://cdn.instructables.com/FH1/IWK5/JS0OOHSC/FH1IWK5JS0OOHSC.LARGE.jpg", "https://cdn.instructables.com/FLP/XV5S/JS0OO7VB/FLPXV5SJS0OO7VB.LARGE.jpg", "https://cdn.instructables.com/F0T/07S2/JS0OOHVK/F0T07S2JS0OOHVK.LARGE.jpg", "https://cdn.instructables.com/F5Q/C2GK/JS0OUVM2/F5QC2GKJS0OUVM2.LARGE.jpg"], "step_title": "Step 3: Assemble Hardware"}, {"step": 4, "steps_text": "The TPL5110 board has a trim potentiometer that sets the time interval at which the TPL5110 wakes up. Use a tiny screwdriver to turn this all the way counterclockwise. On my board, this set the interval to 145 minutes, which is actually more than the spec'ed maximum of 120 minutes, but it works and was consistent and will save even more power than waking every 120 minutes, so I used it. You don't need to know the interval precisely, since the goal is just to download data roughly once a day roughly around 4am. You can specify the interval (e.g., 145 minutes) and the wakeup time (e.g., 4am) in env_config.h.\n(If you want better control of the timing for some other project, the TPL5110 board has a trace on the back you can cut to disable the potentiometer. Then you attach a resistor to the Delay pin, and the resistance determines the interval, according to this chart.)", "step_imgs": [], "step_title": "Step 4: Tune the Timing"}, {"step": 5, "steps_text": "You will need the Arduino IDE with the ESP32 package. In the IDE, set your board to \"ESP32 Dev Module\".\nThe sketch is available at https://github.com/jasonful/Tides and requires 3 libraries:\n\"ESP8266 Weather Station\", available from the Arduino Library Manager (or here). You will only need these 6 files: ESPHTTPClient.h, ESPWiFi.h, OpenWeatherMapCurrent.cpp, OpenWeatherMapCurrent.h, OpenWeatherMapForecast.cpp, OpenWeatherMapForecast.h and can delete the rest.\n\"Json Streaming Parser\" available from the Arduino Library Manager (or here)\nhttps://github.com/LilyGO/TTGO-Epape-T5-V1.8/tree/master/epa2in13-demo Even though the code is not packaged as a true library, you can just copy it under your libraries directory and include it.", "step_imgs": [], "step_title": "Step 5: The Software"}, {"step": 6, "steps_text": "There are several parameters you will have to set (and a few you may want to set) in the env_config.h file, including:\nWiFi SSID and password\nNOAA station id (in other words, where are you)\nOpenWeatherMap AppID, which you will need to register for (it's easy and free)\nOpenWeatherMap LocationID (again, where are you)\nCONFIG_USE_TPL5110, which allows you to use a T5 without a TPL5110. Instead, the software will enter deep sleep mode. The T5 board draws about 8 ma in deep sleep, so I'd only expect the battery to last a few days.", "step_imgs": [], "step_title": "Step 6: Configure the Software"}, {"step": 7, "steps_text": "(You can skip this part if you don't care.)\nThe goal is to wake up once a day, but since the maximum interval of the TPL5110 is only 2 hours or so, the T5 has to wake up more often. So after it downloads tide and weather data, it calculates how many of these 2 hour intervals there are between now and 4:00 am tomorrow morning. This is slightly complicated by the fact that the TPL5110 totally cuts power to the T5, which is good for the battery, but it means we lose RAM and the real-time clock. It's like waking up every morning with amnesia. So to figure out what time it is now, it extracts it from NOAA's HTTP header. And to remember how many 2-hour intervals there are remaining, it writes that counter to non-volatile storage (flash). Every time it wakes up, it checks that counter, decrements it, stores it, and if it greater than zero, it immediately sends a signal to the TPL51110 (\"Done\") telling it to put it to sleep. When the counter hits zero, the code downloads new data, and recalculates and resets the counter.", "step_imgs": [], "step_title": "Step 7: How the Software Works"}, {"step": 8, "steps_text": "Make sure the switch on the left side of the T5 is in the up (on) position, upload the sketch to the T5, and within a few seconds the screen should update with tide and weather info.\nIf you need to debug the software, change the \"#define DEBUG 0\" at the top of Tides.ino to \"#define DEBUG 1\". This will turn on serial debug output, and also display at the bottom of the e-paper the number of restarts remaining before it downloads new data, and the time it last downloaded data.", "step_imgs": ["https://cdn.instructables.com/FL7/4N5X/JS0OO7VC/FL74N5XJS0OO7VC.LARGE.jpg"], "step_title": "Step 8: Run It"}, {"step": 9, "steps_text": "The use of the TPL5110 combined with an e-paper display is a great way to display any data that does not change often, with excellent battery life.\nWhen I was designing this, I considered using the TrigBoard, which is an ESP8266 board with a TPL5111 on board. It would have required getting a separate e-paper display and e-paper driver board like this or this. Or a driver+board combo like this or this. To port the code to ESP8266, I think the SSL code will have to use fingerprints instead of certificates, and the non-volatile storage code will need to use EEPROM or RTC memory.\nI recently heard that the Lolin32 board is pretty decent in deep sleep mode : about 100uA. Not as good as the TPL51110 board (20uA according to Adafruit) but good enough.\nOpenWeatherMap returns a lot more weather data than I am displaying. Including icon ids, which would require finding monochrome icons somewhere.", "step_imgs": [], "step_title": "Step 9: Future Directions"}], "channel": "Arduino"}, {"category": "Technology", "description": "I've always wanted to play around with a split flap display but haven't until now been able to get one working satisfactorily, The other is that many builds also use laser cut items to which I dont have access. So when this one came along from Jonas Bonjeanand which I discovered on https://hackaday.io/project/163725-split-flap-disp...\nI built up one of these, but also wanted to build self-contained electronics into it and also had this idea to make it look antique.", "title": "Split Flap Display - Antique Remix", "url": "https://www.instructables.com/id/Split-Flap-Display-Antique-Remix/", "steps": [{"step": 1, "steps_text": "Starting with the base models I went ahead and remixed nearly all of the parts, apart from the flaps. As well as building in an enclosure for the Wemos board I also added somewhere to mount the ULN2003 drive board.\nSo what you see here are some test builds based on a mix of the original parts and some modified components. The bearings used here are 625ZZ which are 16mm OD and 5mm thick with an inner bore diameter of 5mm. Nice little alternatives to the normal go to fidget/skateboard bearing. You can get them cheap as well in 10 packs.\nThe end plate was remodelled to mirror the other side and the gears were reworked to give a bit more industrial feel to them. Likewise a faux petrol tank was added to cover the mechanical end-stop board and a lifting eye added to provide some detail for the back. There was some internal work also done for the drum to mate easier onto the shaft and a 2mm bolt added to allow the drum to be securely clamped when the flaps were in .\nAll the latest files can be found on https://www.thingiverse.com/thing:3449562", "step_imgs": ["https://cdn.instructables.com/F21/XSOR/JSITP3V5/F21XSORJSITP3V5.LARGE.jpg", "https://cdn.instructables.com/FTP/OB0G/JSITP3VA/FTPOB0GJSITP3VA.LARGE.jpg", "https://cdn.instructables.com/F10/097U/JSITP3VC/F10097UJSITP3VC.LARGE.jpg", "https://cdn.instructables.com/F73/UXG6/JSITP3VW/F73UXG6JSITP3VW.LARGE.jpg", "https://cdn.instructables.com/FSF/8QMF/JSITP3YC/FSF8QMFJSITP3YC.LARGE.jpg"], "step_title": "Step 1: Step 1 - the Build Files"}, {"step": 2, "steps_text": "Putting it all together is pretty simple, which is one of things that attracted me to this design. There are a couple of parts where you need to assemble them correctly. The main one of course is the drum. You'll need to add the spacer inside so that it keeps the nub of the drum aligned with the mechanical endstop. The other is to get all the flaps installed without them falling on the floor. I did try and build an assembly jig, but couldnt wait in the end and just used a lot of blu-tak to hold the flaps in place. With them all aligned the same way, the top goes on and a 2mm bolt holds it all together.\nShortening the leads on the stepper motor and on the switch is also needed to keep things nice and neat. Pieces of heatshrink on every lead for this stops anything shorting out and keep all the leads short for the Wemos as well.", "step_imgs": ["https://cdn.instructables.com/FDW/Q63Y/JSITPCG7/FDWQ63YJSITPCG7.LARGE.jpg", "https://cdn.instructables.com/FFI/TU7I/JSITPCH2/FFITU7IJSITPCH2.LARGE.jpg", "https://cdn.instructables.com/FND/Q0QZ/JSITPCKG/FNDQ0QZJSITPCKG.LARGE.jpg", "https://cdn.instructables.com/F0W/RI7S/JSITPCLB/F0WRI7SJSITPCLB.LARGE.jpg", "https://cdn.instructables.com/FRX/FLLD/JSITPCM6/FRXFLLDJSITPCM6.LARGE.jpg", "https://cdn.instructables.com/F17/YVTS/JSITPCNB/F17YVTSJSITPCNB.LARGE.jpg", "https://cdn.instructables.com/FC7/B0VM/JSITPCNC/FC7B0VMJSITPCNC.LARGE.jpg", "https://cdn.instructables.com/FXN/H9RG/JSITPCO7/FXNH9RGJSITPCO7.LARGE.jpg", "https://cdn.instructables.com/FOW/NFSL/JSITPCP2/FOWNFSLJSITPCP2.LARGE.jpg", "https://cdn.instructables.com/FIH/YXTW/JSITPCPX/FIHYXTWJSITPCPX.LARGE.jpg", "https://cdn.instructables.com/FBU/NERA/JSITPCQT/FBUNERAJSITPCQT.LARGE.jpg", "https://cdn.instructables.com/FF1/OJNR/JSITPGOH/FF1OJNRJSITPGOH.LARGE.jpg"], "step_title": "Step 2: Step 2 : Building the Machine"}, {"step": 3, "steps_text": "The software is for the Wemos D1 Mini R2 and works on an arduino if you remove the wifi parts. The principle behind this is to place the sensing of the end stop switch on an interupt which zeros the stepper position. You can then move the drum each time to the position you want knowing that zero is always the same. To work out the steps required for each flap considering the number of steps the standard motors have and the gear train I just did it backwards. So I put it all together and just ran the stepper counting the steps for several revolutions to get a sort of average and then divided this by 12. It sort of worked out about right at 225 steps per flap. Then to guarantee that if you wanted to go to the home position, you drive the stepper past this to 2800 steps knowing that it will hit the home switch before that and get zeroed. The only other major issue is that i discovered two different wiring setups for these stepper motors. Older ones I had would go the other way and on inspection you can see that the 5 wires to the motor were in a different order. However all the recent ones I have work with this code.\nI also use the Adafruit IO service with this which in turn is fed data from IFTTT. You can use the core and just feed anything in you want, or you can even control it manually through the serial programming port by typing the number of steps you want, or use m1,m2 etc to move directly to a flap position for testing.\nCode:-\n// Split flap controller using Wemos D1 R1 with 28BYJ-48 stepper motor\n/************************** Configuration ***********************************/\n// Adafruit IO connection details\n#define IO_USERNAME  \"io-username-here\"\n#define IO_KEY       \"io-key-here\"\n\n// leave blank as we get these through the Wifi Manager when it runs\n#define WIFI_SSID       \"\"\n#define WIFI_PASS       \"\"\n\n// These set up all the includes to run the wifi component and setup manager\n#include <ESP8266WiFi.h>            //https://github.com/esp8266/Arduino\n#include <DNSServer.h>\n#include <ESP8266WebServer.h>\n#include \"WiFiManager.h\"            //https://github.com/tzapu/WiFiManager\n#include <WiFiUdp.h>\n\n// Adafruit queue service, where we send the IFTT data to and then can download it\n#include \"AdafruitIO_WiFi.h\"\nAdafruitIO_WiFi io(IO_USERNAME, IO_KEY, WIFI_SSID, WIFI_PASS);\n\n// Stepper driver library\n#include <AccelStepper.h>\n#define HALFSTEP 8#define HALFSTEP 8\n\n// Wemos values to make addressing the pins easy\nstatic const uint8_t D0   = 16;\nstatic const uint8_t D1   = 5;\nstatic const uint8_t D2   = 4;\nstatic const uint8_t D3   = 0;\nstatic const uint8_t D4   = 2;\nstatic const uint8_t D5   = 14;\nstatic const uint8_t D6   = 12;\nstatic const uint8_t D7   = 13;\nstatic const uint8_t D8   = 15;\n\n// Connection pins for stepper controller\n#define motorPin1  D5     // Driver board IN1\n#define motorPin2  D6     // Driver board IN2\n#define motorPin3  D7     // Driver board IN3\n#define motorPin4  D8     // Driver board IN4\n\n// Define the Pins used for the Home detection \n#define home_switch D3    // Pin 2 connected to Home Switch (MicroSwitch) - not the best pin as it stops program upload if its not open\nint incomingByte = 0;     // for incoming serial data\nint flacker = 0;          // count for which flap is flacked\nint carryover = 0;        // value to carry over\n\n// read position required\nconst byte numChars = 6;\nchar receivedChars[numChars]; // an array to store the received data\nboolean newData = false;\n\n// Homing startup value\nlong initial_homing=-1;       // Used to Home Stepper at startup\n\n// Define a stepper and the pins it will use\nAccelStepper stepper1(8,motorPin1,motorPin3,motorPin2,motorPin4); \n\n// set up the 'twitterfan' feed , the feed we connect to so as to get updates\nAdafruitIO_Feed *twitter = io.feed(\"twitterfan\");\n\n// Saves the last tweet details and status so we only fire once\nString lasttweet  =\"\";\nbool newTweet = false;\nint tweeter_number;\n\n// All the setup details here\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"split flap drive - 225 steps a flap\");\n  \n  // for testing show the status of the WiFi\n  WiFi.printDiag(Serial);\n  WiFiManager wifiManager;\n\n  //set a wifi callback that is called if connecting to a previous WiFi fails, this then calls up Access Point setup\n  wifiManager.setAPCallback(configModeCallback);\n\n  // reset saved settings , un comment this next line to force the testing of the WiFi Manager so you can connect\n  // use your phone or tablet to look for the Split flap network that will appear\n  // wifiManager.resetSettings();\n\n  // sets timeout until configuration portal gets turned off\n  // useful to make it all retry or go to sleep in 240 seconds\n  // this means you have a few minutes to connect \n  wifiManager.setTimeout(240);\n\n  if (!wifiManager.autoConnect(\"Split Flap\")) {\n      Serial.println(F(\"failed to connect and hit timeout\"));\n      //reset and try again\n      delay(3000);\n      ESP.reset();\n      delay(1000);\n  }\n  // now we connect to the Adafruiti IO service\n  Serial.print(F(\"Connecting to Adafruit IO\"));\n  io.connect();\n  // set up the message handler for the 'twitterfan' feed.\n  twitter->onMessage(twitterMessage);\n  // wait for a connection\n  while (io.status() < AIO_CONNECTED) {\n    Serial.print(F(\".\"));\n\n\n  Serial.print(\"The Stepper is now Homing . . . . . . . . . . . \");\n\n  // Set up the home position switch\n  pinMode(home_switch, INPUT_PULLUP);\n  // Attach an interrupt to the ISR vector for the home switch\n  attachInterrupt(digitalPinToInterrupt(home_switch), handleInterrupt, FALLING);\n\n  ESP.wdtDisable();                     // the timeout has to be turned off as the stepper move is blocking\n  stepper1.setMaxSpeed(750.0);\n  stepper1.move(1);               // seems to like a small move to get things going \n  stepper1.setAcceleration(12000);\n  stepper1.setSpeed(50);\n  stepper1.move(2000);\n  ESP.wdtEnable(1000);                  // so we turn it back on after the movement\n\n\n  ESP.wdtDisable();                     // the timeout has to be turned off as the stepper move is blocking\n  while (digitalRead(home_switch)) {  // Make the Stepper move until the home switch is activated   \n    stepper1.moveTo(initial_homing);  // Set the position to move to\n    initial_homing++;                 // Decrease by 1 for next move if needed\n    stepper1.run();                   // Start moving the stepper\n    //// Serial.print(\".\");\n    delay(2);\n  }  \n  ESP.wdtEnable(1000);                  // so we turn it back on after the movement\n\n  stepper1.setCurrentPosition(0);\n  Serial.print(\" Stepper is now Homed position=\");     Serial.println(stepper1.currentPosition());\n  delay(500);\n  }\n\n  // now we are connected\n  Serial.println();\n  Serial.println(io.statusText());\n   \n}//--(end setup )---\n\nvoid loop() {\n  io.run();\n  recvWithEndMarker();  // check the serial port for manual step details\n  showNewData();        \n  flapToTweeter();     \n  // Need to call this every loop\n}\n\n\n// read the serial input and if there is data, store it\nvoid recvWithEndMarker() {\n  static byte ndx = 0;\n  char endMarker = '\\n';\n  char rc;\n  // if (Serial.available() > 0) {\n  while (Serial.available() > 0 && newData == false) {\n    rc = Serial.read();\n\n    if (rc != endMarker) {\n      receivedChars[ndx] = rc;\n      ndx++;\n      if (ndx >= numChars) {\n        ndx = numChars - 1;\n      }\n    } else {\n      receivedChars[ndx] = '\\0'; // terminate the string\n      ndx = 0;\n      newData = true;\n    }\n  }\n}\n\n// move the stepper if we have incoming serial command\nvoid showNewData() {\n  if (newData == true) {\n    flacker++;\n    Serial.print(\"Serial cmd  ... rx=\");\n    String cmd = String(receivedChars);\n    Serial.print(cmd); \n    Serial.print(' '); \n    if (receivedChars[0] == 'm') {          // denotes a move command m1,m2,m3 etc\n      int flap = atoi(&receivedChars[1]);\n      // int flap_pos = flap * 225 * -1;    // use this for reverse wired stepper motors that exist\n      int flap_pos = flap * 225;\n      Serial.print(\"  move flaps from position \");\n      Serial.print(stepper1.currentPosition());\n      Serial.print (\" to \");\n      Serial.print (flap_pos);\n      if (stepper1.currentPosition()<flap_pos) {\n        Serial.println(\" move straight there as its before the home position \");\n        stepper1.moveTo(flap_pos);   \n        carryover = 0;                      // 0 value as we can get there in one move\n      } else {\n        Serial.println(\" has to go past home \");\n        carryover = flap_pos;\n        stepper1.moveTo(2800);              // move to the home position and then the carryover will move it again \n                                            // we do this so that the stepping always goes in one direction \n      }\n      ESP.wdtDisable();                     // the timeout has to be turned off as the stepper move is blocking\n      stepper1.runToPosition();             // if the watchdog timer is enabled, then the wemos will reset \n      ESP.wdtEnable(1000);                  // so we turn it back on after the movement\n      flacker=flap;\n    } else {\n      //Serial.print(receivedChars);          // show what came in on the serial \n      int pos = atoi(&receivedChars[0]);    // turn it into an integer and just move there\n\n      stepper1.move(pos);\n      ESP.wdtDisable();\n      stepper1.runToPosition();\n      ESP.wdtEnable(1000);\n \n      Serial.print(\" showing flap \");\n      Serial.print(flacker); \n      Serial.print(\" at step  position \");\n      Serial.println(stepper1.currentPosition());\n    }   \n   newData = false;\n   for( int i = 0; i < sizeof(receivedChars);  ++i )\n      receivedChars[i] = (char)0;\n  }\n}\n\n\n// movement to a flap from a io number \nvoid flapToTweeter () {\n    if (newTweet == true) {\n     //int flap_pos = tweeter_number * 225 * -1;  // use for old reversed steppers\n      int flap_pos = tweeter_number * 225;\n      Serial.print(\"IO flap move request from step \");\n      Serial.print(stepper1.currentPosition());\n      Serial.print (\" to step \");\n      Serial.print (tweeter_number);\n      if (stepper1.currentPosition()<flap_pos) {\n        Serial.println(\" go straight there\");\n        stepper1.moveTo(flap_pos);  \n        carryover = 0;\n      } else {\n        Serial.println(\" go past home first \");\n        carryover = flap_pos;\n        stepper1.moveTo(2800);\n      }\n      ESP.wdtDisable();\n      stepper1.runToPosition();\n      ESP.wdtEnable(1000);\n      flacker=flap_pos;\n      newTweet = false;\n    }\n}\n\n\n// -----------------------------------------------------------------------------------------\n//  the interupt when the home switch has been tripped \nvoid handleInterrupt() {\n    // Serial.print(\" home position=\");   // Serial.print(stepper1.currentPosition());\n    // Serial.print(\" carry over=\");      // Serial.println(carryover);\n    stepper1.setCurrentPosition(0);\n    flacker =0;\n   stepper1.moveTo(carryover);            // keep moving if a carry over was required\n   ESP.wdtDisable();\n   stepper1.runToPosition();\n   ESP.wdtEnable(1000);\n   carryover=0;\n}\n\n\n// -----------------------------------------------------------------------------------------\n// this is called whenever a 'twitter' message arrives - get the first integer value\nvoid twitterMessage(AdafruitIO_Data *data) {\n    String tweeter =   (data->toString());    \n    tweeter.toLowerCase();\n    if ((lasttweet != tweeter) && (tweeter != \"\")) {\n        lasttweet = tweeter;\n        tweeter_number = (data->toInt());\n        newTweet = true;\n        Serial.print(F(\"Tweet: \"));   Serial.print(tweeter);\n        Serial.println(\"\");\n    }\n}\n\n\n// -----------------------------------------------------------------------------------------\n// this is called when WiFiManager enters configuration mode,  \nvoid configModeCallback (WiFiManager *myWiFiManager) {\n    Serial.println(F(\"Entered config mode\"));\n    Serial.println(WiFi.softAPIP());\n    //if you used auto generated SSID, print it\n    Serial.println(myWiFiManager->getConfigPortalSSID());\n\n}", "step_imgs": ["https://cdn.instructables.com/F5V/IFKO/JSITPDOH/F5VIFKOJSITPDOH.LARGE.jpg"], "step_title": "Step 3: Step 3: Software"}, {"step": 4, "steps_text": "Not wanting a plain print finish I took the route of trying to give it an antique metal look. You'll also see that I resprayed the motor can as well with some copper airbrush paint from Vallejo. The actual parts themselves were all first painted in Matt black car spray. Then I brushed on a burnt umber and let it dry which right away gives a metalled tone to the colour. This was just brushed on and wiped back, then followed up with some raw umber. These are cheap acrylics from a local art shop and only cost a couple of pounds each. With the petrol tank, this was painted in green and tamiya gold leaf X-12 was painted on. This also got a spray of gloss varnish to give it that oily look that you'd expect with a petrol/oil tank. Last touch was some raw sienna to give a light rusting look and then some silver leaf rub n buff on edges to give the impression of worn metal surfaces.", "step_imgs": ["https://cdn.instructables.com/F37/G89G/JSITPFW2/F37G89GJSITPFW2.LARGE.jpg", "https://cdn.instructables.com/FXJ/NZW7/JSITPFUY/FXJNZW7JSITPFUY.LARGE.jpg", "https://cdn.instructables.com/FE0/5RJ5/JSITPFVT/FE05RJ5JSITPFVT.LARGE.jpg", "https://cdn.instructables.com/FRV/7F2O/JSITPFVW/FRV7F2OJSITPFVW.LARGE.jpg", "https://cdn.instructables.com/FK3/Y0U9/JSITPFVY/FK3Y0U9JSITPFVY.LARGE.jpg", "https://cdn.instructables.com/FCI/BNNE/JSITPFVZ/FCIBNNEJSITPFVZ.LARGE.jpg", "https://cdn.instructables.com/FHR/H5QM/JSITPFWT/FHRH5QMJSITPFWT.LARGE.jpg", "https://cdn.instructables.com/FCX/XHR8/JSITPFWU/FCXXHR8JSITPFWU.LARGE.jpg", "https://cdn.instructables.com/FON/TB4N/JSITPFWV/FONTB4NJSITPFWV.LARGE.jpg", "https://cdn.instructables.com/FZY/ZR6J/JSITPFWW/FZYZR6JJSITPFWW.LARGE.jpg", "https://cdn.instructables.com/FG7/SLPB/JSITPFWX/FG7SLPBJSITPFWX.LARGE.jpg", "https://cdn.instructables.com/FTX/G2KR/JSITPGNG/FTXG2KRJSITPGNG.LARGE.jpg"], "step_title": "Step 4: Step 4: Weathering"}, {"step": 5, "steps_text": "Here are some pictures I've taken of the final model , I've also added victorian water colour prints of flowers to each flap.", "step_imgs": ["https://cdn.instructables.com/F1F/BZ13/JSITPGXN/F1FBZ13JSITPGXN.LARGE.jpg", "https://cdn.instructables.com/FKP/OAX6/JSITPGYH/FKPOAX6JSITPGYH.LARGE.jpg", "https://cdn.instructables.com/F70/8Q9N/JSITPGYI/F708Q9NJSITPGYI.LARGE.jpg", "https://cdn.instructables.com/FC3/BRGL/JSITPGYO/FC3BRGLJSITPGYO.LARGE.jpg", "https://cdn.instructables.com/FXS/I8TB/JSITPGYU/FXSI8TBJSITPGYU.LARGE.jpg", "https://cdn.instructables.com/FYQ/D467/JSITPGYW/FYQD467JSITPGYW.LARGE.jpg", "https://cdn.instructables.com/FI2/5ZIR/JSITPGZ1/FI25ZIRJSITPGZ1.LARGE.jpg", "https://cdn.instructables.com/FF6/3N37/JSITPGZ7/FF63N37JSITPGZ7.LARGE.jpg", "https://cdn.instructables.com/FS1/KI5W/JSITPGZ8/FS1KI5WJSITPGZ8.LARGE.jpg", "https://cdn.instructables.com/FIH/CLZF/JSITPGZL/FIHCLZFJSITPGZL.LARGE.jpg", "https://cdn.instructables.com/FAI/NR50/JSITPGZM/FAINR50JSITPGZM.LARGE.jpg", "https://cdn.instructables.com/FVA/7UU0/JSITPGZO/FVA7UU0JSITPGZO.LARGE.jpg", "https://cdn.instructables.com/F5K/NK8N/JSITPGZQ/F5KNK8NJSITPGZQ.LARGE.jpg", "https://cdn.instructables.com/FFM/X7TP/JSITPGZS/FFMX7TPJSITPGZS.LARGE.jpg", "https://cdn.instructables.com/FXX/427K/JSITPGZU/FXX427KJSITPGZU.LARGE.jpg", "https://cdn.instructables.com/F33/99L3/JSITPGZX/F3399L3JSITPGZX.LARGE.jpg", "https://cdn.instructables.com/FTJ/RVIF/JSITPH03/FTJRVIFJSITPH03.LARGE.jpg", "https://cdn.instructables.com/FJJ/5WPX/JSITPH06/FJJ5WPXJSITPH06.LARGE.jpg", "https://cdn.instructables.com/FJW/HRH9/JSITPH07/FJWHRH9JSITPH07.LARGE.jpg", "https://cdn.instructables.com/FNZ/9ZZ0/JSITPH08/FNZ9ZZ0JSITPH08.LARGE.jpg"], "step_title": "Step 5: Step 5: Gallery"}, {"step": 6, "steps_text": "", "step_imgs": [], "step_title": "Step 6: Step 6 : Final View"}], "channel": "3D Printing"}, {"category": "Technology", "description": "This a instruction about how to disassemble a PC. Most of the basic components are modular and easily removed. However it is important that you be organized about it. This will help to keep you from losing parts, and also in making the reassembly easier. You should plan to do this in a clean, uncluttered, uncarpeted room.", "title": "How to Disassemble a Computer With Easy Steps and Pictures", "url": "https://www.instructables.com/id/How-to-Disassemble-a-Computer-With-Easy-Steps-and-/", "steps": [{"step": 1, "steps_text": "Unplug ever cable that is connected to the computer\nWear a grounding strap or touch an unpainted metal part of the computer to discharge any static electricity. If you walk across a carpet at any point, touch an unpainted metal part of the computer again to discharge the built up static electricity.", "step_imgs": ["https://cdn.instructables.com/F52/KDQJ/JSCG6R9P/F52KDQJJSCG6R9P.LARGE.jpg", "https://cdn.instructables.com/F6A/ZTG1/JSCG6R9R/F6AZTG1JSCG6R9R.LARGE.jpg"], "step_title": "Step 1: Unplugging"}, {"step": 2, "steps_text": "After you computer is unplugged move to a clean working space, preferably a table.\nFirst off all, take the black casing off the PC by sliding it towards the front side.Then place the case at the\nside as you don\u2019t need it anymore.", "step_imgs": ["https://cdn.instructables.com/FYE/4WRD/JSCG6TRI/FYE4WRDJSCG6TRI.LARGE.jpg", "https://cdn.instructables.com/FTW/6YZ2/JSCG6TT5/FTW6YZ2JSCG6TT5.LARGE.jpg", "https://cdn.instructables.com/FRX/622T/JSCG6TUP/FRX622TJSCG6TUP.LARGE.jpg", "https://cdn.instructables.com/FFP/O8IG/JSEZ5U7U/FFPO8IGJSEZ5U7U.LARGE.jpg"], "step_title": "Step 2: The Casing"}, {"step": 3, "steps_text": "The Power Supply manages all the power for the computer\nThe Power Supply is a large metal box located in the top left corner.\nThe power supply supplies power to every component in a computer, therefore it has the most wires out of every other component in the computer. The first thing you do is unplug every wire coming from the power supply. The list below is every thing that you have to disconnect:\nMotherboard (very large connector/plug)\nCD/DVD drive[s] power\nInternal hard drive power\nPortable hard drive slot power\nOnce everything is unplugged, unscrew the screws holding the power supply in place, on the back of the computer. Next, push the power supply from the outside, then lift it out.\n\nKeep the screws/bolt aside in a bag so when you assembling it back, it will be easier.", "step_imgs": ["https://cdn.instructables.com/FJB/EZ3T/JSEZ5R5H/FJBEZ3TJSEZ5R5H.LARGE.jpg", "https://cdn.instructables.com/FG6/DZFV/JSEZ5R6G/FG6DZFVJSEZ5R6G.LARGE.jpg", "https://cdn.instructables.com/F56/DEG2/JSITOF09/F56DEG2JSITOF09.LARGE.jpg"], "step_title": "Step 3: The Power Supply"}, {"step": 4, "steps_text": "This one of the easiest components to remove. Just push the grey metal and pull out the drive.\nIf you don't have a second drive, there should be a flat piece of metal covering the drive slot.", "step_imgs": ["https://cdn.instructables.com/FPJ/CC8Y/JSITOBQG/FPJCC8YJSITOBQG.LARGE.jpg", "https://cdn.instructables.com/F4L/9BUK/JSITOBQE/F4L9BUKJSITOBQE.LARGE.jpg", "https://cdn.instructables.com/FLU/CRTV/JSITOBQD/FLUCRTVJSITOBQD.LARGE.jpg", "https://cdn.instructables.com/FB2/EL9Y/JSITOEXP/FB2EL9YJSITOEXP.LARGE.jpg"], "step_title": "Step 4: CD/DVD Drive"}, {"step": 5, "steps_text": "Most computers have two fans: the system fan, the one blowing air into the computer, and the CPU fan, the one blowing air onto the CPU heat sink.\nThe system fan is located at the back side of the computer, the side with all the component plugins.\nFirst, unplug the fan from the motherboard. You can find the plug by following the wire from the fan.\nIt should be labeled \"SYS_FAN1\". Next, you will have to unscrew the fan from the outside.\nYou should now be able to lift the fan out of the PC.\nKeep the screws/bolt aside in a bag so when you assembling it back, it will be easier.", "step_imgs": ["https://cdn.instructables.com/FT7/QMSR/JSEZ5RD2/FT7QMSRJSEZ5RD2.LARGE.jpg", "https://cdn.instructables.com/FQY/JW7K/JSITOBRS/FQYJW7KJSITOBRS.LARGE.jpg", "https://cdn.instructables.com/FZJ/HAZ2/JSEZ5RCD/FZJHAZ2JSEZ5RCD.LARGE.jpg", "https://cdn.instructables.com/F3B/B87O/JSEZ5RQE/F3BB87OJSEZ5RQE.LARGE.jpg"], "step_title": "Step 5: System Fan"}, {"step": 6, "steps_text": "The CPU fan is located right on top of the CPU heat sink, which is a large piece of metal with fins on the top. The CPU fan plugs into the motherboard which is hard to access. But just follow the wires and you should easily find it.\nTo remove the fan from the heat sink, remove the four screws securing it in place.", "step_imgs": ["https://cdn.instructables.com/FY6/20ZA/JSEZ5RQC/FY620ZAJSEZ5RQC.LARGE.jpg", "https://cdn.instructables.com/FOI/HQKI/JSITOAG4/FOIHQKIJSITOAG4.LARGE.jpg", "https://cdn.instructables.com/FR2/2Z6Y/JSITOBGR/FR22Z6YJSITOBGR.LARGE.jpg", "https://cdn.instructables.com/F64/GW57/JSITOESL/F64GW57JSITOESL.LARGE.jpg"], "step_title": "Step 6: CPU Fan"}, {"step": 7, "steps_text": "Remove the metal casing on the top side of the PC.\nRemove the hard drive and floppy disk combo from the computer. Then, remove each.\nKeep the screws/bolt aside in a bag so when you assembling it back, it will be easier.", "step_imgs": ["https://cdn.instructables.com/FC4/1CGT/JSEZ5TOA/FC41CGTJSEZ5TOA.LARGE.jpg", "https://cdn.instructables.com/F8D/ZU7X/JSEZ5TOZ/F8DZU7XJSEZ5TOZ.LARGE.jpg", "https://cdn.instructables.com/F8S/TTMB/JSEZ5TP1/F8STTMBJSEZ5TP1.LARGE.jpg", "https://cdn.instructables.com/FAV/J8HA/JSEZ5TP2/FAVJ8HAJSEZ5TP2.LARGE.jpg", "https://cdn.instructables.com/FXD/TV8K/JSITOA33/FXDTV8KJSITOA33.LARGE.jpg", "https://cdn.instructables.com/FVG/7ZYD/JSEZ5U98/FVG7ZYDJSEZ5U98.LARGE.jpg", "https://cdn.instructables.com/FCI/4ILI/JSEZ5TP3/FCI4ILIJSEZ5TP3.LARGE.jpg"], "step_title": "Step 7: Hard Drive and Floppy Disk"}, {"step": 8, "steps_text": "To remove the button, you will need to push it from the back, the side with the wires. For clarification, see the pictures.", "step_imgs": ["https://cdn.instructables.com/FLU/0OX0/JSITOE5D/FLU0OX0JSITOE5D.LARGE.jpg", "https://cdn.instructables.com/FYY/P46Y/JSITOE1K/FYYP46YJSITOE1K.LARGE.jpg"], "step_title": "Step 8: The Power Switch"}, {"step": 9, "steps_text": "A RAM is a s the memory or information storage in a computer that is used to store running programs and data for the programs. So, the more RAM you have, the faster your computer runs. Most computers have 4 or 2 RAM slots.\nTo remove the RAM, push down on both tabs holding the RAM in place, which are located at both ends of the RAM.", "step_imgs": ["https://cdn.instructables.com/F8A/2KVH/JSITOEQ0/F8A2KVHJSITOEQ0.LARGE.jpg", "https://cdn.instructables.com/F4I/AQOR/JSEZ5U8K/F4IAQORJSEZ5U8K.LARGE.jpg", "https://cdn.instructables.com/FFE/CCOE/JSITOEMS/FFECCOEJSITOEMS.LARGE.jpg", "https://cdn.instructables.com/FYS/0THD/JSEZ5U8L/FYS0THDJSEZ5U8L.LARGE.jpg"], "step_title": "Step 9: RAM (Random Access Memory)"}, {"step": 10, "steps_text": "Remove the CPU by working the lever. Handle with care.", "step_imgs": ["https://cdn.instructables.com/F37/3YFQ/JSEZ5UFR/F373YFQJSEZ5UFR.LARGE.jpg", "https://cdn.instructables.com/FUK/KCCH/JSITOBLL/FUKKCCHJSITOBLL.LARGE.jpg", "https://cdn.instructables.com/FXF/9I23/JSITOBLR/FXF9I23JSITOBLR.LARGE.jpg"], "step_title": "Step 10: CPU"}, {"step": 11, "steps_text": "Take out the heat sink through the lever, handle with care.", "step_imgs": ["https://cdn.instructables.com/FJX/UYXW/JSITOBN1/FJXUYXWJSITOBN1.LARGE.jpg", "https://cdn.instructables.com/FQA/FLJQ/JSEZ5UF2/FQAFLJQJSEZ5UF2.LARGE.jpg"], "step_title": "Step 11: Heat Sinker"}, {"step": 12, "steps_text": "The motherboard is the mother of the computer! The motherboard links every component in the computer together. The CPU, RAM, and expansion cards are attached directly to it, and every other part of the computer is in one way or another attached to it.\nThe motherboard has seven screws holding it to the frame, which are indicated by large white circles around them. Remove those seven, then lift the motherboard out of the frame.\nKeep the screws/bolt aside in a bag so when you assembling it back, it will be easier.", "step_imgs": ["https://cdn.instructables.com/FWO/9VCH/JSEZ5UHB/FWO9VCHJSEZ5UHB.LARGE.jpg", "https://cdn.instructables.com/F6A/60YO/JSEZ5UHC/F6A60YOJSEZ5UHC.LARGE.jpg", "https://cdn.instructables.com/FJ7/EKIF/JSEZ5UHI/FJ7EKIFJSEZ5UHI.LARGE.jpg", "https://cdn.instructables.com/FGP/CKZR/JSEZ5UHJ/FGPCKZRJSEZ5UHJ.LARGE.jpg", "https://cdn.instructables.com/F4L/I4YS/JSEZ5UHK/F4LI4YSJSEZ5UHK.LARGE.jpg", "https://cdn.instructables.com/FTP/6TU7/JSEZ5UHL/FTP6TU7JSEZ5UHL.LARGE.jpg", "https://cdn.instructables.com/FCS/UU6F/JSEZ5UHM/FCSUU6FJSEZ5UHM.LARGE.jpg", "https://cdn.instructables.com/FY0/QF5F/JSEZ5UHN/FY0QF5FJSEZ5UHN.LARGE.jpg"], "step_title": "Step 12: The Motherboard"}, {"step": 13, "steps_text": "These are all the components that are disassemble from the PC.", "step_imgs": ["https://cdn.instructables.com/FKC/XOUE/JSEZ5UKG/FKCXOUEJSEZ5UKG.LARGE.jpg", "https://cdn.instructables.com/FCX/B9GE/JSITOEM1/FCXB9GEJSITOEM1.LARGE.jpg"], "step_title": "Step 13: Done"}], "channel": "Computers"}, {"category": "Technology", "description": "A while ago I made a large 20 sided Die. Numerous people wanted me to build them one and since the most difficult part of the project was getting the cutting angles just right, I decided to make another which would allow for more accurate assembly. This time 3D printed instead of plywood and glue. I also added some much needed flair!\nThere are 2 varieties presented here, the LED lamp version and a playable large scale DIE. I have included a drawing step so that you can easily recreate the parts to scale it as you wish.\nThis covers making the LED conversation piece and since less steps are required for the playable one, that one too.", "title": "Multicolour LED Icosahedron", "url": "https://www.instructables.com/id/Multicolour-LED-Icosahedron/", "steps": [{"step": 1, "steps_text": "Go to step 3 if you just want the files...\nI used 3D modelling software to create this. The procedure is as follows.\nSelect a starting plane.\nAway from the sketch origin draw a construction rectangle, make the sides equal then define a side length(I used 100mm)\nPick any side and mark the centre point of the side.\nUse this as a centre point of an arc. Set the arc radius at either opposite corner then draw the ark down to the starting line away from the original square.\nFrom the square corner draw a construction line to the arc end point then up and then over to the arc radius point.\nYou should now have a square joined to a smaller rectangle. The large rectangle created in this specific configuration is called a golden rectangle. From the mid point of the short side of the Golden Rectangle draw a line across to the other short side and mark the mid point of this line. Set this mid point as a coincident to the origin of your drawing.\nNow repeat this procedure for each remaining plane and make sure the drawings are perpendicular to the the long side of the previous rectangle.\nNext select the same square edge on all 3 drawings the was used for dimension and make the property equal. This way you only have to change 1 dimension to change the size of all 3.\nLooking on the sketches in an isometric view, create a new plane using the 2 points along the short side of one Golden Rectangle and the highest closest point to the first 2.\nUse this as a sketch plane and draw a triangle using the 3 points that were used to define the plane.\nUsing the loft feature select this triangle sketch and the origin point to create a 3 side pyramid\nNow use the same sketch plane and make an oversized rectangle then set the offset to the desired thickness (6mm used here) and cut the rest away.\nDecorate as desired! I used the included font in my cad program set to size 140.", "step_imgs": ["https://cdn.instructables.com/FIT/9G7Z/JS0OQ641/FIT9G7ZJS0OQ641.LARGE.jpg", "https://cdn.instructables.com/FAO/ZINK/JS0OQ640/FAOZINKJS0OQ640.LARGE.jpg", "https://cdn.instructables.com/FIZ/FH0E/JS0OQ612/FIZFH0EJS0OQ612.LARGE.jpg", "https://cdn.instructables.com/FWD/C2Y9/JS0OQ5ZO/FWDC2Y9JS0OQ5ZO.LARGE.jpg", "https://cdn.instructables.com/F75/WAUS/JS0OQ622/F75WAUSJS0OQ622.LARGE.jpg", "https://cdn.instructables.com/FWB/KNPT/JS0OQ623/FWBKNPTJS0OQ623.LARGE.jpg", "https://cdn.instructables.com/FEO/VUVE/JS0OQ62M/FEOVUVEJS0OQ62M.LARGE.jpg", "https://cdn.instructables.com/FC2/6IT6/JS0OQ62N/FC26IT6JS0OQ62N.LARGE.jpg", "https://cdn.instructables.com/FEQ/O30G/JS0OQ62Q/FEQO30GJS0OQ62Q.LARGE.jpg", "https://cdn.instructables.com/FMR/8AO0/JS0OQ62R/FMR8AO0JS0OQ62R.LARGE.jpg", "https://cdn.instructables.com/FSX/UDM5/JS0OQ62V/FSXUDM5JS0OQ62V.LARGE.jpg", "https://cdn.instructables.com/FF2/FBNV/JS0OQ64C/FF2FBNVJS0OQ64C.LARGE.jpg", "https://cdn.instructables.com/FF4/SVWM/JS0OQ613/FF4SVWMJS0OQ613.LARGE.jpg", "https://cdn.instructables.com/FQY/M12J/JS0OQ63T/FQYM12JJS0OQ63T.LARGE.jpg", "https://cdn.instructables.com/FVK/M6IA/JS0OQ5ZY/FVKM6IAJS0OQ5ZY.LARGE.jpg", "https://cdn.instructables.com/F86/R39I/JS0OQ608/F86R39IJS0OQ608.LARGE.jpg", "https://cdn.instructables.com/FNP/DZG2/JS0OQ60I/FNPDZG2JS0OQ60I.LARGE.jpg"], "step_title": "Step 1: How to Draw the Icosahedron D20 Face"}, {"step": 2, "steps_text": "I can only get 9 of the panels to fit on each model base panel so there is going to have to be 3 jobs for this.\nIn my case it works out to about 9 hours total print time with solid shapes.\nI wanted to make the surface of the panels translucent and the letters solid colour. This surface layer is 1mm thick with translates to 4 layers of .25mm thick on my machine\nI chose to use ABS in both natural and black for printing\nMy software allows the addition of a print pause which allows me to change the material colour from natural to black in this case.\nLayer 13 on my model plate is the first layer that will print above the solid background. The pause is before the layer begins so it was set here.\nIf you are wanting to make the lighted version, do not print panel 1 here. There is more on this later.", "step_imgs": ["https://cdn.instructables.com/FRY/OGNU/JS0ORFCC/FRYOGNUJS0ORFCC.LARGE.jpg", "https://cdn.instructables.com/F6P/4N1N/JS0OQCVV/F6P4N1NJS0OQCVV.LARGE.jpg", "https://cdn.instructables.com/FR6/2JED/JS0ORFCD/FR62JEDJS0ORFCD.LARGE.jpg", "https://cdn.instructables.com/FV2/WEAG/JS0ORFCE/FV2WEAGJS0ORFCE.LARGE.jpg", "https://cdn.instructables.com/FH3/G7N1/JS0ORFEX/FH3G7N1JS0ORFEX.LARGE.jpg", "https://cdn.instructables.com/FBZ/YGA3/JS0ORFEY/FBZYGA3JS0ORFEY.LARGE.jpg", "https://cdn.instructables.com/FM6/9XXL/JS0ORFEZ/FM69XXLJS0ORFEZ.LARGE.jpg"], "step_title": "Step 2: Download and Print"}, {"step": 3, "steps_text": "There is much debate on the proper 20 sided Die numbering outside of the opposite sides added together get you 21.\nI Chose this one! I know I will probably get some comments here...\nFollowing this I wanted to have a critical hit always showing so I made the 1 panel which should orient to the bottom as the base access port.\nNow, since the panels are about 6mm thick they should self align when they are clamped together.\nI started at 20 and worked outward from there. The first panel is added and then carefully aligned along the back side. It is clamped together along the black edging. I had some small spring clamps but found that ordinary binder clips worked great for this.\nFrom the back side then add solvent cement to the seam and leave clamped for the recommended amount of time.\nWhen 2 adjacent panels are joined there is an odd grove created, I was going to fill this but found that I liked the texture that it created.\nContinue with this until you have only the \"1\" panel left, do not glue this one in place if you are making the light.", "step_imgs": ["https://cdn.instructables.com/FAD/6AKS/JSAORQR8/FAD6AKSJSAORQR8.LARGE.jpg", "https://cdn.instructables.com/F51/ALGY/JSAORQR1/F51ALGYJSAORQR1.LARGE.jpg", "https://cdn.instructables.com/F0J/6D54/JS5CKPSJ/F0J6D54JS5CKPSJ.LARGE.jpg", "https://cdn.instructables.com/FBR/4Y10/JS5CKPSM/FBR4Y10JS5CKPSM.LARGE.jpg", "https://cdn.instructables.com/FT7/JK6P/JS5CKPTB/FT7JK6PJS5CKPTB.LARGE.jpg", "https://cdn.instructables.com/FS8/IPIG/JS5CKPTD/FS8IPIGJS5CKPTD.LARGE.jpg", "https://cdn.instructables.com/FME/DYYO/JS5CKPTE/FMEDYYOJS5CKPTE.LARGE.jpg", "https://cdn.instructables.com/FS0/HSCL/JS5CKPTF/FS0HSCLJS5CKPTF.LARGE.jpg", "https://cdn.instructables.com/FIP/ZB52/JS5CKPTH/FIPZB52JS5CKPTH.LARGE.jpg", "https://cdn.instructables.com/F00/V0OI/JS5CKPTI/F00V0OIJS5CKPTI.LARGE.jpg", "https://cdn.instructables.com/F10/RNE8/JS5CKPTL/F10RNE8JS5CKPTL.LARGE.jpg", "https://cdn.instructables.com/FJM/WTBI/JS5CKPTN/FJMWTBIJS5CKPTN.LARGE.jpg", "https://cdn.instructables.com/FEM/DEWK/JSAORQR2/FEMDEWKJSAORQR2.LARGE.jpg", "https://cdn.instructables.com/FAG/C397/JSAORQR3/FAGC397JSAORQR3.LARGE.jpg", "https://cdn.instructables.com/FP3/FDET/JSAORQR4/FP3FDETJSAORQR4.LARGE.jpg", "https://cdn.instructables.com/FRK/6TNI/JSAORQR6/FRK6TNIJSAORQR6.LARGE.jpg", "https://cdn.instructables.com/FU4/CWVP/JSAORQR5/FU4CWVPJSAORQR5.LARGE.jpg", "https://cdn.instructables.com/FYX/X81M/JSAORQR7/FYXX81MJSAORQR7.LARGE.jpg", "https://cdn.instructables.com/F1L/XLDM/JSFAA1XV/F1LXLDMJSFAA1XV.LARGE.jpg"], "step_title": "Step 3: Assembly"}, {"step": 4, "steps_text": "If you are assembling the non lighted version, You should be done.\nI chose to make where panel 1 normally would be into a base that will cover the access and support the electronics inside.\nInitially this was to be secured and hidden but this would have created a whole set of other problems with durability\nI made the bottom cover with 3 screw holder to secure it. Therefore I had to make corner structures for this.\nRight here is where I made a critical mistake. I measured and drew the separate parts then printed without first modelling it or testing the fit in an assembly.\nThe screw holes for the corner securing points did not line up!\nI had to drill 3 new screw insert holes then modify one corner with a hot iron to correct this since I glued them in place.\nThe files here have been corrected\nThe base is held in place with 4-40 screws and there is only 1 button.", "step_imgs": ["https://cdn.instructables.com/F3U/22U4/JSCG4L32/F3U22U4JSCG4L32.LARGE.jpg", "https://cdn.instructables.com/FJI/Q9JG/JSCG4L3P/FJIQ9JGJSCG4L3P.LARGE.jpg", "https://cdn.instructables.com/FG9/G8WY/JSCG4L4G/FG9G8WYJSCG4L4G.LARGE.jpg", "https://cdn.instructables.com/FR7/MP14/JSCG4L57/FR7MP14JSCG4L57.LARGE.jpg", "https://cdn.instructables.com/FML/S0GK/JSCG4L5S/FMLS0GKJSCG4L5S.LARGE.jpg", "https://cdn.instructables.com/FS5/Z4FG/JSCG4L5V/FS5Z4FGJSCG4L5V.LARGE.jpg", "https://cdn.instructables.com/FT3/1RH9/JSCG4L63/FT31RH9JSCG4L63.LARGE.jpg", "https://cdn.instructables.com/F95/5KMJ/JSCG4L62/F955KMJJSCG4L62.LARGE.jpg", "https://cdn.instructables.com/FCT/7YWB/JSEYZRRR/FCT7YWBJSEYZRRR.LARGE.jpg", "https://cdn.instructables.com/F5O/GPPZ/JSEYZRRU/F5OGPPZJSEYZRRU.LARGE.jpg", "https://cdn.instructables.com/FT9/1F45/JSEYZRSJ/FT91F45JSEYZRSJ.LARGE.jpg", "https://cdn.instructables.com/FYX/UQZO/JSCG4LG0/FYXUQZOJSCG4LG0.LARGE.jpg"], "step_title": "Step 4: Panel 1"}, {"step": 5, "steps_text": "I made an internal RGBW lamp from parts found here!\nThis is driven with an Arduino using a slightly modified code from the NeoPixel library.\nThe panels are a 6 sided free form cube consisting of 4 lights on each face.\nI used small copper strands to connect the tiny boards together.\nAll of the lights are connected in series with long tails for attaching to the microcontroller.\nThe 2 long strips are folded in groups of 4 to make a u shape then the 2 u shapes are interlocked to make a cube.\nUsing hot glue, which is the worst possible type of adhesive to use here, I tacked the corners of the cube together.\nThe leads were marked for proper connection.\nThe cube is then glued to the pillar on the base panel as shown.\nThe circuit is fairly basic, The button controls all.", "step_imgs": ["https://cdn.instructables.com/FU2/LSBK/JSCG1ENQ/FU2LSBKJSCG1ENQ.LARGE.jpg", "https://cdn.instructables.com/FBD/9VXS/JSCG1EQ5/FBD9VXSJSCG1EQ5.LARGE.jpg", "https://cdn.instructables.com/FGJ/WOFG/JSCG1ET9/FGJWOFGJSCG1ET9.LARGE.jpg", "https://cdn.instructables.com/FFO/OBSX/JSCG1EWT/FFOOBSXJSCG1EWT.LARGE.jpg", "https://cdn.instructables.com/FOG/XJAO/JSCG1F23/FOGXJAOJSCG1F23.LARGE.jpg", "https://cdn.instructables.com/FWT/EQ2Y/JSCG1F38/FWTEQ2YJSCG1F38.LARGE.jpg", "https://cdn.instructables.com/FK5/CAIJ/JSCG1F8A/FK5CAIJJSCG1F8A.LARGE.jpg", "https://cdn.instructables.com/F3I/IK15/JSCG1FB0/F3IIK15JSCG1FB0.LARGE.jpg", "https://cdn.instructables.com/FM2/A99G/JSCG1FBK/FM2A99GJSCG1FBK.LARGE.jpg", "https://cdn.instructables.com/F4P/B5JM/JSCG1FGM/F4PB5JMJSCG1FGM.LARGE.jpg", "https://cdn.instructables.com/FKP/KBOL/JSCG1FL3/FKPKBOLJSCG1FL3.LARGE.jpg", "https://cdn.instructables.com/F8L/8U12/JSCG1FS0/F8L8U12JSCG1FS0.LARGE.jpg", "https://cdn.instructables.com/F53/O78X/JSCG4LSF/F53O78XJSCG4LSF.LARGE.jpg", "https://cdn.instructables.com/FSE/4IV2/JSCG4LT8/FSE4IV2JSCG4LT8.LARGE.jpg", "https://cdn.instructables.com/FIV/A6RD/JSEYZRSK/FIVA6RDJSEYZRSK.LARGE.jpg", "https://cdn.instructables.com/FEE/H8OY/JSEYZRSM/FEEH8OYJSEYZRSM.LARGE.jpg", "https://cdn.instructables.com/FLH/PGFO/JSEYZXP7/FLHPGFOJSEYZXP7.LARGE.jpg", "https://cdn.instructables.com/FJI/0S0V/JSEYZXPT/FJI0S0VJSEYZXPT.LARGE.jpg", "https://cdn.instructables.com/F2P/QAAW/JSEYZXPU/F2PQAAWJSEYZXPU.LARGE.jpg", "https://cdn.instructables.com/FF7/RIOR/JSEYZXPW/FF7RIORJSEYZXPW.LARGE.jpg", "https://cdn.instructables.com/F4R/E3S1/JSEYZXQP/F4RE3S1JSEYZXQP.LARGE.jpg", "https://cdn.instructables.com/F98/R3LC/JSEYZXQQ/F98R3LCJSEYZXQQ.LARGE.jpg"], "step_title": "Step 5: The Illumination"}, {"step": 6, "steps_text": "I made a minor code modification to the original NeoPixel strandtest , I have included it here called d20.ino.\nTo begin the button is pressed and held, this will supply power to the microcontroller through a MOSFET. Contrary to what the schematic says, I used an IRF9530N since I had many of these in my parts bin.\nThe switch input is wired in parallel with the microcontroller digital port D2.\nOnce the program starts the cube will light up, the microcontroller will take over and switch the board power on through the MOSFET via pin D2.\nSubsequent button presses will scroll through the NeoPixel test functions.Holding the button down will fast scroll through the light functions.\nThe final switch press will turn pin D2 off and upon release of the button, the strip will go dark and the power to the microcontroller is shut off.\nThe battery carrier is held in place with 2 side carpet tape and the board is hot glued to the top of the battery carrier.\nI am going to be changing the MOSFET to a small relay in the near future since there is enough current to slightly light the power LED on the NANO board.", "step_imgs": ["https://cdn.instructables.com/FMW/17I6/JSFAA2QM/FMW17I6JSFAA2QM.LARGE.jpg", "https://cdn.instructables.com/FXU/G2ZS/JSFAA1XT/FXUG2ZSJSFAA1XT.LARGE.jpg", "https://cdn.instructables.com/FW0/XPBF/JSFAA1XU/FW0XPBFJSFAA1XU.LARGE.jpg", "https://cdn.instructables.com/FJY/4BK8/JSFAA1XW/FJY4BK8JSFAA1XW.LARGE.jpg", "https://cdn.instructables.com/FVV/7HR0/JSFAA1XY/FVV7HR0JSFAA1XY.LARGE.jpg", "https://cdn.instructables.com/FTK/D9KO/JSFAA1Y1/FTKD9KOJSFAA1Y1.LARGE.jpg"], "step_title": "Step 6: Operation and Electrics"}, {"step": 7, "steps_text": "I can print panels up to 254mm wide... so that is what I did.\nEach tray can only hold 1 panel and it takes approximately 2.25 hours to print I inserted a pause at the end of the flats so that I could change the colour to black from natural.\nEach panel contains about 52 Cubic Centimetres of material.\nThis item was not for me but I couldn't help but play with it a little. I clamped the panels together with small binder clips and made an adapter to fit my IKEA kitchen light...", "step_imgs": ["https://cdn.instructables.com/FSY/84JM/JSEZ1K1O/FSY84JMJSEZ1K1O.LARGE.jpg", "https://cdn.instructables.com/FJM/Y7M2/JS5CKRPG/FJMY7M2JS5CKRPG.LARGE.jpg", "https://cdn.instructables.com/FV8/NLAY/JSAORQT3/FV8NLAYJSAORQT3.LARGE.jpg", "https://cdn.instructables.com/FXD/72UP/JSEZ1JZW/FXD72UPJSEZ1JZW.LARGE.jpg", "https://cdn.instructables.com/FBK/LVYT/JSEZ1JZX/FBKLVYTJSEZ1JZX.LARGE.jpg", "https://cdn.instructables.com/F1W/DORI/JSEZ1JZY/F1WDORIJSEZ1JZY.LARGE.jpg", "https://cdn.instructables.com/F82/QDA0/JSEZ1JZZ/F82QDA0JSEZ1JZZ.LARGE.jpg", "https://cdn.instructables.com/FWR/OWIE/JSEZ1K1N/FWROWIEJSEZ1K1N.LARGE.jpg", "https://cdn.instructables.com/F93/92ZR/JSEZ1K1M/F9392ZRJSEZ1K1M.LARGE.jpg", "https://cdn.instructables.com/FEZ/855M/JSEZ1K0O/FEZ855MJSEZ1K0O.LARGE.jpg", "https://cdn.instructables.com/FZ5/WX2B/JSEZ1K0P/FZ5WX2BJSEZ1K0P.LARGE.jpg", "https://cdn.instructables.com/FIN/EXNR/JSEZ1K0Q/FINEXNRJSEZ1K0Q.LARGE.jpg", "https://cdn.instructables.com/FHJ/4J6W/JSEZ1K1L/FHJ4J6WJSEZ1K1L.LARGE.jpg", "https://cdn.instructables.com/FDY/0ASX/JSEZ1K1H/FDY0ASXJSEZ1K1H.LARGE.jpg"], "step_title": "Step 7: Now Make It BIG!"}], "channel": "Arduino"}, {"category": "Technology", "description": "Greetings fellow creators and hopes that all is well in our respective worlds. \"D\" here again and I come to you with mixed emotions on the last of my Christmas Box Projects. It appears that change and time itself have conspired against me and I find that the old saying is surely true. All things must come to an end. If you have read my first instructable \"The Christmas Box Two\" You already have an idea of why I started doing all this, and how my other, well, second Box turned out. If not take a look, it's not too bad. Anyway, High school, college, friends, girls and life in general have plotted against me and my boys are losing the time and desire to follow me on these holiday adventures, but I suppose that is as it should be. Memories (good ones) are the building blocks of dreams and if my constructions and little adventures have given them cause to look back on their lives and smile then they have been worth all the time and effort spent. Yes, this is an end, my final Christmas Box. But with all I've tried to accomplish, all I've tried to do, this one had to be special. A box for gifts just wouldn't do. So friends I present my final work... The Christmas Machine!\nHere's hoping that you will travel with me on this final quest to show that the journey is sometimes the best part of the trip, and it is still far better to give than receive. This read might take a while. Feel free to drop off and come back to it when you have the urge and the time. I'm pretty sure it will still be here...", "title": "The Christmas Machine: a Journey's End", "url": "https://www.instructables.com/id/The-Christmas-Machine-a-Journeys-End/", "steps": [{"step": 1, "steps_text": "It all started with this brass calendar. A strange place to start, but there it was. I wasn't sure what I was going to do with it but somehow I knew it was the beginning.\nThis time it had to be big. Bigger than a box anyway. And I had to change things up a bit. My boys are smart and I must admit it was becoming a challenge keeping their interest around the holidays.\nOne of the things about this project that made it so enjoyable is that it almost seemed like it was meant to happen. There were so many times that I would get stuck, or think that I would never find a certain piece or part that would fit and then WHAM something would pop up.\nOften I would find things and say \"I need that\" I wasn't really sure why I needed it, I was just sure I did.\nIt's OK my wife didn't believe me either.", "step_imgs": ["https://cdn.instructables.com/FG1/3KZD/JSCG58UR/FG13KZDJSCG58UR.LARGE.jpg"], "step_title": "Step 1: A Beginning..."}, {"step": 2, "steps_text": "The Nature of a puzzle box is to do whatever you have to do to get inside right? Makes sense enough. This was when it came to me. I would change the game from the very start. When my boys found the machine, they found it open, the drawer was not locked in any way and there were items inside it for them to peruse and ponder. Everything on and in it was available for them to manipulate and strategize. This actually set them off a bit. I must admit it was a surprise, and not in a good way, at first.\nThe machine is based on a nightstand called a \"Waterfall\". I had seen similar styles of table before but never knew the actual name. The problem was, what to do with it, what could I make it do?", "step_imgs": ["https://cdn.instructables.com/FUM/ZFNA/JSCG58TO/FUMZFNAJSCG58TO.LARGE.jpg"], "step_title": "Step 2: A Lockbox With No Locks..."}, {"step": 3, "steps_text": "My idea was to mount the calendar in the center on top of the nightstand surrounded by a large brass alloy casting that I had found. I was told the casting was a decorative piece that went on a wall to hide the opening when a water or steam pipe would project through the wall. I loved the way it looked except,...when I went to mount it I was off in measuring the center of the nightstand. I was a half inch too far to the left. What the @%$!!! was I gonna do now, I just started this thing and now...", "step_imgs": ["https://cdn.instructables.com/FV6/THNG/JSCG58TS/FV6THNGJSCG58TS.LARGE.jpg"], "step_title": "Step 3: ...I Meant to Do That!"}, {"step": 4, "steps_text": "OK, OK, relax D. there had to be something I could do right?? I had some spare brass strips in my shop. I cut one to fit and tried to make it look like it was meant to be that way. But now I had no idea what to do with that area. I was just thinking of leaving it that way.", "step_imgs": ["https://cdn.instructables.com/FY3/EA4U/JSCG58VG/FY3EA4UJSCG58VG.LARGE.jpg"], "step_title": "Step 4: ...Get Hold of Yourself!"}, {"step": 5, "steps_text": "This was the first \"HEY\" moment of the whole project. Being an Electrician by trade, my puzzles have tended to include at least some type of electrically based activation for a movement or mechanism {except for box 3}. This time I needed to expand on things a bit. Trying to make form follow function while keeping things as aesthetically pleasing and old school as possible, I chose to keep this project based on electro-mechanical principles. No electronics unless absolutely necessary. This made things more difficult, but a lot more fun. And seeing as I had done the same with my other boxes, this kept the original theme of my work. I decided to base this lock on the principle of electrolytic fluidity. Certain fluids conduct electricity. Some do far better than others. Somewhere along the line my boys would be given clues to formulate a fluid to act as a switch to close a circuit.\nOnce the electrolytic fluid formula was found it would be poured into the small copper spout at the front of the machine and would flow through the half inch copper pipe toward the rear where it would fill a small inverted brass bell and allow electrical current to flow between two pieces of copper wire that dipped into the bell. This would continue the main power circuit through the machine on its way to the next lock.\nThe brass filter and catch basin were found at an antique store. It is a wall mounted ash tray and match holder. The small dinner bell was cast in two pieces and I was able to unscrew the handle, drill a small hole in the tray, and refit it using small rubber washers to seal around the base. The catch basin (ash tray) would catch excess fluid if they overfilled the bell. The solid copper wire on the back acts as the path for the box's main electrical current to flow through. If you think you notice a problem with it, you most certainly do. More on that in the walkthrough.", "step_imgs": ["https://cdn.instructables.com/FMD/06AR/JSCG58VJ/FMD06ARJSCG58VJ.LARGE.jpg", "https://cdn.instructables.com/FM9/MVB7/JSCG58VX/FM9MVB7JSCG58VX.LARGE.jpg", "https://cdn.instructables.com/FS0/Y9RU/JSCG58WM/FS0Y9RUJSCG58WM.LARGE.jpg", "https://cdn.instructables.com/FUP/4JU6/JSCG595M/FUP4JU6JSCG595M.LARGE.jpg"], "step_title": "Step 5: The First Lock"}, {"step": 6, "steps_text": "OK, this is one of those happenstance-serendipity things. I bought an old Ford ampere gauge, didn't really need it. To this day I'm not sure why I even picked it up. Then a few days later I found myself buying a few antique brass drawer pulls to see if I liked any of them better than the one that originally came with the nightstand. While test fitting them my eye was drawn to a really bad watermark on the top of the nightstand. I noticed that the gauge just about covered the unsightly blemish, and so, in it went. I then noticed that one of the drawer pulls fit right over the gauge, kind of like a protective cover. Yeah, I didn't know what it would do yet but it looked great. If nothing else the gauge could show when the machine was on. Little did I know...", "step_imgs": ["https://cdn.instructables.com/FRZ/OIII/JSCG58XG/FRZOIIIJSCG58XG.LARGE.jpg", "https://cdn.instructables.com/FPD/GZOT/JSCG58XI/FPDGZOTJSCG58XI.LARGE.jpg"], "step_title": "Step 6: ...Yeah, That Fits!"}, {"step": 7, "steps_text": "The piece that started it all, the calendar. It was nice. But it needed to do something. My original plan was to devise 12 steps for solving the Machine. Each step would be indicated by a 12 position switch inside the calendar corresponding to the 12 months of the year and the signs of the zodiac. unfortunately I couldn't fit 12 puzzles into the box itself and the entire project was becoming far too complex for the available space.\nI settled for having 6 puzzles reside within the Machine itself and decided to have another six live outside in other \"satellite\" objects that my boys would find along the way. More on those later.\nI also created char residue, or electrical arc blast marks that appear on the month of December and the date of the 25th for dramatic effect. Almost as if the surface had been purposefully defaced. Perhaps as a warning or a sign.\nI modified the calendar (almost broke it is more the case) mounting a 5 position switch in its center mated to a vintage potentiometer dial face.\nThe rotary switch would not fit within the calendar so I had to mill out the back and add a bit of theatrical flair to hide my work. The two copper tubes carry the wiring to and from the switch to the internal craziness of wiring within the machine.\nDuring the Quest the switch would have to be set to the proper number, 1-6, to attempt to solve that specific segment of the Machine.", "step_imgs": ["https://cdn.instructables.com/FMJ/CSZ5/JSCG5ORA/FMJCSZ5JSCG5ORA.LARGE.jpg", "https://cdn.instructables.com/FAI/UDSX/JSCG592Y/FAIUDSXJSCG592Y.LARGE.jpg"], "step_title": "Step 7: What to Do With the Calendar?"}, {"step": 8, "steps_text": "I needed six acts in total to solve the machine. It was at this point that I decided to try to do something with a spare laser pointer I had purchased as a play toy for my dog. Looking on Ebay, I noticed that small electrical relays were available that would change state (turn on and off) when its receiver sensed a signal from a laser. And the second lock or \"switch\" was in the making. this emitter's official name became the \"Light Fountain\" The base bezel is an Art Nouveau peep hole cover. This however would later be changed.", "step_imgs": ["https://cdn.instructables.com/FZ4/AOCE/JSCG58YC/FZ4AOCEJSCG58YC.LARGE.jpg", "https://cdn.instructables.com/FRI/YHNE/JSCG594A/FRIYHNEJSCG594A.LARGE.jpg"], "step_title": "Step 8: The Light Fountain"}, {"step": 9, "steps_text": "At this point I started thinking, if you have a fountain then why not a Well? If I was going to make a laser beam activate a switch, how would I get the light directed to it?? where would the light go. In a story sense I mean?\nIt was at this point that I decided to remove the internals from the Ford Gauge and place the laser activated receiver beneath it. I made a small hole in the black paper backing just big enough for light to pass through. A few days later I was at a second hand store and found a small brass oil lamp that was missing its glass globe and thought it would make a nice miniature model of a fortified and protected Well or Cistern. I allowed the drawer pull that covered the ampere gauge to be removable and modified the oil lamp to fit in its place if it was removed. It would have to be removed for the laser beam to shoot back down into the machine to move on to the next step. It was also necessary to mill a hole in the bottom of the lamp so the laser could pass through to the switch below. More on how it would work in the walkthrough.", "step_imgs": ["https://cdn.instructables.com/FGM/QBWU/JSCG5948/FGMQBWUJSCG5948.LARGE.jpg", "https://cdn.instructables.com/FF7/2MZO/JSCG5949/FF72MZOJSCG5949.LARGE.jpg"], "step_title": "Step 9: The Light Well"}, {"step": 10, "steps_text": "I was going through a great little antique store not far from my home when I came upon an 1800s vintage music box. It had small record like discs that would turn and play like a 45 rpm record, but holes on the discs would ring chimes in the box to make the sounds rather than play through a speaker. I thought \"wouldn't it be funny if the boys got to a certain point and music box type music began to play? Would they think that the whole machine was just a big music box? I decided that the music just might be a cool way of showing them they were on the right track in solving the mysteries of the machine. I was pretty sure they wouldn't just stop there. They didn't.\nThe speaker for the music box was pieced together with an explosion proof light base and other brass and copper pieces I had found over the years. It didn't seem finished. It wasn't. More on that later!\nFor a power supply and amp I dissected a small bluetooth speaker and wired it into the machine's internals. This way I could also change the music if I wanted to.\nTo my surprise I found that music box Christmas songs are available on iTunes and sound absolutely like they come straight out of an antique music box. It was Great!", "step_imgs": ["https://cdn.instructables.com/FSE/H3RZ/JSCG594B/FSEH3RZJSCG594B.LARGE.jpg", "https://cdn.instructables.com/F80/RRDH/JSCG594G/F80RRDHJSCG594G.LARGE.jpg"], "step_title": "Step 10: The Music Box"}, {"step": 11, "steps_text": "A few weeks later I was stuck as far as ideas went. Work, home, the universe itself just seemed to be against me. And then, at a salvation army store, it happened. The bread mold. I wasn't sure why, but I knew I needed it.", "step_imgs": ["https://cdn.instructables.com/FM3/8GYB/JSCG5WHN/FM38GYBJSCG5WHN.LARGE.jpg", "https://cdn.instructables.com/F7L/4785/JSCG5WJD/F7L4785JSCG5WJD.LARGE.jpg"], "step_title": "Step 11: The Bread Mold"}, {"step": 12, "steps_text": "Wow, that was a mouthful. When I got that little bread mold home I found that it fit just about perfectly between the legs of the nightstand, although a little Dremel work was needed to fit it tightly between them. Its length lended itself to providing just enough room for eight 3 way switches, a master switch, and a lighted buzzer. If the switches were positioned incorrectly and the main switch was thrown, the buzzer would sound and the light would flash red. If the correct code was set there would be heard only the sweet sounds of music box style Christmas music heard through the speaker on the machine. Third lock/switch complete!\nMore on the code in the walkthrough.", "step_imgs": ["https://cdn.instructables.com/FRU/YL3O/JSCG596F/FRUYL3OJSCG596F.LARGE.jpg", "https://cdn.instructables.com/FXL/TBZ2/JSCG5970/FXLTBZ2JSCG5970.LARGE.jpg"], "step_title": "Step 12: Vintage Binary Switch Assembly"}, {"step": 13, "steps_text": "In one of the last pictures you might have noticed the gold snowflake cover sitting over the speaker. Its not just a cover, it's another lock, or a switch if you like, actually it's more like a key. when I placed it on the speaker, for s@#$% and giggles, I noticed that it fit snugly into the brass fingers i had mounted to the speaker. I needed to do more with it and by insulating the brass fingers from all the other metal parts and running wires to two of them I was able to use the snowflake as a kind of fuse or knife switch completing the activation circuit of the machine when it was put into place. Again, more on that in the walkthrough.", "step_imgs": ["https://cdn.instructables.com/FTI/UUGU/JSCG594Q/FTIUUGUJSCG594Q.LARGE.jpg", "https://cdn.instructables.com/FG8/QB2S/JSCG594H/FG8QB2SJSCG594H.LARGE.jpg", "https://cdn.instructables.com/FWL/HAYU/JSFA98FE/FWLHAYUJSFA98FE.LARGE.jpg"], "step_title": "Step 13: The Snowflake Switch"}, {"step": 14, "steps_text": "What's a good puzzle without a little good old fashioned code breakin'. I went online and found a set of Enigma Machine type code wheels and proceeded to use them to encode some of the clues necessary to finish the machine. This would eventually become one of the six steps needed to solve the machine. The boys followed clues to find the wheels where I had hidden them in certain Arabic styled brass trinket boxes. Once they were found they had to set them in place in the proper relation to each other and in the proper order. Each gear has a different number of spokes as well as a different letter sequence so it took a while for them to figure out how to set them in place on the machine correctly. Once they were set small nailheads sitting close to the gears would indicate where to place the coded letters on the upper gear and then the solved letter would appear next to a similar nail next to the lower gear. The magnifying lens could be moved to the upper and lower gear to make things easier to read. Don't forget the miniature knight's sword, it will be important later!", "step_imgs": ["https://cdn.instructables.com/FOI/SDW4/JSCG59C6/FOISDW4JSCG59C6.LARGE.jpg", "https://cdn.instructables.com/F67/LKUR/JSCG59C9/F67LKURJSCG59C9.LARGE.jpg", "https://cdn.instructables.com/FV2/P8FO/JSCG59CH/FV2P8FOJSCG59CH.LARGE.jpg", "https://cdn.instructables.com/FDV/656Z/JSCG59DM/FDV656ZJSCG59DM.LARGE.jpg"], "step_title": "Step 14: The Christmas Knight's Enigma Machine"}, {"step": 15, "steps_text": "There was one side of the Machine that was untouched, just sitting there. I still needed one more step in my adventure.\nI had seen several instructables on Iris apertures but knew I would never have the time to make one myself (this project was already a year late). On ETSY I found a great builder \"CNCAUTOMATIC\" and he was kind enough to modify one of his existing laser cut iris aperture programs to suite my needs.\nThe Iris was then mounted to the left side of the machine. I modified it so the machine actually became the base for the outer mechanism, I then added a rack and pinion gear arrangement to open and close the iris. When a key (with the pinion gear mounted on the tip) was inserted into a small brass bushing next to the iris, it could then be turned opening the Iris portal.", "step_imgs": ["https://cdn.instructables.com/F07/XB9V/JSCG59BL/F07XB9VJSCG59BL.LARGE.jpg", "https://cdn.instructables.com/FSX/OOTE/JSFA90BH/FSXOOTEJSFA90BH.LARGE.jpg", "https://cdn.instructables.com/FL5/1UD4/JSCG5998/FL51UD4JSCG5998.LARGE.jpg", "https://cdn.instructables.com/FRZ/LPWJ/JSCG59AJ/FRZLPWJJSCG59AJ.LARGE.jpg", "https://cdn.instructables.com/FC0/8GSW/JSCG59AA/FC08GSWJSCG59AA.LARGE.jpg", "https://cdn.instructables.com/FGL/DPJD/JSCG68AL/FGLDPJDJSCG68AL.LARGE.jpg", "https://cdn.instructables.com/FZE/L4PI/JSCG68AN/FZEL4PIJSCG68AN.LARGE.jpg", "https://cdn.instructables.com/F7S/K6VN/JSFA8FJW/F7SK6VNJSFA8FJW.LARGE.jpg", "https://cdn.instructables.com/FB5/00RK/JSFA992R/FB500RKJSFA992R.LARGE.jpg"], "step_title": "Step 15: The Iris"}, {"step": 16, "steps_text": "You may remember I said I installed a five position switch in the calendar right? But I said I wanted six steps in the machine itself... It came together just fine when I used a combination lock medallion USB drive for what wound up being the second lock in the machine and it was found when my boys opened the Iris. There was no need to turn the dial to position \"2\", it was looking right at them. The USB has four clock arm type combination settings that allow the drive to be removed and used when they are all placed in their proper positions.\nClues and other information needed to complete the Machine were installed on the drive.", "step_imgs": ["https://cdn.instructables.com/FNW/7LDQ/JSFA8G1P/FNW7LDQJSFA8G1P.LARGE.jpg", "https://cdn.instructables.com/FDY/7QTD/JSFA8G3A/FDY7QTDJSFA8G3A.LARGE.jpg", "https://cdn.instructables.com/FB4/AUXK/JSFA8G3X/FB4AUXKJSFA8G3X.LARGE.jpg"], "step_title": "Step 16: The Medallion"}, {"step": 17, "steps_text": "I wanted to add something else to the left side of the machine. A slightly different aesthetic. The family went to the Arboretum that September. They were having a mineral and precious stone exhibit and I wound up buying a crystal. I was looking around for a way to fit it to the machine but was stumped. I then came upon a decorative thermometer at Hobby Lobby. With the help of parts from it and an antique candle holder I was able to make a mount that the crystal would fit into. But then, of course, I sat on the crystal and broke it into three pieces. But fear not. It actually worked out. The boys would be tasked with healing the crystal and then fitting it into its perch. More on the story for that in the walkthrough.", "step_imgs": ["https://cdn.instructables.com/FY2/V5NX/JSCG5990/FY2V5NXJSCG5990.LARGE.jpg", "https://cdn.instructables.com/FOR/BPI4/JSFA8QPC/FORBPI4JSFA8QPC.LARGE.jpg", "https://cdn.instructables.com/F8Q/2EN0/JSFA8QPS/F8Q2EN0JSFA8QPS.LARGE.jpg", "https://cdn.instructables.com/FWV/LI7P/JSFA8RZG/FWVLI7PJSFA8RZG.LARGE.jpg"], "step_title": "Step 17: The Finche's Crystal"}, {"step": 18, "steps_text": "I have to throw in a heartfelt thank you to that most helpful of creations, The BreadBoard. For those of you not familiar, the breadboard is a device that lets you make electrical connections for your projects in a quick and sometimes temporary fashion. This is quite helpful when you're really not sure of exactly what you're doing! It allows you to go back and change things with little effort and gives you a place to centralize your connections. Several breadboards were used in the machine and I must say that I literally could not have completed the machine without them. Hats off to its creator! Well done Sir, or Mam, Well done!", "step_imgs": ["https://cdn.instructables.com/FFY/R5OW/JSFA90E7/FFYR5OWJSFA90E7.LARGE.jpg"], "step_title": "Step 18: The Most Helpful Thing....."}, {"step": 19, "steps_text": "As I said earlier, all of the puzzles and mechanaries I had originally planned for the machine would not fit into its 14.5 inch square frame. I had to literally look outside the box (OK yes, that was bad). But this actually helped me use some of the other things I had picked up over the years. Now some of them would finally find a home.\nHere I will try to list some of the other things you'll see in the walkthrough and give brief descriptions of their functions.", "step_imgs": ["https://cdn.instructables.com/FYS/MXWL/JSFA8X4E/FYSMXWLJSFA8X4E.LARGE.jpg"], "step_title": "Step 19: The Supporting Cast!"}, {"step": 20, "steps_text": "All electrical devices need power. The Machine's came from this repurposed signal box fitted with a jel cell 12 volt battery.", "step_imgs": ["https://cdn.instructables.com/FLZ/TZOW/JSFA8X4G/FLZTZOWJSFA8X4G.LARGE.jpg"], "step_title": "Step 20: Main Power Supply"}, {"step": 21, "steps_text": "This little guy started life as a cigar carousel. With a few modifications it became a perfect vessel in which to place written clues as well as store test tubes with necessary components for an electrolytic fluid.", "step_imgs": ["https://cdn.instructables.com/F06/IB3W/JSFA8X4L/F06IB3WJSFA8X4L.LARGE.jpg", "https://cdn.instructables.com/FP1/OVVI/JSFA8X5A/FP1OVVIJSFA8X5A.LARGE.jpg", "https://cdn.instructables.com/FPO/W90B/JSFA8X5G/FPOW90BJSFA8X5G.LARGE.jpg", "https://cdn.instructables.com/FVU/86J7/JSFA8X5H/FVU86J7JSFA8X5H.LARGE.jpg", "https://cdn.instructables.com/FZU/Y9IW/JSFA8X6A/FZUY9IWJSFA8X6A.LARGE.jpg"], "step_title": "Step 21: The Carousel of Knowledge"}, {"step": 22, "steps_text": "A place to store antiqued photos of my boys from Christmas past.", "step_imgs": ["https://cdn.instructables.com/FYT/E8MG/JSFA8X4I/FYTE8MGJSFA8X4I.LARGE.jpg"], "step_title": "Step 22: Photo Album"}, {"step": 23, "steps_text": "A box delivered to our home that contained unknown wonders.", "step_imgs": ["https://cdn.instructables.com/FC2/R1KI/JSFA8X4H/FC2R1KIJSFA8X4H.LARGE.jpg"], "step_title": "Step 23: The Mystery Box"}, {"step": 24, "steps_text": "Ancient miniature chests used to store small looking glasses and tools.", "step_imgs": ["https://cdn.instructables.com/F7T/72IN/JSFA90B3/F7T72INJSFA90B3.LARGE.jpg"], "step_title": "Step 24: Twin Holly Chests"}, {"step": 25, "steps_text": "A place of safety for a broken relic.", "step_imgs": ["https://cdn.instructables.com/FRN/J5XM/JSFA90B5/FRNJ5XMJSFA90B5.LARGE.jpg", "https://cdn.instructables.com/FVI/I7UV/JSFA90BC/FVII7UVJSFA90BC.LARGE.jpg", "https://cdn.instructables.com/F92/DSJ0/JSFA90BD/F92DSJ0JSFA90BD.LARGE.jpg"], "step_title": "Step 25: Case of the Meadow Crystal"}, {"step": 26, "steps_text": "A small box from ancient Japan with secrets of its own.", "step_imgs": ["https://cdn.instructables.com/F36/MK3Y/JSFA90B6/F36MK3YJSFA90B6.LARGE.jpg"], "step_title": "Step 26: Tiya's Little Sewing Box"}, {"step": 27, "steps_text": "An old phone tranciever. The wiring is missing, it couldn't work. Could it?", "step_imgs": ["https://cdn.instructables.com/FWL/03SF/JSFA90B7/FWL03SFJSFA90B7.LARGE.jpg", "https://cdn.instructables.com/FUW/EUEI/JSFA90BA/FUWEUEIJSFA90BA.LARGE.jpg", "https://cdn.instructables.com/FPL/33F2/JSFA90BB/FPL33F2JSFA90BB.LARGE.jpg"], "step_title": "Step 27: The Phantom Phone"}, {"step": 28, "steps_text": "Antique adding machine", "step_imgs": ["https://cdn.instructables.com/FEP/WPZH/JSFA90E3/FEPWPZHJSFA90E3.LARGE.jpg"], "step_title": "Step 28: The Addometer"}, {"step": 29, "steps_text": "Every ending has a beginning!", "step_imgs": ["https://cdn.instructables.com/F6V/EB28/JSFA9AFO/F6VEB28JSFA9AFO.LARGE.jpg"], "step_title": "Step 29: The Christmas Key"}, {"step": 30, "steps_text": "Ancient jade bottle holding an elixir potent enough to keep the builder from going insane. LOL", "step_imgs": ["https://cdn.instructables.com/F22/L6MP/JSFA90CO/F22L6MPJSFA90CO.LARGE.jpg"], "step_title": "Step 30: Flask of the Green Fairy"}, {"step": 31, "steps_text": "Thank you for reading along, if you're still here that is. I started all this as a way to give a bit of adventure to the holidays, and to mix fun with acts of love and compassion, as well as to have a great way to give my boys a few of their presents each year. Again please read through \"The Christmas Box Two\" if you get a chance. It explains the whole story arc a bit more.\nI am currently working on the actual walkthrough for the Christmas Machine as you read this, but the story itself is quite complex and I really don't want to rush through it. I will try my best to make it worth the wait. Within a week or so at the latest. so check back soon.\nIf anything I've put out there has made any of you do something kind or a bit \"out there\" for someone you love during the holidays then its been well worth the time and effort it took to write this.\nThis walkthrough will be much deeper into story than the one for box two. And in it I will give more information on the puzzles I used as well as some of the bits and pieces. Until then \"D\" signing off! Again, Check back soon...", "step_imgs": [], "step_title": "Step 31: A Place to Rest"}], "channel": "Art"}, {"category": "Technology", "description": "Hi everyone! Thanks for tuning in this project of mine, I hope you'll like this one and learn something new!\nAfter thinking of how I got into building speakers the first thought that comes to my mind is Barry Llewellyn's projects that really caught my eye and inspired me to build my own. Therefore I thought I would try to make my version of a small yet relatively simple portable Bluetooth speaker, which Barry has made on his Instructable. My take on this project includes designing my own panels, removable back, adding a few indicator LEDs, a nicer switch and a magnetic charger which not only does look awesome but also performs great.", "title": "Simple Portable Bluetooth Speaker", "url": "https://www.instructables.com/id/Simple-Portable-Bluetooth-Speaker/", "steps": [{"step": 1, "steps_text": "I did have to go over a few changes during the build since I didn't have it planned that well at first. You can see that in the video the back panel had an AUX port and a different layout than on the finished speaker. After trying to put the extra components for the AUX port, I noticed that I would simply be too difficult for the average DIY'er to cramp so much wiring in such a tiny enclosure, therefore I have removed the idea of the additional AUX jack input and only left the Bluetooth connectivity. Also, after completing this speaker for the first time I have noticed that the LED battery capacity indicator is not as useful as I have thought it would be - the LEDs are dim and the switch does not always make a proper connection, requiring a firm push on the button sometimes. Therefore I have simplified the design removing the unnecessary components.\nAs always, I have included the laser cut plans and the wiring diagram below. Feel free to download or print it and make sure you zoom in for a better view. Just to make sure the dimensions on your device are shown correctly, the hole diameter near \"FULL\" is supposed to be 1.7mm.\nHere are all the parts you will need for the build:\nCOMPONENTS:\n5W Speakers - https://ebay.to/2Epf8CC\nAmplifier - https://ebay.to/2txReOP\nBluetooth audio receiver - https://ebay.to/2ErcNao\nPassive radiator - https://ebay.to/2U3RpNu\nCharging board - https://ebay.to/2VdDnJl\n18650 Battery - https://ebay.to/2Ti7Wx5\nIsolated 5V converter - https://ebay.to/2Xm7LTE\n19mm Latching LED switch - https://ebay.to/2T3Ac9Z\n1k Ohm Resistors - https://ebay.to/2WoMfgC\n2mm LEDs - https://ebay.to/2VeqFu0\nMagnetic Micro USB adapter - https://ebay.to/2T7W0Bk\n5V 3A Charger - https://ebay.to/2SYnk5P\nAdhesive rubber feet - https://ebay.to/2XiLshT\nM2.3 x 12mm screws - https://ebay.to/2RDrUFG\nAdhesive foam strip - https://ebay.to/2SXcpFf\nTOOLS:\nWire Stripper - https://ebay.to/2G4x9av\nMultimeter - https://ebay.to/2GrYP9x\nHot Glue Gun - https://ebay.to/2F3bhZ5\nSanding Sponge - https://ebay.to/2TuJhW9\nEpoxy Glue - https://ebay.to/2DtAtvk\nJig Saw - https://ebay.to/2M4yNMF\nJig Saw Plywood Blades - https://ebay.to/2Uacq9D\nDrill - https://ebay.to/2BkSGss\nSoldering Iron - https://ebay.to/2yYfbSF\nSolder - https://ebay.to/2UMDADj\nSoldering Stand - https://ebay.to/2HH4nOg\nDrill Bits - https://ebay.to/2HGpi4b", "step_imgs": ["https://cdn.instructables.com/FDE/3GHK/JSEZ4XGI/FDE3GHKJSEZ4XGI.LARGE.jpg", "https://cdn.instructables.com/FFF/9MYH/JSPAC227/FFF9MYHJSPAC227.LARGE.jpg"], "step_title": "Step 1: Build Plans and Parts"}, {"step": 2, "steps_text": "The only building material for the speaker needed is plywood in two different thicknesses. I used 4mm (5/32in) for the front and back panels and 3 layers of 12mm (1/2in) plywood for the enclosure itself. I recommend using better quality plywood on this project since the grain of the plywood is what makes this speaker unique - I absolutely love the way the plywood grain shows once finished with lacquer, therefore the better quality plywood you will use - the better finished product you will get.\nThe enclosure is really simple - it consists of 3 layers of plywood glued together. I placed the front (you can also use the back one) panel on my plywood and traced it around the outer edge three times, giving me three templates. Then I took my jigsaw and cut out the pieces along the line, making sure not to cut into the line. Staying a hair from the line is what you need.\nI highly recommend using a saw blade made specifically for plywood which helps avoid any tearout resulting in a better finished in the end.", "step_imgs": ["https://cdn.instructables.com/FV7/HIDZ/JSEZ4Y5W/FV7HIDZJSEZ4Y5W.LARGE.jpg", "https://cdn.instructables.com/FAS/6J8A/JSEZ4Y5X/FAS6J8AJSEZ4Y5X.LARGE.jpg", "https://cdn.instructables.com/FQ5/TT3Y/JSEZ4Y5U/FQ5TT3YJSEZ4Y5U.LARGE.jpg", "https://cdn.instructables.com/F3A/U8CX/JSEZ4Y5V/F3AU8CXJSEZ4Y5V.LARGE.jpg"], "step_title": "Step 2: Starting With the Enclosure"}, {"step": 3, "steps_text": "Once the pieces are cut out close to the line, it is then time to sand the pieces as close to the line as possible, though it is not necessary to be very exact. The only purpose of sanding close to the line is to allow us to draw an inner line around the edge of the plywood pieces. To do that I hold the pencil with a steady hand and use my finger as a guide to draw an outline around the edge. The distance from the edge is not critical - I would say 6-10mm is good enough for a sturdy enclosure.", "step_imgs": ["https://cdn.instructables.com/F9J/JHJB/JSEZ4YM9/F9JJHJBJSEZ4YM9.LARGE.jpg", "https://cdn.instructables.com/F2Y/RYHA/JSEZ4YMB/F2YRYHAJSEZ4YMB.LARGE.jpg", "https://cdn.instructables.com/FQL/0U7P/JSEZ4YMD/FQL0U7PJSEZ4YMD.LARGE.jpg", "https://cdn.instructables.com/FY3/7WTL/JSEZ4YME/FY37WTLJSEZ4YME.LARGE.jpg", "https://cdn.instructables.com/FIQ/X01R/JSEZ4YMF/FIQX01RJSEZ4YMF.LARGE.jpg"], "step_title": "Step 3: Sanding the Pieces"}, {"step": 4, "steps_text": "Once we have the outline drawn on the pieces we can carefully drill out the corners on the pieces to allow for the jigsaw blade. Here I am using a forstner bit on a drill press and drilling halfway through on each side to avoid tearout. The same can be done with a simple drill. I then took the jigsaw once again to cut out the inner pieces leaving me with three frames for the enclosure.", "step_imgs": ["https://cdn.instructables.com/FDO/HHO6/JSEZ4YVF/FDOHHO6JSEZ4YVF.LARGE.jpg", "https://cdn.instructables.com/FT0/PEOW/JSEZ4YVG/FT0PEOWJSEZ4YVG.LARGE.jpg", "https://cdn.instructables.com/FPR/0N9J/JSEZ4YVH/FPR0N9JJSEZ4YVH.LARGE.jpg", "https://cdn.instructables.com/FKI/N8RB/JSEZ4YVI/FKIN8RBJSEZ4YVI.LARGE.jpg", "https://cdn.instructables.com/FZ6/YYLV/JSEZ4YVJ/FZ6YYLVJSEZ4YVJ.LARGE.jpg"], "step_title": "Step 4: Cutting Out the Frames"}, {"step": 5, "steps_text": "Once we have the enclosure frames ready, we can start gluing them up. Before that I sanded the edges of the plywood pieces to remove any fibers and rough edges so that the pieces stick well. I applied a healthy amount of glue on both sides of the pieces and pressed them in place. After a few minutes I have removed the excess glue from the outside of the enclosure and then glued the front panel in place, making sure it sits inside of the outer edge of the enclosure. I then carefully clamped the pieces between two boards making sure they don't slide out of alignment.", "step_imgs": ["https://cdn.instructables.com/F0O/QI0U/JSEZ4Z2X/F0OQI0UJSEZ4Z2X.LARGE.jpg", "https://cdn.instructables.com/F1A/H0TI/JSEZ4Z2Y/F1AH0TIJSEZ4Z2Y.LARGE.jpg", "https://cdn.instructables.com/FA6/PKWT/JSEZ4Z2Z/FA6PKWTJSEZ4Z2Z.LARGE.jpg", "https://cdn.instructables.com/FXA/TQ7C/JSEZ4Z30/FXATQ7CJSEZ4Z30.LARGE.jpg", "https://cdn.instructables.com/FIP/64FU/JSEZ4Z2W/FIP64FUJSEZ4Z2W.LARGE.jpg"], "step_title": "Step 5: Glue Up!"}, {"step": 6, "steps_text": "Once the glue has fully dried, we can remove the clamps and reveal the piece which now looks somewhat like a speaker. I then use two clamps to hold the back panel in place, making sure it is aligned properly and I pre-drill the screw holes. I couldn't drill all the holes in one shot because the clamps were in the way, but once the panel is held in place with a few screws, I got those holes drilled then. The back panel is now temporarily screwed in place for the next step.", "step_imgs": ["https://cdn.instructables.com/FKC/H0LB/JSEZ4ZL1/FKCH0LBJSEZ4ZL1.LARGE.jpg", "https://cdn.instructables.com/FFK/BE14/JSEZ4ZL2/FFKBE14JSEZ4ZL2.LARGE.jpg", "https://cdn.instructables.com/F8K/4HJL/JSEZ4ZL3/F8K4HJLJSEZ4ZL3.LARGE.jpg", "https://cdn.instructables.com/FMK/OJXR/JSEZ4ZL4/FMKOJXRJSEZ4ZL4.LARGE.jpg"], "step_title": "Step 6: Once the Glue Has Dried"}, {"step": 7, "steps_text": "Once we have the back panel temporarily screwed in place, we can sand the enclosure flush with the front and back panels. Take your time on this step and use a few grits for the best results. Once the enclosure is sanded and is now smooth with no rough edges, we can drill the hole for the switch. I am using a 20mm forstner bit for this step. Make sure to drill the hole further away from the woofer hole so that the switch does not interfere with the woofer once it is in place.", "step_imgs": ["https://cdn.instructables.com/F7H/CYGV/JSEZ4ZZM/F7HCYGVJSEZ4ZZM.LARGE.jpg", "https://cdn.instructables.com/FO1/GLXB/JSEZ4ZZK/FO1GLXBJSEZ4ZZK.LARGE.jpg", "https://cdn.instructables.com/FR1/F9PK/JSEZ4ZZL/FR1F9PKJSEZ4ZZL.LARGE.jpg"], "step_title": "Step 7: More Sanding"}, {"step": 8, "steps_text": "Now that we have a smooth enclosure, we can remove the back panel and get the enclosure ready for a few coats of clear lacquer. Make sure you use some kind of a solvent remove any oils from the surface of the enclosure before spraying.\nI used some matte clear lacquer from a spray can and I am stunned from the results. the enclosure looks amazing, and to be honest, I did not expect such a nice result using spray lacquer. I highly recommend using the matte lacquer.", "step_imgs": ["https://cdn.instructables.com/FXQ/OMIR/JSEZ50DJ/FXQOMIRJSEZ50DJ.LARGE.jpg", "https://cdn.instructables.com/FZ2/A8NV/JSEZ50DK/FZ2A8NVJSEZ50DK.LARGE.jpg", "https://cdn.instructables.com/FH1/EDFH/JSEZ50DL/FH1EDFHJSEZ50DL.LARGE.jpg"], "step_title": "Step 8: Applying Clear Coat"}, {"step": 9, "steps_text": "Now comes the fun part of installing the components. To begin with I used some two component adhesive to mount the passive radiator in place. The same goes for the speaker drivers. I also put a few blobs of hot glue to hold the components in place while the adhesive cures.", "step_imgs": ["https://cdn.instructables.com/FB1/NTY5/JSEZ50SV/FB1NTY5JSEZ50SV.LARGE.jpg", "https://cdn.instructables.com/FK9/LR3C/JSEZ50SX/FK9LR3CJSEZ50SX.LARGE.jpg", "https://cdn.instructables.com/FGB/K9HI/JSEZ50SW/FGBK9HIJSEZ50SW.LARGE.jpg"], "step_title": "Step 9: Mounting the Components"}, {"step": 10, "steps_text": "Time for soldering the electronics! Make sure you refer to my wiring diagram which I have uploaded in a step above.\nRemoving the LEDs from the boards requires a steady hand and a sharp soldering iron tip. Make sure to use plenty of solder and a quick action to remove the LEDs in less time as possible. I then soldered the wire for the 2mm LEDs. I did these procedures for the charging and Bluetooth boards.\nI then soldered two 1k Ohm resistors for the right and left channels of the amplifier to turn the stereo signal into mono since we will be powering to speakers in the same enclosure, therefore the signal has to be the same for both woofers.", "step_imgs": ["https://cdn.instructables.com/F6Q/I94P/JSEZ5128/F6QI94PJSEZ5128.LARGE.jpg", "https://cdn.instructables.com/FGW/6ZJ5/JSEZ5129/FGW6ZJ5JSEZ5129.LARGE.jpg", "https://cdn.instructables.com/FFW/XYA6/JSEZ5125/FFWXYA6JSEZ5125.LARGE.jpg", "https://cdn.instructables.com/FXT/BEZD/JSEZ512B/FXTBEZDJSEZ512B.LARGE.jpg", "https://cdn.instructables.com/FIB/RJPE/JSEZ5126/FIBRJPEJSEZ5126.LARGE.jpg", "https://cdn.instructables.com/F3P/YJBQ/JSEZ512D/F3PYJBQJSEZ512D.LARGE.jpg", "https://cdn.instructables.com/FYG/8V8T/JSEZ5124/FYG8V8TJSEZ5124.LARGE.jpg", "https://cdn.instructables.com/FXI/AY75/JSEZ5127/FXIAY75JSEZ5127.LARGE.jpg"], "step_title": "Step 10: More Soldering"}, {"step": 11, "steps_text": "Here you can see the redesigned back panel that I wrote about before. As you can see I have the AUX port removed and the charging port adjusted to allow for the Lithium-ion battery inside the enclosure.\nMy favorite part about this design is that the LEDs and the charging port are friction fit in place. I made the holes just to barely fit the components in place therefore using glue is not necessary but I would still recommend applying a small amount around the LEDs and the magnetic USB connector to avoid any leaks and hold them in place really well.\nOnce the LEDs and the connector are installed in place, I used some hot glue to glue the rest of the components in place. Make sure that no wires touch the passive radiator from the inside or you will experience some horrible rattling when music is being played.", "step_imgs": ["https://cdn.instructables.com/FQH/9USJ/JSEZ51OE/FQH9USJJSEZ51OE.LARGE.jpg", "https://cdn.instructables.com/FIB/UILN/JSEZ51OF/FIBUILNJSEZ51OF.LARGE.jpg", "https://cdn.instructables.com/FLZ/YBXF/JSEZ51OG/FLZYBXFJSEZ51OG.LARGE.jpg", "https://cdn.instructables.com/F7J/BGVD/JSEZ51OH/F7JBGVDJSEZ51OH.LARGE.jpg", "https://cdn.instructables.com/F0A/0PPG/JSEZ51OI/F0A0PPGJSEZ51OI.LARGE.jpg"], "step_title": "Step 11: Installing the Components"}, {"step": 12, "steps_text": "Once the components are installed in place, I stick a thin adhesive foam strip along the edge of the speaker to make an airtight seal once the back panel is screwed down. I should have applied the strip before mounting the components in place but it was not a big deal.\nWe can now screw the back panel in place. How long have I waited for this! Make sure to tighten the screws well so that the foam strip is pressed well. Once that is done we can stick a few adhesive rubber pads on the underside to use as feet for the speaker.\nAnd we are done!", "step_imgs": ["https://cdn.instructables.com/F6K/DJ7L/JSEZ52S7/F6KDJ7LJSEZ52S7.LARGE.jpg", "https://cdn.instructables.com/FDO/XDIQ/JSEZ52O9/FDOXDIQJSEZ52O9.LARGE.jpg", "https://cdn.instructables.com/FH6/JQGK/JSEZ52PA/FH6JQGKJSEZ52PA.LARGE.jpg", "https://cdn.instructables.com/FCQ/ULY6/JSEZ52PD/FCQULY6JSEZ52PD.LARGE.jpg", "https://cdn.instructables.com/FAN/ZCDP/JSEZ52QE/FANZCDPJSEZ52QE.LARGE.jpg", "https://cdn.instructables.com/F35/OYHA/JSEZ52QH/F35OYHAJSEZ52QH.LARGE.jpg", "https://cdn.instructables.com/FBA/9HUX/JSEZ52S6/FBA9HUXJSEZ52S6.LARGE.jpg"], "step_title": "Step 12: Last Steps!"}, {"step": 13, "steps_text": "We can now admire this tiny speaker that we have made. I absolutely love the magnetic charger, it makes such a satisfying click once it is attracted by the magnets in the connector! And the charging lead also has an LED which glows once plugged in. The charging takes around 2 hours and the playtime is around 6 hours depending on the volume.", "step_imgs": ["https://cdn.instructables.com/FKF/3BHI/JSEZ53HZ/FKF3BHIJSEZ53HZ.LARGE.jpg", "https://cdn.instructables.com/F3J/A3VO/JSEZ53I0/F3JA3VOJSEZ53I0.LARGE.jpg"], "step_title": "Step 13: Finished!"}, {"step": 14, "steps_text": "To be honest, I am more than happy of how it turned out. It sounds amazing for its size, super loud and even has plenty of bass which I did not expect from such tiny drivers. The Bluetooth establishes the connection instantly and the sound quality does not suffer at all. The speaker outputs only around 6 Watts of clean power but that is plenty enough for this little guy. Make sure you check my video for the sound test but take my word that it does not do its justice probably due to my crappy microphone.\nAnyway, I hope you liked this build and perhaps learned something new! I highly encourage you to try building one yourself. It is a lot of fun and the result is actually something that you can be proud of.\nThanks for following me on this build and I will see you on the next one!", "step_imgs": ["https://cdn.instructables.com/F6W/CO4T/JSEZ53I1/F6WCO4TJSEZ53I1.LARGE.jpg"], "step_title": "Step 14: Final Thoughts"}], "channel": "Speakers"}, {"category": "Technology", "description": "These DDS Signal Generator module boards can be had for as little as $15 if you look around. They will generate Sine, Square, Triangle, Sawtooth (and reverse) waveforms (and a few others) fairly accurately. These also have touch controls, amplitude and offset adjustments. Add in a case for about $10 and you're laughing.\nThe module board run's off low voltage (7-9V), so they're safe for novices. It will actually run off 12V as well (as I do with mine), so you can use a wall wart power supply. Although, you could put AC in there if you so desire. The module only uses a small amount of current so even a small switch mode PS would do. With a few extra components you've got a fully functioning bench style signal generator. Best of all, the module is pre-build so they're tested and guaranteed to work (you can get unassembled kits as well).\nMost of the work in this project is modifying the board so that it can be mounted in a bench style enclosure. You can buy these pre-built in a small box. I wanted mine for the work bench.", "title": "Cheap DIY DDS Function/Signal Generator", "url": "https://www.instructables.com/id/Cheap-DIY-DDS-FunctionSingal-Generator/", "steps": [{"step": 1, "steps_text": "A DDS Function Generator module board - these can be found on Ebay, aliexpress etc for about $15-20, prebuilt , tested and functioning.\nMale header connector strips - again ebay. Buy a long strip and you can cut them down for whatever length you need.\nHeader cables - either build them yourself if you have the individual pins and casings or you can get them from Jaycar. They were out of the male/females at the time, so I bought male/male and changed one side over to female.\nSingle core shielded cable - similar stuff you use for low power audio signals\n12/24V switch - I used a 24V LED switch. It's a little less bright running it off 12V, but any switch will do.\nMale DC panel mount connector and female plug socket - I had a few different styles so I was just using up the old style I had. You can get them in a plastic single drill hole style which are easier to mount.\nCouple of nuts/washers for the BNC connectors or buy new BNC panel connectors as the kit doesn't have them. I took a couple off a foot switch I had.\n4 small M3 hex male/female stand offs for the LCD (to replace the longer ones supplied in the original kit module)\nI also changed out the control knobs from the red ones supplied to some more generic white knobs.\nThe silver knobs/top hat style buttons I also had laying around from another project, but they're cheap to buy a pack of 50 mixed colours.\nSome sort of instrument case. The one pictured you can buy them for about $12 off ebay, cheaper if you buy a couple together (if you have other projects - I use them for power supplies as well).", "step_imgs": ["https://cdn.instructables.com/FGF/NSTK/JSEZ49YO/FGFNSTKJSEZ49YO.LARGE.jpg", "https://cdn.instructables.com/FKJ/L41Q/JSEZ4AAH/FKJL41QJSEZ4AAH.LARGE.jpg", "https://cdn.instructables.com/FWH/JROG/JSEZ4AC6/FWHJROGJSEZ4AC6.LARGE.jpg", "https://cdn.instructables.com/FHC/DUX4/JSEZ4AC8/FHCDUX4JSEZ4AC8.LARGE.jpg", "https://cdn.instructables.com/F2V/71QF/JSEZ4AJQ/F2V71QFJSEZ4AJQ.LARGE.jpg"], "step_title": "Step 1: What You'll Need to Buy"}, {"step": 2, "steps_text": "Before doing anything to the board - VERIFY IT WORKS FIRST! Plug the board into 9-12V power supply and verify everything's running how it should before you start modifying. Nothing worse then spending all that time changing the board on something that didn't work in the first place.\nThe first thing to do is to remove components that will be going on the front panel (unless you bought the un-assembled kit - then you can leave those components off). BE CAREFUL as excessive heat can remove pads and tracks. Best off adding a little solder and then remove all with a solder sucker.\nRemove:\n- The two output BNC connectors,\n- The two pots\n- Five push button switches\n- The LCD board from the header as one unit.\nNow solder in headers in place of the BNC connecters, the pots (you can use a five way header with pins 2 & 4 removed for spacing).\nSolder in 6 single headers for the switches. Even through there's four pads, two sets are connected per side so either pin will do. You can go off the photo to see which pads are what, however I strongly recommend buzzing the board out yourself in-case they change the board layout. You'll find one side of the switches all connect to each other (the common). In my case, I've used the red wire as my common (looking back, I probably should have used black). All the rest are the other side of the switch and either side of the pad works as a connection point.\nAgain, I've used single wires in-case one switch is doing the wrong function, they're easily swapped around ( I think that's why I didn't use black, the wire was too short).\nA NOTE ABOUT THE LCD CONNECTING HEADER:\nI found that putting the header through the vero board doesn't leave a lot of grip for the connectors to connect with. If you can find extra long header pins that would be the go, or a long male/female header extension.", "step_imgs": ["https://cdn.instructables.com/FI6/HA5N/JSEZ48WC/FI6HA5NJSEZ48WC.LARGE.jpg"], "step_title": "Step 2: Modify DDS Module"}, {"step": 3, "steps_text": "The display and control panel looks more intimidating than it actually is. Basically, the large vero board on the back holds both boards together (the existing LCD screen and new push button board).\nFor the LCD display, the pins just push straight through the back of the vero board and will attach to the main board via a male/female header cable. Just remember to cut the tracks just under connectors. Also see the notes earlier on pin lengths.\nFor the switch board, space the switches out how you like them. Basically, one side will be a common (so you can connect them all to one rail) and then I've poked individual header pins through the board to attach the wires (for the main board). I've also attached the male end of the header wire to the board (as they kept falling off). However, you can use the longer headers if you can find them. Again, just make sure you cut unnecessary tracks on both vero boards.\nErgonomically, it makes more sense to have the vero running down the board (long ways) for a common between the switches. However, you also waste a lot off one side of the vero board. So it's easier to just cut a small length off the end of a full board and deal with it that way.\nA Couple of Notes:\nI put the switches one row too high and should have been lower. I didn't have the switch caps at the time and the side of the cap got in the way of the LCD display standoff's - hence why you see the side of the cap cut off on the two end switches. I assumed that the cap wouldn't be much bigger than the switch. We all know what happens when we assume.\nWhy did I solder the switches on the copper side of the vero board? Because the interconnecting header pins needed to be spaced similarly to the LCD headers. That way the switch board didn't sit any further forward behind the front panel. It just fits and doesn't cause any ill effects with the switches not working correctly.\nI had to enlarge some of the switch holes on the front panel, as the switches didn't sit entirely square in the vero board. So some switches were offset slightly.\nYeah, I know one of the corners of the vero board broke when I drilled it! Again, the vero probably could have been one hole higher.", "step_imgs": ["https://cdn.instructables.com/FAW/2EXR/JSEZ4794/FAW2EXRJSEZ4794.LARGE.jpg", "https://cdn.instructables.com/F82/KXOV/JSEZ498K/F82KXOVJSEZ498K.LARGE.jpg"], "step_title": "Step 3: Modify Display Board and Front Panel Switches"}, {"step": 4, "steps_text": "Okay, so the first thing is to drill the front panel out for the LCD screen, power button, switches, pots and output BNC's. Space it how you want, I wanted the screen in the centre and 2 BNCs under the controls so any cables didn't get in the way. Power switches I generally like on the left.\nI've used some rub on lettering for the front control panel. Then gave it a light spray of clear over the top. Unfortunately, the clear sometimes makes the letters run or can crack/craze them. Once you've put your letters on and it's dried, mount the components to the front panel. The LCD screen assembly is mounted with a couple of M3 stand offs, using the original holes of the board. It attaches to the vero board via M3 screw and nut\nNext, drill a hole for the DC connector in the back and mount the DC panel socket.\nOnce all of these things have been mounted, it's time to interconnect the modules and boards. I've allowed a little extra in the cable lengths so that with the front and back panels out, they can sit lay down.\nFor the pot leads, I used single headers as I wasn't sure whether the controls would function in the right direction so it's easy to swap when they're single.\nI've used a DC female connector to connect power to the board incase the module ever goes \"bung\". Then it's relatively easy to replace the whole board. As was the case with the first board - I'd accidentally connected a couple of the display leads wrong way around and buggered the board - Oops!\nSee the note in step 2 regarding the header pins!\nNow hook up all your leads, add some power and see if it's functioning correctly. Fingers crossed everything's functioning how it should.\n\nHope that you found this instructable useful and it at least gave you some ideas for your own version.", "step_imgs": ["https://cdn.instructables.com/FWD/SR4A/JSEZ49W5/FWDSR4AJSEZ49W5.LARGE.jpg", "https://cdn.instructables.com/FIP/FNIL/JSEZ4J15/FIPFNILJSEZ4J15.LARGE.jpg", "https://cdn.instructables.com/FUB/8PLE/JSEZ498Z/FUB8PLEJSEZ498Z.LARGE.jpg"], "step_title": "Step 4: Putting It All Together"}], "channel": "Electronics"}, {"category": "Technology", "description": "Hello there Engineers and Hobbyists, we all love Arduino's right! But using an Arduino UNO, NANO or any other Arduino for a small task like displaying a simple message on LCD or just Fading LED would be waste of resource and money, so in this video, we would discover a Cheap and Compact Alternative of Arduino called ATTINY85, so let\u2019s get started!", "title": "How to Setup DigiSprak Attiny85 Board", "url": "https://www.instructables.com/id/How-to-Setup-DigiSprak-Attiny85-Board/", "steps": [{"step": 1, "steps_text": "", "step_imgs": [], "step_title": "Step 1: Watch the Video"}, {"step": 2, "steps_text": "for this Tutorial, we will need\n1. Attiny85 Board\nhttps://in.gearbest.com/boards-shields/pp_00949109...\n2. Arduino IDE\nhttps://www.arduino.cc/en/main/software", "step_imgs": ["https://cdn.instructables.com/FTI/G9NT/JSCG6S2D/FTIG9NTJSCG6S2D.LARGE.jpg", "https://cdn.instructables.com/F5T/70AP/JSCG6S2Y/F5T70APJSCG6S2Y.LARGE.jpg", "https://cdn.instructables.com/FSI/MFUX/JSEYZ6VZ/FSIMFUXJSEYZ6VZ.LARGE.jpg"], "step_title": "Step 2: Gathering the Requirements"}, {"step": 3, "steps_text": "At Tiny 85 is similar to Arduino, but it is not Arduino,ATTINY 85 is a Micro-Controller chip, which has 6 General Purpose IO pins(GPIO), out of which 5 are PWM enabled, and ATTINY85 also supports the SPI and I2C Communication Protocols, but it has only 8Kb of programming memory, so yes, it is not as capable as Arduino board, but it will work just fine for small projects.\nalso, this board few other features like\ninbuilt 8 bit timers.\ninbuilt comparators.\n512 Bytes EPROM\n512 Bytes SRAM.\nhere is a complete data sheet for brief knowledge", "step_imgs": ["https://cdn.instructables.com/FF8/I421/JSCG6QQK/FF8I421JSCG6QQK.LARGE.jpg", "https://cdn.instructables.com/F2V/R7IP/JSCG6QPQ/F2VR7IPJSCG6QPQ.LARGE.jpg", "https://cdn.instructables.com/FFZ/2EIP/JSCG6QPG/FFZ2EIPJSCG6QPG.LARGE.jpg", "https://cdn.instructables.com/FB1/7ZM3/JSCG6QQQ/FB17ZM3JSCG6QQQ.LARGE.jpg"], "step_title": "Step 3: Understanding the Board"}, {"step": 4, "steps_text": "we need to add boards (DigiStump's Attiny85) into our Arduino IDE, to do so,\nFirst open your Arduino IDE,\ngo to Preference and simply paste the Link \" https://raw.githubusercontent.com/digistump/arduino-boards-index/master/package_digistump_index.json \" on the Additional Board Management URL,\nthen simply Press okay and Close Preferences.", "step_imgs": ["https://cdn.instructables.com/FEJ/39TJ/JSCG6SI6/FEJ39TJJSCG6SI6.LARGE.jpg", "https://cdn.instructables.com/FFR/AHG0/JSCG6SI8/FFRAHG0JSCG6SI8.LARGE.jpg", "https://cdn.instructables.com/FNY/GEQJ/JSCG6SI3/FNYGEQJJSCG6SI3.LARGE.jpg"], "step_title": "Step 4: Edit Board URL"}, {"step": 5, "steps_text": "to install Attiny Board Settiongs on Arduino IDE,\ngo to board manager, under Tools menu\nselect the Contributed type of boards Option\nselect \"DIGISTUMP AVR BOARDS\"\nClick on install it!", "step_imgs": ["https://cdn.instructables.com/F68/1T90/JSCG6TUO/F681T90JSCG6TUO.LARGE.jpg", "https://cdn.instructables.com/FP3/O5A5/JSCG6TWY/FP3O5A5JSCG6TWY.LARGE.jpg", "https://cdn.instructables.com/FYG/9E5V/JSCG6TQL/FYG9E5VJSCG6TQL.LARGE.jpg", "https://cdn.instructables.com/FVH/AHBG/JSCG6TRH/FVHAHBGJSCG6TRH.LARGE.jpg", "https://cdn.instructables.com/F5H/QF46/JSCG6TSG/F5HQF46JSCG6TSG.LARGE.jpg"], "step_title": "Step 5: Install DigiStump Board on IDE"}, {"step": 6, "steps_text": "Now, install the drivers on your computer Attached on this Step\n\nUnzip the Attached File.\nclick on DPinst64.exe to install the Drivers on your computer.\nthen insert the Attiny85 board into your computer .", "step_imgs": ["https://cdn.instructables.com/FFR/0F91/JSCG6X4S/FFR0F91JSCG6X4S.LARGE.jpg", "https://cdn.instructables.com/FE4/CAYE/JSCG6X8E/FE4CAYEJSCG6X8E.LARGE.jpg", "https://cdn.instructables.com/F0R/AVB4/JSCG6X97/F0RAVB4JSCG6X97.LARGE.jpg"], "step_title": "Step 6: Install the Drivers"}, {"step": 7, "steps_text": "sometimes your drivers are not installed correctly, in such (unusual) case, we will follow these steps\nOpen Device Manager,\nClick on View Menu and select\u201cShow Hidden option\u201d\nclick on Device called \u201cLIBUSB-win\"\nRight Click on DigiSpark USB device device and Click on Update Device\nbrowse the drivers from our computer.\nselect the location of drivers stored on computer", "step_imgs": ["https://cdn.instructables.com/FWO/KC47/JSCG6ZPT/FWOKC47JSCG6ZPT.LARGE.jpg", "https://cdn.instructables.com/FQO/7ZZ6/JSCG6ZR2/FQO7ZZ6JSCG6ZR2.LARGE.jpg", "https://cdn.instructables.com/FC5/EWD5/JSCG6ZRZ/FC5EWD5JSCG6ZRZ.LARGE.jpg", "https://cdn.instructables.com/FJT/W0KS/JSCG6ZTB/FJTW0KSJSCG6ZTB.LARGE.jpg", "https://cdn.instructables.com/F7Q/MU4N/JSCG6ZV8/F7QMU4NJSCG6ZV8.LARGE.jpg", "https://cdn.instructables.com/F5I/NV5Z/JSCG6ZYI/F5INV5ZJSCG6ZYI.LARGE.jpg"], "step_title": "Step 7: Troubleshooting (OPTIONAL)"}, {"step": 8, "steps_text": "Now, let\u2019s run a test code to check our \u2018Attiny85\u2019 board,\nwe will simply try Blink code, which you can find attached in this step.\n<p>/* Blink Code by Akshay Momaya<br> * for Mission Critical Channel \n * ATTINY85 Tutorial for <Mission Critical><mission critical=\"\">\n *  subscribe for more arduino Tuorials and Projects\n<a href=\"https://www.youtube.com/channel/UCM6rbuieQBBLFsxszWA85AQ?sub_confirmation=1\">\nhttps://www.youtube.com/channel/UCM6rbuieQBBLFsxs...</a>\n */</mission></p><p>void setup()\n {\n  pinMode(1, OUTPUT);\n }</p><p>void loop()\n {\n  digitalWrite(1, HIGH);   \n  delay(1000);                      \n  digitalWrite(1, LOW);    \n  delay(1000);              \n }\n\n</p>", "step_imgs": ["https://cdn.instructables.com/F6A/XU04/JSCG71O5/F6AXU04JSCG71O5.LARGE.jpg"], "step_title": "Step 8: Write Test Code"}, {"step": 9, "steps_text": "here, Selecting the Proper Code is the deal breaker of this entire Setup. to do so,\nwe will\nselect \u201cDigispark (Deafult-16.5Mhz)\u201d from Board Menu in Tools.\nselect programmer as \u201cMicronucleus\" from Board Menu in Tools.", "step_imgs": ["https://cdn.instructables.com/FZN/XS74/JSCG73HA/FZNXS74JSCG73HA.LARGE.jpg", "https://cdn.instructables.com/FOA/1ES1/JSCG73IN/FOA1ES1JSCG73IN.LARGE.jpg", "https://cdn.instructables.com/FBL/7DIU/JSCG73JR/FBL7DIUJSCG73JR.LARGE.jpg"], "step_title": "Step 9: Select Proper Board Type"}, {"step": 10, "steps_text": "normally we would compile and Upload the code with our Arduino Connected, but here in Attiny85, we will\nCompile the code\nPress UPLOAD button\nwait for Plug in device now... (will timeout in 60 seconds) this message.\nConnect the Board Within 60 Seconds .\nwait for \"Micronucleus done. Thank you!\" Message From compiler.\nEnjoy!\nOuput of this code will show blinking LED on Pin 1 on the Board", "step_imgs": ["https://cdn.instructables.com/FVV/XQSE/JSEYZ14Y/FVVXQSEJSEYZ14Y.LARGE.jpg", "https://cdn.instructables.com/FL2/1G4H/JSEYZ17O/FL21G4HJSEYZ17O.LARGE.jpg", "https://cdn.instructables.com/F0I/LPX8/JSEYZ18N/F0ILPX8JSEYZ18N.LARGE.jpg", "https://cdn.instructables.com/FOU/Y61X/JSEYZ1A4/FOUY61XJSEYZ1A4.LARGE.jpg", "https://cdn.instructables.com/FSI/J6E1/JSEYZ4D2/FSIJ6E1JSEYZ4D2.ANIMATED.LARGE.gif"], "step_title": "Step 10: Upload the Code"}, {"step": 11, "steps_text": "We will do much more projects and Experiments with this board in future,\nlike Shrinking your Circuit Size, making StandAlone Attiny85 Projects etc.\nDon\u2019t forget to subscribe to Mission Critical for such Awesome Tutorials and Projects!", "step_imgs": ["https://cdn.instructables.com/FAO/B0TX/JSEYZ5J1/FAOB0TXJSEYZ5J1.LARGE.jpg", "https://cdn.instructables.com/F2L/06Q3/JSEYZ607/F2L06Q3JSEYZ607.ANIMATED.LARGE.gif"], "step_title": "Step 11: Conclusion / Future Scope"}], "channel": "Arduino"}, {"category": "Technology", "description": "Robot manipulators have been developed to many kinds of structure. OpenManipulator has most simple serial linkage structure, but the other structure can be useful to particular tasks, so we provide manipulators had various structure as OpenManipulator Friends. OpenManipulator Link has parallel linkage structure be useful to palletizing tasks. Its structure may be comparatively complicate, but it is very effective in simple pick and place task and for increase manipulator payload. Now let us show you how to make it step by step.\nThis page will explain about hardware setup of OpenManipulator Link.", "title": "OpenManipulator Link", "url": "https://www.instructables.com/id/OpenManipulator-Link/", "steps": [{"step": 1, "steps_text": "Part List\nPlate\nBase Plate-02 : 1\nActuators\nDynamixel XM430-W350-T : 3\nChassis Parts (3D printing)\nBASE LINK : 1\nRotation base : 1\nHolder a : 1\nHolder b : 1\nLink 50 : 1\nLink 200a : 1\nLink 50 for 250 : 1\nLink 200 for 250 : 1\nLink 200 b : 4\nTriangle link : 1\nTool link : 1\nCables\nCable_3P_180MM : 1\nCable_3P_240MM : 2\nAxis parts\nPSCBRJ6-9 : 18\nMSRB6-1.0 : 36\nNSFMR6-42 : 1\nNSFMR6-38 : 1\nNSFMR6-28 : 1\nNSFMR6-24 : 5\nBall Bearing (O.D 10mm / I.D 6mm / Width 3mm) : 24\nMiscellaneous\nWB_M2X03 : 8\nWB_M2X04 : 4\nWB_M2X06 : 4\nWB_M2.5X04 : 8\nWB_M2.5X06 : 8\nWB_M2.5X08 : 4\nWB_M2.5X20 : 2\nNUT_M2 : 4\nNUT_M2.5 : 4\nController\nOpenCR : 1\nSMPS 12V5A : 1\nPC (windows, linux, mac) 1\nSet three Dynamixel\u2019s IDs to 1, 2, 3 by using R+ Manager.", "step_imgs": ["https://cdn.instructables.com/FBF/C14S/JSEZ2SMT/FBFC14SJSEZ2SMT.LARGE.jpg"], "step_title": "Step 1: Check the Part List"}, {"step": 2, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FLI/RX8S/JSEZ2SWS/FLIRX8SJSEZ2SWS.LARGE.jpg"], "step_title": "Step 2: Printing the 3D Printing Parts"}, {"step": 3, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FVB/X9ZX/JSEZ2SXT/FVBX9ZXJSEZ2SXT.LARGE.jpg"], "step_title": "Step 3: Install a Base Link to the Dynamixel (ID 1) Horn by Four Bolts (WB_M2X04) While Paying Attention to the Align Marking Position on the Dynamixel Horn, and Remove Two Bolts That Was Installed on the Dynamixel."}, {"step": 4, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/F72/CLHX/JSEZ2SZ4/F72CLHXJSEZ2SZ4.LARGE.jpg"], "step_title": "Step 4: Install a Base Link to a Base Plate by 4 Bolts (WB_M2.5X08) and Nuts (NUT_M2.5), While Paying Attention to the Align Marking Position of the Dynamixel Horn."}, {"step": 5, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/F1U/623E/JSEZ2T0B/F1U623EJSEZ2T0B.LARGE.jpg"], "step_title": "Step 5: Push a Rotation Base Part Into the Parts That Assembled in Step 4, and Fasten the Dynamixel (ID 1) and the Rotation Base Part With 4 Bolts (WB_M2.5X06)."}, {"step": 6, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FQ1/41MD/JSEZ2T1L/FQ141MDJSEZ2T1L.LARGE.jpg"], "step_title": "Step 6: Install a Link 200 a to the Dynamixel (ID 2) by 4 Bolts (WB_M2X03) While Paying Attention the Align Marking Position on the Dynamixel Horn."}, {"step": 7, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FF9/KJST/JSEZ2T2Q/FF9KJSTJSEZ2T2Q.LARGE.jpg"], "step_title": "Step 7: Install a Link 50 to the Dynamixel (ID 3) by 4 Bolts (WB_M2X03) While Paying Attention the Align Marking Position on the Dynamixel Horn."}, {"step": 8, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FPJ/86OK/JSEZ2T5J/FPJ86OKJSEZ2T5J.LARGE.jpg"], "step_title": "Step 8: Install a Holder B to the Rotation Base Part by 4 Bolts (WB_M2.5X06), and Two Parts That Assembled in Step 6 and 7 to the Rotation Base Part by 8 Bolts (WB_M2.5X04)."}, {"step": 9, "steps_text": "Once the shaft collars positioned, tighten its bolts.", "step_imgs": ["https://cdn.instructables.com/FSB/3L2P/JSEZ2T6U/FSB3L2PJSEZ2T6U.LARGE.jpg"], "step_title": "Step 9: While Paying Attention the Sorted Order and the Shaft Collars Directions, Assemble a Rotation Axis for a Holder a and a Link 200 B With a Shaft (NSFMR6-38), Shaft Collars (PSCBRJ6-9), Bearings and Spacers (MSRB6-1.0)."}, {"step": 10, "steps_text": "Once the shaft collars positioned, tighten its bolts.", "step_imgs": ["https://cdn.instructables.com/F21/RLPO/JSEZ2T8O/F21RLPOJSEZ2T8O.LARGE.jpg"], "step_title": "Step 10: Complete the Rotation Axis Assembled in Step 9 With the Holder B and Additional Axis Parts (a Shaft Collar (PSCBRJ6-9), a Bearing and Spacers (MSRB6-1.0)), and Install the Holder a to the Dynamixel (ID 1) by Two Bolts (WB_M2.5X20)."}, {"step": 11, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FD6/SO3D/JSEZ2TAD/FD6SO3DJSEZ2TAD.LARGE.jpg"], "step_title": "Step 11: Assemble Next Rotation Axis With the Link 50, New Link 200 B and Axis Parts (a Shaft (NSFMR6-24), Shaft Collars (PSCBRJ6-9), Bearings and Spacers (MSRB6-1.0)) While Paying Attention the Sorted Order and the Shaft Collars Directions."}, {"step": 12, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/F4V/6QRC/JSEZ2TC7/F4V6QRCJSEZ2TC7.LARGE.jpg"], "step_title": "Step 12: Assemble a Rotation Axis With the Link 200 B Installed in Step 10 and a Triangle Link and Axis Parts (a Shaft (NSFMR6-24), Shaft Collars (PSCBRJ6-9), Bearings and Spacers (MSRB6-1.0))."}, {"step": 13, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FNF/99K1/JSEZ2TDM/FNF99K1JSEZ2TDM.LARGE.jpg"], "step_title": "Step 13: Assemble a Link 250 With a Link 200 for 250 and a Link 50 for 250 by Four Bolts (WB_M2X06) and Nuts (NUT_M2)."}, {"step": 14, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FLY/5REA/JSEZ2TF4/FLY5REAJSEZ2TF4.LARGE.jpg"], "step_title": "Step 14: Assemble a Rotation Axis With the Link 200 B Installed in Step 11 and the Link 250 and Axis Parts While Paying Attention the Sorted Order and the Shaft Collars Directions."}, {"step": 15, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FFC/JUIH/JSEZ2TGX/FFCJUIHJSEZ2TGX.LARGE.jpg"], "step_title": "Step 15: Assemble a Rotation Axis With the Link 250, New Link 200 B, the Triangle Link, the Link 200 a and Axis Parts While Paying Attention the Sorted Order and the Shaft Collars Directions."}, {"step": 16, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FU5/GT45/JSEZ2TJ1/FU5GT45JSEZ2TJ1.LARGE.jpg"], "step_title": "Step 16: Assemble Link 200 B at Triangle Link Assemble Next Rotation Axis With the Triangle Link and New Link 200 B."}, {"step": 17, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FDR/AIKA/JSEZ2TL2/FDRAIKAJSEZ2TL2.LARGE.jpg"], "step_title": "Step 17: Install a Tool Link by Assemble a Rotation Axis With the Link 200 B Installed in Step 16 and the Tool Link, and Assemble Another Rotation Axis With the Link 250, the Link 200 B Installed in Step 15 and the Tool Link."}, {"step": 18, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FKR/GE1L/JSEZ2TNM/FKRGE1LJSEZ2TNM.LARGE.jpg"], "step_title": "Step 18: Connect the Cable (Cable_3P_240MM) of the OpenManipulator Link, a Power (SMPS 12V5A) and a Usb Cable to the OpenCR, and Connect the Usb Cable to Your PC."}, {"step": 19, "steps_text": "Follow the Vacuum gripper set up using OpenCR guide page.", "step_imgs": [], "step_title": "Step 19: Set Up the Vacuum Gripper"}, {"step": 20, "steps_text": "upload the source code to OpenCR and run it, refer to the Robotis OpenManipulator e-manual page.", "step_imgs": [], "step_title": "Step 20: Set Up the OpenManipulator Link Software to the OpenCR and Run It."}], "channel": "Robots"}, {"category": "Technology", "description": "This instructables show how to add a rechargeable Moon station light source to make a portable Progressive Detail Moon Lamp.", "title": "Moon Station Powered Moon Lamp", "url": "https://www.instructables.com/id/Moon-Station-Powered-Moon-Lamp/", "steps": [{"step": 1, "steps_text": "A portable Moon Lamp require a light source; And the light source require a power switch and recharge plug socket.\nThe switch and socket make the Moon surface not perfect. How about make it look like a Moon station? It can explain why part of the Moon become unnatural :P", "step_imgs": ["https://cdn.instructables.com/FYF/3AB7/JSCG3BNT/FYF3AB7JSCG3BNT.LARGE.jpg"], "step_title": "Step 1: Why Moon Station?"}, {"step": 2, "steps_text": "Download and unpack the STL file from thingiverse:\nhttps://www.thingiverse.com/thing:3444020\n3D print the model with white filament. I am print it with 0.1 mm layer height, no support required.", "step_imgs": ["https://cdn.instructables.com/F3B/UTVQ/JSCG3BO7/F3BUTVQJSCG3BO7.LARGE.jpg", "https://cdn.instructables.com/FXL/WN25/JSCG3BOC/FXLWN25JSCG3BOC.LARGE.jpg", "https://cdn.instructables.com/FTB/6GZ4/JSCG3BP5/FTB6GZ4JSCG3BP5.LARGE.jpg"], "step_title": "Step 2: 3D Printing"}, {"step": 3, "steps_text": "The interior of the Moon station is 28 mm in diameter and reserved a micro USB port window.\nThis time, I am using a tiny LED drive board with charging circuit. It originally designed for 18650 LED flashlight, you can use any similar light source in hand.", "step_imgs": ["https://cdn.instructables.com/FB7/A5K3/JSCG3BO0/FB7A5K3JSCG3BO0.LARGE.jpg", "https://cdn.instructables.com/FY1/KWX2/JSCG3BO1/FY1KWX2JSCG3BO1.LARGE.jpg", "https://cdn.instructables.com/FZZ/IVY9/JSCG3BO6/FZZIVY9JSCG3BO6.LARGE.jpg", "https://cdn.instructables.com/FTE/84QH/JSCG3BP7/FTE84QHJSCG3BP7.LARGE.jpg"], "step_title": "Step 3: Light Source"}, {"step": 4, "steps_text": "Connect power switch, LED drive board, Lipo battery and LED altogether.", "step_imgs": ["https://cdn.instructables.com/FY4/ENCV/JSCG3BP8/FY4ENCVJSCG3BP8.LARGE.jpg", "https://cdn.instructables.com/FQE/SSC7/JSCG3BPH/FQESSC7JSCG3BPH.LARGE.jpg"], "step_title": "Step 4: Soldering Work"}, {"step": 5, "steps_text": "Since soldered circuit not in perfect shape, simply use hot glue fix it into the Moon station. I recommend fix the switch first then align the LED drive board to the USB port window.", "step_imgs": ["https://cdn.instructables.com/FMN/QR2C/JSCG3BPO/FMNQR2CJSCG3BPO.LARGE.jpg", "https://cdn.instructables.com/FYL/EMMT/JSCG3BPR/FYLEMMTJSCG3BPR.LARGE.jpg", "https://cdn.instructables.com/FS3/5JB1/JSCG3BPU/FS35JB1JSCG3BPU.LARGE.jpg", "https://cdn.instructables.com/F9F/XQBE/JSCG3BQ3/F9FXQBEJSCG3BQ3.LARGE.jpg"], "step_title": "Step 5: Hot Glue Work"}, {"step": 6, "steps_text": "Use a coin screw the Moon station into the Moon.", "step_imgs": ["https://cdn.instructables.com/F60/SB8B/JSCG3BQL/F60SB8BJSCG3BQL.LARGE.jpg"], "step_title": "Step 6: Install Moon Station"}, {"step": 7, "steps_text": "The USB port window designed at the side but not the bottom, so that you can screw up the Moon station a little bit and plug the USB power for charging. At the same time, you can treat it as a decent decoration on your desk.", "step_imgs": ["https://cdn.instructables.com/F2Q/6KKD/JSCG3BQW/F2Q6KKDJSCG3BQW.LARGE.jpg", "https://cdn.instructables.com/FTQ/H08A/JSCG3BQR/FTQH08AJSCG3BQR.LARGE.jpg"], "step_title": "Step 7: Charging"}, {"step": 8, "steps_text": "It's time to show what you have done with friends at night!", "step_imgs": ["https://cdn.instructables.com/FFZ/YH2V/JSCG3C8O/FFZYH2VJSCG3C8O.LARGE.jpg"], "step_title": "Step 8: Happy Night!"}], "channel": "3D Printing"}, {"category": "Technology", "description": "From time to time, I log online to window shop. We all have expensive guilty pleasures, right? I share things that catch my eye (#DailyTemptations)with you via my social channels. I also press the \u201corder now\u201d way too many times and end up split between 5 different projects at the same time! One of the recent items I bought was seriously too good not to! I\u2019m speaking about the RaspberryPI Zero to USB board. I know, I\u2019m not solving any problems, as it\u2019s essentially a glorified USB-microUSB cable, but just look at the end effect. If you are going to prototype and program on the go, do it like a BOSS!", "title": "USBerry PI - USB Rasberry Pi Zero(W)", "url": "https://www.instructables.com/id/USBerry-PI-USB-Rasberry-Pi-ZeroW/", "steps": [{"step": 1, "steps_text": "There are 2 benefits of actually using the USB kit . You will be able to SSH over USB and you will free the USB port. Plus if you going to add an external enclosure, it will look incredibly awesome! My 3D design is modular, so you can add your own decals.\nThe USB kit is simple, I was able to solder it to the RaspberryPi Zero in about 10 min. You could stop here, however, I wanted to make a project out of it. I have a couple of big CAD projects coming up in the future, so having something to practice on is perfect.", "step_imgs": ["https://cdn.instructables.com/FKZ/K735/JSCG5D1P/FKZK735JSCG5D1P.LARGE.jpg"], "step_title": "Step 1: USBerry Pi"}, {"step": 2, "steps_text": "The pictured case is actually pretty cool. The bottom part uses a temperature-sensitive filament, which will change the colour as the RaspberryPi gets hot. There is a vent for a tiny radiator, but honestly, I have done this mostly for decorative purposes. I have added a button which stops the SoC by pulling RUN pin low. Lastly, I had poked a hole through in case you want to add the RaspberryPi camera module.\nThe final design has been 3d-printed, and laser cut. I understand that not all of you have access to both devices, so I made the design that works with the 3d-printing alone. The 3d-printed lid isn\u2019t as pretty, as I got impatient, and used a hairdryer to dry my paint. Sadly the filament shrunk a little (don\u2019t make my mistake).\nThe decal is a separate design, so your case doesn\u2019t have to sport my NotEnoughTech logo. You can add your own.", "step_imgs": ["https://cdn.instructables.com/FPZ/SOOF/JSCG5D1O/FPZSOOFJSCG5D1O.LARGE.jpg"], "step_title": "Step 2: Enclosure"}, {"step": 3, "steps_text": "The case has standouts that accommodate the USB add-on. It was pretty cool to try the temp sensitive filament, it will turn yellow the warmer it gets \u2013 the yellow colour appears when the temperature reaches about 20\u00b0C. It will be cool (that pun) to see the enclosure glow over time! You can watch the cooldown timelapse here.", "step_imgs": ["https://cdn.instructables.com/F7C/4DE0/JSCG5CYA/F7C4DE0JSCG5CYA.LARGE.jpg"], "step_title": "Step 3: Bottom Case"}, {"step": 4, "steps_text": "If you going to go for an acrylic glass finish, you will need to print out the lip. I had no thinner acrylic at hand than 3mm, so I skipped the lip. My goal was to have the 40-pin header flushed with the surface. Ideally, you want 1-2mm acrylic and the 3d printed lip.\nThe lip The lid If you don\u2019t have access to a laser cutter, fear not! The design works with 3d printers. I\u2019d encourage SLA print for the lid, especially if you go for the hex vent holes as well. The lid will consist of a single body to print out.", "step_imgs": ["https://cdn.instructables.com/FAJ/8OUB/JSCG5D57/FAJ8OUBJSCG5D57.LARGE.jpg", "https://cdn.instructables.com/FVA/6O89/JSCG5CZE/FVA6O89JSCG5CZE.LARGE.jpg", "https://cdn.instructables.com/FKV/AGQA/JSCG5D1M/FKVAGQAJSCG5D1M.LARGE.jpg"], "step_title": "Step 4: Lid \u2013 3D Print Vs Lasers"}, {"step": 5, "steps_text": "It\u2019s my project, so adding my \u201ccog\u201d was an obvious option. Adding something to break the surface was a great idea, and even if you are not going to use my design, consider adding an extra thing. I\u2019ve created USBerry Pi logo \u2013 feel free to use it!\nThe logo can be omitted or printed separately so the choice is in your hands.", "step_imgs": ["https://cdn.instructables.com/FRK/AP1I/JSCG5D0I/FRKAP1IJSCG5D0I.LARGE.jpg", "https://cdn.instructables.com/FDR/45DA/JSCG5CW1/FDR45DAJSCG5CW1.LARGE.jpg", "https://cdn.instructables.com/FM2/1Z22/JSCG5CTT/FM21Z22JSCG5CTT.LARGE.jpg"], "step_title": "Step 5: Logo"}, {"step": 6, "steps_text": "Before I can put the USBerry Pi back together, I need to solder in 40 pin header for connectivity and add a reset button. Take your time with the header as you really want it to be straight up. You can tap outside pins first (or bend it gently, to keep the header in position for soldering) then I made the solder joints, inspecting it as I go.\nThe reset is achieved by shorting RUN pin to GND. The pin is pulled high by default. I don\u2019t want any wires, so I opted out for long pins that will simply touch the button\u2019s prongs. I made the case with that in mind. A very elegant solution. Just make sure there is enough tension between pins it would touch each other once the enclosure is closed.", "step_imgs": ["https://cdn.instructables.com/F8P/SWN4/JSCG5CUX/F8PSWN4JSCG5CUX.LARGE.jpg", "https://cdn.instructables.com/FWR/9042/JSCG5D3X/FWR9042JSCG5D3X.LARGE.jpg", "https://cdn.instructables.com/F3V/INFW/JSCG5D3Z/F3VINFWJSCG5D3Z.LARGE.jpg", "https://cdn.instructables.com/FBT/BN1J/JSCG5D40/FBTBN1JJSCG5D40.LARGE.jpg"], "step_title": "Step 6: Reset, Heatsink, Headers"}, {"step": 7, "steps_text": "I love it! I\u2019m pretty sure next time I\u2019m doing some coding on the go I get someone asking me what is it! People always approach me in coffee shops when they see a bunch of wires sticking out from my laptop, connecting to some strange electronics. I appreciate them doing so instead of calling the emergency services first. I\u2019m smart enough not to code timers and displays in the public places no matter how innocent is my agenda.\nIn addition, if you want to get informed about the updates to this or other projects - consider following me on the platform of your choice:\nFacebook\nTwitter\nInstagram\nYouTube\nAnd if you feeling like buying me a coffee or supporting me in a more continuous way:\nPayPal\nPatreon\nhope you have enjoyed the project!", "step_imgs": ["https://cdn.instructables.com/FIP/737T/JSCG5CX5/FIP737TJSCG5CX5.LARGE.jpg", "https://cdn.instructables.com/F66/VTT0/JSCG5D1N/F66VTT0JSCG5D1N.LARGE.jpg"], "step_title": "Step 7: Conclusion"}], "channel": "Raspberry Pi"}, {"category": "Technology", "description": "Dark Sky specializes in weather forecasting and visualization. The coolest aspect of Dark Sky is their weather API that we can use to retrieve the weather data from almost anywhere in the world. It's not just weather is rainy or sunny but temperature, dew point, wind gust, humidity, precipitation, pressure, UV index, and more, all easily available for wherever you want, whenever you want.\nLet's learn how to use Dark Sky's super-simple API. If you are new to using API's I promise you this is going to be really easy! And if you've used API's before then I hope we can teach you something new with the code we've used.\nWhat you will need for this project:\nDark Sky API account\nInitial State account\nRaspberry Pi or Laptop", "title": "Build a Weather Dashboard Using Dark Sky API", "url": "https://www.instructables.com/id/Build-a-Weather-Dashboard-Using-Dark-Sky-API/", "steps": [{"step": 1, "steps_text": "We\u2019ve already put in a lot of the leg work for you putting the code together and organizing the information. We\u2019ll just need you to make a few adjustments along the way. If you want a bit of a challenge make some changes to our code and what weather data is sent, there is limitless possibilities!\nTo retrieve all of the things we\u2019ve prepared for you, you\u2019ll need to clone the repository from GitHub. GitHub is a service that allows us to store, revise, and manage projects like this. You will want to run this script on a dedicated device. A Raspberry Pi is a perfect option to run applications like this tutorial.\nTo clone the repository all we need to do is go into our Pi\u2019s terminal, or your computers terminal that is SSH\u2019d into your pi and type this command:\n$ git clone https://github.com/InitialState/darksky.git   \nHit enter and you\u2019ll see this information:\nCloning into 'darksky'...\nremote: Counting objects: 2, done.\nremote: Total 2 (delta 0), reused 0 (delta 0), pack-reused 2\nUnpacking objects: 100% (2/2), done.\nChecking connectivity... done. \nOnce you see this then congrats, you\u2019ve successfully cloned the GitHub Repo and have all of the necessary files to build this project. Before we move on to the next step, let\u2019s take some time to explore around this directory and learn a few basic command line commands.\nType in the command below into your terminal:\n $ ls \nThis command lists everything that\u2019s available in the directory that you\u2019re currently in. This list shows that our GitHub Repo has been successfully cloned into our directory under the name \u201cdarksky.\u201d Let\u2019s take a look at what\u2019s in that directory. To move to a directory, all you need to do is type \u201ccd\u201d and then type the name of the directory that you wish to go to.\nIn this case, we\u2019ll type:\n $ cd darksky \nOnce we hit enter, you\u2019ll see that we\u2019re now in the darksky directory. Let\u2019s type \"ls\" again to see what files we\u2019ve installed on our pi.\n README.md  darksky.py ... \nHere we see the we\u2019ve got our readme document and python files. Let\u2019s take a look at darksky.py using the \"nano\" command. The nano command allows us to open up the nano text editor where we have all of our python code for each segment of this project. Go ahead and type:\n$ nano darksky.py \nHere you can see all of the code we\u2019ve prepared for you for this project. We\u2019re not going to make any changes to this document just yet, but feel free to scroll around and see what we\u2019re going to be doing later in this tutorial.", "step_imgs": [], "step_title": "Step 1: Getting Started"}, {"step": 2, "steps_text": "In order to use the Dark Sky API, you first need your own API key. Don't worry, getting an API key is quick and free. All you need to do is go to the website and click \"Try for Free\" to create an account.\nYou get 1,000 API calls for free each day. Every API request over the free daily limit costs $0.0001.\nThis limit automatically resets each day at midnight UTC.\nThe Forecast Request returns the current weather forecast for the next week.\nThe Time Machine Request returns the observed or forecast weather conditions for a date in the past or future.\nYour secret Dark Sky API key will look something like this: 0123456789abcdef9876543210fedcba.\nYou can make an API call to Dark Sky by typing in a URL into your browser in the following format:\nhttps://api.darksky.net/forecast/[key]/[latitude],[longitude]\nReplace \"key\" with your Dark Sky API key and longitude/latitude with whatever you want. You can find your longitude and latitude by going to Google Maps and searching your location. Those values will be in the URL. Copy and paste the above dark sky URL with your access key and values added into an address bar.\nOnce you do that you will see something like this:\n{\"latitude\":37.8267,\"longitude\":-122.4233,\"timezone\":\"America/Los_Angeles\",\"currently\":{\"time\":1550615286,\"summary\":\"Clear\",\"icon\":\"clear-\nday\",\"nearestStormDistance\":57,\"nearestStormBearing\":15,\"precipIntensity\":0,\"precipProbability\":0,\"temperature\":53.9,\"apparentTemperature\":53.9,\n\"dewPoint\":29.59,\"humidity\":0.39,\"pressure\":1022.45,\"windSpeed\":3.87,\"windGust\":9.25,\"windBearing\":259,\"cloudCover\":0.01,\"uvIndex\":3,\n\"visibility\":7.8,\"ozone\":309.71},\"minutely\":{\"summary\":\"Clear for the hour.\",\"icon\":\"clear-day\",\"data\":[\n{\"time\":1550615280,\"precipIntensity\":0,\"precipProbability\":0},...\nIt can be a little overwhelming and hard to read so what I recommend doing is using a JSON Formatter to help make the data more readable. When you do this it will look something like this:\nobject {9}\n latitude: 37.8267\n longitude: -122.4233\n timezone: America/Los_Angeles\ncurrently {19}\n time: 1550615286\n summary: Clear\n icon: clear-day\n nearestStormDistance: 57\n nearestStormBearing: 15\n precipIntensity: 0\n precipProbability: 0\n temperature: 53.9\n apparentTemperature: 53.9\n dewPoint: 29.59\n humidity: 0.39\n pressure: 1022.45\n windSpeed: 3.87\n windGust: 9.25\n windBearing: 259\n cloudCover: 0.01\n uvIndex: 3\n visibility: 7.8\n ozone: 309.71\nYou've just made an API call! See how easy that was? You didn't even have to write a single line of code. Now that you've mastered API's we can move on to the data streaming portion.", "step_imgs": ["https://cdn.instructables.com/F5T/LE7B/JSC1ZGK1/F5TLE7BJSC1ZGK1.LARGE.jpg"], "step_title": "Step 2: Using the Dark Sky API"}, {"step": 3, "steps_text": "We want to stream all of our weather data to a cloud service and have that service turn our data into a nice dashboard that we can access from our laptop or mobile device. Our data needs a destination. We will use Initial State as that destination.\nStep 1: Register for Initial State Account\nGo to https://iot.app.initialstate.com and create a new account. You get a 14 day free trial and anyone with an edu email address can register for a free student plan.\nStep 2: Install the ISStreamer\nInstall the Initial State Python module onto your Raspberry Pi. In the command prompt, run the following command:\n$ cd /home/pi/\n$ \\curl -sSL https://get.initialstate.com/python -o - | sudo bash\nStep 3: Make some Automagic\nAfter Step 2 you will see something similar to the following output to the screen:\npi@raspberrypi ~ $ \\curl -sSL https://get.initialstate.com/python -o - | sudo bash\nPassword:\nBeginning ISStreamer Python Easy Installation!\nThis may take a couple minutes to install, grab some coffee :)\nBut don't forget to come back, I'll have questions later!\n\nFound easy_install: setuptools 1.1.6\nFound pip: pip 1.5.6 from /Library/Python/2.7/site-packages/pip-1.5.6- py2.7.egg (python 2.7)\npip major version: 1\npip minor version: 5\nISStreamer found, updating...\nRequirement already up-to-date: ISStreamer in /Library/Python/2.7/site-packages\nCleaning up...\n\nDo you want automagically get an example script? [y/N]\nWhere do you want to save the example? [default: ./is_example.py]\n\nPlease select which Initial State app you're using:\n1. app.initialstate.com\n2. [NEW!] iot.app.initialstate.com\nEnter choice 1 or 2:\nEnter iot.app.initialstate.com user name:\nEnter iot.app.initialstate.com password:\nWhen asked if you want to automagically get an example script put \"y\" for yes and press enter to save your script in the default location. For the question about which app you are using, select 2 (unless you signed up before November 2018) and enter your username and password.\nStep 4: Run the Example Script\nRun the test script to make sure we can create a data stream to your Initial State account. Write the following command:\n$ python is_example.py \nStep 6: Example Data\nGo back to your Initial State account in your web browser. A new data bucket called \u201cPython Stream Example\u201d should have shown up on the left in your log shelf (you may have to refresh the page). Click on this bucket to view your data.", "step_imgs": ["https://cdn.instructables.com/FQ4/YLQS/JSCG32LA/FQ4YLQSJSCG32LA.LARGE.jpg"], "step_title": "Step 3: Initial State"}, {"step": 4, "steps_text": "Now for the fun part. We are ready to start using the Dark Sky API to create a weather dashboard and capture the weather history for the location we choose. To do this, we are going to use the Python script: https://github.com/initialstate/darksky/blob/master/darksky.py. This script simply calls the Dark Sky API using your API key and retrieves the weather information on a specified time interval. It also streams that data to your Initial State account, which will allow you to create a Dark Sky weather dashboard.\nYou can either copy this script to your Pi, or access it through the GitHub repository that we cloned earlier. You can do this by changing into your darksky directory by typing:\n$ cd darksky \nFrom here, you'll be able to access the python file that we'll run to create our weather dashboard. Before you run it, you need to set your desired parameters and insert your keys. Nano into the darksky.py file by typing:\n$ nano darksky.py \nThen edit the section near the top of the script:\n# --------- User Settings ---------\nCITY = \"Nashville\"\nGPS_COORDS = \"36.1628414,-86.780199\"\nDARKSKY_API_KEY = \"PLACE YOUR DARK SKY API KEY HERE\"\nBUCKET_NAME = \":partly_sunny: \" + CITY + \" Weather\"\nBUCKET_KEY = \"ds1\"\nACCESS_KEY = \"PLACE YOUR INITIAL STATE ACCESS KEY HERE\"\nMINUTES_BETWEEN_READS = 15\n# --------------------------------- \nYou need to set the desired GPS coordinates and city name. You also have to insert your Dark Sky API key and your Initial State account access key or your data isn't going to go anywhere. The MINUTES_BETWEEN_READS parameter will set how often your script will poll the Dark Sky API for weather information. 15 minutes provides a nice interval long-term. For the sake of short-term testing, you can set this to 0.5 minutes. Make your changes then enter control+X to exit and save.\nOnce you have your parameters set, you are ready to run your script:\n$ python darksky.py \nIf you are ssh'ing into your Pi and want to leave this script running uninterrupted for a long time, you can use the nohup command (no hang-up) as follows:\n$ nohup python darksky.py & \nThis script is going to do a bit more than just read the weather data and send it to Initial State. This script is going to take advantage of the emoji support built into Initial State's tools to make the dashboard a bit more cool. You can see the logic used to take the weather status from the currently -> icon and convert it to an emoji token in the weather_icon function. Something similar happens for the moon phase in the moon_icon function and wind direction in the wind_dir_icon function.", "step_imgs": ["https://cdn.instructables.com/FA1/XOAQ/JSC1ZG75/FA1XOAQJSC1ZG75.LARGE.jpg"], "step_title": "Step 4: Dark Sky Weather Dashboard"}, {"step": 5, "steps_text": "Go to your Initial State account and look at your data. I changed all my percentage values to arc gauges, the precipitation to a liquid gauge, and the temperature to a temperature gauge. You can change to any kind of Tile types and choose your colors for the gauges & line charts. You can make your dashboard dark or light and embed the final product into a website using an embed iFrame.\nIf you want to use the dashboard layout from a public share as your dashboard, you can import a layout into your data bucket by following the instructions at here.\nThe public share URL for our dashboard is https://go.init.st/0hw08py.\nNow you've master the Dark Sky API the possibilities are endless! There is an unlimited amount of free API's online to explore so get started.", "step_imgs": ["https://cdn.instructables.com/FLM/ULN1/JSCG339X/FLMULN1JSCG339X.LARGE.jpg"], "step_title": "Step 5: Conclusion"}], "channel": "Raspberry Pi"}, {"category": "Technology", "description": "This project is a small, battery-powered LED ring that fits perfectly inside of your Rav Vast drum. It uses color-changing RGB LEDs and a microphone that allows you to change the color or pattern with changes in volume.\nYou don't need any special skills for the construction (though you may pick some up along the way)", "title": "Rav Vast LED Drum Light", "url": "https://www.instructables.com/id/Rav-Vast-LED-Drum-Light/", "steps": [{"step": 1, "steps_text": "Ingredients:\nArduino Gemma v2\n16 LED NeoPixel Ring\n3.7v 500mAh li-poly battery\nLi-poly battery charger\nMicrophone amplifier (optional if you don't care about being sound-reactive)\nTotal cost: $40.75 + tax + shipping (as of this writing)\nTools:\nSoldering Iron and solder\nWire strippers\n#22 gauge solid core wire\nComputer capable of running the Arduino IDE\nBreadboard, alligator clips, and jumper cables (optional. Used for testing)\nReusable adhesive (I used Blu Tack)", "step_imgs": [], "step_title": "Step 1: Tools and Materials"}, {"step": 2, "steps_text": "For this project you will need to program the Gemma microcontroller. We are going to do that with the Arduino IDE, so go ahead and download it here: https://www.arduino.cc/en/main/software\nOnce it has been downloaded, we're going to need to add support for the Gemma board. Adafruit has an excellent guide for this here: https://learn.adafruit.com/add-boards-arduino-v164/setup\nLastly, you will need to install the Adafruit_NeoPixel library. The guide for that is here: https://learn.adafruit.com/adafruit-neopixel-uberguide/arduino-library-installation\nIf you are on Windows, you may also need to install the drivers for the programmers: https://learn.adafruit.com/usbtinyisp/drivers", "step_imgs": ["https://cdn.instructables.com/FYO/KQX5/JS8TGZTR/FYOKQX5JS8TGZTR.LARGE.jpg"], "step_title": "Step 2: Set Up the Arduino IDE"}, {"step": 3, "steps_text": "Plug the Gemma into your computer with a micro USB cable.\nAttach alligator clips to the Gemma and the Neopixel ring. We want the following connections:\n[Gemma] Vout -> [ring] POWER 5V DC\n[Gemma] GND -> [ring] SIGNAL GROUND\n[Gemma] D0 -> [ring] DATA INPUT\nNow we need to program your Gemma. Open the Arduino IDE. First we need to configure the Arduino IDE to use the correct settings.\nGo to the menu \"Tools -> Board\" and make sure that \"Adafruit Gemma\" is selected.\nGo to the menu \"Tools -> Programmer\" and make sure that \"USBtinyISP\" is selected.\nNow download this file and open it in the Arduino IDE (or copy/paste it into your sketch): https://raw.githubusercontent.com/stevearc/ravlight/master/ravlight.ino\nThere is a button on the Gemma next to the power light. When you press it, it enters \"programming mode\" and the orange light will begin to flash. To upload your code, press the button and while the orange light is flashing, go to \"Sketch -> Upload\" (Ctrl+U) in the Arduino IDE.\nAfter you upload your code, the LED ring should light up and the colors should circle around! If they do not, check the connections with the alligator clips. Sometimes they can be finicky.", "step_imgs": ["https://cdn.instructables.com/F64/LSGL/JS8TFL5X/F64LSGLJS8TFL5X.LARGE.jpg", "https://cdn.instructables.com/FFS/XXY1/JS8TFL61/FFSXXY1JS8TFL61.LARGE.jpg", "https://cdn.instructables.com/FZI/QFEU/JS8TG8U8/FZIQFEUJS8TG8U8.ANIMATED.LARGE.gif"], "step_title": "Step 3: Test the LED Ring"}, {"step": 4, "steps_text": "Now that you have confirmed that the LED ring works, solder wires to the ring in place of the alligator clips. Make sure you have more wire than you think you need, so you can trim it down to size later.\nIf you have never soldered before, try watching some instructional videos first. This was my first time soldering as well, and YouTube proved to be a great resource.", "step_imgs": ["https://cdn.instructables.com/FQV/QJSK/JS8TFL6S/FQVQJSKJS8TFL6S.LARGE.jpg", "https://cdn.instructables.com/FXV/V7K1/JS8TFL6Z/FXVV7K1JS8TFL6Z.LARGE.jpg"], "step_title": "Step 4: Solder Wires to the LED Ring"}, {"step": 5, "steps_text": "Now we're going to need to wire up the microphone. I found that the alligator clips were too large to get a good connection, so I skipped straight to the soldering. Again, make sure you leave a little extra length on the wires so you can trim them to size later.", "step_imgs": ["https://cdn.instructables.com/FQD/8QYC/JS8TFL67/FQD8QYCJS8TFL67.LARGE.jpg", "https://cdn.instructables.com/FOD/N6JW/JS8TFL6B/FODN6JWJS8TFL6B.LARGE.jpg", "https://cdn.instructables.com/FR5/SCIX/JS8TFL6I/FR5SCIXJS8TFL6I.LARGE.jpg"], "step_title": "Step 5: Solder Wires to the Microphone"}, {"step": 6, "steps_text": "Attach two more alligator clips to the Gemma: one on the A1 (analog input) pad, and one on the 3V (3 volt output) pad.\nAttach all alligator clips to jumper cables, and plug those jumper cables into a breadboard. Now plug your LED ring and microphone into the breadboard. If you want to learn more about how the breadboard works, I recommend skimming https://www.instructables.com/id/Breadboards-for-...\nThe only concepts you need to know for this are:\nThe two columns of holes on either side of the breadboard are connected vertically\nThe rows of holes towards the center of the breadboard are connected horizontally\nYou want these connections:\n[Gemma] Vout -> [ring] POWER 5V DC\n[Gemma] GND -> [ring] SIGNAL GROUND\n[Gemma] D0 -> [ring] DATA INPUT\n[Gemma] 3Vo -> [mic] VCC\n[Gemma] GND -> [mic] GND\n[Gemma] A1 -> [mic] OUT\nThe wiring shown is quite messy, but we're just using this to test the circuit.\nAfter everything is wired together, try changing the mode in the code:\n#define MODE 3\nReprogram the Gemma (by pressing the button on the board and Ctrl+U in the Arduino IDE). You should now see the lights react to sound!", "step_imgs": ["https://cdn.instructables.com/FBC/OZRZ/JS8TFL73/FBCOZRZJS8TFL73.LARGE.jpg", "https://cdn.instructables.com/FYO/M5O1/JS8TFLAO/FYOM5O1JS8TFLAO.LARGE.jpg", "https://cdn.instructables.com/FKJ/YDV7/JS8TFLBG/FKJYDV7JS8TFLBG.LARGE.jpg", "https://cdn.instructables.com/F92/G6PN/JS8TFLBN/F92G6PNJS8TFLBN.LARGE.jpg"], "step_title": "Step 6: Test the Whole Circuit"}, {"step": 7, "steps_text": "Trim the wires of the LED ring and microphone down. Position the Gemma in the center of the ring and bend the wires into the proper place. Remember that you want:\n[Gemma] Vout -> [ring] POWER 5V DC\n[Gemma] GND -> [ring] SIGNAL GROUND\n[Gemma] D0 -> [ring] DATA INPUT\nOnce the wires are the appropriate length and positioned correctly, proceed to the next step.", "step_imgs": ["https://cdn.instructables.com/FTD/RC4H/JS8TG8C7/FTDRC4HJS8TG8C7.LARGE.jpg", "https://cdn.instructables.com/FI7/DWSP/JS8TG8AW/FI7DWSPJS8TG8AW.LARGE.jpg"], "step_title": "Step 7: Prepare to Solder the Board"}, {"step": 8, "steps_text": "For this step we only want to solder the D0 and Vout pads. Remember that the ring and the microphone share the GND pad, so we will have to wait until the microphone is in-place to solder it. By soldering the other two first, it helps to hold the ring in position for when you attach the microphone.", "step_imgs": ["https://cdn.instructables.com/FEC/L7LN/JS8TG89L/FECL7LNJS8TG89L.LARGE.jpg", "https://cdn.instructables.com/FS1/27D4/JS8TG88A/FS127D4JS8TG88A.LARGE.jpg"], "step_title": "Step 8: Solder the Ring to the Board"}, {"step": 9, "steps_text": "Put the microphone in place on top of the board and solder all of the connections. Remember that we want to connect:\n[Gemma] 3Vo -> [mic] VCC\n[Gemma] GND -> [mic] GND\n[Gemma] A1 -> [mic] OUT\nYou can tell that even though I am garbage at soldering, it's easy to end up with something functional. The Gemma is very forgiving.", "step_imgs": ["https://cdn.instructables.com/F5U/MDLJ/JS8TG85O/F5UMDLJJS8TG85O.LARGE.jpg", "https://cdn.instructables.com/F9G/6F8T/JS8TG85N/F9G6F8TJS8TG85N.LARGE.jpg"], "step_title": "Step 9: Solder the Microphone to the Board"}, {"step": 10, "steps_text": "Remove the wooden cap from the Rav, and apply some Blu Tack to the edges.\nApply a piece of Blu Tack to the top and bottom of the battery, then stick the battery to the bottom of the Gemma.\nStick the whole assembly to the wooden cap and insert into your Rav. You're done!\nThe Gemma has an on/off switch which is very convenient. I typically keep the device in my Rav all the time; the Blu Tack keeps it from knocking around on the inside. When you want to enable the lights, just remove the cap and flip the switch!", "step_imgs": ["https://cdn.instructables.com/FHA/5JC4/JS8TGLR9/FHA5JC4JS8TGLR9.LARGE.jpg", "https://cdn.instructables.com/FX8/CYYY/JS8TGLR8/FX8CYYYJS8TGLR8.LARGE.jpg", "https://cdn.instructables.com/FSV/VIRW/JS8TGLRA/FSVVIRWJS8TGLRA.LARGE.jpg"], "step_title": "Step 10: Final Assembly"}, {"step": 11, "steps_text": "Remember that you can change the MODE and reprogram the Gemma any time you like. There are some other values that you can configure if you look around the file (e.g. controlling how fast colors change, or making the lights strobe).", "step_imgs": ["https://cdn.instructables.com/FTF/XNER/JSAOUQLC/FTFXNERJSAOUQLC.LARGE.jpg"], "step_title": "Step 11: Enjoy Your Bright New Rav!"}], "channel": "Arduino"}, {"category": "Technology", "description": "Everlasting flower for your everlasting love. A perfect not-only Valentine's day gift to your loved one. This mechanical tulip will bloom into any color possible with just gentle touch of your hand. Its six petals will slowly open and light up. When petals are closed they create incredible ambient light with leaf patterns.", "title": "Ever Blooming Mechanical Tulip", "url": "https://www.instructables.com/id/Ever-Blooming-Mechanical-Tulip/", "steps": [{"step": 1, "steps_text": "But before I will tell you how to create this beauty, let's talk briefly about how it works. Tulip consists of 6 petals each with 5 SMD white LEDs. Each petal is connected with one of the Arduino output pins. Blossom hides 7 NeoPixel RGB LEDs. From an electrical point of view, the whole flower is ground and veins in petals are a positive voltage. Petals are opened by a pushrod which is going all the way down the stem to the base. The pushrod is controlled by a movement of a small hobby servo. Small leaf on the side of the stem is connected to TTP223 touch sensor inside the base and creates a capacitive touchpad. The wooden base contains a servo motor, touch IC and Arduino Nano. Let's build one yourself!\nWhat are you gonna need?\n1mm brass rod\n2mm brass tubing with 1, 2mm hole\n0.3mm copper wire with insulation\nSome wood for pedestal\nArduino Nano\nTTP223 touch sensor\nSmall servo\nWhat you need to know before you start\nHow to solder brass (great article)\nHow to build with Arduino\nHow to use servos\nHow to use LEDs and NeoPixels\nI am not telling you any dimensions of the components and exact shape of the blossom. I think every flower should be a unique one.", "step_imgs": ["https://cdn.instructables.com/FFG/B6CV/JSCG39LO/FFGB6CVJSCG39LO.LARGE.jpg", "https://cdn.instructables.com/FW0/6GR9/JSCG39MU/FW06GR9JSCG39MU.LARGE.jpg"], "step_title": "Step 1: How Does It Work?"}, {"step": 2, "steps_text": "Let's start with the most satisfying part first - petals of the blossom. Note that number in the brackets is a time required to do the step.\nThe first thing you need is a template for the blossom. I created mine from plaster poured into tube mold. When it dried I shaped it into a tulip blossom. You can 3D print it as well but I don't have a 3D printer. The plaster is great because it is easy to machine and a pencil can draw on it. Single petal is 1/4 of the surface of the template so at the end when there are gonna be 6 of them, they will slightly overlap each other creating exact look of a tulip blossom. I draw the petal shape on the surface of the plaster with a pencil. When I was satisfied with the petal shape I carved it into the plaster with a knife to help me hold rods in place while soldering.\nPetal consists of 1mm brass rod going all the way around the shape. Inside the petal are 5 SMD 1206 white LEDs and a \"vein\" structure from the very same wire. First, create the circumferential wire, take your time bending it. Cut a small piece of tubing and pass it on the bottom flat part of the wire - this will be the hinge petal will move around. Solder ends of the wire together, make sure you don't fill the tubing with solder. It needs to move freely. Finish the petal with LEDs and venous structure. Watch me making a single petal. Shame on me, this is the only footage I have from making the flower.\nNow make 5 more of these. All petals need to be exactly the same. It's really crucial. Otherwise, they would not resemble a nice even tulip shape at the end when closed and may even get stuck.", "step_imgs": ["https://cdn.instructables.com/FUC/YRXF/JSAOQVYP/FUCYRXFJSAOQVYP.LARGE.jpg", "https://cdn.instructables.com/FOE/4XJ3/JSAOQVG0/FOE4XJ3JSAOQVG0.LARGE.jpg", "https://cdn.instructables.com/FBD/FDUF/JSAOQVI3/FBDFDUFJSAOQVI3.LARGE.jpg", "https://cdn.instructables.com/F9D/8UE1/JSAOQVJM/F9D8UE1JSAOQVJM.LARGE.jpg", "https://cdn.instructables.com/FAT/E4ZR/JSAOQVI8/FATE4ZRJSAOQVI8.LARGE.jpg", "https://cdn.instructables.com/FGI/5UWX/JSAOQVL3/FGI5UWXJSAOQVL3.LARGE.jpg", "https://cdn.instructables.com/F1G/SSBK/JSAOQVN7/F1GSSBKJSAOQVN7.LARGE.jpg", "https://cdn.instructables.com/FL0/95ZT/JSAOQVP9/FL095ZTJSAOQVP9.LARGE.jpg"], "step_title": "Step 2: The Petals (4h)"}, {"step": 3, "steps_text": "So far so good? It's time to solder all the petals together. The base of the blossom is hexagonal - 6 petals. Petals are fixed to the hexagon via hinges. The hexagon, however, is slightly irregular. I failed with a regular one. Petals need to overlap each other and if the hexagon is regular they are not allowed to. Three petals are closer to the center (inner petals) and other 3 in slight offset (outer petals). For that, I created a template and printed it on a paper. The red shape is the final irregular hexagon made out of two nested regular hexagons. Solder all the hinges (tubings) to the hexagon. Rays coming out of the center of the template will help you to solder the petals in a correct position. The center of the petal needs to follow the ray line coming out of the center of the hexagon. At the end when you close the petals you will have the final shape of the blossom. Nice isn't it?", "step_imgs": ["https://cdn.instructables.com/FUO/WSWA/JSAOQVNP/FUOWSWAJSAOQVNP.LARGE.jpg", "https://cdn.instructables.com/FTG/8AU9/JSAOQVER/FTG8AU9JSAOQVER.LARGE.jpg", "https://cdn.instructables.com/FVH/WU02/JSAOQVNI/FVHWU02JSAOQVNI.LARGE.jpg", "https://cdn.instructables.com/F3T/DCE0/JSAOQVNB/F3TDCE0JSAOQVNB.LARGE.jpg"], "step_title": "Step 3: Blossom (1h)"}, {"step": 4, "steps_text": "This is not how I proceed in my making of the flower. I first finished the mechanism inside the blossom and then added a stem and pushrod to it. It added a lot of misery into the making. Once I almost wanted to trash it and never look back. Next time I will first start with the stem. So you should as well.\nMovement of the petals is created by a 1mm brass pushrod freely moving inside a brass tubing. Petals are connected to the pushrod through a really tiny hexagon with small 2mm long hinges on each side - pushrod head. Hexagon is sitting perpendicularly on the pushrod with a help of small bar running through the center of the hexagon. This is watchmaker's job.\nTo create the pushrod head I created the second template. First, bend the wire to form the tiny hexagon. Then cut small 2mm long tubings and pass them on the wire. Solder the wire to finish the hexagonal shape. Again make sure you do not solder the tubing to the wire. Continue by soldering wire into the center of the hexagon. And finish the rod by soldering a 1mm wire perpendicular to the center of the pushrod head. Hurray! You have your pushrod.\nBuild the stem. Cut brass tubing to the desired length. And now the second crucial part. The stem needs to be perfectly perpendicular to the hexagonal base of blossom, needs to be in the exact center of it and there needs to be enough room for the pushrod head to move down to close the petals. First, I soldered two wires to one end of the stem to create a V-shaped expansion. These will be the 2 out of 6 wires connecting stem to the vertices of hexagonal base.\nSo flip the blossom upside down and solder the V-shaped expansion to the 2 opposite vertices of the hexagonal base. Check the shape. If you put a rod inside the stem it needs to come out in the center of the blossom. Take your time here making it perfect. It's really a crucial part. When you are fine with it, solder 4 more wires between the rest of the hexagon's vertices and the top of the stem. Make sure not to solder the hole inside the tubing!", "step_imgs": ["https://cdn.instructables.com/FAS/YIZF/JSAOQVNJ/FASYIZFJSAOQVNJ.LARGE.jpg", "https://cdn.instructables.com/FMY/6QV9/JSAOQVYQ/FMY6QV9JSAOQVYQ.LARGE.jpg", "https://cdn.instructables.com/FNL/4EVI/JSAOQVQA/FNL4EVIJSAOQVQA.LARGE.jpg", "https://cdn.instructables.com/FGY/8IER/JSAOQVQU/FGY8IERJSAOQVQU.LARGE.jpg"], "step_title": "Step 4: Creating the Stem and Pushrod (1h)"}, {"step": 5, "steps_text": "This is the part you gonna regret you ever started making the flower in the first place. I almost throw it into the trash once. But hey, I am not the most patient guy ever. You are gonna nail it! For this part, I've got inspired by steam engines and their rods, pistons, and flywheels.\nMake yourself a test stand. Fix the flower with the stem in an upward position. Put the pushrod through the stem with its head upward. Solder short tubing perpendicular to the bottom end of the pushrod and create yourself a small connecting rod out of 1mm brass wire to connect servo and the pushrod (see the picture above). You should be able to move with pushrod up and down using a servo. Try it by hooking up your Arduino. Before you can start soldering the connecting rods between petals and pushrod head you need to tune up the servo movement with Arduino. Write your code to move pushrod up and down in a way when in the topmost position the pushrod head end is flush with blossom hexagonal base. And in the lowest position, it sits on the bottom of the blossom V-shaped base.\nTip: Use Adafruit_TiCoServo library to control the servo. It will allow you later to control NeoPixels at the same time as the servo.\nTip: To make your pushrod movement is as soft as possible, use the hole closest to the center of the servo arm. The servo will need to spin longer but with shorter steps.\nThis is an animation of how the pushrod moves with petals. As the pushrod moves up it pushes the connecting rod and petals down. As it moves down it drags connecting rods and petals are being closed.\nPetals are currently missing one crucial part - petal pin. This hinge makes the petals move. The hinge sits on a bar (see image above) which is soldered to each petal parallel to its base. Petal pin needs to be above the surface of the petal in order to allow it to fully open as you can see on the animation. Make yourself one such bar with a hinge from tubing and solder it to the first petal. This will need a lot of experimenting with the size of the bar and its distance from the petal base to allow the pushrod to fully open and close the petal. Use trial and error method. Solder the bar to a suitable position and add connecting rod between the pushrod pin and the petal pin. If you have your pushrod in the upper position and your petal in a fully opened position, space between pushrod pin and petal pin is the length of the connecting rod.\nNow try to move with pushrod up and down to see what is happening. If it works fine without any rubbing and petal can be closed and opened you are done (with the first petal)! If not, try a different length of connecting rod or different position of the bar. In order to finish the blossom, duplicate the same bar and connecting rod on each of the 5 remaining petals. The 3 outer petals need to be a little lower when the blossom is opened to allow them to properly overlap the inner petals while closing. In the end, you should be able to close and open the blossom. Don't panic if you failed to do the perfect shape for the first try. It only means all the petals are not perfectly the same. It will probably take a lot of fine-tuning to create a perfect shape - slightly different lengths of connecting rods and positions of bars. Take your time here! A reward is near.", "step_imgs": ["https://cdn.instructables.com/F49/NQSW/JSAOQVRI/F49NQSWJSAOQVRI.LARGE.jpg", "https://cdn.instructables.com/FX3/U16L/JSAOQVTF/FX3U16LJSAOQVTF.LARGE.jpg", "https://cdn.instructables.com/FM8/H9W9/JSAOQVNK/FM8H9W9JSAOQVNK.LARGE.jpg", "https://cdn.instructables.com/FG7/Z5YR/JSAOQVQ3/FG7Z5YRJSAOQVQ3.LARGE.jpg", "https://cdn.instructables.com/FEB/2KDK/JSAOQVSR/FEB2KDKJSAOQVSR.LARGE.jpg"], "step_title": "Step 5: Petals Mechanism (6h)"}, {"step": 6, "steps_text": "If you made it to this step you are a king and the hardest parts are behind you. Inside the blossom, I put 7 NeoPixels LEDs to shine from inside. These LEDs need only one DATA wire to be controlled and can be daisy chained. I soldered 6 of these between two small hexagons (another template of course). Lower hexagon is a ground wire and the upper one is a positive voltage. Solder appropriate leads of NeoPixels to these hexagon rings. These LEDs are placed under the 45-degree angle to shine into sides. To make it even better place the seventh LED into the center of the upper hexagon. Last but not least connect DATA IN and OUT leads to create a daisy chain.\nThis structure will need two wires going down to the pedestal - VCC and DATA. The ground is taken from the flower frame. Solder one thin 0.3 insulated copper wire to the upper ring for VCC and the second one to the first LED in the daisy-chain for DATA. These wires will at the end go down to the pedestal. Make them at least 3 times the length of the stem. Ends of these wires need to be released from their transparent insulation prior to soldering. Heat won't destroy it. Use a knife to strip off the insulation. You can test the LEDs now to make sure they work. Be gentle with these copper wires. If you accidentally strip the insulation anywhere else than ends, you might get a short circuit!\nLast brass soldering work is now going to happen! Place the pistil structure to the center of the blossom. Slightly offset it from the blossom hexagonal base to leave enough room for petals connecting rods. For me, it was 1cm above the blossom hexagon. Connect all the vertices with brass rods to make a solid structure. The flower is done! Test it now to see if petals can still move freely.", "step_imgs": ["https://cdn.instructables.com/FNI/6Q2L/JSAOQVQ2/FNI6Q2LJSAOQVQ2.LARGE.jpg", "https://cdn.instructables.com/FRL/ZGZB/JSAOQVQX/FRLZGZBJSAOQVQX.LARGE.jpg", "https://cdn.instructables.com/FQ7/M14P/JSAOQVES/FQ7M14PJSAOQVES.LARGE.jpg"], "step_title": "Step 6: Rainbow Pistil (1h)"}, {"step": 7, "steps_text": "Both petals and NeoPixel LEDs need power wires to shine. The whole flower sculpture will be a ground but there are 6 petals and 2 wires for NeoPixels that need to be connected to Arduino in the pedestal. For that, thin 0.3mm copper wires with transparent insulations will be wrapped around the stem tubing. Two wires for Neopixels are already done. Solder another 6 to the loose vein wire on each petal near the hinge and pass the wire through the blossom structure down the stem. Make sure you don't bend these wires in sharp angles, it would break soon.\nNow gather all the wires near the upper end of the stem tubing and secure them using strapping tape. Don't tighten it too much yet, allow wires to be pulled through it. Now nicely organize all the wires inside the blossom. Make sure petals are free to move and the pushrod is not colliding with the wires as well. Done? Now tighten the strapping tape.\nWires are now flying around the stem uncontrollably. You need to patiently and slowly wrap them down the stem. Tightly and evenly. It took me at least an hour to finish this step. When you are at the end of the stem, place another strapping tape to secure the wires there and use clear superglue to fix them in the place. Make sure not to seal the tubing with the pushrod!\nLast wire missing is a ground. Solder another copper wire to the bottom end of the stem. You should end up with 9 wires coming out of the flower. It'd wise now to connect all the wires to Arduino and test whether there is no short circuit and all the LEDs light up.", "step_imgs": ["https://cdn.instructables.com/FNP/5517/JSAOQVXY/FNP5517JSAOQVXY.LARGE.jpg", "https://cdn.instructables.com/FOH/VFK8/JSAOQVXZ/FOHVFK8JSAOQVXZ.LARGE.jpg", "https://cdn.instructables.com/FII/BS89/JSAOQVXR/FIIBS89JSAOQVXR.LARGE.jpg", "https://cdn.instructables.com/FES/LB3M/JSAOQVX5/FESLB3MJSAOQVX5.LARGE.jpg"], "step_title": "Step 7: Making Roots (2h)"}, {"step": 8, "steps_text": "I wanted the flower to grow out of the artificial flowerpot which would also hide all the electronics. I've used a piece of wood and processed it into a cylinder 4cm high and 9cm in diameter. I don't have a lathe, so I used a circular saw to cut raw shape and then a press drill to act as an improvised lathe. Then I carved an opening 2.5cm deep and 7cm in diameter using hand milling cutter to fit servo, Arduino Nano and the touch sensor IC. On the bottom side of the cylinder, there is also a small opening to precisely fit Arduino Nano USB port to be able to connect the USB cable from the side.\nIf you have your flowerpot, drill a hole in diameter of your flower stem with wires in a place where the flower will grow - probably in the center. Try to fit your flower. Be careful with the wires. If you bend them under a sharp angle, they will break. In the end, I've also added a large hole from the inside of the pedestal to make more room for servo's arm and connecting rod.\nYou can do whatever shape of flowerpot you like, just keep in mind you need to fit all the electronics inside.", "step_imgs": ["https://cdn.instructables.com/F40/RPXK/JSAOQVXS/F40RPXKJSAOQVXS.LARGE.jpg", "https://cdn.instructables.com/FDV/YPWG/JSAOQVXT/FDVYPWGJSAOQVXT.LARGE.jpg", "https://cdn.instructables.com/FJE/F4VN/JSAOQVH1/FJEF4VNJSAOQVH1.LARGE.jpg", "https://cdn.instructables.com/FVO/BQUG/JSAOQVHY/FVOBQUGJSAOQVHY.LARGE.jpg", "https://cdn.instructables.com/FE3/U9FC/JSAOQW1X/FE3U9FCJSAOQW1X.LARGE.jpg", "https://cdn.instructables.com/FT4/TROJ/JSAOQVJU/FT4TROJJSAOQVJU.LARGE.jpg"], "step_title": "Step 8: The Flowerpot (2h)"}, {"step": 9, "steps_text": "Mechanical tulip needs some kind of interactive element that would allow the person to make it bloom. I've chosen TTP223 touch sensor IC from my Arduinoflake project. But where to put a touchpad? I've decided to add a little leaf on the side of the stem that would both make the flower more natural and also will act as a capacitive touchpad. When touched it would trigger the TTP223 sensor and tell Arduino to open the blossom. This will be piece of cake for you now when you have finished such a complicated sculpture. Use the same technique as for the petals just omit the LEDs. I've also created a template for myself. Drill another small hole into the pedestal next to the stem hole to hold the leaf in the place.\nIf you don't want or can't use a capacitive touch sensor you can add a normal push button to the pedestal. It will do the same job.", "step_imgs": [], "step_title": "Step 9: Touch Leaf-pad (1h)"}, {"step": 10, "steps_text": "This is the final step of the assembly! Are you nervous? Insert your flower stem into its hole in the pedestal again. Now, this is an important step. Measure twice before you cut! Open the blossom into its full opening. And cut the end of the pushrod coming out of the stem flush with the stem. Now when you close the blossom again, pushrod should draw out of the stem. Solder a short tubing perpendicularly to the pushrod. This will be a hinge for the connecting rod with the servo arm. When you let go the blossom and the rod, it should stop full open because the tubing will act as a stop as well.\nYou can now glue the stem into the pedestal. Make sure stem tubing end is flush with the inside of the pedestal to leave as much space for servo arm as possible. I've used superglue again. Make sure you don't glue the pushrod with the stem tubing. It would ruin your work!\nNext, glue in the leaf-pad. Before you do solder a copper wire to it to be able to connect the leaf-pad to TTP223 touch sensor.\nPut flower upside down. Be careful around the sculpture, do not break it right now! It would be so much waste! First, put the servo into final position. Its arm should be already prepared from the test stand. Just find the sweet spot where servo arm would move freely inside the pedestal and connect connecting rod to the pushrod. To secure the servo in place I used a piece of sheet metal and two screws. I wanted to be flexible here in case of servo breakdown or a wrong placement. But if you are confident you can glue it in.\nIf you have TTP223 module, solder the wire to leaf-pad on the original TTP223 module's touchpad (opposite side where the components are). You will need to scratch down the protective silk mask to expose the copper layer. Glue the touch module in.\nPetal leafs wires (there are 6 of them) has to be connected to Arduino via current limiting resistors. Petals are basically LEDs. I've used six 200ohm resistors soldered on a tiny piece of perf board. Glue it in.\nAnd the last component into the pedestal is Arduino Nano itself as a brain of the mechanical tulip. Place it into the opening in pedestal so it can be connected to your computer and wire it with all other components:\nservo data wire \u2b62 D9 (required for Adafruit_TiCoServo library)\nTTP223 touch sensor data \u2b62 D2 (to make use of interrupt)\nNeopixel data \u2b62 A0 (any output pin will do)\nPetals \u2b62 D3, D4, D5, D6, D10, D11 (any output pins will do)\nFlower ground wire \u2b62 GND\nNeopixel VCC wire \u2b62 5V\nTTP223 touch sensor GND \u2b62 GND\nTTP223 touch sensor VCC \u2b62 5V\nServo GND \u2b62 GND\nServo VCC \u2b62 5V", "step_imgs": ["https://cdn.instructables.com/FXV/Z9EN/JSAOQW16/FXVZ9ENJSAOQW16.LARGE.jpg", "https://cdn.instructables.com/F6Y/3JPZ/JSAOQW17/F6Y3JPZJSAOQW17.LARGE.jpg", "https://cdn.instructables.com/FUO/XMBM/JSAOQW1A/FUOXMBMJSAOQW1A.LARGE.jpg", "https://cdn.instructables.com/FM1/V5HF/JSAOQW1W/FM1V5HFJSAOQW1W.LARGE.jpg"], "step_title": "Step 10: Putting It Together (2h)"}, {"step": 11, "steps_text": "Programming is the easiest part of all. You already have your code for the servo. Now you only need to be able to control NeoPixels, LEDs on petals and the touch sensor. Take a look into my code attached. It will give you everything you need to make your flower work. If you used my wiring scheme, you can use it right away. But don't forget to change the servo OPEN and CLOSED values. They will be definitely different.", "step_imgs": [], "step_title": "Step 11: Coding (1h)"}, {"step": 12, "steps_text": "Don't forget to share your creation! Like this article. Also, consider supporting me by buying some of my products in my Tindie store.\nYou can find me and my latest projects on my Twitter account.", "step_imgs": ["https://cdn.instructables.com/FVI/2P5L/JSAOQW14/FVI2P5LJSAOQW14.LARGE.jpg", "https://cdn.instructables.com/FCF/R1XD/JSAOQVYO/FCFR1XDJSAOQVYO.LARGE.jpg"], "step_title": "Step 12: It's Done!"}], "channel": "Arduino"}, {"category": "Technology", "description": "Geared Heart Message Pendant is a little late for this Valentines Day, and quite early for the next Valentines Day, in the meantime it's a great way to express your feelings to your whomever!\nInspired by a CAD tutorial appearing in one of my suggested video feeds (the CAD model appearing in the tutorial was quite elegant, but it was just a model and not designed for 3D printing or assembly), this model is easy to 3D print and assemble.\nAs usual, I probably forgot a file or two or who knows what else, so if you have any questions, please do not hesitate to point them out as I do make mistakes in plenty.\nDesigned using Autodesk Fusion 360, sliced using Cura 3.5.1, and printed in PLA on an Ultimaker 2+ Extended and an Ultimaker 3 Extended.", "title": "Geared Heart Message Pendant", "url": "https://www.instructables.com/id/Geared-Heart-Message-Pendant/", "steps": [{"step": 1, "steps_text": "I printed one each of all 3D printed parts at .1mm layer height with 50% infill.\nPrior to assembly, I test fit and trimmed, filed, sanded, etc. all parts as necessary for smooth movement of moving surfaces, and tight fit for non moving surfaces. If you decide to make your own Geared Heart Message Pendant, depending on the colors you chose, your printer model and your printer settings, more or less trimming, filing and/or sanding may be required. I carefully filed all edges that contacted the build plate to make absolutely certain that all build plate \"ooze\" was removed and that all edges were smooth. I used small jewelers files and plenty of patience to perform this step.", "step_imgs": ["https://cdn.instructables.com/FMD/HUDB/JSC1Z2MX/FMDHUDBJSC1Z2MX.LARGE.jpg"], "step_title": "Step 1: Print and Prepare the 3D Printed Parts."}, {"step": 2, "steps_text": "In order to avoid a dual extrusion print for the messages, I decided to 2D print them on standard copy paper, then glue the 2D printed messages to \"Gear, Large.stl\". After experimenting with a few paint programs, I found that I could obtain the most accurate size and placement of the messages using (of all things) Microsoft Office 2011 Power Point. Once the design was complete, the resulting \"message disk image\" was saved as \"KissMeILoveYou.pdf\" (for those interested in creating their own message disk images, the message text is centered on two diameters, the outside being 25mm, and the inside being 11 mm). After saving this file, I opened it using the MacBook \"Preview\" application then printed it on a laser printer at 100% scale (I could have printed the message disk image directly from Power Point, but I needed to test the accuracy of the .PDF file conversion and printing, since I was quite certain no one but me still uses Microsoft Office 2011 Power Point).\nAfter printing KissMeILoveYou.pdf, I positioned \"Cutout Disk.stl\" in the exact center of the message disk image on the print then used a sharp modeling knife to carefully cut the message disk image from the print using the cutout disk as a guide.\nAfter cutting out the message disk image, I applied glue (I used a glue stick) to the back side of the message disk image and pressed it onto the center of \"Gear, Large.stl\" holding it in place for a few moments to allow the glue to set.\nAfter the glue set, I removed the center hole from the message disk image using a sharp modeling knife.", "step_imgs": ["https://cdn.instructables.com/FQU/TGAK/JSC1Z2N2/FQUTGAKJSC1Z2N2.LARGE.jpg", "https://cdn.instructables.com/F4B/2I9D/JSC1Z2N7/F4B2I9DJSC1Z2N7.LARGE.jpg", "https://cdn.instructables.com/FBK/V4SA/JSC1Z2NC/FBKV4SAJSC1Z2NC.LARGE.jpg", "https://cdn.instructables.com/FX4/5PHG/JSC1Z2NH/FX45PHGJSC1Z2NH.LARGE.jpg", "https://cdn.instructables.com/FKJ/6KYL/JSC1Z2NI/FKJ6KYLJSC1Z2NI.LARGE.jpg", "https://cdn.instructables.com/FSU/PJ1S/JSC1Z2NM/FSUPJ1SJSC1Z2NM.LARGE.jpg", "https://cdn.instructables.com/FEJ/DAGT/JSC1Z2NR/FEJDAGTJSC1Z2NR.LARGE.jpg"], "step_title": "Step 2: Prepare \"Gear, Large.stl\"."}, {"step": 3, "steps_text": "I began assembly of my Geared Heart Message Pendant by placing the large gear assembly on the center pin in \"Case, Front.stl\", message disk side down.\nNext, I placed \"Gear Small 1.stl\" on the upper left hand pin on the case, followed by \"Gear Small 2.stl\" on the upper right hand pin on the case.\nAt this point I tested the mechanism to make sure it operated freely.\nFinally, I snapped \"Case, Rear.stl\" onto the assembly.\nOnce assembled, rotate either of the small gears to change the message.\nAnd that is how I printed and assembled my Geared Heart Message Pendants.\nHope you enjoy it!", "step_imgs": ["https://cdn.instructables.com/F2W/8985/JSC1Z2OR/F2W8985JSC1Z2OR.LARGE.jpg", "https://cdn.instructables.com/FQA/86RY/JSC1Z2PA/FQA86RYJSC1Z2PA.LARGE.jpg", "https://cdn.instructables.com/FWY/5MDP/JSC1Z2PU/FWY5MDPJSC1Z2PU.LARGE.jpg", "https://cdn.instructables.com/FDU/K0U2/JSC1Z2Q0/FDUK0U2JSC1Z2Q0.LARGE.jpg", "https://cdn.instructables.com/FIK/35RU/JSC1Z2QD/FIK35RUJSC1Z2QD.LARGE.jpg", "https://cdn.instructables.com/FE7/8I97/JSC1Z2Q5/FE78I97JSC1Z2Q5.LARGE.jpg"], "step_title": "Step 3: Assemble and Test the Geared Heart Message Pendant."}], "channel": "3D Printing"}, {"category": "Technology", "description": "When it comes to building projects we generally use a power supply for prototyping, but if it is a portable project then we need a power source like 18650 li-ion cells, but these cells are sometimes expensive or most of the sellers don\u2019t sell genuine products. So in this post, I\u2019ll show you how you can extract some good quality cells from old laptop batteries so let\u2019s get started.", "title": "How to Get 18650 Cells From Dead Laptop Batteries!", "url": "https://www.instructables.com/id/How-to-Get-18650-Cells-From-Dead-Laptop-Batteries/", "steps": [{"step": 1, "steps_text": "If you don't want to read all the stuff you can watch my video tutorial", "step_imgs": [], "step_title": "Step 1: Watch the Video!"}, {"step": 2, "steps_text": "The very first step is to find out some old laptop batteries, you can go to the nearby scrap yard and ask them if they have and that\u2019s what I did or you can search online on eBay for some listings. I brought these 6 batteries pack only for 14 USD, which is already way cheaper than buying them on first hand.", "step_imgs": ["https://cdn.instructables.com/F2W/X67J/JSAOSRQR/F2WX67JJSAOSRQR.LARGE.jpg", "https://cdn.instructables.com/F9K/IAQD/JSAOSRTA/F9KIAQDJSAOSRTA.LARGE.jpg", "https://cdn.instructables.com/FPC/S6IX/JSAOSRTO/FPCS6IXJSAOSRTO.LARGE.jpg", "https://cdn.instructables.com/FYZ/N9A7/JSAOSRSU/FYZN9A7JSAOSRSU.LARGE.jpg"], "step_title": "Step 2: Finding Old Laptop Battery Packs"}, {"step": 3, "steps_text": "Now all you have to do is take a flat head screwdriver and carefully remove the outer covering. I generally first find a weak spot like a border and slowly start tearing it apart, Once you can see batteries inside you can use some brute force to tear apart the plastic.\nOnce it is done keep the cell pack as it is and repeat the same process for the remaning battery pack, we will come back to it later\nCaution!\nPlease be careful as plastic can be sharp inside!", "step_imgs": ["https://cdn.instructables.com/FL8/CAUE/JSAOSWMD/FL8CAUEJSAOSWMD.LARGE.jpg", "https://cdn.instructables.com/FMX/O5RH/JSAOSWNX/FMXO5RHJSAOSWNX.LARGE.jpg", "https://cdn.instructables.com/F3R/K7KV/JSAOSWFO/F3RK7KVJSAOSWFO.LARGE.jpg", "https://cdn.instructables.com/FE0/D0YB/JSAOSWGC/FE0D0YBJSAOSWGC.LARGE.jpg", "https://cdn.instructables.com/F92/CNAL/JSAOSWGX/F92CNALJSAOSWGX.LARGE.jpg", "https://cdn.instructables.com/F9Z/RV2G/JSAOSWHJ/F9ZRV2GJSAOSWHJ.LARGE.jpg", "https://cdn.instructables.com/FM4/A76P/JSAOSWX6/FM4A76PJSAOSWX6.LARGE.jpg"], "step_title": "Step 3: Tearing Apart Battery Pack"}, {"step": 4, "steps_text": "Once you are done tearing all the battery pack take a diagonal cutter or a metal snipper and separate all the batteries and also remove the circuit as we don\u2019t need it but don\u2019t throw it away as we can use it for a future project.\nNow let\u2019s continue separating them. After that remove the metal pieces from the battery top and bottom as well.", "step_imgs": ["https://cdn.instructables.com/FQ2/1SI8/JSAOSX3A/FQ21SI8JSAOSX3A.LARGE.jpg", "https://cdn.instructables.com/FV9/7ADG/JSAOSX3F/FV97ADGJSAOSX3F.LARGE.jpg", "https://cdn.instructables.com/F1V/2RDD/JSAOSX36/F1V2RDDJSAOSX36.LARGE.jpg", "https://cdn.instructables.com/F7V/S397/JSAOSX38/F7VS397JSAOSX38.LARGE.jpg"], "step_title": "Step 4: Separating the Batteries"}, {"step": 5, "steps_text": "Now we have to charge all the cells, but before that, we need to separate all the cells according to their conditions, Take a multimeter and measure the voltage of the cell,\nIf the voltage is more than 3v it\u2019s a Good Cell\nIf the voltage is in between 2.5v to 3v then an average cell\nAnd if the voltage is less than 2.5v it\u2019s a bad cell and throw it away\nTo charge the cells we can use IMAX charger or one of those tp 4056 modules.\nSince one charger was not enough I borrowed one and also used tp4056 to charge the cells.\nCharing Current for cells should be as follows,\n1) 3.7V, 1 Ampere for cells with voltage greater than 3 volts\n2) 3.7V, 0.75 Ampere for cells with voltage in between 2.5V and 3 volts\n3) if you want to try recovering a dead cell which has voltage less than 2.5V then voltage should be 3.7V and 0.5 Ampere or 0.3 Ampere\nCaution!\nMonitor the temperature of the cell if it gets too hot then immediately remove it from charging!", "step_imgs": ["https://cdn.instructables.com/FIW/I5AC/JSAOSXGQ/FIWI5ACJSAOSXGQ.LARGE.jpg", "https://cdn.instructables.com/FCZ/0JCT/JSAOSXDP/FCZ0JCTJSAOSXDP.LARGE.jpg", "https://cdn.instructables.com/FJC/NE20/JSAOSXE2/FJCNE20JSAOSXE2.LARGE.jpg", "https://cdn.instructables.com/FHX/XUOL/JSAOSXPU/FHXXUOLJSAOSXPU.LARGE.jpg"], "step_title": "Step 5: Charging the Cells"}, {"step": 6, "steps_text": "The last step is to check the capacity of the cell which is crucial for that I used my DIY capacity tester,\nlink- https://www.instructables.com/id/Li-ion-Capacity-T...\nand separated all the cells according to their capacity. And that\u2019s you can now use these cells for your project!", "step_imgs": ["https://cdn.instructables.com/F8Z/Q4MZ/JSAOSXR0/F8ZQ4MZJSAOSXR0.LARGE.jpg", "https://cdn.instructables.com/FB4/TE58/JSAOSXQZ/FB4TE58JSAOSXQZ.LARGE.jpg"], "step_title": "Step 6: Capacity Testing"}, {"step": 7, "steps_text": "If you like my work\nFeel free to check out my YouTube channel for more awesome stuff: https://www.youtube.com/c/Nematics_lab\nYou can also follow me on Facebook, Twitter etc for upcoming projects\nhttps://www.facebook.com/NematicsLab/\nhttps://www.instagram.com/nematic_yt/\nhttps://twitter.com/Nematic_YT", "step_imgs": ["https://cdn.instructables.com/F9K/M475/JSAOSY2C/F9KM475JSAOSY2C.LARGE.jpg"], "step_title": "Step 7: Thank You!"}], "channel": "Reuse"}, {"category": "Technology", "description": "In this instructable I will be showing you how to create a Bulbasaur Spinning Succulent!", "title": "Bulbasaur Succulent Spinner", "url": "https://www.instructables.com/id/Bulbasaur-Succulent-Spinner/", "steps": [{"step": 1, "steps_text": "If you have ever been on Thingiverse or Reddit then you have probably seen a low-poly bulbasaur planter. If not, I would recommend checking out Hitsman\u2019s design here.\nI have been printing these and giving them out as gifts over the last year or so. The low-poly bulbasaur design is awesome, and is honestly one of my favorite items that I have printed since I got my 3D printer. I couldn't help but think I could make this succulent planter even cooler so I went ahead and designed these Bulbasaur Succulent Spinners! I made both stepper and servo versions and I explain all of the pros/cons of the different versions and how to create them in the video above.\nPlease consider subscribing to my YouTube channel to support me and to see more exciting videos.", "step_imgs": [], "step_title": "Step 1: Intro"}, {"step": 2, "steps_text": "I made two separate options for control of your spinning succulent. I designed both a servo and stepper motor version so you can pick and choose whichever option you would like. The servo version is slightly louder but it has full speed control using a potentiometer installed in the back of the enclosure. I think the stepper version has much smoother motion and uses a ATTiny85 so additions for different movement will be much easier later down the line. The downside is that since it is a stepper motor it does get quite hot if you leave it running for a while. I will let you decide which version you want to create, since I think both versions look awesome.", "step_imgs": ["https://cdn.instructables.com/FIQ/NP33/JS5CP5GL/FIQNP33JS5CP5GL.LARGE.jpg"], "step_title": "Step 2: Servo Vs. Stepper Version"}, {"step": 3, "steps_text": "I will start with explaining how to create the Servo version. You will need the following:\n1. 3D Printed Enclosure with Lid\n2. 3D Printed Bulbasour Servo Version\n3. 555 Timer\n4. 5V Power Supply\n5. 10K Potentiometer\n6. 5.1K Resistor\n7. 220K Resistor\n8. 1N4001 Diode\n9. 22 nF Capacitor\n10. .1 uF Capacitor\n11. Continuous Rotation Servo (Or Mod SG90 Servo)", "step_imgs": ["https://cdn.instructables.com/FZS/FDTT/JS5CP6PC/FZSFDTTJS5CP6PC.LARGE.jpg"], "step_title": "Step 3: Servo Version Components Needed"}, {"step": 4, "steps_text": "Now that you have gathered all of the required components, it is time to start assembling everything together. I would recommend wiring up everything on a breadboard first and then once everything is functioning properly go ahead and solder everything up on a perf board.\nThe heart of our circuit is a 555 Timer IC. This is one of my favorite IC's because of its versatility as it can be used as a timer, pulse generator, oscillator, as well as many more functions. Another reason why they are so great, is that you can typically find them for under $1.\nWe will be using our 555 timer in astable mode in low-duty cycle operation which means that it does not have a stable state, the output jumps back and forth with a duty cycle that is below 50 percent. Luckily for you, I already calculated out the correct resistor and capacitor combinations that our servo needs to operate so you don't have to do any math.\nThe 10K potentiometer will be used to control the speed of our spinning succulent. I also added a On/Off switch to control power to our circuit. Since everything will be wired up and hidden inside of our 3D printed enclosure, it will be nice to have speed control with our potentiometer and to have the ability to turn on/off the circuit without opening it all up.", "step_imgs": ["https://cdn.instructables.com/FTL/D8IN/JS5COVPI/FTLD8INJS5COVPI.LARGE.jpg"], "step_title": "Step 4: Servo Electronics"}, {"step": 5, "steps_text": "Since our electronics consist of a servo, on/off switch, potentiometer, and 5V power supply we will need to print our 3D printed Bulbasaur, enclosure box, and lid. I designed the box to allow easy mounting of the potentiometer and a standard on/off switch. The lid of the bulbasaur has a slot for the servo to be first placed into the bulbsaur and then through the lid slot. This will make sure the bulbasaur does not need any additional mounting as it should stay in place.\nThe designs can be found on Thingiverse here:\nhttps://www.thingiverse.com/thing:3437696", "step_imgs": ["https://cdn.instructables.com/FHE/8SHS/JS5COW6G/FHE8SHSJS5COW6G.LARGE.jpg", "https://cdn.instructables.com/FFV/6ST0/JS5COW6P/FFV6ST0JS5COW6P.LARGE.jpg", "https://cdn.instructables.com/F6J/UY4R/JS5COW6Y/F6JUY4RJS5COW6Y.LARGE.jpg"], "step_title": "Step 5: Servo Version Design"}, {"step": 6, "steps_text": "In this step, we will be putting all of our components together. Please follow the instruction below:\n1. Remove supports from 3D prints\n2. Insert the servo into the slot of the bulbasaur. Be sure to make sure the wire connector is inserted as well.\n3. Insert potentiometer into the slot on the right.\n4. Insert On/Off switch on the left.\n5. Insert 5V power supply wires through the center hole.\n6. Wire up everything to either your breadboard or perf board.\n7. Place the lid on top of the enclosure box. It should snap right into place.", "step_imgs": ["https://cdn.instructables.com/F9Z/JUFT/JS5CP1SF/F9ZJUFTJS5CP1SF.LARGE.jpg", "https://cdn.instructables.com/FUA/2J0S/JS5CP1V9/FUA2J0SJS5CP1V9.LARGE.jpg", "https://cdn.instructables.com/FE6/0HKH/JS5CP1Z5/FE60HKHJS5CP1Z5.LARGE.jpg"], "step_title": "Step 6: Installing Servo Components"}, {"step": 7, "steps_text": "After you have attached your succulent to the spinning servo, go ahead and test it out. You can adjust the speed by using the potentiometer on the back.\nCheck out the video for it in action!", "step_imgs": [], "step_title": "Step 7: Test It Out!"}, {"step": 8, "steps_text": "If you choose to do the stepper version instead of the servo version, the following components will be needed:\n1. Bulbasour Stepper Version\n2. Enclosure Box and Lid\n3. 28BJY-48 Stepper Motor\n4. ULN2003 Motor Driver\n5. 5V Power Supply\n6. On/Off Switch\n7. ATTiny85\n\nThe 3D design can be found here:\nhttps://www.thingiverse.com/thing:3437696", "step_imgs": ["https://cdn.instructables.com/FMM/TJVY/JS5CP7TW/FMMTJVYJS5CP7TW.LARGE.jpg"], "step_title": "Step 8: Stepper Components Needed"}, {"step": 9, "steps_text": "The electronics for the stepper version are easier since we are using a pre-bought ULN2003 motor driver board. These usually come in kits and are very cheap so they work great for small projects like this one.\nWe will be using an ATTiny85 to control the speed of our stepper motor. The Attiny85 has 8k of program space, 6 I/O lines, and 4-channel 10 bit ADC. It runs up to 20 MHz with external crystal. This chip is only about $2 and is perfect for simple projects where an Arduino is overkill like this one.", "step_imgs": ["https://cdn.instructables.com/FWZ/T1HI/JS5CP8BL/FWZT1HIJS5CP8BL.LARGE.jpg"], "step_title": "Step 9: Stepper Electronics"}, {"step": 10, "steps_text": "The programming of the ATTiny85 is very simple. Just upload the code below and your ATTiny85 will be programmed to spin slowly. I used Sparkfun's Tiny AVR programmer to make it easier for myself.", "step_imgs": ["https://cdn.instructables.com/FMB/FMUF/JS5CP8KE/FMBFMUFJS5CP8KE.LARGE.jpg", "https://cdn.instructables.com/F4S/1V1W/JS5CP8KJ/F4S1V1WJS5CP8KJ.LARGE.jpg"], "step_title": "Step 10: Stepper Programming of ATTiny85"}, {"step": 11, "steps_text": "After you have gathered all of your components and put together the electrical components, it is time to put it all together.\nInsert the stepper motor into the slot in the bulbasaur and insert the wire into the lid. Wire up the on/off switch according to the schematic and connect everything else up to a 5V power supply.", "step_imgs": ["https://cdn.instructables.com/FSN/3PXZ/JS5CPAG6/FSN3PXZJS5CPAG6.LARGE.jpg", "https://cdn.instructables.com/FAA/V6IM/JS5CPAG9/FAAV6IMJS5CPAG9.LARGE.jpg"], "step_title": "Step 11: Installing Stepper Components"}, {"step": 12, "steps_text": "Now that your stepper version bulbasaur succulent spinner is complete, it is time to test it out! Plug it in, turn on the switch, and enjoy.\nPlease consider subscribing to my youtube channel to support me and see more awesome videos/ideas.\nThank you for reading!", "step_imgs": [], "step_title": "Step 12: Test It Out!"}], "channel": "Electronics"}, {"category": "Technology", "description": "Fed up of the wires and hassle of plugging and unplugging your phone as you move around the house? So were we!\nWe\u2019ve made a wireless charging cover which fits snugly on your sofa arm and blends in seamlessly. This simple make is a great way to upgrade your sofa and is a step on the path to eternal laziness: it\u2019s as simple as charging your phone by putting it down.\nWatch the video tutorial:", "title": "Wireless Charging Sofa", "url": "https://www.instructables.com/id/Wireless-Charging-Sofa/", "steps": [{"step": 1, "steps_text": "Materials:\nFaux Leather (Fire retardant) Amazon\nWireless Charge Receiver Amazon\nWireless Charging Module Amazon\nMicro-USB Wire Amazon\n2A USB Plug Amazon\nTools:\nSewing Machine Amazon", "step_imgs": [], "step_title": "Step 1:"}, {"step": 2, "steps_text": "Measure the arm of your sofa. You will make the cover in two pieces: one which covers the front of the arm and another piece which wraps around the top of the arm. First, measure the front piece by measuring the width of the arm (at its widest point on curved arms) and how far down the arm you want the cover to go - when doing this, bear in mind you probably want it to sit between the cushion and the arm.\nOnce you have established how far down the arm you want the cover, measure the second piece which will go across the arm. Measure how deep you want the cover to be.", "step_imgs": ["https://cdn.instructables.com/FVO/UVNC/JSAOR7SE/FVOUVNCJSAOR7SE.LARGE.jpg"], "step_title": "Step 2: Measure Up"}, {"step": 3, "steps_text": "The wireless charging module will be housed within a pocket inside cover to stop it moving around. I made mine 15.0cm by 9.5cm - based on the size of my wireless charger.\nAdd approximately 1/2cm to your measurements (for stitching) and draw the rectangles on the back of your material - there should be 4 in total. Cut them out.", "step_imgs": ["https://cdn.instructables.com/FO9/L6RA/JSAOR7HO/FO9L6RAJSAOR7HO.LARGE.jpg"], "step_title": "Step 3: Measure Wireless Charger Pocket"}, {"step": 4, "steps_text": "Add approximately 1/2cm to your measurements (for stitching) and draw the rectangles on the back of your material - there should be 4 in total. Cut them out.", "step_imgs": ["https://cdn.instructables.com/FHT/T5OV/JSAOR7MS/FHTT5OVJSAOR7MS.LARGE.jpg"], "step_title": "Step 4: Draw Out Measurements"}, {"step": 5, "steps_text": "Make the pocket for the wireless charging module. To do so, take the two small rectangles and place them on top of each other so the front of the material is facing inwards on both pieces.\nPlace the wireless charger between the two pieces and draw a line across the fabric where it ends. Sew along this line to the two pieces of fabric are joined in the middle.", "step_imgs": ["https://cdn.instructables.com/FXL/7P15/JSAOR7S1/FXL7P15JSAOR7S1.LARGE.jpg"], "step_title": "Step 5: Sew the Pocket"}, {"step": 6, "steps_text": "Pin the arm cover ready for sewing. With the material face down, lay the rectangle across the top of the arm. Pin the front rectangle onto it, leaving at least 1/2cm seams.\nIf you have a sofa with a rounded arm, you will need to gather more material where the arm curves to achieve the right shape.", "step_imgs": ["https://cdn.instructables.com/FT1/QTMH/JSAOR79I/FT1QTMHJSAOR79I.LARGE.jpg"], "step_title": "Step 6: Pin the Cover"}, {"step": 7, "steps_text": "Sew the cover together while it is still inside out, removing the pins as you go. If you need guidance on how to hand stitch, or how to thread and use a sewing machine, check out these tutorials from the wonderful world of YouTube!\nhttps://www.youtube.com/watch?v=xdHnrlrQ6RE&feature=youtu.be https://www.youtube.com/watch?v=kKnBUa4l2k4", "step_imgs": ["https://cdn.instructables.com/F4C/MMH5/JSAOR6Z3/F4CMMH5JSAOR6Z3.LARGE.jpg"], "step_title": "Step 7: Sew the Cover"}, {"step": 8, "steps_text": "Once you\u2019ve finished sewing the cover, turn it inside out and check you\u2019re happy with how it fits on your sofa arm.", "step_imgs": ["https://cdn.instructables.com/FMT/LVD1/JSAOR70Z/FMTLVD1JSAOR70Z.LARGE.jpg"], "step_title": "Step 8: Test on Arm"}, {"step": 9, "steps_text": "Hem the edges of the cover by folding approximately 1/2cm of each edge backwards and pinning in place. Sew neatly to create a hemline which will give the cover a clean finish.", "step_imgs": ["https://cdn.instructables.com/FX5/Q88W/JSAOR704/FX5Q88WJSAOR704.LARGE.jpg"], "step_title": "Step 9: Hem the Edges"}, {"step": 10, "steps_text": "Place the cover on the sofa arm and put the rectangles you sewed earlier to house the wireless charging module beneath it with the half which fits the wireless charging module facing towards the back of the sofa. The pocket should sit in the middle of the arm in a place you can balance your phone. When you\u2019re happy with the location, pin in place.", "step_imgs": ["https://cdn.instructables.com/FCI/EEAQ/JSAOR6XU/FCIEEAQJSAOR6XU.LARGE.jpg"], "step_title": "Step 10: Pin the Pocket on the Cover"}, {"step": 11, "steps_text": "Sew the pocket along the front and two side edges. When sewing along the rear edge, only sew the top layer of the pocket onto the cover. This is so that the wireless charging module can be added or removed but also so that the rectangle shape on the top of the cover, which shows where you put your phone for it to charge properly, is a complete shape.", "step_imgs": ["https://cdn.instructables.com/F0G/BIJH/JSAOR6YR/F0GBIJHJSAOR6YR.LARGE.jpg"], "step_title": "Step 11: Sew in the Pocket"}, {"step": 12, "steps_text": "Put the wireless charger inside the pocket and plug it in.", "step_imgs": ["https://cdn.instructables.com/F6Y/BK30/JSAOR6X9/F6YBK30JSAOR6X9.LARGE.jpg"], "step_title": "Step 12: Plug in Wireless Charger"}, {"step": 13, "steps_text": "Put the cover your sofa arm you\u2019re ready to go!", "step_imgs": ["https://cdn.instructables.com/FHW/S44J/JSAOR6X8/FHWS44JJSAOR6X8.LARGE.jpg"], "step_title": "Step 13: Enjoy!"}], "channel": "Wireless"}, {"category": "Technology", "description": "Hi again,\nHate that your robot runs into everything? This will fix that problem. With 8 sonic sensors this looks complicated...but in fact I made this very easy. I try to post projects that help you learn about Arduino and show an 'outside the box' concept. This post will help you understand 595 switching, pro-minis as a programmable sensor, and the grand use of real time led feedback. If you enjoy Arduino as a 'copy and paste and plug-in' you might just skip this.\nI like to use pro-minis. They are about $2.50, work as a full blown uno, and installing headers makes them very flexible. Used as a sensor micro you can have it 'do what you want' instead of what a purchased sensor dictates. With I2C using only 2 wires they can be tied together all on one line. So move over MEGA I can have 4 minis running 4 separate lines of code all at the same time, at just $10.00. Here I use a mini to pop the sonic sensors through a 595 and show realtime led distance. Then just share 8bits of data with the mother board. This takes the load off the mother board and makes the her code very simple.\nThere is a problem with sonic sensors...no visual feedback. You never know if the sensor is just a dead weight or working! I believe who ever came up with 'BLINK' is smarter than Einstine. Just ONE led and a world of information is relayed by the blinking. So a sonic sensor needs realtime feedback. Here I used an array of leds to monitor each sensor. You don't need them, just make the sensors without the leds. But to have the leds on the PCB is helpful.", "title": "SONIC LED FEEDBACK", "url": "https://www.instructables.com/id/SONIC-LED-FEEDBACK/", "steps": [{"step": 1, "steps_text": "make PCB and populate. CAUTION...I made a mistake on the PCB at the 4 pin connections for the sonic sensors to plug into. The ECHO and TRIGGER Vcc and grounds were going to plug into the pcb. There is not enough room for connectors so I just made the PCB with pin-outs. So you can solder a wire connector to the PCB and plug into the actual sonic sensors. As for the leds I put yellow leds at the inside edge and red at the outside. this helps you see at distance if the sensors are correctly measuring.\nThis is one of the FEW 2side pcb I ever made. I would rather make 2 ea single side and run jumpers. But to get the led display you need at least the top pcb. I separated the layout in the download.\nThe PCB is for a pro-mini with A4-A5 inside the edge header. Either way just connect A4-A5 to the Master A4-A5. Don't forget the Vcc and Grounds too.", "step_imgs": ["https://cdn.instructables.com/FPJ/RM97/JS8TOBFS/FPJRM97JS8TOBFS.LARGE.jpg", "https://cdn.instructables.com/F6Q/85YO/JS8TOBGT/F6Q85YOJS8TOBGT.LARGE.jpg", "https://cdn.instructables.com/FFU/L283/JS8TOBAT/FFUL283JS8TOBAT.LARGE.jpg", "https://cdn.instructables.com/FCA/OC1O/JS8TOBH2/FCAOC1OJS8TOBH2.LARGE.jpg", "https://cdn.instructables.com/FT0/3EBS/JS8TOBIY/FT03EBSJS8TOBIY.LARGE.jpg", "https://cdn.instructables.com/FWB/XZ65/JS8TOBH1/FWBXZ65JS8TOBH1.LARGE.jpg", "https://cdn.instructables.com/F1E/WFLZ/JS8TOBJW/F1EWFLZJS8TOBJW.LARGE.jpg"], "step_title": "Step 1: MAKE PCB"}, {"step": 2, "steps_text": "Now for my mistakes... I tried to pop the Triggers all at once (all tied together) and this sorta worked well but some interactions took place. So now all ECHOS go to the micro (8) and the TRIGGERS are set by a 595. Three more pins (3). As for the leds, multiplexing won't work. You need a full ON time for each led. This means each row of 7 leds has to have its own 595. Once you update the 595 the leds stay lit until the next update. Where multiplexing the led only lights for that tenth of a second. This works well in my readers and it needs a dedicated micro. No time for scanning 8 sonic sensors and measuring distances. I tried and got very poor results. Multiplexing the leds will also mean a grid of row + column and that means around 64+ feed throughs in the PCB.\nI used only 7 outputs from the 595 because of clutter on the PCB. At a distance you can't tell if there are 7 or 8 leds just their motion. You may be tempted to tie all the leds to a single resistor and this works, but the brightness of the array changes with the amount of leds that are lite. So one resistor per led is best. I just love the 595 but if they just moved the Vcc and 0-out pins or made a 18 pin ic with ALL outputs on the same side... connecting the all eight outputs would be so easy. But then it wouldn't sell for less than 30 cents.", "step_imgs": ["https://cdn.instructables.com/FV3/GOZC/JS8TOBEM/FV3GOZCJS8TOBEM.LARGE.jpg"], "step_title": "Step 2: MANY MISTAKES"}, {"step": 3, "steps_text": "Glue sonic sensors to coffee lid. the male jack needs to be bent inward on each sensor. This works better if you bend one pin at a time. I used 2 side foam tape just so the vibration is less. My sensors are too close and they need a 1/4 inch space to match the PCB better. I have used sonic sensors before and sometimes one fails to measure accurately and you need to keep this in mind. So don't GLUE them all in permanently.\nIt also helps to run a quick distance test on each one before you use them. I get about one sensor with a poor reading in a batch of 20. Not bad for the price I paid.", "step_imgs": ["https://cdn.instructables.com/FAQ/8I4W/JS8TOBFV/FAQ8I4WJS8TOBFV.LARGE.jpg", "https://cdn.instructables.com/FIV/3S7L/JS8TOBFT/FIV3S7LJS8TOBFT.LARGE.jpg", "https://cdn.instructables.com/FYM/W0KA/JS8TOBCR/FYMW0KAJS8TOBCR.LARGE.jpg", "https://cdn.instructables.com/FM1/0G04/JS8TOBGU/FM10G04JS8TOBGU.LARGE.jpg"], "step_title": "Step 3: MOUNT SENSORS"}, {"step": 4, "steps_text": "I thought there would be room for jacks and plugs from the PC to the\nsonic pins but I ran out of room. So I hard wired the pcb end and just made echo and trigger wires with female jacks (8ea). I tied the 8ea Vcc and 8ea grounds of the sensors together so this made only 2 connections to the PCB for them.\nWith 8 sensors and 8 595s a uno or pro-mini CAN NOT power this. There must be a 5v regulated source as part of this project. My robot has a simple 7805 @ 1amp from the batteries. This ties to all the 5v Vcc for all devices. the 7805 drops about a volt so you need at least 6.5 volts to feed it. That is 2 lithium batteries at 3.3v. My robot has old nicads from used drill packs and 8 nicads run the typical China geared 12v motor in the $20 tank type chassis.", "step_imgs": ["https://cdn.instructables.com/FHV/QZUY/JS8TOBH0/FHVQZUYJS8TOBH0.LARGE.jpg"], "step_title": "Step 4: HARD WIRE"}, {"step": 5, "steps_text": "Download the sketch and install. There are many ways to talk to\nanother uno but I like I2c. the confusion is addressing and master/ slave. As with most sensors (think of the 2nd mini as a sensor) you address the sensor and ask for x amount of bytes. same thing here. In the 2nd mini you set aside x amount of bytes you want to send. The confusion is names don't matter. It only helps YOU remember if you share the names. So in the sketch I send the 8 sonic distance measurements in cm as sendR1,sendR2,sendR3,sendR4, sendL1,sendL2,sendL3,sendL4. The master just gets 8 bytes if data and you can call those bytes anything you want. I read them as gotR1,gotR2,got..... The sent order of bytes is the same. So byte A,B,C..... don't think by changing the name will give you different data. And the other catch, you can only receive data that is told to be sent. So if you want other data you must change BOTH master and slave.", "step_imgs": ["https://cdn.instructables.com/FQF/XT1Y/JS8TOBOR/FQFXT1YJS8TOBOR.LARGE.jpg"], "step_title": "Step 5: DOWNLOAD SONIC SKETCH"}, {"step": 6, "steps_text": "You can skip this if you know how to set up 2 Uno's to talk to each other. I do have some tidbits of info at the end. To make it easy I will call the uno in the robot base M1 and the sonic sensor as S2. Connect Vcc,ground,A4,A5 to each other.\nIn the sketch for the S2 it starts with #include<Wire.h>\nThen create the 8 bytes to send. byte R1, byte R2, byte L1 etc. Uno is a 8bit micro so they send 1byte at a time using 'byte' instead of 'int' is correct.\nIn the 'setup()' add 'Wire.begin(address)' this tells I2c which device this is. The address is usually any number you like between 4 - 200. the size of one byte. Here I used the number 10. So to talk to this sensor S2 the master must call Wire.requestFrom(10,8). This is address 10 and the 8 is how many bytes wanted. Also in the 'setup()' add Wire.onRequest(isr anyName). When the M1 calls the request the S2 sensor reacts with the interrupt. This just calls the function anyName. So this anyName function needs to be created. Look at the sketch and see the function 'sendThis()' This is where the bytes actually get sent to the M1. The bytes alone go and NOT the names and in the order sent. This is where the size and amount of data to send starts from. In this easy format of bytes the send and receive should match. Here 8 bytes sent and 8 bytes received. One note here is calling a function requires the (). Like delay(), millis(), Serial.print(). When using an ISR (interrupt service routine) calling the function drops the (). So Wire.onRequest(sendThis) not Wire.onRequest(sendThis()).\nThe confusion I had was the master/slave thing. At first I thought the master was ALLWAYS the master. But within the sketch you can switch master/slave to request from other micros or send to other micros. As long as you followed the basic format outlined above. Remember... you ONLY share data that has been assigned.\nTwo off the wall tid bits. The isr interrupt only interrupts between sketch lines. If you are locked in a 'while or for' loop, nothing happens till the loop exits. NO big deal as this may be a few microseconds and the data is old.\nThe other problem is, 'inside' a micro there is 100% error free calculation. Any 'outside' (wires) communication is subject to errors. There are many ways to check that the data delivered is error free and matches the source. The easiest way is with checksum. Just add the totals of the sending bytes (actual values) and send the totals and on the receiving end add the totals and see if they match. If they match ok or toss that data set if they don't. Of course this involves sending an integer value and not bytes. So you just split the integer into the HI byte and LO byte and send as separate bytes. Then put together at the receiver.\nEASY:\nint x = 5696; (any valid int value, max is 65k or 32k negative)\nbyte hi = x >>8; (22)\nbyte lo = x; (64)\nsend the bytes and combine at other end....\nbyte hi = Wire.read();\nbyte lo = Wire.read();\nint newx = (hi <<8) + lo; (5696)", "step_imgs": ["https://cdn.instructables.com/FWY/6JPR/JS8TOBKV/FWY6JPRJS8TOBKV.LARGE.jpg"], "step_title": "Step 6: COMMUNICATION"}, {"step": 7, "steps_text": "To close, this sonic sensor gives the mother board raw distance data in real time. This frees up the micro and makes the sketch much less complicated. The micro can now make a good decision to slow, turn, stop, or reverse based on good data instead of random guesses. See my other post about bluetooth IDE to upload sketches without wires and having to connect your robot all the time for just a quick change in your sketch. Thanks for viewing this. oldmaninsc.", "step_imgs": ["https://cdn.instructables.com/FS0/KW7Y/JS8TOBSO/FS0KW7YJS8TOBSO.LARGE.jpg", "https://cdn.instructables.com/F87/9XXN/JS8TOBQM/F879XXNJS8TOBQM.LARGE.jpg", "https://cdn.instructables.com/FJ0/14D1/JS8TOBLU/FJ014D1JS8TOBLU.LARGE.jpg", "https://cdn.instructables.com/F2B/BJIK/JS8TOBNQ/F2BBJIKJS8TOBNQ.LARGE.jpg"], "step_title": "Step 7: CLOSING"}], "channel": "Robots"}, {"category": "Technology", "description": "In this special instructable / video I am making cool looking small media PC with integrated speakers, which is controlled with convenient mini remote keyboard. PC is powered with an old laptop.\nSmall story about this build. One year ago I saw Matthew Perks (my favorite DIY creator) video ( https://youtu.be/e3fnsGHe8eE ) how he created something cool from an old laptop. I wished that one day I will be capable of making anything close to it. Today is the day that I surpassed my all expectations from one year ago.\nI converted regular laptop into a full functioning PC without breaking anything ha ha, I also kept the display and integrated 30W+30W amplified speakers. And all this is controlled with small and convenient remote control.\nWhat you could want more? Huge thanks to all 1000+ YouTube subscribers, 250+ Instructables subscribers and huge thanks to Matthew Perks for inspiration!\nHere you can download PDF file with all dimensions - http://bit.ly/VintageMediaPC\nTools You'll Need:\n(Affiliate links)\nRouter https://amzn.to/2DVXXZC\nDrill: https://amzn.to/2U5QQmL\nJigsaw https://amzn.to/2rg4uXx\nClamps https://amzn.to/2E8EBkQ\nSmall clamp https://amzn.to/2Pto6AQ\nTape measure https://amzn.to/2rfS4Ph\nSpeed square https://amzn.to/2Ee6lDh\nHot glue gun https://amzn.to/2PdCgpI\nDigital Multimeter https://amzn.to/2rf0EO3\nSoldering kit: https://amzn.to/2Q613Bf\nWire cutting pliers https://amzn.to/2rvrL80\nWire Stripper https://amzn.to/2PvTK0z\nSoldering helping hand https://amzn.to/2EedeoI\nUniversal battery charger (optional) https://amzn.to/2DJ8KVb\nOld batteries can be reused like in a DIY power bank https://amzn.to/2IrYfuO\n\nMaterials You'll Need:\n(Affiliate links)\nOld laptop, preferably with IPS display (anywhere)\nRemote keyboard https://amzn.to/2IiYKYp\nSolid state drive https://amzn.to/2tq4164\nSpeakers 30W https://amzn.to/2V0thLZ\nClass D 30 W amplifier https://amzn.to/2DFBAFK\n3.5mm stereo audio cable https://amzn.to/2Iiap9R\n10k Ohm Logarithmic potentiometer https://amzn.to/2IjrkZq\nPotentiometer cap https://amzn.to/2UVPZVo\nGround loop noise isolator (what I used) https://amzn.to/2N9OXma\nGround loop noise isolator (more convenient) https://amzn.to/2TT3VPO\nRubber feet https://amzn.to/2IkaDx1\n12mm thickness plywood (local hardware store)\nWood screws (local hardware store)\n90 Degree Right Angle Bracket https://amzn.to/2DLDOnj\nWood glue: https://amzn.to/2E8Baus\nWood linseed oil https://amzn.to/2EeXH7C\nEpoxy https://amzn.to/2Q8N3GU\nElectrical tape: https://amzn.to/2QsKK0P\nHeat resistant tape https://amzn.to/2Egg77Z\nHeatsink 60 x 60mm https://amzn.to/2X6ZRxt\nFan 60 x 60mm https://amzn.to/2EdUuW0\nFan filter 60 x 60mm https://amzn.to/2tmZ5yT\nThermal paste https://amzn.to/2DIK3s2\nThermal glue https://amzn.to/2SW1bE3\n18650 Li-Ion batteries https://amzn.to/2X6IA7K\n18650 battery holder https://amzn.to/2N8xHxv\nOn/Off switch https://amzn.to/2X8U7mP\nPower push button https://amzn.to/2X4guKc\nWires (local hardware store)\n\nYou can follow me:\nYouTube: https:// www.youtube.com/diyperspective\nInstagram: https://www.instagram.com/diyperspective\nTwitter: https://twitter.com/diyperspective\nFacebook: https://www.facebook.com/diyperspective", "title": "Vintage Look Media PC From an Old Laptop", "url": "https://www.instructables.com/id/Vintage-Look-Media-PC/", "steps": [{"step": 1, "steps_text": "Preview shots of the build.", "step_imgs": ["https://cdn.instructables.com/FU4/L9FL/JS8TCQYS/FU4L9FLJS8TCQYS.LARGE.jpg", "https://cdn.instructables.com/FK8/VH1I/JS8TCQYX/FK8VH1IJS8TCQYX.LARGE.jpg", "https://cdn.instructables.com/FRX/UM1O/JS8TCQYY/FRXUM1OJS8TCQYY.LARGE.jpg", "https://cdn.instructables.com/FD3/BU0N/JS8TCQYU/FD3BU0NJS8TCQYU.LARGE.jpg", "https://cdn.instructables.com/F99/8DCD/JS8TCQYW/F998DCDJS8TCQYW.LARGE.jpg"], "step_title": "Step 1: Preview"}, {"step": 2, "steps_text": "Disassembling laptop is one of the easiest things in this build, so I won't go into the details. You will need main board with power switch, battery pack, display, USB and charging ports, fan and audio card (if it's not integrated into the main board).\nDisplay must be completely disassembled that we just have the LCD panel, Wi-Fi antennas and web camera.", "step_imgs": ["https://cdn.instructables.com/FWX/LF2A/JS8TCQZ0/FWXLF2AJS8TCQZ0.LARGE.jpg", "https://cdn.instructables.com/F81/9YSQ/JS8TCQYZ/F819YSQJS8TCQYZ.LARGE.jpg", "https://cdn.instructables.com/FLR/QAK6/JS8TCQZ1/FLRQAK6JS8TCQZ1.LARGE.jpg", "https://cdn.instructables.com/FDA/F9LG/JS8TCQZ2/FDAF9LGJS8TCQZ2.LARGE.jpg", "https://cdn.instructables.com/F89/5QF3/JS8TCQZ5/F895QF3JS8TCQZ5.LARGE.jpg"], "step_title": "Step 2: Taking Laptop Apart"}, {"step": 3, "steps_text": "If you want that this media PC would be portable you should change the old batteries to new ones.\nBattery pack is sealed quite well so it is hard to open it. I just used \"breaking\" method. If you do the same, be careful not to short batteries or damage protection/charging circuit.\nIn older and cheaper laptops inside usually are 18650 Li-Ion cells. Take few pictures how everything is connected and de-solder the wires.", "step_imgs": ["https://cdn.instructables.com/FW3/TTGK/JS8TCQZ6/FW3TTGKJS8TCQZ6.LARGE.jpg", "https://cdn.instructables.com/FST/ZUYO/JS8TCQZ7/FSTZUYOJS8TCQZ7.LARGE.jpg", "https://cdn.instructables.com/F29/OLZZ/JS8TCQZY/F29OLZZJS8TCQZY.LARGE.jpg", "https://cdn.instructables.com/FGU/K7BB/JS8TCQZZ/FGUK7BBJS8TCQZZ.LARGE.jpg", "https://cdn.instructables.com/FOR/H3BX/JS8TCR02/FORH3BXJS8TCR02.LARGE.jpg"], "step_title": "Step 3: Portable or Not"}, {"step": 4, "steps_text": "If you have universal battery charger, you can test how much capacity are left in the batteries. If they have some juice left you can re-use them in devices which has short-circuit/over-charge/over-discharge protections. As those cells has no protection now.", "step_imgs": ["https://cdn.instructables.com/FSP/26DU/JS8TCR0R/FSP26DUJS8TCR0R.LARGE.jpg", "https://cdn.instructables.com/FNM/LS0S/JS8TCR0S/FNMLS0SJS8TCR0S.LARGE.jpg", "https://cdn.instructables.com/FSK/YXBO/JS8TCR0T/FSKYXBOJS8TCR0T.LARGE.jpg"], "step_title": "Step 4: Old Cells"}, {"step": 5, "steps_text": "For the new battery pack we need DIY battery holders. As my batteries were connected in 3 series and 2 rows (3s2p) I soldered holders and extra wires exactly the same. If your batteries are connected differently, re-make holder accordingly.", "step_imgs": ["https://cdn.instructables.com/F9E/Y2Y8/JS8TCR0U/F9EY2Y8JS8TCR0U.LARGE.jpg", "https://cdn.instructables.com/FZ5/5HJQ/JS8TCR0V/FZ55HJQJS8TCR0V.LARGE.jpg", "https://cdn.instructables.com/FJ7/O0AG/JS8TCR0X/FJ7O0AGJS8TCR0X.LARGE.jpg"], "step_title": "Step 5: Making New Battery Pack"}, {"step": 6, "steps_text": "We need to de-solder connector from the protection circuit and solder extra wires.\nAs I used plywood plate, I wrapped it in heat resistant and electrically conductive tape and added electrical tape where protection circuit and battery contacts will be.\nMake sure that all glued heat resistant tape pieces can carry current, as sticky side of the tape is insulated. I connect them by simply poking multiple times.", "step_imgs": ["https://cdn.instructables.com/FUQ/Y8BJ/JS8TCR0Z/FUQY8BJJS8TCR0Z.LARGE.jpg", "https://cdn.instructables.com/FA5/91O0/JS8TCR10/FA591O0JS8TCR10.LARGE.jpg", "https://cdn.instructables.com/FDP/7NLH/JS8TCR12/FDP7NLHJS8TCR12.LARGE.jpg", "https://cdn.instructables.com/FA2/XEY3/JS8TCR17/FA2XEY3JS8TCR17.LARGE.jpg", "https://cdn.instructables.com/FMA/C184/JS8TCR3O/FMAC184JS8TCR3O.LARGE.jpg"], "step_title": "Step 6: Assembling Battery Pack"}, {"step": 7, "steps_text": "Battery holders and protection circuit can be screwed with small screws and fragile connections hot-glued.\nIf your reassembled battery don't work after plugging it into a laptop, you might also to need connect a charger. In my case, when I plug the charger for the first time, red light flashes few times and after that battery pack is usable again.", "step_imgs": ["https://cdn.instructables.com/FM2/KAUZ/JS8TCR13/FM2KAUZJS8TCR13.LARGE.jpg", "https://cdn.instructables.com/F8N/P46D/JS8TCR3P/F8NP46DJS8TCR3P.LARGE.jpg", "https://cdn.instructables.com/FEX/CH88/JS8TCR3Q/FEXCH88JS8TCR3Q.LARGE.jpg"], "step_title": "Step 7: Ffinishing the Battery"}, {"step": 8, "steps_text": "To turn on a laptop you need a power button. Locate which button it is and find it's contacts with a multi-meter.\nMark them and de-solder contacts. Then simply solder those two wires to the new power button. Secure fragile contacts with hot glue and electrical tape.\nIf you care about other functions which nearby buttons had, you can do same to them, these are just buttons.", "step_imgs": ["https://cdn.instructables.com/FDR/37BW/JS8TCR3R/FDR37BWJS8TCR3R.LARGE.jpg", "https://cdn.instructables.com/FMS/Y0Q3/JS8TCR3S/FMSY0Q3JS8TCR3S.LARGE.jpg", "https://cdn.instructables.com/FZT/A1S6/JS8TCR3U/FZTA1S6JS8TCR3U.LARGE.jpg", "https://cdn.instructables.com/FEJ/IUXT/JS8TCR3V/FEJIUXTJS8TCR3V.LARGE.jpg", "https://cdn.instructables.com/FSI/9NBS/JS8TCR3X/FSI9NBSJS8TCR3X.LARGE.jpg", "https://cdn.instructables.com/F28/22IH/JS8TCR3Z/F2822IHJS8TCR3Z.LARGE.jpg"], "step_title": "Step 8: Making Power Button"}, {"step": 9, "steps_text": "To improve cooling performance you can add new higher quality thermal paste.", "step_imgs": ["https://cdn.instructables.com/FXL/OVP0/JS8TCR41/FXLOVP0JS8TCR41.LARGE.jpg", "https://cdn.instructables.com/F8E/K8WJ/JS8TCR42/F8EK8WJJS8TCR42.LARGE.jpg", "https://cdn.instructables.com/FWA/4GMW/JS8TCR46/FWA4GMWJS8TCR46.LARGE.jpg", "https://cdn.instructables.com/FL2/DNW2/JS8TCR48/FL2DNW2JS8TCR48.LARGE.jpg"], "step_title": "Step 9: New Thermal Paste"}, {"step": 10, "steps_text": "Bigger aluminum heatsink (60x60x10mm in my case for 60W(max) laptop) can be glued with thermal conductive glue. Fan can be secured with some zip ties through drilled holes in the heatsink.\nAnd to power the fan you can use wires and connector from a stock fan. As these stock fans usually are powered with 5V and I added 12V fan it will spin at lower rate and produce less noise. But by doing it this way you will loose fan control (as we use only power wires) and it will spin at a fixed rate.\nAlso keep in mind that your laptop must boot without any fan connected for this mod to work. If it doesn't, maybe it will work with only power wires connected to the fan, I can't say. Maybe you can use something like this https://noctua.at/en/nf-a6x25-5v-pwm 4pin 5V fan, you have to test yourself, unfortunately I can't tell.", "step_imgs": ["https://cdn.instructables.com/FT1/8DKZ/JS8TCR49/FT18DKZJS8TCR49.LARGE.jpg", "https://cdn.instructables.com/FUB/33HN/JS8TCR4A/FUB33HNJS8TCR4A.LARGE.jpg", "https://cdn.instructables.com/FST/76P9/JS8TCR4B/FST76P9JS8TCR4B.LARGE.jpg", "https://cdn.instructables.com/FCK/6FW0/JS8TCR4C/FCK6FW0JS8TCR4C.LARGE.jpg"], "step_title": "Step 10: New Cooling"}, {"step": 11, "steps_text": "I cut and glue main parts for the frame. You can check dimensions here in a PDF file:", "step_imgs": ["https://cdn.instructables.com/F4C/C8OF/JS8TCR4E/F4CC8OFJS8TCR4E.LARGE.jpg", "https://cdn.instructables.com/FOR/4C49/JS8TCR4F/FOR4C49JS8TCR4F.LARGE.jpg", "https://cdn.instructables.com/F1Y/ZSHJ/JS8TCR4I/F1YZSHJJS8TCR4I.LARGE.jpg", "https://cdn.instructables.com/F42/UX3K/JS8TCR4J/F42UX3KJS8TCR4J.LARGE.jpg", "https://cdn.instructables.com/FTA/SWWO/JS8TCR4K/FTASWWOJS8TCR4K.LARGE.jpg"], "step_title": "Step 11: Cutting Parts"}, {"step": 12, "steps_text": "Display frame should be quite thin - 5mm thickness.", "step_imgs": ["https://cdn.instructables.com/F7Q/WETF/JS8TCR4L/F7QWETFJS8TCR4L.LARGE.jpg", "https://cdn.instructables.com/FF0/T6XZ/JS8TCR4M/FF0T6XZJS8TCR4M.LARGE.jpg", "https://cdn.instructables.com/FZ1/OGUE/JS8TCR4Q/FZ1OGUEJS8TCR4Q.LARGE.jpg"], "step_title": "Step 12: Cutting Display Frame"}, {"step": 13, "steps_text": "Frame parts can be trimmed to 5mm with jigsaw table or just by splitting and sanding plywood. By this extra work you will get front parts that look the same, as different thickness plywood can have very different shades.", "step_imgs": ["https://cdn.instructables.com/FBP/WFUY/JS8TCR4R/FBPWFUYJS8TCR4R.LARGE.jpg", "https://cdn.instructables.com/F9N/KVFC/JS8TCR4U/F9NKVFCJS8TCR4U.LARGE.jpg", "https://cdn.instructables.com/FLF/DXMD/JS8TCR4V/FLFDXMDJS8TCR4V.LARGE.jpg"], "step_title": "Step 13: Finishing Frame"}, {"step": 14, "steps_text": "We need to make holes for the speakers, volume control, amplifier and laptop power buttons. As this plywood is quite thick - 12mm, we need to make some space for potentiometer and laptop power on button in the other side.\n.", "step_imgs": ["https://cdn.instructables.com/F6T/6H0X/JS8TCR5M/F6T6H0XJS8TCR5M.LARGE.jpg", "https://cdn.instructables.com/FV9/I445/JS8TCR6G/FV9I445JS8TCR6G.LARGE.jpg", "https://cdn.instructables.com/F7L/8BKK/JS8TCR6H/F7L8BKKJS8TCR6H.LARGE.jpg", "https://cdn.instructables.com/FWU/OROB/JS8TCR6I/FWUOROBJS8TCR6I.LARGE.jpg"], "step_title": "Step 14: Final Front Piece"}, {"step": 15, "steps_text": "Front and back piece with charging connector can be glued in place. More pieces can be cut for the speakers.", "step_imgs": ["https://cdn.instructables.com/F4V/OCU7/JS8TCR8G/F4VOCU7JS8TCR8G.LARGE.jpg", "https://cdn.instructables.com/FG4/0EXO/JS8TCR8H/FG40EXOJS8TCR8H.LARGE.jpg", "https://cdn.instructables.com/FK4/QCAY/JS8TCR8I/FK4QCAYJS8TCR8I.LARGE.jpg", "https://cdn.instructables.com/FPS/1QTN/JS8TCR8L/FPS1QTNJS8TCR8L.LARGE.jpg", "https://cdn.instructables.com/F53/B0RF/JS8TCR8N/F53B0RFJS8TCR8N.LARGE.jpg"], "step_title": "Step 15: Gluing"}, {"step": 16, "steps_text": "As I am using full range car speakers (ported speakers) I drilled holes that air pressure from the speakers doesn't affect sound performance in a bad way. It also give better lower frequencies. And don't forget to drill small holes for the speaker wires.", "step_imgs": ["https://cdn.instructables.com/FVC/GRBE/JS8TCR9S/FVCGRBEJS8TCR9S.LARGE.jpg", "https://cdn.instructables.com/FNE/C0LT/JS8TCR9T/FNEC0LTJS8TCR9T.LARGE.jpg", "https://cdn.instructables.com/FTA/5M62/JS8TCR9W/FTA5M62JS8TCR9W.LARGE.jpg", "https://cdn.instructables.com/F7W/QRJU/JS8TCR9Y/F7WQRJUJS8TCR9Y.LARGE.jpg"], "step_title": "Step 16: Speaker Boxes"}, {"step": 17, "steps_text": "More parts can be cut and we can finish making speaker boxes.", "step_imgs": ["https://cdn.instructables.com/FUY/ZG6B/JS8TCR9Z/FUYZG6BJS8TCR9Z.LARGE.jpg", "https://cdn.instructables.com/FL1/Y2RY/JS8TCRA0/FL1Y2RYJS8TCRA0.LARGE.jpg", "https://cdn.instructables.com/FX1/A0PP/JS8TCRA1/FX1A0PPJS8TCRA1.LARGE.jpg", "https://cdn.instructables.com/FOZ/DHI4/JS8TCRA2/FOZDHI4JS8TCRA2.LARGE.jpg", "https://cdn.instructables.com/F52/4F40/JS8TCRA3/F524F40JS8TCRA3.LARGE.jpg", "https://cdn.instructables.com/FQG/VL36/JS8TCRA5/FQGVL36JS8TCRA5.LARGE.jpg"], "step_title": "Step 17: Finishing Speaker Boxes"}, {"step": 18, "steps_text": "We need to add some double side tape around the display frame, place it and hot glue all corners.\nThen display can be secured properly with some bent holders that will came with car speakers or anything similar.", "step_imgs": ["https://cdn.instructables.com/FUD/U9PP/JS8TCRA6/FUDU9PPJS8TCRA6.LARGE.jpg", "https://cdn.instructables.com/F0Y/R0CV/JS8TCRA8/F0YR0CVJS8TCRA8.LARGE.jpg", "https://cdn.instructables.com/F89/TFNG/JS8TCRBZ/F89TFNGJS8TCRBZ.LARGE.jpg", "https://cdn.instructables.com/F07/VOW9/JS8TCRD2/F07VOW9JS8TCRD2.LARGE.jpg"], "step_title": "Step 18: Securing Display"}, {"step": 19, "steps_text": "Connect all cables to the board and secure them with duct tape that they won't come loose when mounting the board. I used plywood blocks as spacers and small 90 degree right angle corners.", "step_imgs": ["https://cdn.instructables.com/F70/PKNR/JS8TCRE5/F70PKNRJS8TCRE5.LARGE.jpg", "https://cdn.instructables.com/F2G/IQ3I/JS8TCRF8/F2GIQ3IJS8TCRF8.LARGE.jpg", "https://cdn.instructables.com/FY3/AMQS/JS8TCRF9/FY3AMQSJS8TCRF9.LARGE.jpg"], "step_title": "Step 19: Mounting Main Board"}, {"step": 20, "steps_text": "Now we can glue Wi-Fi antennas with thick double side tape into both corners. I also changed from old mechanical drive to fast solid state drive, it makes huge difference even with a slow laptop and SATA2 port!\nThen we need to glue small block in each corner which will hold the back panel.", "step_imgs": ["https://cdn.instructables.com/FDM/LV3W/JS8TCRFA/FDMLV3WJS8TCRFA.LARGE.jpg", "https://cdn.instructables.com/FDY/CF36/JS8TCRGD/FDYCF36JS8TCRGD.LARGE.jpg", "https://cdn.instructables.com/F80/99KW/JS8TCRHH/F8099KWJS8TCRHH.LARGE.jpg"], "step_title": "Step 20: WIFI, SSD"}, {"step": 21, "steps_text": "We should add heat resistant tape where battery pack will be. This should prevent quick ignition of the wood if something horrible happens to the battery pack. Like before make sure that all pieces connect with each other and can carry the current.", "step_imgs": ["https://cdn.instructables.com/FF1/EHB8/JS8TCRIK/FF1EHB8JS8TCRIK.LARGE.jpg", "https://cdn.instructables.com/FZ7/F1F7/JS8TCRJP/FZ7F1F7JS8TCRJP.LARGE.jpg", "https://cdn.instructables.com/FQJ/PUOR/JS8TCRKT/FQJPUORJS8TCRKT.LARGE.jpg"], "step_title": "Step 21: Safety?"}, {"step": 22, "steps_text": "We need to cut a 3.5 stereo cable in half. Then wires can be soldered as shown.\nTo the left side pins - ground as one connection.\nTo the middle pins - left and right channel wires that will go to the output (laptop)\nTo the right side pins - left and right channel wires that will go to the input (audio amplifier)\nYou can check which wires are left, right and ground with a multi-meter.", "step_imgs": ["https://cdn.instructables.com/FVO/MQ7Q/JS8TCRLX/FVOMQ7QJS8TCRLX.LARGE.jpg", "https://cdn.instructables.com/FPM/0JX3/JS8TCRN1/FPM0JX3JS8TCRN1.LARGE.jpg", "https://cdn.instructables.com/FVL/J9HD/JS8TCRO5/FVLJ9HDJS8TCRO5.LARGE.jpg", "https://cdn.instructables.com/FX5/5EY7/JS8TF9C5/FX55EY7JS8TF9C5.LARGE.jpg"], "step_title": "Step 22: Making Volume Control"}, {"step": 23, "steps_text": "For this build we need something like a TPA3118 30W+30W Stereo Amplifier (8V~26V DC). And we should make power switch for it.\nWith audio amps always use equal or more powerful speakers (AMP Watts \u2264 Speaker Watts).", "step_imgs": ["https://cdn.instructables.com/FSN/YLES/JS8TCRQE/FSNYLESJS8TCRQE.LARGE.jpg", "https://cdn.instructables.com/FF1/BTGV/JS8TCRPA/FF1BTGVJS8TCRPA.LARGE.jpg", "https://cdn.instructables.com/FNM/HOEC/JS8TCRRI/FNMHOECJS8TCRRI.LARGE.jpg", "https://cdn.instructables.com/F81/U0SH/JS8TCRSM/F81U0SHJS8TCRSM.LARGE.jpg"], "step_title": "Step 23: Speakers Amp Wiring"}, {"step": 24, "steps_text": "Now battery pack can be secured with two screws and battery cut off switch can be made. As my battery had 2 positive and 2 negative wires in both sides, I made that the switch will disconnect both positive wires. Amp power wires can be soldered here too.", "step_imgs": ["https://cdn.instructables.com/F11/AVIT/JS8TCRTQ/F11AVITJS8TCRTQ.LARGE.jpg", "https://cdn.instructables.com/FM7/5UBA/JS8TCRTR/FM75UBAJS8TCRTR.LARGE.jpg", "https://cdn.instructables.com/F31/BACO/JS8TCRUV/F31BACOJS8TCRUV.LARGE.jpg", "https://cdn.instructables.com/FRT/YKGR/JS8TCRW1/FRTYKGRJS8TCRW1.LARGE.jpg"], "step_title": "Step 24: Finishing Power Delivery"}, {"step": 25, "steps_text": "Back cover is nothing special. We need to drill holes for the fan to take in the air, and on the top for the hot air to escape. I also placed USB port here.", "step_imgs": ["https://cdn.instructables.com/FH3/6E1W/JS8TCRX5/FH36E1WJS8TCRX5.LARGE.jpg", "https://cdn.instructables.com/FX7/8C1P/JS8TCRX9/FX78C1PJS8TCRX9.LARGE.jpg", "https://cdn.instructables.com/FAG/WUFC/JS8TCRYD/FAGWUFCJS8TCRYD.LARGE.jpg"], "step_title": "Step 25: Back Cover"}, {"step": 26, "steps_text": "To get a nice and rich wood look we can use some linseed oil. And to eliminate vibrations we can use 4 soft rubber feet.", "step_imgs": ["https://cdn.instructables.com/FGO/IT0C/JS8TCRZH/FGOIT0CJS8TCRZH.LARGE.jpg", "https://cdn.instructables.com/FQ7/HHNA/JS8TCS0L/FQ7HHNAJS8TCS0L.LARGE.jpg", "https://cdn.instructables.com/FZA/GBO2/JS8TCS1R/FZAGBO2JS8TCS1R.LARGE.jpg"], "step_title": "Step 26: Oil and Feet"}, {"step": 27, "steps_text": "If your speakers makes weird noises when amp is connected to the powered on laptop, you need to use a ground loop noise isolator. By passing audio wires through this device, all electrical noises are gone.\nI used quite bulky device like this, if you can, just use something like in the 4th picture, it is way more convenient.\nIf you want to know more about this device, this is great video: https://youtu.be/fV_hsFK1MnA", "step_imgs": ["https://cdn.instructables.com/FMZ/H1A0/JS8TCS1T/FMZH1A0JS8TCS1T.LARGE.jpg", "https://cdn.instructables.com/FM7/KGH8/JS8TD2R2/FM7KGH8JS8TD2R2.LARGE.jpg", "https://cdn.instructables.com/FUC/0RL4/JS8TCS2X/FUC0RL4JS8TCS2X.LARGE.jpg", "https://cdn.instructables.com/F5Q/G5N0/JS8TD2PR/F5QG5N0JS8TD2PR.LARGE.jpg"], "step_title": "Step 27: If Your Speakers Makes Weird Noises"}, {"step": 28, "steps_text": "With everything done inside, we can add heat resistant and electrically conductive tape on back covers and connect negative wire from the battery pack to the inside shielding (heat tape). All shielded pieces must connect with each other that current could flow.\nWhat this does, it shields inside electronic components from outside electromagnetic interference. This is one of the reason why inside of the laptop is covered with similar shielding.", "step_imgs": ["https://cdn.instructables.com/F2G/ASD5/JS8TCS41/F2GASD5JS8TCS41.LARGE.jpg", "https://cdn.instructables.com/FAB/PDMN/JS8TCS55/FABPDMNJS8TCS55.LARGE.jpg", "https://cdn.instructables.com/F8B/EV2Q/JS8TCS69/F8BEV2QJS8TCS69.LARGE.jpg", "https://cdn.instructables.com/FBG/MQRG/JS8TCS7I/FBGMQRGJS8TCS7I.LARGE.jpg", "https://cdn.instructables.com/F2I/EXKE/JS8TCS8M/F2IEXKEJS8TCS8M.LARGE.jpg", "https://cdn.instructables.com/FC2/L240/JS8TCS9R/FC2L240JS8TCS9R.LARGE.jpg"], "step_title": "Step 28: Finishing"}, {"step": 29, "steps_text": "We can secure back covers with wood screws and install the speakers.", "step_imgs": ["https://cdn.instructables.com/FOZ/TK4G/JS8TCSAX/FOZTK4GJS8TCSAX.LARGE.jpg", "https://cdn.instructables.com/FDY/5LCB/JS8TCSAY/FDY5LCBJS8TCSAY.LARGE.jpg", "https://cdn.instructables.com/F2M/N0QH/JS8TCSC2/F2MN0QHJS8TCSC2.LARGE.jpg", "https://cdn.instructables.com/FYZ/P02U/JS8TCSD6/FYZP02UJS8TCSD6.LARGE.jpg"], "step_title": "Step 29: All in Place"}, {"step": 30, "steps_text": "I hope this instructable / video was useful and informative.\nIf you liked it, you can support me by liking this Instructable / YouTube video and subscribing for more future content. Feel free to leave any questions about this build.\nThank you, for reading / watching! Till next time! :)\nYou can follow me:\nYouTube: https://www.youtube.com/diyperspective\nInstagram: https://www.instagram.com/diyperspective\nTwitter: https://twitter.com/diyperspective\nFacebook: https://www.facebook.com/diyperspective", "step_imgs": ["https://cdn.instructables.com/F51/L9WW/JS8TFA3K/F51L9WWJS8TFA3K.LARGE.jpg"], "step_title": "Step 30: END"}], "channel": "Computers"}, {"category": "Technology", "description": "This project came to my mind when doing my MEM (Mechanical Engineering Measurement) project, a subject in my B.tech. The idea is to measure the angular velocity of my bicycle's wheel. Thus knowing the diameter and the all time mathematical legend the pi(3.14) the speed can be calculated. Also knowing the number of time the wheel has rotated, the distance traveled can be easily known. As an added bonus, I decided to add a beaklight to my cycle. Now the challenge was to when to turn the brake light. Answer is below.", "title": "DIY Cycle Speedometer", "url": "https://www.instructables.com/id/DIY-Cycle-Speedometer/", "steps": [{"step": 1, "steps_text": "It is very important for this project to have a strong and stable supports. The thought is that the cycle may suffer a heavy impulse when it faces a pot hole or when you decide to have fun and take the cycle on a rough ride. Also, our input is captured when a magnet on the wheel crosses the hall effect sensor on the support. If all things go wrong simultaneously, the arduino will show speeds of a high speed rail. Also you don't want your best friend arduino to fall on road just because you decided to be lazy and use some cheap material\nSo, to be safe, I decided to go with aluminum strips as they can be easily be cut and drilled, corrosion proof and cheap which is always good for DIYing.\nI also used some nuts (with washers) and bolts to fasten them on the frame as they must be securely placed on the chassis. Also this would help if you place the things wrong and have to relocate them.\nAnother important part is that the electronics must be properly isolated from the supports if they are made of any metal like I have made. The hot glue I used worked out just fine as it also absorbs some shock and cushions the display.", "step_imgs": ["https://cdn.instructables.com/FTR/KSLB/JS5C7EVK/FTRKSLBJS5C7EVK.LARGE.jpg", "https://cdn.instructables.com/FWK/1BB2/JS5C7EUS/FWK1BB2JS5C7EUS.LARGE.jpg", "https://cdn.instructables.com/FYT/NWF3/JS5C7EV3/FYTNWF3JS5C7EV3.LARGE.jpg"], "step_title": "Step 1: The Structures"}, {"step": 2, "steps_text": "The measurement and input part of the project relies on this part.The idea is to place a magnet on the cycle wheel and add a hall effect sensor onto the frame so that every time the magnet crosses the sensor, the arduino knows a revolution is completed and it can calculate the speed and the distance.\nThe sensor used here is the classic A3144 hall effect sensor. This sensor pulls its output low when a particular pole faces the correct orientation. The orientation is very important as the outer pole will not effect the output.\nHere are some pictures showing the proper orientation. Also the hall effect sensor requires a 10k pullup resistor. This in my project is substituted with the 20k pull-up resistors in the arduino.\nPlacing the magnet carefully is important. Placing it a little to far can result in inconsistent reading or missing revolutions and placing it very close may result in the magnet touching the sensor which is not very desirable.\nIf you observe carefully, the wheel will be having some tilt with the axis and this will result in crusts and troughs. Try placing the magnet in trough. I personally did not take so much efforts.", "step_imgs": ["https://cdn.instructables.com/FFD/PYDW/JS5C7EVV/FFDPYDWJS5C7EVV.LARGE.jpg", "https://cdn.instructables.com/FSR/2TYD/JS5C7EWD/FSR2TYDJS5C7EWD.LARGE.jpg", "https://cdn.instructables.com/FHR/2Q7F/JS5C7EW3/FHR2Q7FJS5C7EW3.LARGE.jpg"], "step_title": "Step 2: Sensor and the Magnet"}, {"step": 3, "steps_text": "This display is theoretically optional but you need something to display the speed and the distance and sped in real time. Thinking about using a laptop is totally absurd. The display I used is a 0.96 inch OLED display with I2C as teh communication protocol between the slave and the master.\nThe pictures posted show the three modes the arduino automatically switches between.\n1)The one with a small start in the lower left corner is when the arduino has just started and has successfully booted.\n2) The one with km/hr is the speed. This mode is only displayed when the cycle is in motion and automatically goes off once the cycle stops.\n3) The last one with meters (Long live the metric system) as units is obviously the distance the cycle has traveled. Once the cycle stops the arudino switches to display the distance within 3 seconds\nThis system is not perfect. It momentarily displays the distance traveled even when the cycle is in motion. Although this shows an imperfection, I find this one cute.", "step_imgs": ["https://cdn.instructables.com/FDD/MMSO/JS5C7KQ4/FDDMMSOJS5C7KQ4.LARGE.jpg", "https://cdn.instructables.com/FUL/6N6A/JS5C7EVC/FUL6N6AJS5C7EVC.LARGE.jpg", "https://cdn.instructables.com/FUH/34S2/JS5C7EUZ/FUH34S2JS5C7EUZ.LARGE.jpg", "https://cdn.instructables.com/FSH/45OE/JS5C7KQ9/FSH45OEJS5C7KQ9.LARGE.jpg"], "step_title": "Step 3: Display"}, {"step": 4, "steps_text": "The project being a bit bulky, cannot always have a nearby wall outlet available for charging. So I decided to be lazy and simply use a power bank as a power source and use a mini usb cable to connect the usb power of the power bank to the arduino nano.\nBut you need to select the powerbank carefully. It is important to have a proper geometry so that it can easily be fitted. I am simply in love with the power bank I used for such a regular and square geometry.\nAlso the power bank must be a bit dumb. The thing is in order to save power, the power banks are designed to turn off the output if the current draw is not above a certain threshold value. I suspect this threshold to be 200-300 mA at least. Our circuit will have a maximum current draw of not more than 20mA. So, a normal power bank will shut down the output. This may lead you to believe that there is some fault an your circuit. This particular power bank works with such small current draw and this gave me another reason to love this power bank.", "step_imgs": ["https://cdn.instructables.com/F3K/UB6O/JS5C7EVZ/F3KUB6OJS5C7EVZ.LARGE.jpg", "https://cdn.instructables.com/FZZ/R5IL/JS5C7LML/FZZR5ILJS5C7LML.LARGE.jpg"], "step_title": "Step 4: Power Source"}, {"step": 5, "steps_text": "Just as an additional feature, I decided to add a brake light. The question was how would I find if I was breaking. Well it turns out that if I brake the cycle decelerates. This mean that if I calculate the acceleration and if it turns out negative, I can turn on the brake lights. This however means that the lights would turn on even if I just stop pedaling.\nI also did not add a transistor to my light which is totally recommended. If some one does this project and properly integrates this part I would be more than happy to see that and add pictures for that.\nI directly sourced the current from the digital pin 2 of the arduino nano", "step_imgs": ["https://cdn.instructables.com/FN4/2CJP/JS5C7FD0/FN42CJPJS5C7FD0.LARGE.jpg", "https://cdn.instructables.com/FM4/QIM0/JS5C7MFG/FM4QIM0JS5C7MFG.LARGE.jpg"], "step_title": "Step 5: Brakelight (completely Optional)"}, {"step": 6, "steps_text": "As always I wrote the program on Arduino IDE. I initially aimed at logging the parameters onto a sd card. But unfortunately in that case I would have to use three libraries, SD.h, Wire.h and SPI.h. These combined with teh core occupied 84% of the available memory and IDE warned me of the stability issues. However it not too long that the poor nano crashed every time and everything froze after a while. Rebooting resulted in repeating the history.\nSo I scrapped the SD part and commented the lines which were related to the SD card. If someone was able to overcome this problem, I would like to see the changes.\nAlso, I've attached another pdf document in this step in which I have explained the code in detail.\nFeel free to ask questions if any.\nHappy DIYing ;-)", "step_imgs": [], "step_title": "Step 6: The Program"}], "channel": "Arduino"}, {"category": "Technology", "description": "Hi\nIn this project, I have made the power bank with no switches. There are no charging ports on the power bank. It charges wirelessly and transmits wireless power to charge your mobile. This project involves lots of small parts and I have included all the steps involved in this project sequentially. I hope you will love to make one on your own.", "title": "Total Wireless Power Bank", "url": "https://www.instructables.com/id/Total-Wireless-Power-Bank/", "steps": [{"step": 1, "steps_text": "I have used 4000 mAh Lipo batteries for collecting the charge in power bank.", "step_imgs": ["https://cdn.instructables.com/FRN/CCS1/JS5CF3KU/FRNCCS1JS5CF3KU.LARGE.jpg"], "step_title": "Step 1: Two 4000 MAh Batteries for the Power Bank"}, {"step": 2, "steps_text": "I have connected two charge receiver boards in parallel to boost the charging current to 2 amps to charge the batteries. I have also added charge receiver board in parallel to the input of BMS boards. This board will receive power form wireless charging plate made for it and it would be charging the batteries. The set comes with Tx and Rx. It charges batteries at about 2 Amp.", "step_imgs": ["https://cdn.instructables.com/FUS/LVPM/JS5CF3GZ/FUSLVPMJS5CF3GZ.LARGE.jpg", "https://cdn.instructables.com/FG0/PRW7/JS5CF3E5/FG0PRW7JS5CF3E5.LARGE.jpg", "https://cdn.instructables.com/FG4/T096/JS5CF3OR/FG4T096JS5CF3OR.LARGE.jpg"], "step_title": "Step 2: Connecting Two Charge Modules in Parallel With Charge Receiver"}, {"step": 3, "steps_text": "I have connected batteries in parallel to the output of BMS boards. Transmitter board with the coil is also connected to the output of the batteries. This board is capable of delivering Qi wireless charger standard output wirelessly to any phone with wireless charge functionality. Just with the input of the battery voltage of 3.6v. to 5v. the output will be 5v wireless Qi standard. Max charging current for the phone is about 1 Amp typical.", "step_imgs": ["https://cdn.instructables.com/FWT/2DMV/JS5CF3OU/FWT2DMVJS5CF3OU.LARGE.jpg", "https://cdn.instructables.com/FVU/DLAD/JS5CF3OT/FVUDLADJS5CF3OT.LARGE.jpg", "https://cdn.instructables.com/FRS/QZ75/JS5CF3OS/FRSQZ75JS5CF3OS.LARGE.jpg"], "step_title": "Step 3: Connecting Output of Charging Boards in Parallel and Adding Batteries + Charge TX Board"}, {"step": 4, "steps_text": "I have used a micro USB port breakup board. A charge TX board is connected to micro USB port output as shown in the figure.", "step_imgs": ["https://cdn.instructables.com/FG4/SDNX/JS5CF3EZ/FG4SDNXJS5CF3EZ.LARGE.jpg", "https://cdn.instructables.com/F6Q/UQOB/JS5CF3JQ/F6QUQOBJS5CF3JQ.LARGE.jpg", "https://cdn.instructables.com/FX3/S312/JS5CF3O9/FX3S312JS5CF3O9.LARGE.jpg"], "step_title": "Step 4: Making Charge Plate for Power Bank Charging"}, {"step": 5, "steps_text": "I have connected the regular phone charger to the input of micro USB port we connected to the TX board in the previous step. Then placed a charge receiver coil on to the charge TX coil and voila the batteries started charging wirelessly.", "step_imgs": ["https://cdn.instructables.com/FRR/FRZ1/JS5CF3MN/FRRFRZ1JS5CF3MN.LARGE.jpg"], "step_title": "Step 5: Testing Wireless Charge Functionality of Charging the Bank"}, {"step": 6, "steps_text": "I have fixed power bank charging circuit into the empty shell of old wireless charger base plate. This will charge our power bank wirelessly. Note here that wireless charge receiver and charger 2Amp is a combo circuit board and it can work with each other only it's not universally compatible with Qi wireless charge system.", "step_imgs": ["https://cdn.instructables.com/FU9/G5LW/JS5CF3M7/FU9G5LWJS5CF3M7.LARGE.jpg", "https://cdn.instructables.com/FHK/O1GI/JS5CF3MO/FHKO1GIJS5CF3MO.LARGE.jpg"], "step_title": "Step 6: Fixing Power Bank Charge Transmitter Circuit in Empty Shell"}, {"step": 7, "steps_text": "Our assembly tested earlier is stuffed up into the empty plastic box which will be our wireless power bank. Sadly though I do not have access to the 3D printer yet but you can print a customized plastic shell for the same. See I have placed the power bank on to the charging dock and both the blue LEDs are showing that the power bank is fully charged and is ready to be used for charging any wireless compatible phone. I have not used any switch as it's not required because charging circuit board does not drain power in reverse and charge dissipator board cuts off power after one minute if it does not find any wireless device in its vicinity.", "step_imgs": ["https://cdn.instructables.com/FN8/PSQ1/JS5CF3NS/FN8PSQ1JS5CF3NS.LARGE.jpg", "https://cdn.instructables.com/FX3/CI97/JS5CF3LA/FX3CI97JS5CF3LA.LARGE.jpg"], "step_title": "Step 7: Stuffing Everything Into a Plastic Transparent Box"}, {"step": 8, "steps_text": "See I launched the ampere app on my wireless charge capable mobile and the app shows that the wireless power bank is charging the phone at about 640mAh and the peak current goes up to 1 Ampere which is quite decent according to me.\nI hope you loved this instructable and are tempted to making one for your self. Thanks for your time reading this instructable.", "step_imgs": ["https://cdn.instructables.com/FXI/HBXC/JS5CF3MP/FXIHBXCJS5CF3MP.LARGE.jpg"], "step_title": "Step 8: Wireless Power Bank Charging the Phone"}], "channel": "Electronics"}, {"category": "Technology", "description": "The RF signal generator is a must to have tool when playing with radio receivers. It is used to tune a resonant circuits and adjust the gain of different RF stages. Very useful feature of the RF Signal generator is its modulation capability. If it can modulate the frequency amplitude or frequency makes it non replaceable tool for RF design works.\nSome time ago I have designed an AM modulator, which could be used for such purposes. It works fine in some cases, but it has the disadvantage to be not able to work as standalone device. It requires additionally power supply module and two signal generators - for the RF carrier frequency and for the modulating signal. This makes it inconvenient to work with it outside the house. I decided to create an RF signal generator working as fully functional stand alone device. Instead to base the architecture on the modern DDS chip, I decided to use the analog approach. As a basis I have chose an existing RF signal generator published here. Similar design is described also here. The credits for this design go to their authors. I repeated mainly the first design adding additional digital frequency counter instead the not very precisely radial scale analog calibration.\nI will not go deep inside the circuit explanation - you can visit the links above and read all you need there.\nI will show step by step instruction how to reproduce the design with minimum efforts and errors rate.", "title": "RF Signal Generator", "url": "https://www.instructables.com/id/RF-Signal-Generator/", "steps": [{"step": 1, "steps_text": "I took the circuit without changes from the site linked before.\nFor the PCB I used the toner transfer method and the picture attached here. Because the circuit does not contain any chips the image can be mirrored or can be printed without mirroring. The scale is also not very important.\nAfter the finishing of the PCB I started the soldering. Firstly I soldered the low frequency oscillator (Tr3, TR4, TR5) and the surrounding devices. It has to oscillate at some sound frequency, but it did not. I played a little with it and found that shorting the R15 resistors brings the circuit in oscillations ( that is the green wire on the picture instead 100 Ohm resistance). If your circuit makes a sound with this resistor - you can leave it there.\nAfter that I have soldered the RF generator part. To test it functionality I used two fixed capacitors 200 pF and two chokes 200uH instead the dual variable capacitor and the inductors bank. I saw that the RF generator works fine and produces AM modulated output signal. As described in the sources there is also some frequency modulation observed at the output signal.\nFor the supply I used 15V transformer salvaged from some old device. It had only single secondary winding and I used a bridge rectifier module, instead the two diodes shown in the original circuit.\nAs a frequency counter I intended to use this DIY kit.", "step_imgs": ["https://cdn.instructables.com/FSY/WGXJ/JS5C37YD/FSYWGXJJS5C37YD.LARGE.gif", "https://cdn.instructables.com/F7N/YLUV/JS5C37YP/F7NYLUVJS5C37YP.LARGE.gif", "https://cdn.instructables.com/F33/RX8T/JS5C37YE/F33RX8TJS5C37YE.LARGE.gif", "https://cdn.instructables.com/FE1/0NZL/JS5C37S6/FE10NZLJS5C37S6.LARGE.jpg", "https://cdn.instructables.com/FOP/1X9U/JS5C36ZO/FOP1X9UJS5C36ZO.LARGE.jpg", "https://cdn.instructables.com/FF4/15US/JS5C36ZQ/FF415USJS5C36ZQ.LARGE.jpg", "https://cdn.instructables.com/F9Z/QO1G/JS5C36ZN/F9ZQO1GJS5C36ZN.LARGE.jpg", "https://cdn.instructables.com/FPF/IQ2G/JS5C36ZS/FPFIQ2GJS5C36ZS.LARGE.jpg", "https://cdn.instructables.com/FG3/1LYD/JS5C36ZR/FG31LYDJS5C36ZR.LARGE.jpg", "https://cdn.instructables.com/FK2/F8OJ/JS5C36ZT/FK2F8OJJS5C36ZT.LARGE.jpg"], "step_title": "Step 1: The Circuit and the PCB"}, {"step": 2, "steps_text": "For the RF frequency tuning two main parts are needed:\nVariable dual capacitor\nSwitchable inductor bank\nThe capacitor I ordered in aliexpress.\nThe inductive bank I mastered around this switch - I used a thick copper wire, which I bended in a ring (open), and I have soldered five pairs of chokes with different values (for reference see the circuit). As a holder for the bank I used a right angle metal plate bought from the local store. For the axle extension of the variable capacitor I used a 5mm brass rod and Brass Motor Shaft Coupling (5mm to 6mm).", "step_imgs": ["https://cdn.instructables.com/FB8/MXPF/JS5C36ZK/FB8MXPFJS5C36ZK.LARGE.jpg", "https://cdn.instructables.com/FID/IMWI/JS5C36ZL/FIDIMWIJS5C36ZL.LARGE.jpg", "https://cdn.instructables.com/FRF/PGBS/JS5C374I/FRFPGBSJS5C374I.LARGE.jpg", "https://cdn.instructables.com/FPG/TMP1/JS5C3760/FPGTMP1JS5C3760.LARGE.jpg", "https://cdn.instructables.com/F85/YB7T/JS5C377I/F85YB7TJS5C377I.LARGE.jpg", "https://cdn.instructables.com/FZN/OVWZ/JS5C3790/FZNOVWZJS5C3790.LARGE.jpg", "https://cdn.instructables.com/F4C/VKVZ/JS5C37AL/F4CVKVZJS5C37AL.LARGE.jpg", "https://cdn.instructables.com/FIZ/LBNS/JS5C37AM/FIZLBNSJS5C37AM.LARGE.jpg"], "step_title": "Step 2: Resonant Circuit Parts"}, {"step": 3, "steps_text": "For the housing I used a nice plastic project box.To reduce the EMI I decided to cover the internal walls of the box with a copper conducting tape. I have glued the power transformer in the corner of the box using epoxy glue. On the back wall I have mounted a power switch and a fuse holder. The power cord I mounted through a gummy grommet and fixed it strongly with hot glue. I covered the bottom of the box shell with the copper tape. On the secondary transformer winding wires I put connectors to be able easy to connect/reconnect the power when experimenting.", "step_imgs": ["https://cdn.instructables.com/FWT/BG94/JS8UE75T/FWTBG94JS8UE75T.LARGE.jpg", "https://cdn.instructables.com/FOT/P8P4/JS5C36ZV/FOTP8P4JS5C36ZV.LARGE.jpg", "https://cdn.instructables.com/FCA/NBMY/JS5C36ZZ/FCANBMYJS5C36ZZ.LARGE.jpg", "https://cdn.instructables.com/FMM/1T0K/JS5C3700/FMM1T0KJS5C3700.LARGE.jpg", "https://cdn.instructables.com/FO5/1918/JS5C371I/FO51918JS5C371I.LARGE.jpg", "https://cdn.instructables.com/FG9/9F2Y/JS5C37BC/FG99F2YJS5C37BC.LARGE.jpg", "https://cdn.instructables.com/F2T/PCC4/JS5C3730/F2TPCC4JS5C3730.LARGE.jpg", "https://cdn.instructables.com/FRE/UBMZ/JS5C37BD/FREUBMZJS5C37BD.LARGE.jpg"], "step_title": "Step 3: Housing and Power Supply"}, {"step": 4, "steps_text": "To fix the main board I used M3 nuts, M3 brass spacers and M3 bolts.\nThe tuning capacitor and the inductor bank I also fixed with bolts (M4).", "step_imgs": ["https://cdn.instructables.com/FLF/N400/JS5C37P3/FLFN400JS5C37P3.LARGE.jpg", "https://cdn.instructables.com/FJJ/VRYK/JS5C37TP/FJJVRYKJS5C37TP.LARGE.jpg", "https://cdn.instructables.com/FEX/GQC4/JS5C36ZU/FEXGQC4JS5C36ZU.LARGE.jpg", "https://cdn.instructables.com/FP2/ZFJ2/JS5C37V7/FP2ZFJ2JS5C37V7.LARGE.jpg"], "step_title": "Step 4: Mounting of the Main Board"}, {"step": 5, "steps_text": "To fix strongly the counter board at the proper distance I decided to use a plastic spacer frame produced by 3D printer - the file spacer.stl can be used for this purpose. In the four corners of the frame I inserted and fixed with epoxy glue 20mm M3 bolts. I glued the frame strongly. A windows for the counter LED display was cut. All needed holes for the knobs were also cut. The devices in the marked in grey area in the schematics I decided to mount directly on the front panel additionally to the frequency counter board. I fixed the potentiometer and the peripheral devices on the front panel. As output connector I used BNC type one. If you prefer to use such type of potentiometers, you can print the file pot_holder.stl and use the part to fix the potentiometer. To fix more stronger the axle extension rod I used also 3D printed bushing glued on the front panel (bushing.stl). To make the look of the counter LED display better I put a piece of blue transparent plastic sheet in the front of it and I fixed the whole counter board with nuts.In the left part of the front panel i placed an audio jack for the external low frequency source input. The switch SW2 is also placed near it. When external audio source is not connected and this switch is turned in bottom position - the RF generator produces non-modulated pure sine signal. I would suggest - to set precisely the carrier frequency - first to start the RF generator in this mode, to adjust the frequency and after that to switch on the modulation.", "step_imgs": ["https://cdn.instructables.com/FCI/69VG/JS5C36ZM/FCI69VGJS5C36ZM.LARGE.jpg", "https://cdn.instructables.com/FAM/23V6/JS5C37CV/FAM23V6JS5C37CV.LARGE.jpg", "https://cdn.instructables.com/FWM/PG5G/JS5C37CW/FWMPG5GJS5C37CW.LARGE.jpg", "https://cdn.instructables.com/FOC/4YBA/JS8UEGCG/FOC4YBAJS8UEGCG.LARGE.gif", "https://cdn.instructables.com/F9D/9GSF/JS5C37J2/F9D9GSFJS5C37J2.LARGE.jpg", "https://cdn.instructables.com/FQI/RRQT/JS5C37KK/FQIRRQTJS5C37KK.LARGE.jpg", "https://cdn.instructables.com/FME/GJ3Q/JS5C37M3/FMEGJ3QJS5C37M3.LARGE.jpg", "https://cdn.instructables.com/FLX/Z47Y/JS5C37NL/FLXZ47YJS5C37NL.LARGE.jpg", "https://cdn.instructables.com/F3D/OP84/JS5C37FY/F3DOP84JS5C37FY.LARGE.jpg", "https://cdn.instructables.com/F0G/3JB3/JS5C37HK/F0G3JB3JS5C37HK.LARGE.jpg", "https://cdn.instructables.com/FRI/Y7PH/JS5C37WR/FRIY7PHJS5C37WR.LARGE.jpg"], "step_title": "Step 5: Front Panel Works"}, {"step": 6, "steps_text": "The output signal of the RF generator is an analog sine (AM modulated or not modulated ) signal. At high frequencies its amplitude decreases a lot. To be able to measure the frequency of the signal with the frequency counter a pre-amplifier / signal form shaper is needed. I took the circuit presented here and soldered it on small perfoboard. The voltage generated by the 7805 chip I used to supply also the counter board. This assembling was working fine at low frequencies (less than 2Mhz), but at frequencies above these was failing.I have added another amplification stage (marked in red on the second circuit attached), but it did not improve a lot the situation.\nI decided to change totally the approach.", "step_imgs": ["https://cdn.instructables.com/FXC/1VV8/JS5C36ZD/FXC1VV8JS5C36ZD.LARGE.jpg", "https://cdn.instructables.com/FPV/AJBZ/JS5C37WW/FPVAJBZJS5C37WW.LARGE.jpg", "https://cdn.instructables.com/F8Q/Z7CT/JS8UEWMQ/F8QZ7CTJS8UEWMQ.LARGE.jpg", "https://cdn.instructables.com/FGZ/K6EB/JS5C37WS/FGZK6EBJS5C37WS.LARGE.jpg", "https://cdn.instructables.com/FCW/FRGJ/JS5C37WT/FCWFRGJJS5C37WT.LARGE.jpg", "https://cdn.instructables.com/FR5/FYGG/JS5C37WZ/FR5FYGGJS5C37WZ.LARGE.jpg"], "step_title": "Step 6: Interface Analog - Digital"}, {"step": 7, "steps_text": "I decided to use high speed dual amplifier. First stage - inverting amplifier with gain ~ 20 (you can play with the gain reaching the best performance) and second stage - voltage comparator. The purpose of the first stage is to amplify and filter the signal, the purpose of the second stage - to produce a digital levels input signal for the counter. I have chosen to use the TI dual high speed R2R input/output amplifier LM6172 - 100MHz unity bandwidth and 3000V/us slew rate !!!. You can see the schematic in the pdf file. The \"Eagle\" files are also attached. On the picture the bare PCB looks larger as it is. That is because the PCB contains two separate boards for two different projects. The PCB was produced in JLCPCB only for two USD. The results with this pre-amplifier board were much better - the frequency measurements were functional upon frequencies of 5 Mhz.", "step_imgs": ["https://cdn.instructables.com/FY0/4DHY/JS5C37X0/FY04DHYJS5C37X0.LARGE.jpg", "https://cdn.instructables.com/FP6/2TYJ/JS5C37X2/FP62TYJJS5C37X2.LARGE.jpg", "https://cdn.instructables.com/FXP/VK9N/JS5C37X4/FXPVK9NJS5C37X4.LARGE.jpg"], "step_title": "Step 7: The Preamp-comparator"}, {"step": 8, "steps_text": "On the pictures and the video you can see the fully assembled device and the signal waveforms captured by a digital oscilloscope. The achieved parameters depend on the resonant circuit parts values. In the sites describing the original designs are given tables - list pf inductor values amd corresponding frequency ranges. I put inductors with values shown in the attached circuit and here are the frequency ranges, which the RF generator covers:\n173 kHz - 456 kHz\n388 kHz - 1088 kHz\n862 kHz - 2600 kHz\n1828 kHz - 4950 kHz\n3818 kHz - 5380 kHz\nIt can be seen that there is overlap between the sub-ranges - no empty frequency band exists. Using smaller inductor values could help to reach higher frequencies. As written in the sources - the theoretical highest frequency possible could be over 12 000 kHz.\nAs suggestion for the people, who want to try to repeat this design - do not strictly follow this guide. May be this implementation is not the best - Because the counter board is big and the resonant circuit parts bulky - the control knobs are put close one to another. May be better solution should be to put the counter board in the middle and the turning knobs from its both sides. I will recommend to try to keep all interconnection wires as short as possible. The ground wires also. I tried to use star type connection for the ground wires, but it is difficult always to be realized. As seen on the pictures the copper conductive tape is used also as global ground and shield - the different copper areas on different housing walls are joined together and soldered on multiple places.\nThere was a comment from Killawhat that exactly this counter is not the best solution - he has tried also it and found some problems. May be you should give some more bucks and will use better one. It should be possible also to scale the main PCB, and use 78L15 when the potentiometer is not soldered directly on the board. This could make the mechanical design easier and allow reaching higher working frequencies because of the reduced parasitic inductances and capacitors. The main idea - use you fantasy and creativity and the pleasure of the creation will accompany you. Good luck.", "step_imgs": ["https://cdn.instructables.com/FTY/7LI6/JS5C37XF/FTY7LI6JS5C37XF.LARGE.jpg", "https://cdn.instructables.com/FZ4/ZJEZ/JS5C37YB/FZ4ZJEZJS5C37YB.LARGE.jpg", "https://cdn.instructables.com/FIX/43SE/JS5C36YZ/FIX43SEJS5C36YZ.LARGE.jpg", "https://cdn.instructables.com/FXE/PF5T/JS5C36YS/FXEPF5TJS5C36YS.LARGE.jpg"], "step_title": "Step 8: In Work"}], "channel": "Tools"}, {"category": "Technology", "description": "After discovering Cew27'sCmoy Headphone Amp a few months ago on Instructables, I've been inspired to build my own.\nI was also inspired by Koogars amazing Crystal CMoy Free Form Headphone Amplifier which I have been admiring for a few years now. I even did a bunch of projects using resin because of this project!\nThis is my second headphone amp build \u2013 my first can be found here. What I really like about this one compared to the first build is a couple of things. Firstly, it\u2019s a simpler build and only needs one IC to run it, and second, you don\u2019t have to worry about separating the input and output grounds as I did with the first build.\nAlso, in my opinion it has better sound quality then the first build and seems more stable. There is still a small amount of interference sometimes if your mobile isn\u2019t switched to air plane mode, but I don\u2019t think this is really avoidable. Once your phone is on air plane mode, there is no detectable interference and the amp works perfectly.\nYou might be asking yourself right about now, what the hell is a headphone amp and why do I need one! Your phone doesn\u2019t really have the power to drive a pair of headphones. You can here this when you listen to music through your phone speakers, the sound sounds flat and has no real range. When you plug your headphones into a separate amp, you\u2019ll be astonished at the level of audible improvement in clarity, detail and dynamics you get out of your speakers.\nSo without further ado \u2013 let\u2019s get cracking", "title": "Make a Headphone Amp V2", "url": "https://www.instructables.com/id/Make-a-Headphone-Amp/", "steps": [{"step": 1, "steps_text": "The amp is built using op amp 5534. The op amp is a low-distortion, low-noise device, which can drive low-impedance loads to a full voltage swing while maintaining low distortion. Furthermore, it is fully output short-circuit proof. I\u2019ve included the datasheet on the op amp in case anyone is interested.\nThe other positives about this op amp is it\u2019s cheap, you only need 1 for the circuit and you don\u2019t have to worry about virtual grounds or trying to separate the input and output grounds.\nAlso, when you first look at the schematic it might seem that there are 2 op amp IC\u2019s. There is actually only one and is done this way so it is easier to design.\nThe end result is a high quality, high performance portable device that is relatively easy to build and will change the way you listen to music from your phone.", "step_imgs": ["https://cdn.instructables.com/FHA/BVCX/JRV8AYKU/FHABVCXJRV8AYKU.LARGE.jpg", "https://cdn.instructables.com/FA5/YBTR/JS0ON55X/FA5YBTRJS0ON55X.LARGE.jpg"], "step_title": "Step 1: About the Amp Circuit I Choose to Build"}, {"step": 2, "steps_text": "First thing to do is to take a good look at the circuit design and breadboard it to make sure it works for you.\nNOTE \u2013 Although it might look like there are 2 IC's in the schematic, it's actually only one which has been split. This allows for a clearer schematic\nSteps:\n1. Solder the 8 pin socket into the prototype board. Make sure you give yourself enough room on either side if the socket, you can always trim the prototype board later once you have finished the circuit\n2. Solder one of the 68K resistors to pins 1 and 2 and also another to pins 6 and 7\n3. Solder a 22pf cap to exactly the same pins", "step_imgs": ["https://cdn.instructables.com/FHA/BVCX/JRV8AYKU/FHABVCXJRV8AYKU.LARGE.jpg", "https://cdn.instructables.com/FWZ/D4RQ/JRQOOXWX/FWZD4RQJRQOOXWX.LARGE.jpg", "https://cdn.instructables.com/FNK/879H/JRQOOXX5/FNK879HJRQOOXX5.LARGE.jpg", "https://cdn.instructables.com/FGD/3M66/JRQOOXX7/FGD3M66JRQOOXX7.LARGE.jpg"], "step_title": "Step 2: Making the Circuit - Part 1"}, {"step": 3, "steps_text": "Parts:\nIt might seem like you need a lot of parts buts most can be purchased in bulk and if you already mess about with electronics then you will probably have most of the components already.\n1. 10K duel gang Potentiometer \u2013 eBay\n2. Potentiometer knob - eBay\n3. 2 X 18K Resistor \u2013 metal film \u2013 eBay\n4. 4 X 68K resistor \u2013 metal film \u2013 eBay\n5. 47K resistor - eBay\n6. 5mm LED \u2013 eBay\n7. NE5532 IC \u2013 eBay (10 IC's for just over a dollar!)\n8. 8 pin socket holder - eBay\n9. SPDT switch - eBay\n10. 3 X 4.7uf capacitor \u2013 eBay\n11. 2 X 22pf ceramic capacitor \u2013 eBay\n12. 3 X 220uf capacitor \u2013 eBay\n13. 2 X 3.5mm stereo jack socket \u2013 eBay\n14. Prototype board - eBay\n15. 9v battery holder - eBay\n16. 9v battery\n17. Wires\n18. Case. I used a small tin case - check out eBay if you want to use one similar. You could use a tobacco tin or an altoids tin or something similar - eBay\n19. You\u2019ll also need a male to male 3.5mm cord - eBay\nTools\n1. Drill\n2. Soldering iron\n3. Pliers\n4. Wire cutters\n5. The usual, basic tools that you have in your tool box", "step_imgs": ["https://cdn.instructables.com/FLB/UNJS/JRQOOXN7/FLBUNJSJRQOOXN7.LARGE.jpg", "https://cdn.instructables.com/FA5/YBTR/JS0ON55X/FA5YBTRJS0ON55X.LARGE.jpg", "https://cdn.instructables.com/FFH/2VWY/JS8TOMFT/FFH2VWYJS8TOMFT.LARGE.jpg"], "step_title": "Step 3: Tools and Parts"}, {"step": 4, "steps_text": "As you are building the circuit, you\u2019ll start to run out of\nroom quickly on pins 2 and 3 on the IC. Just make sure that you try and make room for all of the components.\nSteps:\n1. Next, you need to add the 220uf capacitors for the output socket.\n2. Solder the positive leg on the cap to pin 1 on the IC. Solder the ground leg to a solder point on the prototype board that is open\n3. Solder the positive leg on another 220uf cap to pin 7 on the IC. Again, solder the ground leg to a solder point that is open\n4. Pin 3 needs to have 3 components attached to it. 2 68K resistors need to be connected to pin 3. One then needs to be connected to ground and the other positive.\n5. Next, you need to add a 4.7uf cap. Solder the positive leg to pin 3 and the ground leg to ground on the prototype board\nSee I told you it starts to get a little squashy on the board", "step_imgs": ["https://cdn.instructables.com/FQ3/RPI2/JRQOOXX9/FQ3RPI2JRQOOXX9.LARGE.jpg", "https://cdn.instructables.com/F9D/BHMQ/JRQOOXXF/F9DBHMQJRQOOXXF.LARGE.jpg", "https://cdn.instructables.com/F08/OFSN/JRQOOXY8/F08OFSNJRQOOXY8.LARGE.jpg"], "step_title": "Step 4: Making the Circuit - Part 2"}, {"step": 5, "steps_text": "Steps:\n1. Solder an 18k resistor to pin 2 on the IC. The other leg solder to an open solder point on the prototype board\n2. Next, solder the positive leg of a 4.7uf cap to the other leg of the 18k resistor. The other leg solder to a spare solder point on the board. This will later be connected to the potentiometer and output section of the amp.\n3. Now you need to do the same thing for the other channel on your headphones. This time, add a 18K resistor to pin 6 on the IC. The ground leg on the cap solder to an open solder point on the prototype board\n4. Solder the positive leg from a 4.7uf cap to the other leg of the 18K resistor \u2013 same as pin 2. Solder the ground leg to an open solder point on the prototype board\n5. Connect pin 4 to ground\n6. Connect pin 8 to positive\n7. You also need to connect pins 3 and 5 together. I do this underneath the circuit with a\nresistor leg.", "step_imgs": ["https://cdn.instructables.com/FP5/R75D/JRQOOXYB/FP5R75DJRQOOXYB.LARGE.jpg", "https://cdn.instructables.com/F5F/GROK/JRQOOXYH/F5FGROKJRQOOXYH.LARGE.jpg", "https://cdn.instructables.com/FDU/PNFQ/JRQOOXYK/FDUPNFQJRQOOXYK.LARGE.jpg", "https://cdn.instructables.com/FEP/GGJB/JRQOOXZD/FEPGGJBJRQOOXZD.LARGE.jpg", "https://cdn.instructables.com/FQI/K43U/JRQOOXZI/FQIK43UJRQOOXZI.LARGE.jpg"], "step_title": "Step 5: Making the Circuit - Part 3"}, {"step": 6, "steps_text": "That\u2019s all of the components connected. I later decided to add an LED as well so just follow the below if you want to do this as well.\nSteps:\n1. First connect both the ground and positive bus strips on the prototype board with some wire\n2. Next, add 4 lengths of wire to ground bus strip\n3. Add a couple of wires to the ground legs on the 4.7uf caps\n4. Do the same to the ground legs on the 220uf caps\n5. You also need to add a wire to each of the positive and ground bus strips for power\n6. If you want to add an LED \u201con\u201d indicator, solder a 20k resistor to ground and then to a spare solder point. Solder a wire to the other end of the resistor.\n7. Lastly, trim the circuit board to size.\nThat\u2019s it for the board, now it\u2019s time to build the case", "step_imgs": ["https://cdn.instructables.com/FYI/DHGV/JRQOOXZK/FYIDHGVJRQOOXZK.LARGE.jpg", "https://cdn.instructables.com/FH0/MZPT/JRQOOXZL/FH0MZPTJRQOOXZL.LARGE.jpg", "https://cdn.instructables.com/FKZ/JRGO/JRQOOXZM/FKZJRGOJRQOOXZM.LARGE.jpg", "https://cdn.instructables.com/FGU/CY6Y/JRQOOY0D/FGUCY6YJRQOOY0D.LARGE.jpg", "https://cdn.instructables.com/FD5/B6UR/JRQOOY0I/FD5B6URJRQOOY0I.LARGE.jpg", "https://cdn.instructables.com/FC2/3BIQ/JRQOOY0K/FC23BIQJRQOOY0K.LARGE.jpg"], "step_title": "Step 6: Making the Circuit - Part 4"}, {"step": 7, "steps_text": "Picking the right case in my opinion, is just as important as getting the electronics working. It took me awhile to find just the right tin for this project, which a friend actually gave to me. Initially I made a couple of different ones out of wood but I didn\u2019t go with a wood case in the end as it just wasn\u2019t working for me.\nIf you are looking for an old tin case, then you can always try eBay. Just type in Tobacco tin and you\u2019ll come across heaps of them. You can also use an Altoids tine which you can now buy in many different designs\nSteps:\n1. The most important thing about finding the right case is to ensure that you will be able to fit the battery and circuit inside. You\u2019ll also need to add a couple of 3.5mm sockets, a switch and a volume pot to it so make sure you have a little wiggle room for all of the components\n2. Place the circuit inside the case and if necessary, trim the edges so you can push it right up against the side of the case\n3. If everything fits ok then you can start to drill all of the holes needed to add the components", "step_imgs": ["https://cdn.instructables.com/F5X/QTA7/JRQOOXN8/F5XQTA7JRQOOXN8.LARGE.jpg", "https://cdn.instructables.com/F3O/IM4Y/JRQOOXNQ/F3OIM4YJRQOOXNQ.LARGE.jpg", "https://cdn.instructables.com/FQL/2TZ4/JRQOOXNR/FQL2TZ4JRQOOXNR.LARGE.jpg"], "step_title": "Step 7: Pick a Case"}, {"step": 8, "steps_text": "As there isn\u2019t much room in the case, you will need to really think about where you add all of the axillary components. Don\u2019t just start drilling holes into the case, place the circuit and battery inside it and think about the best spots to add the sockets etc. Remember, the amp will probably sit in your pockets so you need to think about having the sockets facing up etc.\nSteps\n1. Drill 2 holes for the 3.5mm sockets. Try to put these close together and have them so if the case is in your pocket, they will be facing upwards.\n2. Drill a hole for the SPDT switch\n3. Drill a hole for the potentiometer\n4. You can\u2019t see it in the images, but you also need to drill a small hole for the LED. Try to get this as close to the switch as possible.\n5. Once all of the holes are drilled, you can then add all of the auxiliary parts to the case.", "step_imgs": ["https://cdn.instructables.com/F7G/DPPB/JRQOOXNU/F7GDPPBJRQOOXNU.LARGE.jpg", "https://cdn.instructables.com/F7P/6K1A/JRQOOXO1/F7P6K1AJRQOOXO1.LARGE.jpg", "https://cdn.instructables.com/FZB/M1MA/JRQOOXNW/FZBM1MAJRQOOXNW.LARGE.jpg", "https://cdn.instructables.com/FV9/I2N2/JRQOOXO2/FV9I2N2JRQOOXO2.LARGE.jpg", "https://cdn.instructables.com/FR6/YUFI/JRQOOXOU/FR6YUFIJRQOOXOU.LARGE.jpg", "https://cdn.instructables.com/FBH/EP61/JRQOOXPL/FBHEP61JRQOOXPL.LARGE.jpg"], "step_title": "Step 8: Adding the Auxiliary Parts to the Case"}, {"step": 9, "steps_text": "It\u2019s now time to solder the wires from the circuit board to the auxiliary parts on the case. This can be a little fiddly, especially if you gave a small case. Wires take up a surprising amount of room so make sure you trim them as much as you can before attaching them. You want to make sure though that you can lift the circuit board up and check underneath and problem solve if necessary.\nSteps:\n1. Place the circuit board into the case\n2. Using the schematic as a reference, solder each wire to the corresponding component.\n3. Trim the wires beforehand though and make sure that they are as short as possible. This helps to reduce the space wires take-up and can help with better sound quality (the less the distance between components, the shorter the signal has to travel.\n4. Once you have everything connected, you are ready to test. Plug in a battery and turn on the switch. If the LED come on then that\u2019s the first good sign. Now add a lead to the input and plug it into your phone (or MP3 player)\n5. Plug your headphones into the output socket and play some music. Make sure, though you don\u2019t have the volume turned right up on the amp.\n6. If you can hear music, congrats you managed to make the circuit without any mistakes. If you hear nothing, then you\u2019ll need to troubleshoot.\nTroubleshooting\n1. Check the solder joins on the prototype board and make sure none are cross soldered\n2. Double check the wiring to the components and make sure that these are wired-up correctly.\n3. If you only hear out of one speaker, check that you have connected the sockets correctly. Usually, the larger solder lug on the socket is ground. The other 2 are either the inputs or outputs. It doesn\u2019t matter though in what order you wire these up to the prototype board. Also, make sure you have connected pins 3 and 5 together or only 1 speaker will work.\n4. Make sure that you have connected the IC correctly. I managed to connect pin 8 to ground instead of positive.", "step_imgs": ["https://cdn.instructables.com/FNU/4KIO/JRQOOXPP/FNU4KIOJRQOOXPP.LARGE.jpg", "https://cdn.instructables.com/FHR/AQDS/JRQOOXPV/FHRAQDSJRQOOXPV.LARGE.jpg", "https://cdn.instructables.com/FW4/RB06/JRQOOXPW/FW4RB06JRQOOXPW.LARGE.jpg", "https://cdn.instructables.com/FF5/WIPU/JRQOOXQ5/FF5WIPUJRQOOXQ5.LARGE.jpg", "https://cdn.instructables.com/F9C/1LWZ/JRQOOXQ7/F9C1LWZJRQOOXQ7.LARGE.jpg", "https://cdn.instructables.com/FW0/H6GD/JRQOOXQI/FW0H6GDJRQOOXQI.LARGE.jpg", "https://cdn.instructables.com/FDW/EXUP/JRQOOXS6/FDWEXUPJRQOOXS6.LARGE.jpg", "https://cdn.instructables.com/FFE/HKPA/JRQOOXS3/FFEHKPAJRQOOXS3.LARGE.jpg"], "step_title": "Step 9: Wiring-up the Circuit and Toubleshooting"}, {"step": 10, "steps_text": "", "step_imgs": [], "step_title": "Step 10:"}], "channel": "Speakers"}, {"category": "Technology", "description": "Kaleidoscopes create impressive visual displays by simply turning a knob. Here is a great design by randofo. Colorful displays can also be created with diffraction gratings. The visuals become even more stunning when you turn one diffraction grating in front of another: here is a video with lasers. This gave me the idea to create a diffraction grating kaleidoscope that makes it easy to turn the diffraction gratings for beautiful light patterns. One thing that makes the device different than usual kaleidoscopes is that it generates different patterns depending on the light source you are looking at.", "title": "Diffraction Grating Kaleidoscope", "url": "https://www.instructables.com/id/Diffraction-Grating-Kaleidoscope/", "steps": [{"step": 1, "steps_text": "Materials\n1. Two sheets 3mm thick 12\" x 12\" plywood: https://www.amazon.com/gp/product/B07H3CGLQ8/ref=p...\n2. Two double axis diffraction gratings: https://www.amazon.com/gp/product/B0074R38RY/ref=p...\n3. Super glue\n4. Wax\nTools\n1. Laser cutter\n2. Scissors", "step_imgs": ["https://cdn.instructables.com/F7M/J7MR/JS5C839G/F7MJ7MRJS5C839G.LARGE.jpg"], "step_title": "Step 1: Supply List"}, {"step": 2, "steps_text": "The chassis was designed in Fusion 360 so it could be cut with a laser cutter. Layers stack together and are held in place with arms along the outside of the device. The diffraction gratings are mounted to a disc that spins in a channel within the device. Most layers have a number on them to indicate the order in which they are stacked. Use the above pdfs and a laser cutter to cut out the layers. Some of the joints and the use of wax for sliding parts was inspired by UGears designs. This idea could also be adapted for 3D printing.", "step_imgs": ["https://cdn.instructables.com/FFY/PG39/JS5C83FV/FFYPG39JS5C83FV.LARGE.jpg", "https://cdn.instructables.com/FHG/HVJR/JS5C83GX/FHGHVJRJS5C83GX.LARGE.jpg", "https://cdn.instructables.com/F28/9PV2/JS5C83HS/F289PV2JS5C83HS.LARGE.jpg", "https://cdn.instructables.com/FK1/WTVT/JS5C8EYT/FK1WTVTJS5C8EYT.LARGE.jpg", "https://cdn.instructables.com/FER/N1YN/JS5C8EZI/FERN1YNJS5C8EZI.LARGE.jpg", "https://cdn.instructables.com/F30/CAAJ/JS5C8F05/F30CAAJJS5C8F05.LARGE.jpg"], "step_title": "Step 2: Cut the Chassis"}, {"step": 3, "steps_text": "Place the three arms into the front piece with the circle design on it. Then stack the layers labeled 2-5 using the arms as guides. Rub wax onto surfaces 4 and 5 so the grating wheel can slide when it is inserted into the assembly. Finally, place the layer with the large hole onto the stack.", "step_imgs": ["https://cdn.instructables.com/FXC/L2ET/JS5C8629/FXCL2ETJS5C8629.LARGE.jpg", "https://cdn.instructables.com/F6V/3E4S/JS5C8633/F6V3E4SJS5C8633.LARGE.jpg", "https://cdn.instructables.com/FEN/K5GN/JS5C863Y/FENK5GNJS5C863Y.LARGE.jpg", "https://cdn.instructables.com/F35/KJM6/JS5C85Z5/F35KJM6JS5C85Z5.LARGE.jpg", "https://cdn.instructables.com/F94/4GNH/JS5C85YA/F944GNHJS5C85YA.LARGE.jpg", "https://cdn.instructables.com/F72/SQCC/JS5C864S/F72SQCCJS5C864S.LARGE.jpg", "https://cdn.instructables.com/FUK/DW3T/JS5C86HV/FUKDW3TJS5C86HV.LARGE.jpg", "https://cdn.instructables.com/FQC/OLZT/JS5C86IP/FQCOLZTJS5C86IP.LARGE.jpg"], "step_title": "Step 3: Front End Assembly"}, {"step": 4, "steps_text": "Super glue the small circular layer with the rectangular hole onto the large circular layer with the rectangular clearing. NOTE: It is critical to align these two layers as best you can or else the grating wheel won't fit well into the device. Cut the edges of the diffraction grating so it will fit into the wheel assembly, then glue it onto the wood. The last step is to glue the other small circular layer with the rectangular hole onto the back. Repeat all these steps to create two grating wheel assemblies.", "step_imgs": ["https://cdn.instructables.com/FGN/O4WM/JS5C86OU/FGNO4WMJS5C86OU.LARGE.jpg", "https://cdn.instructables.com/FBS/9JEI/JS5C86PO/FBS9JEIJS5C86PO.LARGE.jpg", "https://cdn.instructables.com/FM5/TOA0/JS5C86SK/FM5TOA0JS5C86SK.LARGE.jpg", "https://cdn.instructables.com/FX0/CZFM/JS5C86TE/FX0CZFMJS5C86TE.LARGE.jpg", "https://cdn.instructables.com/F1A/SN2O/JS5C86VI/F1ASN2OJS5C86VI.LARGE.jpg", "https://cdn.instructables.com/FHE/0CMY/JS5C86WC/FHE0CMYJS5C86WC.LARGE.jpg", "https://cdn.instructables.com/FIX/YXQV/JS5C871H/FIXYXQVJS5C871H.LARGE.jpg", "https://cdn.instructables.com/FRN/7CLU/JS5C872C/FRN7CLUJS5C872C.LARGE.jpg", "https://cdn.instructables.com/F1K/1YH4/JS5C873Q/F1K1YH4JS5C873Q.LARGE.jpg", "https://cdn.instructables.com/F34/MOKD/JS5C8756/F34MOKDJS5C8756.LARGE.jpg", "https://cdn.instructables.com/FGC/CPD5/JS5C878K/FGCCPD5JS5C878K.LARGE.jpg", "https://cdn.instructables.com/FJ4/Q9MT/JS5C879O/FJ4Q9MTJS5C879O.LARGE.jpg", "https://cdn.instructables.com/FN8/K9ZB/JS5C87BB/FN8K9ZBJS5C87BB.LARGE.jpg"], "step_title": "Step 4: Grating Wheel"}, {"step": 5, "steps_text": "Place one of the grating wheels into the front assembly. Add wax to any surfaces the wheel is in contact with. Stack layer 7 on top of the grating wheel and make sure that the grating wheel rotates smoothly in the assembly. Then stack layers 8-12. At this point you add the second grating wheel in the same way you did before. Layers 14 and 15 are added next.", "step_imgs": ["https://cdn.instructables.com/FXL/6Z3O/JS5C89IZ/FXL6Z3OJS5C89IZ.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FL6/DU2V/JS5C8892/FL6DU2VJS5C8892.LARGE.jpg", "https://cdn.instructables.com/FNY/Z55H/JS5C88AY/FNYZ55HJS5C88AY.LARGE.jpg", "https://cdn.instructables.com/F0N/9DDT/JS5C88C1/F0N9DDTJS5C88C1.LARGE.jpg", "https://cdn.instructables.com/F5B/FIMN/JS5C88IV/F5BFIMNJS5C88IV.LARGE.jpg", "https://cdn.instructables.com/FB3/8HP2/JS5C88JY/FB38HP2JS5C88JY.LARGE.jpg", "https://cdn.instructables.com/F1A/DJQL/JS5C88L1/F1ADJQLJS5C88L1.LARGE.jpg", "https://cdn.instructables.com/FIL/6K4U/JS5C88M6/FIL6K4UJS5C88M6.LARGE.jpg", "https://cdn.instructables.com/FOK/IIW3/JS5C88O5/FOKIIW3JS5C88O5.LARGE.jpg"], "step_title": "Step 5: Mid Section Assembly"}, {"step": 6, "steps_text": "Slide the rear plate with the designs over top surface 15. It will be a snug fit, so you may need to add wax. After the rear plate is in place, press the small elevating foot into the rear plate. In the final step, press the rear holding surface into the four joints on the rear surface. Your diffraction kaleidoscope is ready to go!", "step_imgs": ["https://cdn.instructables.com/F1I/LIMD/JS5C89QN/F1ILIMDJS5C89QN.LARGE.jpg", "https://cdn.instructables.com/FIV/DOJU/JS5C89RH/FIVDOJUJS5C89RH.LARGE.jpg", "https://cdn.instructables.com/FXY/BBY3/JS5C89SB/FXYBBY3JS5C89SB.LARGE.jpg", "https://cdn.instructables.com/FG0/MIGJ/JS5C89T5/FG0MIGJJS5C89T5.LARGE.jpg", "https://cdn.instructables.com/F9E/EPIA/JS5C89T6/F9EEPIAJS5C89T6.LARGE.jpg", "https://cdn.instructables.com/FJK/8HUF/JS5C89T7/FJK8HUFJS5C89T7.LARGE.jpg"], "step_title": "Step 6: Rear End Assembly"}, {"step": 7, "steps_text": "Point the diffraction grating kaleidoscope at any light source (except the sun!), and then rotate the plates using the exposed knobs. The patterns are beautiful and you will see the environment in a new light. Thanks for reading the instructable!", "step_imgs": ["https://cdn.instructables.com/FEW/BWF7/JS5C8A0P/FEWBWF7JS5C8A0P.LARGE.jpg", "https://cdn.instructables.com/F8D/A589/JS5C8A3H/F8DA589JS5C8A3H.ANIMATED.LARGE.gif"], "step_title": "Step 7: Kaleidoscope in Action!"}], "channel": "Art"}, {"category": "Technology", "description": "I got tired of my batteries roaming wild in my junk drawer and decided to build them a new home.\nEach of these designs will make a rack that measures 192 mm x 145 mm (7.5\" x 5.75\")\nAll files are also available at https://www.thingiverse.com/thing:3429076", "title": "Battery Organizer", "url": "https://www.instructables.com/id/Battery-Organizer-2/", "steps": [{"step": 1, "steps_text": "I originally designed it to have a solid base, but then I reworked it to have a mesh base to cut down on filament use and print time.\nThe top and bottom are each 5 mm high.\nTo maximize filament and time efficiency, print the base of your choice, as many spacers(see next step) as you think you will need ( I used 2 D, 1 C, 2AA, 2 AAA, and 2 9V) and then a top to match.\nThe pre-made assorted battery holder (battery holder mesh base.stl, Battery holder top.stl) will hold:\n4 D cell\n5 C cell\n40 AA\n30 AAA\n4 9V\n8 CR2032 button cell batteries", "step_imgs": ["https://cdn.instructables.com/F0X/29DQ/JS5C6XGG/F0X29DQJS5C6XGG.LARGE.jpg", "https://cdn.instructables.com/FR1/MCXN/JS5C6XTQ/FR1MCXNJS5C6XTQ.LARGE.jpg", "https://cdn.instructables.com/F7C/80AA/JS5C6XUT/F7C80AAJS5C6XUT.LARGE.jpg"], "step_title": "Step 1: Assorted Battery Holder"}, {"step": 2, "steps_text": "These spacers are all 20 mm high. Combined with the top and bottom from the previous step, the holder will be 30 mm high.", "step_imgs": ["https://cdn.instructables.com/FCK/P40I/JS5C6XVD/FCKP40IJS5C6XVD.LARGE.jpg", "https://cdn.instructables.com/FSR/SX0X/JS5C6XAY/FSRSX0XJS5C6XAY.LARGE.jpg", "https://cdn.instructables.com/FRR/M8BD/JS5C6XBH/FRRM8BDJS5C6XBH.LARGE.jpg", "https://cdn.instructables.com/F1J/IZM8/JS5C6XEL/F1JIZM8JS5C6XEL.LARGE.jpg", "https://cdn.instructables.com/F68/DTSH/JS5C6XLE/F68DTSHJS5C6XLE.LARGE.jpg", "https://cdn.instructables.com/F8L/IKOK/JS5C6XQ6/F8LIKOKJS5C6XQ6.LARGE.jpg"], "step_title": "Step 2: Spacers"}, {"step": 3, "steps_text": "In case you have different battery needs, here is an assortment of different sized battery rings separated by size as well as a mesh base.\nFeel free to mix and match to suit your needs.", "step_imgs": ["https://cdn.instructables.com/F87/I2KA/JS5C6X99/F87I2KAJS5C6X99.LARGE.jpg", "https://cdn.instructables.com/F5A/A55X/JS5C6XGX/F5AA55XJS5C6XGX.LARGE.jpg", "https://cdn.instructables.com/FPB/7KUY/JS5C6XCR/FPB7KUYJS5C6XCR.LARGE.jpg", "https://cdn.instructables.com/FAT/DPEV/JS5C6XFJ/FATDPEVJS5C6XFJ.LARGE.jpg", "https://cdn.instructables.com/F7H/986I/JS5C6XNS/F7H986IJS5C6XNS.LARGE.jpg", "https://cdn.instructables.com/F3M/9KAJ/JS5C6XRB/F3M9KAJJS5C6XRB.LARGE.jpg"], "step_title": "Step 3: Make Your Own"}, {"step": 4, "steps_text": "Here are a few racks designed for just one size of battery per rack.\nThe D cell holder (Battery holder D cell only.stl) will hold 20 batteries\nThe C cell holder (Battery holder C cell only.stl) will hold 35 batteries", "step_imgs": ["https://cdn.instructables.com/F2X/MIJW/JS5C6XIR/F2XMIJWJS5C6XIR.LARGE.jpg", "https://cdn.instructables.com/FVL/HLFI/JS5C6XOM/FVLHLFIJS5C6XOM.LARGE.jpg"], "step_title": "Step 4: Size Specific Racks"}, {"step": 5, "steps_text": "In order to make a more efficient print I retooled the rack for the C cell batteries.\nThe modified files, Battery holder C cell only short top.stl, and Battery holder C cell only short bottom.stl.\nUsing these files and 5 of the C cell spacers will make a rack that will still hold 35 C cells, but it will take about half of the amount of filament to print and be done in just over half as long.", "step_imgs": ["https://cdn.instructables.com/FFT/SBZW/JS5C6XVL/FFTSBZWJS5C6XVL.LARGE.jpg", "https://cdn.instructables.com/FV1/YH1O/JS5C6XW4/FV1YH1OJS5C6XW4.LARGE.jpg"], "step_title": "Step 5: Reworking the Design to Be More Efficient"}], "channel": "3D Printing"}, {"category": "Technology", "description": "Looking at things up-close reveals a fascinating world that hides in plain sight. When magnified a few times, even the most common things look completely different. This DIY microscope allows us to do just that with commonly available materials that cost almost nothing.\nA lot of people have made DIY microscopes and this one is just another update on those. However, the attempt here is to greatly simply the focusing mechanism and make it in the most low-tech way possible.\nThe focusing mechanism in this system works by raising and lowering the height of a triangle paper structure that in-turn moves the phone up and down to focus on the sample. The paper friction is enough to retain the position once good focus is achieved. It is simple, low-tech and easy to make with materials you can find lying around your home.\nSome of the notable examples that this design is based off are;\n1. Yoshinoks, $10 Smartphone to Digital Microscope Conversion!A neat design! But not everyone might be able to build it as it includes a few power tools.\n2. Be_Learners, DIY Microscope Using Smartphone.An extremely simple method that works great because of its simplicity but lacks a focusing stage.\n3. The DIY microscopy section on the Hackteria website.These guys play around with open source biological art, DIY biology and instruments. Their website has lots of interesting projects and reads.", "title": "DIY Smartphone Paper Microscope With Simple Materials and Tools.", "url": "https://www.instructables.com/id/DIY-Smartphone-Microscope-With-Simple-Materials-an/", "steps": [{"step": 1, "steps_text": "Materials:\n1. Laser pointer (1 or 2) - to extract lens(es)\n2. Smartphone - This is what you will view things on\n3. Empty cereal box or any similar card paper - To make the microscope stage\n4. Clear plastic packaging (Blister packs) - To make slides\n5. Thin elastic string 1m\n6. Small flash light or another smartphone with flash.\nTools and other items:\n1. Blue tack or any other putty like adhesive\n2. Thin double-sided tape or white paper glue\n3. Scissors\n4. Precision knife or a box cutter\n5. A ruler and a pencil\n6. A screwdriver or other tools - to break open the laser pointer\n7. A 3D pirinter (Optional)\n8. A printer and A4 paper to print the template", "step_imgs": ["https://cdn.instructables.com/FHQ/OMVG/JS5CEIW1/FHQOMVGJS5CEIW1.LARGE.jpg", "https://cdn.instructables.com/F86/G4UI/JS5CEILM/F86G4UIJS5CEILM.LARGE.jpg", "https://cdn.instructables.com/F9Z/C0ML/JS5CEILL/F9ZC0MLJS5CEILL.LARGE.jpg", "https://cdn.instructables.com/FLG/XU9E/JS5CEIXJ/FLGXU9EJS5CEIXJ.LARGE.jpg", "https://cdn.instructables.com/F27/ZU1O/JS5CEIMD/F27ZU1OJS5CEIMD.LARGE.jpg", "https://cdn.instructables.com/F52/0MHI/JS5CEIW0/F520MHIJS5CEIW0.LARGE.jpg", "https://cdn.instructables.com/FNC/DE5X/JS5CEIWS/FNCDE5XJS5CEIWS.LARGE.jpg"], "step_title": "Step 1: Things You Need"}, {"step": 2, "steps_text": "Probably the most important element of any optic device, these can be easily obtained from cheap laser pointers.\nCheap laser pointers can be found online here or in local shops. The cheapest kind work well and there is no need to buy a high end laser pointer.\nYou can stack one lens over the other for higher magnification. More than two lenses don\u2019t work as the focal distance reduces greatly.\n\n1. Extracting lenses:\n- Remove the top cover of the laser pointer.\n- This should reveal a black housing which can be unscrewed or cut open.\n- Carefully remove the lens from inside and try to not scratch it in the process.\n\n2. Attaching the lens to the phone:\nThere are multiple ways to do this. It is important to note that the lens needs to be used in the right direction.\nNote that the lens has a slightly rounded bulging part on one side. This side points outwards from the phone camera.\n\na. Blue tack or reusable putty adhesive:\n- Roll up a noodle of blue tack and put it around the edge of the lens.\n- Now line up the lens with your phone rear camera (making sure the bulging side faces outwards) and press the tack onto the sides to stick the lens to your phone.\nThe phone can now be used as a simple microscope with its internal camera application. However, focusing and maintaining a clear image is difficult so we need to build a stage to make focusing easier.\n(Note: the focal length is quite short that means, the lens needs to be very close to the sample.)\nb. 3D print a lens mount:\n- Download the 3D printing file, print the pieces in the finest layer setting and push the lens into it making sure that the bulging side of the lens is on the side of the mount that has a ridge. (The one with a taller ridge is for a double lens set-up and the other one for a single lens)\n- You can use either the single lens mount or the double lens mount. In the latter case make sure both lenses have their bulging side pointing outward.\n- Now thread a short length (about 8 - 10 cm) of thin elastic cord through the side holes and make knots on the ends to secure it into the mount.\n- The elastic makes it easier to fit the lens mount onto various sized phones.", "step_imgs": ["https://cdn.instructables.com/FTC/YCHN/JS5CEK7V/FTCYCHNJS5CEK7V.LARGE.jpg", "https://cdn.instructables.com/FUT/UXBI/JS5CEK8O/FUTUXBIJS5CEK8O.LARGE.jpg", "https://cdn.instructables.com/F2O/WFXZ/JS5CEK7W/F2OWFXZJS5CEK7W.LARGE.jpg", "https://cdn.instructables.com/F0Q/98YV/JS5CEKA3/F0Q98YVJS5CEKA3.LARGE.jpg", "https://cdn.instructables.com/FBO/CTED/JS5CEK7X/FBOCTEDJS5CEK7X.LARGE.jpg", "https://cdn.instructables.com/F36/VQ25/JS5CEL2N/F36VQ25JS5CEL2N.LARGE.jpg", "https://cdn.instructables.com/FTF/E1C7/JS5CEL2O/FTFE1C7JS5CEL2O.LARGE.jpg", "https://cdn.instructables.com/F7V/8AWZ/JS5CELFL/F7V8AWZJS5CELFL.LARGE.jpg", "https://cdn.instructables.com/FEE/5LON/JS5CEL3D/FEE5LONJS5CEL3D.LARGE.jpg", "https://cdn.instructables.com/FOV/2ROG/JS5CELAI/FOV2ROGJS5CELAI.LARGE.jpg", "https://cdn.instructables.com/FTA/8L9X/JS5CELE2/FTA8L9XJS5CELE2.LARGE.jpg", "https://cdn.instructables.com/FF8/300Z/JS5CELE4/FF8300ZJS5CELE4.LARGE.jpg", "https://cdn.instructables.com/FTI/UOL3/JS5CELE3/FTIUOL3JS5CELE3.LARGE.jpg", "https://cdn.instructables.com/F02/Z1TN/JS5CELEV/F02Z1TNJS5CELEV.LARGE.jpg"], "step_title": "Step 2: Extracting and Prepping the Lens"}, {"step": 3, "steps_text": "This unit makes focusing and viewing the image easier.\nGetting the various pieces ready:\n- Open up a cereal box to flatten it out and reveal the blank insides.\n- Print the template file on an A4 paper (select real size while printing).\n- Stick the printed template onto your cereal box.\n- Cut the cutting lines as marked.\n- Fold over the dotted lines.\nPutting together:\nI find using thin double sided tape an easy option for this step but you may use regular white glue however, remember to wait for it to dry between steps.\n- Start by sticking the piece labelled 1 to the base as shown. Make sure it lines up well with the space provided.\n- Now stick the top part of the piece 2 to the base. Again making sure things line up.\n- Insert the long focusing tab through the slits as indicated.\n- Stick the end of the focusing tab too the free end of piece 2. Line it up well.\nPushing and pulling in the tab should raise or lower the triangle section formed by piece 2. This will move the phone and help focus on on the slide.", "step_imgs": ["https://cdn.instructables.com/FAX/Z22F/JS5CELIJ/FAXZ22FJS5CELIJ.LARGE.jpg", "https://cdn.instructables.com/FVC/LJQR/JS5CELIA/FVCLJQRJS5CELIA.LARGE.jpg", "https://cdn.instructables.com/F08/9OJS/JS5CELII/F089OJSJS5CELII.LARGE.jpg", "https://cdn.instructables.com/FHM/1ABC/JS5CELIB/FHM1ABCJS5CELIB.LARGE.jpg", "https://cdn.instructables.com/FQK/X55W/JS5CELIE/FQKX55WJS5CELIE.LARGE.jpg", "https://cdn.instructables.com/FZ5/RYTP/JS5CELI9/FZ5RYTPJS5CELI9.LARGE.jpg", "https://cdn.instructables.com/FRS/BRWC/JS5CELIF/FRSBRWCJS5CELIF.LARGE.jpg", "https://cdn.instructables.com/F9A/Q3T4/JS5CELIG/F9AQ3T4JS5CELIG.LARGE.jpg", "https://cdn.instructables.com/F73/3QUG/JS5CELIN/F733QUGJS5CELIN.LARGE.jpg", "https://cdn.instructables.com/FFC/LRAG/JS5CELIO/FFCLRAGJS5CELIO.LARGE.jpg"], "step_title": "Step 3: The Microscope Stage"}, {"step": 4, "steps_text": "You may use glass slides if you have access to them but, clear plastic from packaging works well for home purposes.\n- Collect your sample.\n- Cut a small rectangle from the clear plastic.\n- If it is a dry sample, clear tape works well as a cover slip for your slide.\n- If the sample is liquid cut another small piece of clear plastic and use it as a cover slip.", "step_imgs": ["https://cdn.instructables.com/FSH/8U2H/JS5CENRT/FSH8U2HJS5CENRT.LARGE.jpg", "https://cdn.instructables.com/F5Q/PPIU/JS5CENRU/F5QPPIUJS5CENRU.LARGE.jpg", "https://cdn.instructables.com/FWI/3FEM/JS5CENRQ/FWI3FEMJS5CENRQ.LARGE.jpg"], "step_title": "Step 4: Making Slides"}, {"step": 5, "steps_text": "- Mount the lens onto your phones rear camera. Making sure to align it well.\n- Place the stage on a slightly raised surface on a flat table. You can use a book for this purpose. Make sure the front square cutout sticks out from the edge of the book as you need to shine light under it.\n- Place your slide with the sample in the middle of the cutout.\n- Place a light source under the cutout as shown.\n- Place the phone over the two triangles on the stage as shown. Make sure the phone camera with the lens mounted aligns with the sample.\n- Now move the focusing tab to focus onto your sample.\n- Take pictures or videos with your phones inbuilt camera application.\nShare your observations with everyone! Try improving the design and share your building experience to help others!\nIf you have any suggestions for improvement, please share them here! Thank you and happy building!", "step_imgs": ["https://cdn.instructables.com/FIN/X6DB/JS5CEPPX/FINX6DBJS5CEPPX.LARGE.jpg", "https://cdn.instructables.com/FPP/65G6/JS5CEPQ7/FPP65G6JS5CEPQ7.LARGE.jpg", "https://cdn.instructables.com/F9Q/STRR/JS5CEPQ9/F9QSTRRJS5CEPQ9.LARGE.jpg", "https://cdn.instructables.com/FNA/51G6/JS5CEPQS/FNA51G6JS5CEPQS.LARGE.jpg", "https://cdn.instructables.com/FMO/QIJL/JS5CEPQT/FMOQIJLJS5CEPQT.LARGE.jpg", "https://cdn.instructables.com/F3Q/PSKD/JS5CEPR3/F3QPSKDJS5CEPR3.LARGE.jpg", "https://cdn.instructables.com/FA8/FJJH/JS5CEPRD/FA8FJJHJS5CEPRD.LARGE.jpg"], "step_title": "Step 5: Using the Microscope"}], "channel": "Digital Graphics"}, {"category": "Technology", "description": "Welcome to my Instructables on how to build a RGB LED backlight for e.g. the back of your TV or desk.\nThe Schematic itself is very simple since the WS2812 LED Strips are very easy to interface with e.g an Arduino Nano.\nNote: that you do not have to use the additional MSGEQ7 Audio Analyzer circuit if you only want the LED Backlight without audio visualization.\nI provided a detailed list of the used parts and where you can buy them:\nArduino Nano/Uno ( Amazon / AliExpress )\nWS2812 RGB LED Strip ( Amazon/ AliExpress ), note that IP stands for the protection (e.g. waterproof if you need) and the number stands for how many LEDs per Meter the strip has ( important for power supply)\n5V Power Supply ( Amazon )(depens how many LEDs strip has) -> each LED takes ~20mA, the strip used in this instructable has 45 LEDs (30 per Meter) so I need 45*20mA ~ 1,5Ampere supply (Arduino,MSGEQ7 need some too), I linked a power supply which provides 3A which is definetely enough for us now\n3.5mm Audio Jack ( Amazon / AliExpress )\nPotentiometer 10kOhm ( Amazon / AliExpress )\nPush Button ( Amazon / AliExpress )\nResistor (1x 10kOhm, 1x 220Ohm, for MSGEQ7: 2x100kOhm)\nCapacitors (1x 1000yF Electrolytic ( Amazon / AliExpress ) , 2x 10nF , for MSGEQ7: 2x 0.1yF , 1x33pF ( Amazon / AliExpress )\nSimple Diode (Amazon / AliExpress )\nDC Jack ( Amazon / AliExpress )", "title": "RGB Backlight + MSGEQ7 Audio Visualizer", "url": "https://www.instructables.com/id/RGB-Backlight-MSGEQ7-Audio-Visualizer/", "steps": [{"step": 1, "steps_text": "Main Schematic:\nSo to interface the WS2812 Strip with an Arduino is pretty straight forward using the Adafruit_NeoPixel library.\nThe LED Strip has 3 Pins: VCC, DATA, GND. VCC is connected to 5V, GND to Ground and the DATA Pin in the middle is connected to LED_DATA Pin D6 on the Arduino. Now every LED on the Strip has an WS2812 chip on it which takes in the Data it receives from the Arduino and passes it on to the next LED, therefore we only need to feed the Led data once to the first LED on the strip.\nThe logic of the Push Button to change the modes and the Potentiometer to control Brightness is explained in the next Step.\nThe exact Schematic can be found in the Screenshot of the fritzing file which is also available to download.\nNote that it is very important to only connect the Arduino 5V Pin to the Power Supply via the diode , so that the Arduino is not damaged if we plug in the USB Cable to program it. The 10nF and 1000uF is also for safety reasons, so that there won't be any Power shortages.\nFor the MSGEQ7 Circuit:\nThis is the most common Circuit to connect a MSGEQ7 to an Arduino. This is also where you need the 3.5mm audio Jack. The middle pin of most audio Jacks is GND, the pins on the left/right are the stereo channels which connect via an 10nF capacitor to the Signal In Pin of the MSGEQ7 as shown in the schematic. You can additionally add a potentiometer to the Signal In Pin to control the sensitivity of the Audio Signal, but is really not necessary. The MSGEQ7 is connected to the Arduino with Analog Out pin connected to A1 (MSGEQ_OUT), Strobe Pin to D2 (STROBE), Reset Pin to D5 (RESET).", "step_imgs": ["https://cdn.instructables.com/FRW/E6GQ/JS5C4I7C/FRWE6GQJS5C4I7C.LARGE.jpg", "https://cdn.instructables.com/FOV/R2LV/JS5C4H6T/FOVR2LVJS5C4H6T.LARGE.jpg", "https://cdn.instructables.com/FJ4/Y5LT/JS5C58Q8/FJ4Y5LTJS5C58Q8.LARGE.jpg"], "step_title": "Step 1: Build the Schematic"}, {"step": 2, "steps_text": "GitHub Link to complete Sketch:RGBStripe_Control_WS2812\nNotes on the code:\nIn the code we declare the WS2812 Strip object with a new Adafruit_NeoPixel object, passing in the number of Leds (change NUM_LEDS for you setup), the Arduino Pin connected to the LED_DATA pin, and the coding type + speed of the color values transmission.\nOnce this is done we set the default Brightness in setup() via setBrightness(0-255) and turn on the Strip with begin(). We can now set each individual Pixel/LED to a specific RGB Color with setPixel(LED, Color). When we are done set all LEDs to new values we update the strip with strip.show(). That is basically all the code logic we need to programm any animation we want. Now to actually control the Animations/Modes we add a Push Button / Tactile Switch to the Arduino. We Therefore connect one end of the Button to VCC and the other to Arduino Pin D3 and with a 10kOhm resistor to GND. We attach an Interrupt to this Pin in the setup(), which triggers a call to the changeMode() method every time we press the button. In changeMode() we simple toggle to the next mode and tell the current animation to break. Once that happens the loop() is newly executed and will play the new Animation/Mode.\nThe provided Animations include: Rainbow color fade, Red, Green, Blue, White Color , Music analyzer mode\nAdditionally I added a 10kOhm Potentiometerto control the brightness of the Strip. the method checkBrightness() checks the output of the Potentiometer connected to Pin A2 (middle Pin of Potentiometer) and updates the Strip's brightness accordingly.\nFor musicAnalyzer() mode via MSGEQ7 :\nThis mode visualizes the Audio Signal connected to Signal In of the MSGEQ7. The MSGEQ outputs a analog Signal showcasing a single audio band ( 8 Bands, from Low to High frequencies). The musicAnalyzer() method gets the current values of the audio bands by resetting the MSGEQ and then buffering the analog values provided. The band being outputted can be changed by putting a high flank on the Strobe Pin. After all the 8 Bands have been buffered the method shifts all the LED Pixel values one backand calculates the new Value for LED 0. The color is comprised of : Low frequency(Bass) Red Color, Middle frequency Green Color and High frequency Blue color. The shifting of the value before loading the new value gives us a nice smoothly timed animation.", "step_imgs": ["https://cdn.instructables.com/FKO/KZSE/JS5C7A5J/FKOKZSEJS5C7A5J.LARGE.jpg", "https://cdn.instructables.com/FEY/ZG4D/JS5C4IYO/FEYZG4DJS5C4IYO.LARGE.jpg", "https://cdn.instructables.com/FLZ/IO1B/JS5C4H53/FLZIO1BJS5C4H53.LARGE.jpg"], "step_title": "Step 2: The Code"}, {"step": 3, "steps_text": "To get your music/audio fed into the MSGEQ7 but still having your music play on your speakers, you either have to use the RealtekHD Stereomix feature or connect the MSGEQ Audio Input to e.g. rear speaker output of your soundcard/motherboard.\nTo enable the Stereomix in Win10, right click the speaker icon on the bottom right and click \"Sounds\", here you can activate Stereomix in the \"Recording\" Tab (right click -> activate). If the Stereomix is not visible, right click an choose \"Show disabled devices\". Now open the settings for the Stereomix and tell it to listen and copy the audio of your main Speakers.\nIf you want to use the rear speaker output, open the settings of you main speaker in the \"Sounds\" menu, Tab \"Improvements\" and then select \"Environment\" from the list and choose \"Room\" in the dropdown menu below.\nThis now enables parallel audio output of your speakers and the MSGEQ7.", "step_imgs": [], "step_title": "Step 3: Setup Audio on PC"}, {"step": 4, "steps_text": "Since the schematic is no that complicated nor big in size I managed to put the entire circuitry into a little box with holes for the USB connector,Audio Jack, DC Jack, Potentiometer and Push Button. You can simply use male/female pin headers and connect the 3 Cables to the WS2812 Strip via Jumper cables.", "step_imgs": ["https://cdn.instructables.com/FVV/UX6Y/JS5C4HAB/FVVUX6YJS5C4HAB.LARGE.jpg"], "step_title": "Step 4: Notes"}], "channel": "Arduino"}, {"category": "Technology", "description": "Hey guys,\nI made an iPhone 6 battery replacement guide some time ago and it seemed to have helped a lot of people so here's a guide for the iPhone 6+. The iPhone 6 and 6+ have essentially the same build except for the obvious size difference. There's also an additional screw holding down the shield for the front screen connectors and a third strip of adhesive holding down the battery (like it wasn't stuck enough already...).\nI'll copy some of the text from the previous guide seeing as most steps are identical.\n\nThis is what you'll need to replace your iPhone 6 Plus battery:\n- Phillips PH00/PH000 screwdriver (for internal screws)\n- Pentalobe screwdriver (for the two bottom screws)\n- Tweezers\n- Suction cup\n- Plastic pry tool (also called spudger)\n(- Plastic opening tool - optional)\n- Battery (an iPhone 6 Plus battery does NOT fit the regular iPhone 6 or 6S+, or vice versa)\n- Battery adhesive (regular tape can be used as a substitute)\n\nFor the battery, I always use the brand ScandiTech. I've done plenty of battery replacements for friends and family and this brand never lets me down. There are cheaper batteries on Ebay but I simply don't trust the generic ones. I mean, you paid close to a thousand bucks (well, at least that's what it cost when it was new) for your iPhone, putting in a $5 battery doesn't feel safe or right. The ScandiTech battery is $17/$27 (without/with tools) and I feel that's a fair price. If it's within your budget, I'd say go for it. You can buy it either on Amazon.com or on their site, links are below.\nAmazon: iPhone 6 Plus battery with tools\nOr go to www.scandi.tech\nIf you prefer another brand try either Ebay or Amazon.\n\nBefore we begin, a word of warning. Lithium batteries are safe to handle but NOT if punctured or severely physically damaged. If you puncture a lithium battery, it will catch on fire. Work with dull tools, don't stab the battery and you'll be fine.\nOh yea, it's a good idea to back up the phone before you open it up. No data will be lost if the battery is correctly replaced but if you somehow mess up during the repair, there is a (tiny) possibility of damaging the phone.", "title": "IPhone 6 Plus Battery Replacement: Guide to Replace the Internal Battery", "url": "https://www.instructables.com/id/IPhone-6-Plus-Battery-Replacement-Guide-to-Replace/", "steps": [{"step": 1, "steps_text": "1.1 Shut down the phone. Recommended but not essential as you'll soon disconnect the battery from the motherboard shortly. I have heard from others who somehow messed up during the repair process then blamed their mistake on not switching off the phone. This is rarely true. Either way, switch off the phone and you're covered.\n1.2 Remove the two pentalobe bottom screws next to the charging port.\n1.3 Lift the screen with its plastic frame from the metal back assembly. Use either the suction cup or carefully work in a leg of a set of tweezers then pry the screen up a big. The screen is made out of glass and if you bend it too much it will crack. Move slowly and carefully.\nSlide your opening tool or your spudger (or any other plastic tool) along the sides of the screen (not the top side!) to separate it from the back.\n\n\n1.4 Lift the screen to a 90 degree angle and hold it with one hand. It is possible but not recommended to lean the screen down (see last image) but this results in tension on the four cables connecting the screen to the motherboard. Too much tensions and the cables will tear, and you'll have to buy a new screen and front camera flex.", "step_imgs": ["https://cdn.instructables.com/FQ8/MN3G/JS0OT8LU/FQ8MN3GJS0OT8LU.LARGE.jpg", "https://cdn.instructables.com/FWK/NBZG/JS0OT8N1/FWKNBZGJS0OT8N1.LARGE.jpg", "https://cdn.instructables.com/FHP/Z4KI/JS0OT8O8/FHPZ4KIJS0OT8O8.LARGE.jpg", "https://cdn.instructables.com/F8O/87Y2/JS0OT8R7/F8O87Y2JS0OT8R7.LARGE.jpg", "https://cdn.instructables.com/FLK/F2T5/JS0OT8TN/FLKF2T5JS0OT8TN.LARGE.jpg", "https://cdn.instructables.com/FRD/NQQ8/JS0OT8UI/FRDNQQ8JS0OT8UI.LARGE.jpg", "https://cdn.instructables.com/FE2/J5VV/JS0OT8VM/FE2J5VVJS0OT8VM.LARGE.jpg", "https://cdn.instructables.com/FE6/5AXB/JS0OT96C/FE65AXBJS0OT96C.LARGE.jpg"], "step_title": "Step 1: Turn Off the Phone, Remove the Two Bottom Screws, and Lift the Screen"}, {"step": 2, "steps_text": "2. Hold the screen at a 90 degree angle with one hand and use your other hand to remove the two Phillips screws holding the battery's metal shield. Bottom left screw is longer than top right. Organize them as you remove them as they need to go back into their respective slots.\nThen remove the shield and disconnect the battery's connector with the spudger.\nOptional but recommended (not pictured):\n2.1 Test the new battery. Batteries are complex products and sometimes fail or get damaged during shipping, storage or handling. If you bought your battery from a shady source then the chances of it not working well increases. It's best to test the new battery before continuing with the replacement.\nPut the new battery on top of the old battery (no need to remove the old battery) and connect the new battery's connector to the motherboard (same slot as the old one was disconnected from).\nOnce the new battery is connected, lower the screen and let it rest on the battery (last picture). Start the phone and charge it for a few minutes to make sure that the battery percentage increases.\nIn my experience, the most common issues with new batteries (I'm guessing 2-5% have this problem) is that they are either duds (defective out of the box) or that they fail to properly communicate with the phone and the phone will not recognize that the battery's charge (%) increases.", "step_imgs": ["https://cdn.instructables.com/FYO/2E03/JS0OT8YI/FYO2E03JS0OT8YI.LARGE.jpg", "https://cdn.instructables.com/FBF/3MQ9/JS0OT906/FBF3MQ9JS0OT906.LARGE.jpg", "https://cdn.instructables.com/FQ2/GDQT/JS0OT93V/FQ2GDQTJS0OT93V.LARGE.jpg", "https://cdn.instructables.com/F9Q/LDNA/JS0OT97Z/F9QLDNAJS0OT97Z.LARGE.jpg", "https://cdn.instructables.com/FHV/AFW3/JS0OT9AF/FHVAFW3JS0OT9AF.LARGE.jpg", "https://cdn.instructables.com/FMT/01YH/JS0OTAX1/FMT01YHJS0OTAX1.LARGE.jpg"], "step_title": "Step 2: Hold the Screen and Disconnect the Battery"}, {"step": 3, "steps_text": "3. The screen needs to be fixed or removed in order to comfortably and safely work on and remove the battery.\nThe screen can be a bit problematic to re-connect as its connectors are quite small and a bit sensitive. It's tedious to get the small connectors properly in place. So, if possible, find a solid object (a sturdy book or the iPhone's original carton usually work well) then fix the screen to it with a rubber band (see first image).\nThis way you won't have to re-connect the tiny connectors. The downside is that it's a bit more difficult to work the battery with the screen hanging in the air. The other downside is that if the screen falls, it's possible that the four cables connecting it to the motherboard tear.\nSome people prefer to secure the screen, others to remove it completely. This is a personal preference and I can't tell you what works best for you. I like to remove the screen but I'm used to re-connecting it so that's not an issue for me.\n3.1 If you want to remove the screen start by removing the five Philipps screws holding down the metal plate in the top right corner. The top right screw holding the metal plate is longer than the other screws and need to go back into its specific slot otherwise the motherboard can take damage. Organize the screws as you remove them so you know which one goes back where. Second longest screw goes in the top left hole.\nRemove the plate then disconnect the four pictured connectors with the spudger as pictured. With minimal force lever the connectors up with the spudger.", "step_imgs": ["https://cdn.instructables.com/FKA/2109/JS0OT8WU/FKA2109JS0OT8WU.LARGE.jpg", "https://cdn.instructables.com/FBK/FI3U/JS0OT9C2/FBKFI3UJS0OT9C2.LARGE.jpg", "https://cdn.instructables.com/F6T/HS12/JS0OT9DO/F6THS12JS0OT9DO.LARGE.jpg", "https://cdn.instructables.com/F0V/MKL3/JS0OT9EV/F0VMKL3JS0OT9EV.LARGE.jpg", "https://cdn.instructables.com/FB7/0NZX/JS0OT9G5/FB70NZXJS0OT9G5.LARGE.jpg", "https://cdn.instructables.com/FFR/I82H/JS0OT9HD/FFRI82HJS0OT9HD.LARGE.jpg", "https://cdn.instructables.com/F1S/DRD5/JS0OT9IU/F1SDRD5JS0OT9IU.LARGE.jpg"], "step_title": "Step 3: Secure or Remove the Screen"}, {"step": 4, "steps_text": "4. The best and safest way to get the battery out is by pulling out the adhesive strips that hold it down. We have Apple to thank for this incredibly inconvenient method of securing the battery. And seeing as they don't want you to remove the battery, they have secured it pretty damn hard with three adhesive strips. The adhesive strips also have a bad habit of tearing when pulled (last picture).\n\nFirst of all, lift the little tabs at the bottom of the battery. These are the ends of each adhesive strip. Once the tabs are lifted, grab one of them and start pulling - slowly. I started with the leftmost strip but it's actually a good idea to start from the opposite end. If the rightmost strip tears, you may still be able to (somewhat) easily pry out the battery. I.e. the rightmost strip is the least important to get out.\nAnyhow, pull one strip and as you see it coming out, grab the white adhesive part (the actual \"tape\") as soon as possible instead of pulling holding the tab. It's less likely that the adhesive will tear this way. You can either pull the adhesives straight down/out (towards the charging port) or, if you're starting with the leftmost strip, pull it around the battery (as pictured).\nIf you manage to remove any adhesive strips, do not get over-confident. The others may not be as easy.\nIf the strips tear as you pull, I'll show you an alternative way in the next step.", "step_imgs": ["https://cdn.instructables.com/FEO/NX5C/JS0OT9LI/FEONX5CJS0OT9LI.LARGE.jpg", "https://cdn.instructables.com/FLG/OGQC/JS0OT9MZ/FLGOGQCJS0OT9MZ.LARGE.jpg", "https://cdn.instructables.com/FVC/AGSX/JS0OT9OG/FVCAGSXJS0OT9OG.LARGE.jpg", "https://cdn.instructables.com/FCQ/E62J/JS0OT9PZ/FCQE62JJS0OT9PZ.LARGE.jpg", "https://cdn.instructables.com/FP4/B9HK/JS0OT9RG/FP4B9HKJS0OT9RG.LARGE.jpg", "https://cdn.instructables.com/FK1/VITS/JS0OT9SN/FK1VITSJS0OT9SN.LARGE.jpg", "https://cdn.instructables.com/FKO/GB4F/JS0OT9U4/FKOGB4FJS0OT9U4.LARGE.jpg", "https://cdn.instructables.com/FB0/DFYH/JS0OTA0E/FB0DFYHJS0OTA0E.LARGE.jpg"], "step_title": "Step 4: Removing the Battery - Removing Its Adhesive"}, {"step": 5, "steps_text": "5. It is possible to carefully pry/lever up the battery from the adhesive holding it. Work either the spudger or a plastic tool along the sides of the battery and carefully lever it up, a little bit at a time.\nPuncturing the battery will cause a combustion/fire.\n\nWith that said, be careful and the battery will come out fine, but possibly a bit skewed.\nDo not work any tools too far up on the battery as there's the volume button's flex connector is running under the top left corner of the battery (see last picture). There's a risk of cutting this connector if prying in this area.\nAs you're prying the battery it may loose just enough for you to spot the torn adhesive underneath it. If you're able, grab the adhesive with the tweezers (without puncturing the battery) and try to once again pull it out (see next step).\n\nAlternative/safer way (not pictured):\nYou can also use a fishing line, dental floss, or a similar string to separate the battery from its adhesive. This is a bit tricky, though (but maybe less tricky than levering the battery). You'll need a 10 inch/30 cm long strong. Hold both ends of it in each of your hands then guide the middle part of the string underneath the top right corner of the battery. Pull the string left and right and down underneath the battery. You'll notice the battery separating from the adhesive as you work the string from top to bottom.\nI'll try to update this guide showing this particular step at some point. I simply didn't have a string available when I took the pictures.", "step_imgs": ["https://cdn.instructables.com/FQA/47MC/JS0OT9VW/FQA47MCJS0OT9VW.LARGE.jpg", "https://cdn.instructables.com/FSY/LRQO/JS0OT9XE/FSYLRQOJS0OT9XE.LARGE.jpg", "https://cdn.instructables.com/FVR/YUU9/JS0OTA53/FVRYUU9JS0OTA53.LARGE.jpg", "https://cdn.instructables.com/FZX/E6CU/JS0OTA6V/FZXE6CUJS0OTA6V.LARGE.jpg", "https://cdn.instructables.com/FAG/4ZTC/JS0OTA8I/FAG4ZTCJS0OTA8I.LARGE.jpg", "https://cdn.instructables.com/FBU/PP92/JS0OTACZ/FBUPP92JS0OTACZ.LARGE.jpg", "https://cdn.instructables.com/FYP/U95B/JS0OTAER/FYPU95BJS0OTAER.LARGE.jpg", "https://cdn.instructables.com/F6A/PAUZ/JS0OTAG5/F6APAUZJS0OTAG5.LARGE.jpg"], "step_title": "Step 5: Prying Out the Battery"}, {"step": 6, "steps_text": "If you managed to pull out all three adhesive strips fine then skip ahead. If your adhesive tore as you pulled it, there may still be a way to reach it. Pry the battery with your dull tools just enough to see the torn adhesive under the battery. Reach in with your tweezers and grab the adhesive then pull with your fingers.\nIf your adhesive tore just by the tab, it's likely easy to grab it.", "step_imgs": ["https://cdn.instructables.com/FAG/4ZTC/JS0OTA8I/FAG4ZTCJS0OTA8I.LARGE.jpg", "https://cdn.instructables.com/FOE/2Y5F/JS0OTA1V/FOE2Y5FJS0OTA1V.LARGE.jpg", "https://cdn.instructables.com/FY0/0VZW/JS0OTA3M/FY00VZWJS0OTA3M.LARGE.jpg", "https://cdn.instructables.com/F9Q/Z49L/JS0OTABK/F9QZ49LJS0OTABK.LARGE.jpg"], "step_title": "Step 6: (Try to Grab Torn Adhesive Strips)"}, {"step": 7, "steps_text": "6. I didn't have a new battery at hand for this guide so I'll recycle the old battery to show the steps. Basically, we'll do the previous steps but backward.\nFirst, install the new adhesive on the new battery. The tabs should overlap on the top (first picture) and the strips should stretch along its bottom side (second picture, excuse the used adhesive).\nPlace the battery into its slot in the metal back assembly and try to align (but not connect) its connector to the motherboard.", "step_imgs": ["https://cdn.instructables.com/FQT/E27R/JS0OTAHK/FQTE27RJS0OTAHK.LARGE.jpg", "https://cdn.instructables.com/F2L/Z1E8/JS0OTAJR/F2LZ1E8JS0OTAJR.LARGE.jpg"], "step_title": "Step 7: Install New Adhesive on Your New Battery"}, {"step": 8, "steps_text": "7. Assuming you disconnected the screen at the beginning, it's time to reconnect it. If you did not disconnect it but rather leaned it against a book/box, then skip to the next step.\nAlign the first/inner connector with the motherboard then press it down with your finger, from one end to the other.\nAs mentioned previously, this step is tedious and the connectors are small. Even though it may appear aligned/connected, it can be just a little bit off. A soft \"click\" should be heard or felt as the connector snaps into place.\n\nConnect the remaining connectors the same way.\nThese connectors control the touch, LCD, front camera and home button. If either one of these parts/functions doesn't work correctly after the battery replacement, go back to this step and disconnect then re-connect the connectors.\nNo need to secure the protective shield just yet.", "step_imgs": ["https://cdn.instructables.com/F98/TUKV/JS0OTAL4/F98TUKVJS0OTAL4.LARGE.jpg", "https://cdn.instructables.com/F5B/KIAA/JS0OTAMW/F5BKIAAJS0OTAMW.LARGE.jpg", "https://cdn.instructables.com/FOD/58PU/JS0OTAOP/FOD58PUJS0OTAOP.LARGE.jpg", "https://cdn.instructables.com/F5B/X568/JS0OTAQ2/F5BX568JS0OTAQ2.LARGE.jpg", "https://cdn.instructables.com/FPM/O2DH/JS0OTARU/FPMO2DHJS0OTARU.LARGE.jpg", "https://cdn.instructables.com/F9S/V0FG/JS0OTATJ/F9SV0FGJS0OTATJ.LARGE.jpg"], "step_title": "Step 8: Re-connect the Screen"}, {"step": 9, "steps_text": "8. Reconnect the battery's connector to the motherboard. No need to secure its shield just yet.\nAs the battery is connected, we can once again start the phone and test it. Assuming you tested the battery in the previous steps, we'll now want to test the screen, touch, home button, and front camera. Start the phone, check if the screen lights up well, move your finger across the screen to test the touch. Start the front camera. If everything is in order, switch off the phone and proceed.\n\nIf any of these parts do not respond well, disconnect the battery then go back one step and disconnect then re-connect the top four connectors.", "step_imgs": ["https://cdn.instructables.com/FHM/34KZ/JS0OTAVB/FHM34KZJS0OTAVB.LARGE.jpg", "https://cdn.instructables.com/FMT/01YH/JS0OTAX1/FMT01YHJS0OTAX1.LARGE.jpg"], "step_title": "Step 9: Reconnect the Battery's Connector and Test Everything"}, {"step": 10, "steps_text": "9. Top right metal shield: Longest screw in the top right hole. Second longest screw in the top left hole.\nBattery connector metal shield: Longest screw bottom left hole, shortest screw top right.", "step_imgs": ["https://cdn.instructables.com/FD4/M0KM/JS0OTAYI/FD4M0KMJS0OTAYI.LARGE.jpg", "https://cdn.instructables.com/FUM/19R1/JS0OTB05/FUM19R1JS0OTB05.LARGE.jpg"], "step_title": "Step 10: Secure the Two Metal Shields"}, {"step": 11, "steps_text": "10. Up until now the screen has mainly been at a 90 degree angle. Move it down and press the top sides against each other. Then continue pressing the sides of the screen into the back assembly until they are practically one part.\nThe screen usually comes into place quite easily without much force. Make sure not to put too much pressure on the screen as it can crack. If parts of the screen are not falling into the back assembly, guide with the tweezers.", "step_imgs": ["https://cdn.instructables.com/FSO/55T7/JS0OTB1S/FSO55T7JS0OTB1S.LARGE.jpg", "https://cdn.instructables.com/FF3/1U14/JS0OTB3F/FF31U14JS0OTB3F.LARGE.jpg", "https://cdn.instructables.com/F5C/2PPU/JS0OTB52/F5C2PPUJS0OTB52.LARGE.jpg", "https://cdn.instructables.com/FYC/76S3/JS0OTB6S/FYC76S3JS0OTB6S.LARGE.jpg", "https://cdn.instructables.com/FOQ/V9OF/JS0OTB8W/FOQV9OFJS0OTB8W.LARGE.jpg"], "step_title": "Step 11: Assemble the Front Into the Back Assembly"}, {"step": 12, "steps_text": "11. Finally, put the two pentalobe bottom screws in place with your fingers or the magnetic screwdriver, then secure them. Start the phone.\nSometimes the time and date restore to factory default and your phone may not find cellular reception. It will say \"Searching...\" in the top left corner. Not to worry. Connect the phone to a wifi-network or to a computer with iTunes and an internet connection then the phone will sync the time and date. It'll then either find cellular (3G/4G/LTE) signal immediately or it may need a reboot.\nHope it all worked out well for ya.", "step_imgs": ["https://cdn.instructables.com/FN7/T25H/JS0OTBAY/FN7T25HJS0OTBAY.LARGE.jpg", "https://cdn.instructables.com/FQR/QYRJ/JS0OTBDF/FQRQYRJJS0OTBDF.LARGE.jpg"], "step_title": "Step 12: Install the Bottom Screws and Start the Phone"}], "channel": "Apple"}, {"category": "Technology", "description": "Hi Everyone,\nIn this Instructable, I\u2019ll show you how to automate a heat exchange fan using a cheap thermostat module.\nWarning: This project uses mains voltage and needs to be properly handled. I\u2019ve you are not sure what are you doing, do not attempt to replicate it.", "title": "Thermostat Control of a Heat Exchange Fan", "url": "https://www.instructables.com/id/Thermostat-Control-of-a-Heat-Exchange-Fan/", "steps": [{"step": 1, "steps_text": "My entire home is being heated with a pellets burning boiler that sits in my basement. On top of it, where the chimney attachment is I\u2019ve installed a heat exchanger so I can trap some of the heat going outside and heat the basement.\nThe exchanger works perfectly but I\u2019ve been turning it on and off manually each time I start and stop the boiler and I wanted to automate this task.", "step_imgs": ["https://cdn.instructables.com/FAH/7LMJ/JS0ON6CX/FAH7LMJJS0ON6CX.LARGE.jpg", "https://cdn.instructables.com/F4A/MFIT/JS0ON6CV/F4AMFITJS0ON6CV.LARGE.jpg", "https://cdn.instructables.com/FDE/EWA1/JS0ON6CY/FDEEWA1JS0ON6CY.LARGE.jpg"], "step_title": "Step 1: Project Background"}, {"step": 2, "steps_text": "As a control board, I\u2019ve bought this thermostat module for several dollars on the Internet that can be setup for working with both cooling and heating control. The module uses a 10k NTC probe to sample the temperature and it is then compared with a given threshold.\nAs soon as that threshold is passed, the relay switches on and it stays that way until the temperature is below the threshold.", "step_imgs": ["https://cdn.instructables.com/FDK/PB1V/JS0ON6CR/FDKPB1VJS0ON6CR.LARGE.jpg", "https://cdn.instructables.com/FSU/D25Q/JS0ON6CU/FSUD25QJS0ON6CU.LARGE.jpg"], "step_title": "Step 2: Theory of Operation"}, {"step": 3, "steps_text": "The exchanger fan is originally controlled with a dimmer switch in order to regulate the speed at which it turns, so I started the project by first removing the cable and the regulator from the fan.\nAt my desk, I opened the regulator case and removed the cable completely so it can be re-routed through the relay on the thermostat.", "step_imgs": ["https://cdn.instructables.com/F2O/YS0T/JS0ON6D1/F2OYS0TJS0ON6D1.LARGE.jpg", "https://cdn.instructables.com/FIL/CXW8/JS0ON6D4/FILCXW8JS0ON6D4.LARGE.jpg", "https://cdn.instructables.com/F4Y/60VA/JS0ON6D5/F4Y60VAJS0ON6D5.LARGE.jpg", "https://cdn.instructables.com/F3T/LFC0/JS0ON6D7/F3TLFC0JS0ON6D7.LARGE.jpg", "https://cdn.instructables.com/F7G/H445/JS0ON6D8/F7GH445JS0ON6D8.LARGE.jpg"], "step_title": "Step 3: Disassemble"}, {"step": 4, "steps_text": "To power the entire assembly I\u2019ve taken out the board from 9V power supply and connected it directly to the thermostat. On one side of the relay contacts I\u2019ve connected the live wire coming from the wall socket and the other contact is then connected to the speed controller for the fan.\nThe entire schematic is very simple but you need to be very careful not to mix up the wires from the high voltage side to the low voltage side as that will be catastrophic for the electronics.\nClick on the link bellow for the full schematic:\nhttps://easyeda.com/bkolicoski/Automted-Thermostat...\nOnce all of the connections were made, I made sure to test it before I continued with putting everything into an enclosure.", "step_imgs": ["https://cdn.instructables.com/FRM/W68D/JS0ON6DA/FRMW68DJS0ON6DA.LARGE.jpg", "https://cdn.instructables.com/FOS/MGV5/JS0ON6D9/FOSMGV5JS0ON6D9.LARGE.jpg", "https://cdn.instructables.com/FXC/3INZ/JS0ON6DD/FXC3INZJS0ON6DD.LARGE.jpg", "https://cdn.instructables.com/FNN/6MSU/JS0ON6DC/FNN6MSUJS0ON6DC.LARGE.jpg", "https://cdn.instructables.com/FGX/XTMU/JS0ON6DG/FGXXTMUJS0ON6DG.LARGE.jpg", "https://cdn.instructables.com/FRN/36QJ/JS0ON75E/FRN36QJJS0ON75E.LARGE.jpg"], "step_title": "Step 4: Connect the Thermostat"}, {"step": 5, "steps_text": "For the enclosure, I\u2019ve used a junction box to house everything in. Based on your requirements you may choose to add holes or windows to it so you can monitor the temperature or adjust the speed from outside of the box but I had no need for that. Instead I\u2019ve isolated all of the modules to prevent any shorting inside and stuffed everything in.", "step_imgs": ["https://cdn.instructables.com/F7V/6HW0/JS0ON6DH/F7V6HW0JS0ON6DH.LARGE.jpg", "https://cdn.instructables.com/FA4/YORY/JS0ON6DI/FA4YORYJS0ON6DI.LARGE.jpg", "https://cdn.instructables.com/FMK/A8I9/JS0ON6DJ/FMKA8I9JS0ON6DJ.LARGE.jpg"], "step_title": "Step 5: Prepare an Enclosure"}, {"step": 6, "steps_text": "The control box is then mounted with zip ties to the boiler and I made sure to choose a place where there was no heat coming out as that can damage the electronics. This bar from where the pump control lines already come out was the perfect choice.\nAfter the box was mounted, I\u2019ve used an aluminium sticky tape to glue the NTC probe to the exhausts pulling fan on the back as this is the first part that heats up when the burning starts and cools off once it stops.\nLast, I\u2019ve connected back the wires to the fan and started the boiler to test the entire assembly. As expected, everything run perfectly so I could declare this project as done.", "step_imgs": ["https://cdn.instructables.com/FIY/K1BM/JS0ON6DK/FIYK1BMJS0ON6DK.LARGE.jpg", "https://cdn.instructables.com/F7Z/D9VT/JS0ON6DL/F7ZD9VTJS0ON6DL.LARGE.jpg", "https://cdn.instructables.com/FCL/2VGK/JS0ON6DM/FCL2VGKJS0ON6DM.LARGE.jpg", "https://cdn.instructables.com/FI3/ION7/JS0ON6DN/FI3ION7JS0ON6DN.LARGE.jpg", "https://cdn.instructables.com/FE7/XZDH/JS0ON6DO/FE7XZDHJS0ON6DO.LARGE.jpg"], "step_title": "Step 6: Mount the Thermostat"}, {"step": 7, "steps_text": "I hope that you liked this Instructable so follow me here and subscribe to my YouTube channel so you don\u2019t miss future projects where we explore the world of electronics and code.\nCheers and thanks for reading.", "step_imgs": [], "step_title": "Step 7: Enjoy!"}], "channel": "Electronics"}, {"category": "Technology", "description": "Neopixels are color-changing, individually addressable (programmable) LED lights. They are available in various forms from Adafruit.com, but I am particularly fond of the 8-mm \"through the hole\" traditional LED style. They are bright and beautiful, and you can make your own custom designs as illustrated by the Heart shape example provided herein. Arduino software is typically used to control the LED's.\nPlease see my YouTube video of the Neopixel LED Heart in light show action. Another fun way to view the Heart it is to point it at a window such as a sliding glass door to see a double-heart image reflection (as shown).", "title": "Neopixel LED Heart", "url": "https://www.instructables.com/id/Neopixel-LED-Heart/", "steps": [{"step": 1, "steps_text": "1. Adafruit 8-mm Neopixel LED's (26 needed)\n2. Cricut 12x12-in StandardGrip adhesive cutting mat (Walmart)\n3. Sparkfun LilyTiny ATTINY85 Logic Chip (and Programming supplies)\n4. USB cord for power (Walmart)\n5. Gessner small plastic bowl for Base (Walmart)\n6. Radio Shack Round Proto Board (or other small proto board)\n7. Gorilla Glue Mounting Tape Clear Squares\n8. 480 Ohm resistor\n+ Dremel and drill and cutter bits\n+ Soldering supplies\n+ Arduino Programming basics\n+ Adafruit Neopixel Library (eg; STRANDTEST)\nNote: For those without Arduino programming experience, the LilyTiny logic chip could in theory be supplied already programmed for the Heart, if there is a need. I simply use Adafruit's standard STRANDTEST app with a few tweaks.\n(Neopixel LED photos above copied from Adafruit.com)", "step_imgs": ["https://cdn.instructables.com/FLN/2DZ9/JS5C2MQA/FLN2DZ9JS5C2MQA.LARGE.jpg", "https://cdn.instructables.com/FEW/XNUF/JS5C2L7Z/FEWXNUFJS5C2L7Z.LARGE.jpg"], "step_title": "Step 1: Major Supplies"}, {"step": 2, "steps_text": "First of all, take a look at the first picture of the final assembly. Most importantly, please note that is an approximate 1/2-inch wide tab at the bottom of the heart, that inserts into the base.\nI used MicroSoft PowerPoint to develop a printable Heart template (above). Also provided is a cutting guide version. I started with a 26-lobed scalloped heart design I found online, and modified the shape slightly for better appearance with 8-mm LED's. Note that each round LED has four smaller holes which will be drilled later.\nThe heart diagram is then printed out on photo paper which is next affixed to the adhesive Cricut board as shown. Using scissors, the heart shape is carefully cut out. An Xacto knife was used to get started on the hole in middle of the heart, until scissors could be used.\nTo the back of the Cricut board, I then place a layer blue masking tape, to help prevent melting of the plastic mat during later soldering steps. The result is a Heart sandwich made of Cricut mat sandwiched between photo paper and blue masking tape.\nUsing a Dremel with a very thin 1/32-inch drill bit, four tiny holes are drilled for each LED to be insterted into the heart.", "step_imgs": ["https://cdn.instructables.com/FKI/K5BB/JS5CCZ76/FKIK5BBJS5CCZ76.LARGE.jpg", "https://cdn.instructables.com/FOE/90TN/JS4YV4T9/FOE90TNJS4YV4T9.LARGE.jpg", "https://cdn.instructables.com/FES/HS0O/JS5CCZ23/FESHS0OJS5CCZ23.LARGE.jpg", "https://cdn.instructables.com/FRF/PYM7/JS5C8J0F/FRFPYM7JS5C8J0F.LARGE.jpg", "https://cdn.instructables.com/FT3/GDG1/JS5C8J0D/FT3GDG1JS5C8J0D.LARGE.jpg", "https://cdn.instructables.com/FA3/YKDY/JS5C8IZN/FA3YKDYJS5C8IZN.LARGE.jpg", "https://cdn.instructables.com/FC6/B4IC/JS5C8JAU/FC6B4ICJS5C8JAU.LARGE.jpg"], "step_title": "Step 2: Design of the Heart Circuit Board"}, {"step": 3, "steps_text": "A wiring diagram is shown. The LED's are inserted into the drilled holes in series, with the Data Output wire from each LED bend forward to towards the Data Input pin of the next, the Data Input pin is bent backwards to touch the Data Out pin from the piror LED. The long negative wire from each LED is bent to the right to to join the Negative power rail (which will be inserted later), whereas the Postive LED wires are all bent to the left to touch the Positive rail.\nNormally I pre-test each LED with a button battery. They light up Light Blue if powered like a simple \"throwie\".\nAfter the 26 LED's are inserted, Check your work. The flat side of all LEDs should point the same direction (except corners can be slightly tricky). Each LED should have second pos lead to the left, third neg lead to the right. Check to make sure you have adequate spacing of all the wiring (no shorts).\nThe next step is to solder all of the connections. I used 24 gauge copper wire to form the Negative and Positive power rails to connect each LED. At the base of the heart for the insertion tab, for structural rigidity, I solder in two header pins - one each for Positive and Negative rail. As shown the two header pins are spaced 4 proto board holes apart (0.4-inch as shown).", "step_imgs": ["https://cdn.instructables.com/FHJ/LRCW/JS5C8JB4/FHJLRCWJS5C8JB4.LARGE.jpg", "https://cdn.instructables.com/FPD/DUYT/JS5CCZ77/FPDDUYTJS5CCZ77.LARGE.jpg", "https://cdn.instructables.com/FNX/GECP/JS5C8IZG/FNXGECPJS5C8IZG.LARGE.jpg", "https://cdn.instructables.com/F85/2QCW/JS5C8IZE/F852QCWJS5C8IZE.LARGE.jpg", "https://cdn.instructables.com/F8P/F4XJ/JS5C5FCT/F8PF4XJJS5C5FCT.LARGE.jpg"], "step_title": "Step 3: Insert LEDs and Solder Up"}, {"step": 4, "steps_text": "Normally my first step after wiring up is to test assembly operation using a regular Arduino. As you can see, the Heart as designed will now stand upright in a small bread board. Normally I am always tweaking the STRANDTEST app, so this presents an opportunity to test the soldering job as well as the new proposed color program. The LilyTiny boards are slightly challenging to reprogram, so it helps to prove everything out on the standard Arduino set-up before loading the software onto the LilyTiny board.", "step_imgs": ["https://cdn.instructables.com/FYD/1GPW/JS5CCZ6R/FYD1GPWJS5CCZ6R.LARGE.jpg"], "step_title": "Step 4: Testing the Heart Operation With an Arduino"}, {"step": 5, "steps_text": "In the final project, the Heart assembly will stand upright using the Walmart plastic bowl as a base.\nUsing a Dremel, first drill a 1/8-inch hole in the center of the plastic bowl. Then switch over to a 1/8-inch cutting bit to prepare the slot. Additionally, a 1/8-inch hole (slightly widened) is needed on the side of the bowl to pass through the USB power cord.\nThen try test fitting the Heart assembly into the round Radio Shack proto board (or substitute proto board).\nNext affix Gorilla glue pads (cut to size with scissors) to outer sides the proto board and carefully insert the proto board under the slot in the plastic bowl, with the proto board holes aligned with the slot in the bowl such that the Heart can be inserted from above. The glue pads hold the the proto board tightly to the bowl. The coppered side of the proto board should be facing down as shown (facing towards the open end of the bowl).\nInsert the Heart from above into the base. The three leads from the Heart (Pos, Data, Neg) should be visible from the underside poking through the proto board holes. Check for levelness of the shape, and then solder the three leads into place. This will lock the Heart into final position.", "step_imgs": ["https://cdn.instructables.com/FS7/VFUX/JS5CCZ7A/FS7VFUXJS5CCZ7A.LARGE.jpg", "https://cdn.instructables.com/F9X/PPQI/JS5CCZ5J/F9XPPQIJS5CCZ5J.LARGE.jpg", "https://cdn.instructables.com/FTP/PD3U/JS5CCZ6C/FTPPD3UJS5CCZ6C.LARGE.jpg", "https://cdn.instructables.com/FNV/9N2F/JS5C2WRO/FNV9N2FJS5C2WRO.LARGE.jpg", "https://cdn.instructables.com/FAA/B55X/JS5C8JAP/FAAB55XJS5C8JAP.LARGE.jpg"], "step_title": "Step 5: Preparing the Base"}, {"step": 6, "steps_text": "The power wiring diagram is shown.\nA simple USB cord was purchased at Walmart and cut with wire cutters to get the Red (pos) and Black (neg) wires. These are soldered to the LilyTiny pos and neg terminals. Also soldered to the LilyTiny terminals are Red(pos) and Black (neg) wires which connect to and are soldered to the leads from the Heart (sticking through the proto board).\nThe Data In (yellow) from data port No. 2 of the LilyTiny is a 480-ohm resistor that connects and is soldered to the Data In lead to the Heart.\nThe LilyTiny has been pre-programmed for the Heart light show. Note that the LilyTiny is wired up such that it is accessible and can be reprogrammed in-situ, should a software correction or light-show improvement be desired. My personal convention is to program the LilyTiny output Position No. 2 for the data input signal to the Neopixels.\nThe LilyTiny is my CPU board of choice for small size projects, but many other CPU control boards are possible such as Adafruit Gemma and various mini-Arduino boards available on the market. I simply got started several years ago with the LilyTiny board and that is my current go-to. The LilyTiny is basically a ATTINY-85 chip on a small proto board.\nOf course, you can alternately use batteries for power. I usually use the LiPo batteries from Adafruit.com. In that case I usually use an ON/OFF switch on the top of the base. For a switch, I usually use the LilyPad Slide Switch from SparkFun.com.\n(LilyTiny photo above taken from SparkFun.com)", "step_imgs": ["https://cdn.instructables.com/F4N/ET1F/JS5C5AAE/F4NET1FJS5C5AAE.LARGE.jpg", "https://cdn.instructables.com/FJ4/ZZV5/JS5CCZ2J/FJ4ZZV5JS5CCZ2J.LARGE.jpg", "https://cdn.instructables.com/FT4/39EM/JS5C2ZBJ/FT439EMJS5C2ZBJ.LARGE.jpg"], "step_title": "Step 6: Final Wiring"}, {"step": 7, "steps_text": "The backside of the circuit board is covered with double-stick foam tape, and trimmed with scissors and Xacto knife to the Heart shape. Normally this may be good enough for some shapes, but the for the Heart I affixed some pink photo paper to the outside to help with appearance (given it is hard to do a good job with the foam tape on such a curvey shape).", "step_imgs": ["https://cdn.instructables.com/FXP/ZZII/JS5CCYY0/FXPZZIIJS5CCYY0.LARGE.jpg"], "step_title": "Step 7: Finishing Touches"}, {"step": 8, "steps_text": "The Neopixel LED's are incredibly colorful and bright. As some of you know, the challenge with these LED's is capturing via photographs the great beauty that your eye actually sees. I have done my best for this Instructable.\nNote that the camera sees things your eyes do not see, and vice versa. In the YouTube video, you can see some apparent oscillations/flickering that your eye does not really see. Also the stop-action of fast-shutter speed during the Theater Chase sequence captures individual LED's being on and off, whereas your eyes just see moving dots. Some of the colors are slightly differernt with the camera, what appears bright yellow to the eyes is a little greenish-yellow in the video.\nAs mentioned earlier, we also discovered the beauty of double reflections from windows, if the Heart is pointed at, for example, a sliding glass door.", "step_imgs": ["https://cdn.instructables.com/F3E/9IU7/JS5CCZ53/F3E9IU7JS5CCZ53.LARGE.jpg", "https://cdn.instructables.com/FDQ/PVHK/JS5CCYUQ/FDQPVHKJS5CCYUQ.LARGE.jpg", "https://cdn.instructables.com/F65/579O/JS5C325N/F65579OJS5C325N.LARGE.jpg", "https://cdn.instructables.com/FKF/ZG7N/JS5C325M/FKFZG7NJS5C325M.LARGE.jpg", "https://cdn.instructables.com/FSK/5ZUN/JS5CCZ49/FSK5ZUNJS5CCZ49.LARGE.jpg", "https://cdn.instructables.com/FXT/F4NP/JS5CCZ54/FXTF4NPJS5CCZ54.LARGE.jpg"], "step_title": "Step 8: Taking Pictures of the Operation"}, {"step": 9, "steps_text": "For several years I've been thinking about how to best make a Heart shape from circles. If you know my Instructables, that usually means I am wondering how many pie tins I need to buy to make a good looking display. The answer it seems comes from the sewing community that a basic Scalloped Heart has 26 lobes (circles).\nBut this project has much larger potential than just Hearts, because many more shapes are possible. When the shape is a numeral, I call it an \"electronic birthday candle\", to be fully implemented in a future Instructable. Our family has already put Age 7 above to good use for this purpose. Suffice it to say, the overall project essentially requires a circle-based font system based built around 8-mm LED circles. We have a 10 year birthday coming up next, that will force the question how to best handle of double numbers.\nAside from shapes, this Instructable presents a method for arranging 8-mm LED's in a custom built strip with double-sided sticky tape on the back. The resulting LED strip could be attached to a wall, or say the inside of a frame for an infinity mirror project, which is my next planned applcation. This technique could conceivably help expand the use of through-the-hole Neopixel LEDs, which are currently somewhat inconvenient to use because the close spacing of the four pins does not always fit well into standard 0.1-inch pitch breadboard and proto boards.\nI feel the project also highlights the beauty of these 8-mm Neoplixel LED's, which I am hoping remain avaialble on the market.\nIf you are new to Arduino programming, the simplicity of the LilyTiny logic chip in the Heart power wiring diagram perhaps more clearly shows the basic idea of how to use the Arduino \"development environment\". The LilTiny and LilyTwinkle logic chips from SparkFun.com actually come pre-programmed, so if you want to use the preloaded logic, there is no programming required. In this project, I needed to erase the pre-loaded software and add my own software. Of course, it does not take too much coding experience, because you are generally using an app that someone else already developed for you. Once you get the idea, it is not too hard to graduate to that next step.", "step_imgs": ["https://cdn.instructables.com/F8T/OY84/JSAOTCDP/F8TOY84JSAOTCDP.LARGE.jpg", "https://cdn.instructables.com/FMB/86MT/JSAOTCEN/FMB86MTJSAOTCEN.LARGE.jpg", "https://cdn.instructables.com/FNP/NJRF/JSAOTCGB/FNPNJRFJSAOTCGB.LARGE.jpg"], "step_title": "Step 9: Teachings of the Heart Project"}], "channel": "Art"}, {"category": "Technology", "description": "Floating things with sound might seem like science fiction or something you could only find in a physics lab, but actually many people have shown that its easy to diy. There are simple designs:\nwww.instructables.com/id/Easy-Acoustic-Levitator/\nwww.instructables.com/id/Mini-Acoustic-Levitation/\nand there are not quite as simple designs:\nwww.instructables.com/id/Acoustic-Levitator/\nIn this project I'm aiming for something in-between along with some cool demonstrations. If you just want a quick overview then check out the post on my website.\nThe physics behind acoustic levitation gets a little complicated but the general idea is that if you take a sound wave and reflect it back into itself, this will setup a stationary wave. Somewhere along that wave there will be a condition (or several of them) where the forces are directed towards a single point, and if the acoustic power is high enough, this can overcome gravity and we get stable levitation.", "title": "Simple Acoustic Levitation! Float Things With Sound, Float Sound With Sound", "url": "https://www.instructables.com/id/Simple-Acoustic-Levitation-Float-Things-With-Sound/", "steps": [{"step": 1, "steps_text": "The frequency of sound used to levitate objects must be high enough so that the object doesn't fall out of the levitation zone (also called pressure node) during a single cycle of the wave. Therefore these frequencies are typically in the ultrasound region(< 20 kHz), so we need a special speaker to generate the sound. Luckily these can be found pretty cheap as they are used for range finder applications. These speakers are quartz crystals which usually resonates at 40 kHz, and the cheapest place I found to get them is to desolder them from cheap HC-SR04 range finder modules, but you can also buy them directly. If you want more power then you can buy higher quality transducers from farnell, I measured them to have twice the acoustic power.\nNext we need a way to generate the 40kHz signal to power the speakers. If you have a signal generator then set it to the resonance frequency and crank up the amplitude as high as it goes. If not then you can simply use an arduino. It is possible to power the speakers straight from a digital IO pin however the 5V amplitude does not generate much power, so I would recommend using a step up converter module to generate 18V and power a mosfet driver IC such as the TC4427. The will turn the 40KHz 5V signal into a 40kHz 18V signal which can then power the transducers.\nTo double the power you can use two speakers facing each other. I designed a 3-piece jig to hold the speakers and change their separation by turning the center screw. It turns out that this has very little effect but it did make for some nice results. The jig can be 3D printed and transducers glued on with hot glue.\nAs you can see the wiring it pretty simple and there is no need to worry about the polarity of the transducers here as I will explain in the next section.", "step_imgs": ["https://cdn.instructables.com/FHK/VOKA/JS0ONBSY/FHKVOKAJS0ONBSY.LARGE.jpg", "https://cdn.instructables.com/F95/SFFC/JS0ONBT3/F95SFFCJS0ONBT3.LARGE.jpg", "https://cdn.instructables.com/FP1/ZT0L/JS0ONBT6/FP1ZT0LJS0ONBT6.LARGE.jpg", "https://cdn.instructables.com/FC9/4SJ4/JS5CDCE5/FC94SJ4JS5CDCE5.LARGE.jpg"], "step_title": "Step 1: The Components"}, {"step": 2, "steps_text": "To test the setup you can connect one of the transducers to act as a speaker, and the other to act as a microphone which can viewed on the oscilloscope.\nThe wavelength of the sound can be calculated by \u03bb = c / \u03bd, which is ~0.9 cm for a 40 kHz wave travelling at 340 m/s. This means that the levitation zones are spaced out by roughly 5 mm.\nYou can see that on my setup, the screw has a pitch of 1 mm so roughly 4 turns causes 180 degree phase shift between the transmitted signal and the received signal.\nInitially I thought that the transducers would have to be a set distance apart so that they would constructively interfere to double the output power. However, It turns out that this is not the case. When waves interfere, the energy is not lost, if there is destructive interference then somewhere else there will be constructive interference.\nFor levitation this means that the transducers can be placed any distance apart which is vaguely close together (a few cm) and this will be good enough for levitation.", "step_imgs": ["https://cdn.instructables.com/FF1/BZGY/JS5C235E/FF1BZGYJS5C235E.ANIMATED.LARGE.gif"], "step_title": "Step 2: The Setup"}, {"step": 3, "steps_text": "The best things I found to levitate are polystyrene bead. When the setup is switched on, placing the beads in between the transducers will cause them to get pulled inside and they will appear frozen in mid-air!!\nThis is an absolutely stunning demonstration and does not fail to amaze anyone from kids to professors.\nAnother amazing demonstration is placing a piece of dry ice between the transducers. The dry ice spills out cold air which is drawn into the low pressure nodes and condenses out water vapor.", "step_imgs": ["https://cdn.instructables.com/FT3/AGX6/JS5C235F/FT3AGX6JS5C235F.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F5U/E54K/JS5C235J/F5UE54KJS5C235J.LARGE.jpg"], "step_title": "Step 3: Floating Things"}, {"step": 4, "steps_text": "Now this is the not quite so simple acoustic levitation, using two of these rigs its actually possible to make a speaker in which the air itself is the diaphragm. Imagine taking a pressure node from one rig and moving it back and forth using a second pair of transducers. The pressure node can now act as the diaphragm in a speaker.\nYou can see how I constructed a setup to try this; the two pairs of transducers are perpendicular to each other, one is driven from a constant 40 kHz source (arduino) and the other from a function generator. There is also a microphone next to the setup to record the output sound.\nUsing an oscilloscope, the frequency of the yellow pair is measured to be exactly 40,006.8 Hz. My signal generator has a resolution of 1 Hz so I set it to output three different frequencies to try and generate three different tones.\nThe frequencies are :40,007 Hz, 40,010 Hz and 40,030 Hz, and you can see the traces captured on the oscilloscope.\nI should mention here that the transducers on their own do not make any sound that you can hear, but have a listen to what the microphone picks up when the three offset frequencies are fed in on the white transducers (video on next step).\nThere is sound!! It looks like the microphone picks up: a sub 1 Hz, ~ 3 Hz and ~ 23 Hz sounds\nThe physics here is actually pretty simple, when two waves of different frequencies (f1 & f2) interfere their superposition leads to 2 new frequency components; one at the average frequency ([f1 + f2] / 2), and one at the difference between the original frequencies (f1 - f2), called the beat frequency.\nWhich is exactly what the microphone picks up:\n40,007 Hz - 40,006.8 Hz = 0.2 Hz\n40,010 Hz - 40,006.8 Hz = 3.2 Hz\n40,030 Hz - 40,006.8 Hz = 23.2 Hz\nWikipedia has a very good explanation of this.\nSo as long as the frequencies stay close to the resonance frequency of the quartz transducers, what we have here is a speaker made out of thin air.", "step_imgs": ["https://cdn.instructables.com/F02/HWZD/JS0ONBS3/F02HWZDJS0ONBS3.LARGE.jpg", "https://cdn.instructables.com/FO4/0992/JS5C25EJ/FO40992JS5C25EJ.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FYW/3UMM/JS5C25EK/FYW3UMMJS5C25EK.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FCL/9ACH/JS5C25EL/FCL9ACHJS5C25EL.ANIMATED.LARGE.gif"], "step_title": "Step 4: Floating Sound With Sound"}, {"step": 5, "steps_text": "", "step_imgs": [], "step_title": "Step 5: Results"}, {"step": 6, "steps_text": "Personally I think this is the best demonstration of standing waves at a higher level. It is visually amazing and can easily be described mathematically with the help of an oscilloscope.\nThe components required are extremely cheap and the setup uses barely any power, so it could make a pretty sweet desk ornament.\nThe electronics may seem complicated but in total you need 2 modules, 2 transducers, 1 chip and less than 10 wires which are hard to mess up, so do not let that put you off from trying this.\nThe 3d printed case is absolutely not necessary, the transducers can be held close together with pretty much anything, I'm sure cardboard and super glue would work amazingly well.\nFinally I hope you've enjoyed this! I'm happy to answer questions and let me know if anything isn't clear enough :)", "step_imgs": [], "step_title": "Step 6: Conclusion"}], "channel": "Science"}, {"category": "Technology", "description": "This Instructable is a variant of the original IV Swinger 2:\nhttps://www.instructables.com/id/IV-Swinger-2-a-50-IV-Curve-Tracer/\nIf you came here from there, welcome!\nOtherwise, please visit that Instructable first. You may or may not end up back here depending on which variant you have chosen.", "title": "IV Swinger 2 - PCB (PV Module, SSR)", "url": "https://www.instructables.com/id/IV-Swinger-2-PCB-PV-Module-SSR/", "steps": [{"step": 1, "steps_text": "Please refer to Step 1 in the original Instructable:\nhttps://www.instructables.com/id/IV-Swinger-2-a-50-IV-Curve-Tracer/\nIf you are back here, it means you have chosen:\nPCB - PV module version, solid-state relays (SSR)\nAttached to this step are the following:\nPDF of the steps of this Instructable\nPDF of the schematic of this version\nPDF with images of the top and bottom of the PCB", "step_imgs": [], "step_title": "Step 1: Understand the HW Design / Choose Variant"}, {"step": 2, "steps_text": "Before spending time building the hardware, install the Arduino software and the IV Swinger 2 application on the laptop that you\u2019ll be using.\nInstall Arduino IDE:\nhttps://www.arduino.cc/en/Main/Software\nInstall IV Swinger 2 app:\nhttps://github.com/csatt/IV_Swinger/releases/latest\nMake sure both of the above come up before proceeding. If necessary, upgrade the OS on your computer", "step_imgs": [], "step_title": "Step 2: Install Software"}, {"step": 3, "steps_text": "Currently, the PCB must be purchased from a manufacturing house that will actually fabricate it for your order. The downside of this is that you\u2019ll probably have to buy more than you need. I have used the following two:\nOSH Park:\nhttps://oshpark.com\nMade in USA\nCost: $25 for 3 PCBs (includes shipping)\nTime: < 12 days to ship\nPCBWay:\nhttps://www.pcbway.com\nMade in China\nCost: $5 for 10 PCBs + shipping ($16 DHL to CA)\nTime: < 5 days to ship\nAmazingly, I have put in orders to PCBWay on a Monday and had the boards in my hands in California on Friday.\nI have shared this PCB design on PCBWay, and you can order it directly using the following link:\nhttps://www.pcbway.com/project/shareproject/W112835ASU2_IV_Swinger_2_ss_mod_RevB_2018_12_04.html\nAlternately, you can order PCBs from OSH Park (or anywhere else) by uploading the ZIP archive of the Gerber files, which are found in the GitHub repository:\nIV_Swinger/PCB/IV_Swinger_2_ssr_mod/Gerber/*.zip\nSoon, I hope to find someone who wants to sell individual PCBs on eBay (possibly in kits, that include all the other parts too).", "step_imgs": ["https://cdn.instructables.com/F9X/RNHI/JS0OO1KE/F9XRNHIJS0OO1KE.LARGE.jpg"], "step_title": "Step 3: Order PCB"}, {"step": 4, "steps_text": "The other necessary parts to build an IV Swinger 2 can all be purchased online from Amazon and Digi-Key.\nThe SSR PV module version bill of materials (BOM) is attached to this step. It can also be downloaded from:\nhttps://github.com/csatt/IV_Swinger/raw/master/PCB/BOM/ssr_mod_BOM.pdf\nThe BOM has an Amazon link and a Digi-Key link at the bottom. The Amazon link is a \u201cwish list\u201d that can be used to populate your cart. Some of the items come in quantities larger (in some cases much larger) than needed to build a single IV Swinger 2. You may, of course, choose to find equivalents that are offered in smaller quantities. Also, many of the items are things that you may already have, so don\u2019t necessarily just blindly order everything on the list.\nThe Digi-Key link is a pre-populated shopping cart. Again, you\u2019ll want to check if you already have any of the items before ordering.\nIn both cases, it is possible (or probable) that certain items will go out of stock or be discontinued, so you\u2019ll have to find suitable substitutions. Note that there are some of the Digi-Key items have *ALTERNATE* in the \u201cCustomer Reference field. These should only be ordered if the primary version of the same part is marked as \u201cbackorder\u201d.\nAlso included below is the link to donate to the original Arduino developers. I donate $5 for each $10 Arduino clone that I buy. This is your choice, but I think it is the right thing to do.\nDonate to Arduino.cc:\nhttps://www.arduino.cc/en/Main/Contribute", "step_imgs": [], "step_title": "Step 4: Buy Other Parts"}, {"step": 5, "steps_text": "Holding:\nVise\n3rd hand tool with magnifying glass\nTape (preferably Kapton, but Scotch ok)\nLong/needle-nosed pliers\nSoldering:\nSoldering iron (preferably temp controlled solder station)\nTip cleaner\nRosin core solder\nSolder sucker or solder wick\nCutting:\nWire cutter (flush cut)\nWire stripper\nDrilling:\nDrill\n1/16\" bit (pilot for 9/64\")\n9/64\" bit (standoffs)\n11/64\" bit (pilot for 13/64\")\n13/64\" bit (binding posts)\n3/8\" Forstner bit (preferred - USB cable hole)\nAlternate: 1/8\u201d, 3/16\u201d, 7/32\u201d, 1/4\u201d, 9/32\u201d, 5/16\u201d, 11/32\u201d, 3/8\u201d, and 25/64\u201d normal bits\nOther:\nDigital Multimeter (DMM)\nSmall Phillips screwdriver\n9V battery\nSharpie\nRuler\nWater spray bottle", "step_imgs": ["https://cdn.instructables.com/F32/I9GH/JS0OO2FT/F32I9GHJS0OO2FT.LARGE.jpg", "https://cdn.instructables.com/FOA/TTHI/JS0OO2FS/FOATTHIJS0OO2FS.LARGE.jpg", "https://cdn.instructables.com/FDH/UAOT/JS0OO2FR/FDHUAOTJS0OO2FR.LARGE.jpg", "https://cdn.instructables.com/FI5/7L73/JS0OO2FU/FI57L73JS0OO2FU.LARGE.jpg", "https://cdn.instructables.com/FK0/U824/JS0OO2FC/FK0U824JS0OO2FC.LARGE.jpg"], "step_title": "Step 5: Gather / Buy Tools"}, {"step": 6, "steps_text": "Soldering NOTES:\nIf you don't have a lot of soldering experience, read this:\nAdafruit: Common Soldering Problems\nSoldering components to the PCB is pretty mistake-proof, but doing it in the order described is recommended (shortest -> tallest).\nSome components have a correct and an incorrect orientation and some don\u2019t matter. Pay attention to the instructions.\nI highly recommend using 63/37 0.031\u201d (or 0.8mm) rosin core solder. Yes, it is 37% lead, but it is not a health risk for you (really), and environmentally insignificant when used by hobbyists. You\u2019ll solder like a pro.", "step_imgs": ["https://cdn.instructables.com/F0H/5FUT/JS0OO2UM/F0H5FUTJS0OO2UM.LARGE.jpg"], "step_title": "Step 6: Prepare for Soldering"}, {"step": 7, "steps_text": "Solder 1/4W resistors to PCB:\nResistors can be inserted in either orientation. It is very important to use the correct value for each, however.\nInsert all resistors before soldering. Tape down on front to hold in place OR bend leads slightly on back.\n\nPV module version (SSR) \u2013 20 joints:\nR1 (150k): _______\nR2 (7.5k): _______\nR3 (1k): _______\nR4 (1k): _______\nR5 (22k): _______\nR6 (180\u03a9): _______ (180 ohms not k!)\nR7 (180\u03a9): _______\nR8 (180\u03a9): _______\nRF (75k): _______\nRG (1k): _______\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface. Solder all 20 leads\n_______\nInspect with magnifying glass to make sure all joints are good and there are no solder bridges _______\n\nNOTE: A solder bridge is ok between the ends of RF and RG\nTrim all leads _______\nUse multimeter to measure exact resistances of soldered resistors:\nWith the PCB still upside down, measure the resistances with a DMM. The resistances (but unfortunately not the names) are marked on the back. Record the exact values of the ones marked with an asterisk (*) below \u2013 these values will be used later (Step 27:\u201cApply resistor calibration\u201d). The others should just be close to their specified value (should be 1%, but don\u2019t worry as long as it is < 10%) - the main point is to catch any mistakes you might have made.\n\nPV module version (SSR):\nR1 (150k): _______ *\nR2 (7.5k): _______ *\nR3 (1k): _______\nR4 (1k): _______\nR5 (22k): _______\nR6 (180\u03a9): _______ (180 ohms not k!)\nR7 (180\u03a9): _______\nR8 (180\u03a9): _______\nRF (75k): _______ *\nRG (1k): _______ *", "step_imgs": ["https://cdn.instructables.com/FPS/SJC5/JS0OO3W1/FPSSJC5JS0OO3W1.LARGE.jpg", "https://cdn.instructables.com/F83/6JE4/JS0OO4GT/F836JE4JS0OO4GT.LARGE.jpg"], "step_title": "Step 7: 1/4W Resistors"}, {"step": 8, "steps_text": "Solder IC sockets to PCB \u2013 16 joints:\nInsert both sockets before soldering. Tape down on front to hold in place.\nMake sure notch is on the left end as marked on the PCB\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface and solder all 16 pins\n________\nInspect with magnifying glass to make sure all joints are good\n________\nIf you have opted not to use sockets, solder the ICs directly to the PCB instead of the sockets. Make sure dot is on the left end of the TLV2462 (pin 1). Make sure notch and dot are on the left end of the MCP3202 (pin 1).", "step_imgs": ["https://cdn.instructables.com/FAT/KO6H/JS0OO4V1/FATKO6HJS0OO4V1.LARGE.jpg"], "step_title": "Step 8: IC Sockets"}, {"step": 9, "steps_text": "Solder stacking connectors and female header to PCB \u2013 30 joints:\nInsert stacking connectors A1, A2, and A3 and female header FH. These connectors are symmetrical, so there\u2019s no \u201cbackwards\u201d. Tape down to hold in place.\nA1 (10 pin):________\nA2 (8 pin):________\nA3 (8 pin):________\nFH (4 pin):________\nNOTES: Stacking connector A4 is not needed. Stacking connector A1 can be 8-pin (pins 9 and 10 are not used).\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface and solder all pins\n________\n\nNOTE: the pins on A1, A2, and A3 that are actually used on the PCB are circled on the back of the PCB. Soldering the others provides physical support only.\nInspect with magnifying glass to make sure joints are good and there are no solder bridges\n________", "step_imgs": ["https://cdn.instructables.com/FQM/T1D4/JS0OO56Y/FQMT1D4JS0OO56Y.LARGE.jpg", "https://cdn.instructables.com/F3A/ZU60/JS0OO570/F3AZU60JS0OO570.LARGE.jpg"], "step_title": "Step 9: Stacking Connectors and Female Header"}, {"step": 10, "steps_text": "Solder screw terminal block to PCB \u2013 2 joints:\nInsert screw terminal block with the openings facing left. Tape down to hold in place.\nJ1: ________\n\nNOTE 1: The screw terminal block may be 2-pin or 3-pin. If a 2-pin block is used, insert it in the lower two holes and leave the top hole open.\n\nNOTE 2: The screw terminal block may be omitted entirely, soldering the 18ga wire directly to the holes in the PCB (later).\nFlip board upside down and hold with vise or 3rd hand tool OR tape board to work surface and solder all joints\n________\nInspect with magnifying glass to make sure joints are good and there are no solder bridges\n________", "step_imgs": ["https://cdn.instructables.com/FY8/1H3O/JS0OO5JL/FY81H3OJS0OO5JL.LARGE.jpg", "https://cdn.instructables.com/F1Z/IY0D/JS0OO5JK/F1ZIY0DJS0OO5JK.LARGE.jpg"], "step_title": "Step 10: Screw Terminal Block"}, {"step": 11, "steps_text": "The small filter capacitors are not polarized, so it doesn\u2019t matter which lead goes in which hole.\nSolder 0.1uF capacitors to PCB - 4 joints:\nInsert both capacitors before soldering. Bend leads on back to hold in place.\nC3:________\nC6:________\nFlip board upside down and hold with vise or 3rd hand tool and solder all four joints\n________\nInspect with magnifying glass to make sure joints are good and there are no solder bridges\n________\nTrim all 4 leads\n_______\nSolder 2.2nF (2200pF) capacitors to PCB - 4 joints:\nInsert both capacitors before soldering. Bend leads on back to hold in place.\nC4:________\nC5:________\nFlip board upside down and hold with vise or 3rd hand tool and solder all four joints\n________\nInspect with magnifying glass to make sure joints are good and there are no solder bridges\n________\nTrim all 4 leads\n_______", "step_imgs": ["https://cdn.instructables.com/FJM/L0JQ/JS0OO5XN/FJML0JQJS0OO5XN.LARGE.jpg", "https://cdn.instructables.com/FSA/4LXU/JS0OO5XK/FSA4LXUJS0OO5XK.LARGE.jpg", "https://cdn.instructables.com/F2A/1LBY/JS0OO5XJ/F2A1LBYJS0OO5XJ.LARGE.jpg"], "step_title": "Step 11: Filter Capacitors"}, {"step": 12, "steps_text": "The purpose of the bypass diode(s) is to protect the electronics in case the PV is connected to the IV Swinger 2 backwards.\nThe PCBs were designed for 15A, 45V bypass diodes (15SQ045). The module versions require two of these in series.\nThere is a 15A, 100V part (15SQ100) that may be used in place of the two 45V parts in the module versions (PREFERRED).\nSolder bypass diode(s) to PCB \u2013 2 or 4 joints:\nBend lead on striped end of diode around the diode so that it points in the same direction as the other lead.\n100V diode (1x 15SQ100). Insert leads as follows:\nPad D1, striped end (top):________\nPad D4, non-striped end (bottom):________\nOR\n45V diodes (2x 15SQ045). Insert leads as follows:\nPad D1, striped end (top):________\nPad D2, non-striped end (bottom):________\nPad D3, striped end (top):________\nPad D4, non-striped end (bottom):________\nFlip board upside down and hold with vise or 3rd hand tool and solder both (or all four) leads\n________\nTrim leads\n_______\nRe-flow/add solder on both/all leads\n_______\n(This is because leads are thick, and may not have heated well before trimming)\nInspect with magnifying glass to make sure joints are good\n________", "step_imgs": ["https://cdn.instructables.com/F7P/AJ03/JS0OO6HQ/F7PAJ03JS0OO6HQ.LARGE.jpg", "https://cdn.instructables.com/FZR/7OVJ/JS0OO6HP/FZR7OVJJS0OO6HP.LARGE.jpg", "https://cdn.instructables.com/F94/ZHSS/JS0OO6HO/F94ZHSSJS0OO6HO.LARGE.jpg", "https://cdn.instructables.com/F49/XCQ1/JS0OO6HM/F49XCQ1JS0OO6HM.LARGE.jpg"], "step_title": "Step 12: Bypass Diode(s)"}, {"step": 13, "steps_text": "The shunt resistor is oriented vertically on the PCB and should be soldered on at this point.\nSolder vertical shunt resistor to PCB \u2013 2 joints:\nBend one lead (either one) of the 5m\u03a9 shunt resistor around the resistor so that it points in the same direction as the other lead:\n________\nInsert bent lead in lower hole and unbent lead in upper hole. Tape in place.\nSHUNT:________\nFlip board upside down and hold with vise or 3rd hand tool and solder both leads\n________\nTrim both leads\n_______\nRe-flow/add solder on both leads\n_______\n(This is because leads are thick, and may not have heated well before trimming)\nInspect with magnifying glass to make sure joints are good\n________", "step_imgs": ["https://cdn.instructables.com/FPM/KGF3/JS0OO6YA/FPMKGF3JS0OO6YA.LARGE.jpg", "https://cdn.instructables.com/FSQ/0620/JS0OO6XE/FSQ0620JS0OO6XE.LARGE.jpg", "https://cdn.instructables.com/FOF/FJ0S/JS0OO6XF/FOFFJ0SJS0OO6XF.LARGE.jpg"], "step_title": "Step 13: Vertical Shunt Resistor"}, {"step": 14, "steps_text": "The bleed resistor is oriented vertically on the PCB and should be soldered on at this point.\nSolder vertical bleed resistor to PCB \u2013 2 joints:\nBend one lead (either one) of the 47\u03a9 bleed resistor around the resistor so that it points in the same direction as the other lead:\n________\nInsert bent lead in lower hole and unbent lead in upper hole. Tape in place.\nRB:________\nFlip board upside down and hold with vise or 3rd hand tool and solder both leads\n________\nTrim both leads\n_______\nRe-flow/add solder on both leads\n_______\n(This is because leads are thick, and may not have heated well before trimming)\nInspect with magnifying glass to make sure joints are good\n________", "step_imgs": ["https://cdn.instructables.com/FJI/F36H/JS0OO7FQ/FJIF36HJS0OO7FQ.LARGE.jpg", "https://cdn.instructables.com/F4J/O1TH/JS0OO7FP/F4JO1THJS0OO7FP.LARGE.jpg", "https://cdn.instructables.com/FDQ/YBE2/JS0OO7FI/FDQYBE2JS0OO7FI.LARGE.jpg", "https://cdn.instructables.com/FB4/P58L/JS0OO7FG/FB4P58LJS0OO7FG.LARGE.jpg"], "step_title": "Step 14: Vertical Bleed Resistor"}, {"step": 15, "steps_text": "Solder SSRs to PCB \u2013 12 joints:\nStack all three SSRs and put them in vise with leads pointing straight up. Try to make sure they are all aligned so they will look nice.\n________\nLower the PCB over the leads. It is very important that the front of the SSRs is pointed toward the middle of the PCB. The front is the black side with the label. The back has the metal heat sink pad. Hold the PCB with the 3rd hand tool so the leads all extend the same amount as the stacking connector pins and are perpendicular to the PCB.\n\nThe bodies of the SSRs should not be sitting flat on the PCB; there should be some separation (~1cm) for heat dissipation.\n________\nSolder the 6 outer leads\n________\nTrim 6 outer leads\n________\nSolder 6 inner leads\n________\nTrim 6 inner leads\n________\nRe-flow/add solder on all 12 leads\n________\nInspect with magnifying glass to make sure joints are good\n________", "step_imgs": ["https://cdn.instructables.com/FLT/YCRO/JS0OO7U7/FLTYCROJS0OO7U7.LARGE.jpg", "https://cdn.instructables.com/F5V/QLBJ/JS0OO7U6/F5VQLBJJS0OO7U6.LARGE.jpg", "https://cdn.instructables.com/FZP/5PCB/JS0OO7TT/FZP5PCBJS0OO7TT.LARGE.jpg", "https://cdn.instructables.com/F2U/GJMH/JS0OO7TS/F2UGJMHJS0OO7TS.LARGE.jpg"], "step_title": "Step 15: Solid-state Relays"}, {"step": 16, "steps_text": "Solder load capacitors to PCB:\nModule versions use 1000\u00b5F, 100V load capacitors.\nThese are polarized electrolytic capacitors, so orientation is important.\nInsert load capacitors in position. Stripe side (shorter lead) goes to the right \u2013 this is the negative lead. Tape to hold in place.\nC1________\nC2________\nFlip board upside down and hold with vise or 3rd hand tool\n________\nSolder all 4 leads\n________\nTrim all 4 leads\n_______\nRe-flow/add solder on all 4 leads\n_______\n(This is because leads are thick, and may not have heated well before trimming)\nInspect with magnifying glass to make sure joints are good\n________", "step_imgs": ["https://cdn.instructables.com/FTG/WQ9B/JS0OO8MT/FTGWQ9BJS0OO8MT.LARGE.jpg", "https://cdn.instructables.com/FYS/J0SS/JS0OO8MN/FYSJ0SSJS0OO8MN.LARGE.jpg", "https://cdn.instructables.com/FJ0/NB9T/JS0OO8MH/FJ0NB9TJS0OO8MH.LARGE.jpg"], "step_title": "Step 16: Load Capacitors"}, {"step": 17, "steps_text": "Some people think it is important to clean off the flux residue from the PCB after soldering. It makes it looks nicer, but since the PCB sits on top of the Arduino, you don\u2019t see the back anyway.\nFunctionally, it shouldn\u2019t matter. The solder manufacturer Kester says this:\n\u201cRosin flux residues are non-conductive and non-corrosive. Under normal circumstances they do not have to be removed from a printed circuit assembly. Rosin residue removal would be for cosmetic considerations. In an environment where the working temperature of the assembly will exceed 200\u00b0F the rosin residues will melt and become conductive, in these situations flux removal is required.\u201d\nIf you do want to clean it off, see this Instructable: https://www.instructables.com/id/Cleaning-up-your-PCB/", "step_imgs": [], "step_title": "Step 17: Optionally Clean Flux Residue From PCB"}, {"step": 18, "steps_text": "Using the digital multimeter (DMM) set on the continuity check (beep), check that there is no continuity between the following:\nPower to ground (mandatory):\nLeft IC socket, pin 8 to pin 4\nOR\nRight IC socket, pin 8 to pin 4\nOther (recommended):\nAll \u201cneighbor\u201d pins or solder joints. None should indicate continuity, except the pairs circled in the pictures which are connected.\nThe idea is to find solder bridges that you didn\u2019t see visually", "step_imgs": ["https://cdn.instructables.com/FC8/8B8S/JS0OO9F7/FC88B8SJS0OO9F7.LARGE.jpg", "https://cdn.instructables.com/FP5/AUIW/JS0OO9JR/FP5AUIWJS0OO9JR.LARGE.jpg", "https://cdn.instructables.com/FGE/QU4J/JS0OO9IZ/FGEQU4JJS0OO9IZ.LARGE.jpg"], "step_title": "Step 18: Check for Shorts"}, {"step": 19, "steps_text": "Static electricity can destroy ICs. Take off your shoes and touch something metal connected to ground before handling them, if possible.\nInsert TLV2462 in left socket_________\nMake sure dot is on the left end (pin 1)\nLegs may have to be bent inward slightly\nInsert MCP3202 in right socket__________\nMake sure notch and dot are on the left end (pin 1)\nLegs may have to be bent inward slightly", "step_imgs": ["https://cdn.instructables.com/FKR/19QA/JS0OOA2V/FKR19QAJS0OOA2V.LARGE.jpg", "https://cdn.instructables.com/FRV/N6EA/JS0OOA0Y/FRVN6EAJS0OOA0Y.LARGE.jpg"], "step_title": "Step 19: Insert ICs"}, {"step": 20, "steps_text": "Prepare load circuit wires:\nNOTE: This can be any stranded AWG 18 or AWG 16 insulated wire such as from a typical household extension/lamp cord or heavier speaker wire. AWG 18 solid core is fine too. If solid core is used, ignore the instructions to twist and \u201ctin\u201d the strands.\n\"PV-\": PV- (black) binding post to PV- screw terminal on PCB (J1)\n\u201cPV+\u201d: PV+ (red) binding post to PV+ screw terminal on PCB (J1)\nCut to length: 7 cm\nPV-________\nPV+________\nStrip 1 cm on each end and twist strands\nPV-________\nPV+________\nCrimp cable ring connector on one end using pliers (or vise / ViseGrips / crimping tool) PV-________\nPV+________\nHeat crimp with the soldering iron and flow solder into strands\nPV-________\nPV+________\nHeat the strands of the other twisted end and flow solder into the strands (i.e. \"tin\" it) PV-________\nPV+________", "step_imgs": ["https://cdn.instructables.com/F3L/OPK8/JS0OOB9W/F3LOPK8JS0OOB9W.LARGE.jpg"], "step_title": "Step 20: Prepare Load Circuit Wires"}, {"step": 21, "steps_text": "Refer to the drawing of off-PCB connections for this step. These connections use the load circuit wires that were prepared in the previous step.\nMake binding post connections:\nRemove outer nuts and washers from threaded posts\n________\nInsert threaded post of black side through the cable ring connector on load circuit wire:\n\u201cPV-\u201c\n________\nInsert threaded post of red side through the cable ring connector on load circuit wire:\n\u201cPV+\u201c\n________\nPut washers back on\n________\nPut nuts on and tighten\n________\nMake PCB connections:\nLoosen screw and insert the twisted/soldered end of the load circuit wire from the black binding post into the lower hole of screw terminal J1 and tighten down the screw.\n\u201cPV-\u201c\n_________\nLoosen screw and insert the twisted/soldered end of the load circuit wire from the red binding post into the adjacent hole of screw terminal J1 and tighten down the screw.\n\u201cPV+\u201c\n_________", "step_imgs": ["https://cdn.instructables.com/FJQ/268X/JS0OOC30/FJQ268XJS0OOC30.LARGE.jpg", "https://cdn.instructables.com/FV1/KVZG/JS0OOCDK/FV1KVZGJS0OOCDK.LARGE.jpg", "https://cdn.instructables.com/FHN/7ZLN/JS0OOCE2/FHN7ZLNJS0OOCE2.LARGE.jpg"], "step_title": "Step 21: Make Load Circuit Connections"}, {"step": 22, "steps_text": "Check off-PCB connections:\nUse the drawing of off-PCB connections and double-check that connections match the drawing.\n__________\nTug wires connected to screw-terminal blocks gently to make sure they are securely connected.\n__________", "step_imgs": [], "step_title": "Step 22: Check Off-PCB Connections"}, {"step": 23, "steps_text": "Mate PCB with Arduino:\nPut tape on metal USB connector housing where PCB will touch it\n________\nLine up stacking connector pins on bottom of the PCB with the corresponding connectors on the top of the Arduino and press the boards together, taking care not to bend any of the pins.\n________", "step_imgs": ["https://cdn.instructables.com/F1F/5DUM/JS0OOD5V/F1F5DUMJS0OOD5V.LARGE.jpg", "https://cdn.instructables.com/F6L/HC77/JS0OOD5W/F6LHC77JS0OOD5W.LARGE.jpg"], "step_title": "Step 23: Mate PCB With Arduino"}, {"step": 24, "steps_text": "NOTE: The video above is from the original non-PCB Instructable. It was much easier to see the Arduino LEDs without a PCB on top of it!\nSmoke test:\nConnect Arduino to laptop via USB\nCheck for smoke \u263a\n_______\nCheck that Arduino yellow LED is blinking once per second (assuming that it\u2019s still loaded with \u201cBlink\u201d sketch)\n_______", "step_imgs": ["https://cdn.instructables.com/FKE/77O3/JS0OODQ0/FKE77O3JS0OODQ0.LARGE.jpg"], "step_title": "Step 24: Smoke Test"}, {"step": 25, "steps_text": "NOTE: The video above is also from the original non-PCB Instructable.\nLoad IV Swinger 2 Arduino sketch:\nOpen Arduino application on your computer\n________\nFind where the Arduino software looks for sketches:\nArduino->Preferences->Sketchbook location\nUse your browser to go to:\nhttps://raw.githubusercontent.com/csatt/IV_Swinger/master/Arduino/IV_Swinger2/IV_Swinger2.ino\nRight-click and use \u201cSave As\u201d to save IV_Swinger.ino to the Arduino sketchbook folder found above (make sure your browser doesn\u2019t add an extension like .txt to the file name)\nGo back to the Arduino application and find the IV_swinger2.ino sketch using:\nFile->Open\nThe Arduino application will inform you that IV_Swinger2.ino must be in a folder named IV_Swinger2 and it will offer to do that for you. Accept its kind offer.\nClick on arrow button or select \u201cUpload\u201d from \u201cSketch\u201d menu\n_________\nCheck Arduino LEDs: Yellow LED should be blinking. This is not the same yellow LED that the Blink sketch controls.\n_________", "step_imgs": [], "step_title": "Step 25: Load Arduino Sketch"}, {"step": 26, "steps_text": "NOTE: The video above is also from the original non-PCB Instructable. It also includes the first test of Step 28 in this Instructable\nConnect via IV Swinger 2 application:\nOpen the IV Swinger 2 application\n________\nVerify that \u201cSwing!\u201d button text changes to RED and the message below it changes from \u201cNot connected\u201d to \u201cConnected\u201d (briefly, then disappears). The yellow LED should no longer be on.\n_________\nIf not, pull down the \u201cUSB Port\u201d menu and select the correct port. If it isn\u2019t obvious which one to select:\nClose the IV Swinger 2 application and disconnect the IV Swinger 2 USB cable from the laptop\nRe-open the IV Swinger 2 application (leave the cable disconnected)\nPull down the USB Port menu and take note of the listed ports\nConnect the USB cable from the IV Swinger 2 hardware to the laptop\nPull down the USB Port menu and select the port that is new to the list", "step_imgs": [], "step_title": "Step 26: Connect Via IV Swinger 2 App"}, {"step": 27, "steps_text": "Apply resistor calibration:\nIn the IV Swinger 2 app, select \u201cResistors\u201d from the \u201cCalibrate\u201d menu\n________\nEnter the values you measured and recorded in \u201cStep 7: 1/4W resistors\u201d above.\nValues are in ohms\n________", "step_imgs": ["https://cdn.instructables.com/FC9/9F4L/JS0OOFT0/FC99F4LJS0OOFT0.LARGE.jpg", "https://cdn.instructables.com/FWM/01C9/JS0OOFT7/FWM01C9JS0OOFT7.LARGE.jpg"], "step_title": "Step 27: Apply Resistor Calibration"}, {"step": 28, "steps_text": "NOTE: The video above is also from the original non-PCB Instructable. The \"nothing connected\" test is in the video attached to Step 26.\nSanity tests:\n\u201cNothing connected\u201d test\nClick the \u201cSwing!\u201d button. You should see an error dialog saying \u201cERROR: Voc is zero volts\u201d\n_________\nBattery test\nUse 9V battery\nStrip both ends of two wires and screw one end of each into the side holes of the binding posts. If you happen to have a battery connector or holder with wires, use that.\n_________\nConnect the wire from the RED binding post to the positive terminal of the battery (you can either tape it or hold it with your thumb/finger)\n_________\nConnect the wire from the BLACK binding post to the negative terminal of the same battery\n_________\nClick the \u201cSwing!\u201d button. You should get an IV curve that looks like the photo.\n_________\nIf you get an error dialog that says: \u201cERROR: Voc is zero volts\u201d check that you don\u2019t have the battery backwards and that the wires are making good contact with the terminals.\nIf you get an error dialog that says: \u201cERROR: Timed out polling for stable Isc\u201d\nClick on Preferences, click on Arduino tab, change value of \u201cIsc stable ADC\u201d to 500, click OK\nRetry the battery test; it should work\nClick on Preferences, click on Arduino tab, click on \u201cRestore Defaults\u201d, click OK", "step_imgs": ["https://cdn.instructables.com/FIV/G9WL/JS0OOH6C/FIVG9WLJS0OOH6C.LARGE.jpg"], "step_title": "Step 28: Sanity Tests"}, {"step": 29, "steps_text": "The acrylic baseball display case used for the IV Swinger 2 enclosure needs to have several holes drilled through it for attachments.\nCase side definitions (see photo):\nFront: side with the USB connector\nBack: side opposite from front\nLeft: side with binding posts\nRight: side opposite from left\nBottom: side with Arduino\nTop: side above PCB\nThe case comes in two U-shaped halves:\nBase: Left / Bottom (with fins) / Right\nLid: Front / Top / Back\nAll the attachments are made to the base half. The lid half has nothing attached to it, but does need a 3/8\u201d hole in the front for the USB cable.\nCare must be taken when drilling acrylic or else it will crack:\nUse a drill press if you have one\nUse vise (with rubber guards) to hold case\nPosition so that the hole being drilled is close to the vise jaw\nStart with 1/16\u201d pilot for all holes\nDrill slowly with light pressure\nSpray water on hole as it is being drilled to cool (if you go slowly enough, this really isn't necessary)\nUse a Forstner bit to drill the 3/8\u201d hole for the USB cable. Otherwise, you\u2019ll have to start with 1/16\u201d pilot and drill incrementally larger holes until you get to 3/8\u201d (actually 25/64\u201d)", "step_imgs": ["https://cdn.instructables.com/FLX/DWWQ/JS0OOM0I/FLXDWWQJS0OOM0I.LARGE.jpg"], "step_title": "Step 29: Prepare for Case and Final Assembly"}, {"step": 30, "steps_text": "IMPORTANT: For this step and the next three, look straight down with one eye when making the Sharpie dots (the plastic distorts/refracts if you look at an angle, and you\u2019ll miss the mark).\nMark holes for Arduino standoffs:\nAttach four 15mm standoffs to Arduino:\nUnplug the USB cable from the Arduino\n_______\nCarefully remove the PCB from the Arduino\n_______\nInsert threaded/male end of each standoff through its hole in the Arduino from the back\n________\nScrew nuts onto the threaded ends of the standoffs on the front of the Arduino \u2013 hold the nut with your finger and turn the standoff to tighten it. Use pliers to tighten more.\nNOTE: The hole nearest the Arduino reset button doesn\u2019t have room for a nut\n________\nPlace the Arduino in position, standing on its standoffs (including the one without a nut). The Arduino should be touching the right side of the case, with the USB connector facing the front. The single fin should be facing toward you so the fins look like a \u201cY\u201d. See photo.\n________\nPUT LID ON THE CASE. This is important because the fit is very tight!\n________\nTurn the case over and look at it from the bottom. The Arduino will probably stay in place, but you can make sure by squeezing the front and back together with the hand you\u2019re holding it with. Use a Sharpie to mark the centers of the four holes.\n________\nRemove the lid from the case and remove the Arduino\n________", "step_imgs": ["https://cdn.instructables.com/FJK/4NYT/JS0OONE3/FJK4NYTJS0OONE3.LARGE.jpg", "https://cdn.instructables.com/FHP/5904/JS0OONCY/FHP5904JS0OONCY.LARGE.jpg", "https://cdn.instructables.com/F5M/3KD6/JS0OONCX/F5M3KD6JS0OONCX.LARGE.jpg", "https://cdn.instructables.com/F0P/2ZPA/JS0OONCQ/F0P2ZPAJS0OONCQ.LARGE.jpg"], "step_title": "Step 30: Mark Holes for Arduino Standoffs"}, {"step": 31, "steps_text": "Mark holes for binding posts:\nRemove top nuts, washers, cable rings, and bottom nuts from the binding posts. Remove the black plastic backing plate.\n________\nHold the plastic backing plate in position on the inside of the left side of the case. It should be about 1mm from the front inner edge of the case and about 1mm from the bottom.\n________\nUse Sharpie to mark the centers of the two holes\n________", "step_imgs": ["https://cdn.instructables.com/F7E/TJKQ/JS0OOPAB/F7ETJKQJS0OOPAB.LARGE.jpg"], "step_title": "Step 31: Mark Holes for Binding Posts"}, {"step": 32, "steps_text": "NOTE: The video above is also from the original Instructable which has a slightly different hole pattern. But it is very similar. Note that I've had complete success without using water.\nDrill 6 marked holes:\nUse something pointy to make an indentation in the middle of each of the Sharpie marks. The tip of the Forstner bit is perfect for this, but you can also use a needle or the tip of an X-acto blade (poke and twirl). This will keep the drill bit centered when you start drilling the hole.\n________\nDrill 1/16\u201d pilot holes\n________\nSwitch to 9/64\u201d bit and re-drill all holes\n________\nEnlarge holes for binding posts (2 holes only):\nSwitch to 11/64\u201d bit and re-drill the binding post holes\n________\nSwitch to 13/64\u201d bit and re-drill the binding post holes one more time\n________\nClean up case:\nRemove burrs around holes with X-acto knife or your fingernails\n________\nWash case off and dry\n________", "step_imgs": ["https://cdn.instructables.com/F6N/S9M6/JS0OOP7O/F6NS9M6JS0OOP7O.LARGE.jpg", "https://cdn.instructables.com/FMO/EOT9/JS0OOPI0/FMOEOT9JS0OOPI0.LARGE.jpg", "https://cdn.instructables.com/FY8/UMM7/JS0OOPI1/FY8UMM7JS0OOPI1.LARGE.jpg"], "step_title": "Step 32: Drill Marked Holes"}, {"step": 33, "steps_text": "Install binding posts:\nInsert the binding posts through their holes with the RED terminal toward the TOP of the case\n________\nSlide backing plate over the posts on the inside of the case\n________\nThread nuts on the posts and tighten down\n________", "step_imgs": ["https://cdn.instructables.com/F5T/5LJC/JS0OOQ1B/F5T5LJCJS0OOQ1B.LARGE.jpg"], "step_title": "Step 33: Install Binding Posts"}, {"step": 34, "steps_text": "Install Arduino (without PCB) in case:\nAttach the one Arduino standoff that won\u2019t have a nut onto the bottom of the case with an M3 screw\n________\nInsert the Arduino, put the lid on the case, and screw down the other three standoffs with M3 screws.\nTIP: start all screws before tightening any of them.\n________\nRemove the lid\n________\nMate PCB back onto Arduino:\nLoad circuit wires should still be screwed to PCB. If not, insert them back to into their correct screw terminal block openings and tighten them down.\n________\nLine up stacking connector pins on bottom of the PCB with the corresponding connectors on the top of the Arduino and press the boards together, taking care not to bend any of the pins.\n________", "step_imgs": ["https://cdn.instructables.com/FVZ/31G7/JS0OQQ40/FVZ31G7JS0OQQ40.LARGE.jpg", "https://cdn.instructables.com/FLI/SPBJ/JS0OQQ3W/FLISPBJJS0OQQ3W.LARGE.jpg", "https://cdn.instructables.com/FRV/C0Q5/JS0OQQ3P/FRVC0Q5JS0OQQ3P.LARGE.jpg"], "step_title": "Step 34: Install Arduino and PCB"}, {"step": 35, "steps_text": "Restore connections to binding posts:\nRestore connections as before, following the off-PCB connections drawing. Tighten nuts securely.\n_________", "step_imgs": ["https://cdn.instructables.com/FL0/AUKR/JS0OQQQ0/FL0AUKRJS0OQQQ0.LARGE.jpg"], "step_title": "Step 35: Restore Binding Post Connections"}, {"step": 36, "steps_text": "Drill USB connector hole:\nPut the lid on the case\n_________\nMake indentation in the exact center of the USB connector using the tip of the Forstner bit (or whatever pointy thing you used for the other drill-starting indentations). NOTE: it is very important that this hole is precisely centered. You need to look at it from all four directions before making the indentation since the refraction through the plastic distorts the apparent position (you\u2019ll see what I mean as soon as you turn it 90 degrees).\n_________\nUse 3/8\u201d Forstner bit to drill the hole\nDrill slowly, spraying with water often\nReduce pressure when hole is getting close to \u201cpunching through\u201d\nAlternative to Forstner bit is to use following succession of normal bits: 1/16\u201d, 1/8\u201d, 3/16\u201d, 7/32\u201d, 1/4\u201d, 9/32\u201d, 5/16\u201d, 11/32\u201d, 3/8\u201d, 25/64\u201d\n_________\nClean up the edge of the hole with X-acto knife or your fingernail\n__________\nWash lid off and dry\n________\nPut lid on and insert the USB cable to make sure it fits\n________\nIf it doesn\u2019t, try loosening the Arduino standoff screws. This might give you enough \u201cplay\u201d to get the connector in. Then, with the connector still in, re-tighten the screws\nIf that isn\u2019t enough, you may have to enlarge the hole with a round file or some other way", "step_imgs": ["https://cdn.instructables.com/FHU/PSCG/JS0OQTCN/FHUPSCGJS0OQTCN.LARGE.jpg", "https://cdn.instructables.com/FYJ/WCXN/JS0OQT8Y/FYJWCXNJS0OQT8Y.LARGE.jpg", "https://cdn.instructables.com/FGE/8W3N/JS0OQT7V/FGE8W3NJS0OQT7V.LARGE.jpg"], "step_title": "Step 36: Drill USB Connector Hole"}, {"step": 37, "steps_text": "Make PV cables:\nTo connect to a standard PV module, you need cables with MC4 connectors.\nIt is not necessary to use the same heavy gauge cable that is used in a rooftop solar installation (and on the modules themselves), assuming you only need them to be a few feet long. The nice thing about the binding posts is that you can easily swap cables with longer or shorter ones depending on the situation. The main reason for longer cables would be so the laptop and IV Swinger 2 can be in a shady spot away from the panel. These instructions intentionally do not specify the length or type of the PV cables because it is so dependent on the usage.\nIf you decide that shorter cables are OK, you can just use the same load circuit wire that you used for the internal load connections. The only tricky part is that crimping the MC4 connectors onto smaller wire gauge doesn't really work - you need to solder them on. You also should use solder to tin the bare ends that insert into the binding posts so they are more durable.\nThe downside to the binding posts is that it is possible to connect the wrong cable to the wrong post. The bypass diode(s) protect against this, but it's still a good idea to make it as foolproof as possible. Put some red tape around the one that connects to the red binding post and some black tape around the one that connects to the black binding post.\nThe cable with the female MC4 connector connects to the RED binding post.\nThe cable with the male MC4 connector connects to the BLACK binding post.", "step_imgs": ["https://cdn.instructables.com/FBL/66KK/JS0OQV9H/FBL66KKJS0OQV9H.LARGE.jpg"], "step_title": "Step 37: Make PV Cables"}, {"step": 38, "steps_text": "Your IV Swinger 2 is now complete!\nRepeat the tests you did in \u201cStep 28: Sanity tests\u201d to make sure everything got hooked back up correctly.\nYou may now test it with a real PV module.\nIf accuracy is important to you, see the IV Swinger 2 User Guide for instructions on how to perform a calibration. There is also a Help dialog available from the Calibrate menu in the application.", "step_imgs": [], "step_title": "Step 38: Final Test"}], "channel": "Arduino"}, {"category": "Technology", "description": "Reusing some left over spy mirror acrylics (because we didn't want to throw away stuff) and experimenting with UV light. While the big led cubes can be scaled up easily, for smaller cubes using LED stripes become to complicated and take to much space. Therefore we needed another light source for the columns. Thats why i exchanged the active stripes with the passive fluorescent material, enlightened by a single LED. As a result, infinity earrings were born (just by chance happening at valentines day :).\nSince they are easy to make, can reuse left over material and use few different construction techniques as well as electronics, they might be a also a nice idea for children workshops (or even easier/faster: just one micro cube on a small podest similar like the big one in an instructable before)\nFor each mini cube we need a little bit of spy mirror (lasercut into 6 27*27 square millimiter pieces), a 3D printed frame for both mirrors and batteries (2 2032 3V coin cells), a 5mm UV diode and fluorescent paint. A premade ear ring hook and a small piece of silver wire to attach it to the battery holder is also needed.", "title": "Infinity Earrings", "url": "https://www.instructables.com/id/Infinity-Earrings/", "steps": [{"step": 1, "steps_text": "After laser cutting the mirrors (mirror.svg - ok, lasercutting because we can, since only rectangles are necessary any cutting/sawing would be fine) the two designs for mirror and battery holder are printed (cubeEarrings.scad). With a Prusa i3 MK2 i already achieved a press-fit connection by just using the right distances.\nAfterwards, the necessary support structure is removed and especially the cube frame addidionally smoothed with a hot plate tool by melting the surface (just because i wanted to test that tool, not really becessary). The inner frame (see picture) is painted with white uv-fluorescent paint (2 Layers), maybe directly printing with uv-reactive filament would be another option.\nThe mirrors are the plugged into each side. Since the UV diode (hole on one corner of the cube, again just pressfit) reaches slightly into the mirror area, 3 mirrors are beveled at one corner with a file.\nAfterwards, assembly of the battery pack can begin.", "step_imgs": ["https://cdn.instructables.com/FF6/HFFM/JS0OWOAM/FF6HFFMJS0OWOAM.LARGE.jpg", "https://cdn.instructables.com/F7D/OF6D/JS0OWOAP/F7DOF6DJS0OWOAP.LARGE.jpg", "https://cdn.instructables.com/FYH/IAKU/JS0OWOCK/FYHIAKUJS0OWOCK.LARGE.jpg"], "step_title": "Step 1: 3D Printing and Painting"}, {"step": 2, "steps_text": "For Power supply the two coin cells are stacked into the holder one after each other (make sure not to break it), to supply up to 6V (the necessary voltage of the UV-diode exceeds the voltage of just battery, while the 20mA delivered by the two batteries in a row are still low enough to not damage the LED).\nThe ear ring hook is attached with a small strip of silver wire on one side of the holder. (Just wrapped around and twisted).", "step_imgs": ["https://cdn.instructables.com/FQ3/R4N6/JS0OWOAF/FQ3R4N6JS0OWOAF.LARGE.jpg", "https://cdn.instructables.com/FUV/AJ2T/JS0OWOEC/FUVAJ2TJS0OWOEC.LARGE.jpg", "https://cdn.instructables.com/FXD/8TH0/JS0OWOAC/FXD8TH0JS0OWOAC.LARGE.jpg"], "step_title": "Step 2: Battery Holder"}, {"step": 3, "steps_text": "Both wires of the led are then put into the tiny holes of the battery pack and make contact with each battery pole. It might be necessary to bend them a bit for good and reliable contact, and at the moment they are just hold together with press-fit again.\nFor more lively usage, it might be necessary to secure both the LED legs on the battery holder with a drop aof glue, as well glue the mirrors on the frame, but at the moment they hold good enough together this way.\nEnjoy!", "step_imgs": ["https://cdn.instructables.com/FGJ/MKWR/JS0OWOAG/FGJMKWRJS0OWOAG.LARGE.jpg", "https://cdn.instructables.com/FIK/V7XM/JS0OWO8B/FIKV7XMJS0OWO8B.LARGE.jpg", "https://cdn.instructables.com/FEO/PP0A/JS0OWOH9/FEOPP0AJS0OWOH9.LARGE.jpg"], "step_title": "Step 3: Power On"}], "channel": "Art"}, {"category": "Technology", "description": "High tolerance temperature gauge and climate logger for your attic or other outdoor structures", "title": "AtticTemp - Temperature / Climate Logger", "url": "https://www.instructables.com/id/AtticTemp-Temperature-Climate-Logger/", "steps": [{"step": 1, "steps_text": "Download \"RASPBIAN JESSIE LITE\" https://www.raspberrypi.org/downloads/raspbian/\nCreate your new hard disk for DashboardPI\nInsert the microSD to your computer via USB adapter and create the disk image using the dd command\nLocate your inserted microSD card via the df -h command, unmount it and create the disk image with the disk copy dd command\n$ df -h /dev/sdb1 7.4G 32K 7.4G 1% /media/XXX/1234-5678\n$ umount /dev/sdb1\nCaution: be sure the command is completely accurate, you can damage other disks with this command\nif=location of RASPBIAN JESSIE LITE image file of=location of your microSD card\n$ sudo dd bs=4M if=/path/to/raspbian-jessie-lite.img of=/dev/sdb (note: in this case, it's /dev/sdb, /dev/sdb1 was an existing factory partition on the microSD)\nSetting up your RaspberriPi\nInsert your new microSD card to the raspberrypi and power it on with a monitor connected to the HDMI port\nLogin\nuser: pi pass: raspberry\nChange your account password for security\nsudo passwd pi\nEnable RaspberriPi Advanced Options\nsudo raspi-config\nChoose: 1 Expand File System\n9 Advanced Options\nA2 Hostname change it to \"AtticTemp\"\nA4 SSH Enable SSH Server\nA7 I2C Enable i2c interface\nEnable the English/US Keyboard\nsudo nano /etc/default/keyboard\nChange the following line: XKBLAYOUT=\"us\"\nReboot PI for Keyboard layout changes / file system resizing to take effect\n$ sudo shutdown -r now\nAuto-Connect to your WiFi\nsudo nano /etc/wpa_supplicant/wpa_supplicant.conf\nAdd the following lines to have your raspberrypi automatically connect to your home WiFi (if your wireless network is named \"linksys\" for example, in the following example)\nnetwork={ ssid=\"linksys\" psk=\"WIRELESS PASSWORD HERE\" }\n\nReboot PI to connect to WiFi network\n$ sudo shutdown -r now\nNow that your PI is finally on the local network, you can login remotely to it via SSH. But first you need to get the IP address it currently has.\n$ ifconfig Look for \"inet addr: 192.168.XXX.XXX\" in the following command's output for your PI's IP Address\nGo to another machine and login to your raspberrypi via ssh\n$ ssh pi@192.168.XXX.XXX\nStart Installing required packages\n$ sudo apt-get update\n$ sudo apt-get upgrade\n$ sudo apt-get install vim git python-requests python-smbus i2c-tools python-imaging python-smbus build-essential python-dev rpi.gpio python3 python3-pip libi2c-dev\nUpdate local timezone settings\n$ sudo dpkg-reconfigure tzdata\nselect your timezone using the interface\nSetup the simple directory l command [optional]\n$ vi ~/.bashrc\nadd the following line:\n$ alias l='ls -lh'\n$ source ~/.bashrc\nFix VIM default syntax highlighting [optional]\n$ sudo vi /etc/vim/vimrc\nuncomment the following line:\nsyntax on", "step_imgs": [], "step_title": "Step 1: Flashing RaspberriPi Hard Disk / Install Required Software (Using Ubuntu Linux)"}, {"step": 2, "steps_text": "Clone Project repository\n$ cd ~\n$ git clone https://github.com/khinds10/AtticTemp.git\nDHT22 Install\n$ cd ~\n$ git clone https://github.com/adafruit/Adafruit_Python_DHT.g...\n$ cd Adafruit_Python_DHT/\n$ sudo python setup.py install\n$ sudo python ez_setup.py\n$ cd examples/\n$ vi simpletest.py\nChange the following line:\nsensor = Adafruit_DHT.DHT22\nComment the line out\npin = 'P8_11'\nUncomment the line and change the pin number to 16\npin = 18\nRun the test\npython simpletest.py\nYou should see a metric reading of Temp and Humidity displayed on the command line.\nSSD1306 Install\nExtract drivers/SSD1306.zip to the project folder\nInstall the Driver\n$ cd ssd1306/\n$ sudo python setup.py install\nConfirm your device registers, usually it's \\0x3c on the i2c bus\n$ sudo i2cdetect -y 1\n0 1 2 3 4 5 6 7 8 9 a b c d e f 00:\n-- -- -- -- -- -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- 3c -- -- --\n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\n\nRun the demo to confirm your display is in working order\n$ cd examples/ $ python demo.py", "step_imgs": [], "step_title": "Step 2: Clone Project / Install Software Drivers"}, {"step": 3, "steps_text": "RaspberriPi Zero\nDHT22 temperature-humidity sensor\n0.96\" I2C IIC SPI Serial 12864 OLED LCD LED White Display Module\n2.4\" 400x240 16:9 Serial:UART/I2C/SPI TFT Touchscreen Display", "step_imgs": ["https://cdn.instructables.com/F7W/EFXL/JS0OTAPJ/F7WEFXLJS0OTAPJ.LARGE.jpg", "https://cdn.instructables.com/FEZ/VWKJ/JS0OTAI2/FEZVWKJJS0OTAI2.LARGE.jpg", "https://cdn.instructables.com/FUT/PW5R/JS0OTAI3/FUTPW5RJS0OTAI3.LARGE.jpg", "https://cdn.instructables.com/FNO/3VI6/JS0OTAPL/FNO3VI6JS0OTAPL.LARGE.jpg"], "step_title": "Step 3: Supplies Needed"}, {"step": 4, "steps_text": "SSD1306 Display\nGND -> GND\nDATA -> SDA\nCLK -> SCL\nVCC -> 3V\nDigole Display\nGND -> GND\nDATA -> SDA\nCLK -> SCL\nVCC -> 3V\nDHT22 Humidistat\nVCC -> 5V\nGND -> GND\nDATA -> GPIO 18 / PIN 12", "step_imgs": ["https://cdn.instructables.com/FS1/ZCAC/JS0OTAPM/FS1ZCACJS0OTAPM.LARGE.jpg", "https://cdn.instructables.com/F2F/NBSA/JS0OTAPN/F2FNBSAJS0OTAPN.LARGE.jpg"], "step_title": "Step 4: Wire the Device"}, {"step": 5, "steps_text": "Cut Plexiglass to fit the front of the device under the 3D printed frame\nMount the glass with screws through the 3D printed frame", "step_imgs": ["https://cdn.instructables.com/FLD/MLH4/JS0OTAHZ/FLDMLH4JS0OTAHZ.LARGE.jpg", "https://cdn.instructables.com/F96/4T5H/JS0OTANN/F964T5HJS0OTANN.LARGE.jpg"], "step_title": "Step 5: Build the Device"}, {"step": 6, "steps_text": "Hot Glue Components against the front panel\nWire Unit inside\nMount the back and it should be ready to go", "step_imgs": ["https://cdn.instructables.com/FS3/63SP/JS0OTALR/FS363SPJS0OTALR.LARGE.jpg", "https://cdn.instructables.com/FBZ/2RJ0/JS0OTALS/FBZ2RJ0JS0OTALS.LARGE.jpg", "https://cdn.instructables.com/FZN/OC61/JS0OTALU/FZNOC61JS0OTALU.LARGE.jpg"], "step_title": "Step 6: Build the Device (cont...)"}, {"step": 7, "steps_text": "Find the file settings.py and adjust to your current settings\n# forecast.io API key for local weather information\nweatherAPIURL = 'https://api.forecast.io/forecast/'\nweatherAPIKey = 'YOUR API KEY FOR FORECAST.IO'\n# optional for running the remote temp/humidity logger\ndeviceLoggerAPI = 'mydevicelogger.com'\n# search google to get the Latitude/Longitude for your home location\nlatitude = 41.4552578\nlongitude = -72.1665444", "step_imgs": [], "step_title": "Step 7: Configure Application to Run Correctly in Settings.py Config File"}, {"step": 8, "steps_text": "$ crontab -e\nAdd the following lines:\n*/7 * * * * python /home/pi/AtticTemp/displays.py\nOPTIONAL: Temp Logger to API script each 10 minutes\n$ crontab -e\nAdd the following lines:\n*/10 * * * * python /home/pi/EnvironmentClock/temp-check.py", "step_imgs": [], "step_title": "Step 8: Setup Scheduled Scripts"}, {"step": 9, "steps_text": "Upload your own 128x128 file to the following URL:\nhttp://www.digole.com/tools/PicturetoC_Hex_converter.php\nChoose your image file to upload, add what size you want it to be on the screen (Width/Height)\nSelect \"256 Color for Color OLED/LCD(1 byte/pixel)\" in the \"Used for\" dropdown\nObtain the hex output.\nAdd the hex output to a display/build/ header (.h) file, use the other ones as guides for syntax.\nInclude the new file in the digole.c file #include \"myimage.h\nInclude a new command line hook to your image file in the. Note: the command below is saying draw your image at position 10 pixels over 10 pixels down. You can change it to different X,Y coordinates, you can also change the values 128,128 to whatever size your new image actually is.\n} else if (strcmp(digoleCommand, \"myimage\") == 0) { drawBitmap256(10, 10, 128, 128, &myimageVariableHere,0); // myimageVariableHere is defined in your (.h) file }\nNow rebuild (ignore the errors) below to have your new image render with the following command.\n$ ./digole myimage\nRe-Building [Included] Digole Display Driver for your optional changes\n$ cd display/build\n$ gcc digole.c\n$ mv a.out ../../digole\n$ chmod +x ../../digole", "step_imgs": [], "step_title": "Step 9: OPTIONAL: Creating Your Own Weather Images to Render on the Display"}, {"step": 10, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FIO/1VHT/JS0OTAJY/FIO1VHTJS0OTAJY.LARGE.jpg"], "step_title": "Step 10: Finished!"}], "channel": "Electronics"}, {"category": "Technology", "description": "The aim of this project is to design, build, and test a low-cost measurement system for Building Performance Evaluation studies that includes at least temperature, relative humidity, illuminance, and is extensible to additional sensors, and to develop the prototype of these devices.\nThis results in a customized and affordable system that enable stakeholders conduct the measurements required for building performance evaluation in an efficient and affordable manner by logging multiple environmental parameters at once. The Open Source Data Logger (OPENSDL) developed was compared against a HOBO U12-012 data logger. This commercially available counterpart system, can measure 3 parameters, namely- temperature, RH, and illuminance, and one external channel for other sensor types. A different sensing device would be required for measurement of any other parameter. The characteristics of parameters to be measured are limited to the proprietary hardware and software, which restricts the system to measuring of certain parameters with specific accuracies. A HOBO U12-012 costs around \u20b913,000 (US$ 185), whereas the OPENSDL costs \u20b94,605 (US$ 66), which is almost one-third of the commercial counterpart.\nAn open source data logger for monitoring temperature, RH, and light levels (illuminance) with the help of an Arduino Uno This is a DIY for developing the OPENSDL data logger.\n\nTime required: 2-3 hours for soldering, 5 hours for packaging (4 hours - 3D printing, and 1 hour for laser cutting) Skills required: Soldering, little or no knowledge in programming and electronics\nParts required:\nArduino Uno with cable\nData logger shield\nCR1220 coin cell battery\nBME280 temperature humidity pressure sensor breakout board\nTSL2561 light sensor breakout board\nESP01-8266 Wi-Fi module\nRJ-9 male and female connector\nShield stacking headers for Arduino\nSD memory card (any capacity)\nVector board (26 x 18 holes)\n8 AA batteries Battery holder\nRequired Tools :\nSoldering iron (35W)\nSolder wire\nWire cutter\nCrimper tool\nMultimeter\nSoftware required: Arduino IDE (1.0.5 or higher)\nArduino libraries used:\nWire library\nSparkFun TSL2561 library\nCactus BME280 multisensor library\nSD card library\nSPI library\nRTC library\nNote: The BME280 sensor is a very accurate, temperature, relative humidity and pressure sensor from Bosch. Similarly, the DS1307 is an accurate real time clock from Maxim and the TSL2561 is an accurate light sensor. There are less expensive and less accurate alternatives for these products, but this tutorial was aimed towards people who were interested in gathering data for building performance evaluation and building monitoring applications that require high precision and accuracy. This means that any specific hardware setup and software setup (libraries, program code) was strictly meant for the specified products only.", "title": "Open Source Data Logger (OPENSDL)", "url": "https://www.instructables.com/id/Open-Source-Data-Logger-OPENSDL/", "steps": [{"step": 1, "steps_text": "The data logger shield can be easily stacked on top of the Arduino Uno board. This shield provides the data logging capabilities (time keeping and data storage). The shield had to be stacked. A CR1220 coin cell battery had to be inserted in the round slot provided to keep the clock running even when the Arduino is powered off. The SD memory card must be inserted in the on-board card slot provided. A unique customized shield was developed by using RJ-9 connector female pins and Arduino shield stacking headers. The appropriate headers were soldered in the appropriate locations so as the shield fits perfectly on the Arduino board. The Arduino has 18 pins on one side and 14 pins on the other side. The headers with same number of pins were used at same spacing (18 pins apart) as on Arduino. The remaining extra space adjacent to the headers was used for placing the RJ-9 connector.\nThe headers were the best way to use the required pins, while making them still available for use to other components. The sensors used follow the I2C communication protocol, which requires 4 pins from Arduino, namely: SDA (also available as A4), SCL (also available as A5), 3.3V & GND. The four wires coming out from the RJ-9 connector were soldered into these four header pins. The number of RJ-9 connectors required depends on the number of sensors. In this project, 3 RJ-9 connectors were used (two for BME280 & one for TSL2561). The four wires coming out of the RJ-9 connector were color coded, and each color wire was designated a specific pin for all the RJ-9 connectors. It must be noted that the color code may vary on different RJ-9 pieces. In such a case, the location of the wire on the connector must be noted. The RJ-9 connector, after soldering, was made to stick on the vector board using a Feviqwik, so that it gets fixed on the surface. These connections can be verified by using the continuity mode on the multimeter. When in continuity mode, the multimeter should show zero resistance. Connect one of the probes of the multimeter to the soldered pin, and another probe to the pin inside the RJ-9 connector. The multimeter should emit a tone, which means that the solder joints are proper, and the connections have been made properly. If the tone is not emitted, check the solder joints. Similarly, solder the RJ-9 connector with same wires connecting to the same pinholes on the sensor breakout boards, i.e. A4, A5, 3.3V & GND. The BME280 sensor supports two I2C addresses, meaning that two BME280 sensors can be connected to the same controller at once. While doing so, the address of one of the sensors has to be changed by bridging the solder pads on the sensor. An ESP-01 wireless connection chip required the following connections with the Arduino.\nESP-01 ---------Arduino Uno\n10 --------------------TX\n11 --------------------RX\nVcc ----------------CH_PD\nVcc -------------------Vcc\nGND -----------------GND\nNote:- The multiple LEDs on Arduino Uno were removed for improving the battery life. The power indicator LED, RX, and TX LEDs were removed by heating up the solder joints and pushing the LED with forceps.", "step_imgs": ["https://cdn.instructables.com/FMG/SW25/JS0OPE22/FMGSW25JS0OPE22.LARGE.jpg", "https://cdn.instructables.com/FRR/VW0D/JS0OPE24/FRRVW0DJS0OPE24.LARGE.jpg", "https://cdn.instructables.com/FI2/FJLY/JS0OPE0M/FI2FJLYJS0OPE0M.LARGE.jpg", "https://cdn.instructables.com/FU6/EQMN/JS0OPE21/FU6EQMNJS0OPE21.LARGE.jpg", "https://cdn.instructables.com/FWY/1Q0E/JS0OPE0O/FWY1Q0EJS0OPE0O.LARGE.jpg", "https://cdn.instructables.com/F0Q/PN0K/JS0OPE1W/F0QPN0KJS0OPE1W.LARGE.jpg", "https://cdn.instructables.com/FYQ/DPWQ/JS0OPE1V/FYQDPWQJS0OPE1V.LARGE.jpg"], "step_title": "Step 1: Assembly"}, {"step": 2, "steps_text": "Before doing any programming, Arduino IDE (Integrated Development Environment) must be downloaded. The programming was done on this platform. Different libraries were required to interact with different components of OPENSDL. The following libraries were used for the given components.\nComponent ---------------------------------------------------------------Library\nBME280 temperature & RH sensor ---------------------------------Cactus_io_BME280_I2C.h\nLight sensor----------------------------------------------------------------SparkFun TSL2561.h\nReal time clock ------------------------------------------------------------RTClib.h\nSD card socket ------------------------------------------------------------SD.h\nI2C connection-------------------------------------------------------------Wire.h\nA separate library for communicating with the ESP01 is not required as the code uploaded in the Arduino has AT commands, which are sent to the serial monitor, from where the ESP-01 takes the instructions. So, basically, the AT commands by which ESP01 runs, are printed into the Serial Monitor, which are taken as an input command by ESP-01. For installing these libraries, after downloading them, open the Arduino IDE, go to Sketch -> Include Library -> Add .Zip library, and select the downloaded libraries.", "step_imgs": [], "step_title": "Step 2: Setup IDEs and Libraries"}, {"step": 3, "steps_text": "Before programming the OPENSDL, connect the Arduino with a laptop. After connecting, go to Tools -> Port, and select the COM port in which the OPENSDL is connected. Also, make sure that under Tools -> Boards, Arduino Uno is selected.\nThe OPENSDL was developed to work in 2 modes. In the first mode, it stores the data on the SD card on the data logger shield. In second mode, it sends the data over the internet to a website by using an ESP-01 Wi-Fi chip. The program for both the modes is different. These lines of code can be directly copied and pasted in the Arduino IDE editor, and used directly. Once in the code, we need to make a few customizations as per our needs:\nManually change the value of delay (1000) at the end of the code to change the logging interval. The value 1000 represents interval in milliseconds.\nEdit the line of code which says mySensorData = SD.open(\"Logged01.csv\", FILE_WRITE); and replace the Logged01 with the file name of the desired file name. The extension of the file can also be changed by modifying the .csv extension just after the file name.\nThe calibration equation achieved by finding the correlation between the Master/reference sensor and the BME280 will vary with each sensor. Replace this line of code with the equation for calibrating the sensors: Serial.print((1.0533*t2)-2.2374) \u2013 for sensor with default address (0x77), where t2 is the value read from the temperature sensor.\nA separate program has been provided for programming the second available mode of OPENSDL, which is the wireless system. The ESP-01 must be connected to the OPENSDL according to the connections as explained in the Step #2. After completing the connections, connect the Arduino to the laptop, and upload a blank sketch in the Arduino. Put the ESP-01 in the update mode and update the firmware to the latest available update. After updating, make sure to connect the reset pin of Arduino with the 3.3V pin, which bypasses the Arduino bootloader", "step_imgs": ["https://cdn.instructables.com/FGD/A3LV/JS0OPJQ8/FGDA3LVJS0OPJQ8.LARGE.jpg"], "step_title": "Step 3: Programming the System"}, {"step": 4, "steps_text": "An enclosure for OPENSDL was created for protection and to improve the aesthetics. The casings were developed by 3D printing using PLA material, and the casing for the microcontroller was developed by laser cutting the MDF sheet and gluing the pieces together. The 3D printed models were developed by using SketchUp software, and the 2D dxf drawings for laser cutting were created by using AutoCAD.\nFor 3D printing, the STL files produced by using SketchUp were opened and checked in Ultimaker Cura 3.2.1 software. Make sure that PLA material is used, and the nozzle of the printer used is for 0.4mm printing. The build plate of the 3D printer may require glue to stick the 3D printed object. But when the printing is complete, the glue creates a strong adhesion between the printed object and the build plate.", "step_imgs": ["https://cdn.instructables.com/FIL/3BYA/JS0OPE20/FIL3BYAJS0OPE20.LARGE.jpg", "https://cdn.instructables.com/FYC/T3TD/JS0OPJZ7/FYCT3TDJS0OPJZ7.LARGE.jpg", "https://cdn.instructables.com/FWW/QQC9/JS0OPE23/FWWQQC9JS0OPE23.LARGE.jpg", "https://cdn.instructables.com/FU0/ZRUK/JS0OPE25/FU0ZRUKJS0OPE25.LARGE.jpg", "https://cdn.instructables.com/FGO/U2V2/JS0OPE1Y/FGOU2V2JS0OPE1Y.LARGE.jpg"], "step_title": "Step 4: Fabrication"}, {"step": 5, "steps_text": "The code (.ino files) is made to work in Arduino IDE software. Here is the link to my Github page for the code and other details.\nhttps://github.com/arihant93/OPENSDL\nPlease don't hesitate to ask questions about the project.\nThanks.", "step_imgs": [], "step_title": "Step 5: Code"}], "channel": "Electronics"}, {"category": "Technology", "description": "Have you ever wanted to share your Internet connection from your main home to a second building but found out that the connection in the second location was just too spotty to use? Well, here's a solution that I used to improve that flaky signal that is cost effective, efficient, and best of all; really really easy to do! Hopefully this will solve your irregular connection like it did mine!\nI do want to put fourth the disclaimer that you have to at least be able to pick up a signal SOMEWHERE in your secondary building; if you can't do that, then this is not going to help you at all. Also, this is not technically a wireless bridge, nor is it a wireless access point. We will actually be piggybacking off of our primary wireless network to create a secondary WIFI network in a network secondary location, and we're going to be using a Raspberry Pi to do it!\nBut enough of the boring stuff, let's get into how this works!", "title": "A Simple Raspberry Pi Wifi \"Bridge\"", "url": "https://www.instructables.com/id/A-Simple-Raspberry-Pi-Wifi-Bridge/", "steps": [{"step": 1, "steps_text": "The reason that I needed to come up with this solution was as follows; In an addition to my main home, I have a small cabin to which I want to provide an internet connection for any guests who may stay there. I wanted to do this without paying for an extra internet service, and it's not really practical for me to run an ethernet cable from my main house to the cabin.", "step_imgs": ["https://cdn.instructables.com/F65/MZ14/JS0OKRJN/F65MZ14JS0OKRJN.LARGE.jpg"], "step_title": "Step 1: The Dilemma"}, {"step": 2, "steps_text": "In my main house, my wireless router was upstairs in the middle of the house. From that, I was getting a weak signal to the front of the cabin. I tried using a Roku player in the cabin to watch a few YouTube videos and though it was okay sometimes, other times it would stutter, and sometimes drop out completely, so I figured I could do better.", "step_imgs": ["https://cdn.instructables.com/FM7/RG9R/JS0OKRRH/FM7RG9RJS0OKRRH.LARGE.jpg"], "step_title": "Step 2: The Original Layout."}, {"step": 3, "steps_text": "I moved my Wi-Fi router to the back of my main house, and though this did help, it was still not exactly ideal.\n\nI found that the connection in the front of the cabin was slightly stronger, and in the back of the cabin there was still no real usable connection.", "step_imgs": ["https://cdn.instructables.com/FGM/ILCY/JS0OKRVL/FGMILCYJS0OKRVL.LARGE.jpg"], "step_title": "Step 3: This Was Better, But..."}, {"step": 4, "steps_text": "Surveying the cabin, I did find a perfect sweet spot by one of the front windows, and if I set my phone in that window, the connection stayed considerably better there than anywhere else. My first thought was to set up a second router in that window as wireless repeater for the cabin. I have an old cheap Netgear router lying around so it should be pretty simple to set up, right?\n\nNope. This particular router unfortunately does not support set up as a repeater. So I considered ordering a different router with repeater capability...", "step_imgs": ["https://cdn.instructables.com/FUC/WAM1/JS0OKRXV/FUCWAM1JS0OKRXV.LARGE.jpg"], "step_title": "Step 4: Repeater? No Such Luck. :("}, {"step": 5, "steps_text": "...but then the idea occurred to me to try using internet connection sharing to piggyback off of the wifi signal in my main house, and feed that connection to a secondary router in the cabin. For this, I could use the Netgear router that I already have.\n\nThen I looked into my options with using a Raspberry Pi as a wireless connection point, and as it turns out, it's incredibly easy to set up! The nice thing about doing it this way is not only the simplicity of the setup, but it also acts as a second segregated network and enabled me to have four additional physical ethernet ports in the cabin for cabled devices when necessary!", "step_imgs": ["https://cdn.instructables.com/FWT/L5KH/JS0OKS31/FWTL5KHJS0OKS31.LARGE.jpg"], "step_title": "Step 5: Waitaminute...This Should Work, Right?"}, {"step": 6, "steps_text": "To set this up, you're going to need a Raspberry Pi and a MicroSD card of at least 8 gigabytes. You will also need a secondary wireless router to which you will feed your internet connection from the Raspberry Pi. Plus, you'll need a mouse and a keyboard for the initial setup.", "step_imgs": ["https://cdn.instructables.com/FUP/2FQZ/JS0OKS5V/FUP2FQZJS0OKS5V.LARGE.jpg"], "step_title": "Step 6: Required Hardware"}, {"step": 7, "steps_text": "As for software, you will need to download Balena Etcher. You can get this at https://www.Balena.io/etcher\nYou will also need to download the operating system for your Raspberry Pi. I downloaded Lubuntu 16.04, from https://ubuntu-pi-flavour-maker.org/download/.\nYou will need a torrent application to download the img file. I use uTorrent. You can get that at https://www.utorrent.com/.\n\nIt takes a few minutes to download the img file.", "step_imgs": ["https://cdn.instructables.com/FIH/PKCT/JS0OKS60/FIHPKCTJS0OKS60.LARGE.jpg"], "step_title": "Step 7: Required Software"}, {"step": 8, "steps_text": "Now use Etcher to burn the Lubuntu image that we downloaded to your MicroSD card.\nOnce that has finished, remove the MicroSD card, and insert it into the Raspberry Pi.\n\nAfter the SD card is inserted into the Pi, plug a keyboard, mouse, and monitor into the Raspberry Pi, and power on the PI.", "step_imgs": ["https://cdn.instructables.com/F5Z/9I01/JRYUBM3Q/F5Z9I01JRYUBM3Q.LARGE.jpg", "https://cdn.instructables.com/FEJ/BS7S/JRYUBM4D/FEJBS7SJRYUBM4D.LARGE.jpg", "https://cdn.instructables.com/F6P/9DSH/JRYUBM4F/F6P9DSHJRYUBM4F.LARGE.jpg", "https://cdn.instructables.com/F30/FR3Q/JRYUBM6E/F30FR3QJRYUBM6E.LARGE.jpg"], "step_title": "Step 8: Burn the IMG File to Your MicroSD Card."}, {"step": 9, "steps_text": "Now we're going to configure the operating system, and if you did everything right up to this point, this is what you should see. Go through the installer setup; follow the on-screen prompts, and connect to your Wi-Fi network.\nSet set a username, password, and name the PI.\nI'm going to call mine \u201cbridge\u201d even though it's not technically a bridge. I'm just using this name so that it's easily identifiable on the network. I like to name computers by what they do.\nBe sure to set a secure password.", "step_imgs": ["https://cdn.instructables.com/FQ7/9HPD/JS0OKS61/FQ79HPDJS0OKS61.LARGE.jpg", "https://cdn.instructables.com/F2A/RVC0/JS0OKS63/F2ARVC0JS0OKS63.LARGE.jpg", "https://cdn.instructables.com/FFW/O07P/JS0OKS64/FFWO07PJS0OKS64.LARGE.jpg", "https://cdn.instructables.com/F66/QTSD/JS0OKS62/F66QTSDJS0OKS62.LARGE.jpg", "https://cdn.instructables.com/F6E/BA5E/JS0OKS65/F6EBA5EJS0OKS65.LARGE.jpg"], "step_title": "Step 9: Configure the OS."}, {"step": 10, "steps_text": "This part takes fiveever (That's considerably longer than forever).\n\nJust be patient. It will seem like the PI has frozen, but everything is fine. Just wait it out.\n\nI used this time to read The Silmarillion. Twice.", "step_imgs": ["https://cdn.instructables.com/FZD/G8J6/JS0OKS66/FZDG8J6JS0OKS66.LARGE.jpg"], "step_title": "Step 10: Wait. a Long Time."}, {"step": 11, "steps_text": "After a VERY Long time of waiting for that initial setup, this is what you're going to see.\n(Note: From here on out, it's not going to take that long every time you boot up; that was a one-time thing.)\nMake sure that you're connected to Wi-Fi.", "step_imgs": ["https://cdn.instructables.com/FUL/3DA2/JS0OKS68/FUL3DA2JS0OKS68.LARGE.jpg"], "step_title": "Step 11: OS Installed!"}, {"step": 12, "steps_text": "Click on the network icon, then click on \u201cEdit connections\u201d.\nThen click on \u201cethernet connection\u201d.\nClick on \u201cwired connection one\u201d, then click on edit.\nOn the ipv4 settings, change the dropdown from \u201cDHCP\u201d to \u201cShared to other computers\u201d.\nClick \u201csave\u201d.", "step_imgs": ["https://cdn.instructables.com/FTA/QOJE/JS0OKS6Y/FTAQOJEJS0OKS6Y.LARGE.jpg", "https://cdn.instructables.com/FFV/73GT/JS0OKS6N/FFV73GTJS0OKS6N.LARGE.jpg", "https://cdn.instructables.com/FL7/IWNY/JS0OKS6Z/FL7IWNYJS0OKS6Z.LARGE.jpg"], "step_title": "Step 12: Configure the Wired Network"}, {"step": 13, "steps_text": "Now click on your Wi-Fi connection.\nClick on edit.\nGo to the \u201cgeneral\u201d tab and check \u201cAll users may connect to this network.\u201d (this will allow the device to connect to the WiFi network without needing to log in.)\nSave your settings, and close this window. Make sure you can connect to the internet.", "step_imgs": ["https://cdn.instructables.com/F39/EECU/JS0OKS7B/F39EECUJS0OKS7B.LARGE.jpg", "https://cdn.instructables.com/FPU/KOZ7/JS0OKS7N/FPUKOZ7JS0OKS7N.LARGE.jpg"], "step_title": "Step 13: Configure the WiFi Network"}, {"step": 14, "steps_text": "Now run an ethernet cable from the ethernet port on your Raspberry Pi to the internet port on your secondary router.\n\nNote: The ethernet cable in this picture is short just for the purpose of illustration. The cable can actually be up to 100 meters long, allowing you to place the router very far away from the Raspberry PI.", "step_imgs": ["https://cdn.instructables.com/FWV/68TT/JRYUBMAO/FWV68TTJRYUBMAO.LARGE.jpg"], "step_title": "Step 14: Connect the Raspberry Pi to the Secondary WiFi Router"}, {"step": 15, "steps_text": "Power on your secondary router and test it with a wireless device to see if you can connect to that router's network.\nFor example, this wireless network is named Netgear04. After you're connected, test your internet connection.", "step_imgs": ["https://cdn.instructables.com/FDJ/THTK/JRYUBMK5/FDJTHTKJRYUBMK5.LARGE.jpg", "https://cdn.instructables.com/F3R/TMG8/JRYUBMK6/F3RTMG8JRYUBMK6.LARGE.jpg", "https://cdn.instructables.com/FUA/R15F/JRYUBMMW/FUAR15FJRYUBMMW.LARGE.jpg"], "step_title": "Step 15: Test the Connection to the Secondary Router"}, {"step": 16, "steps_text": "Now you're done configuring everything. You can remove the mouse, keyboard and monitor, because this Raspberry Pi can be run headless. You can place the Raspberry Pi and the router in your secondary building and enjoy this simple internet \"bridge\".", "step_imgs": ["https://cdn.instructables.com/FDA/7LB5/JRYUBMLJ/FDA7LB5JRYUBMLJ.LARGE.jpg"], "step_title": "Step 16: Place the Devices"}, {"step": 17, "steps_text": "Make sure you DO NOT name your secondary Wi-Fi network the same SSID as your primary Wi-Fi network!\nThese are completely different networks, and your wireless devices could get confused if they try to automatically connect, and bounce back and forth between the two networks.\nAlso the Raspberry Pi is something that your guests will have physical access to, so make sure that you have a really secure password on it!\n\nIt may be headless, but never underestimate the power of human curiosity to really screw things up...\n\nMaybe only invite good trustworthy guests? Nah. They're no fun!", "step_imgs": ["https://cdn.instructables.com/FKE/9VXX/JRYUBMLK/FKE9VXXJRYUBMLK.LARGE.jpg", "https://cdn.instructables.com/FOA/FN2C/JRYUBMM7/FOAFN2CJRYUBMM7.LARGE.jpg"], "step_title": "Step 17: Things to Be Aware Of..."}, {"step": 18, "steps_text": "Ok, so that's it! If you're having trouble getting a connection to a secondary location I hope this can help you out in some capacity!\nHave fun, see ya next time!", "step_imgs": [], "step_title": "Step 18: That's All, Folks!"}], "channel": "Raspberry Pi"}, {"category": "Technology", "description": "OpenWrt is an open source Linux distribution that users commonly install onto their off-the-shelf home Wi-Fi routers.\nSecurity:\nOpenWrt-based router firmware is often more secure than stock home router firmware in that it receives regular security updates. Many routers you see at the store have many security vulnerabilities in their software packages, since manufacturers often use outdated packages (Sometimes 10 years old) in their firmware building processes. In some cases, these vulnerabilities are severe enough that your router can be taken over and become part of a Botnet.\nCustomizability:\nOpenWrt firmware is also highly customizable, since it contains a fully-featured version of Linux. Additional packages can be installed through a package manager. Here are some of the features you can install:\nVPN\nDynamic DNS\nUPnP\nQOS\nPer-device traffic statistics\nMesh networking\nCutting-edge features:\nOpenWRT is a testbed for improvements to the Linux Wi-Fi networking stack. Often these improvements are integrated into OpenWRT soon after they are stabilized. By using OpenWRT, you can start enjoying the improved speed and performance immediately.", "title": "OpenWrt Home Network", "url": "https://www.instructables.com/id/OpenWrt-Home-Network/", "steps": [{"step": 1, "steps_text": "For stable performance when using OpenWRT, you need a router that is well supported. Routers that have poor support often have unreliable Wi-Fi and may often crash.\nThis tutorial covers the installation of OpenWRT on the Archer C7 v3. This router has good support for OpenWRT. If you have questions about device compatibility, read the OpenWRT Wiki and submit questions to forum.openwrt.org\nDISCLAIMER: Installing third-party router firmware will almost certainly void your warranty. Consider having two routers, one stock and the other OpenWRT, so you always have a backup in case you start having trouble with your OpenWRT router. Inexpensive devices are available in the $20 range.", "step_imgs": [], "step_title": "Step 1: Choosing a Router"}, {"step": 2, "steps_text": "1. TP-Link Archer C7 V3\nThe Archer C7 can be purchased at retail stores (Walmart, BestBuy) or on Amazon:\nhttps://www.amazon.com/TP-Link-AC1750-Smart-WiFi-R...\n2. Two Ethernet cables (One should be included with your router).\nEthernet Cables are common and can be found at retail stores (Walmart, BestBuy) or on Amazon.\nhttps://www.amazon.com/AmazonBasics-RJ45-Cat-6-Eth...", "step_imgs": ["https://cdn.instructables.com/FL1/XKT9/JS0ON5QT/FL1XKT9JS0ON5QT.LARGE.jpg"], "step_title": "Step 2: Equipment"}, {"step": 3, "steps_text": "For the Archer C7 V3, you will need two files:\nOpenWRT Firmware\nhttps://downloads.openwrt.org/releases/\ntftpd32 (Portable Version) (Windows)\nhttp://tftpd32.jounin.net/tftpd32_download.html\nFor the Archer C7 V3,\nThe OpenWRT firmware version numbers change with each update.\nDownload:\nFirst go to the folder with the largest version number then navigate to and download\n/targets/ar71xx/generic/archer-c7-v2-squashfs-factory-us.bin\nThe V3 uses the same firmware as V2 currently (February 8, 2019).\nThis is for the U.S. version. There are other versions for other regions (EU). Make sure to check which version you have. It should be shown on the label on the bottom of the router near the model name.", "step_imgs": ["https://cdn.instructables.com/FX9/VQAJ/JS0ON21G/FX9VQAJJS0ON21G.LARGE.jpg"], "step_title": "Step 3: Software Downloads"}, {"step": 4, "steps_text": "In order to flash the firmware for the Archer C7 V3, first connect both Ethernet cables as shown in the picture.\nConnect the Ethernet cord that is connected to one of the yellow ports to your computer. Then connect the Ethernet cord connected to the blue port to the Ethernet port on your modem (Cable, DSL, etc)\nChange your Ethernet adapter's IP to the static IP address 192.168.0.66 as shown in the slideshow.\nExtract the tftpd32 archive and copy the OpenWRT firmware into the folder where the tftpd32 files are.\nRename the archer-c7-v2-squashfs-factory-us.bin (US version name) to ArcherC7v3_tp_recovery.bin\nRun the tftpd32 application and go to the \"Log Viewer\" tab.\nWhile the Archer C7 V3 is off, hold the reset button and toggle the power button (See picture). Continue holding down only the reset button until you see activity in the server log.\nNow wait a few minutes for the C7 to flash the image. When it is done, you will see that four lights are on: the power LED, the Asterisk-shaped LED, the Globe-shaped LED, and one of the Square LEDs.\nNow, go back to your Ethernet adapter settings, where you were previously, and change your IP address and DNS setting back to Automatic (Use the previous slideshow to find your way back).\nUnplug the Ethernet cord attached to your computer and plug it back in.", "step_imgs": ["https://cdn.instructables.com/F7N/TD34/JRV8BZYB/F7NTD34JRV8BZYB.LARGE.jpg", "https://cdn.instructables.com/FC4/R0M7/JRV8C06D/FC4R0M7JRV8C06D.LARGE.jpg", "https://cdn.instructables.com/FTQ/NEEB/JRV8C07I/FTQNEEBJRV8C07I.LARGE.jpg", "https://cdn.instructables.com/FY5/JYXY/JRV8C08L/FY5JYXYJRV8C08L.LARGE.jpg", "https://cdn.instructables.com/FBN/NB04/JRV8C09O/FBNNB04JRV8C09O.LARGE.jpg", "https://cdn.instructables.com/FIB/5ZJH/JRV8C0CZ/FIB5ZJHJRV8C0CZ.LARGE.jpg", "https://cdn.instructables.com/F29/T464/JRV8C0E2/F29T464JRV8C0E2.LARGE.jpg", "https://cdn.instructables.com/FBG/HKFO/JRV8C0JI/FBGHKFOJRV8C0JI.LARGE.jpg", "https://cdn.instructables.com/F4Z/0P6E/JRV8C0JJ/F4Z0P6EJRV8C0JJ.LARGE.jpg", "https://cdn.instructables.com/FQ8/G11A/JRV8C0JK/FQ8G11AJRV8C0JK.LARGE.jpg", "https://cdn.instructables.com/FOK/HYD8/JRV8C0JN/FOKHYD8JRV8C0JN.LARGE.jpg", "https://cdn.instructables.com/FOC/0774/JS0ON2DA/FOC0774JS0ON2DA.LARGE.jpg", "https://cdn.instructables.com/FV5/GZZJ/JRV8C777/FV5GZZJJRV8C777.LARGE.jpg"], "step_title": "Step 4: Firmware Installation"}, {"step": 5, "steps_text": "Now that the firmware is installed, go to the OpenWrt login screen at\nhttps://192.168.1.1 Then login using the username root and no password. When you are on the main page, click the button on the \"No Password Set!\" prompt. Enter a strong password and click \"Save & Apply.\"", "step_imgs": ["https://cdn.instructables.com/FZ6/B0R5/JRV8C60V/FZ6B0R5JRV8C60V.LARGE.jpg", "https://cdn.instructables.com/FXM/FIDT/JRV8C60X/FXMFIDTJRV8C60X.LARGE.jpg"], "step_title": "Step 5: Login and Password Creation"}, {"step": 6, "steps_text": "Now you will be setting up your Wi-Fi networks. You will have two of them. One is 2.4 Ghz (Long range, low speed). The other is 5Ghz (Short range, high speed). By giving them both the same name and password, your devices will automatically join the best one, depending on how close they are to your Wi-Fi router.\nFirst we will be setting up the 2.4 Ghz network.\nUsing the top menu bar, go to Network->Wireless\nClick \"Edit\" on the Wi-Fi network below the Wi-Fi card that ends in 802.11bgn.\nUnder the \"General Settings\" tab change your channel to auto and your width to 40 Mhz. Transmit power should be set to auto.\nNow on the settings page for this network, go to the advanced tab and select your region.\nUnder the \"Interface Configuration\" section, set your desired Wi-Fi network name under \"ESSID.\"\nNow go to the \"Wireless Security\" tab. Set encryption to \"WPA2-PSK\" and enter your desired Wi-Fi password.\nClick \"Save and Apply\"\nNow click \"Enable\" on the network you just created.", "step_imgs": ["https://cdn.instructables.com/F6A/ROXJ/JRV8C66O/F6AROXJJRV8C66O.LARGE.jpg", "https://cdn.instructables.com/FPE/JEX6/JRV8G12H/FPEJEX6JRV8G12H.LARGE.jpg", "https://cdn.instructables.com/FRS/HQNM/JRV8C689/FRSHQNMJRV8C689.LARGE.jpg", "https://cdn.instructables.com/FJA/670N/JRV8FY4H/FJA670NJRV8FY4H.LARGE.jpg", "https://cdn.instructables.com/FQJ/PCSH/JRV8C69U/FQJPCSHJRV8C69U.LARGE.jpg", "https://cdn.instructables.com/FSD/8H67/JRV8C69W/FSD8H67JRV8C69W.LARGE.jpg"], "step_title": "Step 6: Wi-Fi Network Setup Pt1"}, {"step": 7, "steps_text": "Now we will be setting up the 5Ghz network.\nAfter completing Pt1, you will be on the main Wireless configuration page.\nClick \"Edit\" on the Wi-Fi network below the Wi-Fi card that ends in 802.11nac\nNow on the settings page for this network, go to the advanced tab and select your region. Then go back to the \"General Settings\" tab. I recommend you leave your channel set to the default of 36. It should make your network easier for your devices to find. Channel width should be 80 Mhz, and transmit power should be set to auto. Under the \"Interface Configuration\" section, set your desired Wi-Fi network name under \"ESSID.\"\nNow go to the \"Wireless Security\" tab. Set your encryption to \"WPA2-PSK\" and enter your desired Wi-Fi password. Click \"Save and Apply\"\nNow click \"Enable\" on the network you created.", "step_imgs": ["https://cdn.instructables.com/FI8/XIC6/JRV8G3RF/FI8XIC6JRV8G3RF.LARGE.jpg", "https://cdn.instructables.com/FBD/P79X/JRV8G3RH/FBDP79XJRV8G3RH.LARGE.jpg", "https://cdn.instructables.com/FUL/O4OE/JRV8G3RN/FULO4OEJRV8G3RN.LARGE.jpg", "https://cdn.instructables.com/FSR/5SNM/JRV8G3U0/FSR5SNMJRV8G3U0.LARGE.jpg", "https://cdn.instructables.com/FUK/194S/JRV8G3W9/FUK194SJRV8G3W9.LARGE.jpg", "https://cdn.instructables.com/FIK/08E9/JRV8G3YI/FIK08E9JRV8G3YI.LARGE.jpg", "https://cdn.instructables.com/FQS/K6H5/JRV8G40R/FQSK6H5JRV8G40R.LARGE.jpg", "https://cdn.instructables.com/FPS/MAJE/JRV8G431/FPSMAJEJRV8G431.LARGE.jpg", "https://cdn.instructables.com/FLU/AVJM/JRV8G47N/FLUAVJMJRV8G47N.LARGE.jpg"], "step_title": "Step 7: Wi-Fi Network Setup Pt2"}, {"step": 8, "steps_text": "UPnP is a software service that allows devices on your network to request that the router forward specific traffic to them. This is often used for video game multiplayer, as well as, smart home devices. I recommend having this installed, so your home devices work correctly. Advanced users may wish to skip this step if they would prefer to setup manual port forwarding, but doing so is difficult for the average user.\nFirst go to \"System->Software\".\nThen click \"Update Lists...\"\nThen enter the name \"luci-app-upnp\" into the form labeled \"Download and install package:\" and click \"OK\"\nNow navigate to System->Overview in the web interface. This will refresh the menu bar and allow the UPnP configuration menu to show up under Services->UPnP.\nNow check \"Start UPnP and NAT-PMP service\" and click \"Save and Apply\"", "step_imgs": ["https://cdn.instructables.com/FDK/FAJJ/JRV8C6JJ/FDKFAJJJRV8C6JJ.LARGE.jpg"], "step_title": "Step 8: Installing UPnP"}, {"step": 9, "steps_text": "After following these instructions, you now have an OpenWrt router with a good, basic configuration.\nFeel free to experiment with your router settings. If you would like to add additional functionality to your OpenWrt router, there are many articles available online showing how to do so.", "step_imgs": [], "step_title": "Step 9: Project Completed"}], "channel": "Linux"}, {"category": "Technology", "description": "As my first project with Arduino, I would like to share how we can make a homemade Aquarium Management System. If you want your fish to be fed automatically and if you want to check the aquarium status like temperature, water level etc., this project might help you.", "title": "Aquarium Management System", "url": "https://www.instructables.com/id/Aquarium-Management-System/", "steps": [{"step": 1, "steps_text": "Here we are going to list all the components that are needed for this project.\nArduino Uno\nUltrasonic Sensor\nLCD (16x2)\nPotentiometer (10k)\nServo motor\n5V 2 Channel Relay\nWater Temperature Sensor\nJumper Cables\nPhotoresistor\nWater Pump Horizontal Type\n1x 2.2k ohms, 1x220 ohms, 1x1k ohms, 1x 4.7 ohms Resistors\n6V Rechargeable Battery\n4x White Led Diode in Plexiglass\n2x Led Diode\nArduino Box\nWater Pump Hose\nCSA Cable Assy LL83498 AWM Ribbon Connector\nDS Cables LIYCY 8x0.5 mm2 Flame Retardant\nRVVB 2x1.5 mm2\nKCD11-101 On/Off Switch\nMagnesium Tablet Box\nTransistor 7805\nAquarium\nBig 10 Litters Water Bottle\nMetal Box (for the ultrasonic, servo)", "step_imgs": ["https://cdn.instructables.com/FF0/BLCZ/JS0ONC9I/FF0BLCZJS0ONC9I.LARGE.jpg"], "step_title": "Step 1: The Components"}, {"step": 2, "steps_text": "Firstly, we measure the length of the LCD which in our case is 7x2.5 cm so it can fit on the front of the box. Later we measure the switch button (2x1.3 cm) and the photoresistor and we add them on the front of the box.\nAfterwards, on the one side of the box we drill several holes, 2 for the Arduino, 1 for the Water Temperature sensor, 1 for the Water Pump and 1 for the DS Cable. These cables later are connected in a metal box which is over the aquarium. On another side we drill 2 holes, one for the potentiometer and one for the power supply.\nNext we cut the ribbon connector from the both sides, like plain wires, in order to connect them with the Arduino on the other sides and the LCD, photoresistor and potenciometer on the other side. The wiring from the ribbon to the Arduino is like this:\n1-st wire from ribbon with VSS on LCD and with GND on Arduino\n2-nd wire from ribbon with VDD on LCD and with VCC(5v) on Arduino\n3-rd wire from ribbon with R0 on LCD and Potentiometer(middle pin)\n4-th wire from ribbon with RS on LCD and digital pin 5 on Arduino\n5-th wire from ribbon with RW on LCD and GND on Arduino\n6-th wire from ribbon with E on LCD with digital pin 4 on Arduino\n7-th wire from ribbon with D4 on LCD with analog pin 2 on Arduino\n8-th wire from ribbon with D5 on LCD with analog pin 3 on Arduino\n9-th wire from ribbon with D6 on LCD with analog pin 4 on Arduino\n10-th wire from ribbon with D7 on LCD with analog pin 5 on Arduino\n11-th wire from ribbon with A on LCD + 2.2k Resistor with VCC(5v) on Arduino\n12-th wire from ribbon with K on LCD with GND on Arduino\n13-th wire from ribbon with VCC on photoresistor with VCC on Arduino\n14-th wire from ribbon with GND on photoresistor with 1.1k resistor + GND + analog pin 1 on Arduino (the GND wire and pin wire from Arduino are together soldered with the resistor which is connected with the ribbon wire)\nAll the components on the front of the box are glued with glue gun.\nNote: All the VCC wires from all modules are soldered on one wire that goes in the VCC pin on the Arduino. Same goes for the GND wires from all modules.", "step_imgs": ["https://cdn.instructables.com/FNK/7EQR/JS0ONC8E/FNK7EQRJS0ONC8E.LARGE.jpg", "https://cdn.instructables.com/F2I/NI31/JS0ONC83/F2INI31JS0ONC83.LARGE.jpg", "https://cdn.instructables.com/FMO/HWKP/JS0ONFEF/FMOHWKPJS0ONFEF.LARGE.jpg", "https://cdn.instructables.com/FCX/58O7/JS0ONC8G/FCX58O7JS0ONC8G.LARGE.jpg", "https://cdn.instructables.com/FY2/DG0X/JS0ONGEP/FY2DG0XJS0ONGEP.LARGE.jpg", "https://cdn.instructables.com/FFA/9AYK/JS0ONC84/FFA9AYKJS0ONC84.LARGE.jpg", "https://cdn.instructables.com/FH5/YHDA/JS0ONC9D/FH5YHDAJS0ONC9D.LARGE.jpg", "https://cdn.instructables.com/FTC/IX7T/JS0ONMAS/FTCIX7TJS0ONMAS.LARGE.jpg"], "step_title": "Step 2: Box Cutting and LCD Mounting With Photoresistor and Switch"}, {"step": 3, "steps_text": "At first, we need to connect the relay with the Arduino. The VCC from relay goes to VCC on Arduino, GND from relay goes to GND on Arduino, IN1 pin from relay with digital pin 10 on Arduino and IN2 with digital 2 on Arduino.\nNext we are going to connect the water pump to the first relay with the switch, and the LEDs for the temperature signaling to the second relay.\nThe first pin from the switch is connected with the VCC pin on the power jack, while the other pin is connected to the input pin of the transistor. The GND pin from the power jack, the GND pin from the transistor and the GND wire from the pump are soldered together. The VCC wire from the pump is connected with the NO pin from the first relay, while the output pin from the transistor is connected to the COM pin on the relay.\nSince the LEDs are inside the aquarium, and the Arduino is on the side, we will need long wires to connect them. That's where the DS Cable LIYCY 8x0.5 mm2 Flame Retardant comes in play. That cable has 8 wires in it, so we connect 2 of them with LED's anodes respectively. Those wires have to be connected to the second relay, so the wire that is connected with the green LED is connected on the NC pin from the second relay, while the wire from the red LED is connected with the NO pin from the second relay. The LEDs cathodes are soldered together with 220 ohm resistor and 1 wire(GND) from the cable and together are connected with the Arduino's GND. On COM pin on the second relay comes VCC from Arduino.", "step_imgs": ["https://cdn.instructables.com/FW4/D69T/JS0ONC8I/FW4D69TJS0ONC8I.LARGE.jpg", "https://cdn.instructables.com/FR8/NSRC/JS0ONC88/FR8NSRCJS0ONC88.LARGE.jpg", "https://cdn.instructables.com/FET/0WU1/JS0ONC8J/FET0WU1JS0ONC8J.LARGE.jpg"], "step_title": "Step 3: Connecting the Arduino With Relay Shield, Pump and LEDs"}, {"step": 4, "steps_text": "As we can see from the pictures, we have a red plastic board with hole in it which is a part of metal box that sits above the aquarium. In that hole, the Magnesium Tablet Box with the servo will rotate from time to time to feed the fish. The LED diodes in plexiglass is glued on the board so when it becomes dark, via the photoresistor it will activate. The other sensor on the board is the ultrasonic sensor, and through the hole of the board, the water temperature sensor will go in the water.\nFirst, we will start with connecting the water temperature sensor with the Arduino. Since we drilled a hole on the Arduino's box (check images from previous parts), we wont need extra wires to connect. The GND wire from the sensor goes to the GND pin on the Arduino, the VCC wire from sensor is connected with VCC pin and the data wire from the sensor is connected with the digital pin 8 on the Arduino. However, the data wire is also connected with the VCC wire from the sensor, soldered together with 4.7k ohms resistor.\nNext is the ultrasonic sensor. This sensor is connect via 4 wires from the DS Cable (check previous part). The VCC wire is connected with VCC from Arduino and the VCC pin from the sensor. The GND wire is connected with the GND from Arduino and GND from the sensor. The remaining 2 wires are for the Echo and Trigger pin from the sensor. The Echo pin is connected on digital pin 7 on the Arduino, and the Trigger pin is connected on digital pin 6 on the Arduino via the wires respectively. However, we need to drill 2 holes so the ultrasonic's \"eyes\" will point towards the water.\nAfterwards is the servo motor. We will take out the servo's rotating cap and we will replace it with the Magnesium Box cap. The connecting for the servo is simple. The VCC wire from the DS Cable is connected with the servo's VCC wire, the GND wire from the cable is connected with GND wire from the servo, and the data wire from the servo is connected with the digital pin 9 on the Arduino via one of the wires left.\nAt last it comes the LED diodes in plexiglass. Techically, there are 4 LEDs in the plexiglass. But here we won't need a resistor. In here, the anodes from the LEDs are soldered with one of the remaining wires of the DS Cable, which at the end is connected to digital pin 12. The kathodes are soldered with the GND wire from the cable together, and connected with the GND pin on the Arduino.", "step_imgs": ["https://cdn.instructables.com/FRP/UVCL/JS0ONC86/FRPUVCLJS0ONC86.LARGE.jpg", "https://cdn.instructables.com/FFD/7OY3/JS0ONC89/FFD7OY3JS0ONC89.LARGE.jpg", "https://cdn.instructables.com/F15/MG79/JS0ONC87/F15MG79JS0ONC87.LARGE.jpg", "https://cdn.instructables.com/FMR/PR18/JS0ONC85/FMRPR18JS0ONC85.LARGE.jpg", "https://cdn.instructables.com/F5X/LZ0H/JS0ONC9E/F5XLZ0HJS0ONC9E.LARGE.jpg"], "step_title": "Step 4: Connecting the Other Sensors"}, {"step": 5, "steps_text": "Code:\n#include <LiquidCrystal.h>\n#include <Servo.h>\n#include <OneWire.h>\n#include <DallasTemperature.h>\n\n//digital pin 8 for data for DS18B20 water temperature sensor\n#define ONE_WIRE_BUS 8\n//digital pin 10 for relay1\n#define RELAY1 10\n//digital pin 2 for relay2\n#define RELAY2 2\n\nOneWire oneWire(ONE_WIRE_BUS);\n\n// initialize the library by associating any needed LCD interface pin\n// with the arduino pin number it is connected to\n\nconst byte rs = 5, en = 4, d4 = 16, d5 = 17, d6 = 18, d7 = 19;\nbyte trigPin = 6; // Trigger\nbyte echoPin = 7; // Echo\nbyte servoPin = 9; // Servo\nbyte light = 12; // Light\nbyte photocellPin = 1; //Photoresistor (analog pin 1)\n\nServo servo;\nLiquidCrystal lcd(rs, en, d4, d5, d6, d7);\nDallasTemperature sensors(&oneWire);\n\nint i=0;\nint val = 0; //analog value from photoresistor\nint cm; //water level distance in cm\nfloat Celsius = 0; // Water temperature\nint servoAngle = 0; // Servo angle\nunsigned long lastOccur = 0; // last time the servo was called (in milliseconds)\nunsigned long current; // keep track of current time (in milliseconds)\n\nvoid setup(){\nSerial.begin(9600);\n// set up the LCD's number of columns and rows:\nlcd.begin(16,2);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\nservo.attach(servoPin);\npinMode(RELAY1, OUTPUT);\ndigitalWrite(RELAY1, HIGH);\npinMode(RELAY2, OUTPUT);\ndigitalWrite(RELAY2, HIGH);\npinMode(light, OUTPUT);\n}\n \nvoid loop(){\n//Check time (used as timer for the servo)\ncurrent = millis();\n//Read the value from the analog pin from the photoresistor\nval = analogRead(photocellPin);\n//Calculate the temperature in celsius\nCelsius = calcTemp();\n// Convert the time into a distance\ncm = ultrasonic_distance();\n// Print the temperature and water level\nprintLCD(cm,Celsius);\n\n//Activate pump if water level is less than 18 cm\nif(cm > 18){\npump();\n}\n\n// Activate heater if temperature is below 22 degrees celsius\nif(Celsius < 22){\nheat();\n}\n// Activate light\nif(val <= 412){\ndigitalWrite(light, HIGH);\n}\nelse{\ndigitalWrite(light, LOW);\n}\n//timer 30s\n\nif(current - lastOccur >= 30000){\ncallServo();\nlastOccur=millis();\n}\n\n}\n\nfloat calcTemp() {\nsensors.requestTemperatures();\n// returns the temperature in celsius\nreturn sensors.getTempCByIndex(0);\n}\n\nint ultrasonic_distance(){\n// Clears the trigPin\ndigitalWrite(trigPin, LOW);\ndelay(0.002);\n//Sets the trigPin on HIGH state for 10 micro seconds\ndigitalWrite(trigPin, HIGH);\ndelay(0.01);\ndigitalWrite(trigPin,LOW);\n\nreturn calcDistanceInCm(pulseIn(echoPin, HIGH));\n}\n\nint calcDistanceInCm(long dur){\n//divide by 29.1 or multiply by 0.0343\nreturn (dur/2)*0.0343;\n}\n\nvoid heat(){\ndelay(1000); // wait 1 second\ndigitalWrite(RELAY2, LOW); // turn on relay2\ndelay(5000); //wait for 5 seconds\ndigitalWrite(RELAY2, HIGH); // turn off relay2\ndelay(1000); // wait 1 second\n\n}\n\nvoid pump(){\ndelay(1000); //wait 1 second\ndigitalWrite(RELAY1, LOW); // turn on relay1\ndelay(20000); // wait 20 seconds\ndigitalWrite(RELAY1, HIGH); // turn off relay1\ndelay(1000); // wait 1 second\n\n}\n\nvoid printLCD(int cm, float temp){\nlcd.clear();\n// set the cursor to column 0, line 0\n// (note: line 0 is the first row, since counting begins with 0):\nlcd.setCursor(0, 0);\nlcd.print(\"Distance: \");\n//print the water level in cm\nlcd.print(cm);\nlcd.print(\"cm\");\n\nlcd.setCursor(0, 1);\nlcd.print(\"Temperature:\");\n//print the temperature in celsius\nlcd.print((int)temp);\nlcd.print((char)223);\nlcd.print(\"C\");\ndelay(1000)\n\n}\n\nvoid callServo(){\n\nfor(i=0;i<2;i++){\nfor(servoAngle = 0; servoAngle < 180; servoAngle++){ // move the micro servo from 0 degrees to 180 degrees\nservo.write(servoAngle);\ndelay(7); // servo start speed (faster)\n\n}\ndelay(2000);\nfor(servoAngle = 180; servoAngle > 0; servoAngle--){ // now move back the servo to 0 degrees\nservo.write(servoAngle);\ndelay(10); //servo back speed (slower)\n}\n}\n\n}", "step_imgs": [], "step_title": "Step 5: Conclusion"}], "channel": "Arduino"}, {"category": "Technology", "description": "Had some spare time this weekend so went ahead and assembled this AU$2.40 4-Bits DIY Electronic Digital Clock which I bought from AliExpress a while ago.", "title": "C51 4 Bits Electronic Clock - Wooden Clock", "url": "https://www.instructables.com/id/C51-4-Bits-Electronic-Clock-Wooden-Clock/", "steps": [{"step": 1, "steps_text": "I bought this DIY kit from \"HESAI 3C Electronic Components Store\" from AliExpress for just AU$2.40. I have provided the store's link in the description below. The packaging was good and the item was delivered to me in just 15 days.\nThe item came with a circuit diagram and a list of components included in the packaging. Including the instruction sheet there are 18 items in this packet. You can find a scanned copy of the circuit diagram in the description below.\nFrankly speaking, by looking at the components it doest look like you really need to be an electronic genius to assemble all these components. I guess all you need is just a general purpose soldering kit and a bit of your spare time.", "step_imgs": ["https://cdn.instructables.com/F29/BLIB/JS0OOTPG/F29BLIBJS0OOTPG.LARGE.jpg"], "step_title": "Step 1: Unboxing"}, {"step": 2, "steps_text": "The board is actually drawn out with all the shapes of the components on it, so even if you don't know what the components are its really easy to find the right place for it. I am going to install the components from top to bottom so that I have easy access to all of them while soldering.\nLets first solder the 1K PR1 resistor pack to the board. One end of the resistor pack has a white dot on it. The white dotted side sits on the square facing the left side of the clock. After that, I am soldering the 8550 PNP transistor to the board. Just match the 'D' of the transistor to the 'D' drawn on the board and you will never get it wrong.\nNext, I am soldering the 10\u03bcF capacitor. The +ve terminal or the long leg of the capacitor slides into the hole that has a plus next to it.\nIt actually doesn't matter what order you are solder the components on the board. The reason I am soldering them from top to bottom is to have easy access to the components when I am putting them on the board.\nAfter soldering the base of the IC I am soldering the 2 x 10K resistors and the 3 ceramic capacitors to the board. Next, I am soldering the 12MHz oscillator crystal and the buzzer to the board. The positive leg of the buzzer slides into the hole which has a plus mark on it. After that, I am soldering the 2 x push buttons and the screw terminal block. I really don't like the concept of having the buttons in the front so, I will later move them to the back of the unit. The supply voltage can be between 3v to 6v. This clock also comes with 2 different alarm settings. You can either set them up or turn them off if you don't need them. This clock only displays in the 24hr clock format. I don't know about you but I really like the 24hrs format so its actually a good thing for me.\nOK, now the final bit, lets solder the 4-Bit 7-segment display and install the AT89C2051 IC to the socket. Make sure when you solder the 7-Segment the dot on the bottom right corner matches the dot on the board. These displays consume a hell lot of current so, before creating the enclosure I will do a bit of maths to estimate how long the clock will last on a fully charged battery.", "step_imgs": ["https://cdn.instructables.com/FJ9/Z4X2/JS0OOTQJ/FJ9Z4X2JS0OOTQJ.LARGE.jpg", "https://cdn.instructables.com/F9U/LQTK/JS0OOTQK/F9ULQTKJS0OOTQK.LARGE.jpg"], "step_title": "Step 2: Soldering"}, {"step": 3, "steps_text": "Once everything is soldered its time for us to do a quick test. Looks like everything is working the way they should, so lets now do the math and find out how many hours this clock will last without recharging the battery.", "step_imgs": ["https://cdn.instructables.com/FRB/5PHN/JS0OOTQU/FRB5PHNJS0OOTQU.LARGE.jpg"], "step_title": "Step 3: Testing"}, {"step": 4, "steps_text": "To calculate the current we need to setup our multimeter to current calculation mode. Then connect the multimeter in series with the clock to the battery. The 18650 battery I have holds 1500mAh current and by looking at the multimeter it looks like the clock consumes almost 25mAh current. So, if we divide 1500 by 25 we get 60hrs which is like 2.5 days.\n1500mA / 25mA = 60hrs\n60hrs / 24 = 2.5 days", "step_imgs": ["https://cdn.instructables.com/FUA/V0XF/JS0OOTR9/FUAV0XFJS0OOTR9.LARGE.jpg"], "step_title": "Step 4: Current Calculation"}, {"step": 5, "steps_text": "I have noticed that when you recharge the battery after it goes completely flat the clock displays all sorts of funny things except for the time on the display. So, adding a reset button to this clock wood be a good idea. Went back to the clock's manual and looked into the circuit diagram. Looking at the circuit you can see that Pin 1 of the IC is the Reset pin. Digging a bit further, you can easily figure out that to reset the IC you just need to set the pin to HIGH. So thats it, bingo. Lets do a quick test and see if I have hit the jackpot or not. Oh yes, that bloody works. Cool, now lets go ahead and create the wooden enclosure for this clock.", "step_imgs": ["https://cdn.instructables.com/F3H/31L1/JS0OOTRH/F3H31L1JS0OOTRH.LARGE.jpg"], "step_title": "Step 5: Reset Button"}, {"step": 6, "steps_text": "While cleaning my store room I looked at the pile of scrap wood I have in there. I was shocked to see the amount of crap I have collected overtime. Its like, my scrap pile explodes every time I build a new project! Bigger the project, the bigger the pile of scrap wood! So, I used a bit of it to create a nice looking enclosure for this clock.\nI also added few upgraded to this small project which I am going to show you in the video.", "step_imgs": ["https://cdn.instructables.com/FA3/IOHY/JS0OOTTC/FA3IOHYJS0OOTTC.LARGE.jpg"], "step_title": "Step 6: Woodworking"}, {"step": 7, "steps_text": "As discussed earlier I am moving the pushbuttons from the front to the back of the unit. I am also adding a reset button along with the other two buttons to the back panel. I choose plywood to create the back panel as it has less thickness than a pallet-wood.\nUsing the thinnest drill bit I am drilling all the holes required for the 3 pushbuttons. After that I am soldering a 6 way ribbon cable to the pushbuttons. It was actually a bit of a challenge to solder the ribbon to the buttons, so to hold the cable tight I am adding a bit of hot glue to it.", "step_imgs": ["https://cdn.instructables.com/F3R/078T/JS0OOTTD/F3R078TJS0OOTTD.LARGE.jpg", "https://cdn.instructables.com/FPB/COMC/JS0OOTTY/FPBCOMCJS0OOTTY.LARGE.jpg", "https://cdn.instructables.com/FW7/N5RB/JS0OOTUF/FW7N5RBJS0OOTUF.LARGE.jpg"], "step_title": "Step 7: Installing the Push Buttons"}, {"step": 8, "steps_text": "Next, I am going to install the TP4056 battery charging module with the protection IC to the unit. The protection IC protect the 18650 battery from overcharging and over-discharging. If you want to know more about this module please check out my tutorial number 2 \"DIY - Solar Battery Charger\". After drilling the right size hole in the back-plate I am going to hot-glue the module into it.", "step_imgs": ["https://cdn.instructables.com/FXG/NOUY/JS0OOTUY/FXGNOUYJS0OOTUY.LARGE.jpg", "https://cdn.instructables.com/FIS/XZB3/JS0OOTVC/FISXZB3JS0OOTVC.LARGE.jpg"], "step_title": "Step 8: Installing the TP4056 Charging Module"}, {"step": 9, "steps_text": "Ha ha, I became a bit lazy and instead of using nails or screws to stick the back plate, I just hot-glued it to the back of the unit.\nAfter that I plugged in this 'wireless charging receiver' to the TP4056 charging module which I also bought from AliExpress for $3. If you don't want to use a wireless charger you can either use a step-down converter or micro-USB charger.", "step_imgs": ["https://cdn.instructables.com/F6F/QVFZ/JS0OOTVO/F6FQVFZJS0OOTVO.LARGE.jpg"], "step_title": "Step 9: Installing the Wireless Charger"}, {"step": 10, "steps_text": "Once the backplate is in place I am soldering the push buttons to the clock. The reset button connects to the +ve and pin number 1 of the MCU. The other two pushbuttons will just replace the ones in the front.", "step_imgs": ["https://cdn.instructables.com/F88/70RG/JS0OOTWQ/F8870RGJS0OOTWQ.LARGE.jpg"], "step_title": "Step 10: Connecting the Pushbuttons"}, {"step": 11, "steps_text": "Now lets connect the battery and the charging module to the clock.\nConnect the OUT+ and OUT- of the TP4056 module to the +ve and -ve input ports of the clock. Next I am installing the 3.7v 18650 battery using hot-glue inside the wooden enclosure. Once fitted I am connecting the B+ and B- ports of the TP4056 module to the +ve and -ve ends of the battery. Thats it, we are almost done.", "step_imgs": ["https://cdn.instructables.com/FOP/5RCG/JS0OOTYD/FOP5RCGJS0OOTYD.LARGE.jpg", "https://cdn.instructables.com/F06/XXI9/JS0OOTZC/F06XXI9JS0OOTZC.LARGE.jpg"], "step_title": "Step 11: Connecting the Charging Module and Battery"}, {"step": 12, "steps_text": "To finish up the project I am going to stick the 7-segment display to the faceplate and then hot-glue it to the front side of the wooden enclosure.", "step_imgs": ["https://cdn.instructables.com/FS7/L1GR/JS0OOTZP/FS7L1GRJS0OOTZP.LARGE.jpg"], "step_title": "Step 12: Installing the Faceplate"}, {"step": 13, "steps_text": "Programming is done using the two pushbuttons S1 and S2. In my project, I am calling the B1 and B2.\nHold the B1 to enter the clock settings mode\nA: Set Hour - press B2 to change the hour and B1 when done\nB: Set Minutes - press B2 to change the minutes and B1 when done\nC: Set Chime On/Off - press B2 to turn it on or off and B1 when done\nD: Set Alarm 1 On/Off - press B2 to turn it on or off and B1 when done\nE: Set Alarm 1 Hour - press B2 to change the alarm hour and B1 when done\nF: Set Alarm 1 Minute - press B2 to change the alarm minutes and B1 when done\nG: Set Alarm 2 On/Off - press B2 to turn it on or off and B1 when done\nH: Set Alarm 2 Hour - press B2 to change the alarm hour and B1 when done\nI: Set Alarm 2 Minute - press B2 to change the alarm minutes and B1 when done\nWhen the alarm starts beeping you need to press B2 to turn it off. There is no option to put it on snooze; however, as this clock has 2 alarms you can set them at an interval of 10 or 5 minutes to sort of mock the snooze option.", "step_imgs": ["https://cdn.instructables.com/FRD/Q3P5/JS0OOTZR/FRDQ3P5JS0OOTZR.LARGE.jpg"], "step_title": "Step 13: Setting Up the Clock"}, {"step": 14, "steps_text": "This clock is really very nice and accurate. Great for all the DIY lovers and for those who like electronics. I really enjoyed building it. In the night I charge my phone with the wireless charger and in the daytime the clock sits over it. Wireless charging gives this clock 100% mobility. I can take it with me to the shower, when I am having food or even when we go out for picnic.\nFew things you guys can add to this project: * A transparent sheet for the faceplate so that only the lit up digits are visible * Remove the charging indicators from the TP4056 module and add two LEDs at the back to know when charging is happening and when the unit is fully charged. * LDR to dim the 7-Segment at night", "step_imgs": ["https://cdn.instructables.com/FAN/X2XL/JS0OOTZW/FANX2XLJS0OOTZW.LARGE.jpg"], "step_title": "Step 14:"}, {"step": 15, "steps_text": "The watch/clock is available here: Store: HESAI 3C Electronic components Store Website: https://www.aliexpress.com/item/High-Quality-C51-... Cost: AU$2.32 / piece\nKit Model: YSZ-4 Supply voltage: 3V-6V PCB Size: 52mm * wide 42mm\nFunction:\n1. Seconds correction (for precise School)\n2. Switch to every minute independent display interface\n3. whole point of time (8-20 o\\'clock chime can be turned off)\n4. Two alarm settings (you can turn off the alarm function)\nKit Features:\nA. 0.56 inch special red digital clock for display;\nB. Import AT89C2051 for master chip;\nC. 1.2mm thick PCB made from military grade FR-4 board;\nD. accurate travel time, travel time error range error -1 to +1 seconds every 24 hours.", "step_imgs": [], "step_title": "Step 15: Links"}], "channel": "Clocks"}, {"category": "Technology", "description": "Update: 24th March 2019 \u2013 Rev 2 of lp_BLE_TempHumidity, adds more plot options and i2c_ClearBus, adds GT832E_01 support\nIntroduction\nThis tutorial, A Redbear Nano V2 Replacement, is Part 3 of 3. This is Revision 2 of this project. Revision 2 PCB includes mounting for the coin cell and the sensor, simplifies construction and improves air flow around the sensor while shielding it from direct sunlight. Revision 1 is here.\nPart 1 \u2013 Building Very Low Power BLE devices made Easy with Arduino covers settting up Arduino to code nRF52 low power devices, the programming module and measuring the supply current. It also covers specialized low power timers and comparators and debounced inputs and using pfodApp to connect to and control the nRF52 device.\nPart 2 \u2013 A Very Low Power Temperature Humidity Monitor covers using a Redbear Nano V2 module and an Si7021 temperature/humidity sensor to build a low power battery / solar monitor. It also covers modifying the Si7021 library to be low power, tuning the BLE device to reduce its current consumption to <25uA and designing a custom temperature/humidity display for your mobile.\nPart 3 \u2013 A Redbear Nano V2 Replacement, this one, covers using other nRF52 based modules instead of the Nano V2. It covers selecting supply components, construction, removing the nRF52 chip programming protection, using NFC pins as normal GPIO, and defining a new nRF52 board in Arduino.\nThis instructable is a practical application of Part 1 Building Very Low Power BLE devices made Easy with Arduino by constructing a Very Low Power BLE Temperature and Humidity Monitor using a SKYLAB SBK369 board as a Nano V2 replacement. This tutorial covers how to create a new board definition and how to remove the nRF52 programming protect to allow it to be re-programmed. This tutorial uses the same sketch as Part 2 with the same tuned BLE parameters for low power consumption and can be powered from battery OR battery + solar OR solar only. The tuning of BLE parameters for low power was covered in Part 2\nRev 4 of pfod_lp_nrf52.zip also supports the GT832E_01 module and this tutorial covers using the NFC nRF52 pins as standard GPIO's.\nThe monitor constructed here will run for years on Coin Cell or 2 x AAA batteries, even longer with solar assist. As well as displaying the current temperature and humidity, the monitor stores the last 36 Hrs of 10min readings and the last 10 days of hourly readings. These can be charted on the your Android mobile and the values saved to a log file. No Android Programming is required, pfodApp handles all of that. The Android display and charting is completely controlled by your Arduino sketch so you can customize it as required.\nPart 2 used a Redbear Nano V2 board for the nRF52832 BLE component. This project replaces that with a cheaper SKYLAB SKB369 board. As in Part 2, a Sparkfun Si7021 breakout board is used for the Temperature / Humidity Sensor. A modified low power library is used with the Si7021.", "title": "Easy Very Low Power BLE in Arduino Part 3 - Nano V2 Replacement - Rev 2", "url": "https://www.instructables.com/id/Easy-Very-Low-Power-BLE-in-Arduino-Part-3-Nano-V2-/", "steps": [{"step": 1, "steps_text": "i) The Nano V2 was out of production for a number of months and does not seem to fit into the Particle.io line up so it is not clear how long it will be available for.\nii) The Nano V2 is more expensive. However it also has extra features. See below.\niii) The Nano V2 has components on both sides which gives it a higher profile and makes it more difficult to mount.\niv) The Nano V2 has limited I/O pins available and using D6 to D10 requires flying leads.\nAlthough the Nano V2 board is more expensive then the SKYLAB SKB369 board, ~US17 versus ~US5, the Nano V2 does have more features. The Nano V2 includes a 3.3V regulator and supply capacitors, extra components for using the nRF52 DC/DC converter option, a chip antenna and a uFL SMT antenna connector.\nAnother alternative is the GT832E_01 module used by www.homesmartmesh.com. Rev 4 of pfod_lp_nrf52.zip also support programming the GT832E_01 module. The SKYLAB SKB369 and the GT832E_01 are available from https://www.aliexpress.com\nRedbear (Particle.io) also has a bare module without 3V3 regulator, DC/DC components or 32Khz crystal components.\nOutline\nThis project has 4 relative independent parts:-\nComponent Selection and Construction\nRemoving the nRF52 coding protection flag and programming the sketch\nCreating a New Arduino nRF52 Board Definition\nReconfiguring nRF52 NFC pins as GPIO's", "step_imgs": [], "step_title": "Step 1: Why a Nano V2 Replacement?"}, {"step": 2, "steps_text": "Component Selection\nIn addition to the nRF52832 and Si7021 components selected in Part 2, this project adds a 3.3V regulator and supply capacitors.\nThe Voltage Regulator component\nThe regulator used here is MC87LC33-NRT. It can handle up to 12V inputs and has a quiescent current of <3.6uA, typically 1.1uA. The Nano V2 used a TLV704 regulator has a slightly higher quiesent current, typically 3.4uA and can handle higher input voltages, up to 24V. The MC87LC33-NRT was chosen instead because its datasheet specifies how it responds as the input voltage falls below 3.3V where as the TLV704 datasheet does not.\nThe TLV704 specifies an input voltage of 2.5V minimum and it is not clear from the datasheet what will happen below that. The nRF52832 will run down to 1.7V and the Si7023 will run down to 1.9V. The MC87LC33-NRT on the other hand specifies input/output voltage differences down to 0V for low currents (Fig 18 of the datasheet). So given the choice of components, the MC87LC33-NRT was chosen because it has the specified performance.\nSupply Capacitors\nThe MC87LC33-NRT regulator needs some supply capacitors for stability and response. An output capacitor > 0.1uF is recommended on the datasheet. The SKYLAB SBK369 also specifies 10uF/0.1uF capacitors on the supply close to the board. Larger capacitors assist in supplying the nRF52 TX current spikes. Here 4 x 22uF 25V and 3 x 0.1uF 50V Ceramic capacitors were used. One 22uF and a 0.1uF capacitor was placed close the the SKYLAB SBK369, a 0.1uF was placed close to the output of the MC87LC33-NRT to ensure stability and a 22uF and 0.1uF were placed on the input to the MC87LC33-NRT and a further 2 x 22uF capacitors where soldered across the Vin/GND pins as a further current reservoir. For comparison the NanoV2 board has a 22uF / 0.1uF on the input to the TLV704 regulator and a 0.1uF on its output.\nThe extra current reservoir capacitors were installed on the input to the 3.3V regulator so that they would charge to a higher voltage when running with solar cells. Charging to higher voltage equates to storing more current to supply the Tx spikes.\nCeramic X5R capacitors are used because they have low series resistance and low leakage current. The resistance is typically 100,000M\u2126 or 1000M\u2126 \u2013 \u00b5F which ever is less. So for 22uF we have 22000M\u2126, i.e. 0.15nA leakage at 3.3V or 0.6nA for the four 22uF capacitors. That is negligible. For comparison Low ESR, Low Leakage Panasonic Electrolytic capacitors have leakage currents of <0.01CV. So for a 22uF 16V capacitor the leakage is <10uA. Note: This is the leakage at the rated voltage, 16V in this case. The leakage is lower at lower voltages, i.e. <2.2uA at 3.3V.\nParts List\nApproximate cost per unit as at Dec 2018, ~US$61, excluding shipping and the programmer from Part 1\nSKYLAB SKB369 ~US$5 eg Aliexpress\nSparkfun Si7021 breakout board ~US$8\n2 x 53mm x 30mm 0.15W 5V solar cells e.g. Overfly ~US$1.10\n1 x PCB SKYLAB_TempHumiditySensor_R2.zip ~US$25 for 5 off www.pcbcart.com\n1 x MC78LC33 3.3V regulator, e.g. Digikey MC78LC33NTRGOSCT-ND ~US$1\n2 x 0.1uF 50V ceramic C1608X5R1H104K080A e.g. Digikey 445-7456-1-ND ~US$0.3\n4 x 22uF 16V ceramic GRM21BR61C226ME44L e.g. Digikey 490-10747-1-ND ~US$2\n1 x BAT54CW, e.g. Digikey 497-12749-1-ND ~US$0.5\n1 x 470R 0.5W 1% resistor e.g. Digikey 541-470TCT-ND ~US$0.25\n1 x 10V 1W zener SMAZ10-13-F e.g. Digikey SMAZ10-FDICT-ND ~US$0.5\n3mm x 12mm nylon screws, e.g. Jaycar HP0140 ~AUD$3\n3mm x 12mm nylon nuts, e.g. Jaycar HP0146 ~AUD$3\nScotch Permanent Mounting Tape Cat 4010 e.g. from Amazon ~US$6.6\nCR2032 battery holder, e.g. HU2032-LF ~US$1.5\nCR2032 battery ~US$1\nPerspex sheet, 3.5mm and 8mm\npfodApp ~US$10\nSolder Paste e.g. Jaycar NS-3046 ~AUD$13", "step_imgs": [], "step_title": "Step 2: Component Selection and Construction"}, {"step": 3, "steps_text": "The project is constructed on a small PCB. The PCB was manufactured by pcbcart.com from these Gerber files, SKYLAB_TempHumiditySensor_R2.zip The PCB mimics the Nano V2 pin out and is general purpose enough to be used for other BLE projects.\nThis is the schematic (pdf version)\nFirst solder the SMD components, then mount the SKYLAB SKB369 board\nAlmost all the components are surface mount devices (SMD). The capacitors and IC's can be difficult to solder by hand. The suggested method is to hold the PCB in a vice and apply a small amount of solder paste to the pads and place the SMD components, except for the SKB369 board on the PCB. Then using a heat gun, apply heat to the underside of the PCB until the solder paste melts and then do a quick pass over the top of the board being careful not to blow the components off. Finally touch up the components with a small tip soldering iron. Be careful with the capacitors and resistor as it is easy to melt both ends and have the component come loose while soldering one end.\nThis revision add extra 22uF 16V ceramic capacitors. These extra capacitors reduce the current spikes drawn from the battery and also the reduce the voltage dips when being powered from the solar cells. As long as the voltage from the solar cells remains above the battery voltage then no current is drawn from the battery.\nAfter the SMD components have been mounted, you can solder in the SKYLAB SKB369 board. There are two test point holes on one side of the SKB369 tabs. Use two pins into a cardboard base to position the SKB369 board and carefully align the pins. (See the example photo above using the Revision 1 PCB) Then solder one pin of the opposite side to hold the board in place before soldering the other pins.\nNote the Gnd link wire from the CLK to GND in the finished part. This is installed AFTER programming to prevent noise on the CLK input from triggering the nRF52 chip into a high current debug mode.\nMounting Case\nThe mounting case was made from two pieces of perspex, 110mm x 35mm, 3mm thick. The 3.5mm piece under the solar cells was tapped to take the 3mm nylon screws. This revised construction is simplifier then Rev 1 and improves air flow around the sensor. The extra holes at each end are for mounting, using cable ties for example.", "step_imgs": ["https://cdn.instructables.com/F43/GHVI/JTON0GKZ/F43GHVIJTON0GKZ.LARGE.jpg", "https://cdn.instructables.com/FG5/D8BD/JS0ON7ZE/FG5D8BDJS0ON7ZE.LARGE.jpg", "https://cdn.instructables.com/FHD/MFEX/JTON0GMP/FHDMFEXJTON0GMP.LARGE.jpg", "https://cdn.instructables.com/FUE/8624/JTON0GLW/FUE8624JTON0GLW.LARGE.jpg", "https://cdn.instructables.com/FLH/NWX1/JTON0GL8/FLHNWX1JTON0GL8.LARGE.jpg", "https://cdn.instructables.com/FK6/Y2OC/JTON0GLG/FK6Y2OCJTON0GLG.LARGE.jpg"], "step_title": "Step 3: Construction"}, {"step": 4, "steps_text": "Connect the Temperature/Humidity board to the Programmer described in Part 1 as shown above.\nWith the solar cells and batteries unplugged, Vin and Gnd are connected to the programmer's Vdd and Gnd (the Yellow and Green leads) and the SWCLK and SWDIO are connect to the Clk and SIO of the programmer header board (the White and Grey leads)\nRemoving nRF52 program protection\nFrom Nordic Semi \u2013 Debug and Trace page\nDAP - Debug Access Port. An external debugger can access the device via the DAP. The DAP implements a standard ARM\u00ae CoreSight\u2122 Serial Wire Debug Port (SW-DP). The SW-DP implements the Serial Wire Debug protocol (SWD) that is a two-pin serial interface, SWDCLK and SWDIO\nImportant: The SWDIO line has an internal pull-up resistor. The SWDCLK line has an internal pull-down resistor.\nCTRL-AP - Control Access Port. The Control Access Port (CTRL-AP) is a custom access port that enables control of the device even if the other access ports in the DAP are being disabled by the access port protection. Access port protection blocks the debugger from read and write access to all CPU registers and memory-mapped addresses. Disable access port protection. Access port protection can only be disabled by issuing an ERASEALL command via CTRL-AP. This command will erase the Flash, UICR, and RAM.\nSelect CMSIS-DAP as the programmer for Particle's Debugger and select nRF5 Flash SoftDevice\nIf the flash works, then that is OK, but often modules will have been protected against re-programming and you will get this error output in the Arduino window\nOpen On-Chip Debugger 0.10.0-dev-00254-g696fc0a (2016-04-10-10:13)<br>Licensed under GNU GPL v2\nFor bug reports, read\n        <a href=\"http://openocd.org/doc/doxygen/bugs.html\"> http://openocd.org/doc/doxygen/bugs.html</a>\ndebug_level: 2\nInfo : only one transport option; autoselect 'swd'\nadapter speed: 10000 kHz\ncortex_m reset_config sysresetreq\nInfo : CMSIS-DAP: SWD  Supported\nInfo : CMSIS-DAP: Interface Initialised (SWD)\nInfo : CMSIS-DAP: FW Version = 1.10\nInfo : SWCLK/TCK = 1 SWDIO/TMS = 1 TDI = 0 TDO = 0 nTRST = 0 nRESET = 1\nInfo : CMSIS-DAP: Interface ready\nInfo : reduce speed request: 10000kHz to 5000kHz maximum\nInfo : clock speed 10000 kHz\nInfo : SWD IDCODE 0x2ba01477\nError: Could not find MEM-AP to control the core\nError: Target not examined yet\nError while flashing SoftDevice.\nIn that case you need to set the ERASEALL command register in the nRF52 to clear the memory and make the device programmable again. The version of openOCD supplied with sandeepmistry nRF52 does not include the apreg command needed to write to the ERASEALL command register so you need to install a later version.\nInstall OpenOCD version OpenOCD-20181130 or higher. Windows pre-compiled version is available from http://gnutoolchains.com/arm-eabi/openocd/ The latest code is available from http://gnutoolchains.com/arm-eabi/openocd/\nOpen a command prompt and change dir to the OpenOCD install directory and enter the command\nbin\\openocd.exe -d2 -f interface/cmsis-dap.cfg -f target/nrf52.cfg\nThe response is\nOpen On-Chip Debugger 0.10.0 (2018-11-30) [https://github.com/sysprogs/openocd]<br>Licensed under GNU GPL v2\nFor bug reports, read\n        <a href=\"http://openocd.org/doc/doxygen/bugs.html\"> http://openocd.org/doc/doxygen/bugs.html\n</a>\ndebug_level: 2\nInfo : auto-selecting first available session transport \"swd\". To override use '\ntransport select <transport>'.\nadapter speed: 1000 kHz\ncortex_m reset_config sysresetreq\nInfo : Listening on port 6666 for tcl connections\nInfo : Listening on port 4444 for telnet connections\nInfo : CMSIS-DAP: SWD  Supported\nInfo : CMSIS-DAP: FW Version = 1.10\nInfo : CMSIS-DAP: Interface Initialised (SWD)\nInfo : SWCLK/TCK = 1 SWDIO/TMS = 1 TDI = 0 TDO = 0 nTRST = 0 nRESET = 1\nInfo : CMSIS-DAP: Interface ready\nInfo : clock speed 1000 kHz\nInfo : SWD DPIDR 0x2ba01477\nError: Could not find MEM-AP to control the core\nInfo : Listening on port 3333 for gdb connections\nThen open a terminal window e.g. TeraTerm (Windows) or CoolTerm (Mac) and connect to 127.0.0.1 port 4444\nThe telnet window will show a > and the command prompt will show\nInfo : accepting 'telnet' connection on tcp/4444\nIn the telnet window (i.e. TeraTerm) type\nnrf52.dap apreg 1 0x04\nthis returns 0x00000000 showing the chip is protected. Then type\nnrf52.dap apreg 1 0x04 0x01\nand then\nnrf52.dap apreg 1 0x04\nthis returns 0x00000001 showing the chip is now set to ERASEALL on next restart.\nClose the telnet connection and also use Ctrl-C to exit the openOCD program in the command prompt and then power cycle the nRF52 module and it will be now ready to program.\nNow retry flashing the softdevice.\nYou can now program the nRF52 module from Arduino.", "step_imgs": ["https://cdn.instructables.com/FDK/M0J4/JS0ON82D/FDKM0J4JS0ON82D.LARGE.jpg", "https://cdn.instructables.com/FVT/01ZJ/JS0ON861/FVT01ZJJS0ON861.LARGE.jpg", "https://cdn.instructables.com/FGC/EY8I/JS0ON85P/FGCEY8IJS0ON85P.LARGE.jpg", "https://cdn.instructables.com/FE6/YWR2/JS0ON85Q/FE6YWR2JS0ON85Q.LARGE.jpg", "https://cdn.instructables.com/F8J/TLP9/JS0ON860/F8JTLP9JS0ON860.LARGE.jpg"], "step_title": "Step 4: Removing the NRF52 Coding Protection Flag"}, {"step": 5, "steps_text": "Close Arduino and re-install the latest version of pfod_lp_nrf52 support by following the Install the pfod_lp_nrf52 hardware support directions. The latest pfod_lp_nrf52 includes SKYLAB SKB369 Nano2 replacement board. Select that as the board and you can then program it with the Revision 2 of lp_BLE_TempHumidity, lp_BLE_TempHumidity_R2.zip, as described in Part 2.\nIf the programming fails. Close all the Arduino windows, remove the USB cables, restart Arduino and plug the programmer USB cable back in and plug the nRF52 module's USB supply back in and try again.\nThen connect via pfodApp to display the current and historical temperature and humidity. Once you have displayed the historical plot, the readings are saved to the log file on your mobile and also available in the raw data screen.", "step_imgs": ["https://cdn.instructables.com/FJ8/2M6A/JS0ON8M4/FJ82M6AJS0ON8M4.LARGE.jpg", "https://cdn.instructables.com/F04/0GGF/JS0ON8MA/F040GGFJS0ON8MA.LARGE.jpg", "https://cdn.instructables.com/FXM/G3B1/JS0ON8ME/FXMG3B1JS0ON8ME.LARGE.jpg"], "step_title": "Step 5: Programming the SKYLAB SKB369"}, {"step": 6, "steps_text": "To support a new nRF52 board you need to\na) add a new directory under variants directory with the board files and\nb) edit the boards.txt file to add the new board to Arduino.\nAdding a new nRF52 board variant\nAs described in Part 1, Installing the pfod_lp_nrf52 hardware support, find the hardware sub-directory of sandeepmistry package that you have updated with the pfod_lp_nrf52 support. Open the \\hardware\\nRF5\\0.6.0\\variants sub-directory and create a new directory for your new board, e.g.SKYLAB_SKB369_Nano2replacement In the new \\hardware\\nRF5\\0.6.0\\variants\\SKYLAB_SKB369_Nano2replacement directory create three files variant.h, variant.cpp and pins_arduino.h You can copy them from on of the other board variants directories. For the SKYLAB_SKB369_Nano2replacement, I initially copied the files from the RedBear_BLENano2 variant.\npins_arduino.h file\nThe pins_arduino.h file does not need to be changed. It just includes the variant.h file\nvariant.h file\nEdit the variant.h file to define the total number of pins your board will have, PINS_COUNT\nNOTE: In the sandeepmistry package, NUM_DIGITAL_PINS, NUM_ANALOG_INPUTS and NUM_ANALOG_OUTPUTS settings are ignored.\nIf your board makes more or less analog pins available, update the /* Analog Pins */ section of the variants.h file.\nNOTE: For the NanoV2 and SKYLAB boards the Analog pins are mapped to the Digital pins A0 == D0 etc\nThis is not essential. You can assign the Analog Inputs to any convenient Arduino pin. See then blue/variant.h and blue/variant.cpp files for an example.\nThe nRF52832 chip has 8 analog input pins, but the SKYLAB_SKB369_Nano2replacement board only makes 6 of them available to match the Nano2.\nAll pin numbers, except the RESET_PIN, in the variant.h file are Arduino pin numbers. That is #define PIN_A0 (0) implies that D0 in the arduino sketch is the same pin as A0. The RESET_PIN is the exception. That number is the nRF52823 chip pin number and 21 is the only valid choice. However the pfod_lp_nrf52 support does not enable the reset pin on the nRF52832\nvariant.cpp file\nThere is only one entry in the variant.cpp file, the g_ADigitalPinMap[] array that maps Arduino pin numbers to the nRF52832 chip P0.. pins\nNOTE: In the NanoV2 and SKYLAB boards, the Arduino analog pins A0, A1 \u2026 are the same as the Arduino digital pins D0, D1 \u2026 so the first entries in g_ADigitalPinMap[] MUST map to AINx pin numbers on the nRF52832 chip.\nFor the Analog Inputs your board makes available, those entries in g_ADigitalPinMap[] must map nRF52832 AIN0, AIN1, AIN2, etc pin numbers. i.e. AIN0 is chip pin P0.02, AIN1 is chip pin P0.03 etc see the nRF52832 pin layout above.\nUse (uint32_t)-1 for invalid mappings. For example the SKYLAB_SKB369_Nano2replacement board does not have a built in LED, D13, so its position is mapped to (uint32_t)-1\nIn pfod_lp_nrf52.zip the Redbear NanoV2, SKYLAB SKB369 and GT832E_01 variants sub-directories have images showing the mappings set up by variant.cpp. (See the images above)\nIn the case of the SKYLAB SKB369, there are plenty of pins to choose from. Only enough are mapped to match the NanoV2. In the case of the GT832E_01, all the available pins need to be mapped. Even then there are only three (3) analog inputs available instead of the six (6) on the NanoV2. As well as this the two NFC pins, P0.09 and P0.10, need to re-configured as GPIO's. See Reconfiguring nRF52 NFC pins as GPIO's below.\nUpdating the boards.txt file\nHere is the SKYLAB_SKB369_Nano2replacement entry in the boards.txt file.\n## SKYLAB_SKB369 Nano2 Replacement<br>SKYLAB_SKB369_NANO2_REPLACEMENT.name=*SKYLAB SKB369 Nano2 Replacement\nSKYLAB_SKB369_NANO2_REPLACEMENT.upload.tool=sandeepmistry:openocd\nSKYLAB_SKB369_NANO2_REPLACEMENT.upload.protocol=cmsis-dap\nSKYLAB_SKB369_NANO2_REPLACEMENT.upload.target=nrf52\nSKYLAB_SKB369_NANO2_REPLACEMENT.upload.maximum_size=524288\nSKYLAB_SKB369_NANO2_REPLACEMENT.upload.setup_command=transport select swd;\nSKYLAB_SKB369_NANO2_REPLACEMENT.upload.use_1200bps_touch=false\nSKYLAB_SKB369_NANO2_REPLACEMENT.upload.wait_for_upload_port=false\nSKYLAB_SKB369_NANO2_REPLACEMENT.upload.native_usb=false\nSKYLAB_SKB369_NANO2_REPLACEMENT.bootloader.tool=sandeepmistry:openocd\nSKYLAB_SKB369_NANO2_REPLACEMENT.build.mcu=cortex-m4\nSKYLAB_SKB369_NANO2_REPLACEMENT.build.f_cpu=16000000\nSKYLAB_SKB369_NANO2_REPLACEMENT.build.board=SKYLAB_SKB369_Nano2replacement\nSKYLAB_SKB369_NANO2_REPLACEMENT.build.core=nRF5\nSKYLAB_SKB369_NANO2_REPLACEMENT.build.variant=SKYLAB_SKB369_Nano2replacement\nSKYLAB_SKB369_NANO2_REPLACEMENT.build.variant_system_lib=\nSKYLAB_SKB369_NANO2_REPLACEMENT.build.extra_flags=-DNRF52\nSKYLAB_SKB369_NANO2_REPLACEMENT.build.float_flags=-mfloat-abi=hard -mfpu=fpv4-sp-d16\nSKYLAB_SKB369_NANO2_REPLACEMENT.build.ldscript=nrf52_xxaa.ld\nSKYLAB_SKB369_NANO2_REPLACEMENT.menu.lfclk.lfrc.build.lfclk_flags=-DUSE_LFXO\nSKYLAB_SKB369_NANO2_REPLACEMENT.menu.softdevice.s132=S132\nSKYLAB_SKB369_NANO2_REPLACEMENT.menu.softdevice.s132.softdevice=s132\nSKYLAB_SKB369_NANO2_REPLACEMENT.menu.softdevice.s132.softdeviceversion=2.0.1\nSKYLAB_SKB369_NANO2_REPLACEMENT.menu.softdevice.s132.upload.maximum_size=409600\nSKYLAB_SKB369_NANO2_REPLACEMENT.menu.softdevice.s132.build.extra_flags=-DNRF52 -DS132 -DNRF51_S132\nSKYLAB_SKB369_NANO2_REPLACEMENT.menu.softdevice.s132.build.ldscript=armgcc_s132_nrf52832_xxaa.ld\nboard.txt Settings\nComments \u2013 lines starting with # are comments.\nPrefix \u2013 each board needs a unique prefix to identify its values. Here the prefix isSKYLAB_SKB369_NANO2_REPLACEMENT.\nName \u2013 The SKYLAB_SKB369_NANO2_REPLACEMENT.name line specifies the name of this board to show in Arduino's board menu.\nUpload tool \u2013 The SKYLAB_SKB369_NANO2_REPLACEMENT.upload block specifies which tool to use for uploading. If you are using the Particle Debugger then use protocol=cmsis-dap as shown above.\nBootloader \u2013 This line is the same for all boards in this boards.txt\nBuild \u2013 Only two lines need to be updated in this block. The SKYLAB_SKB369_NANO2_REPLACEMENT.build.variant line specifies this board's the directory name in the variant sub-directory. The SKYLAB_SKB369_NANO2_REPLACEMENT.build.board is the value appended to ARDUINO_ and then defined while compiling the code. e.g. -DARDUINO_SKYLAB_SKB369_Nano2replacement This lets you enable/disable parts of the code for specific boards.\nLow Freq Clock \u2013 This line,SKYLAB_SKB369_NANO2_REPLACEMENT.menu.lfclk.lfrc.build.lfclk_flags, specifies the source of the low frequency clock, used for the lp_timer. There are three options, -DUSE_LFXO, -DUSE_LFRC and -DUSE_LFSYNT. The best choice is -DUSE_LFXO, if the board has an external 32Khz crystal. If not then use -DUSE_LFRC, which uses an internal RC oscillator and draws slightly more current, ~10uA more, and is much less times less accurate. Do not use the -DUSE_LFSYNT as this keeps the chip running all the time resulting in mAs current draw.\nSoftdevice \u2013 pfod_lp_nrf52 only supports nRF52 chips and softdevice s132 so no changes need for this block, other than the prefix.\nReconfiguring nRF52 NFC pins as GPIO's\nBe default on the nRF52 pins, P0.09 and P0.10 are configured for use as NFC and expect to be connected to a NFC antenna. If you need to use these as general purpose I/O pins (GPIO's) then you need to add a define,\n-DCONFIG_NFCT_PINS_AS_GPIOS, to that board's ...menu.softdevice.s132.build.extra_flags compile settings in the boards.txt file.\nFor example pfod_lp_nrf52.zip, re-configures the GT832E_01 pins for use as I/O. The GT832E_01 section for this board, in the boards.txt file, has the following define added\nGT832E_01.menu.softdevice.s132.build.extra_flags=-DNRF52 -DS132 -DNRF51_S132 -DCONFIG_NFCT_PINS_AS_GPIOS\nThe linker script in pfod_lp_nrf52.zip has also been modified to preserve this setting and does not need to be changed.", "step_imgs": ["https://cdn.instructables.com/FS9/B40B/JS0ON94Y/FS9B40BJS0ON94Y.LARGE.jpg", "https://cdn.instructables.com/FYV/56K1/JTON0HUJ/FYV56K1JTON0HUJ.LARGE.jpg", "https://cdn.instructables.com/FEI/W07O/JTON0HUV/FEIW07OJTON0HUV.LARGE.jpg", "https://cdn.instructables.com/FRC/VMSO/JTON0HXQ/FRCVMSOJTON0HXQ.LARGE.jpg"], "step_title": "Step 6: Creating a New Arduino NRF52 Board Definition"}, {"step": 7, "steps_text": "This tutorial has presented a replacement for the Redbear NanoV2 using a SKYLAB SKB369 module. A battery/solar powered Temperature Humidity Monitor was used as an example very low power BLE project in Arduino for the SKYLAB module. Supply currents of ~25uA where achieved by tuning the connection parameters. This resulted a CR2032 coin cell battery life exceeding 1 year. Longer for higher capacity batteries. Adding two cheap solar cells easily extended the battery life by 50% or more. A bright room light or a desk lamp is sufficient to power the monitor from the solar cells.\nThis tutorial also covered removing chip protection from a pre-programmed nRF52 and how to set up a new board definition to match your own PCB/circuit\nNo Android programming is required. pfodApp handles all of that.", "step_imgs": [], "step_title": "Step 7: Conclusion"}], "channel": "Arduino"}, {"category": "Technology", "description": "In this instructable I will try to show you how to make a simple but very cool cardboard bluetooth speaker.\nMy first instructable was the inspiration for this project.\nhttps://youtu.be/F-B0r1T3isM\nVery easy project, only few tools needed. I used a lot of recycled pieces to build it.\nThe sound is amazing for a cheap cardboard speaker!", "title": "Cardboard Bluetooth Speaker", "url": "https://www.instructables.com/id/Cardboard-Bluetooth-Speaker/", "steps": [{"step": 1, "steps_text": "Thick Cardboard Sheets\n2x 15w 8ohm speakers\n12v 18650 li-ion battery pack\nHX-3S-FL25A 3 SBMS with balancing function\n2x10w PAM8610 Amplifier\nOn/Off switch\nBluetooth module\n5v DC-DC Buck converter\nPower Jack socket, 2.1mm Connection", "step_imgs": [], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "Use a precision cutter to cut the carboard :\n2 pieces 17cmx17cm (side panels)\n2 pieces 17cmx26cm (top and bottom)\n4 pieces 17cmx24,5cm (front and back -double)\n6 pieces 2cmx22cm (speaker box handle)\nCut round holes for the speakers in both the front panels\nUse a hot glue gun to join the cardboard sheets. Use it also for the speakers.\nMake it airtight.", "step_imgs": ["https://cdn.instructables.com/F3O/YDDD/JS0OMR9U/F3OYDDDJS0OMR9U.LARGE.jpg", "https://cdn.instructables.com/FMW/UQ35/JS0OMRBF/FMWUQ35JS0OMRBF.LARGE.jpg", "https://cdn.instructables.com/FL1/1S3H/JS0OMRBL/FL11S3HJS0OMRBL.LARGE.jpg", "https://cdn.instructables.com/FBS/GT37/JS0OMRBM/FBSGT37JS0OMRBM.LARGE.jpg", "https://cdn.instructables.com/F6V/5RKG/JS0OMRCD/F6V5RKGJS0OMRCD.LARGE.jpg", "https://cdn.instructables.com/FBU/OOV0/JS0OMRCI/FBUOOV0JS0OMRCI.LARGE.jpg", "https://cdn.instructables.com/F2Y/LS9K/JS0OMRCS/F2YLS9KJS0OMRCS.LARGE.jpg", "https://cdn.instructables.com/FT8/PZQ0/JS0OMRCW/FT8PZQ0JS0OMRCW.LARGE.jpg", "https://cdn.instructables.com/FS8/2YQS/JS0OMRCZ/FS82YQSJS0OMRCZ.LARGE.jpg", "https://cdn.instructables.com/F1O/KRYI/JS0OMRD8/F1OKRYIJS0OMRD8.LARGE.jpg", "https://cdn.instructables.com/F7N/5M47/JS0OMRDV/F7N5M47JS0OMRDV.LARGE.jpg", "https://cdn.instructables.com/FPN/MQ7J/JS0OMRFL/FPNMQ7JJS0OMRFL.LARGE.jpg", "https://cdn.instructables.com/FCH/EHIT/JS0OMRFN/FCHEHITJS0OMRFN.LARGE.jpg", "https://cdn.instructables.com/FOR/236C/JS0OMRH7/FOR236CJS0OMRH7.LARGE.jpg"], "step_title": "Step 2: Speaker Box"}, {"step": 3, "steps_text": "I made a 12v battery pack with li-ion 18650 cels - 3S2P\nI added the hx-3s-fl25a-a BMS module because it has over discharge voltage protection and balancing function.\nThe PAM 8610 amp works with 12v. For the 5v bluetooth module I used a DC-DC 5v buck converter.", "step_imgs": ["https://cdn.instructables.com/F1P/1WMS/JS0OMS1R/F1P1WMSJS0OMS1R.LARGE.jpg", "https://cdn.instructables.com/F9B/8AN7/JS0OMRIR/F9B8AN7JS0OMRIR.LARGE.jpg", "https://cdn.instructables.com/FQ6/YILR/JS0OMRMI/FQ6YILRJS0OMRMI.LARGE.jpg", "https://cdn.instructables.com/FZO/MVFH/JS0OMZ2J/FZOMVFHJS0OMZ2J.LARGE.jpg", "https://cdn.instructables.com/FJ9/X20H/JS0OMRO2/FJ9X20HJS0OMRO2.LARGE.jpg", "https://cdn.instructables.com/FAV/ALZW/JS0OMRO3/FAVALZWJS0OMRO3.LARGE.jpg", "https://cdn.instructables.com/FPF/FA80/JS0OMRO4/FPFFA80JS0OMRO4.LARGE.jpg", "https://cdn.instructables.com/FH3/1ILQ/JS0OMROT/FH31ILQJS0OMROT.LARGE.jpg", "https://cdn.instructables.com/F7H/MDYZ/JS0OMROU/F7HMDYZJS0OMROU.LARGE.jpg", "https://cdn.instructables.com/F7I/3LA0/JS0OMROV/F7I3LA0JS0OMROV.LARGE.jpg", "https://cdn.instructables.com/F8M/18MV/JS0OMRTI/F8M18MVJS0OMRTI.LARGE.jpg", "https://cdn.instructables.com/FX9/QB4M/JS0OMRTL/FX9QB4MJS0OMRTL.LARGE.jpg", "https://cdn.instructables.com/FIA/CDH9/JS0OMRTM/FIACDH9JS0OMRTM.LARGE.jpg"], "step_title": "Step 3: Electronics"}, {"step": 4, "steps_text": "Use the hot glue gun to attach the 12v charging connector and all other electronics, amplifier, battery pack, bluetooth module.\nMake two holes on top of the speaker box and attach the handle.\nUse paint to make the front panel black.\nUse glue to attach a piece of black cloth on the front panel.\nI also used a piece of self adhesive bass insulation cotton on the double-back panel and a 10cm long 1inch bass reflex tube on the front. I don't know how this helped but the speaker sound is great :)\nDone :).\nI hope you will try to make one and write a comment about it\nSorry for my bad english!", "step_imgs": ["https://cdn.instructables.com/F2M/W0TN/JS0OMRTV/F2MW0TNJS0OMRTV.LARGE.jpg", "https://cdn.instructables.com/F9Z/HAZQ/JS0OMRTN/F9ZHAZQJS0OMRTN.LARGE.jpg", "https://cdn.instructables.com/FAO/3V53/JS0OMRTR/FAO3V53JS0OMRTR.LARGE.jpg", "https://cdn.instructables.com/F54/MEGL/JS0OMRTU/F54MEGLJS0OMRTU.LARGE.jpg", "https://cdn.instructables.com/F7T/WW4Z/JS0OMRVF/F7TWW4ZJS0OMRVF.LARGE.jpg", "https://cdn.instructables.com/F4K/GI4V/JS0OMRVI/F4KGI4VJS0OMRVI.LARGE.jpg", "https://cdn.instructables.com/FWS/NVHS/JS0OMS1P/FWSNVHSJS0OMS1P.LARGE.jpg", "https://cdn.instructables.com/F1M/LSR2/JS0OMRYL/F1MLSR2JS0OMRYL.LARGE.jpg", "https://cdn.instructables.com/FWO/FC2Q/JS0OMS05/FWOFC2QJS0OMS05.LARGE.jpg"], "step_title": "Step 4: Finishing"}], "channel": "Audio"}, {"category": "Technology", "description": "Hi makers,\ntoday we want to show you a new project. A stylish night light that will decorate your desks. We called it \"LIGHTHOUSE UNDER THE SEA\". Whether you use it yourself or gift your loved ones. We assembled the epoxy resin and the arduino. you can also control your lamp with your phone.", "title": "NIGHT LAMP USING ARDUINO & EPOXY RESIN", "url": "https://www.instructables.com/id/NIGHT-LAMP-USING-ARDUINO-EPOXY-RESIN/", "steps": [{"step": 1, "steps_text": "As you can see in pic, we have sample pictures. And now we are going to make this project...", "step_imgs": ["https://cdn.instructables.com/F1E/5UGL/JRYUD4PF/F1E5UGLJRYUD4PF.LARGE.jpg", "https://cdn.instructables.com/F8S/WOD2/JRYUD4PI/F8SWOD2JRYUD4PI.LARGE.jpg", "https://cdn.instructables.com/F09/74F0/JRYUD4PJ/F0974F0JRYUD4PJ.LARGE.jpg", "https://cdn.instructables.com/FJ8/Z0EU/JRYUD4PM/FJ8Z0EUJRYUD4PM.LARGE.jpg", "https://cdn.instructables.com/F3Y/7A5E/JRYUD4PN/F3Y7A5EJRYUD4PN.LARGE.jpg", "https://cdn.instructables.com/FB9/ZD21/JRYUD4QJ/FB9ZD21JRYUD4QJ.LARGE.jpg", "https://cdn.instructables.com/FB1/59G7/JRYUD4QK/FB159G7JRYUD4QK.LARGE.jpg", "https://cdn.instructables.com/FEJ/CZB1/JRYUD4QL/FEJCZB1JRYUD4QL.LARGE.jpg"], "step_title": "Step 1: Project Pictures"}, {"step": 2, "steps_text": "What is Lighthouse ?\nA tower or other structure containing a beacon light to warn or guide ships at sea.", "step_imgs": ["https://cdn.instructables.com/FHY/HI90/JRYUD4VD/FHYHI90JRYUD4VD.LARGE.jpg"], "step_title": "Step 2: Lighthouse ?"}, {"step": 3, "steps_text": "If you decide to do the project or wonder how it is done, I will sort out the necessary materials. This project has an electronic parts, 3d printed parts and epoxy resin.\n- Electronic Parts :\n- Arduino Nano\n- HC05 Bluetooth Module\n- 7805\n- White LED\n- 330 Ohm resistors\n- 9v Battery\n- Some jumpers\n3D Printed Parts :\n- A Lighthouse\n- Box\nEpoxy Resin Parts;\n- Epoxy\n- Hardener\n- Molts", "step_imgs": ["https://cdn.instructables.com/F82/AIY9/JRYUD596/F82AIY9JRYUD596.LARGE.jpg", "https://cdn.instructables.com/FOR/XFUD/JRYUD58P/FORXFUDJRYUD58P.LARGE.jpg", "https://cdn.instructables.com/FW9/KG85/JRYUD58L/FW9KG85JRYUD58L.LARGE.jpg", "https://cdn.instructables.com/F4E/CQ3T/JRYUD59A/F4ECQ3TJRYUD59A.LARGE.jpg", "https://cdn.instructables.com/F6F/7925/JRYUD58O/F6F7925JRYUD58O.LARGE.jpg", "https://cdn.instructables.com/FY1/VTF8/JRYUD597/FY1VTF8JRYUD597.LARGE.jpg", "https://cdn.instructables.com/F42/CEQD/JRYUD598/F42CEQDJRYUD598.LARGE.jpg", "https://cdn.instructables.com/FWJ/45KJ/JRYUD59B/FWJ45KJJRYUD59B.LARGE.jpg", "https://cdn.instructables.com/FMA/KGQY/JRYUD58H/FMAKGQYJRYUD58H.LARGE.jpg", "https://cdn.instructables.com/FY4/4A1F/JRYUD58K/FY44A1FJRYUD58K.LARGE.jpg", "https://cdn.instructables.com/FIO/561M/JRYUD599/FIO561MJRYUD599.LARGE.jpg", "https://cdn.instructables.com/F19/MD3E/JRYUD59C/F19MD3EJRYUD59C.LARGE.jpg", "https://cdn.instructables.com/FA2/1HE0/JRYUD58G/FA21HE0JRYUD58G.LARGE.jpg"], "step_title": "Step 3: Materials"}, {"step": 4, "steps_text": "Firstly, We are starting with leds. As you can see in pics, leds, we put into the lighthouse. We used 3 leds. For top, middle and bottom.", "step_imgs": ["https://cdn.instructables.com/FWV/ASCB/JRYUD65U/FWVASCBJRYUD65U.LARGE.jpg", "https://cdn.instructables.com/FB5/ZQHV/JRYUD65V/FB5ZQHVJRYUD65V.LARGE.jpg", "https://cdn.instructables.com/FKY/PICT/JRYUD65Y/FKYPICTJRYUD65Y.LARGE.jpg", "https://cdn.instructables.com/FHT/C83P/JRYUD69C/FHTC83PJRYUD69C.LARGE.jpg", "https://cdn.instructables.com/FG6/LRKZ/JS0OJQT4/FG6LRKZJS0OJQT4.LARGE.jpg", "https://cdn.instructables.com/F4E/9IYL/JS0OMQAG/F4E9IYLJS0OMQAG.LARGE.jpg", "https://cdn.instructables.com/FMI/6TGG/JS0OJQLY/FMI6TGGJS0OJQLY.LARGE.jpg"], "step_title": "Step 4: Let's Start the Project"}, {"step": 5, "steps_text": "We have 3 mm plexiglass. And we make a mold with it. 10*5.5*4 cm are dimentions. We are using a glue.", "step_imgs": ["https://cdn.instructables.com/FCQ/NICM/JS0OMQHU/FCQNICMJS0OMQHU.LARGE.jpg", "https://cdn.instructables.com/FNN/0NMJ/JS0OMQHW/FNN0NMJJS0OMQHW.LARGE.jpg", "https://cdn.instructables.com/F0J/F8LA/JS0OMQHX/F0JF8LAJS0OMQHX.LARGE.jpg", "https://cdn.instructables.com/FMC/X5DY/JS0OMQHY/FMCX5DYJS0OMQHY.LARGE.jpg", "https://cdn.instructables.com/F6S/ZUJL/JS0OMQHZ/F6SZUJLJS0OMQHZ.LARGE.jpg"], "step_title": "Step 5: Making Mold"}, {"step": 6, "steps_text": "We made a mold. And now, we are putting lighthouse into the mold. In pics, we explained. We filled the mold with epoxy. We have placed stones like pictures. and aprox. 2 days later, we opened mold. and results in pictures.", "step_imgs": ["https://cdn.instructables.com/F0X/3T2O/JS0OMR35/F0X3T2OJS0OMR35.LARGE.jpg", "https://cdn.instructables.com/FIV/FXPK/JS0OMR36/FIVFXPKJS0OMR36.LARGE.jpg", "https://cdn.instructables.com/FTM/EE06/JS0OMR5D/FTMEE06JS0OMR5D.LARGE.jpg", "https://cdn.instructables.com/FQ6/8FIM/JS0OMR8B/FQ68FIMJS0OMR8B.LARGE.jpg", "https://cdn.instructables.com/FSZ/VH0I/JS0OMR8E/FSZVH0IJS0OMR8E.LARGE.jpg", "https://cdn.instructables.com/FTO/9W78/JS0OMR8K/FTO9W78JS0OMR8K.LARGE.jpg", "https://cdn.instructables.com/F93/8NFZ/JS0OMR8L/F938NFZJS0OMR8L.LARGE.jpg", "https://cdn.instructables.com/F38/551W/JS0OMR8M/F38551WJS0OMR8M.LARGE.jpg", "https://cdn.instructables.com/FS1/FKMW/JS0OMR8P/FS1FKMWJS0OMR8P.LARGE.jpg", "https://cdn.instructables.com/FXV/IBVB/JS0OMR8Q/FXVIBVBJS0OMR8Q.LARGE.jpg", "https://cdn.instructables.com/F8X/UTYY/JS0OMR8W/F8XUTYYJS0OMR8W.LARGE.jpg", "https://cdn.instructables.com/F5Z/I9KJ/JS0OMR8X/F5ZI9KJJS0OMR8X.LARGE.jpg", "https://cdn.instructables.com/FYZ/T1MV/JS0OMR93/FYZT1MVJS0OMR93.LARGE.jpg", "https://cdn.instructables.com/F3P/2ZKQ/JS0OMR94/F3P2ZKQJS0OMR94.LARGE.jpg", "https://cdn.instructables.com/FK8/G1QO/JS0OMR9T/FK8G1QOJS0OMR9T.LARGE.jpg", "https://cdn.instructables.com/FCJ/5Y13/JS0OMR9V/FCJ5Y13JS0OMR9V.LARGE.jpg"], "step_title": "Step 6: Building Lamp"}, {"step": 7, "steps_text": "We used fritzing for electronic design. you can find schematic on last steps. The lamp is quite simple as electronically. With several materials you'll be able to do it easily. In this project we used the PWM outputs of the Arduino Nano. With these outputs you will be able to control the brightness of your light.", "step_imgs": ["https://cdn.instructables.com/FEZ/TUXZ/JS0OMS2O/FEZTUXZJS0OMS2O.LARGE.jpg", "https://cdn.instructables.com/FF7/LNSA/JS0OMS2R/FF7LNSAJS0OMS2R.LARGE.jpg", "https://cdn.instructables.com/FH4/LO2R/JS0OMS2S/FH4LO2RJS0OMS2S.LARGE.jpg", "https://cdn.instructables.com/FKJ/OP5D/JS0OMS2U/FKJOP5DJS0OMS2U.LARGE.jpg", "https://cdn.instructables.com/F14/1WOS/JS0OMS2V/F141WOSJS0OMS2V.LARGE.jpg"], "step_title": "Step 7: Electronic Connections"}, {"step": 8, "steps_text": "And results...\nThanks for your patients...", "step_imgs": ["https://cdn.instructables.com/FL0/D6I2/JS0OMSC4/FL0D6I2JS0OMSC4.LARGE.jpg", "https://cdn.instructables.com/FTD/04E9/JS0OMSC5/FTD04E9JS0OMSC5.LARGE.jpg", "https://cdn.instructables.com/FJC/CULO/JS0OMSCE/FJCCULOJS0OMSCE.LARGE.jpg", "https://cdn.instructables.com/F5Q/Q0ZU/JS0OMSCL/F5QQ0ZUJS0OMSCL.LARGE.jpg", "https://cdn.instructables.com/FIW/L0OE/JS0OMSCM/FIWL0OEJS0OMSCM.LARGE.jpg", "https://cdn.instructables.com/FP5/N4QY/JS0OMSCP/FP5N4QYJS0OMSCP.LARGE.jpg", "https://cdn.instructables.com/FZZ/ARRS/JS0OMSCQ/FZZARRSJS0OMSCQ.LARGE.jpg", "https://cdn.instructables.com/FP4/QU2R/JS0OMSCT/FP4QU2RJS0OMSCT.LARGE.jpg", "https://cdn.instructables.com/F77/5UH0/JS0OMSCU/F775UH0JS0OMSCU.LARGE.jpg"], "step_title": "Step 8: Finally"}, {"step": 9, "steps_text": "Project files include:\n- Arduino code\n- 3D Printer STLs\n- Electronic Circuit Schematic", "step_imgs": ["https://cdn.instructables.com/FFD/VLJF/JS0OMSUK/FFDVLJFJS0OMSUK.LARGE.jpg"], "step_title": "Step 9: Files"}], "channel": "LEDs"}, {"category": "Technology", "description": "In this Instructable you will learn tips on how to create a flower in Autodesk Fusion 360 for 3d printing for a unique gift for such holidays as Mother's Day or Valentines Day.", "title": "Fusion 360 3D Printable Flower", "url": "https://www.instructables.com/id/Fusion-360-3D-Printable-Flower/", "steps": [{"step": 1, "steps_text": "A paid or free Hobbyist version of Autodesk Fusion 360\n3D printer. Recommend minimum build volume 4\" x 4\" x 4\" (101.6 mm x 101.6 mm x 101.6mm)\n3D printer filament in colors of your choice. 1 color for the blossom, 1 color for the stem.", "step_imgs": [], "step_title": "Step 1: What You Will Need"}, {"step": 2, "steps_text": "If this is your first time using Fusion 360, navigate over to the browser window and click on Document Settings to expand the section. Since most 3d print slicers use metric as the unit system, change the units to millimeters.\nRight click on Document Settings in the browser window. Verify that capture design history is on. If on, the toggle will say \"Do not capture Design History\" and if already off will say \"Capture Design History\".", "step_imgs": [], "step_title": "Step 2: Project Setup"}, {"step": 3, "steps_text": "1. Under the Model workspace start by going to the Create Menu, and select sphere.\n2. Create a 3\" (76.20 mm) diameter sphere.\n3. Under the Create Menu, create a box large enough so it covers half of the sphere. Press the M key to bring up the Move tool if you need to move the box into place.\n4. Under the Modify Menu, select Combine. Select the Sphere as the target body and the Box as the tool bodies. Set the operation to cut and then press okay.\n5. Under the Create Menu, create a box. Set the dimension to about 38 L x 100 W x 45 H and move the box to cover the top half of the sliced sphere.\n6. Under the Modify Menu, select Chamfer. Select the bottom edge on the sphere side and set the distance to 35mm. Optional, using the move tool you can adjust the faces of the box .\n7. Under the Modify Menu, select Combine. Select the Sphere as the target body and the Box as the tool bodies. Set the operation to cut and then press okay.\n8. Press the F key to bring up the fillet tool. Select the right side corner left by the previous step. Give it about a 45 mm radius.\n9. Create a 45 mm sphere and move it to the left side of the object and have it intersect somewhat into said other object.\n10. Under the Modify Menu, select Scale. Set Scale Type to Non Uniform. Scale the X-axis of the new sphere (Your axis may be different depending on what view you drew the sphere) to 2. Move the object back into alignment with the other object.\n11. Repeat step 10 except change the Y axis instead to about about 1.25 in scale. Move sphere into place.\n12. Under the Modify Menu, select Combine. Select the old sphere as the target body and the scaled sphere as the tool bodies. Set the operation to cut and then press okay.\n13. Select edge of what was cut. Under the Modify Menu select Chamfer. Give a distance of about 5 mm\n14. Select outer edge of the chamfer.\n15. Press the F key to bring up the fillet tool. Apply about a 26.5 mm edge.\nSelect the inner edge of the chamfer.\n17. Using the fillet tool again, apply a 20mm edge.\n18. Using the scale too located under the Modify Menu, warp the shape into something that looks a little more organic looking.", "step_imgs": [], "step_title": "Step 3: Designing Outer Petals Part 1"}, {"step": 4, "steps_text": "1. Select all the faces of the model. Press Ctrl + C (Command + C) then Ctrl + V (Command + V) to duplicate the model. Press okay.\n2. With the duplicate selected, under the Modify Menu select scale. Scale the duplicate down to 0.9-0.95.\n3. Press the M Key to bring up the move tool. Move the scaled duplicate away from the other model about 2-3 mm.\n4. Under the Modify Menu, select combine. Set the original model as the target body and the scaled duplicate as the tool bodies. Set the operation to cut. Press ok.\n5. Under the Create Menu, select box. Draw a box that covers half of the petal shape.\n6. Under the Modify Menu, select combine. Set the petal as the target body and the box as the tool bodies. Set the operation to cut. Press ok.\n7. Under the Create Menu, select Mirror. Select the sliced petal and select a mirror plane to make a mirrored copy of the petal.\n8. Under the Modify Menu, select combine. Set the original model as the target body and the mirrored duplicate as the tool bodies. Set the operation to join. Press ok.\n9. Under the Create Menu, select box. Draw a box. Using the move tool (Ctrl+M or Command + M) rotate and move the box so a corner cuts into the top of the petal. *****Note: A triangle shape can be drawn using sketch tools and then extruded to cut out the tip of the petal.\n10. Under the Modify Menu, select combine. Set the petal as the target body and the box as the tool bodies. Set the operation to cut. Press ok.\n11.Under the Create Menu, select box. Draw a box that covers the front half of the petal shape.\n12. Under the Modify Menu, select combine. Set the petal as the target body and the box as the tool bodies. Set the operation to cut. Press ok.\n13. Press the F key bring up the fillet tool. Select the top edges of the cut result. Set a distance of about 24mm-50mm (Whatever you prefer).\n14.Press the F key to bring up the fillet tool. Select the outer edges of the cut petal. Set a distance of about 1mm. Continue using the fillet tool to round out edges as you see fit.\n15. Make a duplicate of the petal. Rename to Sepal and hide the body mesh for later.", "step_imgs": [], "step_title": "Step 4: Designing Outer Petals Part 2"}, {"step": 5, "steps_text": "1. Under the Sketch Menu, select line. Choose a drawing direction in the viewport.\n2. Draw a heart (or any shape you want). Use the sketch fillet tool (located under the Sketch Menu) as needed to round out points.\n3. Press \"Stop Sketch\" once you have a shape.\n4. Press Q to bring up the Press Pull tool. Extrude the sketch to 10mm or more. Press ok.\n5. Using the move tool (Press the M key), rotate and move the heart.\n6. Duplicate the heart (Copy and paste commands) and continue moving and rotating each shape into a pattern. Leave at least a 3 mm space between the heart shapes.\n7. Once happy with the heart placements, select combine under the Modify Menu. Set the petal as the target body and the heart shapes as the tool bodies. Set the operation to cut. Press ok.\n8. Optional. Use the Fillet or Chamfer tools (under the Modify Menu) to round out edges of the cutouts", "step_imgs": [], "step_title": "Step 5: Optional Heart Petal Cutouts"}, {"step": 6, "steps_text": "1. Once you have a outer petal it is time to create the other outer petals. Under the Create Menu, select mirror.\n2. Select the petal and the opposing plane to create a mirrored version of the petal.\n3. Select one of the 2 petals. Make a duplicate and rotate the piece 90 degrees. Position the duplicate between the other two petal on one side.\n4.Under the Modify Menu, select scale. Set the scale type to Non Uniform and scale down the width of the newest petal.\n5. Use the move tool (M key) to position the petal into place.\n6. Under the Create Menu, select mirror. Select the scaled petal and the opposing plane to create a mirrored version of the petal.", "step_imgs": [], "step_title": "Step 6: Designing Outer Petals Part 3"}, {"step": 7, "steps_text": "1. Create a 28mm diameter by 38 mm high cylinder in the center of the forming blossom.\n2. Create a second cylinder that is about 25-26 mm in diameter. Set height to 38mm and the modelas a new body. Align to the center of the previous cylinder.\n3. Under the Modify Menu, select draft. Select the top face of the outer cylinder as the plane. Select the outer sides as the faces. Give the angle about a -1.5 deg. This should flare inwards the bottom of the cylinder.\n4. Under the Create Menu, select coil.\n5. Create a coil that wraps around the outer cylinder with 1 revolution.\n6. Using the combine tool, set the outer cylinder as the target body and the inner cylinder and the coil as the tool bodies. Set the operation to cut. Press ok.\n7.Create a box. Move the shape so that it extends partially into the top of the center model. Combine shapes with the box as the tool bodies and the operation to cut.\n8. Create another box. This box needs to be large enough to cut into the front half of the forming center petals. Use the fillet tool to round out the edges you may not want to intersect.\n9. Using the combine tool, combine the shapes with the box as the tool bodies and the operation to cut.\n10. Hide the floating bodies that remain.\n11. Create a new cylinder. This needs to have a diameter matching the size of the inner core of the petal and extend below the shape.\n12. Combine the shapes with the cylinder as the tool bodies and the operation as cut.\n13. Select the bottom face of the petal. Extend the bottom as desired.\n14. Using the fillet tool, round out the top edges of the center petal. Give it 1mm fillet.", "step_imgs": [], "step_title": "Step 7: Designing the Center Petal"}, {"step": 8, "steps_text": "1. Create a cylinder. Set the diameter to 16mm and the height to 25mm. Slign to the center of the blossom.\n2. Create another cylinder aligned to the first. Set the diameter to 20 mm and the height to 25mm.\n3. Combine the shapes with the largest cylinder as the target body. Set the operation to cut.\n4. Create a large box big enough to cover half of the cylinder just made.\n5. Combine the shapes with the box as the tool bodies. set the operation to cut.\n6. Use the fillet tool to round out the edges of the shape.\n7. Create duplicates of the shape. Using the scale and move tools make variations of inner petals and arrange them into a flower like position.\n8. Combine the inner petals. Set the operation to join.\n9. Create a large box that covers about half of the merged center petals.\n10. Combine the center petals and box with the box set as the tool bodies. Set operation to cut.\n11. Create a 30mm sphere. Position the sphere at the base of the center petals.\n12. Create a box that covers a top portion of the sphere.\n13. Combine the box and sphere. Set the the sphere as the target body and the box as the tool bodies. Set the operation to cut.\n14. Create a cylinder that is about 30 mm in diameter and 29mm in height.\n15. Under the Modify Menu, select draft. Select the top face of the cylinder for the plane and the side of the cylinder for the faces. Give the cylinder a -22 degree draft.\n16. Combine the taper cylinder with the sphere and inner petals.\n17. Create about a 20mm cylinder with a height of 19mm\n18. With the fillet tool, round the bottom edge of the cylinder. About 6.5mm should work.\n19. Combine the first shape (the sphere with the cylinder tapered) with the cylinder with the rounded bottom. Set the first shape as the target body and the cylinder with the rounded bottom as the tool bodies. Set the operation as cut.", "step_imgs": [], "step_title": "Step 8: Designing the Surrounding Petals"}, {"step": 9, "steps_text": "1. At the bottom of the combined shape, create a cylinder (about 12.7mm in diameter and 5mm in height). Cylinder should protrude out the bottom of the blossom lightly.\n2. Combine all petals to the base cylinder.\n3. Select the face of the protruding cylinder. Move closer to the petals.\n4. Create anolossomther cylinder at the base of the blossom. Set the diameter to about 12.7mm and 5mm in height.\n5. Under the Create Menu, select thread. Select the side of the cylinder. Check on Modeled and use recommended settings. press ok.\n6. Combine the threaded cylinder to the blossom.", "step_imgs": [], "step_title": "Step 9: Blossom Insert"}, {"step": 10, "steps_text": "1. Create another cylinder over the threaded part of the blossom. Set the diameter to about 12.7mm and 5mm in height. Name this \"Insert Cut\"\n2. Create a cylinder over the threaded part of the blossom. Set the diameter to about 18mm and the height to about 8mm. Name this model Stem.\n3.Create a duplicate of Stem. Under the Modify menu select Draft. Select the top face of the stem duplicate as the Plane and the side of the cylinder as the faces. Set the angle to -25 degrees.\n4. Combine the two step pieces. Set operation as join. Then combine the stem with the Insert cut. Set the insertc cut piece as the tool bodies and set the operation to cut.\n5. Under the Create Menu, select thread. Select the inner walls of the insert cutout. Check on modeled. Use same settings as the the thread for the blossom insert.\n6. Use the fillet tool to round out the sides of the stem base.\n7. Use the fillet tool to round out the top outer edge of the stem.\n8. Select the bottom face of the stem. Using the move tool (M key) extend the base.\n9. Press the E key to up Extrude tool. Extend the stem to around 50mm. Set operation to join.\n10. Use the fillet tool to round out the edge of the extruded stem where it attaches to the base.", "step_imgs": [], "step_title": "Step 10: Designing Stem"}, {"step": 11, "steps_text": "1. Unhide the Sepal body mesh from earlier. Using the scale tool change the Scale Type to Non Uniform.\n2. Create a box over part of the bottom of the sepal mesh. Change operation 2 cut.\n3. Using a companimation of the Scale and Move tools, war and maneuver the sepal mesh into a leaf like appearance on the stem.\n4. Use the fillet tool to round out the bottom edges of the sepal leaf that intersect with the stem.\n5. Duplicate the sepal leaf mesh and maneuver the duplicate to another location on the stem. Scale if desired for a little variation.\n6. Combine sepal leaves to the stem. Use the fillet tool to round out any protruding/rough edges where the sepal leaves intersect with the stem", "step_imgs": [], "step_title": "Step 11: Designing the Sepals"}, {"step": 12, "steps_text": "Export the flower blossom using the 3d print button located under the Make menu. Uncheck \"Send to 3D Print Utility\" to allow saving of the STL file.\nPrinting\nFor best results, print 0.2 mm with 20-30% fill for the blossom. Print with 0.2 mm 40-50% fill for the stem. Use a support resolution of 1.5 -2 mm and overhang detection of 25 degrees for best results.", "step_imgs": ["https://cdn.instructables.com/FNG/18GA/JRYTTOI2/FNG18GAJRYTTOI2.LARGE.jpg"], "step_title": "Step 12: 3D Printing"}, {"step": 13, "steps_text": "Once printing is complete, remove print supports. Twist in the blossom into the stem and you got a unique gift and decoration!\nWant to skip the design phase and just print the files?\nFiles for this instructable are available for purchase on Myminifactory.com (Link)", "step_imgs": ["https://cdn.instructables.com/FWD/FYWJ/JRV89Q6F/FWDFYWJJRV89Q6F.LARGE.jpg", "https://cdn.instructables.com/FMY/DXE5/JRV89Q6G/FMYDXE5JRV89Q6G.LARGE.jpg"], "step_title": "Step 13: Final Result"}], "channel": "Software"}, {"category": "Technology", "description": "This project was inspired by the food cam project done by the MIT Media Lab. This project is part of the college service Coding For Good at UWCSEA East in Singapore. The goal of this project is to reduce the amount of food wasted by our community by giving people an alternative to throwing away their uneaten food.\nThe food cam project allows food that would have otherwise been wasted to be placed under a camera, have a photo taken of it and uploaded to Twitter for the entire community to view. Thereby allowing anyone to come to finish off the free food. This instructable will take you on our journey of making and implementing the Food Cam in our school community.", "title": "Food Cam", "url": "https://www.instructables.com/id/Food-Cam/", "steps": [{"step": 1, "steps_text": "In order to get started with the electronics part of the project, we first need to collect the following list of parts (below). The power bank is optional and only necessary if you require this device to be portable. In our case, we planned to have a stationary product with an extended micro-USB to USB cord supplying power to the Pi. Additionally, the specs of the button do not matter much with the exception of the button being a PTM (push to make) switch or a momentary switch. This will be important later on for the functionality of both the camera and code.\nAs for the hardware, don't worry about that for now. If you are looking to complete that, skip to step 11.\nHere is what you must have as a prerequisite to attempting this project:\n1. A Stable Internet Connection\n2. HDMI Cable\n3. Monitor\n4. Mouse\n5. USB port\nThe Electronics (BOM) *Soldering Iron Required:\n1x Raspberry Pi 3 Model B\n2x LEDs (1x Red, 1x Green)\n1x Raspberry Pi Cam (V2.1)\n6x Female To Female Wires\n1x Big Red Button (PTM)\n2x 470 Ohm Resistor\n1x Power bank (5500 mAh) (Optional)\n1x USB to micro-USB cable\n1x Micro SD Card\n1x Micro SD Card Reader", "step_imgs": ["https://cdn.instructables.com/F2O/5KNJ/JNNF35LL/F2O5KNJJNNF35LL.LARGE.jpg", "https://cdn.instructables.com/FJC/IFTK/JR0YNFGN/FJCIFTKJR0YNFGN.LARGE.jpg", "https://cdn.instructables.com/FKH/4CTN/JR0YNFKZ/FKH4CTNJR0YNFKZ.LARGE.jpg", "https://cdn.instructables.com/FTX/TZ05/JR0YNFLY/FTXTZ05JR0YNFLY.LARGE.jpg"], "step_title": "Step 1: Collecting the Electronics"}, {"step": 2, "steps_text": "Insert the flex cable from the camera into the flex cable port on the Raspberry Pi board. Do this with care as replacing these parts can be quite expensive!", "step_imgs": ["https://cdn.instructables.com/FPA/5VK9/JNNF3306/FPA5VK9JNNF3306.LARGE.jpg"], "step_title": "Step 2: Insert the Camera Into the Raspberry Pi"}, {"step": 3, "steps_text": "If you are looking to complete this project on a breadboard first, as shown in the top right photo, then you may skip this step. However, if you are planning to make it permanent, continue through with this step.\nBefore soldering, make sure you have the right setup. You should be working on a heatproof mat, with glasses, and proper ventilation. These safety steps are crucial in order to minimize the risk of injury or damage in case of an accident.\nThere are two ways to solder the resistors onto the legs of the LEDs. You may either solder the resistor directly onto the LED or use a wire to connect both the resistor and LED (shown above). Whichever way you choose to go, make sure you insulate your wires in order to avoid any short circuit. This can be seen in the bottom right photo. The cathode of the LED is the shorter leg.", "step_imgs": ["https://cdn.instructables.com/F8F/SFIB/JR0YNG2U/F8FSFIBJR0YNG2U.LARGE.jpg", "https://cdn.instructables.com/FVS/8FPV/JR0YNG2V/FVS8FPVJR0YNG2V.LARGE.jpg", "https://cdn.instructables.com/FHC/Q8A7/JR0YNG3X/FHCQ8A7JR0YNG3X.LARGE.jpg", "https://cdn.instructables.com/FIN/QPPR/JR0YNG5K/FINQPPRJR0YNG5K.LARGE.jpg"], "step_title": "Step 3: Solder the Resistors to the Cathode Legs on Each LED"}, {"step": 4, "steps_text": "Ideally, male to female wires should be used so that it is easy to connect the wires to the Raspberry Pi module. While the other (male) ends of the wires can be soldering to the LEDs and switch. However, if male to female wires isn't accessible, it is recommended that multi-core wire is used instead of the solid core due to flexibility and the reduced risk of dry joints.\nHere are the required connections (use the GPIO pin scheme attached in the photos above):\nRed LED Anode: GPIO Pin 13\nRed LED Cathode: Any GND Pin\nGreen LED Anode: GPIO Pin 7\nGreen LED Cathode: Any GND Pin\nButton Leg 1: GPIO Pin 12\nButton Leg 2: Any GND Pin\nAny of these ports can be changed by modifying the code later on.", "step_imgs": ["https://cdn.instructables.com/FGI/EGIE/JR0YNH8T/FGIEGIEJR0YNH8T.LARGE.jpg", "https://cdn.instructables.com/FAI/Y3E2/JR0YNH9L/FAIY3E2JR0YNH9L.LARGE.jpg", "https://cdn.instructables.com/FM7/04JG/JR6OIBO6/FM704JGJR6OIBO6.LARGE.jpg"], "step_title": "Step 4: Connect the LEDs and the PTM Switch to the Raspberry Pi"}, {"step": 5, "steps_text": "As discussed earlier, there are two ways that the Pi can be powered depending on its use. By power bank (or external battery) or by a direct plug into the wall. In our case, we used a micro-USB to USB so that it could be powered by either source.\nAlthough, the cable needs to be extended so that the wire can reach a port given the height of the final product. To do this, the micro-USB to USB cable must be cut in half, stripped on both ends, and then an extension wire of any required length can connect the negative and positive terminals of both halves of the wire as shown above.", "step_imgs": ["https://cdn.instructables.com/FLC/SDDE/JR6OI9ZW/FLCSDDEJR6OI9ZW.LARGE.jpg"], "step_title": "Step 5: Power Supply"}, {"step": 6, "steps_text": "This step is crucial to setting up your pi if you haven't already done so.\nYou will need to download NOOBS: https://www.raspberrypi.org/downloads/noobs/\nAnd an SD card formatter: https://www.sdcard.org/downloads/formatter_4/\nFor the complete instruction guide on how to install raspbian on your card, visit this website as it does a great job in detailing the install process.", "step_imgs": ["https://cdn.instructables.com/FP4/3WW3/JRYURX3W/FP43WW3JRYURX3W.LARGE.jpg"], "step_title": "Step 6: Installing Raspbian on the Micro-SD Card"}, {"step": 7, "steps_text": "Using the photo above as a guide, connect each of the relevant ports to the monitor and additional hardware such as a keyboard, mouse, etc. If everything is setup correctly, once the power is turned on the screen should show the Pi OS starting up as seen in the image above.", "step_imgs": ["https://cdn.instructables.com/FIJ/TX01/JR0YNI3S/FIJTX01JR0YNI3S.LARGE.jpg", "https://cdn.instructables.com/F4Y/COKS/JR6OICTS/F4YCOKSJR6OICTS.LARGE.jpg"], "step_title": "Step 7: Hooking Up the Pi to the Monitor"}, {"step": 8, "steps_text": "*Note - to do this, you must have a twitter account with a verified phone number\nFrom the same web browser where you are logged into your twitter account, go to https://apps.twitter.com/\n1. Click on Create New App\n2. Fill in Name, Description, and Website (if you do not have a website for your project, any valid website will do - just remember the \"http://\"\n3. Agree to T&Cs\n4. Click Create your Twitter application button\n5. Click on Permissions Tab, select Read and Write, press Update settings\n6. Click on the Keys and Access Tokens tab, then click on the Create my access token button\n7. After you press the Create my access token button, you will see the Access Token and Access Token Secret fields. Keep all of these field values handy. You will need them for the Python code.\n\nConsumer Key (API Key)\nConsumer Secret (API Secret)\nAccess Token\nAccess Token Secret", "step_imgs": ["https://cdn.instructables.com/FBV/KNIM/JR6OID5L/FBVKNIMJR6OID5L.LARGE.jpg"], "step_title": "Step 8: Generating Your Twitter API"}, {"step": 9, "steps_text": "Download the source code attached here. Read through the comments and add in the required information, including the keys generated in the last step. Remember to check that the pin numbers you fill in are the correct numbers that you connected the components to earlier.", "step_imgs": ["https://cdn.instructables.com/F3X/BOCP/JR6OIBDN/F3XBOCPJR6OIBDN.LARGE.jpg"], "step_title": "Step 9: Programming Your Pi"}, {"step": 10, "steps_text": "In your Terminal (Pi OS), type in:\nsudo nano /etc/profile\nThis will open a file which automatically runs on startup. All you need to do is make sure your code also runs by adding it to this file. To do this, type at the bottom of this the line:\nsudo python /home/pi/myscript.py\nwhere /home/pi/myscript.py is replaced by the path (the folders and then the name of the file separated by slashes) of what you called your coding file.\nThen, press Ctrl-X to exit, hit Y to save and press Enter as necessary to fully save/exit out of the file.", "step_imgs": ["https://cdn.instructables.com/FFV/ZHXI/JR6OIDO9/FFVZHXIJR6OIDO9.LARGE.jpg"], "step_title": "Step 10: Setting Up Your Code to Run Automatically"}, {"step": 11, "steps_text": "For the housing, we used a black box future kit and made a stand out of extrusion in order to hold the camera above the food placement board.\n\nWhat we used for the housing:\n1. Wooden Board\n2. Extrusion\n3. 2x M12 Nut\n4. 2x M12 Bolt\n5. Black Future Kit Box", "step_imgs": ["https://cdn.instructables.com/FHH/S01R/JRBBTLPZ/FHHS01RJRBBTLPZ.LARGE.jpg"], "step_title": "Step 11: The Housing (BOM)"}, {"step": 12, "steps_text": "In order to secure the button, camera, and LEDs in place, we must drill holes to place each component.\nIn our case, here are the diameters for each hole:\nLED Holders: 8mm\nCamera Hole: 6mm\nButton Hole: 22mm (depends on the button you use)\nWhen drilling, make sure you hold the drill perpendicular to the surface that you are drilling and don't apply too much pressure which may increase the risk of the case cracking. Make sure to use washers and nuts to secure each component in place.\nMake sure that the component you are drilling a hole for will have enough space to fit before making the hole in that area of the box!", "step_imgs": ["https://cdn.instructables.com/FN7/RQN6/JRBBTM2C/FN7RQN6JRBBTM2C.LARGE.jpg", "https://cdn.instructables.com/FTB/242K/JRBBTP7E/FTB242KJRBBTP7E.LARGE.jpg", "https://cdn.instructables.com/F3H/1R0Z/JRBBTMR3/F3H1R0ZJRBBTMR3.LARGE.jpg"], "step_title": "Step 12: Drilling LED, Camera, and Switch Holes Into the Box"}, {"step": 13, "steps_text": "This step is optional and requires an SPST rocker switch in order to control the power supply. This will enable to shut down the device without unplugging the USB cord and therefore, is a function for convenience. You will need the extended USB to micro-USB cable (as discussed earlier) as it will need to be cut to run it through the switch.\nWe first measured and drew out the size of the hole we would need to drill in order to support the switch. Then using an 8 mm drill bit, we drilled two holes side by side so that we could file out a rectangular slot in order to fit the shape of our rocker switch.\nOnce the rocker switch was pushed in place, the positive extension wire was cut. The two ends were then soldered to the common terminal and an adjacent terminal of the rocker switch as can be seen above.", "step_imgs": ["https://cdn.instructables.com/F58/HVDR/JRYURVAU/F58HVDRJRYURVAU.LARGE.jpg", "https://cdn.instructables.com/FFC/958K/JRYURVAV/FFC958KJRYURVAV.LARGE.jpg"], "step_title": "Step 13: Power Switch and Wire"}, {"step": 14, "steps_text": "Adding the camera to the box is a very tricky part. We did it using a hot glue gun which allows us to remove the camera with relative ease if something were to go wrong.\nFirst, position the camera in place and make sure that it takes it's a picture the right way around. Also, make sure that the photo it takes isn't tilted in any way. Once these variables are fixed, take the glue gun and glue the sides of the Pi camera to the box. Although make sure the gun doesn't touch the camera lens!", "step_imgs": ["https://cdn.instructables.com/FM1/CWU2/JRBBTPPM/FM1CWU2JRBBTPPM.LARGE.jpg", "https://cdn.instructables.com/F4T/FKQX/JRBBTPPP/F4TFKQXJRBBTPPP.LARGE.jpg", "https://cdn.instructables.com/FTF/5BGY/JRBBTPT4/FTF5BGYJRBBTPT4.LARGE.jpg"], "step_title": "Step 14: Adding the Camera to the Box"}, {"step": 15, "steps_text": "In order to complete this step, first get an aluminum strip as seen above and bend it 90 degrees so that it wraps around your box. Next drill two sets of holes (12mm in diameter) both in the box and on the aluminum strip so that they line up. Use M12 bolts and nuts to secure the aluminum strip in place along the edge of the box. The excess strip coming off the box can then be used to secure the box to extrusion as will be shown in the following steps.\nMake sure to use instruments such as vernier calipers and rulers in order get everything aligned up. Any offset can result in a tilt in the image produced.", "step_imgs": ["https://cdn.instructables.com/FGT/ZTPJ/JRBBTN07/FGTZTPJJRBBTN07.LARGE.jpg", "https://cdn.instructables.com/FNR/GTO3/JRBBTN0A/FNRGTO3JRBBTN0A.LARGE.jpg", "https://cdn.instructables.com/FSX/T7CU/JRBBTN0D/FSXT7CUJRBBTN0D.LARGE.jpg"], "step_title": "Step 15: Attaching the Box to Extrusion"}, {"step": 16, "steps_text": "First, cut out a long piece of extrusion (*see below). Then get two brackets/ribs as shown above and do a dry fit of the brackets and the extrusion on the wooden baseboard. Next, take a pencil and mark out where you will drill the necessary holes to secure the brackets to the board.\nDrill those holes (around 8mm) and secure the brackets to the board using M8bolts and nuts. Next, get the required t-shape screws for extrusion and secure the extrusion column in between the two brackets as seen above.\n*It is important to note that the height of the extrusion is dependent on what you want your camera to see in its field of view. For us, we had it sitting at around 60 cm above the board in order to capture the written message on the board. We decided on this height after testing the camera at different heights and examining the images on Twitter.", "step_imgs": ["https://cdn.instructables.com/F04/1CDH/JRBBTN1K/F041CDHJRBBTN1K.LARGE.jpg", "https://cdn.instructables.com/FEU/IC8N/JRBBTN1N/FEUIC8NJRBBTN1N.LARGE.jpg", "https://cdn.instructables.com/FBI/WWTD/JRBBTN22/FBIWWTDJRBBTN22.LARGE.jpg"], "step_title": "Step 16: Attaching the Stand to the Base"}, {"step": 17, "steps_text": "In this step, first cut out another smaller piece of extrusion. The length of it should be based on how far out you would like your camera to reach as seen above.\nNext, take the aluminum strip that comes off the box and drill two 6mm holes through it (main photo). Then, take the smaller piece of extrusion and attach underneath the aluminum strip using the t-shaped screws (bottom right photo). Ensure that the holes are aligned so that the image does not appear tilted.\nFinally, in order to attach the two piece of extrusion at a 90-degree angle, we used a small bracket/rib and secured it to the two pieces using the required t-shape screws which lock into the extrusion.", "step_imgs": ["https://cdn.instructables.com/F8C/7CGB/JRBBTSDL/F8C7CGBJRBBTSDL.LARGE.jpg", "https://cdn.instructables.com/FJ9/TIK7/JRBBTSDM/FJ9TIK7JRBBTSDM.LARGE.jpg", "https://cdn.instructables.com/FYP/ESCD/JRBBTSDN/FYPESCDJRBBTSDN.LARGE.jpg", "https://cdn.instructables.com/F0E/W1W2/JRBBTSDO/F0EW1W2JRBBTSDO.LARGE.jpg"], "step_title": "Step 17: Attaching the Camera Box to the Stand"}, {"step": 18, "steps_text": "Finally, just run the power cable from the Pi to a USB port and screw up the back of the power box. That's it!\nAll that is left to do now is to put the device near a place where people eat and advertise the free food twitter account that you created.\nA link to our twitter page can be found here.\nEnjoy.\nThis instructable was written and created by Rehaan Irani and Justin Chan from the Coding For Good service at UWCSEA East under the supervision of Mr. David Kann. This was also produced with the help of the college service Circle Enterprise and the UWCSEA East DT department. Additional thanks to Sewen Thy and Vatsal Agarwal for their contribution to the project.", "step_imgs": ["https://cdn.instructables.com/FZM/L7IA/JRBBTTTT/FZML7IAJRBBTTTT.LARGE.jpg", "https://cdn.instructables.com/FO7/USF9/JRYUSKOW/FO7USF9JRYUSKOW.LARGE.jpg"], "step_title": "Step 18: Conclusion"}], "channel": "Raspberry Pi"}, {"category": "Technology", "description": "The goal of this instructable is to explain how I made a wifi-connected light switch (also called remotes further). The goal of these remotes is to turn on and off several wifi-connected relays. The relays are not explained in this instructable. They are explained in a separate instructable that I made in the past: ESP8266 Wifi Switch.\nThese remotes will contain up to 3 small buttons. Each button turns on/off one or more relays. An LED next to each button serves as feedback. A larger button is used for a special purpose: it turns off all of the relays. Not only the ones controlled by the remote, but all relays controlled by all remotes of the house. This is used to turn everything off when leaving to work, or going to bed.\nThe link between the devices is managed by Blynk. The remote microcontroller is a Huzzah Feather with ESP8266. The power to the remotes is coming from a USB wall plug (no batteries).\nIf you follow my instructables, you will notice that this device has a similar purpose as the one explained in a previous instructable: ESP32 Thing Wifi Remote, and you are correct. I made the following improvements from the previous model:\nThe ESP32 Thing was replaced by a Huzzah Feather with ESP8266 (I had connectivity issues with the ESP32 Thing).\nThe metallic buttons were replaced by plastic buttons (static electricity was sometimes transmitted to the board through the metallic buttons, requiring a reboot).\nThese remotes now only control a few lights, usually the lights in one room, instead of controlling all the lights of the house with each remote (so you don't accidentally turn on the lights in the other bedrooms for example).\nI had a battery in the older model, to be able to remove the remote from the USB plug, and still use it for a few hours. It turns out I never used this functionality, so I removed the battery to make the remote slimmer.\nI added the \"turn everything off\" button.\nI added the feedback LEDs.\nDifficulty level: Medium\nMaterial needed:\n1 plastic enclosure PolyCase and PolyCase\n1 Feather HUZZAH with ESP8266 Adafruit\n1 half-sized solderable breadboard Adafruit\n3 leds Adafruit\n3 tall and narrow push buttons Adafruit\n1 short and wide push button Adafruit\n7 3.3k resistors Amazon\n1 USB type-A male plug Adafruit\nwire Sparkfun\npolyurethane glue Lowes\nTools needed:\nSoldering iron Amazon\nDremel (if you don't have one, a utility knife would suffice) Lowes\nDrill press (if you don't have one, a hand drill would suffice) Lowes", "title": "The Ultimate Light Switch", "url": "https://www.instructables.com/id/The-Ultimate-Light-Switch/", "steps": [{"step": 1, "steps_text": "Microcontroller:\nAs microcontroller, I used the feather Huzzah with ESP8266, made by Adafruit, for the following reasons:\nIt has wifi capabilities\nIt is cheap ($18.95 for the assembled version)\nIt is relatively small (23mm x 51mm x 8mm / 0.9\" x 2\" x 0.28\")\nIt has 9 GPIOs pins (I needed 7)\nThe microcontroller will be powered by the 5V of a USB outlet.\n4 GPIOs will be used as inputs from buttons, and 3 will be used as output to light leds. One of the buttons (the one that turns off every light) has an LED included, so it did not make sense to me to have a feedback led for this button.\nButtons:\nThe design for the buttons is very simple: for the 3 small buttons, I picked tactile switches, also called SPST switches. I picked the tall ones, so that they will stand out of the enclosure. For the bigger button, I also picked an SPST switch, but a shorter one, so that it will be recessed in the enclosure, the goal being that it won't be pushed by accident. It also has an led inside, and has an I/O symbol.\nAs shown in the diagram above, the switches supply ground to the GPIO through a 3.3k pull-down resistor, and supply 3.3V to the GPIO when pressed.\nLEDs:\nI used 5mm yellow LEDs. They are simply connected to a GPIO on one end, and to ground through a 3.3k resistor on the other end.\nEnclosure:\nFor the enclosure, I needed a plastic box with internal dimensions of at least 51mm x 97mm x 11mm / 2.0\" x 3.8\" x 0.4\" . The box I picked has internal dimensions of 52mm x 100mm x 19mm / 2.0\" x 3.9\" x 0.7\" . This means that I will have to stack a few cardboard or paper behind the breadboard, to make sure that the system is pushed flush with the enclosure lid, and the buttons will stick out of the lid.\nAll components are soldered on a solderable breadboard. This makes it more permanent and secured than a conventional breadboard, and does not require to design a custom-made PCB. I found that the half-sized permaboard from Adafruit worked perfectly.", "step_imgs": ["https://cdn.instructables.com/FTR/KQWG/JROTCVGW/FTRKQWGJROTCVGW.LARGE.jpg"], "step_title": "Step 1: Design"}, {"step": 2, "steps_text": "Soldering the board is the fun part! Simply follow the wiring diagram, and everything should work according to plan. Pay special attention to the following points:\nPay attention to the LED polarity (short lead-cathode-ground / long lead-anode-positive voltage).\nThe LEDs should be as low as possible to the breadboard. Otherwise, the top of the led will be too high and stick out of the enclosure too much.\nBefore soldering the Feather Huzzah, I removed the battery connector from it. We will not need it, and it is very tall, so it would not allow us to place the enclosure lid properly.\nI placed a 90-degree male - female pin connector on the \"batt\" pin of the Feather Huzzah, and on the ground rail. These will then be connected to the 5V and ground of the USB.\nTip:\nUse a third hand, or make one yourself with a piece of wood, 4 Loc-line hoses, and 4 alligator clips", "step_imgs": ["https://cdn.instructables.com/F1Y/J206/JRKYQCQS/F1YJ206JRKYQCQS.LARGE.jpg", "https://cdn.instructables.com/FVT/NUCB/JRKYQCU6/FVTNUCBJRKYQCU6.LARGE.jpg", "https://cdn.instructables.com/FTK/T66L/JRKYQCU8/FTKT66LJRKYQCU8.LARGE.jpg", "https://cdn.instructables.com/FCX/ST1F/JROTCTCD/FCXST1FJROTCTCD.ANIMATED.LARGE.gif"], "step_title": "Step 2: Making the Board"}, {"step": 3, "steps_text": "USB plug:\nUse the dremel or utility knife to make cut an opening for the USB plug in one of the upper corner of the enclosure on the rear side. Place the USB plug through it.\nMake sure the USB plug is protruding 11.5 mm / 0.45\" from the back of the enclosure, and glue the USB plug in the enclosure using polyurethane glue.\nSolder a wire from the +5V of the USB plug, and a wire from the ground of the USB plug. When you place your board in the enclosure, these wires will be connected to the \"batt\" and ground of the 90-degree male - female pin connector, respectively.\nButtons and LEDs openings:\nDrill holes in the enclosure lid where the buttons and LEDs will protrude. A drill bit of diameter 4mm / 5/32\" is perfect for the small button, and 8mm / 5/16\" is perfect for the larger one. Use a countersink drill bit to make a tapered hole so it looks nice. For the LEDs, I drilled a much smaller diameter than the LED itself (1mm / 1/32\"). Otherwise, I found that the LEDs I chose produce too much light. If the light switch is in a bedroom, it can be disturbing to have too much light coming from the switch.\nTip:\nPlace an empty solderable breadboard on the enclosure lid and use a thin-tipped pen to draw on the enclosure where the holes should be drilled.", "step_imgs": ["https://cdn.instructables.com/FS4/TS5R/JRKYQCEU/FS4TS5RJRKYQCEU.LARGE.jpg", "https://cdn.instructables.com/FO9/IT79/JRKYQCFH/FO9IT79JRKYQCFH.LARGE.jpg", "https://cdn.instructables.com/FRU/GVVJ/JRKYQCJF/FRUGVVJJRKYQCJF.LARGE.jpg", "https://cdn.instructables.com/F1V/NQ2P/JRKYQCNE/F1VNQ2PJRKYQCNE.LARGE.jpg", "https://cdn.instructables.com/FA6/TOO8/JRQOQB36/FA6TOO8JRQOQB36.LARGE.jpg"], "step_title": "Step 3: Making the Enclosure"}, {"step": 4, "steps_text": "I used the Arduino IDE for the programming of my Feather Huzzah. If you have not done it yet, download and install Arduio IDE.\nTo be able to use Blynk, I had to use the Blynk library for Arduino IDE. The Blynk library can be downloaded here. Follow these steps to install the library (quoted from the Blynk website):\nDownload the latest release .zip file.\nCopy all these libraries to your_sketchbook_folder of Arduino IDE. To find the location of your_sketchbook_folder, go to top menu in Arduino IDE: File -> Preferences (if you are using Mac OS - go to Arduino \u2192 Preferences)\nUnzip it. You will notice that archive contains several folders and several libraries.\nThe structure of your your_sketchbook_folder should now look like this, along with your other sketches (if you have them):\nyour_sketchbook_folder/libraries/Blynk\nyour_sketchbook_folder/libraries/BlynkESP8266_Lib\n...\nyour_sketchbook_folder/tools/BlynkUpdater\nyour_sketchbook_folder/tools/BlynkUsbScript\n...\nNote that libraries should go to libraries and tools to tools. If you don't have tools folder you can create it by yourself.\nThe code can be found in the following Github repository: https://github.com/vjuvet/Feather-Huzzah-wifi-remote\nIt should be fairly well documented, but don't hesitate to post a comment if you have any question.\nIn summary, this is how the code works:\nA timer runs the function checkInputs every 200 ms. This function checks if a button has been pressed or released.\ncheckInputs:\nIf the button is released, it does not do anything.\nIf the button is pressed, it toggles the state of the switch (switchState), and calls function sendState.\nsendState:\nIf one of the small buttons is pressed, function sendState will send the new state of the switch to the appropriate relays, through the built-in function bridge.virtualWrite.\nIf the bigger button is pressed, function sendState will send an \"off\" state to all relays through the built-in function bridge.virtualWrite.\nThe rest of the code is the setup, creating variables, connecting to a known wifi, etc...", "step_imgs": [], "step_title": "Step 4: Programming"}, {"step": 5, "steps_text": "Blynk is a great app, that does the link between your phone, your devices, and the Blynk server. They have a great community, lots of examples, and the app interface is user-friendly, while still customizable. The app is free, but it comes with a limited number of widget that you can add. If you add all the widget I have, you will probably need to buy 5$ of credit. But a lot of the widgets proposed are optional, and you could do this project for free, especially if you want to control less than 15 relays.\nIf you have never used Blynk before, follow these steps to set it up:\nInstall the Blynk app on your smartphone from the Google Play store or the App store.\nIn the Blynk app:\nLogin or create an account\nCreate a new project\nAdd a device for each remote and relay (select ESP8266, with wifi connectivity)\nBuild the dashboard as described below in this step\nConnect the feather Huzzah to your computer using a usb cable.\nMake sure that you downloaded and installed the Blynk library in the previous step.\nIn the program, enter the authentication token that you received by email from Blynk.\nIn the Tools -> Port, select the COM port your Arduino is connected to.\nI created 5 tabs on the dashboard:\nLights\nThe Lights tab is used to turn on/off individual lights (or anything that is connected the relays). I used the button widget, with a switch as target, V0 being the output between 0 and 1, in switch mode. I did that for every switch.\nGroups\nThe Groups tab is used to turn on/off groups of lights (or anything that is connected to the relays). I simply created tags for each room, and then repeated the same step as for the Lights tab, with one button widget for every group.\nTimers\nI added a couple timers, that can be used to turn the front porch lights on in the evening, or simulate a presence when you are on vacation, or turn your nightstand light on to wake you up, etc... I picked the following widgets:\nThe time input widget, in which I selected the relayI want to control, output V3, allowing Start/Stop input, and allowing timezone selection.\nA button widget, in which I selected the same relay, with output V4 between 0 and 1, in mode \"switch\". This is to tell the relay if it should follow the schedule or not.\nAnother button widget, in which I selected the same relay, with output V0 between 0 and 1, in mode \"switch\". This is to manually turn the relay on or off.\nMonitor\nThe Monitor tab contains a terminal widget. This is only used for debuging purposes. In \"source\", I select the device I want to debug. Input is V16. I also have a notification widget, to notify me when a hardware goes offline (optional), and a Real-time clock widget, for the devices to be able to now the current time (only necessary if you use timers).\nLEDs\nThe LEDs tab contains a bunch of LEDs that serve as feedback. This is optional too. I picked the LED widget, selected a relay, with input V1. I did that for each relay.", "step_imgs": ["https://cdn.instructables.com/FGQ/40MF/JRQOJ4OK/FGQ40MFJRQOJ4OK.LARGE.jpg", "https://cdn.instructables.com/F4M/TYJS/JRQOJ4P9/F4MTYJSJRQOJ4P9.LARGE.jpg", "https://cdn.instructables.com/F4X/O7H1/JRQOJ4PY/F4XO7H1JRQOJ4PY.LARGE.jpg", "https://cdn.instructables.com/FJ0/FZZD/JRQOJ4QN/FJ0FZZDJRQOJ4QN.LARGE.jpg", "https://cdn.instructables.com/F95/AB0A/JRQOJ4QQ/F95AB0AJRQOJ4QQ.LARGE.jpg", "https://cdn.instructables.com/FC4/0EEN/JRQOJ4OJ/FC40EENJRQOJ4OJ.LARGE.jpg"], "step_title": "Step 5: Setup the Blynk App"}, {"step": 6, "steps_text": "I have now installed 6 remotes in my house, and used them for several months. I believe that they work well, and I would not have much to improve. The \"turn off all lights\" feature is a great improvement. The appearance is quite simple and sober, which I like. Having small holes for the LEDs feedback don't produce too much light, so they don't disturb me at night, yet they are still visible, even in daylight. The response time is very fast.\nHere are a few things that could be improved:\nIf a relay is turned on / off with another device than its linked remote (for example with the app), the remote does not know that the relay state has changed, so it's not going to update its feedback light. Also, when I want to turn off a light with a remote, after I turned it on with my app, I will have to push the button twice: the first time, the remote is turning on the light, even though it's already on, and the second time it turns it off.\nIt's not a big deal, but I tried to implement this fix and could not find a Blynk function that periodically checks the state of other devices. Let me know in the comment if you have an idea how to do that.\nI chose the smallest possible enclosure that I found, but it's still quite thick. They could be much slimmer, but I did not find such a plastic enclosure.\nThis is my most complete and detailed instructable. If you liked it, please vote for me in the Epilog X contest! If you have suggestions, questions, or did this project, please let me know in the comments! I spent quite some time on these devices, and I'd love to see your take it.\nThanks for reading!", "step_imgs": ["https://cdn.instructables.com/FS5/R5GX/JRYURIWG/FS5R5GXJRYURIWG.LARGE.jpg", "https://cdn.instructables.com/FVQ/VXEI/JRYURIWK/FVQVXEIJRYURIWK.LARGE.jpg"], "step_title": "Step 6: Use and Potential Improvements"}], "channel": "Arduino"}, {"category": "Technology", "description": "This instructable will show you how you to build your own storytelling box. Feel free to choose your own adventure.\nThe so called \"GrimmsBox\" was a project by students from the Hochschule der Medien Stuttgart, Germany. We use a common receipt printer to print out the first part of a story. At the end of the part a decision needs to be made. Using buttons you can choose how the story shall go on. We use a Raspberry Pi to run the software.\nTwo of the Boxes will be in use very soon. The public library in Mannheim is organizing workshops with children. The children can create their own stories and they can experience their stories with the help of GrimmsBox. The main goal of such workshops is the promotion of reading and writing abilities.The storytelling boxes will also be taken to events so children from classes 3 to 6 will be introduced to an immersive reading experience.", "title": "GrimmsBox: Build Your Own Storytelling Device", "url": "https://www.instructables.com/id/GrimmsBox-Build-Your-Own-Storytelling-Device/", "steps": [{"step": 1, "steps_text": "Required materials:\n1x 6 mm plywood plate (1200x600x6mm)\n1x 4 mm plywood plate (1200x600x4mm)\nwood glue\nrequired devices: laser cutter, computer\nThe files used by GrimmsBox are available as free download. The files are svg and dxf files of the individual components of GrimmsBox. This is on the one hand the substructure where the Raspberry Pi finds its place, then the book with a bending hinge and a self-designed book stand.\nThe 6mm plywood plate is used for the substructure and the book stand. The book was cut out of 4mm plywood plate. The thicker plate would be too thick to make the book. The bending hinge only works with 3-4mm plywood panels. Otherwise, it would break.\nThe dxf files are the right choice for those who don't want to change anything anymore. These are ready to use on the laser cutter.\nBut for those who still want to give the box their own touch, can use SVG files in the box. These can be changed as desired. To do this, the file must be opened in a program (e. g. Inkscape). With these programs you can edit the individual components. If you have changed something (e. g. the size of the holes for the buttons or the pull-around) you have to save the SVG file as a dxf file.\nThe dxf file must be opened at the laser cutter. As soon as the file is displayed on the PC, it must be selected which lines are to be cut and which are to be engraved. The lettering on the side of the box was engraved on Grimm's box and the lettering on the book was weakly cut. Depending on what you like better, you can use one or the other. The outer lines must of course all be cut. However, the use of the laser cutter can depend on the model of the laser cutter and can be different.", "step_imgs": ["https://cdn.instructables.com/FVJ/MH0W/JRV8EBR0/FVJMH0WJRV8EBR0.LARGE.jpg"], "step_title": "Step 1: How to Make the Case for GrimmsBox"}, {"step": 2, "steps_text": "Required materials:\n6 normally open momentary push buttons, e.g. buttons for arcade gaming\n8 jumper wires with at least one female ending, ours were about 40 cm long\nsome braid\nheat-shrink tubing the box used for your project, in our case the laser-cutted top cover and the two side covers which include the extra buttons\nsolder and a soldering iron\nmulti-meter\nwire cutter\nwire stripper\nlighter or a hot air gun\nIn our code we used internal resistors, so we only need to do two things: first, connect a female jumper wire to each button which will lead to the respective GPIO pin and second, connect the buttons to each other, which will then be led to ground via another female jumper wire. We connected the shutdown button and the restart program button together and used one ground pin for them. The four buttons which will be used by the choose-your-own-adventure engine were also connected to each other and shared one ground pin.\nIf your buttons have more than two pins, use a multimeter to figure out which ones are suitable for connecting the GPIO pin and ground. With the sound function, you should only hear a sound if you touch two pins and the button is currently being pushed. You can do a continuity test, a guide how to do that is available at ifixit: https://www.ifixit.com/Guide/How+To+Use+A+Multime...\nTake one button and insert it into the box part. Take one of the jumper wires and cut of one end, which should leave you with a jumper wire with one female ending. Use the wire stripper to cut of about 5 millimeters of the isolation. Twist the loose wires for a bit so no single wire sticks out. Use a little tin to make a nice coating for the wires. If you are new to soldering, there is a great, short comic book teaching you how to solder. It\u2019s called Soldering is easy and the PDF is available in multiple languages at https://mightyohm.com/blog/2011/04/soldering-is-e... Measure and cut the heat-shrink tubing, which you will use to isolate the part where the button and the jumper wire will be soldered together. Pull the heat-shrink tubing over the jumper wire. Solder the jumper wire to one of the pins on the button.\nRepeat the last step for all buttons. Always be sure to pull the heat-shrink tubing over the jumper wire before soldering, as it might not fit over the connector.\nNow you will connect the shutdown button and the restart button. We used enamelled copper wire, but as it proved a bit fiddly, I would suggest using normal braid. Cut of some centimeters of braid. As before, dismantle it using the wire stripper, but this time on both ends. Then, solder one end to the pin of either the shutdown or the restart button. Again, cut of a bit of the heat-shrink tubing and pull it over the braid.\nNext, you will connect the braid to the free pin of the other button. But you will also connect another jumper wire here, which will lead to ground. Prepare the jumper wire as you did with the others, including the heat-shrink tubing. Now bend the braid so you can solder it to the free pin coming from the button facing towards the free end. Then solder the jumper wire to the pin as well. Soldering the braid coming from one side and the jumper wire from the other side ensures you can pull the heat-shrink tubing over the soldered part.\nConnect the four buttons used for the game engine by building little bridges. Always be sure to pull the heat-shrink tubing over the braid before soldering. (And also be sure that your buttons are in the correct position before connecting them to each other). When connecting the last button you should again, as with the other two buttons, connect the braid from below and connect a jumper wire as well.\nUsing the multimeter\u2019s sound function you can check if everything is connected well. Finally you should check if all heat-shrink tubing is in the right spot. Then you can use a lighter or a hot air gun to actually shrink it. Now you\u2019re finished with assembling the buttons!", "step_imgs": ["https://cdn.instructables.com/F8I/JZ9J/JRV8EE1R/F8IJZ9JJRV8EE1R.LARGE.jpg", "https://cdn.instructables.com/FIE/XPHF/JRV8EE1O/FIEXPHFJRV8EE1O.LARGE.jpg", "https://cdn.instructables.com/FHS/3YXO/JRV8EE1P/FHS3YXOJRV8EE1P.LARGE.jpg", "https://cdn.instructables.com/FHY/DNV4/JRV8EE1U/FHYDNV4JRV8EE1U.LARGE.jpg"], "step_title": "Step 2: How to Assemble the Buttons for GrimmsBox"}, {"step": 3, "steps_text": "You will need:\na Raspberry Pi with Raspbian installed (you should be able to use other distributions as well, but need to adjust some commands) \u2013 we used a package consisting of a Raspberry Pi 3 Model B+ with a pre-installed SD card, a power supply and a case, other models should work as well\na receipt printer \u2013 bear in mind that you need to connect the printer to the Raspberry Pi, so connecting via USB might be easiest\nyour buttons\nConnect your Raspberry Pi to a screen, mouse and keyboard. You will also need to connect it to the printer and the buttons eventually. The buttons need to be connected to specific GPIO pins. If you want to use different pins than we did, you can change that in the code. For now, this list will tell you which button needs to be connected to which pin. I\u2019ll use BCM numbering which is also used in the code. There\u2019s a chart at https://www.raspberrypi.org/documentation/usage/g... showing you which pin has which number.\n\u2022 shutdown button \u2013 17\n\u2022 restart button \u2013 27\n\u2022 first button used for options in the story/adventure \u2013 5\n\u2022 second button \u2013 6\n\u2022 third button \u2013 13\n\u2022 fourth button \u2013 19\n\u2022 the two jumper wires connected to the pins which join all the buttons need to go to ground \u2013 in the chart marked by black dots\nStart the Raspberry Pi by plugging in the power supply. Connect the Raspberry Pi to the internet using a LAN cable or wireless network.\nFirst thing to do when installing the necessary software on the raspberry pi is to update the software that is already installed. We will do this using the terminal. If this is your first time using a terminal, the Raspberry Pi documentation (https://www.raspberrypi.org/documentation/usage/terminal/) helps you move around and get to know the environment. Open a terminal and type in sudo apt update and hit enter. This will update the list of available packages and versions. After that, type in sudo apt upgrade. This will actually install newer versions of the packages already installed.\nInstalling the printer driver is the next step. Printer management in Linux can be done using CUPS. You might need to install it on your Raspberry Pi first. In a terminal, type in sudo apt install cups. The next step is to get the printer drivers. Maybe you get lucky and it is included in the official repositories. In a terminal, use apt search [printer name or manufacturer name] to look for it. Most printers will probably not be included in the repositories, so you need to get it from elsewhere. There might be a CD enclosed to the printer. On the website of the manufacturer, the most recent drivers should be available for download. Some manufacturers have different websites for different regions of the world and sadly, not all of them include the same information. If you have a Star printer, starasia.com seems to be the website with the newest downloadable drivers. Please check that you download printers for Linux. We used the CUPS drivers, not the JavaPOS drivers.\nNext, you need to install the drivers. Please follow the instructions of the manufacturer. There might be a software manual for Linux available, which can come in handy. Please follow the instructions for Debian or Ubuntu - there are many different Linux distributions and not all of them are the same, so check first, if you have the right instructions on hand. In our manual the instructions started without stating that they are for Red Hat based systems and only on the next page we learned, that the instructions for Debian-based systems are different. The software manual should also state which packages need to be installed, for example we had to install \u201clibcups2-dev\u201d. You will probably need to sudo some commands. To save you from repeating our mistake: if you need to compile the drivers from the source code using make - make install needs to be sudoed. Just from the error message we couldn\u2019t figure out what went wrong.\nIf not included in your installation manual you need to set up the printer in CUPS. To do that, navigate to localhost:631 in a browser. Click on \u201cAdministration\u201d and then \u201cAdd printer\u201d to setup the printer. There is also a help section. You need to authenticate as a user, see https://help.ubuntu.com/lts/serverguide/cups.html... (section \u201cWeb Interface\u201d) for details. Choose the suitable ppd and paper size. You should also make it the default printer, as the software will print to the default printer. To do that, navigate to the page of the printer and from the \u201cAdministration\u201d menu select \u201cSet As Server Default\u201d. From the \u201cMaintenance\u201d menu you can select \u201cPrint Test Page\u201d for a first check if everything is set up correctly.\nAnother package you will need is python3-yaml, as the stories are saved in yaml files and the package is needed so the python code can interpret them. Use sudo apt install python3-yaml to install it.\nNow we will finally start with the installation of the software that actually prints the stories and listens for input on the GPIO pins connected to the buttons. Open a terminal and navigate to the home directory if you are not already in it (this can be accomplished by typing in cd (for change directory)). As our code is on GitHub, you can copy it to your Raspberry Pi by using git clone https://github.com/fio-na/GrimmsKiste-1.git This will create a local repository on your Raspberry Pi of our code. If you get an error message because git is not installed, you can install it by typing in sudo apt install git.\nThe code contains some elements you may need to alter. First of all, the stories are saved in yaml files which are also in the git repository. If the path to your folder is not \u201c/home/pi/GrimmsKiste-1\u201d, you will need to change these paths in order to use the stories. Second, we print using subprocess and hand over terminal commands. This includes some options used by our printer driver which lets us determine whether the paper shall be cut after printing or not. These will probably not work for you (unless you also use a Star TSP printer). You will also notice that a number of lines only including one dot will be printed. We needed this, because otherwise parts of the story were not readable because the paper still stuck in the printer. And finally in the function format_text we use textwrap to get chunks of text no longer than 28 characters, because that\u2019s how many fit into one line on our 80 mm paper. Please adjust these things to fit your setup.\nSome files need to be made executable. To do this, navigate into the folder with the code you just downloaded. This should be cd ~/GrimmsKiste-1 if you followed along. In Linux file permissions are handled by chmod. chmod a+x Engin.py and chmod a+x shutdown-pi-and-restart-program.py makes those two files executable for all users.\nNow we can test if the engine can run and functions properly and if the printer and buttons are set up correctly. Type in ./Engin.py to do that.\nIf everything is working well, the next step is to set up two systemd services. For more information, the archlinux wiki page (https://wiki.archlinux.org/index.php/Systemd) might help or the man page of systemd.service (https://www.freedesktop.org/software/systemd/man/systemd.service.html). The first systemd service will check every two seconds, if Engin.py is currently running, and if it isn\u2019t it will start it. Therefore it also starts the program when the Raspberry Pi boots. Open a file in the systemd folder: sudo nano /etc/systemd/system/grimmskiste-restart.service Type in the following:\n[Unit]\nDescription=restarts Grimms Kiste every two seconds if it fails\n\n[Service]\nExecStart=/home/pi/GrimmsKiste-1/Engin.py\nRestart=always\nRestartSec=2\n\n[Install]\nWantedBy=multi-user.target\nYou need to edit the path at ExecStart, if your Engin.py is located elsewhere, e.g. if your username is different. To save a file in nano, you need to push ctrl + x, then type in y (for yes) and hit enter.\nThe other service will start the shutdown-pi-and-restart-program.py script, which listens on the shutdown and restart button. The restart button reads the process ID of Engin.py from a file and kills it, and because of the other systemd service Engin.py restarts after two seconds. The shutdown button simply sends a command to the Raspberry Pi that is shall shutdown now. Open another file using sudo nano /etc/systemd/system/grimmskiste.service and type in the following:\n[Unit]\nDescription=Controls two hardware buttons to shut down the raspberry pi or to kill the running program Grimms Kiste\n\n[Service]\nExecStart=/home/pi/GrimmsKiste-1/shutdown-pi-and-restart-program.py\n\n[Install]\nWantedBy=multi-user.target\nAgain, you will need to edit the path at ExecStart, if it is different on your Pi. And again, you can save the file in nano using ctrl + x, then typing y and hitting enter.\nNow you have the unit files for the systemd services, but they are not in use yet. Whenever you change unit files, type in sudo systemctl daemon-reload, so do that now. Then start both services using sudo systemctl start grimmskiste.service and sudo systemctl start grimmskiste-restart.service This will start the services for now. Use sudo systemctl status grimmskiste.service and sudo systemctl status grimmskiste-restart.service to check if they are up and running. In the output, there should be a line which includes \u201cactive (running)\u201d, probably in the third line - if it isn\u2019t, something went wrong. Journalctl might be able to help with more debugging information.\nUsing systemctl start only starts the services for now, but if you want them to start every time the Raspberry Pi boots, you need to enable them. This is done by sudo systemctl enable grimmskiste.service and sudo systemctl enable grimmskiste-restart.service.\nNow you should test all buttons if everything is running correctly. Test the shutdown button as well and check if everything is still running properly after the reboot. If so, you don\u2019t need the screen, keyboard etc. and your program should run every time you plug the Raspberry Pi into the socket.", "step_imgs": ["https://cdn.instructables.com/FR4/UUAH/JRV8EF3O/FR4UUAHJRV8EF3O.LARGE.jpg"], "step_title": "Step 3: Setting Up the Software"}, {"step": 4, "steps_text": "Important: The fields in purple must not be renamed. The names of the individual lists are an exception. Each story gets its own YAML file with all choices. The structure is the same as for the file start.yaml\nColon: If you want to use colons in the text you have to make a > after message. The text is then lowered one line and indented with two blank lines.\nTabs: Don\u2019t use tabs and please make sure there are no tabs at the end of a message, this will result in the parser not being able to read the file.\n_default_question: The question entered here is taken if no field with \u201equestion\" has been entered in the history.\n_prompt: This field is printed out when the reader has to make an entry.\nBoth fields may only exist once in the start.yaml file and may not be used in other files.\nstart: start is the name of the first list of the start page. The names must not be duplicated in all other lists. In the template, this field is called the \u201eName of the story\" and must be changed for each story.\nMessage: This field contains the story and must stand in one line. question: Used when a question other than the _default_question is to be used. If the field is not used, it must be deleted. (optional)\nActions: The \u201eactions\u201c list contains the selection options. A maximum of 4 options can be entered here.\nLabel: The label is printed as a selection option.\nNext: This is the name of the next selection option to be called.\nend: A list with only a message marks the end of a story.The fields actions, label and next have to be deleted\nAdd more stories:\nAs explained above, each new story gets its own .yaml file. To do this, open the folder \u201cGrimms Box\" and copy the file template.yaml. You can also find it in our GitHub repo (https://github.com/fio-na/GrimmsKiste-1). Rename the file to the title of the story and open it.\nIn the new file you, add the manufacturer and the date and change the field \u201cThe name of the story\" to the title (see fig. 4: The name of the story here is HP1). Then fill in message, question, label and next. Once you have done this, copy the data structure (as shown in Fig. 4) and paste it below the last next. The title will now be changed to one key used in \u201cnext\u201d in the first part (as shown in fig. 4 HP1 would then be HP2 or gang2, depending on which option is edited first). Then message, question, label and next are filled in again. Do this for all the choices/actions until the whole story is in the file. At all ends the last list has to contain only a message. All others fields in the final list have to be deleted. After that the file must be saved.\nProcedure in short:\nOpen the Grimms Box folder\nCopy the Vorlage.yaml and rename it to the title of the story.\nOpen this new file.\nCopy data structure (fig. 4)\nChange the name from History to Selection name\nEnter the text of the story in the message field,\nInsert suitable label.\nEnter the name of the next selection option in next.\nRepeat steps 4 through 9 until the story is finished.\nAt all ends: The last list contains only a message.\nSave the file.\nAdd your new story to the start page:\n\nstart.yaml is the start page for Grimm's box. However, this file must first be able to access the new stories. Therefore, the new stories must be added to this file first.\nPer actions you can only create 4 labels, next, because Grimm's box has only 4 buttons to choose from. Therefore, if, as in the example start.yaml file, 4 labels and next fields are already assigned, the 4th label must be named \u201cMore stories\" or \u201cMore\" and a second data structure (here:S2; with message, question, actions, label, next) must be appended and renamed. Then you add the new story with label and next and name it appropriately. Finally, it must be saved.\nProcedure in short:\nIn start.yaml:\nOpen start.yaml\nFill in fields appropriately.\nThe fields actions, label and next must be copied and pasted.\nSave.\nMaintain the main file \u201cEngin.py\u201d:\nFinally, the story has to be added to the main file \u201cEngin.py\". For this only the file path of the new YAML file must be entered into the file list. The path is enclosed in quotation marks and separated from the others by a comma.\nProcedure in short:\nOpen Engine.py.\nCopy the file path of the YAML file\nCopy path to filelist\nSeparate the paths by commas.", "step_imgs": ["https://cdn.instructables.com/F9O/OOE7/JRV8EGSC/F9OOOE7JRV8EGSC.LARGE.jpg", "https://cdn.instructables.com/FXV/SZG7/JRV8EGSX/FXVSZG7JRV8EGSX.LARGE.jpg", "https://cdn.instructables.com/FGR/Z2T6/JRV8EGSY/FGRZ2T6JRV8EGSY.LARGE.jpg", "https://cdn.instructables.com/FBO/EFWK/JRV8EH1M/FBOEFWKJRV8EH1M.LARGE.jpg"], "step_title": "Step 4: Introduction to YAML:"}, {"step": 5, "steps_text": "To start Grimm\u2019s Box, connect the printer to the Raspberry Pi (there\u2019s a little hole for the cables), plug the printer and the Raspberry Pi into the socket and turn the printer on. The Raspberry Pi starts on its own when plugged in. Wait for it to boot. The software is supposed to start on its own.\nThere is a button to shutdown the Raspberry Pi and a button to restart the story software, in case someone just leaves without finishing the story. Both need to be pushed at least 3 seconds. This is to ensure that they aren\u2019t pushed accidentally but you can change the timing in the shutdown-pi-and-restart-program.py file. Please use the shutdown button, just unplugging isn\u2019t good for the Raspberry Pi. With the current setup you can\u2019t see whether the Raspberry Pi is on or off so you need to check if it still reacts to other buttons if you want to be sure.\nRestarting the program takes some time, as you need to push the button at least 3 seconds and the process in the background only checks every 2 seconds if the program is running, so the whole process until it prints again can take 6 seconds. Just give it a little time. The restart button can also be used, if any problem occurs. Maybe a restart might fix it. If it doesn\u2019t, connecting the Raspberry Pi to a screen etc. and running the program from the terminal might produce error messages you can look up on the internet. The buttons used for the stories need to be pushed at least 0.1 seconds, but it is very rare that someone pushes them less than that.\nIf the story is finished, the paper is cut and the program starts again automatically. But to give the reader some time to read the end it waits for 3.5 seconds plus the 2 seconds needed to notice the program is not running and restarting. The 3.5 seconds can be edited in the Engin.py file.\nButtons pushed less than 1.7 seconds after the last push will not be accepted. We implemented this because the Raspberry Pi is a lot faster than the printer and pushing two buttons would result in an action being chosen before the reader could see the options.", "step_imgs": ["https://cdn.instructables.com/F28/WKKO/JRYUQXTB/F28WKKOJRYUQXTB.LARGE.jpg"], "step_title": "Step 5: Instructions for Use"}], "channel": "Raspberry Pi"}, {"category": "Technology", "description": "Digi-Comp II is a mechanical computer invented by John Thomas Godfrey and manufactured by Education Science Research (E.S.R., Inc.) in the late 60's. As can be seen in the pictures above, the device consists of a frame (about 14 by 28 inches) propped up at an angle. Computations are performed by balls rolling down channels on the top of and inside the platform through gates. Some gates are fixed switches that merely redirect the ball down a particular channel while others are flip-flops that both redirect the ball and change the state of the flip-flop in the process.\nIntended as an aid for teaching computer concepts, the Digi-Comp II can count, perform basic arithmetic, and obtain either the \"1's\" or '2's\" complement of a number. The device can be run in auto mode where the balls are released automatically after each step of an operation until the operation is complete, or in manual mode where the user initiates each step.\nThere are many very good online references for the Digi-Comp II. Here are a few to get you started:\nWikipedia\nOld Computer Museum\nOriginal Digi-Comp II in Action\nWhile the Digi-Comp II is not fully programmable, an earlier offering by E.S.R., the Digi-Comp I, used an assortment of plastic slides, tubes, and bent metal wires to solve simple logic problems. An excellent reproduction of this device was created by Mark Ziemer. In addition Mark has created a very cool virtual Digi-Comp II application. Check them out:\nDigi-Comp I Replica\nVirtual Digi-Comp II\nAlong with the STL files and instructions for this project, you will find a PDF of the manual that came with the original Digi-Comp II. I brought this file to a local copy center and had them print me the spiral bound booklet you can see above and I'm really happy with the results. Also there is a PDF of the parts and assembly instructions that you will need to complete this Instructable.\nThis offering is a full size working replica of that Digi-Comp II from 5 decades ago. I have tried to make it as authentic as possible based on the images and technologies that I have available to me. The original top and inside decks for instance were vacuformed plastic attached to pieces of masonite board, and the flip-flops and switches were injection molded. In my replica the decks and pieces are all 3D printed. Also I do not have an original Digi-Comp II to work from. I am indebted again to Jaap Scherphuis (he did the original video you can link to above) for his invaluable assistance in providing me with good quality images. Finally I did modify the design of some of the flip-flops (that are not visible when operating the device) to improve their reliability.\nI have created a few videos of my Digi-Comp II Replica in action:\nTwo's Compliment of the Number Seven\nCounting to Six\nAdding Seven Plus Three\nIf you are not interested in making a Digi-Comp II from scratch, Evil Mad Scientists sells a beautiful kit version made from plywood. Check it out at Digi-Comp II: First Edition.\nI have not seen an original Digi-Comp II available in any of the \"vintage\" markets for quite a long time, and when they do appear they sell for many hundreds of dollars. As with my other projects Think-a-Dot and The Amazing Dr. Nim my goal in creating this replica is to help raise awareness for this great device and honor the creativity of it's inventor John Thomas Godfrey.\nDesign Notes\nI did not design the Digi-Comp II, I just did the modelling. The real design work happened back in the 60's. Everything I did was modeled using Fusion 360.", "title": "Digi-Comp II Replica", "url": "https://www.instructables.com/id/Digi-Comp-II-Replica/", "steps": [{"step": 1, "steps_text": "There are a fair number of them.\nPrint Resolution: .2 mm\nInfill: 20% for the top and bottom \"decks\" and 100% for pretty much everything else.\nFilament: AMZ3D PLA in Red, White, and Black\nNotes: All parts were printed with PLA at .2 mm with no supports unless specified otherwise below. Use the pictures above to determine the colors or choose your own. To create a Digi-Comp II you will need to print the following parts:\n33 Bearing\n1 Bottom Deck - There is an STL with the whole Bottom Deck if your print bed is large enough. I have also provided two addition files where the Bottom Deck has been split into two pieces.\n1 Bottom Deck Support (optional) - If you do print the deck in two pieces you will need to print a Bottom Deck Support to join them back together. Note: It was reported that there were issues slicing this file on Simplify3D so a repaired version was uploaded.\n14 Individual Display Panels. You can print these all at once if you want. I paused the print at the 2.2 mm mark to switch colors from white to black to highlight the numbers.\n1 Display 01 Memory 1\n1 Display 01 Memory 2\n1 Display 01 Memory 4\n1 Display 01 Memory 8\n1 Display 0101 MQ 1\n1 Display 0101 MQ 2\n1 Display 0101 MQ 4\n1 Display 10 Accumulator 1\n1 Display 10 Accumulator 2\n1 Display 10 Accumulator 4\n1 Display 10 Accumulator 8\n1 Display 10 Accumulator 16\n1 Display 10 Accumulator 32\n1 Display 10 Accumulator 64\n6 Flip Flop No Display Bottom - These are attached to the bottoms of the Accumulator Mode switches T-1 to T-6. Note: It was reported that there were issues slicing this file on Simplify3D so a repaired version was uploaded.\n5 Flip Flop No Display Top - These are used for D-1, D-2, D-3, CF-1 and CF-2.\n7 Flip Flop With Display Accumulator Register - Used for A-1 to A-7.\n7 Flip Flop With Display Accumulator Register No Ball (optional) - Use in place of the above for A-1 to A-7. I find it to be a little bit more reliable. Your mileage may vary.\n3 Flip Flop With Display MQ Register - Used for Q-1, Q-2, and Q-3.\n2 Foot Ball\n2 Foot Socket\n7 Half Flip Flop - These are attached to the bottoms of the Accumulator flip-flops A-1 to A-7.\n1 Labels (optional) This is a \"sheet\" with all the top deck labels if you are going for that authentic look. I printed them at .05 mm and paused the print at the .25 mm mark to switch colors from white to black to highlight the text.\n1 Leg Holder - This file has both a right and left leg holder bracket.\n1 Marble Cup\n1 Release Balance Holder\n1 Release Balance - This part requires supports.\n1 Release Lever Joiner\n1 Release Wheel Lever\n1 Release Wheel\n1 Return Guide - This file also has a return guide holder and return guide holder tab.\n4 Spacer\n1 Spring Template\n1 Start Switch Pieces\n1 Start Switch - This part requires supports.\n4 Switch With Display - These are the Memory switches M-1, M-2, M-3, and M-4.\n12 Switch - These are for Multiply, Clear, Count, Overflow, A-M, Complement, and T-1 to T-6.\n1 Top Deck - There is an STL with the whole Top Deck if your print bed is large enough (and if it is boy am I jealous ;-). I have also provided eight addition files where the Top Deck has been split into eight pieces. Note that in splitting the Top Deck I chose to create eight equal size pieces for simplicity sake. In some cases this choice was not optimal. Feel free to split the file however you choose for your printer.", "step_imgs": [], "step_title": "Step 1: Print the Parts"}, {"step": 2, "steps_text": "In addition to the printed parts you will need the following:\n1 - 2 ft by 4 ft sheet of 1/4 inch plywood.\n1 - 8 ft length of 1 inch x 2 inch lumber (3/4 by 1 1/2 inch actual).\n13 - 7.25 mm steel balls (7 mm or 9/32 inch will do). These are not required but I have found that when used they improve the reliability of the machine. I got these by mistake when I ordered 6 mm balls so I don't know how hard they are to source. If anyone ends up getting a size between say 6 mm and 7.25 mm let me know and I will post additional versions of the STL files for the parts that use them.\n1 - 3 ft length of 3/8 inch wood dowel.\nAbout 12 ft of 1.2 mm (3/64 inch) piano (music) wire.\n4 - 1/8 inch by 1 1/4 inch bolts with 8 nuts.\n4 - Number 6 by 3/4 inch wood screws.\nSome 1 inch finishing nails or brads.\nA dozen or so 1/2 inch steel balls. This version of Digi-Comp II has been optimized to work with 1/2 inch steel balls,", "step_imgs": [], "step_title": "Step 2: Get the Additional Materials You Will Need"}, {"step": 3, "steps_text": "Digi-Comp II is constructed on and in a wooden box or base approximately 14 by 28 inches in size. Start by cutting the 2 foot by 4 foot piece of 1/4 inch plywood as follows\n2 - 2 inch by 48 inch strips from the long side of the board. These will be used to create a nice edge for the base.\n1 - 13.85 inch by 28 inch piece from the rest of the plywood. This supports the main \"decks\" of the device.\nUse the 1 1/2 by 3/4 inch lumber to create a 13.85 by 28 inch \"frame\" for the board you just cut. When done this frame should be 13.85 by 28 inches by 1 1/2 inches tall. Attach the plywood piece to the frame.\nAssemble the Top Deck pieces on top of the base that you just built but don't glue them down just yet. I used masking tape to hold them together and to the base. Be sure that you get the pieces in the right spots. You can use the last picture above as a reference. When the pieces are secure, use a pencil to outline all of the openings from the Top Deck onto the plywood. Don't forget the four small holes that will be used to attach the lower deck.\nRemove the Top Deck pieces. It's now time to cut out the areas that were just marked. I used a 5/8 inch bit to drill out all of the half circle and full circle parts plus the ends of the ball return slot. It's OK if the holes are a little bigger than the marked areas. The four small holes were drilled with a 1/8 inch bit. Finally a jig saw was used to clear out the rest of the ball return area. Lay the Top Deck pieces back on and make sure that the holes you just made line up with the openings in the deck. Use a file to remove any wood that sticks into the deck opening spaces.\nWhen I was finished I gave the top a light sanding and painted it white. This was not strictly necessary but I noticed that the wood grain showed through the Top Deck pieces a bit since the bottom layer is so thin. You can see the finished basic base box in the first picture above.\nNext I painted the 2 inch plywood strips that were cut above in a dark blue. Both sides and the top edge of the strips were given a couple of coats of paint. When dry I used these to frame the box. These should end up sticking about 1/4 inch above the top of the box forming a nice lip all around as in the third picture above. The second picture above shows a corner from the back of the base with the top and frame attached.\nFinally the Top Deck pieces are glued onto the finished base. Before gluing them down be sure that all the holes align perfectly. When you are done, the base should look something like the last picture above. Note that in this picture I have already added some of the pieces and the feet to the base, but you hopefully get the idea.", "step_imgs": ["https://cdn.instructables.com/F9P/W4UZ/JRV8EEFD/F9PW4UZJRV8EEFD.LARGE.jpg", "https://cdn.instructables.com/FDM/P51X/JRV8EE4Y/FDMP51XJRV8EE4Y.LARGE.jpg", "https://cdn.instructables.com/FO1/Y6UU/JRV8EF3Z/FO1Y6UUJRV8EF3Z.LARGE.jpg", "https://cdn.instructables.com/F64/8TVS/JRV8EFDT/F648TVSJRV8EFDT.LARGE.jpg"], "step_title": "Step 3: Build the Base"}, {"step": 4, "steps_text": "This might be the hardest part of the build. The various pivoting pieces on a Digi-Comp II are attached to the Top Deck with small springs. You can see an example of one above along with the Spring Template that you will find among the STL files. In all you need 33 of these! The template is based on the original Digi-Comp II spring. You will notice that I did a square top rather than rounded, which was much easier to do and does not make any difference in the operation of the device.\nUse the 1.2 mm piano wire for these. What greatly helped me was being able to use a wire bending jig that I put together when I built Mark Ziemer's Digi-Comp I replica (see the second photo above). It was based on the one shown in this video: DIY 3D Printed Steel Wire Bender Tool. The STL files for the jig and base are included below.\nIn addition you will need to bend an Actuator Wire. This is used to connect the Start Switch to the Release Balance. The dimensions are shown above in the last picture (which is obviously not to scale). My suggestion would be to do all the bends except the last 50 mm one and leave a little extra wire in the process. When you get to the point of connecting the Actuator Wire, attach the wire to the Release Balance then measure the precise distance to your Start Switch.", "step_imgs": ["https://cdn.instructables.com/FOK/GI43/JRV8EH98/FOKGI43JRV8EH98.LARGE.jpg", "https://cdn.instructables.com/F8U/E9NM/JRV8EJ3X/F8UE9NMJRV8EJ3X.LARGE.jpg", "https://cdn.instructables.com/FE4/BNS8/JRV8EKVF/FE4BNS8JRV8EKVF.LARGE.jpg"], "step_title": "Step 4: Bend Some Wire"}, {"step": 5, "steps_text": "If you printed the Bottom Deck in two parts, then you have to use the Bottom Deck Support to join them back together as in the first picture above of the bottom. I used some ultra gel super glue which worked well. When joined the top of the Bottom Deck should look like the second picture.\nWhen you print the Return Guide you will also print a return guide holder and a return guide holder tab. Push the end of the return guide holder through the slot in the Bottom Deck from the top and secure it with the return guide holder tab as shown on the bottom. See the last two images above.", "step_imgs": ["https://cdn.instructables.com/F7O/08H1/JRV8EW8K/F7O08H1JRV8EW8K.LARGE.jpg", "https://cdn.instructables.com/F5A/6PNP/JRV8EW8L/F5A6PNPJRV8EW8L.LARGE.jpg", "https://cdn.instructables.com/FU5/C69D/JRV8EWHA/FU5C69DJRV8EWHA.LARGE.jpg", "https://cdn.instructables.com/FZQ/CAS0/JRV8EWHG/FZQCAS0JRV8EWHG.LARGE.jpg"], "step_title": "Step 5: Prepare the Bottom Deck"}, {"step": 6, "steps_text": "A few final preparations:\nPress a 7.25 mm steel ball into each of the Flip Flop With Display Accumulator Register pieces.\nPress a 7.25 mm steel ball into each of the Flip Flop No Display Bottom pieces.\nAdd the Start Switch Pieces to the Start Switch as in picture two above.\nYou should now have everything in place to assemble your Digi-Comp II. You can mostly just follow the Parts List and Assembly Instructions from the original unit which you will find above. Any differences from these steps will be listed below.\nStep 4 Changes\nParagraph 4: The way that I built the frame does not allow the Release Balance to be installed directly onto the Release Wheel shaft as per the original instructions. Instead I have designed a Release Wheel Lever that attaches to the Release Wheel's shaft. A slightly redesigned Release Balance is attached to another new part, the Release Balance Holder, which is glued to the underside of the Top Deck (with center about 59 mm from the inside right edge of the frame and 74 mm from the inside top edge of the frame.). The Release Balance is held in place with a piece of wire or pin pushed through a hole in the Release Balance Holder shaft. The Release Wheel Lever is then connected to the Release Balance with a Release Lever Joiner part. The Actuator Wire is connected to the Release Balance in the same way as the instructions state. It sounds complicated but is actually pretty straight forward and works pretty well. See the first picture above.\nStep 5 Changes\nSkip this section. The Return Guide will be installed when the Bottom Deck has been attached.\nStep 6 Changes\nSkip this section. It's for an older version of Digi-Comp II.\nStep 7 Changes\nI used an extra nut (not too tight) to loosely hold the Spacers onto the Top Deck. This makes it much easier to slip on the Bottom Deck. So to be clear Spacer, nut, Lower Deck and then another nut. Skip the last part about the Return Guide for now.\nStep 8 Changes\nRather than make a hook for the Start Switch side of the Actuator Wire, I just pushed the straight wire up through the small hole in the Start Switch. Then I put a small bend in the wire to keep it in place. See the third picture above.\nStep 9 Changes\nIgnore this section. Instead install the two Leg Holders onto the inside of the frame with wood screws. The distance between the top edge of the holder and the inside top edge of the frame should be about 40 mm. Be sure that hole in the holder slopes down towards the bottom of the base. See picture four above.\nStep 10 Changes\nCut two 330 mm lengths from the 3/8 inch dowel for legs. Connect the two Foot Balls to the Foot Sockets the attach them to the dowel pieces you just cut. Attach the legs to the Leg Holders that you screwed to the frame as in image five.\nStep 11 Changes\nBefore you start this section you should now be able to slide the Return Guide through the return slot on the Top Deck down and under the flap of the return guide holder attached to the Bottom deck. The front edge of the Return Guide should sit on the bottom edge of the return slot. See picture six. You can use a little two sided tape to secure the Return Guide to the front edge if you want.", "step_imgs": ["https://cdn.instructables.com/FUL/UWL7/JRV8EY2E/FULUWL7JRV8EY2E.LARGE.jpg", "https://cdn.instructables.com/F4A/C8U0/JRV8FIN2/F4AC8U0JRV8FIN2.LARGE.jpg", "https://cdn.instructables.com/F0U/SOX9/JRV8FABF/F0USOX9JRV8FABF.LARGE.jpg", "https://cdn.instructables.com/FUC/1H2K/JRV8FA3F/FUC1H2KJRV8FA3F.LARGE.jpg", "https://cdn.instructables.com/F44/2T3X/JRV8FFLC/F442T3XJRV8FFLC.LARGE.jpg", "https://cdn.instructables.com/F8J/GU3V/JRV8FH6K/F8JGU3VJRV8FH6K.LARGE.jpg"], "step_title": "Step 6: Assemble Your Digi-Comp II"}, {"step": 7, "steps_text": "If you are going for the \"authentic\" look you can add the Top Deck labels. Use the pictures above for guidance and carefully cut the labels out of the printed Labels \"sheet\" and glue them to the appropriate spots on the deck. You can also add the New Operations Check List and command summary. I printed the attached Word document on a transparency sheet, cut it out, and glued it to the deck.\nI used some blue enamel model paint to highlight the Digi-Comp II label on the Top Deck. I think it looks great.", "step_imgs": ["https://cdn.instructables.com/FZM/FVOR/JRV8G3RM/FZMFVORJRV8G3RM.LARGE.jpg", "https://cdn.instructables.com/FZ4/OTT4/JRV8G3RG/FZ4OTT4JRV8G3RG.LARGE.jpg", "https://cdn.instructables.com/FYN/JRCN/JRV8G3RE/FYNJRCNJRV8G3RE.LARGE.jpg"], "step_title": "Step 7: Finishing Touches"}, {"step": 8, "steps_text": "Probably because my home made springs are not as uniform as the ones that came with the original Digi-Comp II I found that I had to tweak them a bit to get things to work properly. Let's call the side of the spring that goes through the hole in the pieces and holds them in place the \"pivot\", and the other side the \"stopper\". If the stopper is too close to the pivot, the piece will not be able to twist to the left or right as far as it needs in order to operate properly. On the other hand if they are too far apart the stopper will rub against the front flat part of the bearing hole preventing free and easy movement of the part. (As an aside this is actually a desirable characteristic for all of the switches except the T-1 to T-6 Accumulator Mode switches so I have them \"tuned\" this way accordingly.) With a little practice though you will be able to adjust the springs to the proper \"Goldilocks Zone\" .\nAnother tip, you should also make sure that Digi-Comp II is placed on a level surface. It's quite susceptible to uneven surfaces.", "step_imgs": [], "step_title": "Step 8: Fine Tuning"}, {"step": 9, "steps_text": "When I was a kid I got a Digi-Comp I for Christmas. Now I'm not saying that it was the only reason I went into computer programming as a career but it was certainly one of them. That original device was lost to the ravages of time, but thanks to Mark Ziemer I now have an almost perfect replica. I have wanted to own a Digi-Comp II for some time now. Mark inspired me to take matters into my own hands and I have to tell you that building my own Digi-Comp II was very very satisfying.", "step_imgs": [], "step_title": "Step 9: Final Thoughts"}, {"step": 10, "steps_text": "March 2, 2019\nUploaded a replacement for the accumulator flip flop that does not require a steel ball:\nDCII Flip Flop With Display Accumulator Register No Ball.stl", "step_imgs": [], "step_title": "Step 10: Updates"}], "channel": "Computers"}, {"category": "Technology", "description": "Hi everyone!\nWith Valentines Day approaching I thought it would be nice to make a project for the people who are special in my life; I thought the people of instructables would probably like it too! I've designed a ~100mm x 100mm or ~4in x 4in PCB heart. It uses the Attiny85 SMD microprocessor as the brain. The LEDs are SK2812s I salvaged from another project after first trying WS2812b LEDs which are garbage for reusing. I'll save you the time and just tell you not to use them, they're way too sensitive to heat and thus suck. I wanted everything to be surface mounted so that's how I designed it. In the final product, I ended up removing the center two LEDs as I was having issues getting them to work. Overall I enjoyed making this PCB with its special shape, which was an interesting process to make btw, and getting my hands dirty with some solder paste. I know my loved ones will enjoy this memorable piece of art just as much as I did, hopefully, you will too!\nLike always please read the whole Instructable before you begin, it will save you the time and tears haha.", "title": "Valentines PCB Heart", "url": "https://www.instructables.com/id/Valentines-PCB-Heart/", "steps": [{"step": 1, "steps_text": "Tools:\nSoldering Iron (Small chisel tip)\nSolder\nSolder Paste (https://www.amazon.com/gp/product/B017RSGPI8/ref=p...\nHeat Gun\nSMD Tweezers\nGlasses... Lol\nParts:\n1x PCB Heart (https://www.ebay.com/itm/113619091202)\n1x 9V Battery Connector (https://www.ebay.com/itm/113626063872) (or another power source either 5V or 7-30V)\n1x Digispark Arduino (Has all the parts you'll need to desolder!)\nor...\n1x Attiny85 SOT8\n1x MC78M05BDTRKG (DPACK) or L78XX (SOT89) (5V Regulators)\n1x 100uf C3528 16V Polarized Capacitor (optional)\n1x Red 0402 LED\n2x 66.5Ohm 0402 Resistor\n2x Zener Diode (SOD-323)\n1x Diode (SOD123)\n1x 4.7uf 0805 Capacitor\n1x 0.1uf 0402 Capacitor\n18x SK6812 LEDs\n18x 0.1uf 0603 Capacitor\n2x 1.5KOhm 0402 Resistor\n1x Micro USB SMD", "step_imgs": ["https://cdn.instructables.com/FLV/YF4O/JRV8AGIV/FLVYF4OJRV8AGIV.LARGE.jpg", "https://cdn.instructables.com/FM7/CB19/JRV8AGJ1/FM7CB19JRV8AGJ1.LARGE.jpg", "https://cdn.instructables.com/FSH/Y7X8/JRV8AGJ3/FSHY7X8JRV8AGJ3.LARGE.jpg", "https://cdn.instructables.com/FE6/E6E3/JRV8AGJ2/FE6E6E3JRV8AGJ2.LARGE.jpg"], "step_title": "Step 1: Tools & Parts"}, {"step": 2, "steps_text": "I'd start with the small components first then move to the SK6812 LEDs. I used the solder paste and applied very and I mean very small drops of solder paste to the pads; you'll want to check each pad after everything is soldered to make sure none of the pads bridged and everything is secure! I used my SMD tweezers to place everything on the solder paste then I used my heat gun set at approximately 220 degrees Celsius. You'll observe the paste liquify and turn to a shiny silver when its done in about 3-5 seconds. Use a soldering iron to fix any mistakes.\nLet's start with the capacitors first:\nC1: 0.1uf 0402\nC2: 4.7uf 0805\nC3-C22: 0.1uf 0603\nC23: 100uf C3528 Polarized!!\nDiodes next:\nD1-D2: Zener SOD-323\n- D1 and D2 have to be placed in a very specific direction! The indicator line should be closest to the bottom of the board!\nD3: Regular Diode SOD123\n- The orientation of D3 should have the indication line closest to the smaller of the two 5V-regulators.\nResistors:\nR1-R2: 66.5Ohm 0402\nR3: 1.5KOhm 0402\nR4: 300-500Ohm OPTIONAL Resistor!!\nR5: 1.5KOhm 0402\n5V-Regulators:\nSolder either regulator, just be aware of the current consumption for the LEDs!!\nMicroprocessor:\nThrow that Attiny85 on there and solder it down!\nLEDs:\nAllow the board to cool then place all the LEDs down on the board. You'll want to spend as little time with the heat gun on the LEDs to prevent destroying them. Once you see it melt move on!\nMicro USB:\nThis was last because it's on the back and it sucks to solder everything else if the board is wobbly. Be sure to check for bridging.\nOn the back, I gave you the option to solder a digispark Arduino board directly to the back if you wanna skip all this other soldering nonsense. Additionally, I have a direct 5V power supply option or a 7-30V option, DO NOT REVERSE THE POLARITY! I forgot to add polarity protection... my bad.\nAlso! I made a small mistake when labeling the w/out resistor and resistor jumper option, you'll need to solder the resistor option if you did not use a resistor and if you did happen to use a resistor you will need to solder the w/out resistor option.\nI think that's about it... I guess we'll move on to coding!", "step_imgs": ["https://cdn.instructables.com/FJY/Z3LR/JRV8CU8N/FJYZ3LRJRV8CU8N.LARGE.jpg", "https://cdn.instructables.com/FSH/3JY2/JRV8CU8P/FSH3JY2JRV8CU8P.LARGE.jpg", "https://cdn.instructables.com/FRW/NBW0/JRV8AGJ9/FRWNBW0JRV8AGJ9.LARGE.jpg", "https://cdn.instructables.com/FZF/UY2K/JRV8AGJ8/FZFUY2KJRV8AGJ8.LARGE.jpg"], "step_title": "Step 2: Put It Together!"}, {"step": 3, "steps_text": "These are the three code files I used so you can play around with them. In order to use the Rainbow code, you will also need to download the Color_Definitions file! The rainbow file will make your heart light up like a rainbow and the colors will move across each LED, pretty neat. The V-Heart_RGBW_4C will allow you to test all 4 functions of your RGBW led if you have those installed. The simple file is a very basic piece of code to test all the LEDs for one specified color.\nYou can write your own code or whatever pleases your little heart. Just ensure not to set the brightness at 225 (MAX) because each LED consumes approximately 120mA so... math... 2400mA is a lot of current. You'll need to plug into a 5V source with the current that you'll need or make sure that you add a beefy 5V regulator.\n//RAINBOW CODE//\n<p>#include <adafruit_neopixel.h><br>#include \"Color_Definitions.h\"\n#ifdef __AVR__\n#include <avr power.h=\"\">\n#endif</avr></adafruit_neopixel.h></p><p>// Which pin on the Arduino is connected to the NeoPixels?\n// On a Trinket or Gemma we suggest changing this to 1\n#ifdef __AVR_ATtiny85__\n#define NEO_PIN  0  // NeoPixel DATA\n#undef  LED_BUILTIN\n#define LED_BUILTIN 1  // LED on Model A\n#else\n#define NEO_PIN  0  // NeoPixel DATA\n#endif\n#define NEO_PTYPE NEO_GRBW // | What type of NeoPixel strip is attached to the Arduino?\n#define NUMPIXELS 20 // How many NeoPixels are attached to the Arduino?\n#define BRIGHTNESS 15 // set max brightness</p><p>#define IWAIT  2000\n#define SWAIT 20\n#define LWAIT  50\n#define HWAIT 1500</p><p>Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUMPIXELS, NEO_PIN, NEO_PTYPE + NEO_KHZ800);</p><p>// IMPORTANT: To reduce NeoPixel burnout risk, add 1000 uF capacitor across\n// pixel power leads, add 300 - 500 Ohm resistor on first pixel's data input\n// NOTE: RGBW LEDs draw up to 80mA with all colors + white at full brightness!</p><p>void setup() {\n#ifdef __AVR_ATtiny85__\n  // This is for Trinket 5V 16MHz\n  if (F_CPU == 16000000) clock_prescale_set(clock_div_1);\n  // End of trinket special code\n#endif</p><p>#ifdef LED_BUILTIN\n  // Turn the onboard LED off by making the voltage LOW\n  pinMode(LED_BUILTIN, OUTPUT); \n  digitalWrite(LED_BUILTIN, LOW);\n#endif</p><p>  strip.begin();\n  strip.setBrightness(BRIGHTNESS); // set brightness\n  strip.show(); // Initialize all pixels to 'off'</p><p>#ifdef IWAIT\n  delay(IWAIT);\n#endif\n}</p><p>void loop() {\n \n  rainbowCycle(SWAIT);</p><p>}</p><p>// Slightly different, this makes the rainbow equally distributed throughout\nvoid rainbowCycle(uint16_t wait) {\n  uint16_t i, j;</p><p>  for(j=0; j<256*5; j++) { // 5 cycles of all colors on wheel\n    for(i=0; i< strip.numPixels(); i++) {\n      strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255));\n    }\n    strip.show();\n    delay(100);\n  }\n}</p><p>// Input a value 0 to 255 to get a color value.\n// The colours are a transition r - g - b - back to r.\nuint32_t Wheel(byte WheelPos) {\n  WheelPos = 255 - WheelPos;\n  if(WheelPos < 85) {\n   return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);\n  } else if(WheelPos < 170) {\n    WheelPos -= 85;\n   return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);\n  } else {\n   WheelPos -= 170;\n   return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);\n  }\n}</p>", "step_imgs": ["https://cdn.instructables.com/FKL/FJF4/JRV8CSKP/FKLFJF4JRV8CSKP.LARGE.jpg"], "step_title": "Step 3: CODE"}, {"step": 4, "steps_text": "Congrats! You now have a piece of awesome art that you can share with your loved ones! I hope you enjoyed this instructable.\nSome closing thoughts...\n- I would like to redesign these using APA102 LEDs\n- A coin cell power option\n- Better V-regulator\n- Bluetooth... everything is better with Bluetooth\n- Better signal trace design\nBut... for now, its gonna do just fine.\nThanks!", "step_imgs": ["https://cdn.instructables.com/FKK/ATZB/JRV8CSKM/FKKATZBJRV8CSKM.LARGE.jpg", "https://cdn.instructables.com/FWD/5WJB/JRV8CSKI/FWD5WJBJRV8CSKI.LARGE.jpg", "https://cdn.instructables.com/F6Y/9RCV/JRV8AGJA/F6Y9RCVJRV8AGJA.LARGE.jpg", "https://cdn.instructables.com/FFG/VRIF/JRV8AGJ6/FFGVRIFJRV8AGJ6.LARGE.jpg", "https://cdn.instructables.com/F29/O4BG/JRV8CSKJ/F29O4BGJRV8CSKJ.LARGE.jpg", "https://cdn.instructables.com/FPU/WGJI/JRV8CSKK/FPUWGJIJRV8CSKK.LARGE.jpg", "https://cdn.instructables.com/FMY/72SE/JRV8CSKL/FMY72SEJRV8CSKL.LARGE.jpg"], "step_title": "Step 4: Finished"}], "channel": "Arduino"}, {"category": "Technology", "description": "There are some projects where you make a functional thing or practical thing. There are some projects where you make a beautiful thing. And then there are projects like this where you decide to slap a razor blade and balloon on some robots and battle them, Mario Kart style :D\nI'll start this by saying this project could be done with a robot kit (what we did), RC cars, or basically any moving object you can control remotely. And if you want to play with kids or play indoors, you can swap the razor blades with sharpened bamboo skewers or anything less... knife-y. We'll share the 3D files we used to modify our robots and the quick steps to bring this awesome game into real life!\nHere's what we used:\nRobot kit\nTAZ 6 (our 3D printer)\nTough PLA\nUtility knife blades\nSmall balloons\nDecorating supplies (optional)", "title": "DIY Mario Kart Balloon Battle Robots", "url": "https://www.instructables.com/id/DIY-Mario-Kart-Balloon-Battle-Robots/", "steps": [{"step": 1, "steps_text": "Like I mentioned in the intro, you can use anything that's remote controllable as your robot base. We went with these robot kits because they were more of a blank canvas for us to modify (it's easier to attach 3D printed parts to flat sheets of acrylic rather than contoured RC car hoods). These took us about 3 hours to build, and if you're curious about that we do have a Twitch live stream of it here, but basically we followed simple instructions and it was a little bit like an elaborate lego kit. We're robotics beginners, so we're confident that most people could put these together.", "step_imgs": ["https://cdn.instructables.com/FMY/9C74/JRV8AEJU/FMY9C74JRV8AEJU.LARGE.jpg", "https://cdn.instructables.com/F7Y/YEIG/JRV8AEJV/F7YYEIGJRV8AEJV.LARGE.jpg", "https://cdn.instructables.com/FK5/N3KO/JRV8AEK8/FK5N3KOJRV8AEK8.LARGE.jpg"], "step_title": "Step 1: Build, Buy, or Assemble Your Robot/RC Base"}, {"step": 2, "steps_text": "Alrighty, now that your robots are assembled, purchased, or in some way existing: it's time to get them battle ready! Do to that, they need to be able to hold something pointy on their heads, and balloons on their butts. We have links to our 3D files here and you can modify them to fit your robot/RC vehicle.\nWe designed a frame that goes around the robot kit's \"head,\" protecting some important components but also giving us a mounting point to attach razor blades. Specifically, we used utility knife blades and screwed them into place on the 3D prints. Then we designed a back \"bumper\" that has 3 slots where you can friction fit in the ends of 3 balloons right at the knot. It holds them securely in place even during vigorous battles.", "step_imgs": ["https://cdn.instructables.com/FCP/DX70/JRV8AH5F/FCPDX70JRV8AH5F.LARGE.jpg", "https://cdn.instructables.com/FA2/XCRC/JRV8AH73/FA2XCRCJRV8AH73.LARGE.jpg", "https://cdn.instructables.com/FOO/DUFZ/JRV8AH99/FOODUFZJRV8AH99.LARGE.jpg", "https://cdn.instructables.com/FFW/6DD7/JRV8AHBC/FFW6DD7JRV8AHBC.LARGE.jpg"], "step_title": "Step 2: 3D Print Modifications"}, {"step": 3, "steps_text": "Ok, this part is just for fun, but it's really fun! We decorated our robots using craft foam, faux fur, paper, and hot glue. You could make yours super realistic by following some of the awesome prop weathering tutorials out there, you could go Mario themed and make your favorite characters, or if you're itching to get to the battle", "step_imgs": ["https://cdn.instructables.com/FL2/OFND/JRV8AHPV/FL2OFNDJRV8AHPV.LARGE.jpg", "https://cdn.instructables.com/FTV/NRLS/JRV8AHRW/FTVNRLSJRV8AHRW.LARGE.jpg"], "step_title": "Step 3: (Optional) Decorate!"}, {"step": 4, "steps_text": "Our robots are controllable via either our phones or remotes that came with them, but the remotes were IR remotes and either remote could control either robot, so we opted for phones. For the battle, we found it to be more fun and challenging when we had a few obstacles we had to steer around (think buckets, scrap pieces of 2x4s, etc). And that's it! These are EXTREMELY fun and seriously felt like playing video games in real life. Whether you're grown up(ish) like we are or playing with kids, you're gonna have a good time! Have fun y'all :D", "step_imgs": ["https://cdn.instructables.com/FCM/LOMZ/JRV8AI5Z/FCMLOMZJRV8AI5Z.LARGE.jpg"], "step_title": "Step 4: Battle!!"}], "channel": "Arduino"}, {"category": "Technology", "description": "Hello my dear friends! :)\nWhen I was making some electronics devices, prototypes on breadboard and I needed to connect some resistors it was always trouble with searching the right one for me. I had one big ugly box with all the resistors in it. One day I said NO! So I was searching what to do with it... I found that the 10ml plastic lab test tubes has the right shape to store the resistors. So I ordered some, made CAD file of rack for the lab tubes, 3D printed it and sort the resistor by its value. Voila! My problem has been solved and it is so helpful, that I would like to share the plans with you!", "title": "Resistor Organizer", "url": "https://www.instructables.com/id/Resistor-Organizer-1/", "steps": [{"step": 1, "steps_text": "Lets start with things you need to make it.\nSeveral pieces of 10ml lab test tubes\nPossibility to 3D print\nOpenSCAD for the customization of model\nSuper glue\nLabels\nResistors\nAnd, also a little bit of patience and time (and chocolate) :)\nI also ordered kit of THT resistor from ebay. The kit contains 600pcs of 30values of resistors, so my rack is for 30 tubes. :)", "step_imgs": ["https://cdn.instructables.com/FAP/HD80/JRQOS3KW/FAPHD80JRQOS3KW.LARGE.jpg", "https://cdn.instructables.com/FS7/5YG6/JRQOS3RT/FS75YG6JRQOS3RT.LARGE.jpg", "https://cdn.instructables.com/F1P/N0K8/JRQOS3CI/F1PN0K8JRQOS3CI.LARGE.jpg"], "step_title": "Step 1: What Is Needed?"}, {"step": 2, "steps_text": "Once I have received the tubes I started designing the rack. I chose to use OpenSCAD, as it is free software. In the world of OpenSCAD I am quite new (about one week). I took it as good experience and good start to discovery what i can a how it can. So I started modeling thetube first. Then the several tries of designing racks followed, once I was satisfied with it. Then I reduced the code, edited it and I made it customizable. The final version of model is in the attached files (ResistorRack.scad). In the first few lines is the customizable section, which allows you to set number of rows, columns and spacing between the tubes. Once the customization is done you export the file as STL. I divided it into three parts. Bottom, upper part and the corners, which holds the bottom and the upper part. The selection of what you want to render is also in header section of code. The pictures will show more specifically.\nSo, we have done the CAD model with STL export, so, there is no barrier to make it real. Send it to the 3D printer! I printed it every single part separately with PLA material and settings of one bottom solid layer, two top solid layers, 20% infill with 0.2mm layer and 0.4mm extruder. The result surprisedme! Now, the only thing to build the rack is to glue the parts together. I used ordinary super glue.\nP.S. while you do not have a OpenSCAD it is easy to get it :) But if you do not want any differences from my design there are the STL files, also. :) Or I can generate it for you! :)", "step_imgs": ["https://cdn.instructables.com/FS7/5YG6/JRQOS3RT/FS75YG6JRQOS3RT.LARGE.jpg", "https://cdn.instructables.com/FOT/O0Z4/JRQOS3PT/FOTO0Z4JRQOS3PT.LARGE.jpg", "https://cdn.instructables.com/F4I/BOFV/JRQOS3L1/F4IBOFVJRQOS3L1.LARGE.jpg", "https://cdn.instructables.com/FMU/O82Z/JRQOS3O5/FMUO82ZJRQOS3O5.LARGE.jpg", "https://cdn.instructables.com/FCJ/A169/JRQOS3O2/FCJA169JRQOS3O2.LARGE.jpg", "https://cdn.instructables.com/F6D/V42P/JRQOS3N2/F6DV42PJRQOS3N2.LARGE.jpg", "https://cdn.instructables.com/FWR/2J71/JRQOS3CL/FWR2J71JRQOS3CL.LARGE.jpg", "https://cdn.instructables.com/F1B/CUN6/JRQOS3DT/F1BCUN6JRQOS3DT.LARGE.jpg", "https://cdn.instructables.com/F5X/IRVU/JRQOS3CG/F5XIRVUJRQOS3CG.LARGE.jpg"], "step_title": "Step 2: CAD Model"}, {"step": 3, "steps_text": "So we have made rack for the lab tubes! Now it is the time to sort the resistors and to label the tubes. It is time consuming and boring work, but while it is done, it is absolutely perfect! :P\nBest wishes!\nDiggingFox :)", "step_imgs": ["https://cdn.instructables.com/F2L/RLFP/JRQOS3FI/F2LRLFPJRQOS3FI.LARGE.jpg", "https://cdn.instructables.com/F3A/62K6/JRQOS3GK/F3A62K6JRQOS3GK.LARGE.jpg", "https://cdn.instructables.com/FIK/DPTM/JRQOS3HT/FIKDPTMJRQOS3HT.LARGE.jpg"], "step_title": "Step 3: Finish"}], "channel": "Electronics"}, {"category": "Technology", "description": "&lt; /iframe&gt;\nDioramas are a great way to bring making into the classroom and provide an opportunity for students to creatively express their learning. They can be used across grade levels and subject areas to illustrate an academic concept, the plot of a story, or an event in history.\nTypically, classroom dioramas start with parents and teachers hoarding shoeboxes and old animal figurines, but that ends today! With the help of Tinkercad and some creative thinking, you and your students can make dioramas digitally.\nRecommended grade levels: 4th-8th\nMaterials: Computers with mice, Internet, Tinkercad (free, easy-to-use app for 3D design, electronics, and coding)\nOverview: Teachers! This instructable will show you and your students how to create a digital diorama using Tinkercad and provides a great way to combine cross-curricular academic concepts with technology skills and 3D design.\nNote to Teachers: I created this Instructable with many classroom options in mind. It is based on a project I have previously done with my students.\nHere are a few ways to use this Instructable with your students:\nYou and your students can go through this instructable together step by step before they begin working on their own digital diorama\nYou could highlight specific steps and use the video tutorials as a quick intro to their class project\nYou can link this instructable as a resource or assignment in Google Classroom (or other LMS) and have students work through it at their own pace while creating their own diorama\nYou can download the PDF and print it as a guide for students\nOr, just let them start tinkering the diorama Base & Walls Template or fully designed example Digital Diorama and see where their creativity takes them", "title": "How to Design a Digital Diorama Using Tinkercad", "url": "https://www.instructables.com/id/How-to-Design-a-Digital-Diorama-Using-Tinkercad/", "steps": [{"step": 1, "steps_text": "If this is your first time teaching or starting a project that integrates 3D Design or Tinkercad, here are some helpful things to explore before starting this project:\nYou can get started here\nLook through the 3D gallery\nWatch a few Tinkercad videos\nTake this awesome 3D Printing class\nFor more information on managing your classroom for making, how to assess a 3D design project, and more, please check out: How to Bring Tinkercad into Your Classroom", "step_imgs": [], "step_title": "Step 1: Getting Started With Tinkercad"}, {"step": 2, "steps_text": "Before starting your design in Tinkercad, it's important to put your ideas on paper. You can do this by creating an outline or notes of things you plan to feature or sketching a draft of your diorama to get an idea of what it will look like. This will help you determine the features and animals you want to include and the best placement for them within your design.", "step_imgs": ["https://cdn.instructables.com/F42/XYG3/JRV8CF6M/F42XYG3JRV8CF6M.LARGE.jpg"], "step_title": "Step 2: Planning Your Design"}, {"step": 3, "steps_text": "Once you are signed into Tinkercad, click the \u201cCreate new design\u201d button. This will take you to a blank workplane where you can start building your Digital Diorama. You can begin by dragging basic shapes from the sidebar.\nTo create the base, I used the \u201cbox\u201d and set it to 148 mm x 104 mm x 3 mm.\nAfter getting the base set, I used the Duplicate and Rotate tools to make the walls. I set the wall height to 75 mm on each of the 3 sides.\nWatch the clip below to see how I built the base and then duplicated and rotated to make the walls.", "step_imgs": ["https://cdn.instructables.com/FZ9/XQ5S/JQKTNCUR/FZ9XQ5SJQKTNCUR.LARGE.jpg"], "step_title": "Step 3: Building the Base and Walls"}, {"step": 4, "steps_text": "When making a traditional diorama, you would create the desired scene using a variety of materials to mimic what it would look like in real life. You are going to do the same in Tinkercad, but you will need to use your skills and imagination in new ways in order to use the Tinkercad tools and basic shapes to meet the challenge of mimicking real-life objects or animals. It may seem like a difficult task at first, but I promise you\u2019ll get the hang of it quickly and be on your way to making a totally awesome Digital Diorama.\nIf you planned your design (Step 2), you have already decided on the key features and animals you want to include, and now it's time to start creating them.\nThe clam with a pearl is the centerpiece of my design, so I will start there. Can you guess which shapes I used to make it? Watch the next video to find out!\nNote to Students: In a Marine Ecosystem (or any other research topic), you can be sure to find a variety of things to include in a diorama, but if this diorama is for a class project and you need to present your learning, you'll want to make sure that the objects you put in the diorama represent a feature or talking point that you plan to discuss when sharing it with your class.\nMaker Tip: Right Click and hold while you move your mouse around to see your design from all sides and make sure everything is lined up. You can also do this by clicking the white box (labeled: Top, Front, Bottom, Right, Left, and Back) on the top left side of your workplane window and rotate it around to the see your design from different views.\nAfter creating the clam, I designed some kelp and jellyfish using the Tinkercad Scribble tool on the Basic Shapes sidebar and the Half Sphere. (I can't wait to see what you make with the scribble tool!)\nAdditional features: To represent the coral reefs, I used multiple diamond shapes and stretched then stacked them into new shapes.\nOne of the last things I created was the fish. Using the \u201cCreate then Duplicate\u201d strategy you saw in the Kelp & Jellyfish video above, I built one fish and then duplicated and resized to create multiple variations of fish.\nMaker Tip: Don\u2019t forget to rotate your animal designs and change their colors to create even more variety.", "step_imgs": ["https://cdn.instructables.com/FTE/QM06/JQKTNCSW/FTEQM06JQKTNCSW.LARGE.jpg", "https://cdn.instructables.com/F7T/UVJI/JQKTNCSY/F7TUVJIJQKTNCSY.LARGE.jpg", "https://cdn.instructables.com/F2F/BB8H/JQKTNCSZ/F2FBB8HJQKTNCSZ.LARGE.jpg", "https://cdn.instructables.com/FF1/VCS0/JQKTNCT2/FF1VCS0JQKTNCT2.LARGE.jpg", "https://cdn.instructables.com/F1X/SHM8/JQKTNCUU/F1XSHM8JQKTNCUU.LARGE.jpg"], "step_title": "Step 4: Creating the Scene"}, {"step": 5, "steps_text": "Let\u2019s check in! At this point, you should have:\nmapped the key features/talking points of your design\nsketched a rough draft of what you want your diorama to look like\ncreated your Digital Diorama\u2019s base and walls in Tinkercad\nlearned how to use Tinkercad 3D Design tools and Basic Shapes\nbuilt a variety of animals and environmental features using your awesome imagination and Tinkercad\nGive yourself a high-five! :) You are officially a 3D Design ninja!!", "step_imgs": ["https://cdn.instructables.com/FCC/38TW/JQMOE1I8/FCC38TWJQMOE1I8.LARGE.jpg"], "step_title": "Step 5: Check in With Your Design (aka: Progress Monitoring)"}, {"step": 6, "steps_text": "Now it\u2019s time to put the finishing touches on your design and get it presentation ready. This is when you should carefully examine your design from all angles and make any necessary edits or design revisions to make sure everything is in the \u201cGoldilocks Zone\u201d meaning it's \u201cJust Right!\u201d.\nThings to ask yourself:\nDoes my diorama clearly represent the ecosystem I researched?\nDid I include enough of the key features of the ecosystem that I will be discussing during my presentation?\nDo I have too many animals and features, or not enough?\nIs my diorama cluttered and sporadic or neatly organized and visually pleasing?\nIs my Digital Diorama presentation ready?\nWhen you have finished editing your design, you should be ready to share it with your class and explain all the exciting things you learned while researching your topic and creating your Digital Diorama using Tinkercad.\nMaker Tip: You can easily save images of your design in Tinkercad and then add them to Google Slides or a PowerPoint presentation.\nHere's how to save an image of your design in Tinkercad:\nClick the \"Send To\" button on the top right of your design window (just above the ruler)\nClick the download button next to the picture of your design on the \"Send\" window\nClick the downloaded file at the bottom of your window to open and save it to your desired computer folder", "step_imgs": ["https://cdn.instructables.com/F1U/0TBV/JQCOIRTC/F1U0TBVJQCOIRTC.LARGE.jpg"], "step_title": "Step 6: Finishing Touches"}, {"step": 7, "steps_text": "After all the presenting is done, don\u2019t forget to CELEBRATE your design achievements! You worked hard, learned new things, overcame challenges, and now have an awesome Digital Diorama as the result of all of that effort and learning! AMAZING!!!\nTeachers! Here are some awesome ways to share this project:\nHave your students add an image of this project to their digital portfolios\nAdd project images to your classroom or school website\nPresent to parents or other classes (I bet they will be super impressed)\nCome back to this Instructable and post a picture of student dioramas in the \"I made it\" section\nDon\u2019t forget to stop by this Instructable again and let me know how it went by leaving a comment or sharing your creations in the \"I Made It\" section. I can\u2019t wait to see what you MAKE!", "step_imgs": [], "step_title": "Step 7: Celebrate & Share"}], "channel": "Digital Graphics"}, {"category": "Technology", "description": "In this Instructable I'll show you how I've built an LED ornament for Valentines day that I gave as a gift to my wife.\nThe circuit is inspired by another Instructable:\nhttps://www.instructables.com/id/Astable-Multivibr...", "title": "Beating Heart LED Valentine Ornament", "url": "https://www.instructables.com/id/Beating-Heart-LED-Valentine-Ornament/", "steps": [{"step": 1, "steps_text": "The circuit is very simple and it is based on the classic astible multivibrator that uses two transistors with two capacitors to alternatively flash two sets of LEDs. The circuit is most commonly done with just a single LED per transistor but you can add more without issues. The only difference is that the more LEDs you add the faster those blinks will be but that can also be addressed with bigger capacitors.\nThe full schematic is available on the link below:\nhttps://easyeda.com/bkolicoski/Valentine-LED-Flash...", "step_imgs": ["https://cdn.instructables.com/F4A/BNEU/JRQOSCG9/F4ABNEUJRQOSCG9.LARGE.jpg", "https://cdn.instructables.com/FOY/HXIZ/JS5CD6AG/FOYHXIZJS5CD6AG.LARGE.jpg"], "step_title": "Step 1: Prepare the Circuit"}, {"step": 2, "steps_text": "I used a small perforated circuit board as the base for the project where I placed the LEDs in a heart pattern. The rest of the components are placed in the bottom to achieve a better look.", "step_imgs": ["https://cdn.instructables.com/FFJ/YEPO/JRQOSCGY/FFJYEPOJRQOSCGY.LARGE.jpg"], "step_title": "Step 2: Layout the Components"}, {"step": 3, "steps_text": "I first soldered all of the components in place from the top. This way I can prevent them from falling out when I turn the board to solder the back side and make all of the connections.\nThis worked well for most of the components but not for the LEDs as their pins are not exposed on the top side. To solve this, I've used a painters tape to keep the LEDs in place and I only soldered one leg of each. I then removed the tape and by pressing on each LED individually, I re heated the solder to make every LED flush with the board for a cleaner look.", "step_imgs": ["https://cdn.instructables.com/FOX/URJD/JRQOSCIC/FOXURJDJRQOSCIC.LARGE.jpg", "https://cdn.instructables.com/F4R/UHYA/JRQOSCM9/F4RUHYAJRQOSCM9.LARGE.jpg", "https://cdn.instructables.com/FA8/3H8H/JRQOSCOG/FA83H8HJRQOSCOG.LARGE.jpg", "https://cdn.instructables.com/FA7/KHJZ/JRQOSCQJ/FA7KHJZJRQOSCQJ.LARGE.jpg", "https://cdn.instructables.com/F1B/D14E/JRQOSCS2/F1BD14EJRQOSCS2.LARGE.jpg"], "step_title": "Step 3: Solder the Top Side"}, {"step": 4, "steps_text": "This was really tricky as I did not had a clear plan how to layout all of the connections and I just went with the flow and connected as they came. The interesting trick is that you can use some heat shrink to add over the exposed leads of the components to prevent any shorts.\nWhen the mess was too great I continued making the connections using some insulated wire.", "step_imgs": ["https://cdn.instructables.com/FOY/RD6Z/JRQOSCWN/FOYRD6ZJRQOSCWN.LARGE.jpg", "https://cdn.instructables.com/FSH/GTM0/JRQOSD23/FSHGTM0JRQOSD23.LARGE.jpg", "https://cdn.instructables.com/F5M/PTX0/JRQOSD5M/F5MPTX0JRQOSD5M.LARGE.jpg"], "step_title": "Step 4: Solder the Circuit Connections"}, {"step": 5, "steps_text": "I used 2 AA batteries to power the circuit but you can also use a LiPo or a 9V battery.", "step_imgs": ["https://cdn.instructables.com/F1R/M5XK/JRQOSD8E/F1RM5XKJRQOSD8E.LARGE.jpg"], "step_title": "Step 5: Add the Battery Holder"}, {"step": 6, "steps_text": "When I finished and tested the circuit to make sure everything works, I used my hot glue gun to flood the back side of the board and prevent any of the connections from moving. This way I know for sure that there won't be any shorts later on with using the ornament.\nAlso I used hot glue to mount the board to the battery holder so I can place the entire thing up right.", "step_imgs": ["https://cdn.instructables.com/FCT/9FMI/JRQOSDA2/FCT9FMIJRQOSDA2.LARGE.jpg", "https://cdn.instructables.com/FOR/1EOE/JRQOSDBH/FOR1EOEJRQOSDBH.LARGE.jpg", "https://cdn.instructables.com/FH5/KEV3/JRQOSDD1/FH5KEV3JRQOSDD1.LARGE.jpg"], "step_title": "Step 6: Insulate and Assemble With Hot Glue"}, {"step": 7, "steps_text": "This was a really fun project and I truly recommend it for any electronics beginners that want to practice their soldering skills.\nI hope that you liked it, so please follow me here on Instructables and subscribe to my YouTube channel for more projects in the future.", "step_imgs": ["https://cdn.instructables.com/FOP/QGKK/JRQOSCFL/FOPQGKKJRQOSCFL.LARGE.jpg", "https://cdn.instructables.com/FT7/S8SJ/JRQOSDJT/FT7S8SJJRQOSDJT.LARGE.jpg"], "step_title": "Step 7: Enjoy!"}], "channel": "Electronics"}, {"category": "Technology", "description": "Hey Guys! It's my First instructable.\nThis is a DIY ultra-portable speaker with impressive bass and portable design. Featuring high performance audio performance with dual full-range stereo speaker and a passive driver. This versatile speaker allows you to stay connected with your friend with long lasting battery life.This speaker provides upto 3 days battery backup at continuous music playback with a single charge.\nHere's the Sound test video (\n)Here's the base test video(\n)", "title": "DIY Mini Cardboard Speaker :)", "url": "https://www.instructables.com/id/DIY-Mini-Cardboard-Speaker-/", "steps": [{"step": 1, "steps_text": "Time to select some proper parts for this Speaker. These parts I'm using to build my speaker. You can use this parts. But if you find better parts then use those parts for better performance.\nSpeakers (3w*2) [$1.5]\nStereo Amplifier (3w*2-4ohm) [$1.5]\nLi-po and Li-ion Batteries (2000mAh)[Recycled]\nMicro USB Charging Module With Battery Protection [$2]\nCardboard [Recycled]\nOn/Off Slide Switch [Recycled]\nAux Ready", "step_imgs": ["https://cdn.instructables.com/FPY/2XOY/JRV89R21/FPY2XOYJRV89R21.LARGE.jpg", "https://cdn.instructables.com/FPG/1H65/JRV89R24/FPG1H65JRV89R24.LARGE.jpg", "https://cdn.instructables.com/FQA/YT4G/JRV89R2C/FQAYT4GJRV89R2C.LARGE.jpg", "https://cdn.instructables.com/F34/IXMI/JRV89R2K/F34IXMIJRV89R2K.LARGE.jpg", "https://cdn.instructables.com/F4N/3JT9/JRV89R2T/F4N3JT9JRV89R2T.LARGE.jpg", "https://cdn.instructables.com/FS1/LPJD/JRV89R32/FS1LPJDJRV89R32.LARGE.jpg", "https://cdn.instructables.com/FV6/JGSY/JRV89R3B/FV6JGSYJRV89R3B.LARGE.jpg", "https://cdn.instructables.com/F5Q/VNXD/JRV89R3Q/F5QVNXDJRV89R3Q.LARGE.jpg", "https://cdn.instructables.com/FVU/DQ7T/JRV89R3Y/FVUDQ7TJRV89R3Y.LARGE.jpg"], "step_title": "Step 1: Parts List"}, {"step": 2, "steps_text": "Rotary Tool\nScrew Driver set\nGlue Gun\nSoldering iron\nBaby Hacksaw\nSandpaper\nSuperglue\nCutter\nMasking Tape\nSpray paint", "step_imgs": [], "step_title": "Step 2: Tools & Equipment:"}, {"step": 3, "steps_text": "Measure the cardboard and mark it, then cut the layout. Again cut the main layout into two pieces. One for rear and another for front panel of speaker.", "step_imgs": ["https://cdn.instructables.com/FRM/C4PG/JRV89TMM/FRMC4PGJRV89TMM.LARGE.jpg", "https://cdn.instructables.com/FSX/7BQG/JRV89TNK/FSX7BQGJRV89TNK.LARGE.jpg", "https://cdn.instructables.com/FN2/UPRK/JRV89TOI/FN2UPRKJRV89TOI.LARGE.jpg", "https://cdn.instructables.com/FS7/3SNU/JRV89TOM/FS73SNUJRV89TOM.LARGE.jpg"], "step_title": "Step 3: Take Measurements:"}, {"step": 4, "steps_text": "Take measurement of speaker's diameter and note down it. Draw holes exactly same size as speaker's diameter by using ruler and compass. Don't make bigger holes than speaker's diameter then speaker won't get fit on them.", "step_imgs": ["https://cdn.instructables.com/FTA/MN62/JRV89U11/FTAMN62JRV89U11.LARGE.jpg", "https://cdn.instructables.com/FVO/WWXR/JRV89U13/FVOWWXRJRV89U13.LARGE.jpg", "https://cdn.instructables.com/F85/DL6T/JRV89U16/F85DL6TJRV89U16.LARGE.jpg", "https://cdn.instructables.com/F29/TPH7/JRV89U1G/F29TPH7JRV89U1G.LARGE.jpg"], "step_title": "Step 4: Making Holes:"}, {"step": 5, "steps_text": "This is the most hardest part of this instructable . Take your rotary tool we'll start of by drilling a large hole inside the circular marking then sand of the excess cardboard by using your sanding drum tip. Do the same process for passive radiator. But still I don't have any rotary tool that's why i used only cutter and sandpaper for the cut the holes.", "step_imgs": ["https://cdn.instructables.com/F4F/BO41/JRV89UO1/F4FBO41JRV89UO1.LARGE.jpg", "https://cdn.instructables.com/FFO/3FIA/JRV89UPI/FFO3FIAJRV89UPI.LARGE.jpg", "https://cdn.instructables.com/F60/4H9R/JRV89UPT/F604H9RJRV89UPT.LARGE.jpg", "https://cdn.instructables.com/F5X/VHRN/JRV89URO/F5XVHRNJRV89URO.LARGE.jpg", "https://cdn.instructables.com/FHI/PXCP/JRV89UUF/FHIPXCPJRV89UUF.LARGE.jpg"], "step_title": "Step 5: Cutting Holes:"}, {"step": 6, "steps_text": "Paint your speaker with your favourite colours. I'm using here two colours matte black and Yellow. you choose yours. I also gave vertical and horizontal pattern for more attractive look. After painting it looks exactly same as my expectation.", "step_imgs": ["https://cdn.instructables.com/FPS/2JDK/JRV89UB3/FPS2JDKJRV89UB3.LARGE.jpg", "https://cdn.instructables.com/FCH/62DM/JRV89UDI/FCH62DMJRV89UDI.LARGE.jpg", "https://cdn.instructables.com/FY0/VL7E/JRV89UF7/FY0VL7EJRV89UF7.LARGE.jpg", "https://cdn.instructables.com/F4F/32Y3/JRV89UGM/F4F32Y3JRV89UGM.LARGE.jpg"], "step_title": "Step 6: Paint Time (most Interesting Part:)"}, {"step": 7, "steps_text": "We're going to mount the speakers and passive radiator. we'll start by adding a thin layer of superglue around the edge of the speaker's hole. Once we add our layer of glue, flip the front panel, position it, and rest it on top of our speaker and hold it in place for several minutes. Again we'll repeat the same process for other speaker. After doing so, we'll use the same method to seal passive radiator. next apply a thin layer of hot glue around both the speakers and passive radiator to ensure that they are 100% airtight.", "step_imgs": ["https://cdn.instructables.com/FTZ/6ZCY/JRV89VV5/FTZ6ZCYJRV89VV5.LARGE.jpg", "https://cdn.instructables.com/F4Z/07GX/JRV89VWT/F4Z07GXJRV89VWT.LARGE.jpg", "https://cdn.instructables.com/FXV/4PER/JRV89VXK/FXV4PERJRV89VXK.LARGE.jpg", "https://cdn.instructables.com/FJL/N11C/JRV89VZ7/FJLN11CJRV89VZ7.LARGE.jpg", "https://cdn.instructables.com/FG2/DUYL/JRV89W1K/FG2DUYLJRV89W1K.LARGE.jpg", "https://cdn.instructables.com/FVZ/QHTS/JRV89W2F/FVZQHTSJRV89W2F.LARGE.jpg"], "step_title": "Step 7: Mounting Speaker & Radiator:"}, {"step": 8, "steps_text": "I started off by sanding the side & lower panel, it necessary to remove the glossy finish, then superglue can join both the panels permanently. Next apply great amount of superglue on the edges of front panel and quickly position it to lower panel then hold it for couple of minutes. Finally add plenty of hot glue at the joint of two panels.", "step_imgs": ["https://cdn.instructables.com/FP7/9KT1/JRV89YE2/FP79KT1JRV89YE2.LARGE.jpg", "https://cdn.instructables.com/FVP/QE80/JRV89YE8/FVPQE80JRV89YE8.LARGE.jpg", "https://cdn.instructables.com/FRJ/0Z7B/JRV89YEB/FRJ0Z7BJRV89YEB.LARGE.jpg", "https://cdn.instructables.com/FN7/MI3D/JRV89YEG/FN7MI3DJRV89YEG.LARGE.jpg", "https://cdn.instructables.com/FD0/4FLQ/JRV89YEM/FD04FLQJRV89YEM.LARGE.jpg", "https://cdn.instructables.com/FN9/ISF4/JRV89YER/FN9ISF4JRV89YER.LARGE.jpg"], "step_title": "Step 8: Attach Lower & Side Panel:"}, {"step": 9, "steps_text": "Simply make holes for switch by using your rotary tools, after doing this sand the holes perfectly, then install the switches and apply some amount of hot glue on the corner side of switches. you can see that I attached two switches in one place. you can also do this for better result.", "step_imgs": ["https://cdn.instructables.com/FN3/UNXJ/JRV89XM6/FN3UNXJJRV89XM6.LARGE.jpg", "https://cdn.instructables.com/F0K/2ZET/JRV89XMX/F0K2ZETJRV89XMX.LARGE.jpg", "https://cdn.instructables.com/FHF/JK4F/JRV89XN0/FHFJK4FJRV89XN0.LARGE.jpg"], "step_title": "Step 9: Add Slide Switch"}, {"step": 10, "steps_text": "In this part we're going to install and connect the speakers, amplifier and Bluetooth module. At first we'll connect the wire to speakers VCC(+) and GND(-) carefully. Then we connect these wires to amplifier's L(Left channel) ,G(GND), R(Right channel). Next we just connect wire to VCC(+) and GND(-) of amp board. After that we'll connect wire between amplifier's L G R to BT module L G R connection [Note: BT Module has two negative output(LN and RN). So connect Both negative terminals for balanced stereo performance]. Then solder wire on functional buttons.", "step_imgs": ["https://cdn.instructables.com/F4U/PSJN/JRV89YNJ/F4UPSJNJRV89YNJ.LARGE.jpg", "https://cdn.instructables.com/F18/JZCT/JRV89YNK/F18JZCTJRV89YNK.LARGE.jpg", "https://cdn.instructables.com/FBK/7M6C/JRV89YNN/FBK7M6CJRV89YNN.LARGE.jpg", "https://cdn.instructables.com/FYQ/YIV3/JRV89YNV/FYQYIV3JRV89YNV.LARGE.jpg", "https://cdn.instructables.com/F1F/EQB2/JRV89YO1/F1FEQB2JRV89YO1.LARGE.jpg"], "step_title": "Step 10: Soldering Speakers, Amplifier and Bluetooth Module"}, {"step": 11, "steps_text": "here I'm using two batteries one for amp board and another for BT module. But you can easily say that how i'll charge these two batteries. after some research I got an idea. I'm using a slide switch to charge these two batteries separately. we can use this method for charging two batteries one by one without facing any problem. I recommend to use a charging module with battery protection inbuilt but you can use mobile battery, that already has a inbuilt protection board.", "step_imgs": ["https://cdn.instructables.com/F4F/2SOO/JRV89YQJ/F4F2SOOJRV89YQJ.LARGE.jpg", "https://cdn.instructables.com/FR7/WLY1/JRV89YQK/FR7WLY1JRV89YQK.LARGE.jpg"], "step_title": "Step 11: Soldering Batteries and Charging Module"}, {"step": 12, "steps_text": "Now its time to make the complete circuit. You've to connect all the components carefully and exactly same as the circuit diagram showing.", "step_imgs": ["https://cdn.instructables.com/FGG/EF04/JRV89YT6/FGGEF04JRV89YT6.LARGE.jpg", "https://cdn.instructables.com/FIO/N6JU/JRV89YT7/FION6JUJRV89YT7.LARGE.jpg", "https://cdn.instructables.com/FKN/7ITY/JRV89YTT/FKN7ITYJRV89YTT.LARGE.jpg", "https://cdn.instructables.com/F3I/XZLK/JRV89YTW/F3IXZLKJRV89YTW.LARGE.jpg", "https://cdn.instructables.com/FR5/TDMP/JRV89YTX/FR5TDMPJRV89YTX.LARGE.jpg"], "step_title": "Step 12: Making the Complete Circuit"}, {"step": 13, "steps_text": "Customize your speaker with your creative ideas. I really enjoyed a lot while I'm building this project. Make Your own speaker and show it to your friends, May be they also like to make their own and that's how we DIY maker can expand our community. Thanks for watching this. Again I'm requesting you guy's please vote me. Don't forget to follow me for upcoming projects.", "step_imgs": ["https://cdn.instructables.com/F8O/NU6K/JRV89YWK/F8ONU6KJRV89YWK.LARGE.jpg", "https://cdn.instructables.com/FVD/0UTD/JRV89YWO/FVD0UTDJRV89YWO.LARGE.jpg"], "step_title": "Step 13: Finishing Ideas"}], "channel": "Electronics"}, {"category": "Technology", "description": "Hey guys, i wanted to build a gaming desk for my man cave, any ordinary desk isn't gonna cut it\nThis desk was mainly built for the purpose of storage, i don't like having shelves everywhere so everything is stored in compartments. This is part 1 of the 2 parts to my build.\nThis build was inspired by Project Alternate by De Blow . link to Build here\nhttps://www.pcgamer.com/build-of-the-week\nJust a heads up: my pc wasnt supposed to be a copy/ replica. and is by no way completed how i want it. I just use him as inspiration.", "title": "PC Gaming Desk Build", "url": "https://www.instructables.com/id/PC-Gaming-Desk-Build/", "steps": [{"step": 1, "steps_text": "2 sheets Ply-board or Melamine\nCircular/ Table/ Jig saw (anyone would work)\nDrill\n1 pk 1.5\" gypsum Screws\n1 pk 2\" gypsum Screws\n4 lenghts .75\" x 3.5\" White pine\nEXTRAS (just for accessorizing)\n7pcs 2\" Hinges\nBlack paint\nCarbon fiber vinyl wrap\n1 strip of RGB Leds\nStaple gun", "step_imgs": [], "step_title": "Step 1: Material List"}, {"step": 2, "steps_text": "Start by Measuring the space you want to build your desk mine was 8ft x 2ft\nPc Dept must be minimum 8\" to store all components inside\nMaterials cut 8ft x 8\" (2pcs) . . 2ft x 8\" (2pcs).", "step_imgs": ["https://cdn.instructables.com/FGD/SSX9/JRV89C0A/FGDSSX9JRV89C0A.LARGE.jpg"], "step_title": "Step 2: THE BUILD (main Compartment)"}, {"step": 3, "steps_text": "For the base i made 2 shelves as legs, this can be cut to any desired shape but serve the same purpose.\nDesks should not be more than 30\" tall for standard height chairs\nMaterials cut:\n2ft x 28\" (2 pcs)\n12\" x 28\" (2pcs)\ncenter piece can be cut to any width as long as its 24\" and 12\" on either side to match the lenghts\nSee Images for referance.", "step_imgs": ["https://cdn.instructables.com/FNH/919Q/JRV89C0B/FNH919QJRV89C0B.LARGE.jpg", "https://cdn.instructables.com/FI7/CUFC/JRV89C0C/FI7CUFCJRV89C0C.LARGE.jpg", "https://cdn.instructables.com/FSS/UNAT/JRV89C0D/FSSUNATJRV89C0D.LARGE.jpg"], "step_title": "Step 3: BASE"}, {"step": 4, "steps_text": "Next youll want a piece in the center for more support and also works as a shelf for your stuff.\nMaterials cut\n4ft x 12\"\nAnd added a extra piece of white pine for more support\nSee images for referance.", "step_imgs": ["https://cdn.instructables.com/FXF/KN0R/JRV89C0E/FXFKN0RJRV89C0E.LARGE.jpg"], "step_title": "Step 4: BASE Part 2"}, {"step": 5, "steps_text": "For the final part of the frame youll wanna make a base for the top component area.\nMaterial cut:\n8ft x 2ft.\nSee images above\nNext you screw the top console to the base and screw everything together.", "step_imgs": ["https://cdn.instructables.com/FGO/ESYZ/JRV89C0F/FGOESYZJRV89C0F.LARGE.jpg", "https://cdn.instructables.com/FYP/2VBS/JRV89C0G/FYP2VBSJRV89C0G.LARGE.jpg"], "step_title": "Step 5: FINISHING THE FRAME"}, {"step": 6, "steps_text": "Some Knowledge of computers required\nYou'll need to disassemble an old PC frame for the motherboard holder.\nCarefullly Screw out the rivets in the casing and everything will pop out.\nOnce everything is removed add some spray paint of your choice.\nMy theme was black and white.", "step_imgs": ["https://cdn.instructables.com/FZN/LLU5/JRV89C0H/FZNLLU5JRV89C0H.LARGE.jpg", "https://cdn.instructables.com/FMH/62K3/JRV89C0Q/FMH62K3JRV89C0Q.LARGE.jpg"], "step_title": "Step 6: ADDING THE PARTS"}, {"step": 7, "steps_text": "For this part youll need to figure out the layout of your build\nHINT: know exactly how much things you wanna add before making any permanent decisions.\ni chose 3 HDD's a 2 CD drives, 1 Memory card slot\nNEXT youll wanna lineup everything and draw where your cutting\nremove the front panel to make the cuts easier.\nSee images above.", "step_imgs": ["https://cdn.instructables.com/FOA/NNGT/JRV89C0K/FOANNGTJRV89C0K.LARGE.jpg", "https://cdn.instructables.com/F9X/XBB3/JRV89C0M/F9XXBB3JRV89C0M.LARGE.jpg", "https://cdn.instructables.com/F7W/XCPZ/JRV89C0N/F7WXCPZJRV89C0N.LARGE.jpg", "https://cdn.instructables.com/FMU/E320/JRV89C0O/FMUE320JRV89C0O.LARGE.jpg", "https://cdn.instructables.com/FXS/I7OF/JRV89C0P/FXSI7OFJRV89C0P.LARGE.jpg"], "step_title": "Step 7: ADDING COMPONENTS"}, {"step": 8, "steps_text": "A Drill and Jigsaw is needed for this part\n\nLineup your motherboard on the base and place it exactly where you want it\nDraw spaces for your wires to pass through (wire management is key to this build)\nSee images above.", "step_imgs": ["https://cdn.instructables.com/F2N/K8ML/JRV89C1J/F2NK8MLJRV89C1J.LARGE.jpg", "https://cdn.instructables.com/FEI/Z5YY/JRV89C2G/FEIZ5YYJRV89C2G.LARGE.jpg"], "step_title": "Step 8: FITTING THE MOTHERBOARD"}, {"step": 9, "steps_text": "whats a desk without hiding places.\nThis part is entirely up to you, i added a space for my watercooling HDD wires. PSU\nAnd other LED wires i wanted to hide.\nSee images above.", "step_imgs": ["https://cdn.instructables.com/F1L/5CX8/JRV89C1Q/F1L5CX8JRV89C1Q.LARGE.jpg", "https://cdn.instructables.com/F7B/87K3/JRV89C2F/F7B87K3JRV89C2F.LARGE.jpg", "https://cdn.instructables.com/FCV/5Q7U/JRV89C2L/FCV5Q7UJRV89C2L.LARGE.jpg", "https://cdn.instructables.com/FI5/9LN5/JRV89C2E/FI59LN5JRV89C2E.LARGE.jpg", "https://cdn.instructables.com/FKW/AUBS/JRV89C2N/FKWAUBSJRV89C2N.LARGE.jpg"], "step_title": "Step 9: MORE COMPARTMENTS!!"}, {"step": 10, "steps_text": "Please have someone nearby who is experienced in building computers.\nIm not reliable for anything that happens next.\n\nFor this part i built a custom power/ reset switch\nyou'll need one as your no longer using a case\nI took an existing switch off the same case i destroyed and made it fancy.\nSee images above.", "step_imgs": ["https://cdn.instructables.com/FMT/527Z/JRV89C19/FMT527ZJRV89C19.LARGE.jpg", "https://cdn.instructables.com/FXF/BUBG/JRV89C1A/FXFBUBGJRV89C1A.LARGE.jpg", "https://cdn.instructables.com/F1J/FBC0/JRV89C1D/F1JFBC0JRV89C1D.LARGE.jpg", "https://cdn.instructables.com/F7F/ZAAV/JRV89C1G/F7FZAAVJRV89C1G.LARGE.jpg"], "step_title": "Step 10: ELECTRICAL"}, {"step": 11, "steps_text": "Some basic knowledge of PC water-cooling is needed for this part\ni wont go into details but you can find guides online.\nFit all your wires from the Power supply exactly where it should go\nNOTE: the further your power supply the longer the cables needed.\n\nAdded 2 fans for airflow. and also slide those wires thru the holes", "step_imgs": ["https://cdn.instructables.com/FGX/TIRM/JRV89C2S/FGXTIRMJRV89C2S.LARGE.jpg", "https://cdn.instructables.com/FQQ/BE2B/JRV89C3L/FQQBE2BJRV89C3L.LARGE.jpg", "https://cdn.instructables.com/FAU/7NC9/JRV89C4C/FAU7NC9JRV89C4C.LARGE.jpg", "https://cdn.instructables.com/FC1/5EVC/JRV89C4D/FC15EVCJRV89C4D.LARGE.jpg"], "step_title": "Step 11: BASIC WIREING & WATERCOOLING"}, {"step": 12, "steps_text": "Connect everything to your motherboard and do a test run for leaks\nLet the water cooling run for at least 10 minutes and keep napkins nearby.\nNEXT install operating system.", "step_imgs": ["https://cdn.instructables.com/FS3/BYVT/JRV89C4L/FS3BYVTJRV89C4L.LARGE.jpg", "https://cdn.instructables.com/FCD/X0AB/JRV89C4M/FCDX0ABJRV89C4M.LARGE.jpg", "https://cdn.instructables.com/FDP/V5IP/JRV89C4W/FDPV5IPJRV89C4W.LARGE.jpg"], "step_title": "Step 12: FINISHING UP"}, {"step": 13, "steps_text": "you can now add your LEDS and Carbon fiber wrap.\nthis part is optional and only for show.", "step_imgs": ["https://cdn.instructables.com/FUQ/XH70/JRV89C3K/FUQXH70JRV89C3K.LARGE.jpg", "https://cdn.instructables.com/FUO/60B4/JRV89C4E/FUO60B4JRV89C4E.LARGE.jpg", "https://cdn.instructables.com/FBL/QK9F/JRV89C4H/FBLQK9FJRV89C4H.LARGE.jpg", "https://cdn.instructables.com/F1M/NG77/JRV89C4X/F1MNG77JRV89C4X.LARGE.jpg", "https://cdn.instructables.com/FT6/KXHJ/JRV89C5L/FT6KXHJJRV89C5L.LARGE.jpg"], "step_title": "Step 13: ACCESSORIZING (optional)"}, {"step": 14, "steps_text": "Whats a desk build without a wall mounted monitor\nDrill the wall mount to the desired height and add the hooks to the back of your monitor/ TV\nAdd Leds behind the TV as shown in the image for more Aesthetics.\nYOU ARE NOW COMPLETED!!!!!\nDo some test runs and add your speakers and other externals you want\nthis build can be customized to any person and isnt limited to the guide.\nThank youu and please Vote !", "step_imgs": ["https://cdn.instructables.com/FC0/VJAI/JRV89C5J/FC0VJAIJRV89C5J.LARGE.jpg"], "step_title": "Step 14: CLEANING UP"}], "channel": "Computers"}, {"category": "Technology", "description": "Eye Guardian is an Arduino powered, High-Decibel continuous sound triggered eye protection wear. It detects heavy equipment sound and lowers protective eye goggles while the equipment is in use.\nOutline\nIn the first step, I will explain the Inspiration&Idea behind this project. Next, I will give you a Tools&Parts list that I have used to build this. Then I will explain the design choices I made and give you a guide to 3D print the parts needed for this instructable. After giving you a step by step assembly guide on the electronics and hat assembly I will end the instructable with a troubleshooting guide and a What's Next section where I will discuss what can be added or changed in the future.\nThe purpose of this instructable is not just to give you a cookbook. I'll show you the way I built this project and provide you with open-ended questions, so you can add your own ideas, and take this project even further.\nI strongly encourage you to share your build when it's done!\nLet's get started.", "title": "Eye Guardian: Sound Triggered Eye Protection", "url": "https://www.instructables.com/id/Eye-Guardian-Sound-Triggered-Eye-Protection/", "steps": [{"step": 1, "steps_text": "I try to wear eye protection when I use heavy equipment, but with the excitement of building something, I usually forget to wear it. While I was watching Adam Savage's One Day Builds I saw that I was not the only one. And I thought that many of the people who build things share the same problem with me. So I decided to build a hat that does it for me. The first thing I thought was to use Fourier Analysis to detect specific sounds, but later I decided that the algorithm should be as simple as possible to be used by everyone, It shouldn't be triggered only by my tools. And everyone should be able to edit the code to their own use. So after that, a prototyping journey has begun...", "step_imgs": [], "step_title": "Step 1: Inspiration & Idea"}, {"step": 2, "steps_text": "All the 3d parts & Code of this project is in the SafetyHat.zip folder attached to this step.\nTools:\nPliers\nDrill and 3mm Tip\nDiagonal Pliers\nSoldering Equipment\nBasic Sewing Equipment\nNote: This project requires some soldering and sewing knowledge, I won't get into the details, so if you're new to them I recommend you to check out some tutorials on solderingand sewing first.\nParts:\n1 x Electret Microphone Amplifier - MAX4466 with Adjustable Gain\n1 x Arduino Nano\n1 x Safety Goggles\n1 x Hat\n1 x 9g Micro Servo Motor\n1 x 9V Battery\n1 x Red LED\n1 x 220ohm resistor\n4 x (8mm m3 bolt&nut)\n3cm 0.8 mm brass wire", "step_imgs": [], "step_title": "Step 2: Tools & Parts"}, {"step": 3, "steps_text": "In this step, I will show you how I designed the parts in Fusion 360 in detail. If you just want to print the parts, you can skip this step.\nNote: I suggest you read this step in detail before you print anything. I designed the parts according to my dimensions of the hat. So it is best if you design the structure according to your dimensions/parts.\nDetailed comments are attached to the images as notes, check them out!\nPrinting\nPrinter: Tevo Tornado\nI used PLA to print the parts, my settings are:\n0.4 nozzle\n50% infill\ntemp. 195C", "step_imgs": ["https://cdn.instructables.com/FNF/W2HM/JROTDTA8/FNFW2HMJROTDTA8.LARGE.jpg", "https://cdn.instructables.com/F63/U1Y7/JROTDUI6/F63U1Y7JROTDUI6.LARGE.jpg", "https://cdn.instructables.com/FU6/XMNG/JROTDTDL/FU6XMNGJROTDTDL.LARGE.jpg", "https://cdn.instructables.com/FA0/B6LF/JROTDUHJ/FA0B6LFJROTDUHJ.LARGE.jpg", "https://cdn.instructables.com/FGG/NH1W/JROTDUHH/FGGNH1WJROTDUHH.LARGE.jpg", "https://cdn.instructables.com/FZ0/68UQ/JROTDUHM/FZ068UQJROTDUHM.LARGE.jpg"], "step_title": "Step 3: Design & Print"}, {"step": 4, "steps_text": "I recommend you to create a prototype first before soldering anything. As seen in the second image some jumper cables and a breadboard is enough to test the setup.\nAfter You've assembled the prototype, upload the code to the Arduino and check the serial monitor while using a drill or other loud tool(Dremel etc.). If It doesn't display drill on the serial monitor while the tool is used, edit the sensitivity value in the code until you are satisfied.\nNow you can start soldering!\nNote: I didn't explain the Arduino setup in detail. If you did not use an Arduino board before you can check this tutorial first:\nhttps://www.instructables.com/class/Arduino-Class/", "step_imgs": ["https://cdn.instructables.com/F7K/00EA/JROTDJJ8/F7K00EAJROTDJJ8.LARGE.jpg", "https://cdn.instructables.com/FAU/0YDW/JROTDIZ1/FAU0YDWJROTDIZ1.LARGE.jpg", "https://cdn.instructables.com/FV3/ZJWB/JROTDIZ4/FV3ZJWBJROTDIZ4.LARGE.jpg", "https://cdn.instructables.com/F79/G1W8/JROTDIZV/F79G1W8JROTDIZV.LARGE.jpg", "https://cdn.instructables.com/FA1/HLHK/JROTDIZY/FA1HLHKJROTDIZY.LARGE.jpg", "https://cdn.instructables.com/FG4/1QM9/JROTDJ03/FG41QM9JROTDJ03.LARGE.jpg"], "step_title": "Step 4: Assembly: Electronics"}, {"step": 5, "steps_text": "I used Velcro to attach the board and battery to the hat. You can also sew them directly to the hat if you want.", "step_imgs": ["https://cdn.instructables.com/FGF/KHC0/JROTDW9N/FGFKHC0JROTDW9N.LARGE.jpg", "https://cdn.instructables.com/FUQ/TILL/JROTDJ02/FUQTILLJROTDJ02.LARGE.jpg", "https://cdn.instructables.com/FD0/IGRS/JROTDIYV/FD0IGRSJROTDIYV.LARGE.jpg", "https://cdn.instructables.com/F3P/EM4S/JROTDJ0X/F3PEM4SJROTDJ0X.LARGE.jpg"], "step_title": "Step 5: Assembly: Sewing"}, {"step": 6, "steps_text": "You'll need a drill and a caliper for this step. First carefully drill a hole into the middle of the goggles. While wearing the hat and goggles measure where the google is intersecting with the hinge and mark it. now drill a hole on the hinge and attach the goggles to the hinge along with the carrier piece using the m3 bolt.", "step_imgs": ["https://cdn.instructables.com/FPV/YXHN/JROTDJ0Z/FPVYXHNJROTDJ0Z.LARGE.jpg", "https://cdn.instructables.com/FK4/8WGS/JROTDXIV/FK48WGSJROTDXIV.LARGE.jpg", "https://cdn.instructables.com/FWX/XZLW/JROTDJ01/FWXXZLWJROTDJ01.LARGE.jpg", "https://cdn.instructables.com/F7S/5JWP/JROTDJ0W/F7S5JWPJROTDJ0W.LARGE.jpg"], "step_title": "Step 6: Assembly: Googles & Hat"}, {"step": 7, "steps_text": "Connect the 9v battery to the circuit and you are ready to go! Get a drill and test if the googles correctly align with your face.", "step_imgs": ["https://cdn.instructables.com/F51/L09W/JROTDJ10/F51L09WJROTDJ10.LARGE.jpg", "https://cdn.instructables.com/FVW/EEB7/JROTDJ11/FVWEEB7JROTDJ11.LARGE.jpg"], "step_title": "Step 7: First Test"}, {"step": 8, "steps_text": "+ Servo is not working / Arduino is resetting\n- The battery you are using could be empty I had the same Issue while I tested my circuit with an old battery\n+ The code doesn't work / sound doesn't trigger the circuit\n- The gain level of the microphone module can be changed thanks to a potentiometer on the board. Get a small screwdriver and try to adjust the level.\n+ The led is not working\n- Make sure you are using the right resistor.\n+ The goggles do not open fully\n- Edit the servo values in the code until you are satisfied. If this doesn't solve your problem try to change the orientation of your hat. some hats have a front with a slight slope.", "step_imgs": [], "step_title": "Step 8: Troubleshooting"}, {"step": 9, "steps_text": "This is not a finished project, it's a prototype. There are a lot of things that can be added or changed. I've only used this hat 2-3 times while working and found out some things that can be improved.\nThis is where you come in. In this step, I will list some things I had in my mind. Feel free to add more Ideas or ways to improve this project in the comments.\nHere are a few,\nA button can be added to manually control the goggles\nA wireless charger module and rechargeable battery can be added so It will be fully charged while not in use.\nThe electronics can be hidden by creating/sewing a custom hat.\nI hope you enjoyed this project,\nIf you have any questions ask away! & tell me about your build!", "step_imgs": [], "step_title": "Step 9: What's Next"}], "channel": "Arduino"}, {"category": "Technology", "description": "Many beginner vinyl collectors don't know much about records or how to properly take care of them. One of the first things I looked into when I started collecting is how to properly clean vinyl. There are many different people that will tell you various methods. Most of the methods I have seen include making a solution using isopropyl alcohol and some even recommend spreading wood glue over the record's grooves.\nTo me, the methods mentioned above seemed like very harsh ways of cleaning vinyl. The alcohol method makes a record look clean and shiny but many people claim that it can warp a record over time. The wood glue method seems very risky because you have to let the glue dry on the record and then peel it off. I personally would be afraid to let wood glue dry on any of my records, especially one that I enjoy or is valuable.\nI found that a simple and cheap method of using soap and distilled water to clean vinyl records works really well and involves very low risk.", "title": "Simple Way to Clean Vinyl Records", "url": "https://www.instructables.com/id/Simple-Way-to-Clean-Vinyl-Records/", "steps": [{"step": 1, "steps_text": "A small to medium sized clean bowl\nDistilled water\nDish soap\n2 to 3 clean microfiber cloths\nA sink (not pictured)\nA record cleaning brush (not pictured)\nLink to record cleaning brush: https://www.amazon.com/Record-Cleaning-Velvet-Brus...", "step_imgs": ["https://cdn.instructables.com/FPT/KZH4/JRUYSEBN/FPTKZH4JRUYSEBN.LARGE.jpg"], "step_title": "Step 1: Gather Materials"}, {"step": 2, "steps_text": "Put a small amount of dish soap in the bowl.\nAdd about 1-2 inches of distilled water to the bowl or enough so the soap and water can be easily mixed.\nFold one of the microfiber cloths and use a corner of the cloth to mix the soap and water well.\nYou could use normal tap water instead of distilled water but it may leave mineral deposits in the grooves. Many online forums suggest using distilled water for this reason, and it's only about $0.80 per gallon at most grocery stores.", "step_imgs": ["https://cdn.instructables.com/FDP/5NTP/JRUYSE9I/FDP5NTPJRUYSE9I.LARGE.jpg", "https://cdn.instructables.com/FMS/SSXV/JRUYSJHT/FMSSSXVJRUYSJHT.LARGE.jpg", "https://cdn.instructables.com/F6Q/7QGQ/JRUYSE9N/F6Q7QGQJRUYSE9N.LARGE.jpg"], "step_title": "Step 2: Prepare the Water & Soap Mixture"}, {"step": 3, "steps_text": "Using the wet microfiber cloth used to mix the soap and water, wet one side of the record entirely.\nDip the microfiber cloth in the soap and water mixture again and scrub the record in the direction of the grooves with light pressure 5-10 times around the entire grooved surface. Ensure that the grooves are entirely coated with a soapy film.\nFlip the record over and repeat this process on the other side.\nBe careful not to get the soap and water on the label. The label won't come off if water gets on it; however, soap and water probably isn't the greatest thing to repeatedly get on a paper label.\nAlso, be sure to only touch the record on the edge so you don't touch the grooves.", "step_imgs": ["https://cdn.instructables.com/F88/NRQQ/JRUYSE9L/F88NRQQJRUYSE9L.LARGE.jpg", "https://cdn.instructables.com/FPU/4LPA/JRUYSE9R/FPU4LPAJRUYSE9R.LARGE.jpg"], "step_title": "Step 3: Clean the Record"}, {"step": 4, "steps_text": "Put the soap-covered record over a sink and angle it down toward the bottom of the sink.\nPour distilled water over the grooves to get all of the soap off the record.\nFlip the record over and rinse the other side.\nLet as much excess water run off as possible.\nDry the record with a clean, dry microfiber cloth.\nTo do this, fold the cloth over the edge of the record so the cloth dries both sides of the record at once.\nIt will probably be easiest to dry the record with 2 cloths, one in each hand, spinning the record with your hands as you dry.\nPlace the record somewhere so that the grooves can dry out completely before playing the record.\nThis may take a couple of hours.\nI used the record's inner sleeve as a place to dry. A better option would be some type of stand that would allow both sides of the record to air dry.\nAgain, try not to get water on the record label when rinsing, and also only hold the record by its edge.", "step_imgs": ["https://cdn.instructables.com/FB5/EY7M/JRUYSIDQ/FB5EY7MJRUYSIDQ.LARGE.jpg", "https://cdn.instructables.com/F3B/PLFA/JRUYSEAP/F3BPLFAJRUYSEAP.LARGE.jpg", "https://cdn.instructables.com/F7V/SNKM/JRUYSEAR/F7VSNKMJRUYSEAR.LARGE.jpg"], "step_title": "Step 4: Rinse the Record With Distilled Water and Let Dry"}, {"step": 5, "steps_text": "After the record is completely dry, I like to place it on the turntable and lightly brush any dust that may have settled onto the surface while drying. I use a cheap velvet brush that I found on Amazon to do this while the record is spinning on the turntable.\nAlways store records in both inner sleeves and outer sleeves to keep dust out while storing. If the original inner sleeve is dirty or in rough shape, I would recommend buying new plastic inner sleeves online.\nAfter cleaning a record once with this method, you will probably never have to clean it this way again. Just always use the record cleaning brush before and after playing the record as well as keeping the stylus and platter clean.\nAfter cleaning this particular record, it does not sound perfect as the record has some surface scratches and scuffs due to being stored incorrectly in a pile of records for many years. It is important to note that this cleaning method will not restore a record's physical quality.\nThis method will prevent further damage caused by playing a dirty record and improve the sound quality minus the pops and crackles due to any existing physical defects.", "step_imgs": ["https://cdn.instructables.com/F5B/OOU3/JRUYSEAS/F5BOOU3JRUYSEAS.LARGE.jpg"], "step_title": "Step 5: Storing and Playing the Record"}], "channel": "Audio"}, {"category": "Technology", "description": "In this instructable I am going to show you how to make your own individually addressable LED hula hoop. Individually addressable means that each LED in the hoop can have a different color at the same time. I wanted to create some nice LED patterns and with individually addressable LEDs you have much more flexibility.\nThis was my first ever electronics project. As a first ever electronics project I can tell you that this was not an easy one. There were a lot of things to figure out and I wanted to share my discoveries with people who - like me when I started this project - don't have a lot of experience with electronics. This results in a very long instructable because it is very detailed. Please don't let this scare you off! If you are new to all this, the details will help you get through all the steps. You'll have all the instructions right here and there is no need to look up things separately. If you are experienced, you can skip big chunks of the instructable so it won't be such a long one for you!\nSo let's get started!\nList of materials:\nTransparent tube\nIf you're making a single hoop you need only 3m (order from NL): De Hoepelwinkel\nIf you're planning on making a lot of hoops you can buy in bulk (30m order from GB): Omega (get the biggest one: TYPP-3458-100 OD: 3/4\", 19mm; ID: 5/8\", 15.9mm)\nTube connector stuff (push button, rivets, tube connector piece)\nFor a single hoop: De Hoepelwinkel\nFor lots of hoops:\nConnector piece (outer diameter (OD) of the connector piece must be the same as inner diameter (ID) of the tube) order from Fancy-tapes\nRivets (get it at your local supply store)\nPushbutton (get it at your local supply store)\nBatteries Rechargeable Ni-MH AAA batteries, 8 pieces. The greater the capacity the better. (For example: Batteries)\nCharger Ni-MH trickle charge 4 cells minimum, 8 cells maximum: Charger\nLED strip Digital strip, so that each LED can be controlled individually. Order from Aliexpress because it is so much cheaper and so far they all work great! Get the 5m 30 IP30 option. (You don\u2019t need waterproof coating as the strip will be in the tube. Plus, it would take up too much space. Also, you don\u2019t want 60 LED\u2019s per meter because your batteries will run out twice as fast.) Note: this is the WS2812B but as I mentioned you could also go for WS2813.\nATtiny85 chip: ATtiny85\nBase ATtiny85 chip: base (optional)\nConnectors: jack plug and jack bus\nSlide switch (for example this one)\nPCB hard paper\nResistor 300 - 500 \u2126 (I use 430 \u2126)\nCapacitorElco 100 \u00b5F\nCapacitor 100 nF\nFuse 5v 5A\nSoldering wire: I use stiff wire (wire with a solid core) to connect the batteries. This will make it easier to handle, keep the batteries more in place, and easier to push the whole thing through the tube. I use flexible wire (soft core wire) for the connection between the PCB and the Jack bus, because the jack bus needs to be able to come out of the tube and be pushed back in to the tube easily. It is always good to stick to red wire for 5V, black or white for GND and other colours for data. It's less confusing when you stick to conventions. I use 3-core wire for LED wire connections because it's easy and keeps the wires together. This is optional though.\nShrink sleeve: Put heat shrink wherever you can. It's handy to get an assortment of heat shrink.\nList of tools:\nSoldering iron\nSolder tin\nThird hand (optional but very useful)\nMultimeter\nDrill\nDremel (with milling head, saw blade and sanding head)\nRivet pliers\nArduino Uno (and connection cable)\nArduino IDE (installed on your computer)\nCapacitor 10 \u00b5F (this is needed when using the Arduino to upload code onto the ATtiny85)\nJumper wires\nBreadboard\nBattery holder 4pcs (optional)\nBattery charger (optional)", "title": "Individually Addressable LED Hula Hoop", "url": "https://www.instructables.com/id/Individually-Addressable-LED-Hula-Hoop/", "steps": [{"step": 1, "steps_text": "In this project the challenge is to get all the electronics in the hula hoop tube of only 16mm diameter! We\u2019ll need to put the batteries in, a chip to control the LEDs, the LED strip, some other electronics parts and something to be able to charge the batteries when they're empty. I used Fritzing to visualise the whole setup. I find it useful to have it as a reference point, especially when you have a lot of wires everywhere it\u2019s handy to fall back on the image.\nLet\u2019s break up the project in smaller steps. Each bullet here is explained as a separate step below in more detail.\nFirst you can play around with the code that controls the LED strips. Just upload the code to an Arduino and connect a piece of LED strip. You can change the light patterns by editing the code. When you like the patterns you can transfer the code to the AtTiny chip.\nThen you\u2019re going to make the PCB. You solder the chip, the capacitors, the resistor, the fuse and a long piece of servo wire. Make sure to test your PCB!\nNext we\u2019re gonna make the hula hoop. Cut the tube at the desired length and cut out a hole for the switch.\nNow we\u2019re going to solder the batteries. Lay out the hoop and place your 8 batteries evenly around the hoop in order to spread the weight. Now you know the length of the wires you need and you can solder the batteries together.\nPut everything in the tube. Connect the batteries and the LED strip to the PCB. Tape the batteries to the LED strip to keep everything in place and pull everything through the hoop.\nThe charger. You are using a jack connection to charge the batteries in the hula hoop. Solder the jack plug to the charger. Solder the jack bus to the batteries.\nClosing the hula hoop. Add the switch by soldering the wires and pushing the switch into the hole you created for the switch. Then put the connector piece in the hula hoop. On one side put a rivet in, and on the other side put a push button in.\nOPTIONAL: Grip. You can add something like gaffer tape on the inside of the hula hoop to create some extra grip.\nAnd that\u2019s it! You\u2019ve got your hula hoop!", "step_imgs": ["https://cdn.instructables.com/FB5/K747/JR6OMPJI/FB5K747JR6OMPJI.LARGE.jpg"], "step_title": "Step 1: Getting Started"}, {"step": 2, "steps_text": "LED Strip\nAs mentioned I wanted an individually addressable LED hula hoop, for which I need an individually addressable LED strip. This is a WS2812 or WS2813 LED strip. Adafruit calls these type of LED strips neopixels. These type of LED strips run on 5 volts. WS2813 is a newer version of the WS2812 LED strip. The difference is that if an LED breaks in the WS2813 strip, the rest of the strip will still work. With the WS2812 strip, if an LED breaks in the strip all the LEDs that come after won't work anymore. The WS2812 has 3 connections on each side (5v, GND, Data-in or Data-out) whereas the WS2813 has an extra connection which makes sure the data signal is still passed on to the next pixel.\n(Note: The other main type of LED strip is the SMD 5050 which normally run on 12V. But, with this type of LED strip all the LEDS in the strip emit the same color at the same time. So it is completely ON with all LEDs in a certain color or completely OFF.)\nLED Controller\nI would like to be able to create and define the LED patterns for the hula hoop myself. This means I will write the code and put the code on a chip, which I will solder to a PCB. However, if you want to skip a few steps you can also decide to order a controller online. It comes with a remote to change between pre-programmed LED patterns. You can even adjust speed and brightness or just set the whole hoop to one color. Luckily, this controller fits in our hula hoop tube! If you're going for this option, you can jump to step 4.\nIn my case we need a programmable controller to tell the LEDs what to do. The easiest would be to use an Arduino. Unfortunately, an Arduino does not fit in our hula hoop tube (not even the Arduino Nano) so we will use an ATtiny85 chip. But for now we'll use an Arduino Uno to test our code because it is easier to upload new changes and to debug.\nUploading code to the Arduino Uno and testing it on the LED strip.\n(I've added a screen capture video of these steps as well.)\nOpen the hulahoop.ino file in the Arduino IDE.\nDownload the Adafruit Neopixel library\nIn the Arduino IDE import the library from Sketch -> Include Library -> Add .ZIP library and select the downloaded unzipped Adafruit library.\nCompile sketch\nConnect the Arduino Uno and attach LED strip according to the image.\nUpload sketch\nTools -> Board -> Arduino/Genuino Uno\nTools -> Port -> port with (Arduino/Genuino Uno)\nTools -> Programmer -> AVRISP mkll (default)\nClick upload\nCheck if you like the light patterns. If not, modify the code. Check your pattern in this setup. It is easier than changing the pattern when you are uploading code on the ATtiny chip. But beware, sometimes code may work on the Arduino and not on the ATtiny, for example because it has less memory. So make sure not to make too many changes without testing it on the chip.\nTransfer the code to the ATtiny85 chip\n(I've added a screen capture video of these steps as well.)\nOpen example sketch \u201cArduinoISP\" and upload to Arduino Uno. (Note: if you already setup your Arduino wired to the ATtiny, then make sure to take out the capacitor between RESET and GND when uploading this sketch.)\nConnect the ATtiny85 to your Arduino Uno like in the image. You will have to place a 10 \u00b5F capacitor between the RESET and GND on the Arduino Uno while uploading code to the ATtiny chip with the Arduino. Note, there is a small circle indent on the chip on top on the left side. Use this to make sure you place it the right way around.\nAdd ATtiny as a board in Arduino IDE (Skip this step if you already have ATtiny as a board installed):\nOpen the preferences dialog in the Arduino software.\nFind the \u201cAdditional Boards Manager URLs\u201d field near the bottom of the dialog.\nPaste the following URL into the field (use a comma to separate it from any URLs you\u2019ve already added): https://raw.githubusercontent.com/damellis/attiny/ide-1.6.x-boards-manager/package_damellis_attiny_index.json\nClick the OK button to save your updated preferences.\nOpen the boards manager in the \u201cTools > Board\u201d menu.\nType 'attiny' and click install.\nUpload the hulahoop.ino sketch to ATTiny85.\nChange the PIN number in the sketch to a PWM ATtiny pin such as 0. (PWM means Pulse Width Modulation which means that this pin can send a digital signal with a message encoded. The data signal that is sent over the pin holds a message namely the amount of R,G,B for each pixel in the strip. Not all pins are PWM. This is true for the Arduino as well as the ATtiny chip. You can google 'pinout attiny85' to find an image that shows the pin numbers with their types for the chip).\nTools -> Board -> ATtiny25/45/85\nTools -> Processor -> ATtiny85\nTools -> Clock -> Internal 8 MHz\nTools -> Programmer -> Arduino as ISP\nFirst, do Tools->Burn bootloader before uploading your sketch. If you skip this step, the chip might sometimes not work or show incorrect behaviour. Unfortunately, I don't really know why. I think it has to with the fact that the chip uses an internal clock unlike the Arduino. If the clock is not reset the timing might be off, which results in strange LED patterns.\nCheck that the code is working on the ATtiny chip. Wire the ATtiny chip to the LED strip as shown in the image. Connect power (\u00b1 5v). I use a battery holder with 4 rechargeable batteries (4 x 1.2v = 4.8v). Rechargeable batteries have a slightly lower voltage than non-rechargeable batteries. If you use normal non-rechargeable batteries for testing you should use only 3 (3 x 1.5v = 6v). Of course, in the hula-hoop you're going to use rechargeable batteries because you can't replace the batteries in the hoop.", "step_imgs": ["https://cdn.instructables.com/F7Q/BKIG/JR6OMTIP/F7QBKIGJR6OMTIP.LARGE.jpg", "https://cdn.instructables.com/F14/0TSD/JR6OMU15/F140TSDJR6OMU15.LARGE.jpg", "https://cdn.instructables.com/F3F/F59G/JR6OMUIY/F3FF59GJR6OMUIY.LARGE.jpg", "https://cdn.instructables.com/FZ5/R2QW/JR6ON0T3/FZ5R2QWJR6ON0T3.LARGE.jpg"], "step_title": "Step 2: LED Strip + Code"}, {"step": 3, "steps_text": "Next we will make the PCB onto which we put the chip. Additionally, the PCB will have some capacitors, a resistor, a fuse, connections to the batteries and a connection to the LED strip. We'll make it as small as possible. The smaller it is, the easier it is to manoeuvre in the tube. You can use a hand saw or a Dremel to cut out the right size from a hard-paper piece of PCB. I cut out a 15x5 holes piece. If you don't know how to solder, I'd recommend to watch some tutorials online. Don't worry, just try it out!!\nNote: if you decided to order an LED strip controller online, you can skip this step!\nNote 2: It is possible to make an even smaller PCB. You could design your PCB and order it online so that the connections are already embedded in the PCB and you only have to solder the components. However, I prefer to work with hard-paper PCB cutouts because it is easier to make adjustments or even just make a new one if you realise you've made a mistake somewhere. Another option for an even smaller PCB is to use a microchip ATtiny, but these are hard to solder because they are so small. I prefer to use the normal ATtiny in combination with a base, because you can solder the base to the PCB but still take out the chip in order to update the code.\nIt is always a good idea to start with an electrical scheme, which is shown in the image. In case you're not familiar with the symbols I've added labels to the image. The chip, the capacitors and the resistor are going to be soldered to the PCB. So start by laying out your components on the PCB hard-paper. Try to make them take up as little space as possible. Put the components that are to be connected close to each other. You can rearrange them until you know all connections can be made and you are happy with the layout. After you've laid out all your components on the PCB and you've made a plan of where the connections will be, you can start soldering all the components. You can have the pins sticking out a bit. This is handy in case you still want to make changes then you can desolder the components and bend the pins differently. Once all components are soldered and you are happy with the layout, you can use cutters to cut the pins short (this also minimises the height of the PCB). Finally, you can solder all the connections.\nNote: the 100 \u00b5F capacitor has a plus and minus pole, whereas the 100 nF capacitor doesn't. Normally when a component has a plus and minus pole, the plus is a little bit linger than the minus pole. Make sure to place the 100 \u00b5F capacitor the right way around on your PCB!\nNow that you have the base PCB, you can prepare the connections for later on (meaning the LED strip and the power). Connect a long enough piece of servo wire (a wire with 3 cores) to the PCB to which we\u2019ll connect the LED strip later on. The reference image of the setup that I added in step 1 shows that the servo wire needs to go from the opening of the tube until the PCB. Make sure the piece of servo wire is long enough, because it is easier to make it shorter than longer later on. You can also attach the fuse already. One side of the fuse is attached to the 5V on the PCB, the other side of the fuse will be connected to the switch. For now you can just solder a wire to it, which will be long enough to stick out through the hole in the tube.\nTest your PCB! As soon as you can test anything, do it. The first hula hoop I made I did not test at all. So when I was done and all electronics were in the hoop I turned it on and it didn\u2019t work. If you test each step then it's much easier to deduct what the problem could be. You can test the PCB by using crocodile clips for example, to connect the servo wire to a piece of LED strip. You can use a battery holder with 4 rechargeable batteries (or 3 non-rechargeable batteries) and connect it to the 5V and the GND on the PCB also with crocodile clips for example. If your piece of LED strip starts lighting up and showing your light pattern, you know all your soldered connections are good.", "step_imgs": ["https://cdn.instructables.com/FXL/BTL6/JREU7E56/FXLBTL6JREU7E56.LARGE.jpg", "https://cdn.instructables.com/FHA/ZK2A/JREU7E7W/FHAZK2AJREU7E7W.LARGE.jpg", "https://cdn.instructables.com/FL5/WXAW/JREU7EB0/FL5WXAWJREU7EB0.LARGE.jpg", "https://cdn.instructables.com/F1X/5ZV3/JREU7FTW/F1X5ZV3JREU7FTW.LARGE.jpg", "https://cdn.instructables.com/FZL/WJGL/JRQOMDPC/FZLWJGLJRQOMDPC.LARGE.jpg", "https://cdn.instructables.com/FTE/782B/JRQOMDPF/FTE782BJRQOMDPF.LARGE.jpg", "https://cdn.instructables.com/F1P/GFQV/JRQOMDPG/F1PGFQVJRQOMDPG.LARGE.jpg"], "step_title": "Step 3: The PCB"}, {"step": 4, "steps_text": "I want to make a 36\u201d inch hoop, which is a 91.44 diameter hoop. That means I need a tube length of 2.87 meters. I used a bit of rope to measure the length of the tube and marked the tube where I want to cut it. The tube also needs a hole where the switch is going to be. I prefer to make the hole before I cut the tube, just in case I mess up the hole then I will only need to remove a small bit from the tube instead of cutting out a whole new piece.\nTo determine where the hole for the switch will be, refer to the reference setup image provided in the beginning. There will be a jack bus and a push button before the switch. In my case the switch ended up being at about 9.5 cm from the start of the tube. Use a dremel with a milling head to make a hole in the hoop, exactly at the size of the switch. Keep checking the hole with the switch because the tighter the hole the better. If you can push the switch in with a bit of pressure then it\u2019s just perfect.\nWhen the hole is done, cut the tube at the marked bit with the dremel with a sawing head. You can also use a normal saw for this. You might want to use the dremel with a sanding head or normal sandpaper, to smooth the ends of the hoop.", "step_imgs": ["https://cdn.instructables.com/FOP/JN3Y/JRQOMG8V/FOPJN3YJRQOMG8V.LARGE.jpg"], "step_title": "Step 4: The Hula Hoop Tube"}, {"step": 5, "steps_text": "The LED strip and the ATtiny chip both work on 4.5V - 5.5V. Rechargeable batteries are 1.2V each, so we will put 4 of these in series to get 4.8V. We\u2019re using AAA batteries because although AA batteries do fit in the hula hoop tube by themselves, we also need a little bit of space for the wires. (You won\u2019t be able to get all AA batteries with wiring through the hoop. Trust me, I tried). To prolong the on-time of the hoop we use another set of 4 rechargeable batteries and place these parallel. Placing them parallel keeps the voltage but doubles the amperage! It\u2019s actually quite nice to use 8 batteries in total because this allows us to spread the weight nicely over the hoop. Also, the total weight of the hoop gets to about 500 grams which is perfect. If you're a bit confused about the batteries being 'in series' or 'parallel' then just refer to the setup image. The image shows the connections of the batteries and how to spread them around the hoop.\nBefore you get started with soldering the batteries, make sure they are all fully charged. I use a wall socket charger for the initial charge. First of all it\u2019s easier to test your setup when your batteries are full. But also, in your circuit the batteries need to be equally charged. After you soldered them, it will be more difficult to get them equally charged. This is mainly because we will use a trickle charger (or slow charger). There also exist fast chargers, which can very rapidly charge the batteries and they make sure the batteries are equally charged! But it's a more complicated circuit and a little more dangerous, so we will stick to the slow charger and just charge our batteries beforehand. Please be careful when soldering the batteries. Although the tin doesn\u2019t stick so easily on the batteries do try to be quick so you don\u2019t overheat them. (I saw an intractable about how to make soldering batteries easier by filing them a little bit first. I haven't tried this myself).\nSo now lay out the hula hoop and place your batteries such that all 8 of them are spread around the hoop evenly. Now measure how long the wire between the batteries should be. Keep in mind that you\u2019ll bend the ends of the wire to be able to solder it to the battery.\nYou are soldering 4 batteries in series, thus solder the positive end of one battery to the negative end of the next battery. I find it easiest if the batteries are facing with their positive side towards the PCB. It is also better to minimize the distance between the 5V power supply and the chip and LED strip. This way the far end is the GND. When you soldered the batteries together you can use the multimeter to measure if both packs generate a voltage of about 5V.\nWhen you\u2019ve made both packs of batteries in series, you\u2019re going to make them parallel to each other. Connect the free negative ends of the battery packs, such that they go over into 1 wire. This wire will have to be taken through the entire hoop. This wire will then split up so that one end goes to the PCB and the other to the charger. The charger will be connected by a jack plug and the jack bus will be placed in the hoop opening (see hoop setup image).\nNow also connect the free positive ends, such that they merge into one wire. This wire will go to the middle pole of the switch. The switch will have 2 modes: ON OFF/CHARGING. For both modes you need a connection to the batteries which is why this positive battery wire goes to the middle pole of the switch.\nYou can check again if the 2 packs of soldered batteries still generate a voltage of about 5V.", "step_imgs": ["https://cdn.instructables.com/FXW/EOFX/JRQOMMLU/FXWEOFXJRQOMMLU.LARGE.jpg"], "step_title": "Step 5: The Batteries"}, {"step": 6, "steps_text": "Now you want to put all your components in the tube: the LED strip, the batteries and the PCB.\nFirst you tape the batteries to the LED strip. This will make it easier to handle the wires and the batteries and to get everything in the hula hoop tube. It also makes sure the batteries won\u2019t move around too much in the tube while you\u2019re hooping.\nThen solder the servo wire to the LED strip. You want the LED strip to cover the entire tube (no gap). So measure how long your servo wire should be, by placing the components next to the tube and measuring the distance from the tube opening to the position of the PCB. The LED strip cannot be bent 180\u00b0 so your servo wire has to make the bend. Keep this in mind when measuring how long the wire has to be. Finally solder the negative wire from the batteries to the PCB. You will also have a piece of negative wire sticking out of the tube which will be soldered to the jack connection later.\nNow you can pull the whole thing through the tube. Make sure the LEDs are pointing outward. Also make sure the positive wire from the batteries and the positive wire from the PCB (fuse) stick out through the hole for the switch. The negative wire should stick out as well, but then from the tube opening instead of the switch hole.\nIt's a good idea to test your circuit again before putting everything in the tube!", "step_imgs": ["https://cdn.instructables.com/F1I/Z1GO/JRQOPP2P/F1IZ1GOJRQOPP2P.LARGE.jpg", "https://cdn.instructables.com/F4Y/0CZP/JRQOPP1Q/F4Y0CZPJRQOPP1Q.LARGE.jpg"], "step_title": "Step 6: Put Everything in the Tube"}, {"step": 7, "steps_text": "If the charger doesn\u2019t have a jack connector then cut off the connector and strip the wires. You need to know which wire is negative and which is positive. You can use the multimeter to measure the voltage when the charger is plugged in (make sure the stripped wires don\u2019t touch each other!!). When the voltage is about 5.6V you know you have your positive measuring end on the positive charger wire. If the voltage is about -5.6V you have your positive measuring end on the negative charger wire.\nUnscrew the jack plug and pull your wire through the plastic cap of the jack plug (if you forget this, you\u2019ll have to desolder the plug because you won\u2019t be able to pull the cap over). Now solder the positive wire to the center connection of the jack plug and the negative wire to the outer connection of the jack plug.\nThe jack bus will have to be able to stick out of the hula hoop tube for charging (otherwise you cannot put the jack plug in), but when hooping the jack bus should be inside the hoop behind the push button. Thus, it is easiest if you use a piece of soft wire for this, although it is also possible with stiff wire. Solder a piece of wire to the positive connection (refer to the image). The negative connection of the jack bus comes directly from the batteries and PCB.\nYou can test the charger by using a crocodile clip to connect the jack bus positive wire to the batteries positive wire and plugging in the charger. The charger should show a red light meaning that it\u2019s charging.", "step_imgs": ["https://cdn.instructables.com/F05/VUDK/JRQON4OA/F05VUDKJRQON4OA.LARGE.jpg", "https://cdn.instructables.com/F46/F9JN/JRQON4OB/F46F9JNJRQON4OB.LARGE.jpg", "https://cdn.instructables.com/FVY/SN8C/JRQON4OC/FVYSN8CJRQON4OC.LARGE.jpg"], "step_title": "Step 7: Charger"}, {"step": 8, "steps_text": "Now that everything is in the tube (the batteries, the LED strip, the PCB and the jack bus) you\u2019re going to connect the switch to your circuit. First, use a dremel to saw off the bit that sticks out from your switch. When you\u2019re hooping this would be an annoying and it\u2019s not needed to operate the switch.\nThen connect the 3 positive wires that are sticking out through the hole for the switch. The middle switch connection should be the wire going to the batteries, because either the batteries are used to power the hoop or the batteries are being charged. In either mode you need a connection to the batteries.\nAnother switch connection goes to the fuse wire (which goes to the PCB). The last switch connection goes to the charger wire. For these two connections it doesn\u2019t matter which switch connection goes to which wire. But to be sure, during soldering, set the switch to the side you\u2019re not soldering. I find it handy to connect the charger to the switch on the side of the tube opening, because that\u2019s where it\u2019s physically located.\nOnce you soldered the 3 connections, push the switch into the hole of the tube. You can use electrical tape or small rivets or screws to secure the switch more firmly. Now the hula hoop has two modes: 1. ON 2. OFF (or charging if the charger is plugged in).\nYou can test your switch. When it is in ON mode, you should see the light pattern in your hoop. When you switch it to OFF mode the lights should be off. Then if you connect the charger, the light on the charger should be on to indicate that the batteries are being charged.\nFinally you can put the connector piece in the hula hoop. On the side of the tube where the jack bus is located you\u2019re going to put a push button. Drill a hole through the outer and inner tube for the push button. The push button should come in front of the jack bus. On the other side of the tube drill a hole through the outer and inner tube for a rivet. Use rivet pliers to get your rivet in.\nNOTE: your rivet and your push button are metal. Your LED strip has bits of exposed copper, to which you can make connections. If your rivet or push button ends up touching the copper of the LED strip this might give unexpected behaviour. Keep this in mind when closing the hoop. You will want to put some electrical tape at the ends of the LED strip, to insulate the exposed bits of copper.\nNow, your hoop is finished! And everything should stay in place whilst hula hooping!\nAs a bonus you could add gaffer tape on the inside of the tube, to create better grip.\nEnjoy!", "step_imgs": ["https://cdn.instructables.com/FOO/CE2Z/JRQONB2W/FOOCE2ZJRQONB2W.LARGE.jpg", "https://cdn.instructables.com/FVW/D3F1/JRQOPQ35/FVWD3F1JRQOPQ35.LARGE.jpg", "https://cdn.instructables.com/FMY/ZN81/JRQOPP2Q/FMYZN81JRQOPP2Q.LARGE.jpg", "https://cdn.instructables.com/F7K/8E1P/JRQONB3U/F7K8E1PJRQONB3U.LARGE.jpg"], "step_title": "Step 8: Closing the Hoop"}, {"step": 9, "steps_text": "The hula hoop was a gift to my awesome friend Ashlee who's a great hooper. She's the one in the pics and videos. You can find more really cool stuff on her facebook page.", "step_imgs": [], "step_title": "Step 9:"}], "channel": "LEDs"}, {"category": "Technology", "description": "Remember those DC motors, all you need too do is to hook up the positive and negative leads to a battery and holla it starts running. But as we started doing more complex projects those DC motors doesn't seems to deliver what you need.... yes I mean efficiency, precision and above all torque without any gear reduction.\nWell the story started as I planned to built a semi automatic drill press which can help you drill through objects like a usual drill press but with the help of a foot pedal so that you can hold the object with both your hands without the need of a helping hand. Long story short I need a motor that can move the drilling head up and down precisely and also offers a good amount of torque.\nFailing to get all those from a simple DC motor I decided to use a stepper motor. Yes the one that has four wires and thats all I knew about them.So I in this instructables we are going to make a controller for these four wire stepper motors that enables us to control the speed and direction of the motor without using a micro controller.", "title": "DIY Stepper Motor Controller", "url": "https://www.instructables.com/id/DIY-Stepper-Motor-Controller/", "steps": [{"step": 1, "steps_text": "The goal of this project is to simplify the use of a stepper motor by making a modular controller that can easily drive the stepper motor without the need of incorporating a micro controller to do the job.\nThe controller we are going to built is based around A4988 stepper motor driver.Its a relatively cheap and can easily be found on any online electronics store.Now before we get into more details have a look at the data sheet of the stepper driver.\nThe driver needs a PWM input on the step pin to operate the motor. Increase in frequency of the PWM signal results in higher RPM and vice versa. To control the direction of motor the Dir pin of the driver can be toggled between the VCC and ground terminal.\nThe driver operates on 5v (VDD) and the VMOT represents the voltage for the motor which can range from 8-35VDC. The coils of the motor is going to be connected to the 1A,2A,1B,2B connections respectively.\nNow to generate the desired PWM signal we are going to use a 555 timer IC. Here we are going to use a 10k potentiometer to change the output frequency of the PWM signal which will help us to control the speed of rotation. The rest of them are a bunch of complimentary components.", "step_imgs": ["https://cdn.instructables.com/FKH/XOBS/JR4TD8EF/FKHXOBSJR4TD8EF.LARGE.jpg", "https://cdn.instructables.com/FLV/ZL7A/JRQOKMY9/FLVZL7AJRQOKMY9.LARGE.jpg"], "step_title": "Step 1: Concept and Schematic"}, {"step": 2, "steps_text": "After finalising the schematic I have done initial testing over breadboard and everything seems to work flawlessly. The motor precise, efficient and have good amount of torque. But the problem is that its a mess on a breadboard and doing this thing on a perfboard is not going to be an option.\nSo, I have decided to design the PCB for this controller which took some time but I have made sure that all the connections are correct plus I have also added all the complimentary components to make using this controller as easy to use as possible.\nNow with the design of the PCB finalised I headed upto PCBWAY and uploaded my Gerber files to get my PCBs. After going through a bunch of options I have ordered my PCBs. They are offering great quality PCBs at amazing prices. A big thanks to PCBWAY for making this project possible so make sure you checkout their website to order your customised printed circuit boards.\nThe link to the PCBs and the Gerber files for the circuit boards is:\nhttps://www.pcbway.com/project/sharep...\nPCBWAY :\nhttps://www.pcbway.com", "step_imgs": ["https://cdn.instructables.com/FHU/TLDR/JR4TD8AL/FHUTLDRJR4TD8AL.LARGE.jpg", "https://cdn.instructables.com/F35/56VQ/JR4TD8CM/F3556VQJR4TD8CM.LARGE.jpg", "https://cdn.instructables.com/FTI/ZUK3/JR4TD8YL/FTIZUK3JR4TD8YL.LARGE.jpg", "https://cdn.instructables.com/F9D/KPE9/JR4TD92Y/F9DKPE9JR4TD92Y.LARGE.jpg"], "step_title": "Step 2: Designing the PCB"}, {"step": 3, "steps_text": "The list of tools and component for this project is given below:\nTOOLS REQUIRED:\nSoldering Iron\nSoldering Wire\nPliers\nSTEPPER MOTOR DRIVER:\nhttps://www.banggood.com/3D-Printer-A4988-Reprap-S...\nBILL OF MATERIAL (BOM File):", "step_imgs": ["https://cdn.instructables.com/FGD/TZSB/JRQOKGHY/FGDTZSBJRQOKGHY.LARGE.jpg", "https://cdn.instructables.com/FUL/EFO5/JR4TD0IR/FULEFO5JR4TD0IR.LARGE.jpg", "https://cdn.instructables.com/FQZ/6PDM/JR6OMK1F/FQZ6PDMJR6OMK1F.LARGE.jpg", "https://cdn.instructables.com/FJ9/0QE7/JR6OMKOL/FJ90QE7JR6OMKOL.LARGE.jpg"], "step_title": "Step 3: Tools and Components"}, {"step": 4, "steps_text": "The PCBs arrived within just a week and the quality is flawless. Now as I get my hands on the boards I gathered all the components and started assembling them as indicated on the boards.\nThe best thing about putting up so much time designing the boards is that now you can produce as many copies as needed and all you need to do is to drop the components as shown on the boards.", "step_imgs": ["https://cdn.instructables.com/F8P/CBXM/JR6OMKSA/F8PCBXMJR6OMKSA.LARGE.jpg", "https://cdn.instructables.com/FNN/YM9P/JR6OML10/FNNYM9PJR6OML10.LARGE.jpg", "https://cdn.instructables.com/FL8/JX6X/JR6OML5U/FL8JX6XJR6OML5U.LARGE.jpg", "https://cdn.instructables.com/FPQ/D87E/JR4TD2AK/FPQD87EJR4TD2AK.LARGE.jpg", "https://cdn.instructables.com/FCX/6XST/JR6OML9L/FCX6XSTJR6OML9L.LARGE.jpg", "https://cdn.instructables.com/FUK/IG0E/JR4TD2MW/FUKIG0EJR4TD2MW.LARGE.jpg", "https://cdn.instructables.com/FOW/RS1H/JR6OMLD3/FOWRS1HJR6OMLD3.LARGE.jpg", "https://cdn.instructables.com/FXX/JF3D/JR6OMLDR/FXXJF3DJR6OMLDR.LARGE.jpg", "https://cdn.instructables.com/FZ7/KMBX/JR6OMLDT/FZ7KMBXJR6OMLDT.LARGE.jpg"], "step_title": "Step 4: Assembling the Boards"}, {"step": 5, "steps_text": "Once the boards is ready I have inserted the 555 timer and the stepper motor driver in place and connected the motor to the board. After that I have connected the 12v battery by using pair of alligator clips to power the board.", "step_imgs": ["https://cdn.instructables.com/FEA/J8B8/JR6OMLDV/FEAJ8B8JR6OMLDV.LARGE.jpg", "https://cdn.instructables.com/FVR/7XSM/JR6OMLDX/FVR7XSMJR6OMLDX.LARGE.jpg", "https://cdn.instructables.com/F0N/KHYC/JR6OMLE0/F0NKHYCJR6OMLE0.LARGE.jpg", "https://cdn.instructables.com/F1B/S851/JR6OMLEV/F1BS851JR6OMLEV.LARGE.jpg", "https://cdn.instructables.com/F5F/COZH/JR6OMLER/F5FCOZHJR6OMLER.LARGE.jpg", "https://cdn.instructables.com/F53/I9TJ/JR6OMRP8/F53I9TJJR6OMRP8.LARGE.jpg", "https://cdn.instructables.com/FPK/1D32/JR6OMRJ8/FPK1D32JR6OMRJ8.LARGE.jpg", "https://cdn.instructables.com/FWJ/96H0/JR6OMRMX/FWJ96H0JR6OMRMX.LARGE.jpg", "https://cdn.instructables.com/FE0/JJ25/JR6OMRN9/FE0JJ25JR6OMRN9.LARGE.jpg", "https://cdn.instructables.com/FXC/MJC2/JR6OMRNJ/FXCMJC2JR6OMRNJ.LARGE.jpg"], "step_title": "Step 5: Setting Up Everything"}, {"step": 6, "steps_text": "Once the controller is connected to the 12v battery. The motor started to rotate. Everything seems to run as expected. The direction of rotation can be changed by toggling the switch and the speed of rotation can be controlled by turning the knob of the potentiometer.", "step_imgs": ["https://cdn.instructables.com/F34/JDRQ/JR6OMROC/F34JDRQJR6OMROC.LARGE.jpg", "https://cdn.instructables.com/FX3/R5HC/JRQOKPCB/FX3R5HCJRQOKPCB.LARGE.jpg", "https://cdn.instructables.com/FLX/FYV9/JR6OMRMW/FLXFYV9JR6OMRMW.LARGE.jpg", "https://cdn.instructables.com/F7Y/D4SB/JR6OMRLZ/F7YD4SBJR6OMRLZ.LARGE.jpg", "https://cdn.instructables.com/FBS/8328/JR6OMRL0/FBS8328JR6OMRL0.LARGE.jpg"], "step_title": "Step 6: End Results"}], "channel": "Electronics"}, {"category": "Technology", "description": "The eight different size and color 3D printed \"print in place\" hinged containers appearing in the cover photograph of this Instructable do have one thing in common; they were all printed from a single Autodesk Fusion 360 model using \"parametric modeling\".\nIn a CAD environment, a parametric model is a model whose size and / or shape may be altered simply by changing dimensional values. In this model, I specified the dimensional values in the Autodesk Fusion 360 \"Change Parameters\" menu for the Length, Depth, Height, Thickness and Tolerance dimensions of a simple \"print in place\" hinged container. I then designed sketches for the base, lid and ball and socket hinges, and extruded the various components, using the dimensional values I entered. Thus to change the length of the container, I simply change the Length dimension, to change the depth, I change the Depth dimension and to change the height, I change the Height dimension. When any of the dimensional values on the Change Parameters menu are altered, Autodesk Fusion 360 rebuilds the container to the new dimensions, creating a new model ready for 3D printing, thanks to parametric modeling.\nWhile designing this model, friends of mine questioned as to why I simply didn't scale the model using Cura (the slicer we use) prior to printing. The answer is when Cura scales a model, it scales everything, including the tolerances (or \"clearance\") between the parts. Thus when scaled up, the hinge becomes loose, and when scaled down, the hinge becomes tight, or even \"welded\". Parametric modeling ensures the user specified Tolerance (clearance) dimensions are maintained as the model dimensions are changed.\nNow the caveats, the model is not without flaws. For example, no limits have been imposed on the dimension values so entering \"reasonable\" values is up to the user. I suggest using values greater than or equal to those I initially placed in the Change Parameters menu. Negative values are a definite no-no, and excessive Height values in relation to the Length and Width values will cause interesting and problematic side effects. If \"non-reasonable\" values are entered, errors may (or may not) appear in the timeline of the model to warn that the model, with the specified dimensions, is not printable, so examine both base and lid components prior to printing. And as testing all possible combinations of dimensional values would require time far exceeding my remaining lifetime, I simply did not have the time to test them all.\nI've included the Autodesk Fusion 360 file \"Print In Place Parametric Hinged Container.f3d\" (UPDATE: a new file \"Print In Place Parametric Hinged Container v1.f3d\" has also been uploaded, see the final step for a description of the update) which includes the model details, and in the steps that follow are videos showing the steps I performed in creating this model (the videos may be slightly outdated, so stick with the .f3d file for updated details). Familiarity with the Autodesk Fusion 360 environment is highly recommended, and I'm always open to questions, suggestions, comments and criticisms (friendly please) so please feel free to comment and I'll do my best to respond as to why I chose the methods I did in creating this model.\nAs usual, I probably forgot a file or two or who knows what else, so if you have any questions, please do not hesitate to point them out as I do make mistakes in plenty.\nDesigned using Autodesk Fusion 360, sliced using Cura 3.5.1, and printed in PLA on an Ultimaker 2+ Extended and an Ultimaker 3 Extended.", "title": "Designing a Parametric Parametric \"Print in Place\" Hinged Container", "url": "https://www.instructables.com/id/Designing-a-Parametric-Print-in-Place-Hinged-Conta/", "steps": [{"step": 1, "steps_text": "The model design starts with dimensioning, and I recommend starting with the values shown in the video.", "step_imgs": [], "step_title": "Step 1: Dimensioning."}, {"step": 2, "steps_text": "In this step, the outside perimeter of the base is defined as a series of lines using the dimensions Width and Depth (note that a rectangle was not used in this step since when the outside 4mm corner fillets are added, the rectangle constraints are removed causing the model to fail). The base wall thickness is defined towards the base interior using the Thickness dimension. Finally, the base is extruded.", "step_imgs": [], "step_title": "Step 2: Base."}, {"step": 3, "steps_text": "In this step, the sketch and extrusion for the base hinge are created. Note the hinge center line is (Height / 2) above the X axis.", "step_imgs": [], "step_title": "Step 3: Base Hinge."}, {"step": 4, "steps_text": "In this step, the sketch and revolve for the base hinge ball joints are created.", "step_imgs": [], "step_title": "Step 4: Base Hinge Ball."}, {"step": 5, "steps_text": "In this step, the inside perimeter of the lid is defined as a series of lines using the dimensions Width, Depth and Tolerance (note that a rectangle was not used in this step since when the outside 4mm corner fillets are added, the rectangle constraints are removed causing the model to fail). The lid wall thickness is defined towards the lid exterior using the Thickness dimension. Finally, the lid is extruded.", "step_imgs": [], "step_title": "Step 5: Lid."}, {"step": 6, "steps_text": "In this step, the sketch and revolve for the lid hinge sockets are created.", "step_imgs": [], "step_title": "Step 6: Lid Hinge Sockets."}, {"step": 7, "steps_text": "In this step, the sketch and extrusions for the lid to lid hinge sockets are created.", "step_imgs": [], "step_title": "Step 7: Lid to Lid Hinge Sockets Connection."}, {"step": 8, "steps_text": "In this final step, color, joint, joint limits and animation of the lid are created.\nAnd that is how I created Designing a Parametric \"Print in Place\" Hinged Container Using Autodesk Fusion 360.\nHope you enjoyed it!\nUPDATE:\nI forgot to include the ball latch that holds the lid in place when the container is closed in the first .f3d upload, so I've uploaded a new file \"Print In Place Parametric Hinged Container v1.f3d\" that includes this feature, as well as labels for the sketches for easier editing.\nAlso, if you wish to print the small hinged box as modeled, I've added the files \"Base.stl\" and \"Lid.stl\", and a photograph of a print in place result, with breakaway supports, on an Ultimaker 3 Extended.\nEND OF UPDATE.", "step_imgs": ["https://cdn.instructables.com/FK2/B035/JRV8ACLG/FK2B035JRV8ACLG.LARGE.jpg"], "step_title": "Step 8: Final Touches."}], "channel": "3D Printing"}, {"category": "Technology", "description": "With various governments passing laws demanding access to your encrypted data 1), 2), 3), it is time for some 'security by obscurity.'\nThis 'Ible is about making a USB flash drive which looks just like a cable. You can drape it out the back of your desk, leave it lying on the floor or coil it up and store it in your magic knot of cables. (If you don't have a magic knot of cables, then start collecting now: you can never have too many random cables.) Once the cable is where folk expect to see a cable, it just becomes invisible and your data is safe (well, safer).\nFor this, you will need\none of the mini USB flash drives which are not much bigger than a USB connector\ncheap donor cable\na craft knife or a wide-bladed chisel\na pair of pliers or wirecutters\nsuitable glue (polystyrene cement, hot melt, cyanoacrylate or epoxy)\neither a small spring clamp, or five minutes to spend holding things together.\nI bought my donor cables from the local Two Dollar shop, but these ones look like they'd work.\nFor the USB flash drive, there are all sorts of options around. I found these two on AliExpress while I was writing this 'Ible.\nCheap ones\nExpensive ones\nI have no connection with any of the above links. They are just the result of a quick search for something which looked like I had used.", "title": "Hide Your Flash Drive in Plain Sight", "url": "https://www.instructables.com/id/Hide-Your-Data-in-Plain-Sight/", "steps": [{"step": 1, "steps_text": "There are two good reasons to choose the cheapest drives you can find. Firstly, the more expensive \"Name\" brand ones often have the capacity etched onto the metal of the connector which can be noticeable if you are looking for it. Secondly, the cheaper the drive, the cheaper the housing. With the drives I used, the plastic of the molded housing did not adhere to the metal of the connector at all.\nI braced the drive on a piece of scrap wood and gently slid a chisel down the connector and into the plastic covering. That pared off one side of the plastic and the whole shell could be removed, leaving two small bits of scrap plastic and the core flash drive as seen in the third picture above.\nThe downside of using cheap drives is their lower reliability and the possibility of data loss. \"If you only have one backup then you don't have a backup.\" But security, ease of construction and low-cost should allow you to make several devices and have multiple backups.", "step_imgs": ["https://cdn.instructables.com/F4I/14QM/JRAYPZ4N/F4I14QMJRAYPZ4N.LARGE.jpg", "https://cdn.instructables.com/FZ9/8DCA/JRAYPZ5D/FZ98DCAJRAYPZ5D.LARGE.jpg", "https://cdn.instructables.com/FLL/S9N5/JRAYPZ7J/FLLS9N5JRAYPZ7J.LARGE.jpg"], "step_title": "Step 1: Strip the Drives"}, {"step": 2, "steps_text": "If the donor cable has a cover which is in two parts, gently work the blade of a chisel into the join and slightly twist it to pop the two halves apart. Even if the shell halves were glued together this should be enough to break the bond. This is another good reason to choose the cheapest cables you can find, as they are likely to have cheaper and weaker assembly methods.\nOnce the shells are separated, use a pair of pliers or wire-cutters to remove the old connector. Make sure that you leave whatever interaction there was between the cable and the strain relief, as that is what will hold the whole thing together. The third and fourth pictures above have the relevant bits highlighted.", "step_imgs": ["https://cdn.instructables.com/FGH/UXWX/JRAYPZAQ/FGHUXWXJRAYPZAQ.LARGE.jpg", "https://cdn.instructables.com/FCZ/UKDW/JRAYPZCB/FCZUKDWJRAYPZCB.LARGE.jpg", "https://cdn.instructables.com/FQI/L8CB/JRAYPZGF/FQIL8CBJRAYPZGF.LARGE.jpg", "https://cdn.instructables.com/FQZ/L7M8/JRAYPZHW/FQZL7M8JRAYPZHW.LARGE.jpg", "https://cdn.instructables.com/FJY/9TND/JRAYPZJG/FJY9TNDJRAYPZJG.LARGE.jpg", "https://cdn.instructables.com/FI0/7O4G/JRAYPZJJ/FI07O4GJRAYPZJJ.LARGE.jpg"], "step_title": "Step 2: Crack the Cable Shell"}, {"step": 3, "steps_text": "Some of the cheap cables (most actually) have a plug cover which is molded onto the connector. (From which one can assume that this is a cheaper production method.)\nI used a newly sharpened chisel to cut down through the rubbery plastic to the metal housing of the plug. Using a wide chisel meant that I could align the cut with the mold-line of the plug. Having the split on the mold-line makes it harder to see any imperfections when the plug is glued back together.\nOnce the cut is far enough along to enable the rubber to be peeled back, get in with a pair of pliers and cut the wires holding the old connector. If you can't reach down far enough, it might be possible to disassemble the connector in situ as shown in the last two photographs above.", "step_imgs": ["https://cdn.instructables.com/FFJ/8LAK/JRAYPZK8/FFJ8LAKJRAYPZK8.LARGE.jpg", "https://cdn.instructables.com/F7N/BHM2/JRAYPZKI/F7NBHM2JRAYPZKI.LARGE.jpg", "https://cdn.instructables.com/FFU/0Z2Q/JRAYPZKL/FFU0Z2QJRAYPZKL.LARGE.jpg", "https://cdn.instructables.com/FII/3QZL/JRAYPZKN/FII3QZLJRAYPZKN.LARGE.jpg", "https://cdn.instructables.com/FWR/LJHG/JRAYPZKP/FWRLJHGJRAYPZKP.LARGE.jpg", "https://cdn.instructables.com/FM0/CKN0/JRAYPZL4/FM0CKN0JRAYPZL4.LARGE.jpg", "https://cdn.instructables.com/FTV/JJJM/JRAYPZNV/FTVJJJMJRAYPZNV.LARGE.jpg", "https://cdn.instructables.com/FTK/UW61/JRAYPZNY/FTKUW61JRAYPZNY.LARGE.jpg"], "step_title": "Step 3: Or Cut the Molded Plug"}, {"step": 4, "steps_text": "Then stick the drive into the emptied plug using an appropriate glue.\nI've used different glues with different host plugs.\nThe smooth plastic shells which pop-apart glue well with either superglue (cyanoacrylate) or polystyrene cement, while I've found that I needed hot-melt glue to get a decent result with the more rubbery plastics. Two-part epoxy would probably work well with both, but is a nuisance to use.\nIf you are using a melting-glue, the \"CoolShot\" brand which melts at a lower temperature is useful. It seemed to remain soft for longer while assembling the drive and shell, and worked with thinner layers than the ordinary hot-melt glue, which left a better-looking joint.\n(I have no connection with CoolShot either)", "step_imgs": ["https://cdn.instructables.com/FW4/LK1I/JRAYPZOA/FW4LK1IJRAYPZOA.LARGE.jpg", "https://cdn.instructables.com/FBB/MG00/JRAYPZOS/FBBMG00JRAYPZOS.LARGE.jpg", "https://cdn.instructables.com/FTD/YOFQ/JRAYPZOB/FTDYOFQJRAYPZOB.LARGE.jpg", "https://cdn.instructables.com/F1Q/GH37/JRAYPZOD/F1QGH37JRAYPZOD.LARGE.jpg", "https://cdn.instructables.com/F3J/05GO/JRAYPZP2/F3J05GOJRAYPZP2.LARGE.jpg", "https://cdn.instructables.com/F6K/HF01/JRAYPZPB/F6KHF01JRAYPZPB.LARGE.jpg", "https://cdn.instructables.com/FP4/O84C/JRAYPZPK/FP4O84CJRAYPZPK.LARGE.jpg", "https://cdn.instructables.com/FGG/41D1/JRAYPZPV/FGG41D1JRAYPZPV.LARGE.jpg"], "step_title": "Step 4: Assemble"}, {"step": 5, "steps_text": "Now you have a cable where one end is a concealed flash drive. If it were plugged into a machine, then the OS would probably recognize it as a memory device and report that fact, so we want to reduce the chance of that happening. Tying the cable up in a bundle and putting a note on it saying that it doesn't work properly should deter most folk from trying it. Having a reputation as a bad person from whom to borrow cables is also effective.\nSome final notes:-\nsome of the cables I used had a fabric covering, and this did not respond well to the treatment, as can be seen in the second photograph above. This might actually add to the plausibility of unreliability attached to the hidden cable.\nit's not just printer and charger cables:- i even found a cheap PS2/USB connector which was changed (third photo)\nhaving a variety of different cables makes it easier to remember which archive is stored on which device, and also provides a believable nest of cables.\nGood luck, and do post a photo if you try it :-)", "step_imgs": ["https://cdn.instructables.com/F9K/6OLK/JRAYPZR1/F9K6OLKJRAYPZR1.LARGE.jpg", "https://cdn.instructables.com/FWZ/IU89/JRAYPZO9/FWZIU89JRAYPZO9.LARGE.jpg", "https://cdn.instructables.com/FF7/Z534/JRAYPZJR/FF7Z534JRAYPZJR.LARGE.jpg", "https://cdn.instructables.com/FG0/C656/JRAYPZ3W/FG0C656JRAYPZ3W.LARGE.jpg"], "step_title": "Step 5: Conceal the Results and Conclusion"}], "channel": "USB"}, {"category": "Technology", "description": "The main goal of this project was to build a security mobile robot capable of moving and collect video data in rough terrain. Such a robot could be used to patrol the surroundings around your house or hard to reach and hazardous places. The robot can be used for night patrols and inspections because it has been equipped with a powerful reflector which illuminates the area around it. It is equipped with 2 cameras and remote control with a range over 400 meters. It gives you great opportunities to protect your property while sitting comfortably at home.\nRobot Parameters\nExternal dimensions (LxWxH): 266x260x235 mm\nTotal weight 3.0 kg\nGround clearance: 40 mm", "title": "4WD Security Robot", "url": "https://www.instructables.com/id/4WD-Security-Robot/", "steps": [{"step": 1, "steps_text": "I decided that I will use ready-made chassis modifying it slightly by adding additional components. The chassis of the robot is made entirely from steel painted black.\nComponents of a robot:\nSZDoit C3 Smart DIY Robot KIT or 4WD Smart RC Robot Car Chassis\n2x Metal On/Off Button\nLipo Battery 7.4V 5000mAh\nArduino Mega 2560\nIR Obstacle Avoidance Sensor x1\nAtmospheric Pressure Sensor Board BMP280 (optional)\nLipo Battery Voltage Tester x2\n2x Motor Driver BTS7960B\nLipo Battery 11.1V 5500mAh\nXiaomi 1080P Panoramic Smart WIFI Camera\nRunCam Split HD fpv camera\nControl:\nRadioLink AT10 II 2.4G 10CH RC Transmitter or FrSky Taranis X9D Plus\nCamera preview:\nEachine EV800D Goggles", "step_imgs": ["https://cdn.instructables.com/FMN/LERR/JROTNCJV/FMNLERRJROTNCJV.LARGE.jpg"], "step_title": "Step 1: The List of Parts and Materials"}, {"step": 2, "steps_text": "Assembling of robot chassis is quite easy. All steps are shown in the photos above. The order of the main operations is as follows:\nScrew the DC motors to the side steel profiles\nScrew the side aluminium profiles with DC motors to the base\nScrew the front and rear profile to the base\nInstall the necessary power switches and other electronic component (see in the next section)", "step_imgs": ["https://cdn.instructables.com/FG7/BORG/JROTNGTU/FG7BORGJROTNGTU.LARGE.jpg", "https://cdn.instructables.com/FFX/PA64/JROTNGX5/FFXPA64JROTNGX5.LARGE.jpg", "https://cdn.instructables.com/FU8/KY7X/JROTNGXU/FU8KY7XJROTNGXU.LARGE.jpg", "https://cdn.instructables.com/FGS/PHRY/JROTNGXV/FGSPHRYJROTNGXV.LARGE.jpg", "https://cdn.instructables.com/FJ4/GQU6/JROTNGYK/FJ4GQU6JROTNGYK.LARGE.jpg", "https://cdn.instructables.com/FFY/UR0A/JROTNGYL/FFYUR0AJROTNGYL.LARGE.jpg", "https://cdn.instructables.com/FPR/HXR6/JROTNH1L/FPRHXR6JROTNH1L.LARGE.jpg"], "step_title": "Step 2: Assembling the Robot Chassis"}, {"step": 3, "steps_text": "The main controller in this electronic system is Arduino Mega 2560. To be able to control four motors I used two BTS7960B Motor Drivers (H-Bridges). Two motors on each side are connected to one motor driver. Each of the Motor Driver can be loaded by the current up to 43A that gives a sufficient margin of power even for the mobile robot moving over rough terrain. The electronic system is equipped with two power sources. One for supplying the DC motors and servos (LiPo battery 11.1V, 5200 mAh) and the other to supply Arduino, fpv camera, led reflector and sensors (LiPo battery 7.4V, 5000 mAh). The batteries have been placed in the upper part of the robot so that you can quickly replace them at any time\nThe connections of electronic modules are the following:\nBTS7960 -> Arduino Mega 2560\nMotorRight_R_EN - 22\nMotorRight_L_EN - 23\nMotorLeft_R_EN - 26\nMotorLeft_L_EN - 27\nRpwm1 - 2\nLpwm1 - 3\nRpwm2 - 4\nLpwm2 - 5\nVCC - 5V\nGND - GND\nR12DS 2.4GHz Receiver -> Arduino Mega 2560\nch2 - 7 // Aileron\nch3 - 8 // Elevator\nVCC - 5V\nGND - GND\nBefore starting the robot's control from the RadioLink AT10 2.4GHz transmitter you should previously bind the transmitter with the R12DS receiver. The binding procedure is described in detail in my video.", "step_imgs": ["https://cdn.instructables.com/FOJ/9UMR/JRQOGR6A/FOJ9UMRJRQOGR6A.LARGE.jpg", "https://cdn.instructables.com/FXB/JFSB/JROTNHQG/FXBJFSBJROTNHQG.LARGE.jpg", "https://cdn.instructables.com/F3K/UR2V/JRV5FV57/F3KUR2VJRV5FV57.LARGE.jpg", "https://cdn.instructables.com/FG3/OJV5/JRV5FV6K/FG3OJV5JRV5FV6K.LARGE.jpg", "https://cdn.instructables.com/FNV/78OT/JRV5FVAV/FNV78OTJRV5FVAV.LARGE.jpg"], "step_title": "Step 3: Connection of Electronic Parts"}, {"step": 4, "steps_text": "I've prepared the following sample Arduino programs:\nRC 2.4GHz Receiver Test\n4WD Robot RadioLinkAT10 (file in attachment)\nThe first program \"RC 2.4GHz Receiver Test\" will allow you to easily start and check the 2.4 GHz receiver connected to Arduino, the second \"RadioLinkAT10\" allows to control the robot's movement. Before compiling and uploading the sample program, make sure that you have chosen \"Arduino Mega 2560\" as the target platform as shown above (Arduino IDE -> Tools -> Board -> Arduino Mega or Mega 2560). The commands from RadioLink AT10 2.4 GHz transmitter are sent to the receiver. Channels 2 and 3 of the receiver are connected to the Arduino digital pins 7 and 8 respectively. In the Arduino standard library we can find function \"pulseIn()\" that returns the length of the pulse in microseconds.We will use it to read the PWM (Pulse Width Modulation) signal from the receiver which is proportional to the tilt of the transmitter's control stick. The pulseIn() function takes three arguments (pin, value and timeout):\npin (int) - the number of the pin on which you want to read the pulse\nvalue (int) - type of pulse to read: either HIGH or LOW\ntimeout (int) - optional number of microseconds to wait for the pulse to be completed\nThe read pulse length value is then mapped to a value between -255 and 255 that representing forward/backward (\"moveValue\") or turn right/left (\"turnValue\") speed. So, for example if we push the control stick fully forward we should get the \"moveValue\" = 255 and pushing fully back get \"moveValue\" = -255. Thanks to this type of control, we can regulate the speed of the robot's movement in the full range.", "step_imgs": ["https://cdn.instructables.com/FB9/I0NV/JROTNNYA/FB9I0NVJROTNNYA.LARGE.jpg"], "step_title": "Step 4: Arduino Mega Code"}, {"step": 5, "steps_text": "These videos show tests of mobile robot based on program from the previous section (Arduino Mega Code). The first video shows tests of 4WD robot on snow at night. The robot is controlled by the operator remotely from a safe distance based on the view from fpv google. It can move quite fast in difficult terrain what you can see in the second video. At the beginning of this instruction you can also see how well it cope in rough terrain.\nCheck out my other projects related to robotics, just visit:\ninstagram\nfacebook\nyoutube\nmy website", "step_imgs": ["https://cdn.instructables.com/FMF/O7Z3/JROTNIVZ/FMFO7Z3JROTNIVZ.LARGE.jpg", "https://cdn.instructables.com/FZG/EA4C/JROTNIY9/FZGEA4CJROTNIY9.LARGE.jpg", "https://cdn.instructables.com/FZD/HWGN/JROTNJ08/FZDHWGNJROTNJ08.LARGE.jpg"], "step_title": "Step 5: Testing of Security Robot"}], "channel": "Robots"}, {"category": "Technology", "description": "Another weather station... of sorts. This is more for water in the soil, garden etc. It beats walking around with a tensiometer any day. It is a fantastic tool and when you are chasing around frantically in the summer it cannot half save you some time. I have tried to build it with more industrial components so it should last, so for it does seem to.\nThis will:\nMeasure the capacitance and temp at the surface.\nMeasure the Temp and Humidity (wherever you stick the sensor, please not there).\nMeasure the soil resistance at depth and convert it to centibar.\nMeasure the temperature at depth.\nRemote monitoring of field conditions is starting to become more prevalent with the IOT drive. I wanted something that I could used to analyse the data in whatever way I fancied even prompt triggers. I looked at a lot of the already available options and decided they were either wayyy too pricey and/or didn't have the flexibility I wanted.\nSo I set about trying to figure out how to. Fortunately I had a little experience with Particle and knew that this platform, with a bit of 'sweat', could deliver a very flexible tool. (They essentially work as a middle man giving you the flex either end).\nWhy have I put this guide together\nI've created this guide to speed up and enlighten things for others, hope it helps. It took me ages to figure it out and I wouldn't have done it with the shared info from others so I feel it is only right to give back. If your in the ag sector this should show you the whole process from soil to graph.", "title": "Agricultural Field Crop Irrigation Monitor", "url": "https://www.instructables.com/id/Agricultural-Fieldcropirrigation-Monitor/", "steps": [{"step": 1, "steps_text": "You don't need them all to get it working it'll just put out weird numbers for that measurement.\nBuilt with a Particle Electron but should work with Boron if by GSM (sim card) or Photon/ Argon if it'll be close enough for WiFi.You will need to change the B0 & B2 pins to something else if not using an electron.\nBattery, the Electron comes with one, the Photon will also need a battery shield or thing to connect/charge it.\nSensors, parts are removable or changeable depending on your requirement/motivation.\nAM2320, I had one, but if buying I'd advise a pinned out(aka broken out) BME280. Pimoroni, Adafruit, Sparkfun are good places to look.\nChirp!, cracking little sensor, go for the rugged one the others don't last long outside...... Tindie Chirp This is a very reactive sensor and will tell you very quickly if things have changed unlike the irrometer which takes a bit of time.\nTipping bucket, I used an old one off a weather station I wasn't bothered about serious precision or shelling out. If you are there are plenty of options out there and you just need to adjust the resolution in the code.\nIrrometer, great bit of kit for measuring soil water tension, centibars, the thing you want to know if you irrigate. Irrometer website\nDS18B20 waterproofed and on a length of cable. Cheap, easily available and effective.\nA waterproof box (that can take a beating from a sprayer boom if in the field). I used a screw lid Tupperware thing.\nMaybe some sort of shroud for the temp sensor. Mines off an old weather station, I reckon you could get away with sticking it out the bottom of the box if not irrigating.\nSome pipe to go on the irrometer to make it easy to find and insert. Yes this can cause slight inaccuracies because water will run down it... But hell it's easier than trudging around with a spade. I used a bit of conduit, electrical tape a heat gun.\nSolar panel with a decent bit of go ideally @ 5/6V to go straight into the USB. Amazon- This is what I used, cheap and it works.\nA few 4.7K Ohm resistors, USB cable and some diodes.\nPCB strip board and headers. Could be done without or on a breadboard but it does make it easier.", "step_imgs": ["https://cdn.instructables.com/FLV/MGHJ/JRQOMK94/FLVMGHJJRQOMK94.LARGE.jpg", "https://cdn.instructables.com/FQF/M5WI/JRQOM3Q6/FQFM5WIJRQOM3Q6.LARGE.jpg"], "step_title": "Step 1: Parts Required"}, {"step": 2, "steps_text": "This took me a bit of figuring out and a few prototypes. I originally made the board to fit in a box which I didn't use in the end hence the shape, you could probably do it simpler following the circuit diagram.\nA big thank you to Mr Vinduino, genius with the irrometer! If I'd have wanted a more out the box solution he has it. The clever thing about his method is that it pulses the sensor one way then the other so you do not get the corrosion issues seen if you just run the circuit one way.\nThe chirp and AM2320 are I2C which makes life a whole lotta simpler. This is computer talk for the less informed, it means everything can be connected together on the same 4 wires. You could literally have 100's of things connected on 4 wires. Interestingly quite a few of the maker manufacturers have cottoned onto this and are doing their own easy plug versions of stuff. I put these on telephone connectors RJ11 because I was chopping and changing a lot and I've got loads of old leads kicking about, couldn't throw them away, far too useful for something. But they could be wired direct. Do not forget the resistors 10K ones would work it just needs something to pull it up.\nI put the tipping bucket on a spare pin of the telephone connectors for the same reason but again could be wired direct. The same could be said for the DS18b20 but I couldn't be bothered to change it again. If you want to do this then just adjust the code accordingly e.g. change the pin number. The tipping bucket works on a reed switch when it's one way the circuit is disconnected and the other it's connected. The electron will sense the change, wakeup and add to it's rain record.", "step_imgs": ["https://cdn.instructables.com/FL9/UJQP/JRQOO893/FL9UJQPJRQOO893.LARGE.jpg", "https://cdn.instructables.com/F6E/A5VJ/JRQOM3P3/F6EA5VJJRQOM3P3.LARGE.jpg"], "step_title": "Step 2: Hardware Hookup"}, {"step": 3, "steps_text": "Particle.io has set up a cloud and hardware system which greatly simplifies the job of getting the data up to the fluffy things. The hardware is also pretty robust and developer friendly hence my preference.\nIn order to use their equipment you need to get signed up and setup on their website. I'm not going into detail here it's safe to say there's plenty of documented info out there, they are really good at getting people going, no need to stare at the headlights. You also need to register your device, again there's guides.\nOnce your here you need to navigate to the IDE and plumb my code in. As I say it is messy at the moment, I have 'grand plans' to make it slightly more universal but they are plans. Creative steps are rarely tidy. Apologies.\nThe code is designed to measure the sensors, Publish to the cloud, turn everything off and then sleep for a half an hour(this is adjustable). It will also wakeup and register a tip of the rain bucket. It will reset the count at midnight.\nEither\nUse this link to Jerry my code (I don't blame you): F Particle electron field sensor\nFollow 4.+ below.\nOr:\nCopy my code to the first page.\nAdd the DS18B20 and Adafruit_Sensor library (bottom left side, libraries - search - click on - then click include in project and then click on the relevant one.\nAdd the extra tabs and code as labelled in me picture.\nFlash to device (top left lightening bolt, I do it over the air, by USB is a ... ache) you may need to select the device (bottom left target - click the star next to the device so that it is yellow). Make sure the device is connected to the cloud (Cyan).\nThe device should boot up flash green then Cyan, stay on for a\nwhile and then turn off, if you tip the rain bucket it should come back on again.\nIn theory it is working!!! Well done.\nThings to note\nOne of the big problems was getting the AM2320 to work, In the end I had to jimmy an edited part of arduino code onto another tab (you'll see) hence why I say use a BME280 they are far better documented. I have tried to include as much info as possible as I know how annoying it is when someone doesn't share everything and it fails again and again.\nThe Chirp library code had to be added onto a tab because currently there isn't a library in particle. VintageGeek has written a library specifically for the photon Vitage Geek Chirp and Photon\nDS18B20 is currently commented out the chirp will do soil temp but the DS18B20 is better for depth.\n// This #include statement was automatically added by the Particle IDE.<br>#include \"I2CSoilMoistureSensor.h\"\nI2CSoilMoistureSensor i2CSoilMoistureSensor(0x20);\n#include \"Adafruit_Sensor.h\"\n#include \"Adafruit_AM2320.h\"\nAdafruit_AM2320 am2320 = Adafruit_AM2320();\nfloat tempC;\nfloat humidity;\n#include \n\n#include \nconst int      MAXRETRY          = 4;\nconst uint32_t msSAMPLE_INTERVAL = 2500;\nconst uint32_t msMETRIC_PUBLISH  = 30000;\nDS18B20  ds18b20(D5, true); //Sets Pin D5 for Temp Sensor and  // this is the only sensor on bus\ndouble   soilC;\ndouble   soilF;\nfloat chirpTemp;\nunsigned int chirpLight;\nunsigned int chirpCap;\nbyte soilmoisture;\n// A FuelGauge named 'fuel' for checking on the battery state\nFuelGauge fuel;\nfloat voltage;\nfloat soc;\n int count24 = 0;\n float rainfall24 = 0;\n// unsigned int minuteOld = 0;\n// unsigned int currentMinute = 0; \n unsigned long currentHour = 0;\n// unsigned int lastHour = 24;\n unsigned long currentDay = 1; //I think long is needed for the comparitor\n// unsigned int lastDay = 0;\n// unsigned int reset_time = 0;\n unsigned int debounce_time = 0;\n boolean tipState = 0;\n\n\n// For the soil moisture sensor Thankyou Mr Vinduino\n#define NUM_READS 10    // Number of sensor reads for filtering\nlong buffer[NUM_READS];\nint inde;\ntypedef struct {        // Structure to be used in percentage and resistance values matrix to be filtered (have to be in pairs)\nint moisture;\nlong resistance;\n} values;\nconst long knownResistor = 4700;  // Constant value of known resistor in Ohms\nint supplyVoltage;                // Measured supply voltage\nint sensorVoltage;                // Measured sensor voltage\nvalues valueOf[NUM_READS];        // Calculated moisture percentages and resistances to be sorted and filtered\nint i;                            // Simple index variable\nunsigned long sensor1;\nlong read1;\nlong read2;\nint cbar;\nSYSTEM_MODE(AUTOMATIC);\nvoid setup() {\n//    pinMode(D6, OUTPUT);  \n//    pinMode(D7, OUTPUT);\n//    digitalWrite(D6, HIGH);//Turn the DS18b20 temp\n//    digitalWrite(D7, LOW); \n    pinMode(D2, OUTPUT);  // The I2C is powered by the D2,3 pins \n    pinMode(D3, OUTPUT);\n    Wire.begin();\n    digitalWrite(D2, HIGH);\n    digitalWrite(D3, LOW); //Turn I2C stuff\n    i2CSoilMoistureSensor.begin();\n//    Serial.begin(9600);\n//  while (!Serial) {delay(10); }// hang out until serial port opens\n    am2320.begin();\n    tipState = digitalRead(D4);\n  pinMode(B0, OUTPUT);   // Pins for reading the soil resistance \n  pinMode(B2, OUTPUT);   \n  Serial.println(\" Electron weather test\");\n//  Time.beginDST();\n}\nvoid loop() {\n//    Cellular.off();      \nif (Time.day() != currentDay) { //Resets 24hr counters at 24hrs\n        count24 = 0;   \n        rainfall24 = 0; // inches (0.05 inch per tip)\n        currentDay = Time.day();\n        if (Time.isDST() == 1){  // if Day light saving time is in effect apply it to the time\n            Time.beginDST();\n        } else {\n            Time.endDST();\n        }\n    }\n    currentHour = Time.hour();\n    /*\n    if (currentHour == 0 && lastHour == 23){ //Resets 24hr counters at 24hrs\n        count24 = 0;\n    }\n    lastHour = Time.hour(); */\n    if ((tipState != digitalRead(D4))&&((millis() - debounce_time) >= 1000)){ //Adds to the rain counter at tip of gauge\n        count24++;\n        debounce_time = millis();\n        tipState = digitalRead(D4);\n        rainfall24 = ((count24)*0.05); // inches (0.05 inch per tip)\n    }\n    Serial.print(\" Time\");\n    Serial.print(Time.day());\n    Serial.print(Time.hour());\n    Serial.print(Time.minute());\n    \n    digitalWrite(D2, HIGH);//Turn off I2C stuff\n    digitalWrite(D3, LOW);\n//    digitalWrite(D6, HIGH);//Turn the DS18b20 temp\n    i2CSoilMoistureSensor.begin();\n    am2320.begin();\n    delay(3000);\n    chirpTemp = i2CSoilMoistureSensor.getTemperature(); //chirp temperature register\n    chirpTemp = ((chirpTemp)/10);\n    chirpCap = i2CSoilMoistureSensor.getCapacitance();\n    soilmoisture = map(chirpCap, 300, 750, 0, 100); //max and min seeen in testing mapped to %\n    if (soilmoisture > 100 || soilmoisture <= 0){\n        soilmoisture = NAN;\n    }\n//    chirpLight = i2CSoilMoistureSensor.getLight(true);//true initiates startMeasureLightand adds a 3 second pausebefore reading, false reads immediately\n    Serial.print(\" Raw Cap :\"); Serial.print(chirpCap); \n    Serial.print(\", %Moist :\"); Serial.print(soilmoisture); \n    Serial.print(\", CTemp :\"); Serial.print(chirpTemp, DEC);\n//    Serial.print(\", CLight :\"); Serial.print(chirpLight);\n    tempC = am2320.readTemperature();\n    humidity = am2320.readHumidity();\n    Serial.print(\", Temp: \"); Serial.print(am2320.readTemperature());\n    Serial.print(\", Humidity: \"); Serial.print(am2320.readHumidity());\n //   getTemp();\n //   Serial.print(\", SoilC \"); Serial.print(soilC);\n    \n    digitalWrite(D2, LOW);//Turn off I2C stuff\n    digitalWrite(D3, LOW);\n//    digitalWrite(D6, LOW);//Turn off the DS18b20 temp\n    \n    voltage = fuel.getVCell();\n    soc = fuel.getSoC();\n    Serial.print(\", Battery: \"); Serial.print(voltage); Serial.print(\",\"); Serial.print(soc);\n    \n    measure(1,B0,B2,A2);\n    read1 = average();\n    measure(1,B2,B0,A0);\n    read2= average();\n    sensor1 = (read1 + read2)/2;\n    cbar = ((sensor1-550)/137.5); //Simple equation to shown the relationship between resistance and CB\n    if (cbar > 250 ){\n        cbar = NAN;\n    }\n    Serial.print (\", resistance bias =\" ); Serial.print (read1-read2);\n    Serial.print (\", sensor bias compensated value = \"); Serial.print (sensor1);\n    Serial.print (\", Centibar = \"); Serial.println (cbar);\n        String SENSORS = String::format(\n      \"{\"\n        \"\\\"tempC\\\":%.2f,\"\n        \"\\\"humidity\\\":%.2f,\"\n        \"\\\"moisture2\\\":%2d,\"        \n        \"\\\"chirpcap2\\\":%2d,\"\n        \"\\\"soilcbar12\\\":%2d,\"  \n        \"\\\"soilres12\\\":%2d,\"  \n        \"\\\"chirpTemp\\\":%.1f,\"\n//        \"\\\"soiltempC\\\":%.2f,\" \n        \"\\\"voltage\\\":%.2f,\"         \n        \"\\\"soc\\\":%.2f,\" \n        \"\\\"dailyrainin\\\":%.2f,\"\n        \"\\\"currentHour\\\":%2d,\" \n        \"\\\"currentDay\\\":%2d\" \n      \"}\",\n      tempC,\n      humidity,\n      soilmoisture,\n      chirpCap,\n      cbar,\n      sensor1,\n      chirpTemp,\n//      soilC,\n      voltage,\n      soc,\n      rainfall24,\n      currentHour,\n      currentDay\n      );\n//    Serial.println(SENSORS);\n//    delay(40 * 1000);// Delay 20sec\n    Particle.publish(\"json\", SENSORS, 60, PRIVATE);\n    delay(2000);\n    System.sleep(D4, CHANGE, 30*60); //Used to allow a wakeupon the bucket tip pin sleep for seconds\n}\n/*void getTemp(){\n  float _temp;\n  int   i = 0;\n  do {\n    _temp = ds18b20.getTemperature();\n  } while (!ds18b20.crcCheck() && MAXRETRY > i++);\n  if (i < MAXRETRY) {\n    soilC = _temp;\n    soilF = ds18b20.convertToFahrenheit(_temp);\n  }\n  else {\n    soilC = soilF = NAN;\n    Serial.println(\"Invalid reading\");\n  }\n}\n*/\nvoid measure (int sensor, int phase_b, int phase_a, int analog_input)\n{\n  // read sensor, filter, and calculate resistance value\n  // Noise filter: median filter\n  for (i=0; i\n    // Read 1 pair of voltage values\n    digitalWrite(phase_a, HIGH);                 // set the voltage supply on\n    delayMicroseconds(25);\n    supplyVoltage = analogRead(analog_input);   // read the supply voltage\n    delayMicroseconds(25);\n    digitalWrite(phase_a, LOW);                  // set the voltage supply off\n    delay(1);\n    digitalWrite(phase_b, HIGH);                 // set the voltage supply on\n    delayMicroseconds(25);\n    sensorVoltage = analogRead(analog_input);   // read the sensor voltage\n    if (sensorVoltage <= 0){sensorVoltage = 1;} //Very important the particle will brick it if it reads 0\n    delayMicroseconds(25);\n    digitalWrite(phase_b, LOW);                  // set the voltage supply off\n    // Calculate resistance\n    // the 0.5 add-term is used to round to the nearest integer\n    // Tip: no need to transform 0-1023 voltage value to 0-5 range, due to following fraction\n    long resistance = (knownResistor * (supplyVoltage - sensorVoltage ) / sensorVoltage) ;\n    delay(1);\n    addReading(resistance);\n  }\n}\n// Averaging algorithm\nvoid addReading(long resistance){\n  buffer[inde] = resistance;\n  inde++;\n  if (inde >= NUM_READS) inde = 0;\n}\nlong average(){\n  long sum = 0;\n  for (int i = 0; i < NUM_READS; i++){\n    sum += buffer[i];\n  }\n  return (long)(sum / NUM_READS);\n}", "step_imgs": ["https://cdn.instructables.com/FAW/QX90/JRQOQ5AF/FAWQX90JRQOQ5AF.LARGE.jpg"], "step_title": "Step 3: Particle Code"}, {"step": 4, "steps_text": "The code should now be being published to the cloud and you can see it coming into particle:\nNavigate to the Console (bottom left in the IDE, looks like home made dominoes > The events tab on the left >_ or devices (cube top left) > the device). Please note my picture shows some out of range data, quite a few of the sensors were not hooked up.\nThis is good but other than sitting there in your chair all day and monitoring the state of things, live is a bit limited.\nSo what next? Well we need to push the data to something so that we can record and analyse it over time. For one device knocking out a tad of data occasionally do we really want to pay a lots of moneys subscription....? Your not exactly monitoring data servers! I know, ideally you want it plumbed to your PC, but that is a whole 'nother kettle O fish'. I am working on it, but the hurdles are tricky!\nThere are a few options out there on the cloud with their hooks and catches. I have used weather underground with my home brew weather station but I would feel a bit guilty doing that with Irrigation data (it's not really raining is it). I can also recommend Ubidots but it is more faff to setup and if you have ham mands like me then you'll spend a couple of hours trying to figure out which letter is wrong. They also charge. Initial state is good but free tier only saves 24hrs of data. IFFFT is also a good shout but at the moment the most you can do is whack it in a google spreadsheet.\nThe simplest I have found for this type of thing is Tinamous. It does a really good job on stuff like this. If you expand there is facility for it and the pricing seems very fair, also UK based. The great thing about Tinamous is it has a Particle Bot, yeeeessssss. It does all the coding and getting the commas in the right place for you.\nYou'll need an account.\nOnce in click top right More button > Bots > Add > Add Particle Bots, Whack your details in, simples.\nIf you then go to the devices tab you should see it has pulled in all your devices for you.\nNow this is the clever bit, because we named the data json (yea I bet you were wondering) and formatted it accordingly. It will recognise it and table it. NB. JavaScript Object Notation is a way of formatting data so that things can read it.\nIf you click the name of the relevant device it will graph out the data it has seen from it. You can select deselect etc. and change the time period.\nIt may take a bit of time for that data to come in, maybe shake the bucket a few times or press the reset on the particle to get it to fire up again.\nThis data can then be added to a dashboard (tab at the top) and you can post a notification if you so wish. I'll leave you to sweat with that!", "step_imgs": ["https://cdn.instructables.com/FPL/8RXG/JRQOQ59M/FPL8RXGJRQOQ59M.LARGE.jpg", "https://cdn.instructables.com/FO0/LGRC/JRQOQ5AE/FO0LGRCJRQOQ5AE.LARGE.jpg", "https://cdn.instructables.com/F6M/QBOZ/JRQOMLVZ/F6MQBOZJRQOMLVZ.LARGE.jpg"], "step_title": "Step 4: Webhooks, Say Whaaaat. Tinamous"}, {"step": 5, "steps_text": "A big thanks to all those who have shared their methods through various guides, Vinduino, Particle, Tinamous, Adafruit, Chirp to say a few. I would love to list all but I have been to that may pages that I would struggle to remember. I love the collaboration and I hope this adds.\nComments/critics welcome,\nF", "step_imgs": [], "step_title": "Step 5: Thanks"}, {"step": 6, "steps_text": "Improvements\nTidy the code\nUpgrade it to their mesh system and have it linkable to other units, this would greatly increase the battery life and possibly do away with the need for a solar pannel.\nMake the publish string self buildable depending on the sensors available.\nMake it adaptable to grain store monitoring, giving it a winter use. It's basically the same job with less going on.\nMore inputs; would be nice to have the solar rad, leaf wetness and possibly even C02 but I'm a way away from that yet.\nPersonal data store.\nGet it to talk to the irrigator and pump :).\nIdeas\nI'm working on lots of farm based ideas mostly along this line, some are coming to fruition but time and finance do weigh. If your like minded and fancy collaborating drop me a message.", "step_imgs": [], "step_title": "Step 6: Future Ideas and Improvements"}], "channel": "Sensors"}, {"category": "Technology", "description": "I have been using a typewriter for a little over a year now however, I can still remember the difficulty of having to change my typewriter ribbon for the first time. When I saw that this website didn't have a walkthrough that would help someone change their typewriter's ribbon, I decided that I would make one. Feel free to comment any of your questions and I will be happy to help. The typewriter used for this demonstration is an Olympia DeLuxe.", "title": "How to Change a Typewriter Ribbon", "url": "https://www.instructables.com/id/How-to-Change-a-Typewriter-Ribbon/", "steps": [{"step": 1, "steps_text": "There aren't too many materials that you need to actually change your ribbon. In fact, all you really need is a typewriter and a new ribbon. I got my ribbon replacement on Amazon from this link:\nhttps://www.amazon.com/Universal-Typewriter-Ribbon...\nSome things that can be helpful but are not needed are latex gloves and a sewing pin. The ribbon is after all saturated with ink and therefore can get on your hands easily. A pair of latex gloves will keep your hands clear of ink. The pin can be used to poke the ribbon back into the ribbon vibrator.", "step_imgs": [], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "To be able to access the area where the typewriter ribbon is you need to open the hinged cover that is protecting it. Not all typewriters have this cover and therefore you can skip this step. To lift the cover, grab it from the inside as shown above and firmly pull up. Make sure that the carriage release lever is out of the way before you attempt to open the cover as doing so may damage your typewriter. If you're unsure how to correct this check the final image as it contains a short description to help you out.", "step_imgs": ["https://cdn.instructables.com/FCJ/BEXH/JRQOO9A6/FCJBEXHJRQOO9A6.LARGE.jpg", "https://cdn.instructables.com/FQW/O8HB/JRQOO9BD/FQWO8HBJRQOO9BD.LARGE.jpg", "https://cdn.instructables.com/FSP/1DZJ/JRQOO9CL/FSP1DZJJRQOO9CL.LARGE.jpg", "https://cdn.instructables.com/F07/89DO/JRQOO9DT/F0789DOJRQOO9DT.LARGE.jpg"], "step_title": "Step 2: Open the Cover"}, {"step": 3, "steps_text": "Now that the cover is open and you can fully access the ribbon we can begin disassembling it. The first thing that you are going to do is to push the clip that rests on the ribbon out of the way as it prevents the spool from being lifted. From there you are going to pull up on the spool until it comes off of the driver pin to which it is attached. When finished, you can lay the spool on top of the typebars as I did. Repeat this step with the other spool.", "step_imgs": ["https://cdn.instructables.com/FCJ/63WQ/JRQOO9OO/FCJ63WQJRQOO9OO.LARGE.jpg", "https://cdn.instructables.com/FG3/RJJ9/JRQOO9MB/FG3RJJ9JRQOO9MB.LARGE.jpg", "https://cdn.instructables.com/F4H/HHIP/JRQOO9R2/F4HHHIPJRQOO9R2.LARGE.jpg", "https://cdn.instructables.com/FH1/AYO0/JRQOO9S9/FH1AYO0JRQOO9S9.LARGE.jpg", "https://cdn.instructables.com/FEW/DQ7L/JRQOO9W9/FEWDQ7LJRQOO9W9.LARGE.jpg"], "step_title": "Step 3: Removing Ribbon Spools From Typewriter"}, {"step": 4, "steps_text": "Before you are able to completely remove your old ribbon from your typewriter there are a few more steps that we must do in order to make the process easier. The first thing that we are going to do is to change the color to red using the color toggle lever. The reason we do this is that the ribbon vibrator will rise higher than normal when it is set on red which will make it easier to remove the ribbon. The next step is to hit the shift lock key which will raise the entire carriage giving you even more room to work with when removing the ribbon.", "step_imgs": ["https://cdn.instructables.com/FD1/7RQ5/JRQOO9XH/FD17RQ5JRQOO9XH.LARGE.jpg", "https://cdn.instructables.com/FDU/M3C1/JRQOO9YP/FDUM3C1JRQOO9YP.LARGE.jpg", "https://cdn.instructables.com/FCR/B9IK/JRQOO9YQ/FCRB9IKJRQOO9YQ.LARGE.jpg", "https://cdn.instructables.com/FGM/ZAWI/JRQOO9YS/FGMZAWIJRQOO9YS.LARGE.jpg", "https://cdn.instructables.com/FM3/5Y8R/JRQOO9ZB/FM35Y8RJRQOO9ZB.LARGE.jpg"], "step_title": "Step 4: Prep Ribbon to Be Removed From Ribbon Vibrator"}, {"step": 5, "steps_text": "Now we are finally ready to remove the ribbon. To do so you need to pull out some of the ribbon from between the type guide arms. Then you will be able to pull the ribbon through the gaps of both sides of the ribbon vibrator. When this step is completed the ribbon will be completely disassembled from the typewriter and may be discarded. If you feel as though it is still very difficult to get your hands in the areas needed to remove the ribbon you can hit one of your typewriter keys which will cause the ribbon vibrator to jump up. Hold it in this extended position with one of your hands and you will have about an inch more of space to work with.", "step_imgs": ["https://cdn.instructables.com/FJ4/OR6S/JRQOO9ZW/FJ4OR6SJRQOO9ZW.LARGE.jpg", "https://cdn.instructables.com/FKK/SE98/JRQOO9ZY/FKKSE98JRQOO9ZY.LARGE.jpg"], "step_title": "Step 5: Removing the Ribbon"}, {"step": 6, "steps_text": "Now that you finally removed the old typewriter ribbon it is time that we start to put the new one on. To do so ensure that your ribbon is oriented as mine is in the first image with the black line of ink above the red ink. From there we are essentially going to perform the steps from step 3 in reverse. Lay one of the spools on top of the typebars while you hold the other in one of your hands. Push the clip that lies on the ribbon out so that you can slide the spool's central hole on the driver pin. Release the clip and confirm that it falls on the ribbon without hitting the plastic/metal parts of the spool. Then we are going to grab the ribbon and place it in between the guide as shown in the images above. Repeat these steps with the other spool and when you have completed this your typewriter should look like the final image.", "step_imgs": ["https://cdn.instructables.com/FV5/8FCX/JRQOOA16/FV58FCXJRQOOA16.LARGE.jpg", "https://cdn.instructables.com/F16/OL3X/JRQOOA2V/F16OL3XJRQOOA2V.LARGE.jpg", "https://cdn.instructables.com/F5F/XEXP/JRQOOA5R/F5FXEXPJRQOOA5R.LARGE.jpg", "https://cdn.instructables.com/FAR/TSZN/JRQOOA5S/FARTSZNJRQOOA5S.LARGE.jpg", "https://cdn.instructables.com/FS7/6AOB/JRQOOA7D/FS76AOBJRQOOA7D.LARGE.jpg"], "step_title": "Step 6: Attaching New Ribbon Spools to Driver Pins"}, {"step": 7, "steps_text": "This is probably the trickiest part of the whole process so don't get frustrated if it takes you a few tries to get it completed. You're going to want to get the ribbon vibrator raised into its highest position because the first thing you are going to do is to tuck the ribbon behind it. If you forget to tuck the ribbon behind the vibrator and just attach it at the front of it the ribbon will catch on the type guide and bunch up while you're typing. Once the ribbon is tucked behind the ribbon vibrator you're going to want to pull it through the gaps of the vibrator similarily to how we removed it. Repeat to both sides of the ribbon vibrator until your typewriter looks like mine in the final image. Now is also a good time to ensure that your spools are being fed correctly. Type a few letters and observe the direction that your ribbon spools spin. Once you determine which of them is the feeding spool and which is the receiving spool you can wind the receiving spool until the ribbon becomes taught.", "step_imgs": ["https://cdn.instructables.com/FBP/QITD/JRQOMBMK/FBPQITDJRQOMBMK.LARGE.jpg", "https://cdn.instructables.com/FGX/3OJE/JRQOMBIE/FGX3OJEJRQOMBIE.LARGE.jpg", "https://cdn.instructables.com/FYQ/MVNE/JRQOMB4G/FYQMVNEJRQOMB4G.LARGE.jpg"], "step_title": "Step 7: Attach New Ribbon to Ribbon Vibrator"}, {"step": 8, "steps_text": "Now while the new ribbon may be fully attached to your typewriter there are still a few things that we need to take care of. The first thing that we need to do is to push the cover back down so that it protects the ribbon. Make sure that it is pushed down completely otherwise your carriage release lever will rub against it. Then make sure that your set your color toggle switch back to black and then release the shift lock key. In order to ensure that everything is working perfectly run a piece of paper through it and type some letters. Don't be worried if your letters look very thick or smudgy as this is due to the new ribbon and will subside as the ribbon begins to dry over time. Good luck and I hope this helps!", "step_imgs": ["https://cdn.instructables.com/FQE/2LL6/JRQOMBA6/FQE2LL6JRQOMBA6.LARGE.jpg", "https://cdn.instructables.com/FI1/TOZC/JRQOOA9Z/FI1TOZCJRQOOA9Z.LARGE.jpg", "https://cdn.instructables.com/FDL/0IP7/JRQOOAAI/FDL0IP7JRQOOAAI.LARGE.jpg", "https://cdn.instructables.com/FZ5/ZJAZ/JRQOMBQS/FZ5ZJAZJRQOMBQS.LARGE.jpg"], "step_title": "Step 8: Finishing Touches"}], "channel": "Tools"}, {"category": "Technology", "description": "When it comes to video gear, camera sliders aren't considered a necessity but that doesn't stop me from making one. I knew from the beginning that using parts for 3D printers will make it cheap, accessible and adjustable. The fact that it's motorized makes it especially great for timelapses because it can move at a set speed for long periods of time. It also makes for very consistent motion at normal speeds. On top of that, the software also allows controlling it by just turning the knob like a mechanical slider. I'm extremely happy with the result. The only thing that's missing is a fluid camera head for smooth sliding and panning action. But I'll get one.\nThe slider I built is about half a meter long. The nice thing about the design it that it can be scaled up very easily. Just get longer rods. If you want you can use the electronics on a completely different slider or even modify a non-motorized one. The electronics will work with almost any stepper motor.\nI'd also suggest watching the video as it contains some additional information", "title": "Motorized Camera Slider", "url": "https://www.instructables.com/id/Motorized-Camera-Slider-1/", "steps": [{"step": 1, "steps_text": "Tools:\n3D printer\nDrill\nSoldering iron\nScrewdriver\nMetal hand saw\nx-acto knife\nMaterials for the mechanical part:\nNEMA 17 stepper motor\nGT2 pulley - I used one with 20 teeth but it really doesn't matter\nGT2 idler - 3mm bore\nGT2 timing belt - 2 meters for half a meter slider(better to have extra)\n8mm smooth rod - I got a meter long one which I cut in half\n4x LM8UU linear bearings\nM3 screws and nuts\naluminum profile or M8 threaded rods for structural integrity\n3D printed files\nMaterials for the electronics:\nArduino pro micro\nA4988 stepper driver\n0.96\" OLED I2C screen\nLi-po battery 3S1P or a power bank(2.1A recommended)\nLE33CD-TR | 3.3V voltage regulator - substitutes: LM2931AD33R | L4931ABD33-TR - any other 3.3V regulator with the same pinout should work if it can handle at least 100mA\n4x tactile buttons\nMy rotary encoder - One file modified\n9x 10k 0805 resistor\n2x 1k 0805 resistor\n2x 10k 1/4w resistor\n3x 100nF 0805 capacitor\n1x 2.2uF 0805 capacitor\n2+2x MSW-1 micro switch - get the ones with wheels | 2 for the encoder + 2 for the slider\nstep-up or step-down converter - depending on what battery you use\n1x 3 pin right angle pin header\n1x male and female 3pin 2.54mm Molex connector", "step_imgs": ["https://cdn.instructables.com/FX3/99PW/JRKYZO7Y/FX399PWJRKYZO7Y.LARGE.jpg", "https://cdn.instructables.com/FQO/F939/JRKZ09BD/FQOF939JRKZ09BD.LARGE.jpg"], "step_title": "Step 1: Tools, Materials, Files"}, {"step": 2, "steps_text": "Skip to 4:33 in the video to get to the assembly of the frame.\nI started by cutting my meter long smooth rod in half with a hand saw. When I tried to insert it into to the printed parts if was way too tight so I had to use a drill with 8mm drill bit to enlarge it. That made it fit a lot better. Before I pushed the rods in tough I put the linear bearings on them as there isn't going to be an opportunity for that later. I didn't use any glue as the rods were held really snug but feel free to use some.\nNext, I mounted the camera carriage with some zip ties. The whole thing started to look like a slider and the camera carriage actually moved smoothly which was a good sign so I put the stepper motor in place and secured it with four M3 screws. Following that, I mixed some five-minute epoxy to glue the legs. The two legs next to the motor may look Identical however one of them has a little notch while the other doesn't. The one without the notch goes on the side where electronics is going to be and the other one on the other side of course. I also found that once you have all three of them in place, It's good to put the slider on a flat surface and let the glue cure like that.\nNext, I installed the pulley on the motor shaft and tightened the grub screws. On the other side of the slider, I installed the idler with an M3 screw and a locknut. I didn't tighten these all the way as I don't want to seize the bearing. It was time for the timing belt and here is where I want to remind you to get one that's long enough. No particular reason, just saying. I locked one end of the belt on the camera carriage by simply looping it around this ingenious hook, which is a design I stole from Thingiverse by the way. I then wrapped the belt around the pulley and idler and locked the other end on the camera carriage too. Making sure the belt was as tight as possible.\nAt this point, the slider is pretty much finished except for one crucial detail. It's supported entirely by the smooth rods. I simply took a right angle aluminum profile and screwed it to the bottom of the slider. There is a couple of holes designed where M3 screws will just self tap into the plastic. If you don't like that solution you can also use M8 threaded rods or you can come up with your own way. I've also put a small block of wood in the middle of the profile so I can attach it to a tripod but you don't have to do that.", "step_imgs": ["https://cdn.instructables.com/FFT/7T28/JRKZ0OV3/FFT7T28JRKZ0OV3.LARGE.jpg", "https://cdn.instructables.com/F9T/GEZO/JRKZ0OV5/F9TGEZOJRKZ0OV5.LARGE.jpg", "https://cdn.instructables.com/F9Y/XK86/JRKZ0OWA/F9YXK86JRKZ0OWA.LARGE.jpg", "https://cdn.instructables.com/FT7/N2XY/JRKZ0OWC/FT7N2XYJRKZ0OWC.LARGE.jpg", "https://cdn.instructables.com/FXM/UMNA/JRKZ0OXI/FXMUMNAJRKZ0OXI.LARGE.jpg", "https://cdn.instructables.com/FNF/H2S5/JRKZ0OYN/FNFH2S5JRKZ0OYN.LARGE.jpg", "https://cdn.instructables.com/FFT/ZKEJ/JRKZ0OZS/FFTZKEJJRKZ0OZS.LARGE.jpg", "https://cdn.instructables.com/F4O/LL7O/JRKZ0P0Z/F4OLL7OJRKZ0P0Z.LARGE.jpg", "https://cdn.instructables.com/FRJ/VI6H/JRKZ0P24/FRJVI6HJRKZ0P24.LARGE.jpg", "https://cdn.instructables.com/FVB/O5W2/JRKZ0P39/FVBO5W2JRKZ0P39.LARGE.jpg", "https://cdn.instructables.com/F39/BNEZ/JRKZ0P3A/F39BNEZJRKZ0P3A.LARGE.jpg", "https://cdn.instructables.com/FKE/D6UH/JROTMXUK/FKED6UHJROTMXUK.LARGE.jpg", "https://cdn.instructables.com/FOG/XX30/JRKZ0P53/FOGXX30JRKZ0P53.LARGE.jpg"], "step_title": "Step 2: Assembling the Frame"}, {"step": 3, "steps_text": "If a picture is worth thousands of words then the animation above is worth at least an entire paragraph. Yet it doesn't tell the whole story. First of all the PCBs. They are both single sided so they can be homemade easily. I have included the eagle files so you can modify it or get it made professionally. One thing to keep in mind is that a ton of stuff is actually connected to the main PCB and you'll need to run wires all over the place. Start with the OLED, move to the small PCB then wire the microswitches and encoder and finish with the motor and power wires.\nSpeaking of the encoder. This is the rotary encoder I'm using but the base of the part is modified. The modified part is in the RAR file with 3d models but I've included it here too for convenience or confusion. Whichever it'll end up being.", "step_imgs": ["https://cdn.instructables.com/FH3/5EMR/JRKZ2OQG/FH35EMRJRKZ2OQG.LARGE.jpg", "https://cdn.instructables.com/F1H/UY5B/JROTM1ND/F1HUY5BJROTM1ND.LARGE.jpg", "https://cdn.instructables.com/FX8/D999/JROTMYXL/FX8D999JROTMYXL.LARGE.jpg", "https://cdn.instructables.com/F1K/ITIT/JROTM1OZ/F1KITITJROTM1OZ.LARGE.jpg", "https://cdn.instructables.com/FE8/ID1N/JROTM6OE/FE8ID1NJROTM6OE.LARGE.jpg"], "step_title": "Step 3: Assembling the Electronics"}, {"step": 4, "steps_text": "To power the slider, all you need is 5V for the electronics and 12V for the motor. I ran a cable along the aluminum profile towards the back end. I ended this cable with a Molex connector as shown above. I built two different power supplies.\nLet's start with the Li-Po battery. The battery is linked in the materials above if you're interested. Since it a 3 cell battery it already outputs around 12V so I connected that directly. For the 5V I'm using a small adjustable step-down converter called Mini-360. There is just enough room for it in the model. The connector, converter, and wires are all held in place with a generous amount of hot glue.\nFor the power bank, it's a little bit different story. First of all, this is an old discontinued Xiaomi 10000mAh power bank so I'm sorry if your's doesn't fit but I've included the step file so anyone can modify it. The power bank must be able to provide at least 2.1A because the motor can get hungry. Since USB power banks provide 5V It's the 12V we need to worry about. Unfortunately, it's the 12V where most of the current will be drawn so a beefy step-up converter is necessary. I went with XL6009 which also adjustable so don't forget to set the trimmer first. Just like before, everything here is hot glued in place.\nWhen it comes to the motor it will happily run even on 24V and you might even be able to make it run on 2 cell Lithium battery which is just 7.4V. If you find that your motor is getting really warm really quickly or it's simply unable to carry the camera you need to adjust the current limit. It's set with the potentiometer on the a4988 driver board as shown on the picture above. Honestly, I played with it for a while until the motor would get slightly warm after a couple minutes of use. There is a proper way of doing it but this is good enough :D", "step_imgs": ["https://cdn.instructables.com/FTP/VLYQ/JROTMD64/FTPVLYQJROTMD64.LARGE.jpg", "https://cdn.instructables.com/FPS/LQCA/JROTMEIC/FPSLQCAJROTMEIC.LARGE.jpg", "https://cdn.instructables.com/FM1/ISDG/JROTMEOB/FM1ISDGJROTMEOB.LARGE.jpg", "https://cdn.instructables.com/F6N/61N5/JROTMEOC/F6N61N5JROTMEOC.LARGE.jpg", "https://cdn.instructables.com/FTF/A16Z/JROTMGS8/FTFA16ZJROTMGS8.LARGE.jpg", "https://cdn.instructables.com/FM3/C6Y5/JROTMGSH/FM3C6Y5JROTMGSH.LARGE.jpg", "https://cdn.instructables.com/FEN/FWOC/JROTMGSJ/FENFWOCJROTMGSJ.LARGE.jpg", "https://cdn.instructables.com/F2P/U4G7/JROTMI3Q/F2PU4G7JROTMI3Q.LARGE.jpg"], "step_title": "Step 4: Power Supply"}, {"step": 5, "steps_text": "The video(@10:40) explains exactly which variable can be changed and what they do so I'm not going to repeat myself rather I'm will add even more information. I'm running Arduino 1.8.8 but it should work on almost any version. You will need to install a couple of libraries if you don't have them already. Go to sketch > Include Library > Manage Libraries... In the library manager look for Adafruit ssd1306 and Adafruit GFX and download them.\nIn the video, I said you'll have to figure out the number of steps on your own but I was in a good mood today and I made a simple program to calculate the number of steps. It's the one named steps_counter. All you have to do is to put the head on one end hit confirm button, wait till the slider gets to the other end and hit the button again. The number of steps will be sent over the serial port.\nI've also mentioned the experimental version which I decided to put on my GitHub so if you want to contribute or just download it, that's where it'll be.", "step_imgs": ["https://cdn.instructables.com/F13/S410/JROTMNJ3/F13S410JROTMNJ3.LARGE.jpg", "https://cdn.instructables.com/FO3/85PK/JROTMOK3/FO385PKJROTMOK3.LARGE.jpg", "https://cdn.instructables.com/FOQ/SCZ3/JROTMOK2/FOQSCZ3JROTMOK2.LARGE.jpg"], "step_title": "Step 5: Code"}, {"step": 6, "steps_text": "I've already used the slider couple of times and I have to say it's awesome. The shots are brilliant. Just like any other project, after finishing it I can think of hundred ways I could improve it. And most likely I will. For now, though I'll give it some time so I get comfy with it and then I'll find out what upgrades are really important.\nLet me know if you need any help with this project or if I forgot anything. Also, consider subscribing to my youtube channel where I'll also post any big updates to the project.", "step_imgs": [], "step_title": "Step 6: Conclusion"}], "channel": "Electronics"}]