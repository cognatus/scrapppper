[{"category": "Technology", "description": "Inspiring Speaker Projects", "title": "Inspiring Speaker Projects", "url": "https://www.instructables.com/id/Inspiring-Speaker-Projects/", "steps": [], "channel": "Speakers"}, {"category": "Technology", "description": "Hi all.\n\nSo...I was bored one day, and on those days I usually get in the workshop and take something apart. My girlfriend hates it. (She usually comes home and something is drying on the radiator, or I've got paint on the floor!)\nThis time my victim was an old broken radio from the 1950's. Initially I thought about putting a bluetooth speaker inside, but that has been done. No learning there. But a Google home? Now that's intriguing. And as it turns out, bar a few trial and error moments, pretty damn easy.\nBowing down to the requests from friends and on groups, I give you this tutorial. How to take a plastic, inoffensive Google Home device, and give it the Vintage twist!\n\nThanks and enjoy.\nNeal.x", "title": "Google Home Mod - Into a Vintage Radio!", "url": "https://www.instructables.com/id/Google-Home-Mod-Into-a-Vintage-Radio/", "steps": [{"step": 1, "steps_text": "So for the purposes of this experiment, I didn't want to spend over \u00a3100 on a google home device and totally destroy it. Remember...we're in uncharted territory here! Luckily on my local 'Facebook Selling Page' someone had one up for \u00a350. They had decided they didn't like it and preferred Alexa. Fools.\n\nWith this unboxed, slightly grubby plastic miracle soon in my hand, I needed to find it a home.\n\nLuckily the local junk shop had just the thing. Sat lonely in the front window was this old radio. Solid wood, made by Bush in the early 1950's. Not working, but it didn't matter. For the princely sum of \u00a320 she was mine!\n\nNext up is seeing what we're dealing with...", "step_imgs": ["https://cdn.instructables.com/FPP/IAIS/JFUAFB69/FPPIAISJFUAFB69.LARGE.jpg", "https://cdn.instructables.com/F7B/WZ4R/JFUAFB6J/F7BWZ4RJFUAFB6J.LARGE.jpg", "https://cdn.instructables.com/F8W/FMOD/JFUAFDVS/F8WFMODJFUAFDVS.LARGE.jpg"], "step_title": "Step 1: Step 1: Get a Google Home and a Radio."}, {"step": 2, "steps_text": "DISCLAIMER- Do NOT take the back off of a Radio or any other vintage appliance with it plugged in\nUnlike modern radios with transformers, you have pure 240v running into this machine and you more than likely WILL electrocute yourself and I wouldn't trust a fuse from over half a decade ago saving you either. Just don't. Leave the power cord alone!\n\nNow...disclaimer aside, lets get the back off. Old radios were designed to allow access to the back for changing certain settings, frequencies, and valves when they blew. It wouldn't be a rare sight to have an engineer poking around and swapping out valves for you over the period of a few years.\n\nThankfully in this case, and with most other radios too, this is a simple two thumb screws! (encouraged by a flat head screwdriver where needed)\n\nInside you see all the workings. This radio was totalled. The wires were decaying (rubber coating as opposed to plastic and degraded. Had I plugged it in we would of had a fire!) and blown valves. This radios 'old school' days were over.\nIf you have a radio that works, and is beautiful in its own way, then please leave it alone. I wouldn't dream of writing off a bit of history if it still worked ok! I believe every cool 'vintage' item has a story to tell. In this radios case it had it story, which sadly ended, and I'm just writing the next chapter!\n\nI simply took a set of screwdrivers to it. I wanted to keep the front knobs/dials there for aesthetics so the bottom metal plate had to stay. The rest of the valves, electronics, resistors etc......rip them out and junk them!", "step_imgs": ["https://cdn.instructables.com/F2G/UI3D/JFUAFB5Z/F2GUI3DJFUAFB5Z.LARGE.jpg", "https://cdn.instructables.com/F2L/5Y3B/JFUAFFE1/F2L5Y3BJFUAFFE1.LARGE.jpg", "https://cdn.instructables.com/FG7/LUIR/JFUAFB6Q/FG7LUIRJFUAFB6Q.LARGE.jpg", "https://cdn.instructables.com/FZZ/D1CV/JFUAFB6V/FZZD1CVJFUAFB6V.LARGE.jpg", "https://cdn.instructables.com/FUK/V155/JFUAFB70/FUKV155JFUAFB70.LARGE.jpg"], "step_title": "Step 2: Step 2 - Out With the Old..."}, {"step": 3, "steps_text": "So.. the cabinet is empty bar a few items, its now time to turn to our 'donor' google.\n\nI had help with this process, which was a Google home 'Teardown' video on Youtube.\nSO out came my torx screwdrivers and decided to tear the Google down. A T6 and T8 Torx screwdriver (star shaped!) and a plastic 'spudger' (or small flexible/plastic item needed for 'leverage'. In some instances even a biro will do!\n\nWatch the video above. Take your time. Its only a 15 minute job but you don't want to break an electric ribbon etc... because a google home is likely to cost you \u00a350+ and it would be a terrible waste.\n\nYou will find what looks like three speakers. Don't worry, there's only one. The other two are diaphragms in a plastic surround to try and give such a small device more BASS as its only a little speaker. Scrap them. We're about to mount it in a big wooden cabinet. Bass won't be a problem! ha ha ha haaaaaa (evil genius laugh)\nThe one thing it doesn't cover is how to remove the LED board at the top of the Google home. The most important bit! Fear not...all will be revealed in the next step!", "step_imgs": ["https://cdn.instructables.com/FKN/0XNM/JFUAFB78/FKN0XNMJFUAFB78.LARGE.jpg", "https://cdn.instructables.com/FB4/WMG7/JFUAFB7A/FB4WMG7JFUAFB7A.LARGE.jpg"], "step_title": "Step 3: Step 3 - Empty Spaces"}, {"step": 4, "steps_text": "So congrats. You have stripped down a google home carefully, and you have the component parts...almost!\nRemember the ribbons simply unplug by lifting the little black tab. Easy right? There's not a lot to a google home despite being a clever beast. Soldering not needed.\n\nNow.... the lid. Google have used some seriously sticky stuff to hold the LED board to the lid of the device. All you have to remember is it's just tape. Not glue, not special tabs. Just tape. You can do it.\n\nBasically we need to loosen the tape and get something under the board to CAREFULLY pry it away from the surface. I decided to use some sharp snips to cut away at the white casing to get as close to the base of the circuit board as possible. If you have to pry at something why go from such a poor angle? We don't need the excess plastic so cut it away and lose it!\n\nThen I got my girlfriends hair dryer, held it about 4-5 inches from the device. 40 seconds will do. Don't get it too hot. We don't want to cook anything!\n\nEvery time it was warm I would go under the edge of the board with a biro/spudger/or even a flathead screwdriver with a bit of electrical tape wrapped around the end (to avoid causing any real damage to the board) and slowly coax it away from the tape. May take a couple of tries. Let the glue slowly detach. Don't go wrenching anything!\n\nWhen out, first thing to do is piece it together and see if it all still works! ...See next step.", "step_imgs": ["https://cdn.instructables.com/F6A/DWB2/JFUAFKEK/F6ADWB2JFUAFKEK.LARGE.jpg", "https://cdn.instructables.com/FOR/90CG/JFUAFKFW/FOR90CGJFUAFKFW.LARGE.jpg"], "step_title": "Step 4: Step 4 - the Trickiest Bit (and It's Not Even That Hard!)"}, {"step": 5, "steps_text": "Connect the ribbons back together. They are pretty robust so should be absolutely fine. You will find it sounds TERRIBLE. The speaker due to not being mounted inside anything and laid on a bench means no bass, and lots of rattling around. This is to be expected. (We'll rectify that soon enough!)\n\nThe one to watch is the really little ribbon, which connects to the panel from the base. This I believe is your wireless receiver/transmitter. If you want to access the internet (obviously vital for your device to work) then carefully connect and disconnect this tiny cable in the same fashion like the others. Don't break it.\nI didn't but I can see it would be easy to if you weren't gentle with it.\nWhen lifting the device around, try to minimise any of the ribbons hanging and waving about. Especially this little one.", "step_imgs": ["https://cdn.instructables.com/FV0/YN5A/JFUAFB7G/FV0YN5AJFUAFB7G.LARGE.jpg"], "step_title": "Step 5: Step 5 - Test All Works"}, {"step": 6, "steps_text": "Excuse the older picture of the internals, I didn't take one at this stage. Yours should be nice and empty by now!\n\nThe wooden backboard that holds in the speaker is held by 6 simple screws. Then the whole thing removes, mesh included. This is the perfect template for a new board!\n\nYou'll need some plywood or MDF that is the same thickness as the original. Draw around it and mark the screw holes the same. We are going to make a new one - minus the big old speaker hole!\n\nI literally drilled the screw holes, taping the old one as a template, drew around it and then cut out!", "step_imgs": ["https://cdn.instructables.com/FYH/Z40K/JFUAFPV1/FYHZ40KJFUAFPV1.LARGE.jpg", "https://cdn.instructables.com/FCL/DUJ4/JFUAFQ9L/FCLDUJ4JFUAFQ9L.LARGE.jpg"], "step_title": "Step 6: Step 6 - Wooden Backboard"}, {"step": 7, "steps_text": "With our template cut we then needed to make some holes. Now one would assume you just cut a little circle (55mm by memory but measure first!) for the speaker dead centre in the middle of the board.\n\nThe problem is the google home speaker doesn't come with 'mounting holes' that you would then attach the speaker to the wood with. This was a stumbling block, but we got around it.\n\nCut a hole in the middle just wider than the size of your speaker. By this I mean that the speaker passes straight through the hole, but without much wiggle room. If the speaker is indeed 55mm, cut a 55mm - 56mm hole. The cut itself will add you a mm each side anyway!\n\nNow mark where you will be putting the LED board (the one you painfully extracted with the hairdryer!) This will allow you to make the touch/LED/Microphone element of Google home available in your new radio.\nBasically draw around the circle to work out where you want it and cut it out!\n\n(you can use a jigsaw for this simply enough, but I found a hole cutter for approx \u00a36.00 from local hardware store made the process a lot easier!)", "step_imgs": ["https://cdn.instructables.com/FLS/S1UW/JFUAFBB3/FLSS1UWJFUAFBB3.LARGE.jpg"], "step_title": "Step 7: Step 7 - New Wood"}, {"step": 8, "steps_text": "To enable the speaker to mount without screws, we needed to quickly make a second board.\n\nThis will feature another circle where the speaker goes, but 4mm smaller in diameter. When the two bits of wood are paired, it will create a 'lip' for the speaker to sit in, and subsequently be mounted!\n\nUse your new wooden board as a template and make a second board. Thickness is not a worry, but try and mirror the same thickness as the first board.\nThe only other consideration is where we run the cable for the LED board. We have the big circle/recess for it on the first board to sit in, but we need space for the ribbon to run through!\n\nThe ribbon connects at the top of the circular circuit board. Basically, if you were looking at the radio with it mounted it would be at 12 o'Clock.\nDrill a hole approx 20mm wide for the ribbon in that location. This will allow it to pass through with decent wiggle room!. See pic if explanation fails to give the right idea!\nThen simply glue the front and back panel together with wood glue. Clamp them, leave overnight.\nOnce dry, take the components out of the way and give the wood a liberal spray of black spray paint!", "step_imgs": ["https://cdn.instructables.com/F48/GUSC/JFUAFBB2/F48GUSCJFUAFBB2.LARGE.jpg", "https://cdn.instructables.com/FAG/D4WZ/JFUAFBAY/FAGD4WZJFUAFBAY.LARGE.jpg"], "step_title": "Step 8: Step 8 - Second Board"}, {"step": 9, "steps_text": "If you were clever enough to leave that super sticky adhesive on your LED board that you removed from the google home, you are a genius. It turns out its still very sticky and PERFECT to stick to the back of speaker mesh and remain secure!\nPlace the LED board on the back of your old speaker mesh. Ensure it is in the correct place so when mounted it sits in the 'hole' you've made.\nIn this section you also need to get a glue gun, put a bead of glue in the lip you have made for your speaker. Then simply press your speaker through, mounting securely, and wait 5 mins for it to set!", "step_imgs": ["https://cdn.instructables.com/FMQ/FN7U/JFUAFBBJ/FMQFN7UJFUAFBBJ.LARGE.jpg"], "step_title": "Step 9: Step 9 - Assembly 1"}, {"step": 10, "steps_text": "You're almost ready, now you need your mesh.\nNOTE: BEFORE DOING THIS I RECOMMEND RECONNECTING THE RIBBON TO THE L.E.D BOARD AND FEEDING IT THROUGH THE HOLE YOU DRILLED FOR IT BEFORE STICKING THE MESH DOWN. GETTING IT CONNECTED FROM THE OTHER SIDE AFTER ALL IS APPLIED WILL BE EXTREMELY DIFFICULT. CONNECT NOW AND NOT HAVE TO WORRY LATER!\n\nGrab the old mesh from the original (or choose a new material yourself, but I love the original vintage vibe!)\nSpray the edges of the board (being careful to avoid the speaker that is now in) with spray adhesive. Allow to 'flash off' for 5 mins, then line up the LED board, and stick back onto the wood!", "step_imgs": ["https://cdn.instructables.com/F4J/Z1AO/JFUAFBBT/F4JZ1AOJFUAFBBT.LARGE.jpg", "https://cdn.instructables.com/F0U/AQ7T/JFUAFBC3/F0UAQ7TJFUAFBC3.LARGE.jpg"], "step_title": "Step 10: Step 10 - Sticky Situation"}, {"step": 11, "steps_text": "Screw the board back in. We have doubled the thickness of the boards, so you will likely need longer screws. But other than that, screw it back in!\n\nThen lay radio on it's front and reconnect the ribbons carefully on Google Home. Be careful as its fiddly and you don't have much length to work with.\nYou'll find that the components will stay close to the speaker, but actually thats just fine as you now have a big board to attach them to!\nI thought about screws etc, but to avoid any rattling I just used the glue gun again. There is plenty of space on the main board etc...to use hot glue without touching any components. Just pick a nice plain green bit to apply it to!\nThread the power cable through the pre-existing hole you will likely have on the radios back panel. After plugging it into the google home board I recommend putting a blob of glue on the cable attaching that to the board also. If someone pulls this device with it plugged in you don't want it to damage the board. This simple blob of glue will help prevent this! (See pic)", "step_imgs": ["https://cdn.instructables.com/F10/WSB3/JFUAFBCN/F10WSB3JFUAFBCN.LARGE.jpg", "https://cdn.instructables.com/FBT/TXFD/JFUAFBD4/FBTTXFDJFUAFBD4.LARGE.jpg"], "step_title": "Step 11: Step 11 - Assembly 2"}, {"step": 12, "steps_text": "Your almost done! Keep going!\n\nFor a final touch, go on eBay and get a USB strip light. Its flexible, self adhesive, and cuttable if you get something too long!\n\nI bought a USB one for \u00a33.00. I simply peeled off the adhesive tape and stuck it above the glass panel inside the radio (where the old bulbs would be that I removed!) and ran the cable out the back alongside the Google Home power lead. I plugged this into a TP Link - Smart Socket so I could turn the light on 'on-demand'!\n\nReattach the back of the radio with the two thumb screws, plug your device in, and I believe you are done!\nCongrats!", "step_imgs": ["https://cdn.instructables.com/FSZ/2XEP/JFUAG3EA/FSZ2XEPJFUAG3EA.LARGE.jpg"], "step_title": "Step 12: Step 12 - Let There Be Light!"}, {"step": 13, "steps_text": "And here is the end result. Excuse the dog, I believe she was rudely awoken.\nI love it. Its louder than the original Google Home due to the solid wooden cabinet and sounds fabulous!\n\n(the video doesn't do the sound justice!)\n\nAny questions, drop me a line!", "step_imgs": [], "step_title": "Step 13: Step 13 - the End Result"}], "channel": "Gadgets"}, {"category": "Technology", "description": "In this project we're going to show you how to make your mailbox more fun and usefull. With this mailbox, if a letter is in your mail you have a nice light wich shows if you have mail, and you can controll this mailbox with bluetooth to automaticly throw away or keep your mail, with your phone.\nwe used an arduino and some attachments to make it and we're going to show you how your can make this for yourself.", "title": "Yes - No : an Arduino Driven Mailbox", "url": "https://www.instructables.com/id/Yes-No-an-Arduino-Driven-Mailbox/", "steps": [{"step": 1, "steps_text": "You'll be needing a range of objects to make this mailbox.\n- a loose mailslot (you can probably buy these at a thrift shop)\n- some wood (to make the box we used MDF)\n- 2 arduino UNO's\n- a LDR (and a 220 resistor)\n- an Adafruit Neopixel ledring (we used the 16 led ring)\n- 2 servo's\n- 1 HC-06 slave bluetooth module\nand some wires to connect evrything to the arduino's, many woodworking tools like a drill, sandpaper, tape, a saw, a jigsaw, and some hammer and nails.", "step_imgs": ["https://cdn.instructables.com/FTF/CKKO/JFUAHQON/FTFCKKOJFUAHQON.LARGE.jpg", "https://cdn.instructables.com/FJL/O8CH/JFUAHQSW/FJLO8CHJFUAHQSW.LARGE.jpg", "https://cdn.instructables.com/FAB/LQJU/JFUAHQOM/FABLQJUJFUAHQOM.LARGE.jpg", "https://cdn.instructables.com/FPP/1SZT/JFUAHQMI/FPP1SZTJFUAHQMI.LARGE.jpg", "https://cdn.instructables.com/FKK/TU4O/JFUAHQOL/FKKTU4OJFUAHQOL.LARGE.jpg", "https://cdn.instructables.com/FJ7/BN3F/JFUAHQMH/FJ7BN3FJFUAHQMH.LARGE.jpg", "https://cdn.instructables.com/FW5/LIDO/JFUAHQKE/FW5LIDOJFUAHQKE.LARGE.jpg"], "step_title": "Step 1: What Do You Need?"}, {"step": 2, "steps_text": "So now that you have your tools and equipment, we can start by making a reasonable size box. The minimum size of the box is 2 times the width of your mailslot, and 3 times the height of your mail slot (But you can make it as big as you want). when making the box, make sure you have a hole cut where the mailslot has to be, and you have room to make holes and cut pieces out.\nif you made your box, it's time to measure it and place 1 of the servo motors directly underneath the mailslot, and the other servo at the same place on the other side (don't attach them to the wood yet!). If you have those in their correct spot, then you can find a light and smoothe piece of wood to put between the servo's and make sure it can make a 50 degree turn each way, this is gonna be your surface where the mail comes. first you need to drill a hole in the wood where the mail is gonna be (probably the middle) and make the hole the size of your LDR, after that you'll push the LDR through the hole till the top is on the same level as the wood and then tape the underside so it's attached. now you'll connect this piece of wood to the servo's and carefully attach them in their spot. At last you'll drill some holes in the wood where you want your NeoPixel ring to be. for this process you'll have to carfully and precisely drill the holes in the correct places. once you're satisfied and the holes are in the correct place, you can tape your NeoPixel ring to the back and we can start with coding.", "step_imgs": ["https://cdn.instructables.com/FQF/1PC7/JFUAHFPK/FQF1PC7JFUAHFPK.LARGE.jpg", "https://cdn.instructables.com/FL3/9I94/JFUAHFQH/FL39I94JFUAHFQH.LARGE.jpg", "https://cdn.instructables.com/FKG/MYQH/JFUAHFTB/FKGMYQHJFUAHFTB.LARGE.jpg", "https://cdn.instructables.com/FEE/C1VX/JFUAHFPH/FEEC1VXJFUAHFPH.LARGE.jpg", "https://cdn.instructables.com/FOB/7K7C/JFUAHFNL/FOB7K7CJFUAHFNL.LARGE.jpg"], "step_title": "Step 2: Making the Box"}, {"step": 3, "steps_text": "so to start off, we'll need to code the arduino wich is going to be checking if there's mail. This arduino will be connected to your LDR (with a 220 resistor), and your NeoPixel ring. the code for this arduino is called Code for Ring. next you'll need to take your second arduino and connect the servo's and the bluetooth module. The code for this arduino is called Code for Phone, because we also need to connect it to your phone. For this we used a simple app making website called MIT App Inventor. With this program we made a simple interface with wich you can connect to the bluetooth, and change the values in the serial monitor of the arduino. The arduino then reads from the serial monitor and checks if the value is 1 2 or 3, and if it is, it can do something like controling the servo's.", "step_imgs": ["https://cdn.instructables.com/FWZ/6VT0/JFUAHFU8/FWZ6VT0JFUAHFU8.LARGE.jpg", "https://cdn.instructables.com/F6R/3UPD/JFUAHFU9/F6R3UPDJFUAHFU9.LARGE.jpg", "https://cdn.instructables.com/F5T/HSTH/JFUAHFSE/F5THSTHJFUAHFSE.LARGE.jpg", "https://cdn.instructables.com/FQW/UH8H/JFUAHFRH/FQWUH8HJFUAHFRH.LARGE.jpg", "https://cdn.instructables.com/F3Y/AM88/JFUAHFRE/F3YAM88JFUAHFRE.LARGE.jpg"], "step_title": "Step 3: Coding the Arduino's"}, {"step": 4, "steps_text": "if you builld everything right and connected all the arduino attachments withouth short circuiting any wires, then you can test your beautifull creation. plug both arduino into your computer (or use some sort of powerbank or battery) and see your work in action. place a letter on your LDR and the ring wil shine, connect your app to the arduino through bluetooth and turn the plate to throw away your mail, or keep your mail. We even used a paper shredder to destroy unwanted mail.\nThat was it! go make your own beautifull mail of the future system!", "step_imgs": ["https://cdn.instructables.com/FTD/GGFY/JFUAHK8L/FTDGGFYJFUAHK8L.LARGE.jpg", "https://cdn.instructables.com/FHX/GFD0/JFUAHK8K/FHXGFD0JFUAHK8K.LARGE.jpg"], "step_title": "Step 4: Finish"}], "channel": "Arduino"}, {"category": "Technology", "description": "build a nice and easy ring light for your dslr camera", "title": "3dPrinted Ring Light", "url": "https://www.instructables.com/id/3dPrinted-Ring-Light/", "steps": [{"step": 1, "steps_text": "after many shapes in tinkercad, i made 4 .stl files\nthe first file is for my pendax k-50 for 18-55 lenses.remake this for your dslr if needed\nthe diameter of the ring is 140 mm", "step_imgs": ["https://cdn.instructables.com/FU2/LZ2R/JFUAH0PQ/FU2LZ2RJFUAH0PQ.LARGE.jpg", "https://cdn.instructables.com/F4Y/DEKE/JFUAH0PI/F4YDEKEJFUAH0PI.LARGE.jpg", "https://cdn.instructables.com/FCF/IEBS/JFUAH0PJ/FCFIEBSJFUAH0PJ.LARGE.jpg", "https://cdn.instructables.com/F7N/FQHV/JFUAH0PN/F7NFQHVJFUAH0PN.LARGE.jpg", "https://cdn.instructables.com/FMF/CX41/JFUAH0PP/FMFCX41JFUAH0PP.LARGE.jpg"], "step_title": "Step 1: .stl Files"}, {"step": 2, "steps_text": "add instand glue carefully like the pics", "step_imgs": ["https://cdn.instructables.com/F11/BW39/JFUAH0HT/F11BW39JFUAH0HT.LARGE.jpg", "https://cdn.instructables.com/FQK/EARZ/JFUAH0HX/FQKEARZJFUAH0HX.LARGE.jpg", "https://cdn.instructables.com/F1I/S834/JFUAH0I7/F1IS834JFUAH0I7.LARGE.jpg"], "step_title": "Step 2: Instand Glue"}, {"step": 3, "steps_text": "check the dimentions for the next step", "step_imgs": ["https://cdn.instructables.com/FYQ/4F3A/JFUAH0IF/FYQ4F3AJFUAH0IF.LARGE.jpg", "https://cdn.instructables.com/FTJ/LGSO/JFUAH0J9/FTJLGSOJFUAH0J9.LARGE.jpg", "https://cdn.instructables.com/F32/TA0D/JFUAH0JA/F32TA0DJFUAH0JA.LARGE.jpg", "https://cdn.instructables.com/F42/J8NI/JFUAH0JE/F42J8NIJFUAH0JE.LARGE.jpg"], "step_title": "Step 3: Dimentions"}, {"step": 4, "steps_text": "i dont have black meterial to use and i paint it", "step_imgs": ["https://cdn.instructables.com/F3W/T709/JFUAH0JG/F3WT709JFUAH0JG.LARGE.jpg", "https://cdn.instructables.com/F5J/69GV/JFUAH0JL/F5J69GVJFUAH0JL.LARGE.jpg"], "step_title": "Step 4: I Dont Have Black Meterial"}, {"step": 5, "steps_text": "make two cicles like the pic and cut the plastic white sheet with scissor\nTHOSE METERIALS ARE FROM A 20CM-18W-220V LED LIGHT", "step_imgs": ["https://cdn.instructables.com/F7C/MT4L/JFUAH0JN/F7CMT4LJFUAH0JN.LARGE.jpg", "https://cdn.instructables.com/F94/MUWN/JFUAH0JP/F94MUWNJFUAH0JP.LARGE.jpg", "https://cdn.instructables.com/FVK/NMIK/JFUAH0JT/FVKNMIKJFUAH0JT.LARGE.jpg"], "step_title": "Step 5: White Sheet"}, {"step": 6, "steps_text": "glue like the pics, the plastic sheet", "step_imgs": ["https://cdn.instructables.com/FYE/68DG/JFUAH0K1/FYE68DGJFUAH0K1.LARGE.jpg", "https://cdn.instructables.com/FT0/PO5V/JFUAH0K5/FT0PO5VJFUAH0K5.LARGE.jpg", "https://cdn.instructables.com/F2U/DSMV/JFUAH0K6/F2UDSMVJFUAH0K6.LARGE.jpg"], "step_title": "Step 6:"}, {"step": 7, "steps_text": "i use led strip 14.4 watts per meter, cool white\ncut carefully the one edge like the pics (check from the fist if it still works)", "step_imgs": ["https://cdn.instructables.com/F5N/AIDO/JFUAH0K7/F5NAIDOJFUAH0K7.LARGE.jpg", "https://cdn.instructables.com/FQ8/ZYOK/JFUAH0K8/FQ8ZYOKJFUAH0K8.LARGE.jpg", "https://cdn.instructables.com/FXN/C2JZ/JFUAH0KA/FXNC2JZJFUAH0KA.LARGE.jpg"], "step_title": "Step 7: The Leds"}, {"step": 8, "steps_text": "before you take of the paper from leds make sure if are fits nice\n\nnegative outside , +12 inside", "step_imgs": ["https://cdn.instructables.com/F3W/DW0S/JFUAH0KD/F3WDW0SJFUAH0KD.LARGE.jpg", "https://cdn.instructables.com/FAE/OH4U/JFUAH0KB/FAEOH4UJFUAH0KB.LARGE.jpg", "https://cdn.instructables.com/FJP/ZQSE/JFUAH0KC/FJPZQSEJFUAH0KC.LARGE.jpg"], "step_title": "Step 8: Add the Leds"}, {"step": 9, "steps_text": "solder naked wires or use white cables", "step_imgs": ["https://cdn.instructables.com/FBK/JFB6/JFUAH0KF/FBKJFB6JFUAH0KF.LARGE.jpg", "https://cdn.instructables.com/FKE/9EI4/JFUAH0KJ/FKE9EI4JFUAH0KJ.LARGE.jpg", "https://cdn.instructables.com/FA7/9SJG/JFUAH0KL/FA79SJGJFUAH0KL.LARGE.jpg"], "step_title": "Step 9: Sodering"}, {"step": 10, "steps_text": "test it before next steps", "step_imgs": ["https://cdn.instructables.com/FZZ/QWUB/JFUAH0KO/FZZQWUBJFUAH0KO.LARGE.jpg", "https://cdn.instructables.com/FQ4/76UG/JFUAH0KS/FQ476UGJFUAH0KS.LARGE.jpg"], "step_title": "Step 10: Test"}, {"step": 11, "steps_text": "like the pics make one or print one with white meterial\n...i don't make .stl file for this...", "step_imgs": ["https://cdn.instructables.com/FD4/4TJC/JFUAH0KX/FD44TJCJFUAH0KX.LARGE.jpg", "https://cdn.instructables.com/FMX/OIM9/JFUAH0L0/FMXOIM9JFUAH0L0.LARGE.jpg", "https://cdn.instructables.com/FXK/PWY5/JFUAH0L2/FXKPWY5JFUAH0L2.LARGE.jpg", "https://cdn.instructables.com/FP6/W6Y9/JFUAH0MK/FP6W6Y9JFUAH0MK.LARGE.jpg", "https://cdn.instructables.com/FD1/0WPA/JFUAH0MM/FD10WPAJFUAH0MM.LARGE.jpg", "https://cdn.instructables.com/FFC/H24O/JFUAH0MO/FFCH24OJFUAH0MO.LARGE.jpg", "https://cdn.instructables.com/FCR/A186/JFUAH0MQ/FCRA186JFUAH0MQ.LARGE.jpg"], "step_title": "Step 11: Reflector"}, {"step": 12, "steps_text": "make a hole at a nice point for the cable, i secure this with some instant glue\nTEST IT AGAIN", "step_imgs": ["https://cdn.instructables.com/F8D/EC5D/JFUAH0MS/F8DEC5DJFUAH0MS.LARGE.jpg", "https://cdn.instructables.com/FRE/JFNA/JFUAH0MV/FREJFNAJFUAH0MV.LARGE.jpg", "https://cdn.instructables.com/FFN/5XOZ/JFUAH0MX/FFN5XOZJFUAH0MX.LARGE.jpg", "https://cdn.instructables.com/FVV/9IUM/JFUAH0MY/FVV9IUMJFUAH0MY.LARGE.jpg"], "step_title": "Step 12: Connector"}, {"step": 13, "steps_text": "glue the two rings with the reflector and with the leds", "step_imgs": ["https://cdn.instructables.com/FWV/ZSEU/JFUAH0OP/FWVZSEUJFUAH0OP.LARGE.jpg", "https://cdn.instructables.com/F8R/1ODD/JFUAH0OQ/F8R1ODDJFUAH0OQ.LARGE.jpg", "https://cdn.instructables.com/FSH/LZDF/JFUAH0OR/FSHLZDFJFUAH0OR.LARGE.jpg", "https://cdn.instructables.com/FUP/ITTN/JFUAH0OV/FUPITTNJFUAH0OV.LARGE.jpg", "https://cdn.instructables.com/FPM/0DEW/JFUAH0OX/FPM0DEWJFUAH0OX.LARGE.jpg", "https://cdn.instructables.com/FQW/PHMN/JFUAH0OY/FQWPHMNJFUAH0OY.LARGE.jpg", "https://cdn.instructables.com/FZQ/206Z/JFUAH0P0/FZQ206ZJFUAH0P0.LARGE.jpg"], "step_title": "Step 13:"}, {"step": 14, "steps_text": "this works with 12 v\nif you want you can find a DC to DC converter 5v to 12v to use it with a power bank", "step_imgs": ["https://cdn.instructables.com/FGE/T9ML/JFUAH0P2/FGET9MLJFUAH0P2.LARGE.jpg", "https://cdn.instructables.com/F8C/TFYC/JFUAH0P6/F8CTFYCJFUAH0P6.LARGE.jpg", "https://cdn.instructables.com/FWQ/I69R/JFUAH0P8/FWQI69RJFUAH0P8.LARGE.jpg", "https://cdn.instructables.com/FWU/EOPK/JFUAH0PB/FWUEOPKJFUAH0PB.LARGE.jpg"], "step_title": "Step 14: Its Ready"}, {"step": 15, "steps_text": "FOLLOW ME HERE\nAND SUBSCRIBE TO MY YOUTUBE CHANNEL !!!\n\nTHANKS !!!", "step_imgs": ["https://cdn.instructables.com/FTE/P2VU/JFUAH0PE/FTEP2VUJFUAH0PE.LARGE.jpg", "https://cdn.instructables.com/FZ2/FG2F/JFUAH0PG/FZ2FG2FJFUAH0PG.LARGE.jpg"], "step_title": "Step 15: End"}], "channel": "3D Printing"}, {"category": "Technology", "description": "In this Instructable I will be taking you through the basics of creating your own 6 keyed macropad, controlled by an Arduino. I will be taking you through what you need, how to assemble it, how to program it, and how to improve it or make it your own.\nAfter much research, I couldn't really find a great guide on how to make a macro keypad, or a hand wired keyboard in general. So I decided to do it myself, in the simplest way possible, without diodes, resistors, or anything else. I also wanted to have a unique modular keyboard, where I could grab any parts that I needed, this is the first of many other parts. This module's inspiration was from arrow keys on a keyboard, being able to fit it in your pocket, and taking it anywhere if you needed a few extra buttons on the go.\nDue to how this keypad was made, I highly recommend that you read all of the Instructable before you make any purchasing decisions.\nI also tried to make the Instructable in a logical order, but I don't build logically, so it might be better to skip around in the order of the steps depending on how you build.", "title": "Custom Macro Mechanical Keypad", "url": "https://www.instructables.com/id/Custom-Macro-Mechanical-Keypad/", "steps": [{"step": 1, "steps_text": "The longest step is right here, buying the parts and waiting for them to ship. Amazon links will be Canadian Amazon. The parts that you are going to need are:\nMechanical Key switches\nI choose the Gateron switches with clear tops from here (Clear tops make the next step easier, most common types of switches are covered there too)\nOther places to buy can be found here under your favorite switch section\nI also highly recommend doing some research here on what switch you would like here under the 'Feels' section\nMechanical Keycaps\nMake sure that they are compatible with your switch that you choose!\nAlso make sure that they are back light compatible so you can change the colour\nVendors can be found here under the 'Novelty Keys (standard manufacturing)' section, unless you want a full Keycap set\nAddressable RGB LED strips (Optional, but highly recommended)\nI bought something similar to these from Amazon\nMake sure that the LEDs are WS2812B LEDs, they can accept a lower voltage.\nYou could also buy 3mm regular LEDs of your favorite colour to use, but you'd need resistors\nAn HID compatible micro controller (I used a Pro Micro)\nI bought these from Amazon for the best deal\nYou can buy other micro controllers, but make sure that they are both Arduino and HID (human input device) compatible\nA 128x32 I2C OLED display\nI bought this from Amazon\nAccess to a 3D printer\nTry with local libraries or schools around you and see if they have a 3D printer\nI've personally never used an online service, but you could use those too (something like this)\nThin Wire\nGeneral Tools Needed\nSoldering Iron and Solder\nSide Cutter Pliers\nSmall Files (Somewhat optional)\nHot Glue Gun and Glue\nScrewdriver and screws of your choice", "step_imgs": ["https://cdn.instructables.com/F0A/MTLZ/JFCTBY0B/F0AMTLZJFCTBY0B.LARGE.jpg"], "step_title": "Step 1: Getting the Parts"}, {"step": 2, "steps_text": "Start to disassemble the switches that you bought. We are doing this to allow the light to shine through better to reach our keycaps. If you have chosen keycaps that don't support RGB, skip this step.\nTake 2 small wedges (I used 2 flathead screwdriver bits) and push under the tabs on the side of the switch. Then put something in between the top and bottom so it doesn't close. Proceed to push the tabs of the other side, so no tabs should still be holding the top on. After that, finish up and pop off the top of the switch. There usually is four parts, the top and bottom of the casing, the spring, and the stem (sliding part of the switch that holds the keycap).\nStart to cut small little pieces out of the bottom of the case to allow more light to pass. Cut the tab that holds the switch on the plate first. Then cut a bit of the original LED pass through, (the part with the 4 holes, those are for the legs of the LEDs). Slowly cut down on that tab inside to get down to the bottom. Then proceed to cut up to the cylindrical center of the switch that holds the spring. We don't need to go further than that. After that, widen the hole a bit, by slowly cutting off both sides with the pre-molded supports. Another optional step is to file it down, to make it nicer, and less jagged. Make sure that there are little to none plastic bits inside of the casing from this, as you don't want the switch to get stuck. Make sure to do these cuts slow and small, as I've broken a few cases from the width of the side cutters forcing the case apart.\nIf the top half of your switch isn't clear as well, try to modify it to allow the light to shine through. Try little by little without breaking the switch, because you don't want the stem to fall out. A possible solution may be to cut out the piece of plastic that would hold a normal LED, and leave the plastic that keeps the stem enclosed, and only file it down.", "step_imgs": ["https://cdn.instructables.com/FSM/BANL/JFCT6J6A/FSMBANLJFCT6J6A.LARGE.jpg", "https://cdn.instructables.com/F56/AYXT/JFCT6JUL/F56AYXTJFCT6JUL.LARGE.jpg", "https://cdn.instructables.com/FMS/UOFM/JFCT6K03/FMSUOFMJFCT6K03.LARGE.jpg", "https://cdn.instructables.com/FIF/VV1G/JFCT6KK5/FIFVV1GJFCT6KK5.LARGE.jpg", "https://cdn.instructables.com/F8U/2CY5/JFCT6LBH/F8U2CY5JFCT6LBH.LARGE.jpg", "https://cdn.instructables.com/FP9/3X11/JFCT6NNS/FP93X11JFCT6NNS.LARGE.jpg", "https://cdn.instructables.com/F0M/R0S3/JFCT6NZC/F0MR0S3JFCT6NZC.LARGE.jpg", "https://cdn.instructables.com/FFJ/1ET8/JFCT6NUA/FFJ1ET8JFCT6NUA.LARGE.jpg", "https://cdn.instructables.com/FMS/W35J/JFCT6NV7/FMSW35JJFCT6NV7.LARGE.jpg", "https://cdn.instructables.com/FRS/3DBC/JFCT6O1I/FRS3DBCJFCT6O1I.LARGE.jpg", "https://cdn.instructables.com/FWV/2POV/JFCT6O1R/FWV2POVJFCT6O1R.LARGE.jpg", "https://cdn.instructables.com/FE7/0E9N/JFCT6O3D/FE70E9NJFCT6O3D.LARGE.jpg"], "step_title": "Step 2: Keyswitch Modifications"}, {"step": 3, "steps_text": "You will need to download one of the zip files below, and 3d print them. There will be different versions depending on what you want. There will be a folder with all of the normal stl files in it (KeybArrowSTLFiles), and one with the Autodesk inventor files (KeybArrowSourceFiles), so that you could modify the files and change them to your own needs. The files are slightly different from what I printed, this was because there were some design flaws, and I felt I could improve them. Example would be the sides of the case, mine were a bit too high so the keycaps wouldn't push all the way down, the new files should fix that.\nThe design of them was pretty complicated, with over 30+ steps. All I will say is that if you want to design a case for a different size, you should make sure that you have experience with somewhat complicated 3d designs. It's not really for people who are new to 3d design.\nNote that both of the casing files are at a 3 degree angle, and you should angle them flat on the bed.", "step_imgs": ["https://cdn.instructables.com/F1V/XF4A/JFCTD0HB/F1VXF4AJFCTD0HB.LARGE.jpg"], "step_title": "Step 3: 3d Printing"}, {"step": 4, "steps_text": "Now that we have all of our parts, and we have the 3d printed parts, it's time to assemble it a bit!\nPlace all 6 of the switches into the plate, and glue them in place. We need to glue them because we cut off the tabs that hold it in place. I suggest waiting to put in the OLED because you don't want it slanted.\nNext, cut 6 LEDs off and place them on the LED plate. The squares on the plate are to help you align the LEDs. The square LEDs will fit into them, so you could 3d print another to help alignment, or just line it from the back. Make sure that the arrows point to the other LEDs, as DO would be soldered to DI. Use those squares to glue on the LEDs with hot glue, and hold them in place and wait for the glue to hold.\nI used a prototype plate for the switches to hold the LEDs (in the images) because I don't like to waste filament, and decided to reuse. The new file won't affect anything, just make it simpler to align.", "step_imgs": ["https://cdn.instructables.com/FWD/FZBU/JFCT6O79/FWDFZBUJFCT6O79.LARGE.jpg", "https://cdn.instructables.com/F6B/0YFG/JFCT6OBC/F6B0YFGJFCT6OBC.LARGE.jpg", "https://cdn.instructables.com/F8H/IMI1/JFMT940O/F8HIMI1JFMT940O.LARGE.jpg", "https://cdn.instructables.com/FYW/HLJ5/JFMT93MQ/FYWHLJ5JFMT93MQ.LARGE.jpg", "https://cdn.instructables.com/FCU/CDAT/JFMT93JZ/FCUCDATJFMT93JZ.LARGE.jpg", "https://cdn.instructables.com/F6L/2HF1/JFMT93LA/F6L2HF1JFMT93LA.LARGE.jpg", "https://cdn.instructables.com/F6O/WS2I/JFMT93L9/F6OWS2IJFMT93L9.LARGE.jpg"], "step_title": "Step 4: Assembling What You Have So Far"}, {"step": 5, "steps_text": "I recommend using this Instructable for a thorough walk through. They did a really well job of explaining it.\nYou will need to download and import this library and this library for the code to work.\nFirst wire it up. Wire VCC to VCC, and GND to GND. Then wire the SDA and SCL pins. The SDA and SCL pins may vary from each Arduino, but on the pro micro, SDA is wired up to pin 2, and SCL is wired up to pin 3. Look up a pinout of your micro controller if you are unsure of what pins SDA and SCL are wired to.\nNext is to get it displaying and making images. There will be files below of how to get it working. The first step is to use the ScreenScan code (originally provided by Arduino here). Upload the code onto the Pro Micro and open the Serial reader (under the tools tab at the top). It will read you back and address of the OLED. If your address is 0x3C, then you don't need to change anything. If it isn't, then you need to go and change the address in the ssd1306_128x32_i2c code and the final code (named ArrowKeypad) so that it works properly.\nNow test out the example code that was included with the Adafruit ssd1306 library that for the 128x32 i2c code (named ssd1306_128x32_i2c)\nAfter that, keep the Arduino on, and try to line up the OLED on the switch plate, then turn it off and try to glue it in place. You will most likely not get this first try, but keep adjusting to try to get it aligned, so that it isn't angled when it is completed. I suggest gluing one side a bit, and checking before you glue the other side to make sure that it isn't slanted.\nDownload the code now, and use the other files of code in Step 8 later in this Instructable.", "step_imgs": ["https://cdn.instructables.com/F4H/CS0I/JFMT68KI/F4HCS0IJFMT68KI.LARGE.jpg", "https://cdn.instructables.com/FOQ/0IVK/JFIIWY1P/FOQ0IVKJFIIWY1P.LARGE.jpg", "https://cdn.instructables.com/FI6/2ILO/JFIIWY5E/FI62ILOJFIIWY5E.LARGE.jpg", "https://cdn.instructables.com/FIO/EWNP/JFIIWXR5/FIOEWNPJFIIWXR5.LARGE.jpg", "https://cdn.instructables.com/F5I/LLLF/JFIIWXKS/F5ILLLFJFIIWXKS.LARGE.jpg", "https://cdn.instructables.com/FQE/PQHB/JFIIWXTA/FQEPQHBJFIIWXTA.LARGE.jpg", "https://cdn.instructables.com/F7V/B4V2/JFIIWXXA/F7VB4V2JFIIWXXA.LARGE.jpg", "https://cdn.instructables.com/F9G/FMJP/JFIIWXZ2/F9GFMJPJFIIWXZ2.LARGE.jpg"], "step_title": "Step 5: Setting Up the OLED"}, {"step": 6, "steps_text": "A Fritzing file will be available below. This will allow you to interact with the circuitry and if you left click and hold, you can see what wires are all connected (highlighted in yellow dots) files that need to be imported to Fritzing before you open the file will be down below (for the Pro Micro and LEDs).\nMake sure the pins labled \"MOSI, MISO or SCLK\" are UNUSED or it will cause glitches with the OLED.\nAfter cutting the 6 LEDs into single strips, and gluing them onto the plate. Place the soldering iron on the copper pads, and add solder to each of the pads. Cut small pieces of wire and strip half of it, twist it, then take the other half off and twist the wire. The wire will need to be held with pliers or some soldering helping hands, while you get it held in place by the solder. Add more solder to hold it there nicely. Solder all of the LEDs in the row together. Cut a wire, and solder it to the end of the LED on the first row, with the label 'DO' or 'D-', and connect it to the first LED on the second row with the label 'DI' or 'D+'. You can do this with the 5v and GND too, but it's easier if the first LEDs 5v and GND on each row are wired together. Wire the 5v wire to VCC, Data pin to any digital pin (code has it set as 10) and GND to a GND on the Arduino.\nTo get the Arduino to recognize an input, the switches need to connect ground to a data pin. So, you can solder one wire to connect all 6 switches to ground. Solder one wire to each switch, and if possible, try to change the colours of wire to keep track of what switch is what wire. Feed the wires through the LED plate and wire them to a data pin on the Arduino (I used data pins 5-9 for this)\nThe two switches on the side have different functions, one is a reset switch for programming, while the other is a function switch, which will switch between layers of the Keypad to quickly change functions of the buttons. The top switch, is wired to reset (RST) and GND, when connected, it causes the reset. The bottom switch is wired up to pin 18, which is labeled as A0 on the Pro Micro.Give yourself some slack with the switch wires, as you still need to slide in the plates, and too little of a wire won't allow the plates to inset through the top.", "step_imgs": ["https://cdn.instructables.com/F7R/UVAG/JFMT68JQ/F7RUVAGJFMT68JQ.LARGE.jpg"], "step_title": "Step 6: Soldering"}, {"step": 7, "steps_text": "Before you want to close the case, you want to test it and make sure it works. You could skip to step 11 to assemble it now. I just find that testing it beforehand helps to reduce the amount of times you open and close it. Even though it shouldn't affect it much, I used the Arduino IDE version 1.8.3, so if you have issues, try to use this version. The code is on Step 5, it is a zip file that you will need to extract and upload through Arduino.\nThere will be multiple pieces of code below. One will be the final code, two will be to test the OLED (One to test, one to find the address), and one will be to test the RGB. Use the final code to test the switches.\nIf you want to design your own code, I'm teaching that in the next 3 steps, but it's totally fine if you want to use my code, or take it and modify it.\nSome basics of programming this\nUnder the \"Tools\" tab, then the \"Board\" tab, set it to an Arduino Leonardo (Unless you have a micro controller that is different from the Pro Micro)\nUse the reset switch every time you upload code to the Pro Micro. I've found that once the compiling bar is full, and is still uploading, it is a good time to flick the switch on and off to program. (If you don't do this, the upload will just fail to upload.)\nAll Libraries used must be installed and imported\nTo import, go to the tools tab and click include library. (Note also, my code examples on the webpage need to have the <> around the library name, I couldn't enter them in the example code section on the next few steps)\nThe LED and OLED libraries will be initialized as objects, you can name them whatever, but for the sake of demonstration I will name them 'strip' and 'display'\nCall functions from a object by typing the object name, putting a period, then typing the function you want to use\nNext test the LEDs, upload the code, and make sure that they all work. If none work, your missing a pin going to them, check your soldering of the first LED.\nLastly, use the final code to test your switches. This should be the easiest to do. Note that now, after uploading some HID code, you will need to reset the Arduino every time that you upload code to it. Just reset it halfway through uploading it and it should work.", "step_imgs": ["https://cdn.instructables.com/FKJ/3H28/JFIISI9V/FKJ3H28JFIISI9V.LARGE.jpg"], "step_title": "Step 7: Introduction to Programming"}, {"step": 8, "steps_text": "Out of all of the programming, the switches are the least complicated. To get it recognized as a keyboard, all you need to use is the Arduino Keyboard library, and conditional statements. Make sure that under the Tools tab, the Board is set to an Arduino Leonardo if you are using a Pro Micro like me.\nBefore we start with the conditional statements, we need to setup the pins. We only need this to run once, so put this into the void setup. Start with pinMode(PinNum, INPUT_PULLUP); This tells the Arduino that the PinNum is expecting an input, and that it adds a pullup resistor (so that we don't need to wire any in the hardware)\nThe input pullup has 2 states, LOW and HIGH. The Arduino will read LOW on a pin when it is connected to Ground (GND) and will read HIGH when it is disconnected. To find what the pin is reading, we use digitalRead(PinNum).\nStarting with the basics, we use conditional if statements to find if the key was pressed. We want this to run over and over so we want this to be put the void loop. If the key was registered as \"LOW\" then we want the key to be pressed, and the key to be released when the input is \"HIGH\". So to do this, we code if(digitalRead(PinNum)==LOW){ [Code for when the button is pressed] } and code if(digitalRead(PinNum)==HIGH){ [Code for when the button is released] }\nFor the code for the keyboard, import the Keyboard library. Put a keyboard.begin(); in the void setup. Then inside of our conditional statements, we use keyboard.press([key]); and keyboard.release([key]); or keyboard.releaseAll(); if you had multiple keys pressed. You could also use keyboard.print([String]); and keyboard.println([String]) to print strings, like a password. print and println are similar, but println just adds an ENTER, so it automatically goes to the next line.", "step_imgs": ["https://cdn.instructables.com/FT2/UTF7/JFCTBXZV/FT2UTF7JFCTBXZV.LARGE.jpg", "https://cdn.instructables.com/FY5/OIC9/JFMT9405/FY5OIC9JFMT9405.LARGE.jpg"], "step_title": "Step 8: Programming the Switches"}, {"step": 9, "steps_text": "Starting with programming the OLED, you will need to have basic setup code. This basically tells the computer where your OLED is located, the size of it, and how it is programmed. Once you have the setup code for the OLED, assuming you're only displaying text, it should be pretty simple to program. First include the Wire and SSD1306 libraries.\nDefine the OLED_RESET as 4, and include the SSD1306 library in your code. Put Adafruit_SSD1306 display(OLED_RESET); in your code to begin the use of the Adafruit SSD1306 library.\nStart with Serial.begin(9600); then display.begin(SSD1306_SWITCHCAPVCC, 0x3C); to initialize the i2C display with the address of 0x3C (unless it changed in step 5). Put both of these in void setup because they only need to run once.\nBefore you program the display, you should make sure you use display.clearDisplay. If you don't what was inputted will overlap, and depending on what was changed, won't be legible. You also want to set the origin, so use display.setCursor(0,0); to set it on a point on your display, put (0,0) to reset it back to the beginning. To set the size of the text, use display.setTextSize(1); I wouldn't go much bigger than 1, it's much larger than expected.\nEven though our display is monochrome, we need to set the text colour, so we program it like display.setTextColor(WHITE);\nNow that you have your library imported and your display object, you can start to program it. To add text, use display.print(); and display.println(); to print strings. Again, print doesn't add a return while println automatically returns to the next line when something is printed again.\nBefore you get anything to display, you need to update the OLED, and tell it to update, you use display.display(); with no parameters and it will update.\nThe code should look something like this now:\n//Code Made by Foster Phillips\n#include Adafruit_SSD1306.h\n#include Wire.h\n#define OLED_RESET 4\nAdafruit_SSD1306 display(OLED_RESET);\n\nvoid setup() {\n  pinMode(SWITCH,INPUT_PULLUP);\n  Serial.begin(9600);\n  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);\n  display.display();\n  delay(2000);\n  display.clearDisplay();\n  display.setTextSize(1);\n  display.setTextColor(WHITE);\n}\nvoid loop() {\n  display.display();\n  delay(2000);\n  display.clearDisplay();\n  display.setTextSize(1);\n  display.setCursor(0,0);\n  display.println(\"Hello World!\");\n  display.println(\"Hello Instructables!\");\n}\nThis Instructable and this Github link are both very good references for troubleshooting, and learning more on programming the display respectively.", "step_imgs": ["https://cdn.instructables.com/FZF/NC1E/JFMT93JK/FZFNC1EJFMT93JK.LARGE.jpg", "https://cdn.instructables.com/FAA/CA76/JFMT9407/FAACA76JFMT9407.LARGE.jpg", "https://cdn.instructables.com/FZV/36CV/JFCT11IZ/FZV36CVJFCT11IZ.LARGE.jpg"], "step_title": "Step 9: Programming the OLED"}, {"step": 10, "steps_text": "The LEDs are reasonably simple too. We will be using the Adafruit Neopixel library. Personally, the NeoPixel library is very similar to programming in Processing, if you've ever programmed in that.\nThere is first setup code, addressing what library we are using, and setting up an array that basically says how many LEDs are on the pin, what pin is for data, and how it is programmed. This is done with an example like Adafruit_NeoPixel strip = Adafruit_NeoPixel(6, 10, NEO_GRB + NEO_KHZ800); This explains that there are 6 LEDs, the pin is pin number 10, and that is uses the NEO_GRB + NEO_KZH800 type of addressable strips. Usually the last argument doesn't need to be touched, the LED strips that I used didn't need that changed.\nAfter that you need the strip.begin(); function showing that you are ready to start using them. Nothing needs to be in the brackets.\nOnce you have that, you can call different functions with the strip.[function]\nOne that you will need to know is strip.setPixelColour. This has 4 functions in the brackets. You have the LED in the 'array' of LEDs (remember, Arrays start at 0) and the corresponding Red, Green, and Blue values from 0-255. This will allow you to mix the desired Red Green and Blue values to get a colour that you want. The code should look like: strip.setPixelColour(0,0,255,255); if you wanted a cyan colour on the first LED.\nThe LED also needs to be sent that data, which is what strip.show(); does. It will update the pixels after you have changed something with them. Nothing needs to go into the brackets.\nThe code should look like:\n//Code Made by Foster Phillips\n#include Adafruit_NeoPixel.h\n#define PIN 10\n#define Num 6\n\nAdafruit_NeoPixel strip = Adafruit_NeoPixel(Num, PIN, NEO_GRB + NEO_KHZ800);\n\nvoid setup() {\n  strip.begin();\n  strip.show();\n}\nvoid loop() {\n  strip.setPixelColor(0,255,0,0);\n  strip.setPixelColor(1,255,0,0);\n  strip.setPixelColor(2,255,0,0);\n  strip.setPixelColor(4,255,0,0);\n  strip.setPixelColor(3,0,0,255);\n  strip.setPixelColor(5,0,0,255);\n  strip.show();\n}\nMore information can be found here.", "step_imgs": ["https://cdn.instructables.com/FS0/OKZX/JFMT93ML/FS0OKZXJFMT93ML.LARGE.jpg", "https://cdn.instructables.com/FB6/2ZPA/JFMT93LB/FB62ZPAJFMT93LB.LARGE.jpg", "https://cdn.instructables.com/FF2/TGJM/JFMT93MO/FF2TGJMJFMT93MO.LARGE.jpg", "https://cdn.instructables.com/FCE/LJCG/JFMT93MH/FCELJCGJFMT93MH.LARGE.jpg", "https://cdn.instructables.com/FUZ/PB65/JFMT9NZA/FUZPB65JFMT9NZA.LARGE.jpg"], "step_title": "Step 10: Programming the LEDs"}, {"step": 11, "steps_text": "This is probably the easiest step, and the coolest.\nStart by placing and sliding in the Pro Micro onto the case closure. Glue it into place with some hot glue.\nThe case/closure was designed so that you could side the switch plate and LED plate in. Just slide it in, and depending on how you printed it, you might need to file or cut the inside of the slides to remove some overhang plastic.\nAfter that, get your screws and just jam it into there and make your own screw holes. I didn't have specific screws threads when I designed the files, so I just made a hole roughly the size of a screw and screwed it in myself. Heating it up with a lighter will help to form it to the screw you need, and usually strengthen the layers. Make sure not to push too much on the screws, or you can strip the head. I used Allen key screws to reduce this risk.\nThen just push the key caps onto the keys. Then it's pretty much done! My version of the Arrow Key Macropad is complete!", "step_imgs": ["https://cdn.instructables.com/FRF/6ZX7/JFMT9AEY/FRF6ZX7JFMT9AEY.LARGE.jpg", "https://cdn.instructables.com/FQG/9KB4/JFMT9AHI/FQG9KB4JFMT9AHI.LARGE.jpg", "https://cdn.instructables.com/FSE/6Z33/JFMT9AIK/FSE6Z33JFMT9AIK.LARGE.jpg", "https://cdn.instructables.com/FA6/HE6L/JFMT9AM4/FA6HE6LJFMT9AM4.LARGE.jpg", "https://cdn.instructables.com/FUF/X5CS/JFCT11GT/FUFX5CSJFCT11GT.LARGE.jpg", "https://cdn.instructables.com/FG0/U4V2/JFCT11FB/FG0U4V2JFCT11FB.LARGE.jpg", "https://cdn.instructables.com/FL2/CA47/JFCTBXZT/FL2CA47JFCTBXZT.LARGE.jpg", "https://cdn.instructables.com/F8K/CTEW/JFCT11GV/F8KCTEWJFCT11GV.LARGE.jpg"], "step_title": "Step 11: Assembling!"}, {"step": 12, "steps_text": "Now that you know how to make my version, you can make your own! Keyboards can arguably be about expressing yourself, so just having someone else's design isn't fun unless you modify it to fit you! There are many improvements you can do! Here are some improvements that I'd like to add or thought of!\nProgram Tetris and other simple games\nMake it bluetooth\nAllow it to read data from slideshows and display it one the OLED (Show the slide number and name of slide)\nMake a full sized keyboard or larger macropad using these technique\nYou'd need to learn how to make a switch matrix for this\nProgram more colour options\nProgram macros for games, video editing, etc.\nUse the Autodesk Inventor source files to make your own case, or modify it to be uniquely yours!\nAdd a sound board to have it double as a music player\nHave fun making! Feel free to add tips or ask me to clarify!\nIf you want to see progress of the other parts, consider checking out my Instagram. Thanks for reading my Instructable!", "step_imgs": [], "step_title": "Step 12: Your Own Improvements!"}], "channel": "Arduino"}, {"category": "Technology", "description": "Hi again,\nIn this instructable I will describe the design and build of a mostly 3D-printable tellurion (a special class of orrery) which shows how the earth and moon revolve about the sun, about each other and how they rotate on their axes. I've always had an interest in these devices, both technical and aesthetic, but never previously had the time to complete one the old fashioned way (using a lathe & mill).\nThe device presented here stands about 20 cm high and sits on a 20 cm diameter wooden base. It is driven by a hand-crank (one turn per day) and can demonstrate the following phenomena:\nDaily rotation of the earth about its axis\nEarth's axial orientation fixed in relation to the celestial sphere, with an axial tilt of 23.4 degrees\nRevolution of the moon about the earth with 29.5 days (a synodic month) between each new moon\nTidal locking / synchronous rotation of the moon with respect to earth (same face always facing earth)\nMoon's orbital plane inclined at 5.15 degrees to the ecliptic (plane of the earth's orbit round the sun)\nPrecession of the lunar nodes on a 18.6 year cycle\nPosition of the sun in zodiac throughout year (not technically rigorous - more for aesthetics)\nIt started life when I needed to help with a school project on the solar system. I created a simple 3D-printed kit that a child could assemble, which just modelled the motion of the moon round the earth as the latter revolved around the sun during the year. In the process I discovered that I could reliably 3D-print good quality large gears (known as 'wheels' to horologists). Nevertheless the kit was pretty crude and didn't generate the right number of synodic months in a year, so I set about improving it for my own satisfaction. Unfortunately it turned into a bit of an obsession for three months as I added and tested more and more complications (more horologist jargon). What you see here is the end result. There are still things that require improvement but better is the enemy of good enough...\nThere are a number of orrery / tellurion designs described on the internet but most seem to be incomplete or involve you paying for plans. On the other hand, attempting a project like this from a blank sheet is not for the faint-hearted. There are probably enough PLA gears etc. in my scrap bin to make another two of these (which won't work properly!). Anyway, I like to give back to the online maker community when I can, so I've attached all the STL files necessary to reproduce the device (except the lovely zodiac dial, which was designed by sully108 - details below). It's only fair to point out that even though most of the moving parts were made on a 3D printer, a considerably amount of fettling was required to get everything to fit together and work properly. If you choose to reproduce this work (note obligatory disclaimer: \"at your own risk!\"), you'll have a working thing of beauty to put on the mantelpiece and appreciate for years to come. Perhaps you'll make improvements and publish them in your turn...\nIMPORTANT NOTE - this is a living document which gets added to as I or others make improvements. If you want to reproduce the tellurion, please read the whole document first (and probably some of the comments).", "title": "Sun, Earth and Moon Model (Tellurion / Orrery) With 3D Printed Parts", "url": "https://www.instructables.com/id/Sun-Earth-and-Moon-Model-Tellurion-Orrery-With-3D-/", "steps": [{"step": 1, "steps_text": "To build the tellurion you will need the following:\nA well-adjusted 3D printer and plenty of PLA (allow about 25 m); a very well levelled glass bed is essential, and hairspray might be necessary for the larger wheels\nStacking brass tube - this comes in millimeter sizes and each tube will nest neatly into the next size up, so it's really useful for clockmaking where you have multiple rotation rates on a common axis. It's also good for bearings. Albion Alloys in the UK makes the BTxM series, where x is the OD in mm. You will need 3, 4, 5, 6 and 7 mm for this model.\nSun, moon and earth orbs. I found some patterned glass marbles on Ebay which look really nice, but you could make and decorate your own from wood or plastic if you wanted\nWooden baseplate - I used a beechwood chopping board with a 200 mm OD\nA nice zodiac or star dial for finishing it all off - I used the beautiful \"Astrology Zodiac for Septimus Clock\" by sully108, which lives at https://www.thingiverse.com/thing:2476063\nRubber feet for baseplate\nHotmelt glue\nSmall diameter pipe-cutter\nNeedle-files (for cleaning up the brass tubes)\nJunior hacksaw (for cutting 3 mm brass tube)\nPillar drill and range of bits (for cleaning up 3D-printed bores)\nRubber sheet or glove (to help with gripping the thin tube whilst cutting)\nM3 screw (for the crank handle)\nThe following items are optional but will make life much easier if available:\nLathe with tailstock-mounted Jacob's chuck (for cleaning up roughly-cut brass tube and for clearing out bores)\nBench vice (for pressing bearings and gear shafts into 3D printed parts)", "step_imgs": [], "step_title": "Step 1: You Will Need..."}, {"step": 2, "steps_text": "The most important part of tellurion design is working out what all the gear ratios should be to reflect accurately the motions of the heavenly bodies. Superficially this is quite easy, but there is a trap for the unwary (which I fell into twice!). It arises because the axes of the gears modelling the earth and moon motions revolve once around the sun axis in one 'year', thus the attached celestial bodies will experience one rotation with respect to the sun even in the absence of those same gears. It's well worth doing your research thoroughly and not believing the first thing you read.\nThe majority of the moving parts in this model are mounted on a single curved 'orbit' arm tethered to the sun axis. (this being a throwback to the school project). I decided I wanted a simple hand-crank which would advance the model by one day for each clockwise rotation. The motion of the hand-crank is transmitted to the rest of the tellurion by a pair of bevel gears. In order to simplify the design, I opted to put the hand-crank at the moving end of the orbit arm, so it moves slowly round the baseplate of the tellurion as you operate it. The backplane for the crank helps to support the free end of the orbit arm, which carries all the gears.\nThe hand-crank turns a pair of bevel gears which drive all the motions of the tellurion via a 10 tooth gear.\nEarth's rotation on its axis is one turn per turn of the crank, so the overall gear ratio is 1:1. The gear train is 10:10, 9:9.\nThe moon revolves round the earth once every 29.54 days, which is achieved with a 10:50, 11:65 gear train. I know this because I used the excellent, no-frills Gear Train Calculator website which works out what the best gear choice for a given ratio is, given user constraints:\nhttp://scientific601.altervista.org/gear/gearcalc....\nThe earth-moon system revolves round the sun once every 365.25 days. This is easily achieved by extending the moon's orbit train. A ratio of 365.25 / 29.54 =12.36 is required, which is obtained by a small pinion on the moon orbit gear which engages with a much larger gear representing the solar orbit. The train is 11:136, which gives a ratio of 12.36. It is more efficient to extend the moon drive than to create a completely separate train of gears to go direct from the hand-crank to the solar orbit.\nAs the earth-moon system revolves round the sun during the 'year', a 'Ferguson mechanical paradox' arrangement of gears attached to the orbit arm (39:48:39) causes the earth's axial tilt to remain fixed with respect to the celestial sphere.\nA different output gear on the mechanical paradox arrangement is also responsible for rotating the inclined lunar nodes disc. The lunar nodes (where the moon's orbit passes through the ecliptic at two points) move retrograde at a rate of 19.36 degrees per year. Therefore the moon's orbital plane has to rotate once every 18.6 revolutions of the orbit arm. This is achieved using the 39:48:37 gear train. Note that a classical mechanical paradox arrangement has three gears of the same diameter in a straight line. This isn't a strict requirement though and it was easier to put a larger gear offset from the line joining the other two.\nThe height of the moon is determined by the moon's position relative to the lunar nodes disc, by means of a push-rod on a radial arm which also serves to fix the moon's aspect relative to the earth.\nIt should be pointed out that the fact that the orientation of the earth's rotation axis is fixed with respect to the celestial sphere means that the earth would rotate once every year with respect to the sun, even if the earth did not rotate about its own axis. Thus the single turn of the hand-crank actually rotates the earth by one sidereal day (23 hours and 56 minutes) with respect to the sun, instead of a solar day (24 hours). This wasn't the first time I fell into this trap for the unwary, but as it corresponds to an error of only about 0.25% I decided it was acceptable for this application. In any case, to correct this would require four additional gears and I didn't think it was worth the effort. The first time I fell into this trap was for the school project, when I calculated the gear ratio of 365.25/27.5 for the moon's rotation (using a sidereal month of 27.5 days), which ignores the fact that the moon/earth system revolves round the sun once in a year. So I ended up with 13.4 lunar months in a year instead of the correct 12.4! Live and learn (slowly!).\nThe attached figure shows a schematic layout of the tellurion. The gears use the metric system (as do all other parts) and I've used a shorthand e.g. 136m1 to denote a 136-tooth module 1 gear. So for example 37m1054 is a 37-tooth module 1.054 gear; this is the only non-unity module gear in the whole set.\nI used FreeCAD to draw the gears and other 3D-printed parts, and Cura to slice them for 3D printing. Even so, it took many attempts to get the right design, because many of the tolerances are critical when you are trying to mesh multiple gear trains on common axes. I frequently changed my mind about the best way to do things, too. The attached picture shows all the PLA parts that didn't make it into the final tellurion!\nFreeCAD is a really good tool to use for this kind of work, because the distance between gear centres is always critical (and nothing else really matters). Therefore a constraints-based CAD tool is almost essential.Typically the work-flow would be:\nDetermine the required gear ratio\nPrint the gears (module 1, ideally)\nMesh the gears on a depthing tool and determine the optimum centre separation (a simple one is shown here, based on a design in 'Making Clocks' by Stan Bray - once a nice separation is found the scriber points at the ends of the axles can be used to mark out the correct separation, on graph paper in this case)\nEnter the centre separation as a constraint in FreeCAD when designing the support structures (such as the orbit arm in this case)\nPrint the support structure and test\nEven with this procedure, further adjustment of centre separation might be required, particularly as more and more gears are added to the assembly and tolerances build up. That's why there's plenty of scope for generating scrap PLA during the design process. You'll note in the attached picture that there are five scrap orbit arms!\nWhat's nice about this is provided you have all your gear centres correctly positioned on your cad package, the form of the support structure is totally up to you. I discovered by chance that all my centres lay broadly along an arc, which looked much nicer than the original rectilinear orbit arm (which resembled a wild west cactus by the time I'd finished!).", "step_imgs": ["https://cdn.instructables.com/FZG/UXUJ/JFSITVIA/FZGUXUJJFSITVIA.LARGE.jpg", "https://cdn.instructables.com/FJZ/6X9T/JFSIZOPN/FJZ6X9TJFSIZOPN.LARGE.jpg", "https://cdn.instructables.com/FR5/0TLY/JFUACIWR/FR50TLYJFUACIWR.LARGE.jpg", "https://cdn.instructables.com/FOV/NYC8/JFUAD2EA/FOVNYC8JFUAD2EA.LARGE.jpg"], "step_title": "Step 2: Planning Out the Gear Ratios"}, {"step": 3, "steps_text": "Here are all the STL files needed to reproduce the moving parts of the Tellurion. The file names are mostly self-explanatory (I hope).\nUPDATE - please also see the last page of this instructable, which contains revisions to some of the parts which you may or may not require, depending how your build goes.\nIt goes without saying that the 3D printer must be very well set up to print decent gears. In particular, it must not generate 'elephant's foot' (where the first layer or two are squished wider than the rest of the part) on any of the gears, as it will ruin the meshing. I used a Wanhao Duplicator i3, at 'normal' quality with 20% infill, but I did use quite expensive filament. Hairspray was used for the largest gears, to prevent the parts peeling off the glass bed. I avoided using support and printed all parts with the largest surface on the bed. This gives most of the gears a lovely mirror surface finish. My printer was set up (on the Z axis zero) to give a very thin brim, which just fell away after printing. The thought of cutting away a thick brim from a 136 tooth module one gear gives me nightmares!", "step_imgs": [], "step_title": "Step 3: Printing the Parts"}, {"step": 4, "steps_text": "The table above shows the bore sizes for each of the 3D-printed parts (which is also the OD of the brass tube which must be inserted into that bore). It also shows the estimated length of the brass tube for each part which I used.\n3D-printed bores aren't typically good enough to use without drilling out to diameter. I used a pillar drill to open up the bores (or a lathe as appropriate). Great care is needed, particularly when drilling small parts, both to avoid damage to parts and injury to hands. I used needle-nose pliers for the smallest parts. Drilling through onto a clean wooden block protects the rear face of the part.\nThe brass tube is easy to cut with a pipe cutter (except the 3 mm OD, which needs a junior hacksaw). A rubber sheet or glove is almost essential to get a good grip on the narrow tube, for cutting, cleaning and fitting. It will need cleaning up after this process, for which drilling out on a lathe is a good starting point. I did this in a lathe but it can be done by hand. If doing this, de-burr by hand with a larger drill, then use a needle file to ensure that the next size down of brass tube is a nice running fit into the tube being worked. Remember that needle file is sharp!\nTypically the corresponding brass tube is a press fit into the bore once drilled. This is quite handy as it saved me needing to glue gears to shafts. A bench vice makes it very easy to press bearings into place, but it is possible to use a piece of hardwood to press them in by hand (make sure the tube is square to the bore!).", "step_imgs": ["https://cdn.instructables.com/FA7/QZUO/JFSJ0BSD/FA7QZUOJFSJ0BSD.LARGE.jpg", "https://cdn.instructables.com/FIS/PRYL/JFSJ0AY0/FISPRYLJFSJ0AY0.LARGE.jpg", "https://cdn.instructables.com/FAF/TVAN/JFSJ0AY2/FAFTVANJFSJ0AY2.LARGE.jpg", "https://cdn.instructables.com/FBX/N0N2/JFSJ0AY3/FBXN0N2JFSJ0AY3.LARGE.jpg", "https://cdn.instructables.com/F7J/R464/JFSJ0C7U/F7JR464JFSJ0C7U.LARGE.jpg", "https://cdn.instructables.com/FP2/RE1D/JFSJ0C5Q/FP2RE1DJFSJ0C5Q.LARGE.jpg"], "step_title": "Step 4: Preparing and Installing the Shafts and Bearings"}, {"step": 5, "steps_text": "You will need to refer frequently to the schematic presented earlier to make sense of this next bit. The order of assembly is just a suggestion, but should ensure that you don't have to disassemble parts because you forgot something. It's quite handy to have a big block of wood with a 6.5 mm hole drilled in it to support the whole thing as the build progresses.\nThe trickiest part to assemble is the earth-moon sub-assembly, which has four nested tubes. Start with the 65m1/11m1 moon orbit gear (with 6 mm bearing fitted) and assemble the 37m1.054 / lunar nodes plate through it (on a 5 mm shaft) as per the diagram presented earlier. Using a simultaneous pushing and twisting motion seems to work, but don't overdo it or the gears could slip. Next fit the 3 mm tube which supports the moon into the 65m1/11m1 gear through the hole on the periphery. Then fit the 39m1 to the 4 mm shaft and insert that under the 37m1.054 gear into the 5 mm bore.\nPress-fit the spindles to the tops of earth axis, moon axis and sun tubes. Fit the moon orbit arm onto the 4 mm moon tube. This last part can now be dropped onto the 3 mm moon support shaft, with the 5 mm hole dropping over the 4 mm vertical earth shaft about which most of the gears rotate. The small push-rod on the bottom of the moon orbit arm will contact the slanted lunar nodes plate. Make sure that the moon axis tube can move freely up and down and that it drops down under gravity onto the lunar nodes plate.\nNow fit the axial tilt bracket to the top of the 4 mm vertical earth shaft. Fit a 10m1 gear to the 3 mm earth drive shaft (leaving about 6 mm projecting to fit into the orbit arm bearing below). Then insert the earth drive shaft through the 4mm vertical earth shaft. Secure this at the other end with a 9m1 gear. The earth axis tube has the other 9m1 gear pressed onto it, leaving about 6 mm projecting to fit into the bearing on the axial tilt bracket. This whole sub-assembly is now mechanically complete, but you may need to shift the positions of the gears and the relative overhangs of the tubes to get it to mesh nicely with the other gears.\nPush the 136m1 and 39m1 mechanical paradox centre gears together (they clip together) then work them up the 6 mm brass tube which will hold the sun. The rubber glove is essential here. Then attach the 6 mm spacer under the 39m1 gear.\nSlide the orbit arm up the sun tube. Then drop the 48m1 and 50m1/11m1 gears into place. The 10m1 gear with its 4 mm drive shaft should also be installed at this point. Fit the small spacer and the 12m1 bevel gear to hold this one in place.\nFit the earth-moon sub-assembly into the orbit arm. Make sure all the gears mesh neatly and are spaced nicely, as in the diagram. This will take some fiddling around but isn't too taxing, provided you can move the orbit arm up and down on the sun tube in the process.\nUse hot-melt glue to attach the orbs to the spindles. This even works quite well for the glass marbles that I used. You might find it easier to remove the earth axis tube to do this, as it's tilted when installed.\nClick the sun pointer into place at the centre of rotation of the orbit arm - shiny side up, so that there's clearance when it moves round the baseplate.\nYou should now be able to make the whole mechanism move easily by rotating the bevel gear anticlockwise (viewed from above). This will cause the moon to move anticlockwise round the earth and all the other motions to take place. Check that nothing is sticking or slipping.", "step_imgs": ["https://cdn.instructables.com/FGA/EJZC/JFSJ0E1J/FGAEJZCJFSJ0E1J.LARGE.jpg", "https://cdn.instructables.com/F5D/1W0Q/JFSJ0E29/F5D1W0QJFSJ0E29.LARGE.jpg", "https://cdn.instructables.com/FVD/AJUU/JFSJ0E2E/FVDAJUUJFSJ0E2E.LARGE.jpg"], "step_title": "Step 5: Assembly"}, {"step": 6, "steps_text": "Press a 4 mm bearing into the small end of the crank handle.\nPress the second 12m1 bevel gear onto an appropriate length of 4 mm tube and install into the crank housing, which has previously been fitted with a 5 mm diameter bearing. Press the crank handle on the other side of the 4 mm tube. Note that the bevel gear is fitted on the side of the crank housing with the large rectangular cut-out.\nClear out the support from the crank knob bore with a pair of needle-nose pliers. Then use a short M3 screw to attach the crank knob to the crank handle through the 4 mm bearing.\nOffer up the crank housing assembly to the square projection on the orbit arm (that's what the rectangular cut-out is for). Check that the two bevel gears mesh nicely. When it looks good, use hot melt glue to attach the crank housing assembly to the orbit arm.\nTake the wooden disc and use a square to find the centre. I used the corner of a piece of perspex. Mark the centre and drill to 6 mm. Apply woodstain to the top and sides of the disc if you don't like the original colour. When this is dry, self adhesive feet can be applied to the underside. Polish the finished base if desired.\nThis is the point at which any zodiac or star plate should be fitted. I used hot-melt glue at three or four points round the periphery. It's surprisingly hard to judge concentricity, I found, and the sun pointer may foul on the inner diameter at some point in the 'year' if the positioning is wrong. At least with hot-melt glue you can try again if you make a mess of it. Oh, and make sure that it's oriented correctly so the sun moves through the right constellations in the right order during a 'year'.\nNow put the rubber glove back on and fit the clear end of the sun tube into the 6 mm hole in the baseplate. It will be a tight fit, but that's what's needed. A screwing and pressing motion helps.\nThat's it. All that remains is to check that the operation is smooth around the entire 'year'.", "step_imgs": ["https://cdn.instructables.com/FOQ/MM7M/JFSJ0H5M/FOQMM7MJFSJ0H5M.LARGE.jpg", "https://cdn.instructables.com/FAC/ENCO/JFSJ0H6H/FACENCOJFSJ0H6H.LARGE.jpg"], "step_title": "Step 6: Finishing Off"}, {"step": 7, "steps_text": "Well, overall I am pleased with the result and the tellurion now lives on my mantelpiece. Considering it started life as a kit I designed for a school project (see photo), it's come a long way. It's been a valuable exercise and will set me up well for making solid progress on an earth-centric astronomical clock project which has been gathering dust in my shed for ages (that happens a lot - you can see if you look hard enough!). I made most of the gears for that project the hard way, but discovering that the 3D printer can do a better job in less time has been a revelation.\nI think there are a couple of areas for improvement in the current tellurion design, which I might address if I get chance:\nIncrease the clearance in the mechanical paradox gear train. The 48m1 gear is a fraction of a millimeter too close to the other gears and the mechanism occasionally stiffens up at certain points in the 'year', which can cause the crank to slip. If this works I will update the attached orbit arm STL file. DONE - see next step.\nIncorporate optional modifications to prevent slipping of shafts. DONE - see next step.\nReplace the crank with a knob - the gear assembly is very light so a delicate touch is needed when working the crank, particularly when going from the 5 o'clock to the 11 o'clock position, as the tendency is to pull the orbit arm up and away from its intended direction of travel. Having a large thumbwheel isn't quite as nice but would probably fix this problem as the forces would balance out to a large extent. DONE - see comment with attached STL file by scottmil. An alternative would be to move the crank axis so it was more tangential to the earth's orbit.\nGet the Earth rotating at the solar day rate rather than the sidereal rate - no, just kidding...\nThanks for reading and good luck if you decide to make one. Please post a picture as these devices seem to be popping up all over the place!", "step_imgs": ["https://cdn.instructables.com/F6Q/R9OZ/JFUAD8D3/F6QR9OZJFUAD8D3.LARGE.jpg"], "step_title": "Step 7: Conclusions"}, {"step": 8, "steps_text": "On this page I have included the STL files for the orbit arm with a slightly looser tolerance for the 48m1 mechanical paradox gear, which helps with smooth running. The axis for this wheel has been moved 0.5 mm away from both the axes of the two 39m1 wheels that it engages with. I wouldn't bother printing this though, unless you know that the baseline version is binding up in this area.\nAlso included are new bevel gears, a crank and a 10m1 (4 mm bore) which have dogs added to prevent slipping of the gear on the shaft. The drive train transmits a fair bit of torque compared to the other parts and will slip occasionally if you've frequently dismantled it during assembly. I suspect most of the slipping has arisen on mine because various key assemblies have been made then dismantled many times during development. Still, now the mitigations are available here if you need them in future.\nI only installed a new 12m1 bevel : 10m1 assembly as this was known to be slipping. The parts can be printed in the usual way but you will need to be careful when opening out the bore to the nominal dimension so as not to damage the dog. I did this by hand, by holding a drill in a piece of rubber and twisting it into the part.\nThese gears will only fit onto specially prepared shafts. This is where a bench vice comes in very handy. I held the shaft obliquely in the vice (wrapped in some rubber to prevent damage) and used a medium file to remove half the circumference of the shaft to a depth of about 1 mm (the height of the dog on the gears). By positioning the shaft correctly in the vice, you can use it to support the file, plain edge down to avoid damage to the vice jaws. Once the cut is started flip the file round and cut with face and edge simultaneously to get a nice right angle.\nThe first gear can be fitted to the prepared shaft using the bench vice. Once the shaft is installed in the orbit arm or crank housing (whichever one you are doing), waterpump pliers can be used to press-fit the second gear. In each case, ensure before pressing that the dogs on the shaft and the gear are correctly aligned relative to one another.\nFor the crank part, I have also increased the axial length by a few mm, to improve clearance on the wooden baseplate during operation. This is helpful if your baseplate isn't perfectly round or you can't find the centre of a circle!\nFinally, I have included a baseclamp part. I haven't used this on mine but it can be fitted to the underside of the wooden base, where the sun shaft emerges. If a dog is filed onto the base of this shaft, it will engage with the baseclamp and prevent slipping. Three countersunk screws can be used to fit the baseclamp, but you will definitely need feet on the baseplate after fitting it, so that the whole thing doesn't rock.", "step_imgs": ["https://cdn.instructables.com/FHE/801C/JGGTM75N/FHE801CJGGTM75N.LARGE.jpg", "https://cdn.instructables.com/FP5/JF9Y/JGGTM77F/FP5JF9YJGGTM77F.LARGE.jpg", "https://cdn.instructables.com/FKB/SBE3/JGGTM75O/FKBSBE3JGGTM75O.LARGE.jpg"], "step_title": "Step 8: Improvements to Original Design"}], "channel": "3D Printing"}, {"category": "Technology", "description": "I am sure, every maker and hobbyist are familiar with ESP8266 and I hope you also have some previous hands-on experience with the ESP8266 wifi transceiver. In this Instructable, I am not going to discuss the basic, how to get started etc. You will find tons of tutorials on the internet about these. If you want to develop a professional product using ESP8266 this instructable is for you.\nIn this instructable I am going to discuss:\n1. How to configure wifi credentials on the runtime without hardcoding\n2. Which battery technology is best for a specific application\n3. Which voltage regulator is best for ESP8266\n4. How to run your ESP8266 more than a year using AAA cell\n5. How to reduce power consumption of ESP8266\n6. How to update your ESP8266 over the year (OTA)\n7. How to make you ESP8266 supper fast", "title": "Seven Pro Tips for ESP8266", "url": "https://www.instructables.com/id/ESP8266-Pro-Tips/", "steps": [{"step": 1, "steps_text": "There\u2019s no doubt that the ESP8266 has made creating little WiFi widgets pretty easy and inexpensive. However, a lot of projects hard code the access point details into the device.\nIf you hard-coded values in your sketch, if you change your WiFi router or want to bring your device to somewhere else, you are going to need to re-program your esp8266, which isn't a good idea! This problem is even worse if you plan on a commercial product. It also makes your sketches less shareable.\nThere\u2019s a better way to do it: using the WiFiManager library. WiFiManager does what a lot of commercial devices do. It initially looks like an access point. You can connect to it using a phone or other WiFi device. Then you can configure it to join your network by setting the network ID, password, etc.\n[Witnessmenow] has a good tutorial and a two-minute video (which you can see below).\nOne image is taken from this nice instructable by Gyalu1.", "step_imgs": ["https://cdn.instructables.com/FHT/O5Q0/JFMTBYHQ/FHTO5Q0JFMTBYHQ.LARGE.jpg", "https://cdn.instructables.com/F7S/T0L6/JFMT7QLG/F7ST0L6JFMT7QLG.LARGE.jpg", "https://cdn.instructables.com/FCA/SPZW/JFMTBYHR/FCASPZWJFMTBYHR.LARGE.jpg"], "step_title": "Step 1: Configuring Wifi on Runtime (avoid Hard-coding)"}, {"step": 2, "steps_text": "When your ESP starts up, it sets it up in Station mode and tries to connect to a previously saved Access Point\nIf this is unsuccessful (or no previous network saved) it moves the ESP into Access Point mode and spins up a DNS and WebServer (default ip 192.168.4.1)\nUsing any wifi enabled device with a browser (computer, phone, tablet) connect to the newly created Access Point\nBecause of the Captive Portal and the DNS server, you will either get a 'Join to network' type of popup or get any domain you try to access redirected to the configuration portal\nChoose one of the access points scanned, enter a password, click save\nESP will try to connect. If successful, it relinquishes control back to your app. If not, reconnect to AP and reconfigure.", "step_imgs": ["https://cdn.instructables.com/F5G/ZK8G/JFMT8GBN/F5GZK8GJFMT8GBN.LARGE.jpg", "https://cdn.instructables.com/FZA/3NY0/JFMT8GCL/FZA3NY0JFMT8GCL.LARGE.jpg", "https://cdn.instructables.com/FJU/MLP2/JFMT8GCT/FJUMLP2JFMT8GCT.LARGE.jpg", "https://cdn.instructables.com/FH3/EQIV/JFMT8GDN/FH3EQIVJFMT8GDN.LARGE.jpg", "https://cdn.instructables.com/FF6/YLHI/JFMT8GDV/FF6YLHIJFMT8GDV.LARGE.jpg"], "step_title": "Step 2: How WiFi Manager Works"}, {"step": 3, "steps_text": "By far the easiest method of installing the WiFi Manager is to use the Arduino Library Manager. In the Arduino IDE go to Sketch > Include Library > Manage Libraries, then in the search bar type \"wifimanager\". You should see the following:\nClick install, which will download and install the WiFi Manager library for use. Once installed you can go to the Arduino Library Folder to see the example sketches to upload to your ESP8266 module.\nAfter you have written your sketch and have started the ESP8266, it will then try to connect to WiFi if it has previously successfully connected. Otherwise it will fail to connect and then start up an AP mode. Once in AP mode you can connect to it openly and then in your web browser navigate to the default IP address which is 192.168.4.1, to configure the WiFi, it should then begin to proceed to connect to your WiFi.\nYou can find out further information regarding the WiFi Manager library from their GitHub page.", "step_imgs": ["https://cdn.instructables.com/FV7/4RDQ/JFMT8GUL/FV74RDQJFMT8GUL.LARGE.jpg", "https://cdn.instructables.com/F5P/0DQD/JFMT8GVD/F5P0DQDJFMT8GVD.LARGE.jpg", "https://cdn.instructables.com/FVX/TOIR/JFMT8GVE/FVXTOIRJFMT8GVE.LARGE.jpg"], "step_title": "Step 3: How to Configure"}, {"step": 4, "steps_text": "Before choosing a battery we need the understand about voltage and current rating of an ESP8266. From the datasheet, we find nominal voltage of the esp8266 is 3.3V. Minimum voltage for stable operation is 2.5V and the maximum allowable limit is 3.6V. So for safely running an ESP8266 device, the battery voltage should be within 2.5 to 3.6V. An esp8266 chip can draw maximum 170mA current. So, for the esp8266 battery discharge rate should not be less than 170mA.\nNow, let us discuss the most commonly available battery types used in electronics.\nNon-rechargeable type\nZinc-carbon battery: most commonly available and the most inexpensive dry cell primary battery that delivers about 1.5 volts and most common sizes are AA, AAA, and 9V. The 9V type should not use for ESP.\nLithium batteries: dry cell primary battery that delivers about 1.5 volts and most common sizes are AA and AAA. Lithium batteries are also available in coin, and button form with an output voltage 3V.\nAlkaline battery: dry cell primary battery that delivers about 1.5 volts and most common sizes are AA, AAA, and 9V.\nRechargeable type\nLithium-ion battery: Lithium-ion is the most common rechargeable battery today and delivers about 3.7 volts. Li-ion battery is available in different size and capacity including AA, AAA, 18650.\nNickel\u2013metal hydride battery: Ni-MH batteries have a nominal output voltage 1.2 volts and most common sizes are AA, AAA.\nNickel-cadmium battery: Ni-Cd has nominal cell voltage 1.2 volts and commonly available sizes includes AA and AAA.\nI mentioned the possible battery technology that can be used to power up ESP module. Now, let us analyze one by one. First, consider non-rechargeable AA & AAA size battery because they are most commonly available and inexpensive one. Zinc-carbon and Alkaline type AA and AAA size battery (or cell) have an output voltage 1.5 volts. So, at least two battery with a series connection (to make 3 volts) is required to power up an ESP module because according to data sheet at least 2.5 volts is required to power up an ESP module.\nNow, let calculate the run time of two batteries connected in series. If we connect two battery in series the ESP will live until each battery voltage drained to 1.25 volts. From the discharge curve below it is clear that for a zinc-carbon battery about 25% capacity can be used before the voltage reduced to 1.25 volts. So, it can not be a good solution. If we use two Alkaline battery we can use at best 30% which is approximately same as Zinc-carbon battery.\nIf we use Lithium battery we will get an interesting result. We can get at least 70% energy from a Lithium battery before going cut-off level.\nSo, in a single sentence, I can say that we should not use two Zinc-carbon or Alkaline cells in series to power up an ESP module if we don't like to keep 75% energy unused in the battery before throwing it. But, we can use a Lithium battery to power up an ESP module. Lithium batteries are most common in button or coin form. A typical Lithium coin cell has the output voltage of 3 volts which is perfect for powering up an ESP module. But before taking the final decision we should consider another important parameter of the battery, maximum discharge capacity or maximum current supply capacity in a simpler term. Most of the coin cell cannot provide more than 20mA! The average current taken by an ESP module is 80mA. So, a standalone coin cell is not enough to provide sufficient current to power up an ESP module. A parallel capacitor can give a good result but required some experimentation to know the exact response.\nNow investigate the rechargeable group. The most common rechargeable battery used today is Lithium-Ion battery. Lithium-ion batteries are available in different size and dimension. The output voltage of a Lithium cell is 3.7 volts and capacity depends on the size of the cell.\nFrom the above discharge curve of a Li-ion battery, it is clear that though the nominal voltage of a Li-ion battery is 3.7 volts, a fully charged Li-ion battery voltage starts from 4.2 volts which is more than the tolerable limit of an ESP module. So, Li-ion battery should not directly connect to ESP module.\nThe output voltage of both Nickel-metal hydride & Nickel-cadmium cell is 1.2 volts. So, if we connect three cell in series than total output voltage will be 3.6 volts which is within the tolerable limit of an ESP module. The open circuit voltage of a fully charged Ni-Cd can be 1.3 volts. So, connecting three we get 3.9 volts which I think will not create any problem in ESP module.\nSo, three Ni-Cd or Ni-MH cell in series can be connected directly to power up an ESP module.\nNow the second question comes. How much energy can we get from the battery? From the above discharge curve, we find that both cells provide their maximum energy before reducing the voltage to 1.1 volts. So, when three cells are connected in series the total voltage is 3.3 volts at the end of the life cycle of the battery and this voltage level is far greater than the minimum level of the ESP module. So using Ni-Cd or Ni-MH battery we can use most of the energy (above 80%) before going to recharge the battery.\nNi-MH battery has greater capacity comparing to Ni-Cd. Other characteristics of Ni-Cd and Ni-MH is almost same. So, three Ni-Cd or Ni-MH cells in series can be a good choice for powering up an ESP module.\nFrom our above discussion, it is clear that we can not use Li-ion cell directly to the ESP module. We should not use two Alkaline or Zinc-Carbon cells in series because we will get only 25-30% usable energy from the battery. So, now the important question is that if I used 3 Alkaline or Zinc-Carbon cell in series what will happen? Let analyze the fact.\nThe output voltage of three series connected 1.5 volts cells will be 4.5 volts which is far bigger than 3.6 volts the tolerable limit of the ESP module. Is there any way to use it? Yes, a 3.3 volts regulator is the answer to this question. In the next step, I will discuss which regulator is appropriate for an ESP module. So, keep reading.", "step_imgs": ["https://cdn.instructables.com/FYG/RX5M/JFMT8I65/FYGRX5MJFMT8I65.LARGE.jpg", "https://cdn.instructables.com/FDY/G0HJ/JFMT8HZI/FDYG0HJJFMT8HZI.LARGE.jpg", "https://cdn.instructables.com/FK4/LNT7/JFMT8HZJ/FK4LNT7JFMT8HZJ.LARGE.jpg", "https://cdn.instructables.com/F0Y/2HBB/JFMT8LQ3/F0Y2HBBJFMT8LQ3.LARGE.jpg", "https://cdn.instructables.com/FTR/XJSV/JFMT95B3/FTRXJSVJFMT95B3.LARGE.jpg", "https://cdn.instructables.com/FSD/RJ9N/JFMTAG4N/FSDRJ9NJFMTAG4N.LARGE.jpg", "https://cdn.instructables.com/FW2/XJ1P/JFMTAGV4/FW2XJ1PJFMTAGV4.LARGE.jpg"], "step_title": "Step 4: Choosing a Suitable Battery for ESP8266"}, {"step": 5, "steps_text": "When a steady, reliable voltage is needed, voltage regulators are the go-to component. They take an input voltage and create a regulated output voltage regardless of the input voltage at either a fixed voltage level or adjustable voltage level (by selecting the right external components).\nThis automatic regulation of the output voltage level is handled by various feedback techniques, some as simple as a Zener diode while others include complex feedback topologies that can improve performance, reliability, efficiency, and add other features like boosting output voltage above the input voltage to the voltage regulator.\nAmong a number of voltage regulators, linear voltage regulators are most common and affordable one. Linear regulators come in a couple of types, are very compact, and used often in low voltage, low power systems.\nSwitching regulators are much more efficient than linear voltage regulators, but they are harder to work with and more expensive.\nLinear Regulators\nLinear regulators are available in different voltage and current output. The most commonly used linear regulator by maker and hobbyists is LM78XX series and LM7805 is the most widely used regulator from the series. LM7805 is a 5 volts regulator and is not compatible with ESP8266. We need 3.3 volts regulator for ESP module.\nThe most commonly used 3.3 volts regulator is AMS1117 (SOT-223) or LM1117 Voltage Regulator. It is designed to automatically maintain a constant 3.3v output voltage and up to 1A output current and can be used with the ESP8266 module. But one disadvantage of these Linear Regulators like the LM78xx series (where XX is the output voltage) is, AMS1117or LM1117 requires about 2V more on Vin than the expected Vout to function. So, if we want to get a stable 3.3 volts output from AMS1117 regulator the input voltage must be 5.5 volts or at least 5 volts.\nSo, this regulator (AMS1117 including other linear regulators) cannot be used to power up an ESP module from 3 AAA, AA cells (4.5 volts) or one Li-ion cell (3.7 volts) but you can use these regulators if you have 5 volts source. The solution of the problem is an LDO regulator.\nLow Drop Out regulator (LDO)\nThere is one variant of the linear regulator called the Low Drop Out regulator or more commonly LDO. These regulators are designed to operate with an input voltage much closer to the output voltage compared to traditional linear regulators. TLV74133PDBVR (150mA), TPS76733 and LP2985 (150mA) from Texas Instruments (National), LDK320ADU33R (200mA) from STMicroelectronics and MCP1825S33 (500mA) from Microchip are some 3.3 volts LDO. All of these regulators will work in our case but which one should we select? The Quiescent Current and Standby Current will give us the answer.\nQuiescent and Ground Current\nQuiescent current (IQ) is the current required to power the LDO\u2019s internal circuitry when the external load current is zero. It includes the operating currents of the band-gap reference, error amplifier, output voltage divider, and overcurrent and overtemperature sensing circuits.\nGround current (IGND) is the difference between the input and output currents and necessarily includes the quiescent current. A low ground current maximizes the LDO efficiency.\nStandby Current\nStandby current is the input current drawn by a regulator when the output voltage is disabled by a shutdown signal.\nFor a battery operated portable or remote device Ground current and Standby current must be very low (few uA or nA).\nFrom the above-mentioned regulators:\nTPS76733 has rated current 150 mA and Quiescent current 85uA\nLP2985 has rated current 150mA and quiescent current 1uA\nMCP1825S33 has rated current 500mA and Quiescent current 0.1uA mA.\nSo, all these regulators can be used with ESP to power up from AA or AAA or Li-ion battery. The average current required for ESP module is 80mA. So, 150mA regulator is enough and MCP1825S33 is overrated which may be required extra cost.", "step_imgs": ["https://cdn.instructables.com/FKA/IOF7/JFMTAJDS/FKAIOF7JFMTAJDS.LARGE.jpg", "https://cdn.instructables.com/FA2/65JD/JFMTAJED/FA265JDJFMTAJED.LARGE.jpg", "https://cdn.instructables.com/FZ1/7CA3/JFMTAJEY/FZ17CA3JFMTAJEY.LARGE.jpg", "https://cdn.instructables.com/FF5/4PS6/JFMTAJF4/FF54PS6JFMTAJF4.LARGE.jpg", "https://cdn.instructables.com/FRM/PMF7/JFMTBQAN/FRMPMF7JFMTBQAN.LARGE.jpg"], "step_title": "Step 5: Choosing a Suitable Regulator for ESP8266"}, {"step": 6, "steps_text": "Using Wi-Fi is a convenient way to link your newly created IoT device into your existing IoT infrastructure including cloud services but it also has a drawback. Wi-Fi\u2019s demand for power usually makes battery operation impractical for any real deployment. In a normal operating mode, ESP module consumes about 70mA which leads to drain three AAA battery within a few hours. It is very impractical for remote IoT devices.\nNevertheless, it is possible to put the ESP8266 into deep sleep and wake up periodically to activate Wi-Fi and send data only when required. This would suit a scenario in which an IoT sensor sends relatively infrequent one-way traffic (i.e. where real-time control of the device is not needed).\nESP supports three type of sleep modes in which deep sleep mode requires minimum current (20uA). Waking up the ESP from sleep mode takes about 16mA \u2014 plus, once awake it takes about 3 seconds to reconnect, precious time at 70mA. However, by using a static IP address it can be pared down to half a second, with one more second to do the actual data transmission (we will show it in next step).\nHow to calculate runtime?\nBefore calculating run time we need to understand the capacity of a battery. \"Battery capacity\" is a measure (typically in Amp-hr) of the charge stored by the battery, and is determined by the mass of active material contained in the battery. The battery capacity represents the maximum amount of energy that can be extracted from the battery under certain specified conditions. However, the actual energy storage capabilities of the battery can vary significantly from the \"nominal\" rated capacity, as the battery capacity depends strongly on the age and past history of the battery, the charging or discharging regimes of the battery and the temperature.\nUnits of Battery Capacity: Ampere Hours\nThe energy stored in a battery, called the battery capacity, is measured in either watt-hours (Wh), kilowatt-hours (kWh), or ampere-hours (Ahr). The most common measure of battery capacity is Ah or mAh, defined as the number of hours for which a battery can provide a current equal to the discharge rate at the nominal voltage of the battery. The unit of Ah is commonly used when working with battery systems as the battery voltage will vary throughout the charging or discharging cycle. The Wh capacity can be approximated from the Ahr capacity by multiplying the AH capacity by the nominal (or, if known, time average) battery voltage. A more accurate approach takes into account the variation of voltage by integrating the AH capacity x V(t) at the time of the charging cycle. For example, a 3.7 volts battery with a capacity of 1000 mAh allows energy storage of approximately 1 Ah x 3.7 V = 3.7 Wh. However, because of the large impact from charging rates or temperatures, for practical or accurate analysis, additional information about the variation of battery capacity are also provided by battery manufacturers.\nThe amount of current we can really draw (the power capability) from a battery is often limited. For example, a coin cell that is rated for 300 mAh can't actually provide 300m Amp of current for an hour, in fact, it can't even provide 100 mAmp without overextending itself. It's like saying a human has the capability to travel up to 30 miles: of course, running 30 miles is a lot different than walking! Likewise, a 300 mAh coin cell has no problem providing a 1mA for 300 hours but if you try to draw 100mA from it, it'll last a lot less than 3 hours.\nHere are some conservative power ratings for good quality alkaline and zinc-carbon batteries available at the local grocery store.\nBattery Type Size of the Battery\nCapacity (mAh)\nAlkaline AA 2400\nAAA 1000\nZinc-carbon AA 700\n\nAAA 350\nA calculation\nSuppose we have chosen 3 AA type Alkaline battery to power up an ESP8266 module. The capacity of an Alkaline AA battery is 2400mAh. If we connect three battery in series then capacity will remain same without increasing the voltage level to 4.5 volts. For the edge of calculation, we are considering 100% capacity will be used by ESP module.\nTypical current consumption of an ESP8266 module in normal operation mode is 70mA.\nSo, serving hours by the battery = 2400/70 = 34 hours\nSo, if we run an ESP module continuously in normal mode it will run only for one and a half day.\nBut, most of the IoT device doesn't require transmitting data continuously. Maybe transferring data two or three times in an hour will be ok. In that case, we can take advantage of the deep sleep mode of the ESP8266. In deep sleep mode, ESP module takes only a few microamps. Lat's recalculate the above scenario by taking data transfer rate 3/hour.\nAssume, the ESP8266 module requires total 5s to wake up from sleep mode, connect to the internet and sent the data to the server. So, in an hour it will consume only 3 x 5 x 70 = 1050mAs\nSo, the battery will serve for(2400 x 3600)mAs / 1050mAs = 8228 hours = 342 days.\nThis is a very rough calculation. In an actual case, we cannot get 100% energy from a battery and here we don't consider the current in sleep mode. So considering all the practical difficulties it may reduce to about 300 days.\n[Some text and images are directly copied from the internet.]", "step_imgs": ["https://cdn.instructables.com/FFA/H8UR/JFUAFW33/FFAH8URJFUAFW33.LARGE.jpg", "https://cdn.instructables.com/F4D/7CP4/JFUAC6MK/F4D7CP4JFUAC6MK.LARGE.jpg", "https://cdn.instructables.com/FU2/FYAZ/JFUAG0U8/FU2FYAZJFUAG0U8.LARGE.jpg"], "step_title": "Step 6: How to Run an ESP8266 Over a Year Using AA/AAA Battery"}, {"step": 7, "steps_text": "This part is taken from the blog by Erik H. Bakke. Thanks to Mr. Bakke for is valuable work.\nFrom the power consumption chart below, we see that the WiFi radio switches on as soon as the ESP wakes up. The bootloader runs for about 0.35 seconds, after which it hands over control to the code uploaded to the ESP.\nAfter that, the next 2.3 seconds are spent connecting to the WiFi access point. This is just establishing an association with the AP, there\u2019s no DHCP or other traffic yet.\nNext comes 1.2 seconds of nothing at all happening. Interestingly, this period would be far longer in some cases, ending with the ESP crashing and rebooting with an exception 29.\nNext is DHCP traffic. This is how long it took before DHCP packets started appearing in the traffic analyzer. The time taken to acquire a DHCP lease varied greatly, but on average it would take about 3 seconds.The final power peak is the transmission of the sensor readings to the server, before the code sends the ESP into deep sleep.\nFrom the graph, we can see that each time the device wakes up, we spend about 1.5 seconds doing useful work (reading sensors 1.2 seconds, transmitting results 0.3 seconds), out of a total 8.3 seconds the device was awake. The red line shows the accumulated power consumption, rising steadily to a total of 0.164mAh per reporting cycle.\nNow, let's see how we can reduce the consumption.\nDisabling WiFi when waking up\nAs the WiFi radio is on when the ESP wakes up, we wake up with 70 mA current even if we\u2019re not using the WiFi yet. To try to reduce this, let\u2019s switch off the WiFi radio at the beginning of the setup() function, keep it off while we\u2019re reading the sensors, and switch it back on when we are ready to send the results to the server.\nvoid setup() {\n  WiFi.mode( WIFI_OFF );\n  WiFi.forceSleepBegin();\n  delay( 1 );\nFrom the experiments, it was found that both WiFi.mode() and WiFi.forceSleepBegin() were required in order to switch off the radio. The forceSleepBegin() call will set the flags and modes necessary, but the radio will not actually switch off until control returns to the ESP ROM. To do that we\u2019re adding a delay( 1 ), but I suppose a yield() would work as well.\nThen, just before the calls to establish the WiFi connection, we switch the radio back on:\nWiFi.forceSleepWake();\ndelay( 1 );\n\n// Bring up the WiFi connection\nWiFi.mode( WIFI_STA );\nWiFi.begin( WLAN_SSID, WLAN_PASSWD );\nAs above, forceSleepWake() will set the correct flags and modes, but the change will not take effect until control returns to the ESP ROM, so we add a delay( 1 ) call here as well.\nLet\u2019s have a look at the result\u2026\nAh, we can clearly see the radio switching off at the beginning of the sketch and it coming back after the 1.2 seconds it takes to read the sensors.\n(Un)fortunately, the DHCP ended up being faster this time, so we can\u2019t look at the total energy usage but will have to calculate how much was saved while the radio was off. The current has dropped from 71 mA to 17 mA, giving us a 54 mA saving. Over 1.2 seconds that gives us 0.018 mAh. Not much, but on the right track.\nUsing WAKE_RF_DISABLED\nThere\u2019s still a sharp power peak as the ESP wakes up, and by the time the setup() is called, we will have used 0.008 mAh already.\nTo avoid this we can go to sleep using the WAKE_RF_DISABLED flag. This configures the chip to keep the radio disabled until told to enable it. So we\u2019ll change the call to ESP.deepSleep:\nWiFi.disconnect( true );\ndelay( 1 );\n\n// WAKE_RF_DISABLED to keep the WiFi radio disabled when we wake up\nESP.deepSleep( SLEEPTIME, WAKE_RF_DISABLED );\nThe calls to WiFi.disconnect() and delay() are needed in order to ensure the chip goes into proper deep sleep. Without them, the chip usually ends up consuming about 1.2 mA of current while sleeping. This indicates that deep sleep was not achieved and that the chip is in Power Save DTIM3 mode. (0.86 mA according to this, a little bit for the voltage regulator and another little bit for the faint sleep LED.)\nOK, the ESP now wakes up with the radio disabled, it stays disabled until after the sensors have been read and we can collect another 0.006 mAh reduction for a total of 0.024 mAh.\nDisabling network persistence\nAs mentioned before that the ESP8266 will persist the network connection information to flash, and then read this back when it next starts the WiFi function. It does this every time, and from experiments, it was found that this takes at least 1.2 seconds. There are cases where the WiFi function would crash the chip, and the WiFi would never connect.\nThe chip also does this even when you pass connection information to WiFi.begin(), i.e. even in the case below:\nWiFi.begin( WLAN_SSID, WLAN_PASSWD );\nThis will actually load the connection information from flash, promptly ignore it and use the values you specify instead, connect to the WiFi and then finally write your values back to flash.\nThis starts wearing out the flash memory after a while. Exactly how quickly or slowly will depend on the quality of the flash memory connected to your ESP8266 chip.\nThe good news is that we can disable or enable this persistence by calling WiFi.persistent(). Our code to enable the WiFi network will then look like this:\nWiFi.forceSleepWake();\ndelay( 1 );\n\n// Disable the WiFi persistence.  The ESP8266 will not load and save WiFi settings in the flash memory.\nWiFi.persistent( false );\n\nWiFi.mode( WIFI_STA );\nWiFi.begin( WLAN_SSID, WLAN_PASSWD );\nLet\u2019s see how this affects the power consumption:\nThe cycle has become longer, but on closer inspection of the graph and network packets the main reason for that is that DHCP took longer this time.\nWhat is missing this time, though, is the 1.2 seconds between AP association and the start of DHCP negotiation. That\u2019s 1200 ms at 71 mA, or 0.023 mAh saved. Combined with the 0.024 mAh saved so far, we\u2019ve saved 0.047 mAh in total. And we\u2019ve most likely increased the lifetime of the flash chip as well.\nThe original post is here.\nIn the next step, I will discuss Static IP.", "step_imgs": ["https://cdn.instructables.com/FLH/LE2S/JFX0BI52/FLHLE2SJFX0BI52.LARGE.jpg", "https://cdn.instructables.com/FBT/0NM7/JFX0BPCN/FBT0NM7JFX0BPCN.LARGE.jpg", "https://cdn.instructables.com/FBR/AJA8/JFX0BQBJ/FBRAJA8JFX0BQBJ.LARGE.jpg", "https://cdn.instructables.com/F3X/49SQ/JFX0BR6R/F3X49SQJFX0BR6R.LARGE.jpg"], "step_title": "Step 7: Reducing Power Consumption"}, {"step": 8, "steps_text": "The connection time can be reduced by setting a static IP in ESP8266 and it reduces power consumption. It is very useful if you use deep sleep. Because of every time ESP wakeup, it takes 5 to 6 secs with DHCP but with static IP it reduced to 2 secs and can save two their of power consumption.\nThe following code can be used to configure a static IP in an ESP module.\n#include <ESP8266WiFi.h>\n\nconst char* ssid = \"********\";\nconst char* password = \"********\";\n\nIPAddress staticIP(192,168,1,22);\nIPAddress gateway(192,168,1,9);\nIPAddress subnet(255,255,255,0);\n\nvoid setup(void)\n{\n  Serial.begin(115200);\n  Serial.println();\n\n  Serial.printf(\"Connecting to %s\\n\", ssid);\n  WiFi.begin(ssid, password);\n  WiFi.config(staticIP, gateway, subnet);\n  while (WiFi.status() != WL_CONNECTED)\n  {\n    delay(500);\n    Serial.print(\".\");\n  }\n  Serial.println();\n  Serial.print(\"Connected, IP address: \");\n  Serial.println(WiFi.localIP());\n}\n\nvoid loop() {}\nTurning off the wifi scanning can also reduce the power consumption. For the details visit ESP8266 WiFi power reduction \u2013 Avoiding network scan.", "step_imgs": ["https://cdn.instructables.com/FVV/FEMD/JFUAF7M5/FVVFEMDJFUAF7M5.LARGE.jpg", "https://cdn.instructables.com/FMV/CUBB/JFX0BEIQ/FMVCUBBJFX0BEIQ.LARGE.jpg", "https://cdn.instructables.com/FFZ/GANM/JFX0BSIL/FFZGANMJFX0BSIL.LARGE.jpg"], "step_title": "Step 8: Static IP for Faster Connection"}, {"step": 9, "steps_text": "OTA (Over the Air) update is the process of loading the firmware to ESP module using Wi-Fi connection rather than a serial port. Such functionality became extremely useful in case of limited or no physical access to the module.\nOTA may be done using:\nArduino IDE\nWeb Browser\nHTTP Server\nArduino IDE option is intended primarily for software development phase. The two other options would be more useful after deployment, to provide a module with application updates manually with a web browser or automatically using an HTTP server.\nIn any case, first firmware upload has to be done over a serial port. If OTA routines are correctly implemented in a sketch, then all subsequent uploads may be done over the air.\nThere is no imposed security on OTA process from being hacked. It is up to the developer to ensure that updates are allowed only from legitimate / trusted source. Once the update is complete, module restarts and new code is executed. A developer should ensure that application running on a module is shut down and restarted in a safe manner. Chapters below provide additional information regarding security and safety of OTA process.\nA very good tutorial on OTA is here.", "step_imgs": ["https://cdn.instructables.com/FF3/5R4L/JFUAF7QO/FF35R4LJFUAF7QO.LARGE.jpg", "https://cdn.instructables.com/FZG/FP4U/JFUAF7QN/FZGFP4UJFUAF7QN.LARGE.jpg"], "step_title": "Step 9: Over the Air Update (OTA)"}], "channel": "Wireless"}, {"category": "Technology", "description": "Inspired by Loek Vellkoop\u2019s Instructable, I recently chopped up a scrap kid\u2019s bike to see all the materials I could reuse from it. One of the elements that really struck me was the wheel rim after I had taken all the spokes out.\nSolid, made from steel, and perforated with precisely spaced holes, I thought it would be cool to light it up with LEDs as an accent lamp, or just something cool to trip out on. So, that\u2019s what I did, and I\u2019m proud to say that I whipped it together in an afternoon while my family was out shopping.", "title": "LED Ring From Recycled Bike Rim", "url": "https://www.instructables.com/id/LED-Ring-From-Recycled-Bike-Rim/", "steps": [{"step": 1, "steps_text": "WS2811 Strand Lights\nThese are Neopixel-compatible addressable LEDs. I was introduced to them by the amazing Scott McIndoe who used them on a similar LED ring project, a flexible infinity mirror. For this project, with the size of the rim, I only used 14 of them. I could have doubled up and used all the holes in the rim, but I only used half. I figure I can use the rest on the second rim.\nSmall Arduino Board\nI ended up using an Adafruit Pro Trinket 5v, which works great and fits inside the rim. But in full disclosure, I was using an Adafruit M0 board first, which also worked fine and is even smaller, but I somehow fried it after soldering and desoldering connections so many times. This code really should work with any common Arduino board though you may need to change the Neopixel output pin in the code to accommodate your board.\nLiPo Battery and Charging Backpack\nThe hardest part of this whole project was figuring out a way to power it that I\u2019d be happy with. I wanted it to be portable, so I needed an elegant way to cram a battery in rim. By using a small LiPo battery and this board, I\u2019m able to fit a battery into the profile of the rim that I can recharge over the Trinket\u2019s micro USB port. So if battery power gets low, I can just connect the whole rim up to a USB power adapter or power bank and load it back up.\nSmall Switch\nThe battery back pack also has an easy way to wire in a power switch. Any switch would do, but I had this black, pre-wired one from Adafruit that worked out nicely.\nTools used\nHigh Leverage Cutters or Angle Grinder\nFor removing the spokes from the wheel. Be sure to wear safety glasses too.\nStep Drill Bit\nFor making the existing spoke holes wide enough to fit the lights.\nGlue Gun\nHolds the lights in place and mounts the electronics in the rim. I used black glue sticks (https://amzn.to/2JvKuYv) to match the color I painted my rim.\nSpray paint (optional)\nIf your rim isn\u2019t a color you like. I recommend roughing up the existing paint on the rim before you paint over it. This will help the new paint stick better.\nDeburring Tool (optional)\nHelps to smooth off the jagged bits from the holes you made bigger.\nSoldering Iron, solder, wire, etc.\nJust, you know, soldering stuff.\nHelping hands (optional)\nWith these tiny boards and connections, a nice helping hands tool is useful. I enjoy these ones made by RaptorLoc.", "step_imgs": ["https://cdn.instructables.com/FR2/7ZIX/JFMT5GTN/FR27ZIXJFMT5GTN.LARGE.jpg", "https://cdn.instructables.com/FQG/7E3L/JFMT5GTL/FQG7E3LJFMT5GTL.LARGE.jpg", "https://cdn.instructables.com/FOY/WSKS/JFMT5GTJ/FOYWSKSJFMT5GTJ.LARGE.jpg"], "step_title": "Step 1: What You Need"}, {"step": 2, "steps_text": "Pop a tire off an old bike. The front tire is the easiest to remove. In this particular case I used a kid\u2019s bike which had a smaller rim that worked out nicely. I\u2019m not sure if this would look as cool with a larger rim, but maybe.\nUsing high leverage cutters (don\u2019t forget the safety glasses) I snipped my way through all the spokes and removed the tire, tube and lining.", "step_imgs": ["https://cdn.instructables.com/FBZ/650B/JFMT5GUU/FBZ650BJFMT5GUU.LARGE.jpg", "https://cdn.instructables.com/FIM/SPGW/JFMT5GUT/FIMSPGWJFMT5GUT.LARGE.jpg", "https://cdn.instructables.com/FEG/846O/JFMT5GUP/FEG846OJFMT5GUP.LARGE.jpg"], "step_title": "Step 2: Make a Naked Rim"}, {"step": 3, "steps_text": "Using a step bit in a drill or impact driver, make the holes you want to use in the rim big enough to fit each LED.\nFor this experiment I only used half the rim holes, alternating every other one. With my rim size, I found this spaced the LEDs out just enough to take out the slack in the LED cable. That said, using all the spoke holes would have worked too. It just means more lights, and more power, which cuts down on battery life.\nAs far as hole size goes, I had the lights handy to make sure I got each hole wide enough. On my first pass I made the holes just big enough for the tip of each light to poke through. But, then I thought it might look cooler to have more of each light reach through, so I made the holes a little bigger.\nEither way, just know that you don\u2019t need to get the sizing perfect. Really it\u2019s the hot glue that holds each light in place, not pressure.\nAfter getting the holes the right size, I used a deburring tool to smooth off the jagged pieces left behind.", "step_imgs": ["https://cdn.instructables.com/FTI/9BCN/JFMT5GTX/FTI9BCNJFMT5GTX.LARGE.jpg", "https://cdn.instructables.com/F6G/4IXS/JFMT5GTV/F6G4IXSJFMT5GTV.LARGE.jpg", "https://cdn.instructables.com/FCS/X48P/JFMT5GTY/FCSX48PJFMT5GTY.LARGE.jpg", "https://cdn.instructables.com/FA3/6H6G/JFMT5GTU/FA36H6GJFMT5GTU.LARGE.jpg"], "step_title": "Step 3: Make Holes Bigger"}, {"step": 4, "steps_text": "This is an optional step, but my rim was Pepto-pink and I thought rainbow lights with a pink rim just wasn\u2019t my style (though, I do rock a Hello Kitty car). So, I roughed up the gloss of the rim with a little sandpaper and hit it with some matte black primer. You can do what you like.", "step_imgs": ["https://cdn.instructables.com/FQP/J61V/JFMT5GTR/FQPJ61VJFMT5GTR.LARGE.jpg"], "step_title": "Step 4: Paint the Rim"}, {"step": 5, "steps_text": "In case you missed my earlier confession, I had some trial and error getting a combo of board and code that I liked. My first attempt used a Trinket M0 board wired up to a removable 18650 in a battery holder. This code will work for that combo too, but I found the 18650 battery solution too bulky. When I ditched it for a small LiPo pack and a recharging board, I somehow fried the Trinket in the process (a shame, because I love those boards).\nFortunately I had some Trinket Pro (5v) boards handy. Overkill for this project, but they fit right inside the rim with no problem.\nIn the diagram, you can see how I wired it to the LED lights and the battery charger breakout. Even though the little battery board is designed to stack on the Trinket, I wired it up to keep the profile low and keep it and the battery in a separate section of the rim. This way, it\u2019s more like a chain of electronics, than a stack. Be sure to use enough wire so that each part of the chain can fit in a different section of the rim.\nAlso, note that I wired up a little tactile switch to the battery board. This lets you turn the battery on and off and the board has a nice, built-in spot for it. The only trick is that you have to scratch away a little copper trace on the battery charging board if you want to make use of the switch feature. So, don\u2019t forget to do that.\nMy choice to use pin 4 on the Pro Trinket came from my first attempt with the M0, which uses that pin specifically for LEDs. But really, there\u2019s nothing special about that pin on the Pro Trinket, so use whichever one you want, just remember to make the code match.", "step_imgs": ["https://cdn.instructables.com/FWQ/01XB/JFUAAL2V/FWQ01XBJFUAAL2V.LARGE.jpg", "https://cdn.instructables.com/FI0/YNKQ/JFMT5GTO/FI0YNKQJFMT5GTO.LARGE.jpg", "https://cdn.instructables.com/FRN/0LJ8/JFMT5GTD/FRN0LJ8JFMT5GTD.LARGE.jpg", "https://cdn.instructables.com/FGG/4RTA/JFMT5GTC/FGG4RTAJFMT5GTC.LARGE.jpg", "https://cdn.instructables.com/FE7/82YI/JFMT5GTM/FE782YIJFMT5GTM.LARGE.jpg", "https://cdn.instructables.com/FZE/43FM/JFMT5GTK/FZE43FMJFMT5GTK.LARGE.jpg", "https://cdn.instructables.com/FD0/UC0U/JFMT5GTP/FD0UC0UJFMT5GTP.LARGE.jpg"], "step_title": "Step 5: Wire the Electronics"}, {"step": 6, "steps_text": "I\u2019m using the FastLED DemoReel100 example sketch (https://github.com/FastLED/FastLED/blob/master/examples/DemoReel100/DemoReel100.ino) to make this happen. The code is stock except that I changed the data pin from 3 to 4. My version with this slight modification is included as a file here.\nYou\u2019ll need to add the FastLED library to your Arduino software by going to Sketch>Include Library>Manage Libraries and then search for \u201cFastLED\u201d. Then, click Install to install the library.\nYou can find this same code in the FastLED Examples folder that\u2019s installed with the Library, but as I said, you\u2019ll need to make sure the code defines the data pin to 4 (or whatever pin you connected your LED data wire to).\nAnd play around with it. You can comment out parts of the demo to have it skip sections. You can make the delay between demo modes longer or shorter. You can increase or decrease the number of LEDs on the strand. Lot\u2019s to tweak.\nAlso, in order to add the Pro Trinket (or any Adafruit Arduino board) to your Arduino IDE software, you\u2019ll need to tweak a setting to have the Adafruit board library included. It takes five seconds and the instructions to do that are here.\nI think that covers it, but if I missed something leave me a comment.", "step_imgs": [], "step_title": "Step 6: Code"}, {"step": 7, "steps_text": "With the code uploaded, your battery connected, and the power switched on, you should see your lights all blinky and awesome. If not, time to troubleshoot.\nIf it checks out, time to glue the LEDs into their holes, starting with the LED closest to your board.\nBefore gluing, you could carefully count out exactly how many LEDs you need from the strip and cut away the remaining LEDs. Knowing me, I\u2019d miscount, so I glued them in first before cutting away the extra.\nI used hot glue to place each LED in each hole, keeping an eye on consistent depth and angle. It takes a minute for the hot glue to set each time, so be patient.\nAlso, for light projects like this I typically like to use black hot glue. It helps create a light-tight seal and generally looks less like a hot glue craft project. That said, it\u2019s messy stuff, and in the end I found that the casing around these LEDs let a lot of light out of the back anyway, so it doesn\u2019t really matter. Do what works for you.", "step_imgs": ["https://cdn.instructables.com/FY8/717G/JFMT5GTQ/FY8717GJFMT5GTQ.LARGE.jpg", "https://cdn.instructables.com/FDD/IUF8/JFMT5GTS/FDDIUF8JFMT5GTS.LARGE.jpg", "https://cdn.instructables.com/FBH/R1CA/JFMT5GTT/FBHR1CAJFMT5GTT.LARGE.jpg", "https://cdn.instructables.com/F0K/9AQW/JFMT5GTI/F0K9AQWJFMT5GTI.LARGE.jpg"], "step_title": "Step 7: Glue the Lights In"}, {"step": 8, "steps_text": "When you\u2019re ready, use hot glue to carefully mount the boards, button and battery inside the well of the rim in the space between the LEDs.\nBe sure to place a nice, fat pillow of hot glue between any bare electronics and the rim, since the metal is conductive and can short out the project if it comes in direct contact.\nAlso, make sure to leave the micro USB port of the Pro Trinket exposed and accessible to that you can charge the battery up later. To ensure a good fit, I recommend having a cord already in the USB port when you glue it in, just to make sure you have enough clearance.\nIf you screw up and glue things in wrong, you can always use a little Isopropyl alcohol solution to undo the hot glue bond. Just be careful not to get alcohol on your Trinket\u2019s chip, or it may fry.", "step_imgs": ["https://cdn.instructables.com/F6L/NVW3/JFMT5GTH/F6LNVW3JFMT5GTH.LARGE.jpg"], "step_title": "Step 8: Glue the Boards In"}, {"step": 9, "steps_text": "The coolest thing about using bike rims for a project like this is that unless you scrapped a unicycle, you probably have a second one to play with. I\u2019m already planning my second build using the other rim. I think I\u2019ll use more lights and tweak the code for a different effect.\nIf you build your own version of this, I\u2019d love to hear about it. Post about it in the comments or send me a message.\nBe sure to vote for me, and for more project ideas like this, check out my weekly YouTube show, Maker Update!", "step_imgs": ["https://cdn.instructables.com/FDU/B63A/JFUAALAX/FDUB63AJFUAALAX.LARGE.jpg"], "step_title": "Step 9: Take It Further"}], "channel": "LEDs"}, {"category": "Technology", "description": "Hello friends! Are you tired of teddy bears? So safe and predictable. Boring! Well, I have the thing for you!\nA haunted robotic teddy bear!!\nDon't worry! It's not really haunted, (I don't mess around with the paranormal), but it will spice up your Tuesday night!\nIn this Instructable, we will be building a teddy bear exorcism game. The game will feature a moving robotic teddy bear and a playable interface that allows you to perform an exorcism.\nOnce you download the code, you will be shown a series of flashing colors that you can replicate using the buttons on the bear\u2019s body. If you get the sequence correct, your bear becomes exorcised! If not, your bear will get worse.\nThink of it like the 80s game, Simon. Only, with life-altering consequences.", "title": "Haunted Robotic Teddy Bear", "url": "https://www.instructables.com/id/Haunted-Robotic-Teddy-Bear/", "steps": [{"step": 1, "steps_text": "Tech Materials:\n4 x standard servo motors\n1 x continuous rotation servo\n4 x 16mm pushbuttons (1 red, 1 blue, 1, white, 1 orange)\n4 x 10k resistors\n1 solderless breadboard\n1 Arduino Uno\n3 x 9V batteries\n3 x Battery clip connectors\nWire for soldering\nSewing Materials:\n2 yards of bear-colored fabric\nSewing needle\nThread\nCotton (for stuffing the bear)\nPins\nButtons (for the bear\u2019s eyes)\nAdhesive Velcro strips\nMisc.:\nAcrylic/Masonite laser cut pieces (.dxf file included)\nCable ties\nHardware\nPlastic screw spacers\nElectrical tape\nDouble sided tape", "step_imgs": ["https://cdn.instructables.com/FKN/ZP0I/JFSTKITJ/FKNZP0IJFSTKITJ.LARGE.jpg", "https://cdn.instructables.com/FD3/MOZP/JFSTKITI/FD3MOZPJFSTKITI.LARGE.jpg", "https://cdn.instructables.com/FVX/CIRC/JFSTKITH/FVXCIRCJFSTKITH.LARGE.jpg"], "step_title": "Step 1: Gather Your Materials"}, {"step": 2, "steps_text": "In this step, you will be assembling the pieces for your button holder and the bear\u2019s body. The body will consist of a lofted two-layered structure that will hold your Arduino, motors, and batteries.\nThe Bottom Level:\nLaser cut your two baseboards (marked in the .dxf file). One should be cut from masonite, and the other should be cut from acrylic.\nPlace your Arduino towards the bottom of your masonite baseboard and secure using machine screws. Your breadboard can be placed next to your Arduino, providing enough room for your 9V batteries. Secure the batteries using double sided tape. (For exact placement, refer to the image above).\nThe Top Level:\nPlace your four standard servos on the acrylic baseboard (Refer to image). These will create the joints for the bear\u2019s arms and legs.\nSecure the motors using cable ties.\nPlace your continuous rotation motor in the remaining space on the acrylic baseboard. This will act as the bear\u2019s neck.\nAttach your servo horns to the acrylic arms and legs.\nScrew the acrylic limbs to the corresponding standard servos.\nNOTE: your continuous rotation servo should not yet have anything attached to it\nThe Button Panel:\nCut 8 pieces of 7\u201d of wire and solder to the leads of your pushbuttons.\nTake your acrylic button holder (marked in the .dxf file) and screw your four pushbuttons into place. Refer to the image for exact color order.", "step_imgs": ["https://cdn.instructables.com/FSF/E1DN/JFSTKITR/FSFE1DNJFSTKITR.LARGE.jpg", "https://cdn.instructables.com/FGO/ADA7/JFSTKIU7/FGOADA7JFSTKIU7.LARGE.jpg", "https://cdn.instructables.com/FA6/ESRR/JFSTKITU/FA6ESRRJFSTKITU.LARGE.jpg", "https://cdn.instructables.com/FKG/B5NH/JFSTKITW/FKGB5NHJFSTKITW.LARGE.jpg", "https://cdn.instructables.com/FRG/2M65/JFSTKIUF/FRG2M65JFSTKIUF.LARGE.jpg", "https://cdn.instructables.com/FNM/9L58/JFSTKIU1/FNM9L58JFSTKIU1.LARGE.jpg", "https://cdn.instructables.com/F1Y/C0C5/JFSTKIU3/F1YC0C5JFSTKIU3.LARGE.jpg", "https://cdn.instructables.com/FY0/P8G2/JFSTKIUD/FY0P8G2JFSTKIUD.LARGE.jpg", "https://cdn.instructables.com/FZ2/AJQ4/JFSTKIV5/FZ2AJQ4JFSTKIV5.LARGE.jpg"], "step_title": "Step 2: Assembling the Body"}, {"step": 3, "steps_text": "In this step, we will be wiring everything and lofting the baseboards you assembled in the previous step. Refer to the fritzing diagram for exact wiring.\nWiring:\nAdvice:\nUse the \"wiring through holes\" (marked in the .dxf file) to run wires from your motors and pushbuttons to the breadboard. This will help keep the wires organized.\nCut your hook up wires a little longer than anticipated to accommodate for lofting.\nLofting:\nTake four long machine screws and put them through the holes at the corners of the masonite baseboard. To provide a space between the masonite layer and the acrylic layer, place a plastic spacer on each of the screws.\nPlace your acrylic baseboard directly on top of the masonite board, running the ends of the screws through the corresponding holes.\nSecure using nuts.\nNOTE: Your button holder should now be sitting on top of the acrylic baseboard.", "step_imgs": ["https://cdn.instructables.com/FOK/NI0J/JFUAFFR9/FOKNI0JJFUAFFR9.LARGE.jpg", "https://cdn.instructables.com/FRP/X4BW/JFSTKIUQ/FRPX4BWJFSTKIUQ.LARGE.jpg", "https://cdn.instructables.com/FJ1/BD20/JFSTKIU8/FJ1BD20JFSTKIU8.LARGE.jpg", "https://cdn.instructables.com/FM0/MBGV/JFSTKIUA/FM0MBGVJFSTKIUA.LARGE.jpg", "https://cdn.instructables.com/F74/YDJM/JFSTKIUB/F74YDJMJFSTKIUB.LARGE.jpg"], "step_title": "Step 3: Wiring and Lofting"}, {"step": 4, "steps_text": "In this step, we will be sewing the casing for the bear. A pattern is provided in the intro.\nSewing the body:\nFollow the pattern to sew the bear's casing. Measure the length of your bear\u2019s limbs to account for scaling the pattern pieces. (NOTE: The acrylic limbs should be shorter than the length of the fabric limbs. Add about two inches to the arms and scale accordingly).\nIn order to get your bear in and out of the casing, place a strip of adhesive velcro on the seams at the front of its body (marked in the pattern).\nPlace cotton in each of the bear\u2019s limbs before covering the acrylic arms and legs.\nSewing the head:\nFollow the pattern to sew the bear\u2019s head.\nUse buttons for its eyes.\nSecure the head to the continuous rotation motor using the acrylic neck piece (marked in the .dxf file). Sew the head to the neck piece using the holes around the edge of the acrylic.", "step_imgs": ["https://cdn.instructables.com/FDG/8YW8/JFSTKITO/FDG8YW8JFSTKITO.LARGE.jpg", "https://cdn.instructables.com/FRJ/XCYW/JFSTKITK/FRJXCYWJFSTKITK.LARGE.jpg", "https://cdn.instructables.com/FR8/LSZF/JFSTKITN/FR8LSZFJFSTKITN.LARGE.jpg", "https://cdn.instructables.com/FNS/T772/JFSTKIVA/FNST772JFSTKIVA.LARGE.jpg", "https://cdn.instructables.com/FIJ/9VIP/JFSTKIV8/FIJ9VIPJFSTKIV8.LARGE.jpg", "https://cdn.instructables.com/FDL/SZ2G/JFSTKITM/FDLSZ2GJFSTKITM.LARGE.jpg", "https://cdn.instructables.com/FP4/NFNI/JFSTKIUY/FP4NFNIJFSTKIUY.LARGE.jpg", "https://cdn.instructables.com/FEK/OZWI/JFSTKIUV/FEKOZWIJFSTKIUV.LARGE.jpg"], "step_title": "Step 4: Sewing the Bear"}, {"step": 5, "steps_text": "Download the folder containing the Python game code and the corresponding Arduino code. The Python game code can be executed from your terminal.\nNOTE:\nMake sure you run the Arduino code before you run the Python code to avoid blocking the port.\nYour bear must be connected to your computer in order to play the game.\nInstructions will play as soon as the game is launched.", "step_imgs": [], "step_title": "Step 5: Download the Code"}, {"step": 6, "steps_text": "Score 30 points to successfully perform the bear exorcism.\nI hope you enjoy this game as it is literally the only thing I have going for me.", "step_imgs": ["https://cdn.instructables.com/FPO/YUN4/JFSTKIVD/FPOYUN4JFSTKIVD.LARGE.jpg"], "step_title": "Step 6: Enjoy Your Bear"}], "channel": "Robots"}, {"category": "Technology", "description": "Yes, I know what you're thinking, this does seem a little overkill but first of all, you'll never have to worry about stubbing your toe again and second, it makes walking up and down your stairs so much fun, i found myself going upstairs for no reason just to watch the lights follow me. I mean it isn't the most practical project but its a fun build and it gives us a chance to learn about the different ways to activate lights with an Arduino. So with that being said, let's get started with the build!", "title": "Motion Activated Stairs", "url": "https://www.instructables.com/id/Motion-Activated-Stairs/", "steps": [{"step": 1, "steps_text": "So whats happening is as you walk up the stairs the step you're on, the step in front of you and the step behind you are lit up which allows you to see exactly where you're walking no matter which direction you're walking in, not to mention the cool effect it gives.\nThe way it works is each step has a laser and light sensor which makes a trip wire, when the laser beam is broken the Arduino triggers a MOSFET which turns on the corresponding LED strip. Now this definitely isn't the only way or even the easiest way to do this but the alternatives didn't work for me for a bunch of different reasons. The most obvious alternative was to mount an ultrasonic sensor at the base of the stairs and then turn on lights based on how far you are from the ultrasonic sensor, this didn't work for me because I have too many stairs! (14) which caused it to lose accuracy and turn on the wrong lights which made the whole process of walking up and down the stairs very disorientating. Of course, there was the option of just turn on your room lights but again that's just no fun.", "step_imgs": ["https://cdn.instructables.com/F0P/K3VQ/JFSIZYQ8/F0PK3VQJFSIZYQ8.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F58/XNPN/JFSIZYPX/F58XNPNJFSIZYPX.LARGE.jpg"], "step_title": "Step 1: How It Works"}, {"step": 2, "steps_text": "Okay so the amount of parts you need is really dependent on the number of steps you have on your staircase, so if you see \"dependent\" it means you need to figure out how much you need for your stairs.\nAn Arduino Mega (Here)\nLight sensors Dependent (Here)\nlasers Dependent (Here)\nBuck Converter (Here)\n12 Volt Power Supply (Here)\nMosfet Dependent (Here)\nLED Strip (Here)\nLooooots of wire\nNow, I have 14 steps so I will be getting 15 MOSFETs, 15 light sensors, and 14 lasers. Make sure to always get an extra light sensor and MOSFET because we are going to use them for something else later.", "step_imgs": ["https://cdn.instructables.com/FMO/XLY1/JFSIZYMS/FMOXLY1JFSIZYMS.LARGE.jpg", "https://cdn.instructables.com/F3Z/S2IX/JFSIZYNF/F3ZS2IXJFSIZYNF.LARGE.jpg", "https://cdn.instructables.com/FYE/XM5B/JFSIZYOM/FYEXM5BJFSIZYOM.LARGE.jpg"], "step_title": "Step 2: Parts List"}, {"step": 3, "steps_text": "Since I have so many steps I'm going to have to wire things up one at a time to makes things a little easier, so let's start by wiring up our light sensors. Now you'll see on the light sensor that it has 3 pins, two of these are power (5 volts and ground) and the other is the source pin which gets plugged into the Arduino. The way to do this is we connect all the sensors power pins together in parallel and then into the Arduino's 5 Volt and Ground input, this will supply power to all the sensors. Then we are going to connect each signal pin to the Arduino's analog pins with the first light sensor getting connected to A0, second to A1, third to A2 all the way to the last which gets connected to A14.\nNext, we are going to connect up the lasers, this parts pretty easy as all we have to do is connect them all in parallel just like we did with the power pins of the light sensors. Then we are going to want to connect the positive and negative output of these lasers to the positive and negative output of our buck converter which will be stepping down 12 volts to 5 volts for use by our lasers. Now the positive input of the buck converter gets connected to the positive output of our power supply, leave the negative connections unconnected for now as we are going to use our MOSFETs for that later.\nNow we need to get our LED strip ready, the first thing to do is cut it into individual strips, then every strip will have its positive input soldered together and then connected to the positive output of the power supply then each LED strips negative input needs to get soldered to its own MOSFET but we will talk more about this in the next step.\nlastly, we are going to want to connect the positive output of our power supply to the VIN pin on our Arduino and the ground output to ground on the Arduino.", "step_imgs": ["https://cdn.instructables.com/F7C/U97Y/JFSIZYPL/F7CU97YJFSIZYPL.LARGE.jpg", "https://cdn.instructables.com/FWE/MSJM/JFSIZYSC/FWEMSJMJFSIZYSC.LARGE.jpg"], "step_title": "Step 3: Wiring Everything Up"}, {"step": 4, "steps_text": "So when we think about turning on and off an LED using a microcontroller it seems pretty basic, all we do is making the pin its plugged into HIGH or LOW but things get a little more complicated when we want to power a bigger load like a 12 volt LED strip and so to achieve this we need the help of a MOSFET.\nA MOSFET is really just a switch that can be turned on and off by a computer, you'll see that it has 3 pins, the first one is Gate, second is Drain and third is Source. When gate is made HIGH by a microcontroller it connects drain and source allowing the current to flow however when gate is LOW it breaks this connection stopping the flow of current, this allows our microcontroller to control these high power components without having to supply power to them.\nSo let's get to the wiring, we are going to need 15 N-channel MOSFETs (your stairs may need a different amount), 14 for the step lights and one to turn off the lasers when its daytime (this is also why we have an extra light sensor). We are then going to solder the ground connection of each LED strip to the middle pin (drain) of a MOSFET when this is done you should have the same amount of MOSFETs as you do steps, in my case, it's 14. Now we need to solder the negative input from the buck converter to the middle pin of the last MOSFET.\nNow we need to solder the source pin on all the MOSFETs together, this creates a common ground which we can then connect to the ground output of our power supply and then lastly we need to connect gate on the MOSFET to the digital pin on our microcontroller, the MOSFET of the first light gets connected to pin 32, the second to pin 33, third 34 all the way to the last light MOSFET which gets connected to pin 45 and then the MOSFET controlling the lasers gets connected to pin 46, all of this will become more clear when we talk about the code in the next step.", "step_imgs": ["https://cdn.instructables.com/FMD/A1FA/JFSIZYR3/FMDA1FAJFSIZYR3.LARGE.jpg", "https://cdn.instructables.com/FFU/ULAJ/JFSIZYRE/FFUULAJJFSIZYRE.LARGE.jpg", "https://cdn.instructables.com/F48/RMEO/JFSIZYSA/F48RMEOJFSIZYSA.LARGE.jpg"], "step_title": "Step 4: MOSwhat?"}, {"step": 5, "steps_text": "The code can be found below but let's just take a second to see how it works so that you can adapt it to work with the number of steps you have.\nSo the first thing we see is the void setup, we are just stating that pins 32 to 47 will act out outputs turning the MOSFETs on an off, now if you have more steps be sure to add more outputs and if you have less remove some just make sure to keep the laser's output so we can turn them off during the day.\nNext, you'll see the void loop which is where the beef of the code is, the first thing we see is that analog pins A0 to A14 are reading data from the light sensors, like before if you have more steps you need to copy and paste some of this or if you have less you're going to need to delete some.\nWhich brings us to our most important part of the code, the if statements. The first if statement states that if the value sent back from our light sensor in charge of checking if its night or day is below 220 to turn on the laser or if not to turn off the lasers. Then the second one (which is almost the same as all the following ones) states that if the light sensor from that step AND the day and night sensor both send back a low-value indicating that the light has been broken to turn on the MOSFET controlling the light for the step you're on, the step in front of you and the step behind you. Now if you have more steps you need to copy and paste these if statements and add the correct pins to it and if you have fewer steps you can just delete the if statements of the steps you don't need.\nThis does get a little complicated so if you have any issues what so every ill be happy to answer them in the comments or in private messages.", "step_imgs": ["https://cdn.instructables.com/FB1/QDN1/JFSIZYP9/FB1QDN1JFSIZYP9.LARGE.jpg"], "step_title": "Step 5: Code"}, {"step": 6, "steps_text": "Okay so at this point everything is almost done and ready to go all we need to do now is mount all the components to our stairs and make a case around our Mega! This is very easy to do with some cardboard and hot glue.\nSo let's start mounting everything, the lasers, light sensors and LED strips can all get mounted on each step making sure that the laser beam hits the light sensor right in the middle of the photoresistor, this can be accomplished with hot glue or any kind of adhesive that dries quick. Now we can give everything a final test before we secure all the wires in place with electrical tape to make it look a little neater. Now we need to mount our day and night sensor in a play that will get a good bit of sunshine during the day which will allow it to turn off the lasers.\nThen a box can be built around the Arduino and MOSFETs to keep them safe and everything is just about done! If you have any issues getting this working or have any questions ill be available to answer them in the comments or in private messages!", "step_imgs": ["https://cdn.instructables.com/F6S/XT1I/JFSIZYND/F6SXT1IJFSIZYND.LARGE.jpg", "https://cdn.instructables.com/FJQ/1AGZ/JFSIZYPM/FJQ1AGZJFSIZYPM.LARGE.jpg"], "step_title": "Step 6: Mounting Everything"}], "channel": "Arduino"}, {"category": "Technology", "description": "With the launch of the SelfCAD Ambassador program in March 2018, we are happy to introduce Brian, who will we will feature as SelfCAD's first blog post on a design from one of our 2018, official, SelfCAD Ambassadors. Congratulations Brian!\nYou can watch more of Brian's videos on his Youtube Channel or follow him on Instagram. Below, we broke down the steps he took in creating his 3D printed Strawberry. Want to become a SelfCAD Ambassador? Email Sanny at sammy@selfcad.com", "title": "Ambassador Edition: How to 3D Sculpt, Print, and Paint a Strawberry in SelfCAD!", "url": "https://www.instructables.com/id/Modeling-and-Printing-a-Realistic-Strawberry-Fruit/", "steps": [{"step": 1, "steps_text": "In this step-by-step article and I am going to teach you how to model in CAD and 3D print a realistic Strawberry using SelfCAD. Brian focused on our famous Sculpting tool, so likewise, we will too.I recommend you launch the editor before you begin.If you haven't sign up for SelfCAD, start your free 30 day trial now by going to www.selfcad.com/register.", "step_imgs": [], "step_title": "Step 1: Overview"}, {"step": 2, "steps_text": "SelfCAD.- For designing the model. To access it, visit https://www.selfcad.com.\nMonoPrice Maker Select V2 3D\nprinter- For printing the model once it's ready. Any 3d printer can be able to print the model.\nRed 3D Printer Filament\nGreen paint- For painting the model after printing to form the leaves.", "step_imgs": ["https://cdn.instructables.com/FE5/WTN0/JFSIXISQ/FE5WTN0JFSIXISQ.LARGE.jpg"], "step_title": "Step 2: Requirements"}, {"step": 3, "steps_text": "Select the Sphere from the basic shapes section.\nSelect the Sculpting tool from the tools section and select Flatten brush.\nSet the size and intensity to 30 and 20 respectively and begin sculpting the model. Begin sculpting from the bottom section, and reduce the intensity to 10 as you go on top.\nMake sure you save your model as you go to the next step.\nCheck the video above to learn how to sculpt the object.", "step_imgs": ["https://cdn.instructables.com/F2E/GY12/JFMTAT7G/F2EGY12JFMTAT7G.LARGE.jpg", "https://cdn.instructables.com/FW1/TL0M/JFMTAT7F/FW1TL0MJFMTAT7F.LARGE.jpg"], "step_title": "Step 3: Start Modeling"}, {"step": 4, "steps_text": "Select the Move Brush from the Sculpting tool and set the size and intensity to 20 and begin to move the polygons as shown in the first image above.\nSelect the Standard brush optionof the sculpting tool and set the Size and Intensity to 10 and make sure that the + option is selected. Use this brush to create the node of the middle leaf in the middle section.\nSelect the Move brush and set the size and intensity to 20 and move the node vertically a little bit.\nSelect the Polygon selection tool from the Selection region and use it to select the top section of the node.\nAfter selecting all the polygons, select the Extrusion tool from the Tools section and set the length to 14.09 then click Apply.\nSelect the flatten brush and set the intensity to 73 and use it to flatten the leaf. Use the Move brush to reshape the leaf so that can be similar to the third above.", "step_imgs": ["https://cdn.instructables.com/FH2/FHT6/JFSIUFUA/FH2FHT6JFSIUFUA.LARGE.jpg", "https://cdn.instructables.com/FZ3/95IK/JFSIUJVH/FZ395IKJFSIUJVH.LARGE.jpg", "https://cdn.instructables.com/F6B/M5KV/JFSIULZS/F6BM5KVJFSIULZS.LARGE.jpg"], "step_title": "Step 4: Creating the Leaves"}, {"step": 5, "steps_text": "Select the Masking brush (S+K) from the sculpting tool section and set the Size and Intensity to 59 and 20 respectively and use it to mask the entire model except areas surrounding the leaves and ensure that the - option is selected.\nSelect the Inflate Brush (S+I) from the Sculpting tool option. Set the size and intensity to 3 and 79 respectively and ensure that the - option is selected and use this to create dots around the model.", "step_imgs": ["https://cdn.instructables.com/FCN/B2IU/JFSIUPZN/FCNB2IUJFSIUPZN.LARGE.jpg", "https://cdn.instructables.com/F6I/ELVX/JFSIUQ3I/F6IELVXJFSIUQ3I.LARGE.jpg"], "step_title": "Step 5: Finalizing the Model"}, {"step": 6, "steps_text": "After modeling, it's time now to print it.\nSelect 3D Print (ALT + P) from the File section and choose a 3D Printer of your choice.\nAfter choosing your printer generate the G-Code and print your model.\nTo learn more on how to use various tools when designing, check the above video.", "step_imgs": ["https://cdn.instructables.com/FWC/RBCH/JFSIXHMR/FWCRBCHJFSIXHMR.LARGE.jpg", "https://cdn.instructables.com/FKW/USMD/JFSIXHQY/FKWUSMDJFSIXHQY.LARGE.jpg"], "step_title": "Step 6: Printing"}, {"step": 7, "steps_text": "After printing the Strawberry model, take the green paint and paint around the leaves section to make it look exactly like real leaves.\nGive the paint some minutes to stick on the leaves and you can then be able to use it.", "step_imgs": ["https://cdn.instructables.com/FN8/2QIV/JFSIXIFY/FN82QIVJFSIXIFY.LARGE.jpg", "https://cdn.instructables.com/F07/Y003/JFSIXIF2/F07Y003JFSIXIF2.LARGE.jpg"], "step_title": "Step 7: Painting the Leaves"}], "channel": "3D Printing"}, {"category": "Technology", "description": "The fizzle loop synth came into being after mashing a couple of simple 555 projects together to make one. At the heart of the fizzle loop is a Vactrol \u2013 a simple little part that is made from an LED and a photo resister such as a CdS.\nCalling this a synth might be pushing it a little - it's more a sophisticated noise maker but it's still a lot of fun to use and play with.\nThe first 555 project controls a flashing LED and the second utilizes a photo resistor to change the pitch. There are multiple ways to control the sound from the synth and I\u2019m sure that you could easily add a whole bunch more if you wanted to.\nSo what does it sound like? Well controlling the speed of the flashing LED changes the speed of the sound while changing the pot on the photo resistor changes the pitch. The other controllers also work on changing the brightness and speed of the LED giving you some really cool sounds. There is also an output jack so you can hook-up a amplifier and really get the synth pumping.\nAlthough this utilizes two 555 timers, they are really separate projects married together. Once you build one, you just build the other and connect them together via the vactrol. I also gave each 555 their own poer source as I was getting some noise from using a common ground for both 555 timers.\nIf you have never done any projects with a 555 timer, then I would suggest you make a couple of these first to get yourself familiar. This isn\u2019t a hard project but you will need some experience in how circuits are put together and to be able to read a schematic.\nLastly, I won\u2019t be going through a step by step guide on how to solder all this together. I\u2019m going to assume that you can understand the schematics and can figure it out for yourself. I\u2019ve taken some images of the important parts and added some explanations where warranted.", "title": "Fizzle Loop Synth - 555 Timer", "url": "https://www.instructables.com/id/Fizzle-Loop-Synth-555-Timer/", "steps": [{"step": 1, "steps_text": "Parts\nThe Light Theremin Circuit\n1. Photo Cell \u2013 eBay\n2. 555 IC -- eBay\n3. Red LED \u2013 eBay\n4. 100 ohm resistor \u2013 eBay\n5. 3.3 uf capacitor \u2013 eBay\n6. 100 uf Capacitor \u2013 eBay\n7. Speaker \u2013 8 ohm 5w (or whatever else you have lying around - try a few different sizes) - eBay\n8. 5K potentiometer \u2013 eBay\n9. 6V Battery holder \u2013 eBay\n10. 4 X AA Batterys\n11. 2 X on-off switch \u2013 eBay\n12. Momentary switch - eBay\n13. 1uf Capacitor - eBay\nFlashing Light Circuit\n1. 1k Resistor \u2013 eBay\n2. 555 IC - eBay\n3. 10uf Capacitor \u2013 eBay\n5. 2 X 100K Potentiometer \u2013 eBay\n6. 5mm white LED \u2013 eBay\n7. 9v Battery\n8. 9V battery holder \u2013 eBay\nOther Parts\n1. Enclosure \u2013 your choice\n2. Perf board\n3. Heat Shrink\n\nTools\n1. Soldering iron\n2. Bread board and wires\n3. Pliers\n4. Screwdrivers\n5. Dremel\n6. Drill\n7. Hot glue/super glue", "step_imgs": ["https://cdn.instructables.com/FDP/2RFU/JFSIZ1FE/FDP2RFUJFSIZ1FE.LARGE.jpg", "https://cdn.instructables.com/F9O/H8YU/JFSIZ2V1/F9OH8YUJFSIZ2V1.LARGE.jpg", "https://cdn.instructables.com/FD5/FVTB/JFSIZ2V2/FD5FVTBJFSIZ2V2.LARGE.jpg"], "step_title": "Step 1: Parts and Tools"}, {"step": 2, "steps_text": "The flashing light circuit is quite simple and works by changing the values on the pots. On the original schematic, there is only the 100K pot which is used to speed up or slow down the flashing LED.\nAnother 100K pot (so there are 2 pots in total) has been added to give more options in changing the speed and brightness of the LED. It isn\u2019t necessary but if you want more sound options, then it\u2019s worth adding it.", "step_imgs": ["https://cdn.instructables.com/F35/ZKY2/JFSIYUD8/F35ZKY2JFSIYUD8.LARGE.jpg", "https://cdn.instructables.com/F98/2VXJ/JFMTF4BX/F982VXJJFMTF4BX.LARGE.jpg"], "step_title": "Step 2: Flashing LED Circuit"}, {"step": 3, "steps_text": "The second part to the synth is a light Theremin circuit. I made a project recently using this circuit which can be found here.\nThis uses a photo cell which acts like a resistor, to change the frequency of the sound with light. We will be attaching the 2 circuits together through the LED on the first circuit and the photo cell on the other using a Vactrol.", "step_imgs": ["https://cdn.instructables.com/FUK/TSL1/JFSIYURK/FUKTSL1JFSIYURK.LARGE.jpg", "https://cdn.instructables.com/F0Z/30DP/JFMTF4CM/F0Z30DPJFMTF4CM.LARGE.jpg"], "step_title": "Step 3: Light Theremin Circuit"}, {"step": 4, "steps_text": "A Vactrol acts like a potentiometer - applying a voltage to the Vactrol's LED has the same effect as turning up the knob on the potentiometer.\nIt consists of two components incorporated into one package: a light-emitting diode (LED), and a photoresistor (a resistor whose resistance drops when it is exposed to light)\nIt\u2019s important that the only light that the photo cell can detect is from the LED. If outside light is able to reach the photo cell, then it will interfere with the performance and sound, that\u2019s why you need to add something like heat shrink to protect them.", "step_imgs": ["https://cdn.instructables.com/FJ8/U4FY/JFSIYWOE/FJ8U4FYJFSIYWOE.LARGE.jpg", "https://cdn.instructables.com/F6E/I39K/JFSIYWOF/F6EI39KJFSIYWOF.LARGE.jpg", "https://cdn.instructables.com/FI7/18ZZ/JFSIYWOG/FI718ZZJFSIYWOG.LARGE.jpg"], "step_title": "Step 4: What Is a Vactrol?"}, {"step": 5, "steps_text": "Steps:\n1. Cut a small length of heat shrink tube. The LED and photo cell need to be able to fit inside.\n2. Place the LED into the heat shrink with the legs facing out and also the same for the photo cell. Make sure that they are touching inside the heat shrink.\n3. Heat the heat shrink and start to shrink it. Start with one end first and when it has shrink enough, grab some pliers and flatten the end of the heat shrink so it is sealed shut.\n4. Do the same for the other end\n5. That\u2019s it! You have made an important component to the fizzle loop synth", "step_imgs": ["https://cdn.instructables.com/FTG/9EUK/JFMTF4EW/FTG9EUKJFMTF4EW.LARGE.jpg", "https://cdn.instructables.com/FLU/0ZLS/JFMTF4EX/FLU0ZLSJFMTF4EX.LARGE.jpg", "https://cdn.instructables.com/FH0/UBKY/JFMTF4FL/FH0UBKYJFMTF4FL.LARGE.jpg", "https://cdn.instructables.com/FHB/EEW5/JFMTF42H/FHBEEW5JFMTF42H.LARGE.jpg"], "step_title": "Step 5: Making a Vactrol"}, {"step": 6, "steps_text": "I\u2019ve added a few tips below when building the first half of the circuit \u2013 the flashing LED.\nI added 2 100K pots as I found that this gives me more control over the frequency. You should mix and match yourself to try and get the best sound from your synth. Do this on the bread board and try and few different values to see if one works better than another.\nAlso, the original resistor for the LED was 3.3K. I brought this down to 1k to make the LED brighter.\nI know that this is self-evident but make sure that the LED in the vactrol is correctly orientated when connecting to the circuit. It would be easy to incorrectly connect the polarities.\nMake sure that once you have built the circuit, you test and make sure that it\u2019s working. You can do this by touching an LED\u2019s legs to the resistor and one of the LED legs from the Vactrol. If it doesn\u2019t work check over the circuit and see what you missed. I forgot to attach pin 8 to positive!\nSteps:\n1. Make sure that you add some good lengths of wire to the potentiometers.\n2. The LED section is there you solder the LED inside the Vectrol. Make sure that when you solder it into the perf board that the legs from the photo cell are near to where you are going to make the other circuit.\n3. I decided to add a separate power supply for both circuits. I found that there was some noise coming from the common ground and this helps isolate it. However you can use the same battery for both circuits if you wish. The Flashing LED takes 9v's", "step_imgs": ["https://cdn.instructables.com/F35/ZKY2/JFSIYUD8/F35ZKY2JFSIYUD8.LARGE.jpg", "https://cdn.instructables.com/F5R/7A78/JFSIZ1EP/F5R7A78JFSIZ1EP.LARGE.jpg", "https://cdn.instructables.com/FGV/4MOK/JFSIZ1F0/FGV4MOKJFSIZ1F0.LARGE.jpg"], "step_title": "Step 6: Building the Flashing LED Circuit"}, {"step": 7, "steps_text": "Once you have the first section done, you then need to make the light Theremin circuit. I did modify the circuit diagram slightly and it is up to you whether you want to include the capacitor and switch on the photo cell.\nI\u2019m sure that there are many more hacks that you could do to get some different sounds out of your synth so experiment by adding different values to the capacitors and photo cell.\nIf you would like a step by step walk through on this circuit, you can check out this \u2018ible which I did a little while back.\nSteps:\n1. The LED on this schematic is actually the light for the Theremin but I decided to keep it as an \u201con\u201d indicator. Make sure that you add some longer wires to this so it can be positioned to where you need it.\n2. Also add some longer wires for the potentiometers. I usually add all of the pots to the case first and then attach the wires later.\n3. Before you add the vactrol, test that the circuit is working first by adding a photo cell to pins 7 and 8. If you get some sounds coming out the speaker when you add a light source to the photo cell then your circuit is good to go.\n4. The power source is 4 Aa batteries (6V). I found that 9V's is too much and heats-up the 555 timer", "step_imgs": ["https://cdn.instructables.com/FUK/TSL1/JFSIYURK/FUKTSL1JFSIYURK.LARGE.jpg", "https://cdn.instructables.com/FGW/X63U/JFSIZ1FI/FGWX63UJFSIZ1FI.LARGE.jpg", "https://cdn.instructables.com/F9W/O4L5/JFSIZ1HD/F9WO4L5JFSIZ1HD.LARGE.jpg"], "step_title": "Step 7: Building the Light Theremin Circuit"}, {"step": 8, "steps_text": "The case could be anything from a cigar box to what I usedwhich is an old electrical meter I found in a junk shop.\nI will go through how I put mine together and how I modified the case\nSteps:\n1. First pull apart your case.\n2. Next pull any electronics and parts that you don\u2019t need for your project and empty the box completely.\n3. My box had some wires and old potentiometers attached to the front plate so I also removed all of these as well.", "step_imgs": ["https://cdn.instructables.com/F8W/0JKM/JFMTF48B/F8W0JKMJFMTF48B.LARGE.jpg", "https://cdn.instructables.com/F7R/6BRC/JFMTF476/F7R6BRCJFMTF476.LARGE.jpg", "https://cdn.instructables.com/FYL/JXRF/JFMTF48C/FYLJXRFJFMTF48C.LARGE.jpg"], "step_title": "Step 8: Deciding on a Case"}, {"step": 9, "steps_text": "You will need somewhere to add the speaker. If you find that there just isn\u2019t enough room you could always just plug the synth into an external amplifier you use that instead. I went for both options.\nSteps:\n1. Mark where you want to add the speaker and cut the hole. I used a hole cutter on a drill which worked fine although it did slightly melt the top of the lid of the case\n2. Measure and drill the holes to attach the speaker.\n3. Lastly use some small nuts and screws to attach it to the case", "step_imgs": ["https://cdn.instructables.com/F4G/MSHP/JFMTF4BT/F4GMSHPJFMTF4BT.LARGE.jpg", "https://cdn.instructables.com/FVO/2ZWR/JFSIZ2TU/FVO2ZWRJFSIZ2TU.LARGE.jpg", "https://cdn.instructables.com/FYT/659J/JFMTF4BU/FYT659JJFMTF4BU.LARGE.jpg", "https://cdn.instructables.com/F7X/R3JG/JFMTF4CP/F7XR3JGJFMTF4CP.LARGE.jpg", "https://cdn.instructables.com/FPX/1JUI/JFMTF4DD/FPX1JUIJFMTF4DD.LARGE.jpg"], "step_title": "Step 9: Adding the Speaker"}, {"step": 10, "steps_text": "You will need to add 3 potentiometers to the front of the case. Decide where the best place for each one. I decided to add the 2 pots from the flashing LED to the bottom of the lid of the case and the pitch changing pot from the Theremin in the middle as my case already had a great knob for it.\nSteps:\n1. If necessary, drill holes where you want to add the pots. My case already had holes, I just needed to enlarge them slightly.\n2. Secure the pots in place.\n3. Add some knobs to the tops of the pots\n4. Later, when you attach the wires from the circuit to the pots, you will need to join one wire to 2 pins and the other wire to the other pin. The orientation of how you do this will determine the way the knob changes the pitch and speed. For example, if you attach a wire to the pin on the left and the one in the middle and the other wire to the last pin, you will need to turn the pot clockwise to make the pitch and speed increase. I find that this is the best way to attach them together.", "step_imgs": ["https://cdn.instructables.com/FVI/7R3I/JFMTF4DF/FVI7R3IJFMTF4DF.LARGE.jpg", "https://cdn.instructables.com/FHR/VMTN/JFMTF4DI/FHRVMTNJFMTF4DI.LARGE.jpg", "https://cdn.instructables.com/F33/V6EM/JFMTF4E6/F33V6EMJFMTF4E6.LARGE.jpg", "https://cdn.instructables.com/FTU/KQPA/JFMTF4EV/FTUKQPAJFMTF4EV.LARGE.jpg", "https://cdn.instructables.com/FTS/6YEA/JFMTF42I/FTS6YEAJFMTF42I.LARGE.jpg", "https://cdn.instructables.com/FDC/M7AB/JFMTF44V/FDCM7ABJFMTF44V.LARGE.jpg"], "step_title": "Step 10: Adding the Potentiometers"}, {"step": 11, "steps_text": "Now that you have made the circuit and hopefully all is working correctly, you now need to attach all of the wires.\nSteps:\n1. Take your time and solder all of the corresponding wires to the pots and switches. I find that the best way to ensure that you are soldering the correct wires to the right pots and switches is to make the wire the same colour. This way you can make sure that you don't get them mixed-up.\n2. Use thin wire to make the connections. Wire takes up a surprisingly large amount of space and using thin wire will ensure you reduce the space taken up by it.\n3. For the pot that controls the pitch (middle on from the Theremin side) I wired this up so the lowest pitch would be when the dial is facing up and the highest pitch would be on either side. To do this you need to connect the 1st and 3rd pins together on the pot.", "step_imgs": ["https://cdn.instructables.com/FID/PCH3/JFSIZ1GO/FIDPCH3JFSIZ1GO.LARGE.jpg", "https://cdn.instructables.com/FT3/YBVU/JFSIZ1ED/FT3YBVUJFSIZ1ED.LARGE.jpg", "https://cdn.instructables.com/F6H/44ZL/JFSIZ1E8/F6H44ZLJFSIZ1E8.LARGE.jpg", "https://cdn.instructables.com/F0H/Z91U/JFSIZ1DJ/F0HZ91UJFSIZ1DJ.LARGE.jpg"], "step_title": "Step 11: Attaching the Wires"}, {"step": 12, "steps_text": "Steps:\n1. Solder the wires from the battery terminals to the switch and the circuity board.\n2. Solder the positive wires from the circuit board to the switch and the corresponding positive wires to the circuit board.\n3. Lastly, solder the ground wires to the board, making sure that the correct wire is soldered to the right part of the circuit board. So 6v to the Theremin side and 9v to the flashing LED.\n4. Before you close up the case, check and make sure that all of the pots are working right.\n5. Close up the case and your done.", "step_imgs": ["https://cdn.instructables.com/F0Q/SHH0/JFSIZ1DW/F0QSHH0JFSIZ1DW.LARGE.jpg", "https://cdn.instructables.com/FJB/L69W/JFSIZ1HO/FJBL69WJFSIZ1HO.LARGE.jpg", "https://cdn.instructables.com/F3S/2IJK/JFSIZ2UZ/F3S2IJKJFSIZ2UZ.LARGE.jpg"], "step_title": "Step 12: Adding the Batteries"}], "channel": "Electronics"}, {"category": "Technology", "description": "After a year of heavy use, i started to notice that my joycon would drift when not touching the analog stick.\nI tried re calibrating and blowing air in the analog stick but this didn't solve the issue.\nI looked for a replacement analog stick but they are 25-30 USD so that is way to much, so went online but could not find anywhere on how to clean the analog stick so I went ahead and ventured on doing it myself and documenting it for everyone to try, if you're brave and patient enough.\nDo not try if you don't like to tinker, the taking apart of the analog stick is super tedious, patience is key. Also you have to be super careful as thin fragile ribbon cables are involved in this.\nDO AT YOUR OWN RISK. This will most definitely void the warranty.\nHope it helps and enjoy.\n[Doing this for the L joycon, but you can try the R joycon too, slightly different opening procedure]", "title": "Nintendo Joycon Drift Fix (Not Software Related)", "url": "https://www.instructables.com/id/Nintendo-Joycon-Drift-Fix-Not-Software-Related/", "steps": [{"step": 1, "steps_text": "-Remove screws, on from first pic.\n-Carefully fold open the joycon. ****BE CAREFUL, there is ribbon cables so don't pull too hard\n-Carefully remove the battery with a plastic pry tool, dont use metal as you might damage/short the battery\n*More hints in the pictures", "step_imgs": ["https://cdn.instructables.com/F47/BD3U/JFSTJNPN/F47BD3UJFSTJNPN.LARGE.jpg", "https://cdn.instructables.com/FCF/NLW3/JFSTJNPR/FCFNLW3JFSTJNPR.LARGE.jpg", "https://cdn.instructables.com/F85/BA5F/JFSTJNPY/F85BA5FJFSTJNPY.LARGE.jpg"], "step_title": "Step 1: Opening the Joycon"}, {"step": 2, "steps_text": "-Start by removing carefully the ribbon cable for the Z button, there is a small brown flap that you SHOULD flip up to allow the ribbon to come out easily.\n-Remove the ribbon cable for the L button\n-Carefully remove the ribbon cable for the analog stick after flipping the black flap\n-Now to remove the screws of the analog stick, be careful with the L button ribbon cable that is over one of the two screws\n-Wiggle the analog stick out being careful to not damage the small black dust guard. If you pop that black guard off, just place it back.", "step_imgs": ["https://cdn.instructables.com/FPW/CLYF/JFSTJO0D/FPWCLYFJFSTJO0D.LARGE.jpg", "https://cdn.instructables.com/FH0/L2K4/JFSTJO0F/FH0L2K4JFSTJO0F.LARGE.jpg", "https://cdn.instructables.com/FSF/XQRG/JFSTJO0H/FSFXQRGJFSTJO0H.LARGE.jpg"], "step_title": "Step 2: Removing Ribbon Cables to Access the Analog Stick"}, {"step": 3, "steps_text": "-Loosen the clips on as on the pictures, use a small flat head screwdriver to get the metal to clear the small plastic tabs\n-Super carefully, with a small flat screwdriver unclip from where the picture shows the metal clip. This clip is really tricky and super hard.\n**Be careful as too much force might slip the driver in to the ribbon cable or you might stab your hand, also, dont want parts flying everywhere\n*** This is where patience and strength are needed", "step_imgs": ["https://cdn.instructables.com/FD4/H6M9/JFSTJOKS/FD4H6M9JFSTJOKS.LARGE.jpg", "https://cdn.instructables.com/FFE/C15K/JFSTJOKX/FFEC15KJFSTJOKX.LARGE.jpg", "https://cdn.instructables.com/FKV/PXBE/JFSTJOL1/FKVPXBEJFSTJOL1.LARGE.jpg", "https://cdn.instructables.com/FML/ISSY/JFSTJORO/FMLISSYJFSTJORO.LARGE.jpg"], "step_title": "Step 3: Now the Fun Part,"}, {"step": 4, "steps_text": "-Clean the contacts shown in the pictures with a alcohol infused Qtip, if you dont have alcohol, a dry one should be enough to get the dust off.\n-BE SUPER careful with the 3rd pictures contacts, they are hair thin and get bent easily, i by mistake bent them twice and it took a lot of patience with a needle to shape them back to normal.\n-Clean the brush contacts\n-If there is dust clean that too, be careful as the plastic half is made of of many pieces and they all can jump out of place, mine fell apart so I had fun getting that puzzle back together to fit and work propperly", "step_imgs": ["https://cdn.instructables.com/F0X/VIX8/JFSTJOWO/F0XVIX8JFSTJOWO.LARGE.jpg", "https://cdn.instructables.com/FN6/BY3E/JFSTJOWP/FN6BY3EJFSTJOWP.LARGE.jpg", "https://cdn.instructables.com/FO7/CJ3G/JFSTJOXH/FO7CJ3GJFSTJOXH.LARGE.jpg"], "step_title": "Step 4: Now That It's Open, Lets Clean the Contacts"}, {"step": 5, "steps_text": "If you thought it was tricky, hold on to your bucks....\n-Try to get everything to look like the first picture\n-If you bent the metal trying to open the analog stick now is the time to straighten it up as much as you can\n-Before clipping everything back together make sure that if you move the analog stick it moves the brush contacts smoothly and correctly, it should also kind of center itself.\n-Make sure that there is the thin washer under the spring which should have the wide part in the bottom\n-After checking and rechecking, clip the metal back to the plastic.\nPlease be super careful putting it back together, it takes patience as trying to clip it might make some pieces inside to pop off place and you have to start again to arrange and try to clip again.", "step_imgs": ["https://cdn.instructables.com/F0X/VIX8/JFSTJOWO/F0XVIX8JFSTJOWO.LARGE.jpg", "https://cdn.instructables.com/FAV/OGDE/JFSTJPF6/FAVOGDEJFSTJPF6.LARGE.jpg", "https://cdn.instructables.com/FKV/PXBE/JFSTJOL1/FKVPXBEJFSTJOL1.LARGE.jpg"], "step_title": "Step 5: Now, Lets Put It Back Together."}, {"step": 6, "steps_text": "-Once you got it all back together, please check that the stick can move in all directions and then centers itself\n-Now walk backwards on the steps:\n-Place the analog stick on its place in the joycon\n-Screw the analog stick\n-Connect the ribbon cables remembering to move the flap to get the cable in and then locking it to secure the ribbon cables\n-Put the battery plastic housing, then, place and connect the battery", "step_imgs": ["https://cdn.instructables.com/FSF/XQRG/JFSTJO0H/FSFXQRGJFSTJO0H.LARGE.jpg", "https://cdn.instructables.com/FH0/L2K4/JFSTJO0F/FH0L2K4JFSTJO0F.LARGE.jpg", "https://cdn.instructables.com/FPW/CLYF/JFSTJO0D/FPWCLYFJFSTJO0D.LARGE.jpg"], "step_title": "Step 6: Check the Analog Stick"}, {"step": 7, "steps_text": "-Before fully screwing everything together test to see if the controller and analog stick work (just click the controller in place)\n-Click buttons in you joycon to wake it up\n-Go in to your Switch \"Controller and sensors\" setting, navigate to calibrate control sticks, go through the calibration.\n-And your sticks should not drift anymore.\n-If they do or its not responsive, check you ribbon connections hopefully nothing has been ripped. Check the analog stick and see if the brushed contacts are not bent\n-If all is working, go back and screw everything shut and enjoy.", "step_imgs": ["https://cdn.instructables.com/F9M/JCKA/JFSTJQE4/F9MJCKAJFSTJQE4.LARGE.jpg"], "step_title": "Step 7: Lets Test the Joycon"}, {"step": 8, "steps_text": "Hope this saved you form purchasing a replacement analog stick or just purchasing a new joycon.\nCheers ;)", "step_imgs": [], "step_title": "Step 8: Hope This Helped You"}], "channel": "Electronics"}, {"category": "Technology", "description": "Hi there,\nThis is my contribution to the Space-Contest.\nThere are some ISS-Pointer around the WWW. Some of them use several PSUs and/or quite big motors.\nMy goal was to build something cheap, looking cute and a little bit badass - all powered with only one 5 Volt PSU.\nIf the GIF and/or the embedded Video don't work, here is the direct youtube link:\nIt's just a demo. Not a real fly-by in this video.\nSo what you realy need is:\none Stepper-Motor (28BYJ-48)\none Servo-Motor (9G SG90)\nWemos D1 mini\ndecent 5 Volt source (i use a raspberry power supply with on/off switch)\nsomething running a python-script to calculate the iss.position (raspberry, linux server, nas)\nsoldering stuff\ncables\nEverything else is up to your taste and possibilities.\nI added lots of Lego-Bricks (internal) and other \"stuff\" to get those metal plates together, two old-fashioned Light-Bulbs from Bike-Spare-Parts, an arm from an old Harddrive, a tiny display, some eyebrows, small magnets and a reed-contact. After some weeks i was able to print an axis instead of using even more legos.\nFun-Fact: Legos do perfectly fit on a 28BYJ-48 stepper.\nIn a way it turned out as a spare-part-project which lights up our living room time by time.\nThere is even a little LED-blinking (the embedded LED on the chip), everytime the motor starts.\nThe bulbs only lit up when the ISS is realy high enough from the horizon to be seen. This is hardware based with magnets and a reed-contact.", "title": "ISS Pointer Robo", "url": "https://www.instructables.com/id/ISS-Pointer-Robo/", "steps": [{"step": 1, "steps_text": "You want to build something cool that works? Then make it work first :)\nWrite everything down and start on your breadboard. The pictures above were my first attempts.\nThere are a lot of wires. Nearly every possible pin will be used, if you add the display, too.\nYou can flash the arduino code whenever you want, but you'll have to add your wlan credentials first.\nconst char* ssid     = \"xxx\";  // YOUR WIFI SSID\nconst char* password = \"xxx\";  // YOUR WIFI PASSWORD\n\n// change this to your motor if not NEMA-17 200 step\n#define STEPS 2048  // Max steps for one revolution\n#define RPM 10     // Max RPM\n#define DELAY 1    // Delay to allow Wifi to work\nSo edit those lines, keep the com-monitor active, and flash it.\nThe number of steps work for me - if you use another stepper, you will have to find other values.\nAfter flashing you should get some output on your com-monitor. At least your IP-Adress should show.\nNow you can connect to the webserver by typing the ip-adress and play around a little bit.\nNo errors so far? Then take of the usb an start connecting everything on your breadboard.\nIn the end, some things didn't work as expected, so here is all in \"code-language\", just to get everything correctly wired.\nint SVRO = D3;    // GPIO 15 Servo Control\nint STBY = D5;     // GPIO 5 TB6612 Standby\nint LEDIN = D4;    // GPIO 0 (built-in LED)\nint LEDEX = D8;    // GPIO 4 External LED\nIn line 204 you can change the word \"uhr\" to whatever your language is.\nThe Display connects to\nSDA=D2\nSCL=D1\nYou should use the 3Volt from your ESP to power it.\nThe arm (Servo) goes to D3.\nStepper is: D5, D7, D6, D0\nThats it. You need to put all 5V to one power-source and all grounds.\n(My bike-bulbs are connected directly to 5 Volt and ground. There is a reed contact in line which gets closed by magnets on the pointing arm. They are not connected to the ESP.)\nWhen everything is wired up, you still can use your usb-connection as the power source, which makes debugging easy.\nBut the Ampere from your PC is not enough for two motors, so at least the Servo will make some ticking noise.\nConnect just one motor or give them power with an external source for testing.\nEverything connected and double-checked you should be able to let your motors run.\nThe display works as a debug-output, too ;)", "step_imgs": ["https://cdn.instructables.com/FAU/WRRT/JFMTNHVT/FAUWRRTJFMTNHVT.LARGE.jpg", "https://cdn.instructables.com/FYU/GPCC/JFMTNHYJ/FYUGPCCJFMTNHYJ.LARGE.jpg", "https://cdn.instructables.com/FLO/36MO/JFSIY70N/FLO36MOJFSIY70N.LARGE.jpg"], "step_title": "Step 1: Dryrun Everything"}, {"step": 2, "steps_text": "If you have your own Design in mind, this is the last step to get an iss-pointer running.\nAll other steps are about my way to build it.\nGet the python code (isspointer3.py), get your local latitude/longitude, edit lines with the # at the end and fill the ip-adress of your ESP.\nThe STEPS are 2048 with my stepper. That seems to be a very big number, but it works.\nYou have to test it with the webinterface of your ESP to get the right number.\n(I've used another IP for the LEDIP. You can use the ip of your ESP as well.)\n<p># YOUR LOCATION<br>LAT = <strong>41.6</strong> # Your Latitude (+N) deg\nLON = <strong>5.3</strong> # Your Longitude (+E) deg\nELV = <strong>64.0</strong> # Elevation at your location (meters)</p><p># FOR ALT/AZ POINTER\n# FOR ALT/AZ POINTER \nSTEPIP = \"http://192.168.1.77/\" # IP Address of YOUR ESP8266 AltAZ Pointer\nLEDIP = \"http://192.168.1.73/\" # IP Address of GLUEHBIRNE\nSTEPS  = 2048    # Replace with your stepper (steps per one revolution)</p>\nSave and run with:\npython isspointer3.py\nThe output should look something like this:\ndon@NAS ~ $ python isspointer3.py\n\nDEBUG MODE</p><p>ISS PASS INFO\nSeconds since last TLE check: 3600\n['ISS (ZARYA)', '1 25544U 98067A   18099.10205194  .00002348  00000-0  42552-4 0  9998', '2 25544  51.6434   3.1158 0001739 321.6269 181.4219 15.54218240107772']\nCurrent UTC time  : 2018/4/10 07:57:50\nCurrent Local time: 2018-04-10 09:57:50.000001<a href=\"http://192.168.1.77/2018-04-10\">\n\nhttp://192.168.1.77/2018-04-10  </a> 13:57:53.000001\nStepper usage:<a href=\"http://{ip_address}/stepper/stop\">\n\nhttp://192.168.1.77/2018-04-10  </a><a href=\"http://{ip_address}/stepper/start\">\n\nhttp://192.168.1.77/2018-04-10 ><a href=\"http://{ip_address}/stepper/rpm?[1\">\n\nhttp://192.168.1.77/2018-04-10  </a> to 10]<a href=\"http://{ip_address}/stepper/steps?[-2048\">\n\nhttp://192.168.1.77/2018-04-10  </a> to 2048]</p><p>Servo usage:<a href=\"http://{ip_address}/servo/value?[0\">\n\nhttp://192.168.1.77/2018-04-10  </a> to 90]</p><p>LED usage:</p><p><a href=\"http://{ip_address}/led/on\" style=\"background-color: initial;\">http://{ip_address}/led/on</a></p><p><a href=\"http://{ip_address}/led/off\">http://{ip_address}/led/off</a></p><p>Free Heap: 45040 Byte</p><p>Next Pass (Localtime): 2018-04-10 13:57:53.000001\nUTC Rise Time   : 2018/4/10 11:57:54\nUTC Max Alt Time: 2018/4/10 12:01:52\nUTC Set Time    : 2018/4/10 12:05:50\nRise Azimuth: 183:06:43.9\nSet Azimuth : 86:07:53.0\nMax Altitude: 8:08:16.8\nDuration    : 476</p><p>CURRENT LOCATION:\nLatitude : -6:39:50.3\nLongitude: -135:40:12.7\nAzimuth  : 313\nAltitude : -62\nISS below horizon\ndoAzReset(0)\nThe display on your Pointer should (after some seconds) show the next fly-by.\nCongrats. All your components are working.\nIf you want to have some \"maker-fun\" or just get an idea of building your own, follow the next steps.", "step_imgs": ["https://cdn.instructables.com/F3D/KYD5/JFMTNHYG/F3DKYD5JFMTNHYG.LARGE.jpg"], "step_title": "Step 2: Get Your Location and the ISS-Position"}, {"step": 3, "steps_text": "Picture one shows a raw idea of the final system.\nEverything was made out of aluminium.\nStepper:\nThe stepper sits upside-down, so the whole body rotates around the base.\nWhy not putting the stepper into the base? I wanted a small base - so it's a design based solution.\nMy first attempts (in picture two and three) didn't work out as expected. Later the stepper was glued at the highest position.\nIn picture four it is in the right position with shortend cables and a piece of metal i found in an old cd-drive.\nSee the annotations for some details.\nServo and pointing arm:\nNot as much fun as expected. I've tried a lot of things, but at the end it barely fitted into the side and the hard-drive arm was glued.\nYou can see the tiny magnets which are glued, too. They close the reed-contact to lit the bulbs.\nSee pictures for more details.", "step_imgs": ["https://cdn.instructables.com/FN2/XHMK/JFMTNHYF/FN2XHMKJFMTNHYF.LARGE.jpg", "https://cdn.instructables.com/F0D/IDYB/JFMTNHYA/F0DIDYBJFMTNHYA.LARGE.jpg", "https://cdn.instructables.com/FHO/S4LF/JFMTNHY4/FHOS4LFJFMTNHY4.LARGE.jpg", "https://cdn.instructables.com/FT6/QE0L/JFMTNHX3/FT6QE0LJFMTNHX3.LARGE.jpg", "https://cdn.instructables.com/F60/JVWO/JFMTNHVC/F60JVWOJFMTNHVC.LARGE.jpg", "https://cdn.instructables.com/FXY/P768/JFMTNHWJ/FXYP768JFMTNHWJ.LARGE.jpg", "https://cdn.instructables.com/FI9/CSOX/JFMTNHWC/FI9CSOXJFMTNHWC.LARGE.jpg", "https://cdn.instructables.com/FIW/YN7V/JFMTNHWB/FIWYN7VJFMTNHWB.LARGE.jpg", "https://cdn.instructables.com/FB5/UZKD/JFMTNHVQ/FB5UZKDJFMTNHVQ.LARGE.jpg", "https://cdn.instructables.com/F50/4LSV/JFMTNHVR/F504LSVJFMTNHVR.LARGE.jpg"], "step_title": "Step 3: Motors"}, {"step": 4, "steps_text": "To make the \"cuteness\"-part work, you need a big head, big eyes which are a little bit to low and eyebrows.\nThose eyebrows are made from soldering wick. The bulbs are set into some caps, which are used for screws.\nBoth bulbs are soldered in row. They are too bright, when soldered each to 5 Volt.\nThe body gets a lot of drilling. All wires have to go through it.\nI should have built it slightly bigger.\nThe base could be closed with legos. Didn't plan that. Power comes through an USB-connector in the back of the base.\nKeep all wires long enough. Espacially those Power-Wires from your usb-connection into the body.\nThe Body runs nothing more then one round in one direction. So if you choose wires which last for three rounds, it should be enough.", "step_imgs": ["https://cdn.instructables.com/F0S/AYU9/JFMTNHX5/F0SAYU9JFMTNHX5.LARGE.jpg", "https://cdn.instructables.com/FUG/WB54/JFMTNHX4/FUGWB54JFMTNHX4.LARGE.jpg", "https://cdn.instructables.com/FKC/SJ6W/JFMTNHX7/FKCSJ6WJFMTNHX7.LARGE.jpg", "https://cdn.instructables.com/FKP/MNYZ/JFMTNHWZ/FKPMNYZJFMTNHWZ.LARGE.jpg", "https://cdn.instructables.com/FF7/AZPS/JFMTNHX8/FF7AZPSJFMTNHX8.LARGE.jpg", "https://cdn.instructables.com/FEX/AC7T/JFMTNHWN/FEXAC7TJFMTNHWN.LARGE.jpg", "https://cdn.instructables.com/FJ8/2ETS/JFMTNHWK/FJ82ETSJFMTNHWK.LARGE.jpg", "https://cdn.instructables.com/FCM/QMJ7/JFMTNHXF/FCMQMJ7JFMTNHXF.LARGE.jpg", "https://cdn.instructables.com/F8P/UT97/JFMTNHXG/F8PUT97JFMTNHXG.LARGE.jpg", "https://cdn.instructables.com/F18/4VIK/JFMTNHW6/F184VIKJFMTNHW6.LARGE.jpg"], "step_title": "Step 4: Head, Eyes, Body, Basement"}, {"step": 5, "steps_text": "As you can see in the pictures i've used a lot of things i found in my drawers.\nSome tips:\nbe patient :)\ndrill as perfect as you can\nuse what you have - if it works\ndon't try to make it toooo small.\nmake annotations onto the wires", "step_imgs": ["https://cdn.instructables.com/FWU/3I55/JFMTNHXA/FWU3I55JFMTNHXA.LARGE.jpg", "https://cdn.instructables.com/FA4/27G4/JFMTNHXH/FA427G4JFMTNHXH.LARGE.jpg", "https://cdn.instructables.com/FSA/7FVC/JFMTNHVA/FSA7FVCJFMTNHVA.LARGE.jpg", "https://cdn.instructables.com/F1M/TF70/JFMTNHWS/F1MTF70JFMTNHWS.LARGE.jpg", "https://cdn.instructables.com/F9X/WDMR/JFMTNHWY/F9XWDMRJFMTNHWY.LARGE.jpg", "https://cdn.instructables.com/FAR/QHRW/JFMTNHWV/FARQHRWJFMTNHWV.LARGE.jpg", "https://cdn.instructables.com/F8M/N71C/JFMTNHWW/F8MN71CJFMTNHWW.LARGE.jpg", "https://cdn.instructables.com/FWL/K30V/JFMTNHWX/FWLK30VJFMTNHWX.LARGE.jpg", "https://cdn.instructables.com/F6C/GHIG/JFMTNHXZ/F6CGHIGJFMTNHXZ.LARGE.jpg", "https://cdn.instructables.com/FPE/81E7/JFMTNHW3/FPE81E7JFMTNHW3.LARGE.jpg", "https://cdn.instructables.com/FIH/WHSJ/JFMTNHVD/FIHWHSJJFMTNHVD.LARGE.jpg", "https://cdn.instructables.com/FUO/1XLU/JFMTNHXO/FUO1XLUJFMTNHXO.LARGE.jpg", "https://cdn.instructables.com/FZT/VHEY/JFMTNHXL/FZTVHEYJFMTNHXL.LARGE.jpg", "https://cdn.instructables.com/FXS/5RYS/JFMTNHXC/FXS5RYSJFMTNHXC.LARGE.jpg", "https://cdn.instructables.com/FQ3/VLMV/JFMTNHVL/FQ3VLMVJFMTNHVL.LARGE.jpg", "https://cdn.instructables.com/FQS/IBKY/JFMTNHVN/FQSIBKYJFMTNHVN.LARGE.jpg", "https://cdn.instructables.com/FRZ/B6HY/JFMTNHXQ/FRZB6HYJFMTNHXQ.LARGE.jpg", "https://cdn.instructables.com/FKS/1ZUT/JFMTNHW0/FKS1ZUTJFMTNHW0.LARGE.jpg"], "step_title": "Step 5: Wires, Joints and Drilling"}, {"step": 6, "steps_text": "The biggest problem was the axis.\nMy first attempts were based around some LEGOs and a cinch contact.\nIt worked for quite a while, but the LEGOs loosed some grip.\nFinally, i got my hands on a 3D-Printer and printed a special LEGO-Brick :)\nThe Power-Wires just go through the axis into the body. They are long enough.", "step_imgs": ["https://cdn.instructables.com/FHJ/RQ8T/JFMTNHXY/FHJRQ8TJFMTNHXY.LARGE.jpg", "https://cdn.instructables.com/FOJ/CK2M/JFMTNHY9/FOJCK2MJFMTNHY9.LARGE.jpg", "https://cdn.instructables.com/F7N/AWE3/JFMTNHUS/F7NAWE3JFMTNHUS.LARGE.jpg"], "step_title": "Step 6: Axis"}, {"step": 7, "steps_text": "If your workplace looks like mine, you had probably some fun making an iss-pointer.\nI think the Servo should have a capacitor. But it works as it is. Just a little \"tick\" time by time.\nLiked my project? Pleas vote for it!\nEverything started with this project:\nhttps://www.instructables.com/id/Building-an-ISS-P...\nThe last pictures are just for detailled looks.\nAny questions? Feel free to ask.", "step_imgs": ["https://cdn.instructables.com/FZ5/5HOX/JFMTNHX9/FZ55HOXJFMTNHX9.LARGE.jpg", "https://cdn.instructables.com/FL6/S58T/JFMTNHUV/FL6S58TJFMTNHUV.LARGE.jpg", "https://cdn.instructables.com/FEE/DXV7/JFMTNHUW/FEEDXV7JFMTNHUW.LARGE.jpg", "https://cdn.instructables.com/FAW/GRHI/JFMTNHV0/FAWGRHIJFMTNHV0.LARGE.jpg", "https://cdn.instructables.com/F7K/NGGR/JFMTNHV1/F7KNGGRJFMTNHV1.LARGE.jpg", "https://cdn.instructables.com/F4K/NBG6/JFMTNHV2/F4KNBG6JFMTNHV2.LARGE.jpg", "https://cdn.instructables.com/FIU/JBU7/JFMTNHV5/FIUJBU7JFMTNHV5.LARGE.jpg", "https://cdn.instructables.com/FSR/DJFD/JFMTNHV6/FSRDJFDJFMTNHV6.LARGE.jpg", "https://cdn.instructables.com/FSL/1FEV/JFMTNHV7/FSL1FEVJFMTNHV7.LARGE.jpg", "https://cdn.instructables.com/FPV/9D22/JFMTNHV3/FPV9D22JFMTNHV3.LARGE.jpg", "https://cdn.instructables.com/F0D/XE1H/JFMTNHV4/F0DXE1HJFMTNHV4.LARGE.jpg"], "step_title": "Step 7: Final Thoughts and Sources"}], "channel": "Arduino"}, {"category": "Technology", "description": "For a project I had to design something interactive with an arduino. I chose to design a game with a puzzle box as component. In this how to I will explain how I made this box, as well as tips on how to modify it for other use cases.", "title": "How to Make a Puzzle Box With Arduino", "url": "https://www.instructables.com/id/How-to-Make-a-Puzzle-Box-With-Arduino/", "steps": [{"step": 1, "steps_text": "For this project I used an arduino mega 2560 myself because I had a lot of leds and sensors to plug in. It is also possible with an uno or even smaller variants of arduino. It really depends on how much pins or processing power you need. In my case it was mostly convenience, because I could hook up a lot of stuff to test things without having to make modifications or calculations. I recomend using at least some LEDs buttons and sensors if you want to make a puzzle box. I used the following components:\n-Arduino mega 2560\n-Breadboard\n-5V DC motor\n-Sound sensor\n-4pin RGB LED\n-9 pink LEDs\n-seven segment display\n-4 buttons\n-potentiometer\n-a lot of jumper wires\n-some resistors of varying strenth, you need some for the leds and two for the seven segment display.\nfor the casing I used\n-3mm MDF\n-2mm craftfoam\n-10mm craftfoam\n-hot glue\nThe tools I used\n-glue gun\n-soldering Iron and solder\n-lasercutter\n-scissors", "step_imgs": [], "step_title": "Step 1: Required Components"}, {"step": 2, "steps_text": "Before you start you should test all your components by wiring them up to see if they work. This way you will know it is the code where you messed up, and you will not spend hours looking for the problem. Then proceed to wire everything as you need it to be. Usually I write some test code and run it while I am adding more components to make sure everything is in place before I actually begin with the more complicated stuff. If for some reason you need to change anything or if you want to add more components after all this is the best time to do it. In this stage I also swapped out my uno board for a mega board because of the flexibility it gave me.\nIn this stage I also looked at a ton of tutorials to finalize my design and how I wanted to use each component. Here is another good example of a nice puzzle box X\nAnd here are some instructables on how to hook up certain components which I used as guideline to hook up mine:\nSeven segment display: X\nExternal reset button: X\nUsing a potentiometer: X\nIf you have finalized your setup you can continue", "step_imgs": [], "step_title": "Step 2: Testing + Breadboard Prototype"}, {"step": 3, "steps_text": "I used the tutorial for another puzzle box I mentioned in the previous step as a template to base my design off of. I added holes where I needed them for my components as well as some engraving to help to solve the puzzle. Feel free to use this as template as well, do keep in mind that you probably need to do some resizing to make sure all your components fit and keep in mind the thickness of your material.\nMake sure to measure how big your enclosure needs to be to avoid having it too small.\nI designed an external reset button in my enclosure because you will not be able to reach the one on your board when it is closed. I reccomend doing that or putting an on and off switch somewhere.", "step_imgs": ["https://cdn.instructables.com/F5U/H77E/JFSITYUT/F5UH77EJFSITYUT.LARGE.jpg"], "step_title": "Step 3: Designing the Enclosure"}, {"step": 4, "steps_text": "I attached my code for this project, feel free to use it as reference if you can make any sense of it. I am fairly new to programming so it is not the most efficient code out there.\nAfter the setup I left the void loop () empty and wrote different functions for the sides of my box. After I was done I called those functions in the void loop () so it was more managable. This way you can easily remove or change the order in which your arduino will process things.\nI also added a random component in my box in the setup, here is a tutorial how you would go about that: X\nIf you are completely done with this step it is time to lasercut your enclosure.", "step_imgs": [], "step_title": "Step 4: Coding With ArduinoADE"}, {"step": 5, "steps_text": "Assembly is by far the hardest part of a project like this, especially because you need to avoid short circuting your components. I reccomend soldering everything in place, and assembling the arduino part and testing it before putting it inside of your enclosure. After you have soldered everything toghether you can use hot glue to isolate all your bare metal parts. There are neater ways to do this, but I chose this one as you will not see the insides anyway.\nAfter a final test to see if everything was stil working I started puting the leds and the other components into their respective holes. I started at the bottom pannel and worked my way up. I used foam to keep the components in place, I hotglued it to the back of the pannels. You can press the buttons now without them popping back inside - neat!\nI kept two pannels lose to be able to adjust things on the inside if I needed to, this is of course completely up to you. This was a playtest prototype so that is why I kept it like this.", "step_imgs": [], "step_title": "Step 5: Assembly"}, {"step": 6, "steps_text": "These are some pictures and clips of my final product.", "step_imgs": ["https://cdn.instructables.com/FL1/NVFB/JFSITYGA/FL1NVFBJFSITYGA.LARGE.jpg", "https://cdn.instructables.com/FGU/DGL5/JFSITYF2/FGUDGL5JFSITYF2.LARGE.jpg", "https://cdn.instructables.com/FY6/FV45/JFSITYGO/FY6FV45JFSITYGO.LARGE.jpg", "https://cdn.instructables.com/FTM/LUE4/JFSITYTR/FTMLUE4JFSITYTR.LARGE.jpg", "https://cdn.instructables.com/FNS/NFMC/JFSITYU2/FNSNFMCJFSITYU2.LARGE.jpg"], "step_title": "Step 6: Final Product"}], "channel": "Electronics"}, {"category": "Technology", "description": "This Instructable contains the direction to make a greeting card with a whale whose eye lights up by pressing a paper switch that is under the \"press here\" sticker. It is a fun activity for kids learning circuits and it makes a nice Mother's day card. I ordered the sticker from Etsy, but you could easily make your own.", "title": "Make a Whale Card With a Hidden Paper Circuit", "url": "https://www.instructables.com/id/Make-a-Whale-Card-With-a-Hidden-Paper-Circuit/", "steps": [{"step": 1, "steps_text": "One 4\" x 6\" white card\nOne matching white envelope\nPaper cutouts\nOne whale\nWater drops for whale waterspout\nOne seagull\nTwo waves\n2 feet (61 cm) of \u00bc inch (0.64 cm) copper tape\nChibitronic Circuit Stickers. The blue ones come packaged with red and yellow)\nOne \u00bd inch by 1 inch (1.27 cm by 2.54 cm) piece of rectangular cardstock to use for a switch\nOne 3v coin cell battery\nOne star-shaped paperclip\nGlue Dots\nTools you will need:\nScissors\nTape measure or ruler\nPen or pencil", "step_imgs": ["https://cdn.instructables.com/F3S/GSDG/JDAK9IAO/F3SGSDGJDAK9IAO.LARGE.jpg", "https://cdn.instructables.com/FYG/SYTC/JDUKDW0C/FYGSYTCJDUKDW0C.LARGE.jpg", "https://cdn.instructables.com/FCB/Y44W/JDF2E6OO/FCBY44WJDF2E6OO.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "Chibitronic stickers are polarized so one side needs a positive connection and the other needs a negative connection. Chibitronic stickers have the positive charge on the broad side of the sticker.\nNote the gold strips on the lights. The lights\u2019 undersides have the same strips. These are the conductive surfaces that you need to ensure are in contact with the copper tape. The adhesive on the stickers is conductive so it helps ensure a consistent connection. It is also important to make sure that the stickers are in firm contact with the copper tape.", "step_imgs": ["https://cdn.instructables.com/FYX/W4L7/JDAK9JAK/FYXW4L7JDAK9JAK.LARGE.jpg"], "step_title": "Step 2: Get Familiar With Chibitronic Circuit Stickers"}, {"step": 3, "steps_text": "Before doing anything else, you will first mark the location you want for the waves and the whale. This will help you know where the copper tape and battery need to so that all connections can be made, and the whale can be lined up properly with the eye. Here\u2019s how to do it:\nPlace the waves on the card where you like then position the whale so that the eye is located above the waves on the white of the card. The waves are different so pay attention to which one is on top.\nMake a pencil mark along the top of one of the waves for the higher wave set so you can line.\nMake another pencil mark where the whale's eye will go", "step_imgs": ["https://cdn.instructables.com/FF2/D25E/JDAK9ID3/FF2D25EJDAK9ID3.LARGE.jpg", "https://cdn.instructables.com/F9K/1G48/JEYIQ7C4/F9K1G48JEYIQ7C4.LARGE.jpg", "https://cdn.instructables.com/F9Q/1CNZ/JDAK9IDC/F9Q1CNZJDAK9IDC.LARGE.jpg", "https://cdn.instructables.com/FIP/8QNV/JDAK9IL6/FIP8QNVJDAK9IL6.LARGE.jpg"], "step_title": "Step 3: Mark the Card to Place the Whale, the Waves, and the Eye"}, {"step": 4, "steps_text": "Place the battery below the mark for the eye, near the bottom of the card.\nTrace it to mark the location.", "step_imgs": ["https://cdn.instructables.com/F6F/0ZTL/JDAK9ILE/F6F0ZTLJDAK9ILE.LARGE.jpg", "https://cdn.instructables.com/FWC/GDSO/JDAK9ILN/FWCGDSOJDAK9ILN.LARGE.jpg"], "step_title": "Step 4: Mark the Battery Location"}, {"step": 5, "steps_text": "This first piece of tape will have a little tab at the bottom end that you will place over the battery to make the negative connection. Here\u2019s how you make it:\nMeasure the distance from the mark for the light to close to the bottom of the card. Add one more inch to it. It should be about 3 inches (7.62 cm) total.\nCut a piece of tape to that length.\nPeel the backing off and attach it to the card vertically starting directly below the mark you made for the eye.\nWhen you get to the edge of the battery mark, fold the tape back on itself, then fold the loose piece of tape in half, sticking it to itself to form a tab.", "step_imgs": ["https://cdn.instructables.com/FQF/2IQD/JDAK9IO2/FQF2IQDJDAK9IO2.LARGE.jpg", "https://cdn.instructables.com/F9G/D387/JDAK9IQZ/F9GD387JDAK9IQZ.LARGE.jpg"], "step_title": "Step 5: Place the Copper Tape From the Eye to the Battery"}, {"step": 6, "steps_text": "The switch is made from the 1 inch (2.54 cm) by \u00bd inch (1.27 cm) rectangular piece of cardstock. It will be a simple on/off switch. When you press it, the light will come on.\nFold the rectangle along the dotted line.\nPlace a glue dot on one of the outer sides.\nPlace it near the lower right corner of the card, with the opening toward the right vertical edge of the card.", "step_imgs": ["https://cdn.instructables.com/FLH/MIZK/JDAK9IRB/FLHMIZKJDAK9IRB.LARGE.jpg", "https://cdn.instructables.com/F04/ZRIC/JDAK9ITY/F04ZRICJDAK9ITY.LARGE.jpg", "https://cdn.instructables.com/FR8/R0VJ/JDAK9IWG/FR8R0VJJDAK9IWG.LARGE.jpg"], "step_title": "Step 6: Place the Switch and the Second Piece of Copper Tape."}, {"step": 7, "steps_text": "Measure the distance from the left side of the mark for the battery to the left edge of the switch with the switch folded shut.\nAdd 1 inch (2.54 cm) to that measurement. You should have about 4 inches total.\nCut a piece of copper tape to that length.\nOpen the switch and, start sticking the tape the switch just to the left of the fold, heading to the left.\nClose the switch, fold the tape over the edge, and continue adhering it across the card and over the mark for the battery.", "step_imgs": ["https://cdn.instructables.com/FY2/DUN4/JDAK9IYX/FY2DUN4JDAK9IYX.LARGE.jpg", "https://cdn.instructables.com/FEL/E1EU/JDAK9J1G/FELE1EUJDAK9J1G.LARGE.jpg", "https://cdn.instructables.com/F41/2406/JDAK9J1I/F412406JDAK9J1I.LARGE.jpg"], "step_title": "Step 7: Step 4 Continued"}, {"step": 8, "steps_text": "The last piece of tape runs from the top of the eye to the right side of the switch. You will need to be careful in your placement to make sure that the tape is hidden by the whale and the waves.\nMeasure the horizontal distance from the eye mark to the right edge of the card then measure from the eye mark to the bottom of the card. Add the distances together. It should be around 7 inches (17.78 cm). Add another inch (2.54 cm) to accommodate folds in the tape. It should be around 8 inches (20.32 cm). Cut a piece of tape that length.\nStart the copper tape above the eye mark about 1/8 inch (.32 cm) away from the other piece of tape. You need them close enough together to ensure a good connection.\nPlace the tape horizontally to the right about an inch.\nFold the tape up then back down to make a corner. Continue placing the tape downward for about an inch or so.\nFold the tape to the left then back to the right to make another fold. Place the tape horizontally until it is directly above the right side of the switch.", "step_imgs": ["https://cdn.instructables.com/FNS/LMX3/JDAK9J1J/FNSLMX3JDAK9J1J.LARGE.jpg", "https://cdn.instructables.com/F5J/OVTP/JDAK9J1M/F5JOVTPJDAK9J1M.LARGE.jpg"], "step_title": "Step 8: Place the Final Piece of Copper Tape"}, {"step": 9, "steps_text": "Make another fold to direct the tape down toward the switch.\nPlace the tape over the right side of the switch, making sure it is not in contact with the other piece of tape when the switch is open.\nTear or cut off any extra tape.", "step_imgs": ["https://cdn.instructables.com/F66/YMRH/JDAK9J1R/F66YMRHJDAK9J1R.LARGE.jpg"], "step_title": "Step 9: Finish the Switch"}, {"step": 10, "steps_text": "Place a Chibitronic sticker over of the eye mark, with the positive side on the bottom strip of copper tape. Press both top and bottom firmly to make sure the connection is solid.\nPlace the battery over the battery mark, positive side up.\nPlace the tab you made with the end of the tape over the battery and hold it down while simultaneously pressing the switch.\nDoes the light work? If not, try the following:\nMake sure the positive side of the light is connected to the copper tape that is touching the positive side of the battery.\nCheck to see if the Chibitronic stickers are in firm contact with the copper tape.\nMake sure the positive side of the battery is touching the copper tape that connects to the positive side of the Chibitronic stickers, and the negative side of the battery is connected to the copper tape that connects to the negative side of the stickers.\nDoes the copper tape have any rips that are breaking the connection?\nCheck to see if there are any places where the positive side of the tape touches the negative side without going through a sticker. (This would be a short circuit.)\nMake sure the conductive edges of the lights are overlapping the copper tape enough to make a solid connection.\nFirmly press around the edges of the lights and anywhere the copper tape overlaps to make sure the connection is good.\nIf all else checks out, then try a new 3V coin cell battery.", "step_imgs": ["https://cdn.instructables.com/FW5/VJKK/JDAK9J1S/FW5VJKKJDAK9J1S.LARGE.jpg", "https://cdn.instructables.com/F8X/P1GY/JDAK9J1W/F8XP1GYJDAK9J1W.LARGE.jpg"], "step_title": "Step 10: Attach the Chibitronic Sticker and Test the Connection"}, {"step": 11, "steps_text": "Take the wave that you are using to hold the whale and turn it so the wrong side is showing.\nPlace an upper and lower glue dot on the right edge of the wrong side and just an upper glue dot on the left edge.\nPlace it right side up on the card, matching the marks you made for placing it.", "step_imgs": ["https://cdn.instructables.com/FH9/M3PC/JDAK9J1Z/FH9M3PCJDAK9J1Z.LARGE.jpg", "https://cdn.instructables.com/F7W/OQMZ/JDAK9J21/F7WOQMZJDAK9J21.LARGE.jpg"], "step_title": "Step 11: Decorate the Card: Part 1"}, {"step": 12, "steps_text": "Place the glue dots for the lower wave in the same manner, and place it on the card so that the bottom of the wave aligns with the bottom edge of the card.\nPlace two or three glue dots on the back of the whale then place it making sure to align your placement marks. Also, make sure that the LED is showing in the eye hole.", "step_imgs": ["https://cdn.instructables.com/FR3/XRLT/JDAK9J22/FR3XRLTJDAK9J22.LARGE.jpg", "https://cdn.instructables.com/FQY/CPVG/JDAK9J24/FQYCPVGJDAK9J24.LARGE.jpg"], "step_title": "Step 12: Decorate the Card: Part 2"}, {"step": 13, "steps_text": "Carefully lift the bottom wave and place the battery on the battery mark between the two pieces of copper tape. Make sure the positive side is up. Use the star-shaped paper clip to hold it in place.\nPlace the \u201cPress Here\u201d sticker over the switch.\nPlace the seagull and the water spout using bits of the glue dots to make sure they don\u2019t show.", "step_imgs": ["https://cdn.instructables.com/F3V/AOOB/JDAK9J25/F3VAOOBJDAK9J25.LARGE.jpg", "https://cdn.instructables.com/FH8/DK1W/JFSIWSM9/FH8DK1WJFSIWSM9.LARGE.jpg", "https://cdn.instructables.com/FAT/A14N/JE4KKCYP/FATA14NJE4KKCYP.LARGE.jpg"], "step_title": "Step 13: Decorate the Card: Part 3"}], "channel": "Electronics"}, {"category": "Technology", "description": "I recently started experimenting with multicolor 3D printing. But as I have a single extruder 3D printer, the task is a bit more difficult than with multiple extruders... So below are my tips to make multicolor filaments easily.\nWhy multicolor printing?\nFirst, to make aesthetic objects.\nSecond, because it can be a nice way to recycle scraps plastic that broke from the spool, or from a finished spool.\nHow to do?\nI have made here a review of the best technics I found on the internet, with the pros and cons of each one. So you are free to choose your favorite method. See step 1.\nAnd I also explain the one I use. Which is the simplest method, and it requires almost no material. See steps 2 to 6.\nBefore to start:\nMaking multicolor filament is fun and it can give great results. But keep in mind that sometimes painting your printed object gives better results! Also, I present here 10 technics found on the internet and the one I am using (so 11 different methods). To my point of view, mine is the easiest and simplest method to use, but it has been many months since I am using it, so I have practiced a lot. You are free to experiment each method to find your favorite.", "title": "DIY Multicolor Fused Filaments: Review & New Technique", "url": "https://www.instructables.com/id/DIY-Multicolor-Fused-Filaments-Review-New-Techniqu/", "steps": [{"step": 1, "steps_text": "Here are my favorite references to print multicolor objects with a simple extruder.\nBy changing the filament during the process:\nManually pause the printer. Here there is no need for references I guess. Just stay close to your printer, then once you want to change the filament, hit pause and change it.\nPros: Choose when to stop the printer.\nCons: Stay close to the printer when printing.\nAutomatically pause the printer. Just add a line in the gcode file to pause the printer. Here are two references using this technique, in step 4 here [ 1 ] and also in this instructable [ 2 ].\nPros: No need to stay close to the printer.\nCons: The printer will not finish the object until you change the filament and press continue.\n\nBy making multicolor filaments:\nUsing Sharpie markers. I guess it is one of the easiest technics to make multicolor prints. It is explained in details here [3]. And here is an instructable dealing with this technics and 2 markers at the same time [4].\nPros: Cheap and simple.\nCons: The colors are attenuated.\nWith a hair straightener. I have seen this technique in this instructable [5].\nPros: Quick and easy.\nCons: Need a hair straightener.\nUsing a homemade fuser [6].\nPros: Quick and easy to fuse.\nCons: Components to essemble (3D printed parts and electronic).\nWith heat-shrink tubing [7].\nPros: Cheap.\nCons: Temperature sensor not easy to place.\nWith a 3D pen [8].\nPros: Simple.\nCons: Need a 3D pen.\nWith a soldering iron [9].\nPros: Simple device.\nCons: Might damage the iron.\nWith another homemade device [10].\nPros: Neat fuse.\nCons: Pieces to assemble.\nOr aluminum foil [11].\nPros: Simple.\nCons: Filaments might bend.\nAnd finally, using a lighter or a candle. [see next steps]\n\nReferences:\n[1] https://www.instructables.com/id/2-Tone-Printing/\n[2] https://www.instructables.com/id/Lab-Centrifuge-F...\n[3] https://makezine.com/projects/make-42/rainbow-ext...\n[4] https://www.instructables.com/id/MultiColor-3D-Prints-With-One-Extruder/\n[5] https://www.instructables.com/id/3D-Filament-Fuse...\n[6] https://www.youtube.com/watch?v=bnTNdcKsNT0\n[7] https://www.youtube.com/watch?v=eJeU9lXiQPE\n[8] https://www.youtube.com/watch?v=Ws1j-G7xFZ8\n[9] https://www.thingiverse.com/thing:977156\n[10] https://www.thingiverse.com/thing:9850\n[11] http://forums.reprap.org/read.php?1,205562", "step_imgs": ["https://cdn.instructables.com/F56/VF2K/JFIIYNQ3/F56VF2KJFIIYNQ3.LARGE.jpg", "https://www.instructables.com/files/deriv/FET/44BN/JFIIX8HF/FET44BNJFIIX8HF.ANIMATED.LARGE.gif"], "step_title": "Step 1: Review"}, {"step": 2, "steps_text": "In the next steps, I'll explain how I am fusing filaments to make multicolor prints. This works with PLA, I never tried with another plastic. The process involves fire, so make sure you're doing it in a safe area. I am not responsible in case of a problem.\nHere is the material required:\nA lighter/a candle\nCutting pliers\nA file\nEventually, the same heat break used on your 3D printer\nThe first step consists of burning the tips of 2 filaments (place them in the flame, and blow on it when they are burning), and to firmly press them against each other. If you do not press firmly, they will bend and it is impossible to fuse them. Then wait many seconds (up to 30 seconds) and try to keep the filaments aligned. When you think they are aligned correctly you can also blow on the fused part to cool it down.", "step_imgs": ["https://cdn.instructables.com/FPB/Q1PW/JF34FWOK/FPBQ1PWJF34FWOK.LARGE.jpg", "https://cdn.instructables.com/F49/F24Y/JFIIUMGW/F49F24YJFIIUMGW.ANIMATED.LARGE.gif"], "step_title": "Step 2: Filament Fusing"}, {"step": 3, "steps_text": "After the fusion between the filaments, a disk of plastic is formed where the filaments have been burnt. With cutting pliers you can remove most of this plastic disk. This will help a lot for the next step.", "step_imgs": ["https://cdn.instructables.com/F78/WCY8/JF34FWOP/F78WCY8JF34FWOP.LARGE.jpg", "https://cdn.instructables.com/FBX/7W15/JFIIUMFP/FBX7W15JFIIUMFP.ANIMATED.LARGE.gif"], "step_title": "Step 3: Rough Smoothing"}, {"step": 4, "steps_text": "Now with a file, it is possible to sand the merged filaments so the fused part is as smooth as possible.\nI have also used a Dremel with a sanding bit, and it is really efficient.\nThis part is the most difficult, but it is also really important because the filaments can get stuck in the hotend if not sanded correctly. Actually, it also applies to most of the other technics reviewed previously even if the authors do not explain it. I'd rather use fused filaments slightly thinner than the regular filaments, to avoid blocking the hotend and the nozzle of my printer.", "step_imgs": ["https://cdn.instructables.com/FH1/5BWF/JF34FWZF/FH15BWFJF34FWZF.LARGE.jpg", "https://cdn.instructables.com/F66/Y35L/JFIIUMEF/F66Y35LJFIIUMEF.ANIMATED.LARGE.gif"], "step_title": "Step 4: Advanced Smoothing"}, {"step": 5, "steps_text": "Before placing this filament inside the printer, it is better to test if it the filament is thin enough. To do so, I have used a heat break and moved the filament through it. If it gets stuck, you have to sand again.", "step_imgs": ["https://cdn.instructables.com/F6F/FBN9/JF34FWV5/F6FFBN9JF34FWV5.LARGE.jpg", "https://cdn.instructables.com/FGP/ZRC3/JFIIUMD9/FGPZRC3JFIIUMD9.ANIMATED.LARGE.gif"], "step_title": "Step 5: Test Before Printing"}, {"step": 6, "steps_text": "Here are some examples of multicolor prints I have made. I am using an MP Select Mini 3D (V1), and I never had any problem with this method.\nIf you have a favorite method to make fused filament please share it in the comments!", "step_imgs": ["https://cdn.instructables.com/FLN/JHML/JFSITI6X/FLNJHMLJFSITI6X.LARGE.jpg", "https://cdn.instructables.com/FU2/UXXX/JFSITHOB/FU2UXXXJFSITHOB.LARGE.jpg", "https://cdn.instructables.com/F8S/G6C9/JFSITHR2/F8SG6C9JFSITHR2.LARGE.jpg", "https://cdn.instructables.com/F7H/RS6N/JFSITHTN/F7HRS6NJFSITHTN.LARGE.jpg"], "step_title": "Step 6: Have Fun!"}], "channel": "3D Printing"}, {"category": "Technology", "description": "A Short Background Story\nMy mother has been going through a rough time health wise recently. Being her son I am used to her caring for me not the other way around. So I did what I can do best, I built something. I present to you the \"Guardian-Angel-o-Meter\". A device that uses innovativ technology to sense the presence of a guardian angel. Every time an Angel is detected the red LED blinks. One blink per angel, even if he/she stays around, the device will only blink upon a new arrival (using Angel-edge-detection). So if u ever find yourself in a spot where you feel lost or even hopeless, simply flick a switch and you'll see there's lot's of angels looking after you.\nEnough of the advertising! Of course I did not invent something that proves the existance of angels or even detects anything really. I simply built a little device that randomly blinks ever so often. However I belive that imagination is a very powerfull tool. The idea of something being around that protects us is, quite frankly, very calming. We could probably start a very long discussion about this topic but let's dive right into the building process and I'll show you how you can build your very own GA-o-meter.", "title": "The Guardian-Angel-o-Meter", "url": "https://www.instructables.com/id/The-Guardian-Angel-O-Meter/", "steps": [{"step": 1, "steps_text": "As I already mentioned in the introduction, the guardian-angel-o-meter simply lights up an LED randomly in between a defined time interval. I am using an ATTINY 45 for this but you could really use any microcontroller that has a small enough footprint.\nIn addition you'll need a small button cell battery holder, a switch, a red LED (or whatever color you prefer) and a current limiting resistor for the LED. You will also need something to mount it all on. I used a small piece of perf board and covered to bottom with a piece of plywood, but more on that later.", "step_imgs": [], "step_title": "Step 1: Gathering the Parts"}, {"step": 2, "steps_text": "The heart of the circuit is the attiny45. It's fairly cheap and can be easily picked up on ebay or amazon. As I already said above, u can use any microcontroller you want for this but since I still had a couple of the tinys at home I went for this route. I used an Arduino UNO as an isp to programm the attiny. I will not go into detail about how this is acomplished, since there are already quite a few great tutorials about this out there. One of which is this. I built myself a small shield a couple fo years back which makes programming just more convenient but you could totally get away with a breadboard and a couple of jumpers\nThe Code:\nThe code of this program is very simple. The basic idea is that a random number, between two boundaries, will be calculated. This number defines the time the led is turned off. Then it\u2019s switched on for a specific amount of time and switched off for a random duration again. Since the random() function, provided by the Arduino ide, simply cycles through a very long sequence of different numbers (making it seem random, hence the name), the blinking pattern after each reboot would always be the same. To prevent that the function randomSeed() can be used. It reads the value on any analog input and uses it to set the starting point of the sequence. Since there will always be noise and electromagnetic interference around, it is highly unlikely that the reading on this pin will very be the same two times in a row.\n\n#define LED_PIN 0\n#define INPUT_PIN 1\n#define TIME_ON 1000\n#define LOWER_LIMIT 500\n#define UPPER_LIMIT 30000\n// --------------------------------------------------------------------------------------------------------------------------\nlong rand_off;\nvoid setup()\n{\nrandomSeed (analogRead (INPUT_PIN));\npinMode(LED_PIN, OUTPUT);\n}\nvoid loop()\n{\nrand_off = random (LOWER_LIMIT, UPPER_LIMIT);\ndigitalWrite(LED_PIN, LOW);\ndelay(rand_off);\ndigitalWrite(LED_PIN, HIGH);\ndelay(TIME_ON);\n}", "step_imgs": [], "step_title": "Step 2: Programming the Attiny"}, {"step": 3, "steps_text": "This is actually the second version I am building of the GA-O-Meter. The one my mom has does not include any current limitation for the LED. It dawned on me only after I decided to write this 'ible that it shouldn't work the way I built it. Since the attiny's maximum output current is 40mA and the diode only lives up to 25 ish it should by now have fried the LED. I can only assume that either the tiny is not outputting as much current as stated or I got lucky with my LED. Anyhow I decided to be a good example and build it the correct way.\nIf you wish to fully understand the reasons for needing to limit the current, google is your friend. Ther's a ton of information about that already out there. In short though, the characteristic of a diode follows an exponential function. Meaning a small change in voltage represents a big change in current. In addition to that a diode has a positiv temperature coefficient. Meaning the higher the temperature gets the more current will flow through it. So if you simply attach the diode to a constant voltage source the current will keep rising (because the LED get's warmer and warmer) until it finally releases its magic white smoke (meaning it's dead). This is why LED's always need to be driven by a constant current source or at least need some sort of current limitation. The easiest way to acomplish this is by using a resistor. The idea is that by having a constant voltage the current through the resistor will be set according to Ohm's law (I=U/R). Firstly we will need to set a bias point for the LED (0,8 V should work). Since we know that the attiny will output a maximum of 3,3 V we can now calculate the voltage we want to drop on the resistor.\n( oh how I wish instructables had LaTex support...)\nUsing Ohms law we can now caluclate the needed resistance. The current through the LED depends on the LED u're using. Usually 10 - 20 mA should be maximum thought.\nNow before soldering everything together it is advisable to try the circuit and see if everything works fine. If it does, like it did in my case, move on.", "step_imgs": [], "step_title": "Step 3: Join the Resistance!"}, {"step": 4, "steps_text": "The circuit is quite simply. Take your time laying out the components in a way that is both pleasent to look at and also practical from a soldering point of view. Make sure pins that are supposed to be connected together aren't too far away from each other, that'll just make your life much simpler later on.\nI opted for the following layout:\nSoldering the circuit is pretty straight forward. Take your time, make sure there are no shorts and everything is well secured. I had to glue on the switch, because its legs were too thick for the perf board to fit. I am certainly not proud about the soldering job I did, but it works and no one\u2019s ever going to see it!", "step_imgs": [], "step_title": "Step 4: Creating the Circuit"}, {"step": 5, "steps_text": "At this point the GA-o-Meter is working and ready for use. However, I decided to kick it up a notch and add a fine looking base to it. I used a small piece of plywood I had lying around.\nIn order for the perf board to sit flush with the wood I had to cut a recess. So I took out my chisel and carving knife and after 20 minutes or so it fit like a glove.\nI used two component adhesive to secure the perf board to the wood and let it dry overnight. After it was completely cured all there was left to do was throw some protective oil or wax in my case on the wood and the GA-o-Meter was done.", "step_imgs": [], "step_title": "Step 5: Adding the Base"}, {"step": 6, "steps_text": "So this is how you can build your very own Guardian-Angel-o-Meter. It is a very simple build and to some it may seem a little childish. But it serves perfectly as a gift to remind a special someone that they're never alone and that there are people, or maybe angels, looking after them, caring and thinking about them.", "step_imgs": [], "step_title": "Step 6: The Final Result"}], "channel": "Electronics"}, {"category": "Technology", "description": "You've all probably had a chance to do that classic high-school experiment: pop bottle rockets. You've probably taped on some fins, a paper nosecone, and presto! You launch a \"rocket\" that is loads of fun- and watched it fall down from the sky.\nWhy stop there?\nHere, I'll show you the basics of building the next-level water rocket that can be the basis for many interesting projects. The best part is that most of the things required are either cheap or things you can find at home. If you want to design your own rocket, I'll help you plan and design. If you're just looking for a step-by-step project, I've got that as well.\nSo let's get started!\nBy the way, this is my first instructable, so if you feel that something's not done right, feel free to add a comment. Your feedback is appreciated!\nPlease keep in mind: My goal here is not to show you how to build one project. I am trying to help you start thinking and designing water rockets on your own, using your own ideas. I do present a project build, but I encourage you to alter the design and functionality as you see fit.\nFinally, if you like it, please vote for it in any contest it may be in! Thanks!", "title": "Arduino-controlled Water Rockets", "url": "https://www.instructables.com/id/Arduino-controlled-Water-Rockets/", "steps": [{"step": 1, "steps_text": "Now, this is rocket science, but that doesn't mean it's that difficult. Here are a few basic terms I'll be using:\nApogee- highest point on the parabola described by the rocket's flight, or, in other words, the point at which the rocket is farthest from the ground,\nCp- center of pressure,\nCg- center of gravity.\nEverything else is relatively self-explanatory.\nKey points to remember during design and construction (there may be more):\n1. Drag- the more drag on a rocket, the lower it's apogee. Therefore, minimize drag.\n2. Thrust- the more power the rocket produces, the higher it will go. Therefore, increase thrust.\n3. Stability- the rocket's Cp must be behind it's Cg- this will make the rocket stable and therefore increase maximum altitude.\n4. Mass- the lighter the rocket, the higher it goes. Note that decreasing your rocket's weight to almost zero would decrease it's performance- there is an ideal mass to volume ratio that enables best performance.\nThere is this effect in theory and in the real world that prevents us from doing everything at maximum potential. I.e. a bicycle cannot have a gear chain ratio that is oriented both for speed and strength at the same time. This type of trade off occurs here as well- we cannot increase thrust without increasing drag. The faster the air moves, the greater the volume of that air is (that interacts with the rocket) over a given time period.\nOur goal is to design the highest-flying rocket with additional features that makes it more interesting than a simple 2L bottle rocket- so what does that involve?", "step_imgs": ["https://cdn.instructables.com/F0O/3UNN/J8KGZNDR/F0O3UNNJ8KGZNDR.LARGE.jpg", "https://cdn.instructables.com/FBS/1EY0/J8KGZNJX/FBS1EY0J8KGZNJX.LARGE.gif"], "step_title": "Step 1: A Little Lecture on Rocket Science"}, {"step": 2, "steps_text": "The issue with the simple bottle rocket is that we can not do anything with it other than launch it and watch it fall back down. I don't know about you, but this gets somewhat boring. What if we could watch the flight from the rocket? A digital camera should do the trick.\nBut- my camera costs a lot. I don't want it wrecked , so I'll need some sort of recovery mechanism. A parachute, maybe?\nWhat if I don't want to get wet while launching the rocket? It would be nice to have a timer countdown device.\nThese are a few points that will be addressed during construction. If you have ideas, write them down. It's never worse when you forget a brilliant idea that's crucial to your project's success. Asking questions like this is fundamental to developing a functional product.", "step_imgs": ["https://cdn.instructables.com/FGS/HSWS/J8KGZOBG/FGSHSWSJ8KGZOBG.LARGE.jpg"], "step_title": "Step 2: To Be Advanced or Not - That Is the Question!"}, {"step": 3, "steps_text": "Now let's decide what we should do. Here's a synopsis of possible ventures:\nParachute recovery\nInvolves deploying a small parachute to slow down the descent speed of a rocket. Generally uses a pyrotechnic charge in model rockets but we will use a spring-loaded mechanism with a servo latch device.\nVideotaping\nOnly do this if you are sure that your recovery mechanism works all the time and with no faults. Cameras are expensive. I will take no responsibility for your misfortunes.\nTimer for launch\nPretty simple, I think we'll do it to help time the parachute deployment as well. Involves an Arduino and 7-segment display, as well as a few push buttons and LEDs.\nThese are all I'll discuss in depth, but here are a few for you to try out. Most of these I've used in my project, and I'll provide ideas on how to do then as well:\n-Accelerometer-based parachute deployment- an accelerometer can be used to calculated velocity, acceleration, and may be used for parachute deployment\n-Barometric altimeter with data logger- using a cheap altimeter, you can create a time versus altitude graph, as well as measure air temperature (although this depends on the altimeter breakout board)\n-Increase the volume of your water rocket- I'll actually discuss this in detail later on, but essentially one can splice bottles together to create larger pressure chambers. This helps to increase altitude, obviously.\n-Retrograde recovery device- this is probably one of the most difficult projects involving water bottle rockets. the idea is to fire an air/ air+water mixture downwards just before 'touchdown' to increase the duration for which the rocket decelerates. If you get this to work, please comment! It would be great to know.\n-Any other interesting rocket-related device- I've seen rockets with payload chambers, boosters, staging mechanisms, nozzles, etc. The sky is the limit!", "step_imgs": [], "step_title": "Step 3: Options"}, {"step": 4, "steps_text": "It's never a good idea to run out and buy materials without forethought, even be they as cheap as here. I went through this situation while working on my Technological Design Culminating project, which, incidentally, is shown above.\nDesign your rocket based on what you're capable of. The first image depicts my plan, whereas the second is the result. None of the larger rockets ever flew due to leakage. The final result was a small yet effective device that held the school record for altitude at 90m @65psi (pounds per square inch, a measurement of pressure).\nThere are certain things that are generic in terms of basic construction. You will want a rounded nosecone, as this is the shape that encounters the least air resistance. Fins should be placed as far back as possible. Try to limit extra weight and size by placing everything in a very compact layout.", "step_imgs": ["https://cdn.instructables.com/FQQ/MJDX/J8KGZP5C/FQQMJDXJ8KGZP5C.LARGE.jpg", "https://cdn.instructables.com/FCW/HL50/J8KGZP5Z/FCWHL50J8KGZP5Z.LARGE.jpg"], "step_title": "Step 4: Design"}, {"step": 5, "steps_text": "This is the rocket I'll be describing in-detail. It uses two 1-liter bottles, one for the pressure chamber and one for the nosecone and payload. It boasts of a programmable timer function to deploy the parachute at any desired time after liftoff, a launch-detect mechanism, a sevenisegment led display for programming, a servo motor deployment system and an eighteen inch parachute. It is used with a simple launcher, and does not need nozzles of any kind. Best of all- it has the capacity to carry a GoPro Hero 5 camera, or any other camera.\nThe total cost to build this was under 5$. :)\nAlso, please read through to the end of this Instructable before buying anything, as alternatives are presented that may be more easily accessible to you than the initial project.", "step_imgs": ["https://cdn.instructables.com/F8X/P8XK/J8QG8OQL/F8XP8XKJ8QG8OQL.LARGE.jpg", "https://cdn.instructables.com/FEI/G9A2/J8KGZLCH/FEIG9A2J8KGZLCH.LARGE.jpg", "https://cdn.instructables.com/FNT/H4UQ/J8QG8QGX/FNTH4UQJ8QG8QGX.LARGE.jpg"], "step_title": "Step 5: Project Build- Delta-V Water Rocket"}, {"step": 6, "steps_text": "These are the materials you'll need to build the physical structure of the rocket (this does not include electronics of any kind):\n-1-liter bottles (x4) Try to get the ones that are very elongated and have smooth walls, and smooth, -flowing curves toward the bottle's neck. You'll only need three, but get an extra just in case. Buy a drink you actually like- so that you won't waste resources. That way, you'll be a bit more eco-friendly.\n-Corrugated plastic board (absolute minimum 50x50cm) Again, get enough so you can experiment and rebuild if something doesn't work. Most schools have scraps of this stuff lying around, and if you're not in school then look in the dollar store. The stuff \"For Sale\" signs are made out of is fine.\n-Ping-pong ball (x1) For the nosecone. If you don't have one, then look in any sports store. If you do have one, make sure nobody sees you take it.\n-Rubber bands (as many as you have, minimum 2)\n-Thick color paper (a few sheets)\n-Transparent tape, i.e. Scotch (one should be enough) Any tape will do, but transparent tape looks better. The source is the dollar store.\n-Hot glue sticks (as much as you need) with glue gun (x1) It's easier to glue some things together than tape them, especially where there's no chance of them getting wet. Glue guns may be bought from Mastercraft, Lowe's, Canadian Tire, Hobby shops, etc. Preferably get the mini version as the full-size ones tend to melt the plastic too easily. Also, don't forget glue sticks (it happens often, trust me)\n-X-acto knife, or any other hobby knife (x1) For cutting the corrugated plastic. Any Hobby shop will provide you with a wide variety of knives.\n-Sharp pair of scissors (x1)\n-Ruler\n-Pencil, eraser", "step_imgs": ["https://cdn.instructables.com/FI6/8F1R/J8OR3DST/FI68F1RJ8OR3DST.LARGE.jpg", "https://cdn.instructables.com/FW0/LJET/J8OR3DTM/FW0LJETJ8OR3DTM.LARGE.jpg", "https://cdn.instructables.com/FCL/95HI/J8OR3DSW/FCL95HIJ8OR3DSW.LARGE.jpg", "https://cdn.instructables.com/FW2/UA8X/J8OR3DTN/FW2UA8XJ8OR3DTN.LARGE.jpg", "https://cdn.instructables.com/FJU/AEMA/J8OR3DTL/FJUAEMAJ8OR3DTL.LARGE.jpg", "https://cdn.instructables.com/F9M/NB6R/J8OR3DSS/F9MNB6RJ8OR3DSS.LARGE.jpg"], "step_title": "Step 6: Materials Required, As Well As Relevant Tools"}, {"step": 7, "steps_text": "This is what you will need to buy to build this prototype, if not available to you already:\n-Arduino Nano Rev3.0 or equivalent (x1) This is the control center of your rocket.\nhttp://www.ebay.ca/itm/Nano-V3-0-Mini-USB-ATmega32...\n-Generic 7-segment LED display, either common anode or common cathode (x1) Part of the user interface.\nhttp://www.ebay.ca/itm/5PCS-0-56-7-Segment-Red-LED...\n-Generic pushbuttons, SPST tactile type (min. 2) User interface.\n-Slide switch, generic (through hole, breadboard pin spacing @ 1/10\")\n-Tilt switch, generic (x1) Used to detect acceleration of rocket at liftoff.\nhttp://www.ebay.ca/itm/10Pcs-Metal-Ball-Tilt-Shaki...\n-Generic jumper wires, 20cm lengths (male to male or male to female, read step 9 before deciding)\n-Male header pins, enough for your Arduino (read step 9)\n-LED assortment\n-Buzzer, generic\n- Mini servo motor with arm(x1) http://www.ebay.ca/itm/POP-9\nG-SG90-Micro-Servo-mot...\n-At least 4 220ohm resistors rated 1/4W\n-Perforated board, copper plated 5x7 cm (x2)\nhttp://www.ebay.ca/itm/Carte-Prototypage-Simple-fa...\n-Soldering equipment (includes soldering iron, lead-free solder, stand)\nhttps://www.creatroninc.com/product/30w-general-pu... -Iron\nhttps://www.creatroninc.com/product/soldering-iron... - Stand\nhttps://www.creatroninc.com/product/63-37-lead-sol...- Solder\nDon NOT buy equipment and tools from eBay or amazon- cheaply made tools pose a greater hazard than quality-made tools. Also, non-eBay tools tend to last longer, so you won't have to buy a new soldering stand every year, for example. It's OK to buy electronics from eBay (most of the time), especially if it's generic- but expect 2-5 weeks delivery from most Asian sources.\nThe Arduino Nano can be bought from ebay as well, but I recommend purchasing one from a website such as sparkfun or robotshop as the quality is guaranteed in the two latter cases.", "step_imgs": ["https://cdn.instructables.com/FGU/I8NG/J8OR3EAM/FGUI8NGJ8OR3EAM.LARGE.jpg", "https://cdn.instructables.com/FVN/1HJR/J8OR3EAJ/FVN1HJRJ8OR3EAJ.LARGE.jpg", "https://cdn.instructables.com/F5N/XAJT/J8OR3ECO/F5NXAJTJ8OR3ECO.LARGE.jpg"], "step_title": "Step 7: Electronics Stuff and Relevant Tools"}, {"step": 8, "steps_text": "Now, we'll start construction of the rocket body.\nStart by removing labels and bottle caps from the bottles. If you have difficulty in doing so, rinsing under warm water helps. If the label is really tight, or made of plastic, then you don't need to take it off. Then, measure the diameter of the bottle and record it.\nWith an X-acto knife, cut off the top of one of the bottles around 1cm from the start of the neck. Also, cut off the bottom of the same bottle around 25 cm from the top, so you end up with a cylinder with one tapered edge, open at both ends. The smaller end should measure around 2.5cm in diameter. Please keep the cut-off section- you'll need it.\nCut away half of the ping-pong ball, and carefully glue it to the interior of the tapered end of the bottle, flush to the cut edge . You want to end up with a nose cone that has the profile of a parabola. It may take a few attempts to secure the ping pong ball, so it does not fall off. It helps to hold the shell upside down while the glue cools. Once the glue has set, move all of what you just made to the side, but remember not to throw it out by accident", "step_imgs": [], "step_title": "Step 8: Rocket Structure, Part 1- Shell"}, {"step": 9, "steps_text": "You will now need to build a parachute and control systems chamber, which houses the Arduino, electronics modules and the servo, as well as the parachute itself. Please note that I used cardboard, a material that has almost identical structural characteristics to corrugated plastic, because I did not have the plastic available to myself at that moment. You should be able to follow all the steps in the exact same way. In fact, you can use cardboard as well, but if it gets wet you'll have a problem.\nStart by taking your piece of corrugated plastic and cutting out 2 identical circles (for lack of better word) with an X-acto knife (1). The circles should have the same diameter as the bottle, hopefully you followed instructions and recorded the value earlier.\nCut out a rectangle with a length of 10cm and a width equal to your bottle diameter (2). Score the rectangle along its middle in such a way that the knife only cuts through part of the material (3). This will let you bend the plastic without having it snap into two pieces.\nLay the rectangle before you in such a way that it bends vertically inwards relative to you (4). On the right half of the bent plastic, cut out another smaller rectangle in the top middle area- the exact location does not matter (5). In most cases, the dimensions are somewhere around 1.5 x 2.5 cm for the micro servo models- but measure your servo to be sure, and use those dimensions.\nTake one of the circles and lay it flat. Hot glue on the bent rectangle in such a way that both bottom corners are resting on the circumference of the circle (6). You should ensure that the whole bent rectangle is flush with the circle.\nGlue on the top circle (7) making sure the same conditions are satisfied as with the bottom one. Using the thick color paper, reinforce the joints by cutting out L-shaped brackets and glueing them on. You should end up with something that resembles the assembly in picture 8.", "step_imgs": ["https://cdn.instructables.com/FUM/NSX5/J8UMY9T1/FUMNSX5J8UMY9T1.LARGE.jpg", "https://cdn.instructables.com/F0I/HUJ4/J8QGDEOD/F0IHUJ4J8QGDEOD.LARGE.jpg", "https://cdn.instructables.com/FOL/CL5V/J8QGDEQR/FOLCL5VJ8QGDEQR.LARGE.jpg", "https://cdn.instructables.com/FI2/CJJU/J8QGDEP4/FI2CJJUJ8QGDEP4.LARGE.jpg", "https://cdn.instructables.com/FJW/785S/J8QGDEQ1/FJW785SJ8QGDEQ1.LARGE.jpg", "https://cdn.instructables.com/FUQ/BJQX/J8QGDEOE/FUQBJQXJ8QGDEOE.LARGE.jpg", "https://cdn.instructables.com/F8P/6TYB/J8QGDEQQ/F8P6TYBJ8QGDEQQ.LARGE.jpg", "https://cdn.instructables.com/F5S/7V23/J8QGDF0D/F5S7V23J8QGDF0D.LARGE.jpg", "https://cdn.instructables.com/FZ6/SSUI/J8QGDF0E/FZ6SSUIJ8QGDF0E.LARGE.jpg", "https://cdn.instructables.com/FW6/A510/J8QGDF0C/FW6A510J8QGDF0C.LARGE.jpg", "https://cdn.instructables.com/F4A/UCDC/J8QGDEZ8/F4AUCDCJ8QGDEZ8.LARGE.jpg", "https://cdn.instructables.com/FE7/RO9S/J8QGDF0P/FE7RO9SJ8QGDF0P.LARGE.jpg"], "step_title": "Step 9: Rocket Structure, Part 2- Parachute Chamber"}, {"step": 10, "steps_text": "Build the electrical circuit shown in the fritzing diagram. Start by soldering the perforated boards. I recommend soldering the components in a very compact layout, as you will need to fit them inside the bottle rocket. Refer to the three photographs of the modules for approximate layout and size planning. Please do not attempt to follow all connections- it's much easier to follow the diagram...\nOnce the modules are complete, you can start to finish the circuit by interconnecting the modules where necessary. When doing this project, I soldered male header pins onto the Arduino and used female to male jumper wires, so I could plug in the connections. I did this because I didn't want to unsolder all the wires once the project was done- I suggest you do the same, especially if your Arduino came with header pins. Otherwise, you can buy them separately or omit them entirely.\nYou'll notice that I didn't build the exact design that I've provided a fritzing diagram for, the reason being that It's not the most compact design.\nEnsure that everything works before you put it in the rocket- it's a pain to have to take everything apart (trust me, I've done this the first 3 times in a row).", "step_imgs": ["https://cdn.instructables.com/F52/KZYD/J8QG8QU4/F52KZYDJ8QG8QU4.LARGE.jpg", "https://cdn.instructables.com/FN0/WU95/J8OR3XEX/FN0WU95J8OR3XEX.LARGE.jpg", "https://cdn.instructables.com/FQ3/B6J4/J8OR3TW4/FQ3B6J4J8OR3TW4.LARGE.jpg", "https://cdn.instructables.com/F8U/UAMA/J8OR3XL0/F8UUAMAJ8OR3XL0.LARGE.jpg", "https://cdn.instructables.com/FNT/H1C1/J8OR3XHX/FNTH1C1J8OR3XHX.LARGE.jpg"], "step_title": "Step 10: Electronics Work"}, {"step": 11, "steps_text": "Now you'll need to put it all together-and first, position the servo motor in the cavity you've cut out, by inserting it in from the outside. Hot glue it into place.\nInstall all the electronics in the corrugated plastic structure you built earlier. You can hot glue the perfboards into place, or tape them. Ensure you have space for the 9V battery, and don't forget to plug it in. You should, with a well-built circuit, have enough space for everything.\nSlide on the top shell, with the nosecone, and, with a permanent marker, draw out the contours of the parachute chamber and a square about 1'x1' around the servo. Take off the shell and cut those sections out. The servo cutout should look similar to (1). Put the shell back on, and trim if necessary. Make sure the nosecone is still removable for access to the servo.\nTake some of your leftover material, and cut out a flap about 2 cm longer and wider than the cutout for the parachute chamber. Tape it in place 1 cm back from the chamber, so that it can fully cover the opening when closed. Cut out another flap about the same length but a little thinner and tape it inside the parachute chamber, so it springs out naturally, but can be depressed inwards. This is the ejection plate. See the diagram. Cut a small hole at the swinging end of the cover and thread a rubber band through it. This will go to the servo arm later on.\nCut out holes for access to all the switches for control. You can do this with an x-acto knife.", "step_imgs": ["https://cdn.instructables.com/FWO/92FJ/JAWU84MA/FWO92FJJAWU84MA.LARGE.jpg", "https://cdn.instructables.com/FGM/GDEG/JAWU8EH5/FGMGDEGJAWU8EH5.LARGE.jpg"], "step_title": "Step 11: Finishing It Off"}, {"step": 12, "steps_text": "Fins can be any shape you want, at this level. You can make them out of anything you want, as long as it isn't sharp and won't shatter, and it shouldn't be excessively heavy. Generally I use corrugated plastic for the fins in a simple rectangular form, maybe a little tapered from the top. I like to align it so that air passes right through it, i .e. corrugations are parallel to the rocket body. I hot glue paper brackets to the sides, then hot glue and tape the brackets to the body of the rocket.\nTry to use three fins, four at most. Make sure they are evenly spread out along the circumference of the body, and mount them as far back as possible. This will make your rocket fly straighter.\nIf you want your rocket to fly without spinning, the fins must be absolutely straight. Even a slight tilt on one of them will spin your rocket.\nI have attached a link to a good template for 3 and 4-fin construction:\nhttp://hortondeakins.com/survivors/wp-content/uplo...", "step_imgs": ["https://cdn.instructables.com/FMW/F3U8/JFX0GUKT/FMWF3U8JFX0GUKT.LARGE.jpg"], "step_title": "Step 12: Fins"}, {"step": 13, "steps_text": "Parachutes vary widely. The standard parachute for a model rocket is an octagon with a small hole in the middle, and one hole at each corner by which cables are attached (or strings). These cables lead to a common anchor on the rocket body. In my case I just attached to strings to the rocket with a simple noose around the body, but you can be more elegant if you wish.\nGenerally you have to fold parachutes so that they fit in the chamber. I do this by taking the middle in one hand, bringing together all of the ends in the other hand, then rolling up the parachute. Then I wrap it in the parachute cord itself until there is about 10 cm of free cord, so that the parachute can actually be pushed out of the chamber.", "step_imgs": ["https://cdn.instructables.com/FTH/SE80/JAWU888K/FTHSE80JAWU888K.LARGE.jpg"], "step_title": "Step 13: Parachute"}, {"step": 14, "steps_text": "The code is attached below. Code is explained in the script. If any questions arise, I'll be happy to answer them in the comments. Please keep in mind that I wrote this code a long time ago and it's not the most efficient way to get the job done- but it works. I'll be updating it when I get the chance.", "step_imgs": [], "step_title": "Step 14: Code"}, {"step": 15, "steps_text": "Obviously, you will need a launcher. I plan to make another instructable devoted to that subject. The pictures show the launchers we used; this first is the school one and the second is a gardena launcher. I suggest you visit www.aircommandrockets.com as they have the best advice on building a launcher, and about water rockets in general.\nOtherwise, many retail stores sell simple rocket launchers that will do the job.\nThe program has embedded notes that explain the launch options and procedure. There are two modes, launch triggered and timer, each of which has a programmable parachute deploy delay.\nBefore you do anything, you need to test the deployment mechanism. Follow the guidelines in the code. If the circuit doesn't work, follow standard troubleshooting guidelines to fix the problem. Check to make sure the servo successfully unlatches the chamber cover, and that the parachute is hurled out enough to start unwinding. It would help to do a drop test to make sure your parachute is functional.\nFill the rocket to 1/3 it's total capacity- this is the most efficient air-to-water ratio- and set it on your launchpad. Do not pressurize above 80psi under any circumstances. Ideally, you would conduct burst tests on the pressure chamber you are using, but I think that in this case it is unnecessary. I claim no legal responsibility if you injure yourself or cause property damage, and that will not happen if you follow what I have just told you.\nFinally, I do not recommend trying to achieve anything other than maximum altitude, as this is by far the safest and the rocket is more likely to come back intact. Generally you want to keep the launcher pointing straight up, but in very strong winds it's a good idea to tilt it into the wind a little bit. If you want, a launch angle of 45 degrees to the ground will give you maximum distance lengthwise, but there are few practical applications that would use that sort of thing. As well, the parachute is likely to get ripped off during flight (otherwise it would be deployed at a near-motionless moment, at apogee, if launched vertically). Launching a rocket, especially with fins and low coefficient of drag, is extremely dangerous. Only do this if you have cleared the range and are sure that it won't hit anyone.", "step_imgs": ["https://cdn.instructables.com/FJW/OLXB/JEIUZIIV/FJWOLXBJEIUZIIV.LARGE.jpg"], "step_title": "Step 15: Launch"}, {"step": 16, "steps_text": "The above one is the project build launch. Scroll to 1:33 to see the launch. It may appear to not have deployed anything (as the descent speed was rather fast) but the wind was strong so I was using a small parachute. Below is video from an earlier prototype.\nhttps://drive.google.com/file/d/0B75LoR3MZ3_EdUxvR...", "step_imgs": [], "step_title": "Step 16: Launch Videos"}, {"step": 17, "steps_text": "I've already mentioned that my goal here was to get you started with rockets. Here's what I consider to be the next step(s) if you wish to attempt them:\nAdd a camera- If you want some interesting photos/videos, and you are very confident in your rocket (or if you have a huge budget) you can go ahead and add a camera. I recommend a GoPro for it's small size and durability.\nAdd a barometric altimeter- On eBay you can find barometric altimeters for very cheap. These use air pressure (in fact they are just air pressure sensors) to return values that can be used to calculate air pressure (air pressure decreases with altitude). You can use this to deploy your parachute at a better moment (when altitude starts to drop).\nAdd a data logger- Adding a data logger (easiest would be the use of an SD card module to interface with Arduino) will allow you to store a lot of data, such as temperature, altitude, etc. over time, from sensors. Later you can call the variables (in the code) and display them in a graph of some sort.\nIncrease rocket capacity- You can splice two bottles together, and chain these splices with one another to increase the volume of your rocket and consequentially it's maximum altitude.\nIncrease maximum pressure- You can cover your pressure chambers with fiberglass, which will help cope with additional pressure. This can also be done by putting a second layer of the same bottle over top, then wrapping everything in electrical tape (as in the very first photo). I don't recommend this because this means you will need a remote launching system, as higher pressures mean more dangerous explosions, if your rocket does burst. This can be quite dangerous and will be done at your own risk. Additionally, this should only be attempted after you have fully acquainted yourself with the subject and conducted extensive burst tests in a safe environment.\nDifferent recovery device- We used the most popular recovery device there is- the parachute. What about a glider? Or a retrograde rocket right before impact, like the Spacex Falcon 9? According to my research, no one has yet to build a water rocket with a working retrograde recovery system\nAdd boosters- This does require additional outlets on the launchpad, but will increase your final velocity.\nAdd a second stage- Again, you are increasing your final velocity by giving the first stage a boost.\nReach space (330,000ft)- Although this cannot be done with 2L pop bottles, why not think about it? If you have a lot of money, or find a way to get funding, that would be a step in making space travel more accessible to society (cost of fuel = cost of water). I am envisioning a lightweight aluminium chamber that could withstand in excess of 100,000 psi, at a dry weight of 30 kg. This, according to my calculations, would reach an altitude of 110,000ft, or roughly one-third of the way to space. Sure, it might be expensive, but it would be interesting to try, if you had the time and money. It might even become mainstream later on.\nConduct experiments in microgravity- If you've ever wondered what happens to something at 0-G, then you can use your rocket to test a theory out, as there is a moment of weightlessness at apogee.\nEven further... Please leave a comment if you have ideas and I'll add it here if it's suitable. The more the better!", "step_imgs": [], "step_title": "Step 17: Improvements"}, {"step": 18, "steps_text": "The following sites were absolutely instrumental for me in this project:\nhttp://www.aircommandrockets.com/ - In my opinion, the best site about this topic. They have covered everything. Their highest-flying rocket has gone up to 1752ft.\nhttp://www.uswaterrockets.com/ - Also a very helpful site. Good information on parachutes.\nhttp://cjh.polyplex.org/rockets/simulation/ - Water rocket flight simulator. Very useful.\nWhen we did this project, we made a not-so-professional website- you can see it here:\nhttps://sites.google.com/tdsb.on.ca/waterrockets/h...\nThis site documents the whole of our project.\nOnce again, feel free to comment below with any questions or concerns. And if you like this instructable, please vote for it! Thank you very much.", "step_imgs": [], "step_title": "Step 18: Acknowledgements"}, {"step": 19, "steps_text": "April 10th, 2018- Completely finished microcontroller-free version of a rocket control system. Uses two 555 timers for a) delay after launch, b) length of motor arm movement. Uses a DC motor instead of a servo. Launch-activated, by either a g-switch or two metal contacts closing a circuit after launch. Loosely based on Air Command Rocket's Servo timer v1.0. I have tested this system to some extent and think this is a simple, low-cost way to build a parachute delay timer, but does require some soldering. The circuit diagram is found at http://www.aircommandrockets.com/DeployTimer1_1.h..\nJune 7th, 2018- Started drawing up plans\nFebruary 26th, 2019- Will be developing the world's first VTVL water rocket (retropropulsive landing) with active thrust vectoring and grid fin navigation. Be sure to stay tuned for this event, closer to the upcoming summer.", "step_imgs": ["https://cdn.instructables.com/FR4/F6OV/JFX0AYSQ/FR4F6OVJFX0AYSQ.LARGE.jpg"], "step_title": "Step 19: Updates of Interest"}], "channel": "Arduino"}, {"category": "Technology", "description": "(If you like my instructable, please vote for it in the Pro Tips Challenge. And I want to say \"thanks\" to all the real supporters I had during these 25 years of experience creating toys from trash. Thanks!)\nHello. My name is Mario and I make artistic toys using plastic trash. From small vibrobots to big cyborg armors, I transform broken toys, bottle caps, dead computers and damaged appliances into creations inspired by my favorite comics, movies, games and commercial toys. It started as a hobby, but then it invaded all topics of my life and the chaos began. Sometimes it felt like a curse. Even my family asked me to focus my energy in improving my \"serious\" professional career and leave my passion just as a hobby; or it would take me nowhere.\nBut this \"hobby\" has taken me from Colombia to San Francisco and Azerbaijan. Thanks to my creations, I met the love of my life who later would become my wife. And thanks to my expertise in building toys using ordinary materials, now I'm technical director in a STEM education center for kids. \"Nowhere\" looks like a very interesting place, doesn't it?\nAnd now I want to share with you some of the things I learned in 25 years of experience in taking some men's trash and making it this man's treasure.\nI'm taking as a model this new toy I created. It's a Mech that spins its machine gun and is a vibrobot at the same time. I will not show the step by step of how to build it because is very hard to replicate the same configuration of components due their diverse origins. However, the idea is to give you some ideas so you can build your very own creation, unique in the world. Also, I will include some links to some of my previous works and creations of other makers and artists.", "title": "Making Quality Toys From Plastic Trash: a Beginner's Guide", "url": "https://www.instructables.com/id/Making-Quality-Toys-From-Plastic-Trash-a-Beginners/", "steps": [{"step": 1, "steps_text": "INVESTIGATE: Internet has a lot of resources (videos, articles) from artists and makers, and certainly you can learn some techniques that will help you in your path. Besides, this hobby requires a multidisciplinary approach, so any new piece of knowledge you can get is always welcome.\nGATHER: You will need a lot of materials. The best thing? You can get most of them for free. Tell your relatives and friends to keep broken toys and appliances for you. Don't throw plastic caps and other disposable things made of nice plastic away. And if you see some good plastic stuff on the street, pick it up. Soon you will have enough materials to start building your creations and even, more materials will start coming by themselves. Planet Earth has a big plastic trash problem, so you will always have plenty of materials to work with.\nEXPERIMENT: It doesn't matter how many books and internet guides you read, or how many DIY videos you watch. Your best way to learn is with a hands-on approach. Only that way you can master how some materials interact with others, which tools and materials are the best for the job, how much pressure a piece of plastic can resist before breaking and which materials require special treatment. Some plastics are great to work; others will blow in your face in a cloud of dust and toxic fumes or melt, and burn your fingers.\nBE SAFE: Always use dust mask and safety goggles when you are cutting or filing plastic, wood or metals, and safety gloves if you are working with power tools and risky materials. Besides, don't forget your bio-safety. It doesn't matter how nice a discarded piece of equipment looks, it's not worthy if it's placed in the middle of a hospital garbage bin. If possible, try to clean the piece with water and soap or alcohol. And don't forget to wash your hands.\nKNOW YOUR PROVIDERS AND AVAILABLE RESOURCES IN THE AREA: Not all stuff will come for free; you will need to buy several tools and materials to complete your projects. Some folks get everything on eBay, Amazon and Craiglist; but I prefer hardware stores, electronics stores, thrift stores, toy stores, office supplies stores, flea markets, junkyards, supermarkets and even, drugstores. Don't forget to be nice with the hardware store staff, and they will be more than happy to help you (or to leave you alone, if you don't like to be followed on every step when you are looking for something). Also, consider not everything is as available as in America (the continent, not only U.S.). In some countries, finding cheap Chinese toys that look like weapons is very common. In U.S. and other countries, that kind of toys is forbidden and not available, but you can find a lot of discarded licensed toys with better quality and safety regulations. In San Francisco and Bogota it's the obvious rule to find PVC pipes that plug perfectly into their fittings and accessories. In Baku from some freaky reason, PVC pipes DON'T fit into their \"fittings\". It's a nightmare.\nDESTROY: If you want to know how a thing works, take a screwdriver or break the seals and open it. Sounds like an obvious advice considering Instructables is a community for makers, DIYers and MacGyvers. But you would never believe how many professionals in science, engineering, technology, art and industrial design have never opened a pen or a toy car to check what is inside. And be prepared: probably you will spoil or completely break some very good stuff to the point of uselessness. But that's part of the learning process.\nDON'T FORGET TO \"KISS\": And by KISS I mean the famous \"Keep It Stupidly Simple\" principle. Your project must be so tidy and organized you can spot easily any issue and correct it without affecting the rest of your creation. If you attach a piece, it must be done in a way it can be easily replaced when it gets broken or improved. Electrical connections should be clear. And remember: beginners use to spread unnecessary amounts of hot glue everywhere to attach pieces. Real Pros know when to use glue and when to use other attachments like nuts and bolts, screws and zip-ties.\nNO MONEY? NO PROBLEM: If you really want to do it, you only need to be creative and stubborn. Money is not an excuse, because you can find great things for free if you know where to look. And if you need more motivation, check this great story of Haitian kids living in poverty but creating fantastic toys from trash.\nGET INSPIRED: What do you want to build? Beautiful toys? Movie props? Sculptures? Movies, videogames, comics, TV series and retail toys use fantastic designs, and you can try to emulate them with your creations. Do you like animals? Visit a zoo and do some drawings of your favorite creatures. Like an old teacher used to tell me: \"a creative person must drink from all the waters. Watch the Oscar-winning movies and the bad ones, too. Read the classics but also, bad comics.\"\nCREATE YOUR STYLE (DARE TO BE STUPID): You are an artist. You are a Rockstar. You only need to believe it. Crazy is the new normal. Create a Power Loader for a Barbie. Create an army of silly-walking coffee-can bots. It's your art. Do whatever you want with it (as long as is legal and ethical.)\nBE READY FOR CRITICISM: As I said at the beginning, my family thought I was the crazy one. But criticism will come from all sides. At the beginning of my career, some persons said my toys looked too trashy and I needed to make them look more professional. So I improved my skills and even, I took a course about movie props. Then in an art exhibition, some guy congratulated me for the quality of my work, but \u201csuggested\u201d I should make them look trashier, so people could recognize the materials (SERIOUSLY?). Another example: I love my robots to have awesome weapons, like Robocop and mechas from anime, but in Colombia, some acquaintances and potential partners complained about my creations being too violent and suggested possibly I had a trauma from my military times (only logical explanation, because fictional robots use flowers and the power of love to defeat enemies, right?) and I should build more \u201cpeaceful things\u201d. But one of the hardest moments that filled me with sadness and rage was when I found one of my creations (a robot inspired by the \u201cBatteries not included\u201d movie) that I proudly sold months before in an ecological bazar, now over the carpet of a street seller in a third-class Flea Market in my hometown. I bought for 1 dollar; I repaired it, cleaned it and kept it with me. Now it\u2019s part of the permanent exhibition in the \u201cFrom Waste to Art\u201d museum in Azerbaijan. And to finish, there is still the social stigma only homeless people look in the public trash bins for useful things. It\u2019s a dirty work and your work is trash. Deal with it.\nKEEP IT REAL (AND WATCH OUT FOR EXPLOITERS): If you decide to sell your creations, one of the most complicated parts is to put a price to your own work. Some people will call you \u201cMaestro\u201d and said you should sell your art for thousands of dollars (big surprise: these folks never bought a single robot from me). And others will not pay even the $30 you are asking for your one-in-the-world robotic planter with LED eyes. But the worst is when they ask you to give them your creations or work for free, only with the promise of showing it to \u201cimportant and influential people\u201d, or my favorite: \u201cjust do it for love of art/science/kids\u201d. At the end they are the ones looking good, and you still have to figure how to pay the rent. My recommendation? As Eminem in \u201c8 Mile\u201d, don\u2019t quit your real job until you have your real break; and as the Joker in \u201cThe Dark Knight\u201d, if you are good in something, never do it for free.\nAND REMEMBER THE IMMORTAL WORDS OF JAKE THE DOG: \"Sucking at something is the first step towards being sort of good at something.\u201d Your first creations will be bad. Only time and experience will sharpen your skills.\nNote that I'm using a lot the phrase \"cheap Chinese toy/plastic/product\". If well a lot of the best stuff is Made in China (like your iPhone and my beloved Xiaomi smartphone), also is the truth market is flooded with low quality Chinese products, knock-offs and materials. So, if you are from China and you feel offended, please accept my apologies beforehand and consider I'm talking about the quality of the product, not about your beautiful and respected country.", "step_imgs": ["https://cdn.instructables.com/F5V/RVPL/JFMTAC34/F5VRVPLJFMTAC34.LARGE.jpg"], "step_title": "Step 1: Some Recomendations Before You Start:"}, {"step": 2, "steps_text": "Now, if you try to keep all the plastic you got from friends or found on the street, soon your workshop will become a chaotic mess full of useless trash. So it's important you to be very selective. To choose the best stuff for my works, and use this criteria every time I find a plastic piece, a broken toy or a discarded machine:\n1. SIGHT:\nDoes this material look good?\nIf the piece I found looks like I cannot clean it with a reasonable amount of water, soap/detergent and sponge, I don't take it.\nIt must look easily disassemblable (assembled using screws) or at least, easy to work with.\nIs it what you need for your project or has a good potential to be used in the future?\nIf a plastic piece looks with a lot of cracks, I don't take it. But if it's a damaged device or toy, I usually remove and keep the good components and discard the broken ones.\n2. STURDINESS:\nUnless the project requires that, I don't use low density plastics, like the ones of disposable products (dishware / drinkware) and cheap Chinese toys.\nTo test sturdiness, I take a plastic piece and I try to bend it a little bit. If I start seeing and hearing cracking sounds with little force, probably that piece will get easily broken in the future. And I don't want my toys to get easily broken; or me or any kid to get stabbed by a cheap plastic shard.\nI love to work with PVC (beware: if you cut it with a rotary tool, you will have an awful cloud of dust in your workshop), PLA and medium/high density plastics. From cheap plastic I only keep small components for small decoration details.\n3. SMELL:\nBelieve it or not, one great way to recognize cheap Chinese plastic from good quality one is the smell. The strongest the smell is, the poorest the quality of the plastic. Reason? Your smell sense works perceiving small particles of a material in the air. If you can smell a plastic, it means it is disintegrating quickly. Do the experiment: take a licensed Hasbro or Mattel toy or a piece of Lego and smell it against cheap Chinese toys. You will find interesting differences.\nIf a plastic piece (like a bottle or a cap) has a huge chemical smell hard or risky to remove, or come from a very stinky trashcan, I don't take it.\n4. SAFETY:\nIf well getting materials from trash is a dirty job, I never keep a piece or discarded device that shows a great biohazard threat. PVC plumbing from discarded toilets, hospital waste, syringes from drug addicts, materials in contact with bodily fluids, excrements or dead animals (except for for dead bugs that are easy to remove) are out of the menu.\nOnly take plastic trash when is over the trash bin or near it. NEVER explore inside a trashcan, unless it's a controlled situation and you have bio-safety protection. Avoid risky surprises.\nIf you find an interesting trashcan (like the ones in front of computer maintenance stores), but there are homeless people, suspicious guys, street dogs, rats or any other unsafe condition, go away and wait until the area is clear. No piece of trash is more important than your life and integrity.\nBy the way: it\u2019s always good to carry plastic bags with you, so you can wrap what you find on the street with contaminating the rest of your belongings, at least until you arrive home to clean it.", "step_imgs": ["https://cdn.instructables.com/FPD/GFPJ/JFMTAC2M/FPDGFPJJFMTAC2M.LARGE.jpg", "https://cdn.instructables.com/FGA/JL87/JFMTAC42/FGAJL87JFMTAC42.LARGE.jpg", "https://cdn.instructables.com/F0O/VK88/JFMTAD7D/F0OVK88JFMTAD7D.LARGE.jpg", "https://cdn.instructables.com/FNC/ZMMG/JFMTAD77/FNCZMMGJFMTAD77.LARGE.jpg", "https://cdn.instructables.com/FSG/REEV/JFMTAD79/FSGREEVJFMTAD79.LARGE.jpg", "https://cdn.instructables.com/FZW/BZ3Z/JFMTAD7G/FZWBZ3ZJFMTAD7G.LARGE.jpg", "https://cdn.instructables.com/FGX/AF1V/JFMTAD7B/FGXAF1VJFMTAD7B.LARGE.jpg"], "step_title": "Step 2: Get and Recognize the Good Stuff"}, {"step": 3, "steps_text": "I strongly recommend you to read Robots Class by Randy Sarafan, at least the first three lessons. Even if robotics is not your thing, he shows and explains in a very effective and friendly way most of the tools and hardware, and some basic electric principles you will need for this hobby (I will focus this guide in junk art, so I will not explain basic circuits.)\nThe only (and very important) tool Randy is missing in his class is a good rotary tool, being Dremel my favorite brand (and probably, the best). If you need to drill, cut, file, polish, carve or destroy, a rotary tool is the answer. I have this one since 6 years ago and is awesome! And get a keyless chuck, so you can change easier your accessories. You will be invincible.\nI believe you will read his class, so I will only quickly mention the basic things you need in your workshop:\nScrewdrivers\nPliers\nPincers\nMultitool\nSoldering Iron\nHot Glue Gun\nScissors\nHobby Knives\nWire Cutter\nRuler\nPencil\nMarkers\nAngles\nScrews\nNuts and Bolts\nWashers\nSuperglue\nZip-ties", "step_imgs": ["https://cdn.instructables.com/FYQ/3P47/JFMTAPH1/FYQ3P47JFMTAPH1.LARGE.jpg", "https://cdn.instructables.com/F9J/V469/JFMTAPH4/F9JV469JFMTAPH4.LARGE.jpg"], "step_title": "Step 3: Basic Tools and Hardware"}, {"step": 4, "steps_text": "Broken toys are a good source of materials for your projects. And it's a clean one, too! (well, except for the hairs you find tangled in the wheels or axles of toy cars. Or the sulfate residues you find in the battery holder when cheap batteries have been there for years.)\nBesides, if you are a beginner, components from toys are the best, cheapest and safest to create new toys. When you get more experience, you can try to disassemble old computers, printers and appliances to to create more advance projects.\nThe first step is to use a screwdriver to carefully remove the screws from the toy. You will find a lot of cables, gears, some electronic boards and other interesting components. There are a lot of possible references, shapes, sizes, functions and colors of components, so we will talk only about the most important ones for a beginner (for the moment, we will not talk about sound/musical circuits, remote control modules or mini-computer brains):\nBattery holders: usually for 1, 2, 3 and 6 AA batteries; 1 and 2 AAA batteries and 1 9V battery. Even some toys, like RC cars, come with rechargeable batteries pack. Useful to provide energy to your creation.\nSwitches: if there is something annoying and anti-aesthetic, it's to turn ON/OFF your project twisting or separating two cables. Toys usually have a small switch, and often is integrated or near to the battery holder.\nLEDs and lightbulbs: Their basic function is to bring light to the toy, and in a trash toy, they will look great as eyes. A lightbulb can be connected in any polarity and it will work. A LED has to be connected in the right polarity (positive of the battery to positive of LED, and the same with negative).\nMotors: a motor transforms electricity into movement. It's what makes the toy roll, walk or dance. Usually they come inside gearboxes (AKA: reduction boxes), configuration of gears that transform speed into torque (more of this on the next step.) Usually motors form toys are also called \"Hobby Motors\" and work with 3-6 volts.\nCables: as probably you already know, cables conduct electricity from the batteries/plug to the electrical components. You will find cables in all presentations, colors and qualities. With time and experience you will learn which ones are the best for your projects. A hint: the best ones come from old electrical appliances, computers, toys and telephones. The worst cables come from cheap toys, not only because quality, but because usually these are too short to be reused.", "step_imgs": ["https://cdn.instructables.com/FGY/Q5T3/JFMTAMGE/FGYQ5T3JFMTAMGE.LARGE.jpg", "https://cdn.instructables.com/FZW/OL3C/JFMTAMGH/FZWOL3CJFMTAMGH.LARGE.jpg", "https://cdn.instructables.com/FW5/493V/JFMTAMGI/FW5493VJFMTAMGI.LARGE.jpg", "https://cdn.instructables.com/FNI/QSSV/JFMTAMGJ/FNIQSSVJFMTAMGJ.LARGE.jpg", "https://cdn.instructables.com/FNB/8U8K/JFMTAMGL/FNB8U8KJFMTAMGL.LARGE.jpg", "https://cdn.instructables.com/FTU/TFHE/JFMTAMGM/FTUTFHEJFMTAMGM.LARGE.jpg", "https://cdn.instructables.com/FXG/SEPD/JFMTAMGS/FXGSEPDJFMTAMGS.LARGE.jpg"], "step_title": "Step 4: Harvesting Electromechanical Components From Toys"}, {"step": 5, "steps_text": "So you finally removed the case from that beautiful toy car that your nephew transformed into that broken piece of trash, and you are amazed about those beautiful gears, cables and other components. When I was new in this, my first mistake was to extract the motor and disassemble to rest of the toy to its basic components. But years later I realized I was destroying the best component: the gearbox. If I had knew that, probably I could made things more advanced than vibrobots. The best thing you can do is to carefully remove the screws that attach the gearbox to the rest of the toy and keep it in a whole until you find the best use.\nA gearbox (or reduction box) is a mechanism that transforms the speed of the motor into torque. Do the experiment: try to make a simple car attaching the wheel directly to the motor shaft, and you will see it spins very fast, but its frustrating how several times it doesn't have power to keep going over some surfaces. Try to do another one, adding a conveying belt. And now try this one with a gear box. Note that all the three projects work with a 9V battery. And if you try to make a walking robot, the best and only option in the context of this exercise is the gearbox.\nBut recycled gearboxes are not magical solutions and usually don't come in that beautiful-easy-to-work yellow box. They come in all shapes, configurations and presentations, designed specifically for the toy where they are in. Most of the time you will need to hack them. So, if you want to give some movement to your creation, it's good to know how can you use the most common electromechanical components :\nMotor: Because its high speed and very weak torque, you can use just the motor to make a vibrobot (the simplest of the robots) and its variations (brushbot, bristlebot and the usual insect robots you find on YouTube), using the Eccentric Rotating Mass principle. Even you can find ERM motors inside any modern joystick. Also, you can attach a propeller to create a fan for a powerboat or a toy car. You can make it look like a Gatling gun. Or if you want to push your DIY skills, you can try to create your own gears configuration, using cardboard, wood, plastic or even 3D printed ones.\nR/C Car Differential: This gearbox comes from (you guessed it) a R/C car. It has more torque than the motor alone, but still, its strong point is speed and it's not the best option for a walking robot. I use them for machine guns and heavier vibrobots (like the main robot of this guide). And I once built an egg-beater. By the way: R/C cars are fantastic! Simple Forward/Back ones usually come with one single average motor; if they can turn too, probably you will find two motors. But if you are lucky enough to get a professional R/C car, probably the differential will come with a more powerful motor and the steering, with a servomotor. Bingo!\nSimple Worm-Gear box: several small toys only need to do a not-so-fast/not-so-slow/little torque movement, and this is the best option. Usually it has one worm-gear attached to the motor and another gear attached to the axis of the toy (don't rotate it or you will damage the gearbox). Good to make small cars, but in my opinion, not the big deal. I built this thing. NEEEEEEXT!\nSelf-steering toy's complex gearbox: Have you ever seen that kind of toys that look like cars or trains, go forward and turn without any command? And then you check bellow and discover that two small wheels inside a cylinder are responsible of this movement, and not the big decorative wheels at the side? Well, this is the gearbox responsible of that movement and in several cases, they can animate other parts of the toy. These gearboxes are complicated to hack, but when you do it, you can make things like this small robotic dog.\nSpeed/torque double function gearbox: Oh, I love to hack this one! Usually you find it in bubble-shooters and in the hard-to-find-in-America electric toy weapons. The motor is in the middle. One end of the shaft is connected to a gearbox for operation that requires some torque (like pumping soap-water). The other end has a fan attached (like a blower to create the bubbles) or any other mechanism that requires speed. It's good for making some automata like this and this.\nCrankshaft gearbox: These are the easier to hack and use from the toy gearboxes in this guide. You usually find them in walking toys, like dogs, babies and robots. The only problem is the moral and ethical implications of destroying a walking toy to build... another walking toy. Actually, I prefer the Burhan Saifullah approach of transforming a toy car into a crankshaft for a walking robot.\nServomotor: as I said in point N.2, I found this servomotor in the steering mechanism of a R/C car. Servos are very versatile and can be used in more advanced applications. However, if you only want it as a gear box, probably you can learn how to remove the controller here.\nAutomaton gearbox: if you see a big toy with anthropomorphic or animal shape, that dances or moves several parts of the body at the same time, there are two options: or it's a real robot (probably it has sensors and/or remote control, and several small gearboxes or servos); or it's an automaton: all the movements are controlled by a complex gearbox powered by a single motor. Usually these gearboxes have good torque and low speed. However, it's complicated to fit this bulky component into your project or hack it to make it more usable. I'm starting to consider disassembling this one to use only the motor...\nStandard DIY gearbox: now, if you are not in mood of experimenting with all the previous examples, it's complicated to get cheap broken toys in your area or simply you want to start with something simple, easy and powerful, you can get the yellow reduction boxes hobbyists use for Arduino projects. When you have more experience, you will find all the variety of gearboxes you can find in the market.\nTo finish with the gearboxes topic: if you try to rotate the shaft of a gearbox and it doesn't move, don't try harder, or you can break it. Plastic gears (specially from cheap toys) are fragile; and if the gearbox works with worm gears, it will be worse. The best option is to power it with a battery.", "step_imgs": ["https://cdn.instructables.com/FIP/WLV2/JFMTAMI8/FIPWLV2JFMTAMI8.LARGE.jpg", "https://cdn.instructables.com/FK5/1L97/JFMTAMIA/FK51L97JFMTAMIA.LARGE.jpg", "https://cdn.instructables.com/FCC/364J/JFMTAMID/FCC364JJFMTAMID.LARGE.jpg", "https://cdn.instructables.com/FIB/AE90/JFMTAMJG/FIBAE90JFMTAMJG.LARGE.jpg", "https://cdn.instructables.com/FFK/9JT4/JFMTAMJH/FFK9JT4JFMTAMJH.LARGE.jpg", "https://cdn.instructables.com/FUE/ZX92/JFMTAMKT/FUEZX92JFMTAMKT.LARGE.jpg", "https://cdn.instructables.com/FCX/2H4L/JFMTAMKS/FCX2H4LJFMTAMKS.LARGE.jpg"], "step_title": "Step 5: Know Your Gearboxes"}, {"step": 6, "steps_text": "Everybody believes I follow the Engineering Design Process, the Design Thinking framework or any other \"Design Something Something\" that involves:\n1. Ask: How to solve a problem/ create a product?\n2. Brainstorm: make a list of ideas and choose the best ones.\n3. Design: make a drawing or plan of your project.\n4. Build: put the pieces together.\n5. Test: turn on your project and check how it's working.\n6. Improve: correct mistakes and try again.\nIt's a great approach. But I have to be honest, several times I don't follow these steps when I make my art. Sometimes I start with a great idea, but at the end I finish building some other thing that came to my mind in the middle of the process.\nSometimes I work in an idea, it fails over and over and over. And when I gave up after several test and improvements, I decide to change the point of view and transform it in another thing. As an example, I started trying to make a 4-legs walking robot, but the gear box was week, so I transform it into a crazy dancer.\nBut usually, when I want to start a new project, there are two origins:\nI want to build something specific and then I start with a scavenger hunt to find the pieces to complete it.\nI have some good piece and I start wondering \"Mmmm... what could I make with this?\", then I start working on it until I create something I like.\nNow, when you define what you do want do do, there are several ways to design your creation. You can choose the one that fits you better:\nYou can use a design software, like Tinkercad or Fusion 360.\nYou can go for the classical option: a trustful notebook with a pencil (it's a good idea. Curiously, I started to used it just from a few months ago.\nMy favorite: I sit on the floor with a pile of trash and I start working it as a puzzle. I put the pieces I consider the best for the main body, then for each arm and leg, then for head and accessories. At the end, I take a photo, to keep my mind working in the design when I'm in the bus, and in case my cat destroys it.\nUsually I don't throw my \"failures\" to the trash. I recycle them, throwing the broken parts and keeping the good ones to use them in future projects. In the case of the robot I'm using as an example, the front part with small arms comes from a previous project (a walking robot) that got broken. And now it fits perfectly this new toy!", "step_imgs": ["https://cdn.instructables.com/FSI/P57A/JFMTAD7F/FSIP57AJFMTAD7F.LARGE.jpg"], "step_title": "Step 6: Choose a Project and Plan How to Make It!"}, {"step": 7, "steps_text": "Use high quality plastic or metal for the articulations and structural parts of your robot. Low quality plastic is better as decoration or non critical points.I use screws, nuts and bolts for the joints.\nMetallic washers are great to use with nuts and bolts and with screws. They increase the surface contact between these and the plastic, increasing friction in joints and reducing the risk of ruptures in that area of the plastic.\nWhen you move a joint of your robot, probably it will start unscrewing the bolt and the piece will get loose. To avoid that, you can tighten the nut and then put a small drop of superglue between the bolt and the nut, being careful of not adding too much, or your joint will be spoiled. This solution is great for nuts and bolts in vibrobots, that usually get loose because of vibration.\nWhen you need to use the rotary tool to drill a hole for a screw or bolt, start with a drill-bit thinner than the screw, test, and then, change it to the next size of drill until you find the perfect hole. Screws need tight holes, nuts and bolts usually require loose holes.", "step_imgs": ["https://cdn.instructables.com/FV8/8Z8U/JFMTABPQ/FV88Z8UJFMTABPQ.LARGE.jpg", "https://cdn.instructables.com/FUE/DZV5/JFMTABPP/FUEDZV5JFMTABPP.LARGE.jpg"], "step_title": "Step 7: Building Tips"}, {"step": 8, "steps_text": "You must be prepared for something: the first time you test your new toy, probably it will fail. It doesn't matter your experience, your professional background or your skills. It will fail (probably).\nBut that's part of the magic! You will be in a \"test/improve/test/improve cycle\" until you get a toy that makes you happy or you throw it violently to the floor in frustration and despair. Then you will believe you are good for nothing, turn off the Dremel, clean the floor and lay in the sofa to watch the next TV show. Who needs this stupid hobby when the couch offers you a better way to pass your leisure time?\nAnd then, a few days later, you will return to your small and improvised workshop to clean it. You will grab a broken toy to throw it to the trash bag. But then you decide to open it, to check how it is inside. When you realize, you are sitting in your crafting table, dissembling it completely, trying to combine the parts with other plastic pieces, connecting cables to see how the motor works, you don't know if it will work, but you are passing a nice time, only you and your tools...\nCongratulations! That's your graduation, colleague! May this hobby bring for you the same blessings it brought to my life, and even more!", "step_imgs": ["https://cdn.instructables.com/F0O/ILFO/JFMTABPM/F0OILFOJFMTABPM.LARGE.jpg", "https://cdn.instructables.com/F39/TQJK/JFMTABPO/F39TQJKJFMTABPO.LARGE.jpg"], "step_title": "Step 8: Test and Improve Your New Toy"}], "channel": "Reuse"}]