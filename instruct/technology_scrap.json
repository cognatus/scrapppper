[{"category": "", "description": "I was bored over the weekend so decided to have a rummage through my parts bins for some inspiration and came up with this \u2018ible.\nThe flash I used I picked up a few months ago for a couple of bucks and the rest of the parts I had left over from other projects. I was tempted to just leave the flash as is and put it on display, as it\u2019s a damn cool item just by itself. However, the hacking gods whispered in my ear \u201cpull it apart\u201d and I was powerless against them.\nI\u2019m actually very pleased on how the torch turned out. I still managed to keep the flashes retro ascetic\u2019s whist turning it into something useful again.\nThe flash isn\u2019t just a boring old flashlight though. I also added a dimmer for the LED\u2019 and rechargeable batteries which can be charged via solar panels attached to the side of the flash or by an external socket.\nThe other thing I really like about this torch is you can mount it to a tripod as well. Come in handy when you need light for filming, camping, reading or whatever else.", "title": "Camera Flash to Flashlight", "url": "https://www.instructables.com/id/Camera-Flash-to-Flashlight/", "section": "technology", "steps": [{"step": 1, "steps_text": "Please note that this build was a rummage one and I just used parts that I had on hand. I had to use a few parts that were probably not ideal but did the job. I\u2019ve highlighted these below and have also included alternatives to the parts that I used.\nParts\n1. Vintage Camera Flash \u2013 eBay\n2. 3 X LED\u2019s (1w) \u2013 eBay\n3. Dimmer (actually a 3v motor speed control!) \u2013 eBay\n4. 2 X Solar Panels 4.5V \u2013 eBay.\n5. 3 X AAA battery holder \u2013 eBay.\n6. 3 X AAA Rechargeable batteries \u2013 eBay\n7. Potentiometer Knob \u2013 eBay\n8. Diode - eBay\n9. Socket for DC charging - eBay\n10. 4.5V charger - eBay\nTools\n1. Soldering Iron\n2. Pliers\n3. Itty bitty screwdrivers and phillips heads\n4. Hot glue\n5. Superglue", "step_imgs": ["https://cdn.instructables.com/F2G/IQIY/JTYNK7HK/F2GIQIYJTYNK7HK.LARGE.jpg", "https://cdn.instructables.com/FKF/FCBC/JTYNK7DO/FKFFCBCJTYNK7DO.LARGE.jpg", "https://cdn.instructables.com/F7G/BUXL/JTYNK6BH/F7GBUXLJTYNK6BH.LARGE.jpg", "https://cdn.instructables.com/F2E/3LPE/JTYNK6M0/F2E3LPEJTYNK6M0.LARGE.jpg", "https://cdn.instructables.com/FVI/N1RV/JTYNK7FN/FVIN1RVJTYNK7FN.LARGE.jpg"], "step_title": "Step 1: Parts and Tools"}, {"step": 2, "steps_text": "The first thing to do is to pull apart the flash. Remember to keep all of the screws and other parts for later use\nSteps:\n1. Carefully remove all of the screws holding the case together and keep these in a safe place. Look for any \u201chidden\u201d screws as well\n2. Open the case up and if any bits fall out, place these with the screws.\n3. Inside will be a very large capacitor. DON\u2019T TOUCH THIS! It\u2019s more than likely that it is still charged and will give you a nasty shock. To discharge, just a screwdriver with a plastic handle and touch the two connecting points. If you hear a pop then you have discharged it and if you don\u2019t hear anything, then tap it a few more times just to make sure\n4. Remove the cap and another other of the circuitry. Keep it though as there\u2019s probably some interesting parts you might be able to use in other projects\n5. Lastly, remove the flash reflector section and take out the glass flash section. I just used a pair of pliers and broke this", "step_imgs": ["https://cdn.instructables.com/FD4/E94W/JTYNK7DN/FD4E94WJTYNK7DN.LARGE.jpg", "https://cdn.instructables.com/FZ4/K35U/JTYNK79L/FZ4K35UJTYNK79L.LARGE.jpg", "https://cdn.instructables.com/FYB/Q919/JTYNK77N/FYBQ919JTYNK77N.LARGE.jpg", "https://cdn.instructables.com/FFH/R8AT/JTYNK74K/FFHR8ATJTYNK74K.LARGE.jpg", "https://cdn.instructables.com/FCB/NM11/JTYNK72N/FCBNM11JTYNK72N.LARGE.jpg", "https://cdn.instructables.com/FMU/7YWK/JTYNK6Q5/FMU7YWKJTYNK6Q5.LARGE.jpg", "https://cdn.instructables.com/F0B/XKI9/JTYNK6TI/F0BXKI9JTYNK6TI.LARGE.jpg"], "step_title": "Step 2: Pull Apart the Flash"}, {"step": 3, "steps_text": "Now that you have the flash apart, it\u2019s time to add the LED\u2019s to the reflector section. I went with 3 LED\u2019s but you could use more or less \u2013 up to you\nSteps:\n1. First find which pins on the LED\u2019s are positive and which are ground by testing each one\n2. Line up the LED\u2019s with positive facing up and ground facing down. You now need to connect each of the ground and positives together\n3. Add some solder to each of the solder pads on the LED\u2019s and with a thin piece of wire (resistor leg works well) connect each the positive and ground points\n4. Solder a wire to each end of the LED\u2019s as shown\n5. Attach the LED\u2019s inside the reflective flash section with some hot glue. I did try superglue initially but this didn't work.\n6. The wires can go through the holes on each side of the flash", "step_imgs": ["https://cdn.instructables.com/F8J/E8N4/JTYNK70P/F8JE8N4JTYNK70P.LARGE.jpg", "https://cdn.instructables.com/FOB/R0UG/JTYNK5ZT/FOBR0UGJTYNK5ZT.LARGE.jpg", "https://cdn.instructables.com/FPS/FE4J/JTYNK5XW/FPSFE4JJTYNK5XW.LARGE.jpg", "https://cdn.instructables.com/FN2/LEO1/JTYNK56L/FN2LEO1JTYNK56L.LARGE.jpg", "https://cdn.instructables.com/F1S/64G8/JTYNK5S6/F1S64G8JTYNK5S6.LARGE.jpg", "https://cdn.instructables.com/FT4/NXIQ/JTYNK5G4/FT4NXIQJTYNK5G4.LARGE.jpg"], "step_title": "Step 3: Add the LED's"}, {"step": 4, "steps_text": "As I mentioned in the parts section, the dimmer is actually a motor controller. I find though that these work really well as LED dimmers\nSteps:\n1. First, locate a good spot on the flash to have the pot coming out of.the flash\n2. Drill a hole and attach the pot\n3. You will need to connect the battery and LED wires a little later on so make sure that the dimmer circuit is secured inside the flash and accessible\n4. You can also add the pot knob as well", "step_imgs": ["https://cdn.instructables.com/F3I/I9PR/JTYNK4HT/F3II9PRJTYNK4HT.LARGE.jpg", "https://cdn.instructables.com/FF2/SFQ6/JTYNK4HU/FF2SFQ6JTYNK4HU.LARGE.jpg", "https://cdn.instructables.com/FOB/S1DQ/JTYNK4GC/FOBS1DQJTYNK4GC.LARGE.jpg", "https://cdn.instructables.com/FVA/5H9M/JTYNK4GB/FVA5H9MJTYNK4GB.LARGE.jpg"], "step_title": "Step 4: Add the Dimmer"}, {"step": 5, "steps_text": "These little LED\u2019s run fine on 3V\u2019s. The 3 rechargeable batteries have a total of 3.6V which is also fine for the LED\u2019s. However, test them to make sure that they aren\u2019t overheating and if they do start to get hot, add a resistor to reduce the current.\nSteps:\n1. Most old flashes use 4 X AA batteries. If your battery compartment isn\u2019t all corroded (mine was), then you could just re-use the terminals and connect one of them together so you only need 3 X Aa batteries. You could also just replace the terminals (I did an \u2018ible on how to do this) and add a spare battery inside as a spacer. I used a 4 X AA battery holder for mine\n2. I had to change it into a 3 X AA battery holder so added a jumper wire from positive to ground in one of the battery compartments\n3. Next, place the batteries into the holder and fit it into the battery compartment.\n4. The wires will be connected to the dimmer in a later step", "step_imgs": ["https://cdn.instructables.com/FGQ/IWJH/JTYNK6DE/FGQIWJHJTYNK6DE.LARGE.jpg", "https://cdn.instructables.com/FQ5/XXU7/JTYNK4LN/FQ5XXU7JTYNK4LN.LARGE.jpg", "https://cdn.instructables.com/F7L/D0N8/JTYNK40Z/F7LD0N8JTYNK40Z.LARGE.jpg"], "step_title": "Step 5: Batteries"}, {"step": 6, "steps_text": "To make this torch very portable, I decided to add some solar panels as well. You can charge the batteries either by the sun or via a socket.\nSteps:\n1. Solder some wires to the positive and ground on the panel\n2. Drill a couple of holes into the side of the flash for the wires to go through. The best way to work out where to drill the holes is to make a template out of masking tape and mark where the solder points are.\n3. Place some double sided tape onto the back of the panels and stick to the side of the flash\n4. As the solar panels are connected in parallel, you need to connect positive to positive and ground to ground on the panels\n5. To make sure that power flows only one way you need to add a diode to the positive wires.\n6. If you don\u2019t already have a hole in the side of the flash (there might be a button or could remove) then drill one and attach the female socket for the DC power.\n7. Add a couple of wires to the solder points\n8. The wires from the socket and solar panels will be connected to the dimmer in the same spot as the battery wires", "step_imgs": ["https://cdn.instructables.com/F7O/DH6L/JTYNK4DC/F7ODH6LJTYNK4DC.LARGE.jpg", "https://cdn.instructables.com/FIR/FYUH/JTYNK49I/FIRFYUHJTYNK49I.LARGE.jpg", "https://cdn.instructables.com/F5H/FJZ5/JTYNK47K/F5HFJZ5JTYNK47K.LARGE.jpg", "https://cdn.instructables.com/FVV/C7PJ/JTYNK456/FVVC7PJJTYNK456.LARGE.jpg", "https://cdn.instructables.com/FHF/FL5S/JTYNK454/FHFFL5SJTYNK454.LARGE.jpg", "https://cdn.instructables.com/FAG/YDOI/JTYNK452/FAGYDOIJTYNK452.LARGE.jpg", "https://cdn.instructables.com/FUN/787G/JTYNK4EU/FUN787GJTYNK4EU.LARGE.jpg", "https://cdn.instructables.com/FTB/K75R/JTYNK4DD/FTBK75RJTYNK4DD.LARGE.jpg", "https://cdn.instructables.com/FUM/XN54/JTYNK3ZF/FUMXN54JTYNK3ZF.LARGE.jpg"], "step_title": "Step 6: Solar Panels and External Socket"}, {"step": 7, "steps_text": "Now that you have everything in place, it\u2019s time to connect all those wires together.\nSteps:\n1. First, connect the wires from the LED\u2019s to the \u201cmotor\u201d section on the dimmer. It will say motor as it\u2019s actually a speed controller. Make sure the polarities are correct.\n2. Now you need to connect the wires from the battery, solar panels and socket together. Just strip the plastic off each wire and twist them together.\n3. Next, you need to connect each of the positive and ground wires you just twisted to the power section on the dimmer. Again, making sure the polarities are correct\n4. Test to make sure everything is working as it should. If it is you are ready to close up the case", "step_imgs": ["https://cdn.instructables.com/FQ0/QQ8N/JTYNK3Z6/FQ0QQ8NJTYNK3Z6.LARGE.jpg", "https://cdn.instructables.com/FBG/HLMR/JTYNK3YY/FBGHLMRJTYNK3YY.LARGE.jpg", "https://cdn.instructables.com/FZD/M9U6/JTYNK3YV/FZDM9U6JTYNK3YV.LARGE.jpg", "https://cdn.instructables.com/F6X/4QBY/JTYNK3VX/F6X4QBYJTYNK3VX.LARGE.jpg"], "step_title": "Step 7: Connecting All the Wires"}, {"step": 8, "steps_text": "Steps:\n1. If everything works as it should you can now close-up the case\n2. Make sure that everything is put back into place and carefully screw back into the those itty bitty screws\n3. Next I wanted to be able to mount it onto a tripod. I added the mounting bracket and realised that I would need to modify it so it could screw into a tripod mount. I just removed the original mount and added a screw. It's a little weird how it mounts to the tripod but it works.\nThat's it! You now have your very own flash flashlight!", "step_imgs": ["https://cdn.instructables.com/FZD/86JH/JTYNK3UE/FZD86JHJTYNK3UE.LARGE.jpg", "https://cdn.instructables.com/FRO/6LUQ/JTYNK3UC/FRO6LUQJTYNK3UC.LARGE.jpg", "https://cdn.instructables.com/FXW/OMF0/JTYNK3SS/FXWOMF0JTYNK3SS.LARGE.jpg", "https://cdn.instructables.com/F79/PZ52/JTYNK3SQ/F79PZ52JTYNK3SQ.LARGE.jpg", "https://cdn.instructables.com/F44/ZKI0/JTYNK3R0/F44ZKI0JTYNK3R0.LARGE.jpg", "https://cdn.instructables.com/FQZ/LVGX/JTYNK3EL/FQZLVGXJTYNK3EL.LARGE.jpg"], "step_title": "Step 8: Final Step - Close the Case and Adding a Mounting Screw"}], "channel": ""}, {"category": "", "description": "After buying a new car I realised that it didn't come with a CD player and my phone doesn't have the space for most of my music.\nThe car does have a USB slot to play music stored on a USB drive so I set about trying to find a cool one.\nI had the idea I wanted one that looked like a Cassette Tape, to bring back the memories of cassette tapes of road trips from my younger days.\nI set about google , amazon and ebay and all I could find were ones that didn't look right or wouldn't work with my cars setup. (pictures 3-5 show the ones that weren't right for me.)\nso I decided to make my own.\nThis Instructable is how I made my own USB Cassette.\nIf you Like this idea and this instructable please vote for me in the Pocket Sized contest. (button at the bottom of the instructable.)\nThank you for looking.", "title": "Micro Cassette USB Music Drive.", "url": "https://www.instructables.com/id/Micro-Cassette-USB-Music-Drive/", "section": "technology", "steps": [{"step": 1, "steps_text": "Tools.\n3D printer.\nBlade, scalpel, craft knife.\nMeasuring device, (I used some calipers, but a ruler will work too.)\nFiles, emery sticks, sand paper.\nPliers and snips\nComputer. (with graphics design software, its not essential though)\nMaterials.\nUSB Stick. ( I used a metal Kingston one with the hole in one end)\nMicro cassette. (MC-60 type are the ones I used.)\nSelf adhesive printable material. (you can use paper and double sided tape)\nThe list here is what i can remember I used, I may have left some out. Please read the whole instructable first incase ive missed out a important tool.\nThanks for reading.", "step_imgs": ["https://cdn.instructables.com/FO4/Z68V/JOIXXD01/FO4Z68VJOIXXD01.LARGE.jpg", "https://cdn.instructables.com/FFT/R4IG/H461OZJG/FFTR4IGH461OZJG.LARGE.jpg", "https://cdn.instructables.com/FMC/ESGX/H4AGJCD0/FMCESGXH4AGJCD0.LARGE.jpg", "https://cdn.instructables.com/FRX/YTBZ/H8RVC3A9/FRXYTBZH8RVC3A9.LARGE.jpg", "https://cdn.instructables.com/F3Z/9CVL/JTYNH2WP/F3Z9CVLJTYNH2WP.LARGE.jpg", "https://cdn.instructables.com/FNT/PFZX/JTYNH2VF/FNTPFZXJTYNH2VF.LARGE.jpg", "https://cdn.instructables.com/FVU/PA9F/JTYNH32Y/FVUPA9FJTYNH32Y.LARGE.jpg"], "step_title": "Step 1: Tools and Materials."}, {"step": 2, "steps_text": "Now is time to pop open your cassette tape.\nI used a fine bladed craft knife to slide in between the two halves of the tape cassette and pry them apart.\ngo slowly and bit by bit. the cassette should only be held together on the corners (mine were anyway) you will feel a little pop or snap when you have separated the glue or weld points.\nOnce you have it open remove all the insides.\nThere should be a thin 'packing' sheet on both sides of the tape reels. It could be clear or coloured, mine were coloured black. (see photo 4) you will need to keep them.", "step_imgs": ["https://cdn.instructables.com/F3Z/9CVL/JTYNH2WP/F3Z9CVLJTYNH2WP.LARGE.jpg", "https://cdn.instructables.com/FNL/I7YC/JTYNH1C7/FNLI7YCJTYNH1C7.LARGE.jpg", "https://cdn.instructables.com/F3M/GL7V/JTYNH13N/F3MGL7VJTYNH13N.LARGE.jpg", "https://cdn.instructables.com/F9D/HBRF/JTYNGXOI/F9DHBRFJTYNGXOI.LARGE.jpg"], "step_title": "Step 2: Opening the Cassette."}, {"step": 3, "steps_text": "Measure the size of the hole for the spools, the size of your USB drive and the height of your cassette.\nI did some sketches on how i thought the design for the spinning feature would work.\nall my measurements might be different to yours as you may have different brands of USB drives or tape cassettes.\n\nThe spool holes for my tape cassettes were 10.9mm and the height of the cassette was 8mm, the internal hole of my USB drive was 8.5mm and its thickness was 4.5mm\n\nI drew up a little two part design so i could push it into the hole in the USB drive and then close the cassette around the drive and it would be held in place by the cassette.", "step_imgs": ["https://cdn.instructables.com/F4U/23AQ/JTYNH2IL/F4U23AQJTYNH2IL.LARGE.jpg", "https://cdn.instructables.com/FRE/G6CS/JTYNGXZL/FREG6CSJTYNGXZL.LARGE.jpg", "https://cdn.instructables.com/FDE/QZOR/JTYNH2M5/FDEQZORJTYNH2M5.LARGE.jpg"], "step_title": "Step 3: Measuring the Space You Have Inside."}, {"step": 4, "steps_text": "Using the measurements of the USB and the cassette shell use a 3D modelling program (I used sketchup) to design the spool USB holder and the spool hole blank.\nexport these models ready for 3D printing.", "step_imgs": ["https://cdn.instructables.com/FLC/2VZH/JTYNCZRW/FLC2VZHJTYNCZRW.LARGE.jpg", "https://cdn.instructables.com/FGP/G8CI/JTYNCZQ0/FGPG8CIJTYNCZQ0.LARGE.jpg"], "step_title": "Step 4: 3D Model Your Spools and Supports."}, {"step": 5, "steps_text": "Once you have the designs done its time to print.\nI printed them at the finest quality and 100% infill. to get the best quality and strongest print i could.\nThese are only small prints and only took 20mins or so.\nOnce the printing had finished push the two parts together inside the USB drive. You can use a tiny dab of glue to hole it all together and stop the spool spinning inside the USB drive.\nThen Place it inside the cassette to make sure the USB drive fits inside.", "step_imgs": ["https://cdn.instructables.com/FOG/9ELR/JTYNH1GO/FOG9ELRJTYNH1GO.LARGE.jpg", "https://cdn.instructables.com/FNK/M8CW/JTYNGW32/FNKM8CWJTYNGW32.LARGE.jpg", "https://cdn.instructables.com/FQ8/AALC/JTYNGW3A/FQ8AALCJTYNGW3A.LARGE.jpg", "https://cdn.instructables.com/FHL/2IMW/JTYNH256/FHL2IMWJTYNH256.LARGE.jpg", "https://cdn.instructables.com/F0I/KW0O/JTYNH29Z/F0IKW0OJTYNH29Z.LARGE.jpg", "https://cdn.instructables.com/F0G/YS2S/JTYNH2BO/F0GYS2SJTYNH2BO.LARGE.jpg", "https://cdn.instructables.com/FED/6PT1/JTYNGWCL/FED6PT1JTYNGWCL.LARGE.jpg", "https://cdn.instructables.com/FN4/ZG1I/JTYNH3M6/FN4ZG1IJTYNH3M6.LARGE.jpg"], "step_title": "Step 5: 3D Print Your Parts."}, {"step": 6, "steps_text": "Now to trim the cassette tape shell so the USB drive can swivel out and be used in a computer or stereo (a car stereo in my case.)\nDo some test fits and see which parts the USB drive is/will hit when swiveled from its concealed position to its extended position.\nI did a little sketch (Left hand side of the pad in photo 3)\nUsing the pliers and snips remove all the up stands, pegs and other little bits. File or sand the bits left over to make sure its all smooth.\nFile the side walls down carefully, you dont want to snap the cassette shell. (I left a little too much on the side deliberately, this was so i could check that the USB swiveled out and looked correct, fine tune it to get the USB drive to flip out to the correct spot by test fitting all parts to see how far round it goes.)\nGlue the spool cover that goes in the second hole of the cassette shell. (make sure the glue is dry before putting the USB drive in, you dont want it to get glued inside.\nPlace the two 'packing sheets inside the halves and then glue the two halves of the cassette shell together with the USB drive inside the shell.\nA tiny dab on the three intact corners of the cassette and along the remaining walls.\nLet it all set. but make sure the USB drive moves freely inside the shell before the glue dries.", "step_imgs": ["https://cdn.instructables.com/FEG/IF1M/JTYNH2FP/FEGIF1MJTYNH2FP.LARGE.jpg", "https://cdn.instructables.com/FYY/KKHF/JTYNHLQN/FYYKKHFJTYNHLQN.LARGE.jpg", "https://cdn.instructables.com/F4U/23AQ/JTYNH2IL/F4U23AQJTYNH2IL.LARGE.jpg", "https://cdn.instructables.com/F2H/XM7S/JTYNH2R5/F2HXM7SJTYNH2R5.LARGE.jpg", "https://cdn.instructables.com/FTM/NEMC/JTYNGXSO/FTMNEMCJTYNGXSO.LARGE.jpg", "https://cdn.instructables.com/FEQ/FK8D/JTYNH364/FEQFK8DJTYNH364.LARGE.jpg"], "step_title": "Step 6: Trimming the Cassette"}, {"step": 7, "steps_text": "The cassette may have come with a nice little case.\nIm going to use it to store the USB cassette in when not in use.\nTo make it work you will need to trim and sand the spool pegs down, They normally go inside the tape spool holes to hold everything secure in the case, They will not be able to do that as you have blocked the holes with the USB drive.\nSee the photo of the trimmed case next to the original case.", "step_imgs": ["https://cdn.instructables.com/FBQ/FV9M/JTYNH3E6/FBQFV9MJTYNH3E6.LARGE.jpg", "https://cdn.instructables.com/FZO/9NVC/JTYNH399/FZO9NVCJTYNH399.LARGE.jpg"], "step_title": "Step 7: Trim the Cassette Case Spool Pegs."}, {"step": 8, "steps_text": "If you want to, you can just use the ones the tapes came with. If not you can make some new ones/\nTo do this you need to scan one of the existing labels or the space the label will go into.\nDraw a template or cutline for the label and this will be what you use to make your designs.\nI looked at designs of tapes from when I was a kid and tried to replicate them on a smaller scale. you can make them however you want.\nAdd little fun details like the size of the USB stick or a USB logo. Make as many as you like and choose the ones you like best or just make one and put it on both sides, its totally up to you.", "step_imgs": ["https://cdn.instructables.com/FZW/MEGZ/JTYNCZQY/FZWMEGZJTYNCZQY.LARGE.jpg", "https://cdn.instructables.com/F2Z/NFEC/JTYNCZSU/F2ZNFECJTYNCZSU.LARGE.jpg", "https://cdn.instructables.com/FDK/6XV5/JTYNCZJN/FDK6XV5JTYNCZJN.LARGE.jpg"], "step_title": "Step 8: Design the Label (optional)"}, {"step": 9, "steps_text": "Print the retro designs on to some printable adhesive material. I have use of a vinyl printer/plotter.\nI printed a few designs and cut them out using the plotter. (these were laminated to protect the designs, this is not necessary as the wear and tear of the labels will add to the retro vibes)", "step_imgs": ["https://cdn.instructables.com/F1V/7P9J/JU31QUPJ/F1V7P9JJU31QUPJ.LARGE.jpg", "https://cdn.instructables.com/FK0/HX8B/JTYNH3IW/FK0HX8BJTYNH3IW.LARGE.jpg", "https://cdn.instructables.com/F5X/X3K3/JTYNH3NP/F5XX3K3JTYNH3NP.LARGE.jpg", "https://cdn.instructables.com/FE1/WO4X/JTYNH3QV/FE1WO4XJTYNH3QV.LARGE.jpg", "https://cdn.instructables.com/FHT/D9E2/JTYNH3PA/FHTD9E2JTYNH3PA.LARGE.jpg", "https://cdn.instructables.com/FQG/ANFI/JTYNH3UB/FQGANFIJTYNH3UB.LARGE.jpg", "https://cdn.instructables.com/F58/Z63U/JTYNH3SJ/F58Z63UJTYNH3SJ.LARGE.jpg"], "step_title": "Step 9: Print the Labels. (optional)"}, {"step": 10, "steps_text": "Once you have your USB tape cassette its time to use it.\nI put some music onto it to use in my car.\nI transferred a selection of music onto the USB cassette and popped it into my car.\nI made a couple of USB cassettes so i could give one to my wife to put her music on so we can have a choice when we are in the car. It also brings back the memories or rifling through tape cassettes when on road trips of my youth.\nUsing the case the Micro Cassettes came in will do a couple of things. One) protect the one you are not using at any one time. Two) allows you to put labels on them so you know whats on the cassettes or who owns it. Three)it looks cool. :)\nif you have any questions please ask and I will do my best to answer them.\nIf you make one post a 'I made this' thing. I would love to see them.\nThank you for looking at my instructable.", "step_imgs": ["https://cdn.instructables.com/FIQ/BM3C/JTYNHCYY/FIQBM3CJTYNHCYY.LARGE.jpg", "https://cdn.instructables.com/F0E/N5GK/JTYNHD79/F0EN5GKJTYNHD79.LARGE.jpg", "https://cdn.instructables.com/F2T/F049/JTYNHDHE/F2TF049JTYNHDHE.LARGE.jpg", "https://cdn.instructables.com/FM3/US8H/JTYNHDX9/FM3US8HJTYNHDX9.LARGE.jpg", "https://cdn.instructables.com/F5Y/ZLVN/JTYNHIZD/F5YZLVNJTYNHIZD.LARGE.jpg", "https://cdn.instructables.com/FW5/O8ZC/JTYNHIQH/FW5O8ZCJTYNHIQH.LARGE.jpg"], "step_title": "Step 10: Final Item."}], "channel": ""}, {"category": "", "description": "This DIY sensor will take the form of a conductive knitted stretch sensor. It will wrap around your chest/stomach, and when your chest/stomach expands and contracts so will the sensor, and consequently the input data that is fed to the Arduino. So keep in mind this isn't a totally accurate way to track every breath, and sometimes the movements of the body can influence the sensor to since it is all about how it stretches. Also, in terms of stability, I've found the range of numbers can jump around quite a bit if the sensor doesn't remain a consistent tightness around the body, but if you are just standing and breathing it is pretty accurate/sensitive at picking up the slight expansion of the chest for each breath.\nThere are quite a few DIY breath sensors I've found while researching on the internet, but they do not have all the specific information needed to get one made and connected to the Arduino yourself. Here are some of those sources I've pieced together to give you the full story in this tutorial:\nhttp://www.kobakant.at/DIY/?p=1762\nhttp://cargocollective.com/nelramon/i-Breathe\nhttps://hackingthebody.wordpress.com/2014/01/03/bluetooth-stretch-breath-sensor/\nhttp://itp.nyu.edu/~ek1669/blog/?p=769\nPlease Note: I am only a novice of electricity/circuits/arduino/coding, so I welcome any suggestions or corrections if you find any!", "title": "DIY Breath Sensor With Arduino (Conductive Knitted Stretch Sensor)", "url": "https://www.instructables.com/id/DIY-Breath-Sensor-with-Arduino-Conductive-Knitted-/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials/Tools:\nA spool of conductive yarn (I bought this kind from Sparkfun: https://www.sparkfun.com/products/12806) (UPDATE: Looks like they retired it, so this should work from Adafruit: https://www.adafruit.com/product/603 )\nA spool of elastic yarn, I used the brand HiKoo CoBaSi (I found that yarn with some stretch is better because this sensor relies on being able to expand and contract. If you use stiff yarn, the sensor won't expand and contract as well)\nVelcro ( about 6 inches... can be multiple smaller parts, it is used for securing the sensor around yourself)\nNormal sewing thread (~1 yard)\nKnitting needles (I used size: 5)\nSewing needle\nResistor Kit (x1) (A range of different resistors is needed, the one you need depends on how long your band is, and the tightness of the stitches. I don't think you'll need one smaller than 10k though. Changing the levels of resistance changes the output numbers found in the serial monitor)\nAlligator clips (x2)\nJumper Cables (x7)\nArduino Uno\nComputer (PC or MAC)\nUSB A to B cable\nVolt meter\nBread board", "step_imgs": ["https://cdn.instructables.com/F01/CHVW/IAGMK5RY/F01CHVWIAGMK5RY.LARGE.jpg", "https://cdn.instructables.com/FF8/18BV/IAI1PV1I/FF818BVIAI1PV1I.LARGE.jpg", "https://cdn.instructables.com/F1B/NH8Z/IAGMK5U2/F1BNH8ZIAGMK5U2.LARGE.jpg"], "step_title": "Step 1: Materials and Tools"}, {"step": 2, "steps_text": "Begin by knitting a 2\" wide band combining both the conductive yarn and elastic yarn.\nKnit with the conductive and elastic yarn as if it was one piece of yarn!\nYou can use a standard stitch. My band was 10 stitches across and about 30 inches long.\nIf you don't know how to knit, Youtube is your friend. :) **Tip: Find videos that are specific to your dominant hand. This one helped me: https://www.youtube.com/watch?v=b21msW3cS34", "step_imgs": ["https://cdn.instructables.com/FGG/I4HI/IAGMK5V6/FGGI4HIIAGMK5V6.LARGE.jpg", "https://cdn.instructables.com/FM1/V5RH/IAGMK5WQ/FM1V5RHIAGMK5WQ.LARGE.jpg"], "step_title": "Step 2: Knit"}, {"step": 3, "steps_text": "On one end of your knitted band sew a few inches of Velcro (I recommend using the hard/pokey Velcro half).", "step_imgs": ["https://cdn.instructables.com/FGA/JB79/IAGMK5Z5/FGAJB79IAGMK5Z5.LARGE.jpg", "https://cdn.instructables.com/F3D/NM1Z/IAGMK5ZQ/F3DNM1ZIAGMK5ZQ.LARGE.jpg"], "step_title": "Step 3: Sew Velcro to Your Knitted Band"}, {"step": 4, "steps_text": "Flip over your band and sew the other matching velcro (the soft half, if you used the hard half on the other side) onto the other end of your knitted band. You'll want the length of this velcro to be a bit longer, approx. 7 inches.\n*** Before you sew make sure when you wrap the band around yourself the velcro halves match up!", "step_imgs": ["https://cdn.instructables.com/FV0/5A9B/IAGMK60K/FV05A9BIAGMK60K.LARGE.jpg", "https://cdn.instructables.com/FFA/6OIS/IAGMK62C/FFA6OISIAGMK62C.LARGE.jpg", "https://cdn.instructables.com/FW2/HE7U/IAGMK63T/FW2HE7UIAGMK63T.LARGE.jpg"], "step_title": "Step 4: Sew More Velcro"}, {"step": 5, "steps_text": "Use the photos on this step to wire up your Arduino to the sensor.\nAttach 2 alligator clips to the knitted band, one on each end. The amount of stretch will only be measured between these 2 points. ** Be sure to clip the band securely and choose a spot where a lot of the conductive yarn is exposed, it is essential for the conductive yarn and metal clip to make contact (I've tried to check this connection with the Volt Meter, but I've found even if it is working it doesn't necessarily show that it is on the Volt Meter, I recommend wiring up the whole circuit and then seeing what the numbers look like in your serial monitor to see if it is working) **\nUse this Analog Input Tutorial provided by Arduino to help wire up your circuit. (Just substitute the photosensitive resistor with the knitted band + alligator clips, and it's the exact diagram/schematic you need).", "step_imgs": ["https://cdn.instructables.com/FBH/PAL5/IAHPD36P/FBHPAL5IAHPD36P.LARGE.jpg", "https://cdn.instructables.com/FR6/MEC0/IAHPD36Q/FR6MEC0IAHPD36Q.LARGE.jpg", "https://cdn.instructables.com/FQF/8DGB/IAI1PVD3/FQF8DGBIAI1PVD3.LARGE.jpg", "https://cdn.instructables.com/FLH/CXHA/IAI1PVDX/FLHCXHAIAI1PVDX.LARGE.jpg", "https://cdn.instructables.com/FBP/CLG8/IAI1PVE0/FBPCLG8IAI1PVE0.LARGE.jpg"], "step_title": "Step 5: Build the Circuit"}, {"step": 6, "steps_text": "If you've never used Arduino before please refer to this \"getting started\" page and download the Arduino Software (it's free!).\nOnce you have the software downloaded on your computer, open up the program and follow these steps:\nOpen up the \"AnalogReadSerial\" sketch. (File>Examples>Basics>ReadAnalogSerial).\nConnect the Arduino Uno (and attached circuit) to your computer via the USB A to B cable.\nClick \"Upload\" icon (looks like an arrow) in the sketch box (Make sure the correct board (Arduino Uno) and Serial port are selected under \"Tools\").\nKeep the Arduino connected to the computer and then click the \"Serial Monitor\" icon (Looks like a magnifying glass)\nThis should open a box called the serial monitor, and you should see a stream of numbers. Stretch the sensor and watch the numbers change!\nTROUBLE SHOOTING TIPS IF YOU DON'T SEE A STREAM OF NUMBERS:\nIf you don't see any numbers or see a series of weird characters make sure that the baud rate is set to 9600 within the serial monitor drop down menu\nMake sure all your connections are secure\nTry a different level of resistor\nTry clipping the alligator clips to a smaller section of your knitted band. If the conductive yarn is broken at some point between the alligator clips it won't work.", "step_imgs": ["https://cdn.instructables.com/FOB/6MMF/IAHPD36H/FOB6MMFIAHPD36H.LARGE.jpg", "https://cdn.instructables.com/FIE/PB8H/IAHPD36K/FIEPB8HIAHPD36K.LARGE.jpg", "https://cdn.instructables.com/FVA/4D0K/IAHPD36L/FVA4D0KIAHPD36L.LARGE.jpg", "https://cdn.instructables.com/F9G/BERQ/IAHPD3XL/F9GBERQIAHPD3XL.LARGE.jpg"], "step_title": "Step 6: Upload the Arduino Code to the Arduino"}, {"step": 7, "steps_text": "Wrap it around yourself and monitor the numbers while you breath! You may need to try different resistors to get the right range of numbers that work for your specific project.\nExperiment putting the band round different areas of your chest/stomach. You'll probablly need longer wires than the alligator clips once it is around yourself. I think it works best under your clothes, or on top of unbaggy clothes.\nNow you can take this code and sensor and modify it however you want, and apply it in a lot of different ways!\nExample idea: Make an LED change brightness with each breath.", "step_imgs": ["https://cdn.instructables.com/FN5/FVS5/IAHPD9VQ/FN5FVS5IAHPD9VQ.LARGE.jpg"], "step_title": "Step 7: Test It Out!"}], "channel": ""}, {"category": "", "description": "Fused-Filament Fabrication (FFF) or Fused-Deposition Modeling (FDM) -\"3D Printing\"- create amazing parts, but generally with visible layers. There are two main methods for smoothing those layers to obtain an injection-molded plastic look: chemical-smoothing or sanding. Chemical-smoothing is dangerous as it involves toxic and highly flammable chemicals, and sanding takes patience and well-toned hand muscles or skill with a Dremel.\nAs an alternative to these two methods, I looked to polymer clay as another form of smoothing.\n\nMy conclusion:\nApplying the clay takes patience and a little skill (with the help of \"tools\"). Depending on your level of sanding skill, applying the clay can take longer or shorter than sanding. With regards to toxicity, I'd say it's safer than chemical smoothing, but I still suggest using ventilation and a non-food-used oven when baking it.\nA major downside is the tendency for the part to shrink during the baking process. This has to be taken into consideration when creating fitted parts. The upside, is that this process can aid in attaching separate parts together permanently and can fix defects that the other two process cannot.\nFor me, this is my preferred method for smoothing, as I can apply the clay while watching TV and not have to worry about concentrating too hard (whereas with a Dremel, you need to pay close attention to what you are doing). If I get better at sanding, I may decide that applying clay is too long of a process.\nCredit:\nThe files used to illustrate the process can be found here:\nGolbat Wall Sconce by WeeksB (me) https://www.thingiverse.com/thing:3381571\nPumpkisaur Pokemon by chicagolandgeeks https://www.thingiverse.com/thing:1845663\nBulbasaur Pumpkin Tealight Remix by Blackhartfilms https://www.thingiverse.com/thing:3169901", "title": "3D Print Smoothing - Polymer Clay", "url": "https://www.instructables.com/id/3D-Print-Smoothing-Polymer-Clay/", "section": "technology", "steps": [{"step": 1, "steps_text": "Print out your desired model. This can be done on your own printer, a friend's printer, or you could use one of the many services to get files printed for you. Assemble the parts, if necessary, using your preferred form of bonding.\nDepending on the file, and the skill of the printer operator, you may find defects in your print.\nCertain defects and unwanted appearances can be solved by the polymer clay smoothing method:\nLayer lines (shown on the printed wing and assembled Golbat)\nSagging (shown on the jack-o-lantern)\nPitting\nSeam lines\nAssembly gaps\nSome incomplete or broken parts (this depends on your skills at molding clay)\nNote: Warped, distorted, or severely incomplete parts might be able to be \"fixed\" with the clay, but will likely require strong clay modeling skills and rely on sections made of solid clay.", "step_imgs": ["https://cdn.instructables.com/F6X/I5D8/JTYNH2X2/F6XI5D8JTYNH2X2.LARGE.jpg", "https://cdn.instructables.com/F0D/GSCU/JTYNGU9D/F0DGSCUJTYNGU9D.LARGE.jpg", "https://cdn.instructables.com/F9Y/ZLH9/JTYNGU76/F9YZLH9JTYNGU76.LARGE.jpg"], "step_title": "Step 1: 3D Print the Model"}, {"step": 2, "steps_text": "Tools:\nPolymer Modeling Clay\nClay Sculpting Tools\nI personally used white Craft smart Polymer Clay and just a metal spoon and a toothpick as my sculpting tools. The spoon helped me smooth and spread out the layer of clay and the toothpick allowed me to get small details, both by putting clay into tight spots and removing excess. With proper sculpting tools, like dental picks, a faster, better job can likely be performed, but are not necessary.\n\nWhen applying the clay, aim to get only enough clay onto the part to feel smooth to the touch when you brush your fingers over the part. The images are shown with the thin layer of clay they were baked with - you don't need a thick layer. I did not cover the bottom of any my parts with clay nor the inside of the jack-o-lantern so you do not need to completely cover the object in clay, just the areas you want smoothed.\nYou can also use the clay to build up missing sections, cover unwanted defects like seams or gaps in joined parts, or you add your own creative touches and features to the part. Be sure to remove any excess material that might soften or eliminate features.\nWork under the assumption that \"what you see is what you get.\" Meaning, that any non-visible features will remain not-visible, and any rough surfaces (or fingerprints!) will remain after baking. So, get the part as smooth and well defined as you can.\nTip: I found the clay to be rather crumbly at a \"room temp\" of 60\u02daF. A little heat, helps softens and makes the clay more malleable.", "step_imgs": ["https://cdn.instructables.com/FAA/E4PC/JTYNGUDQ/FAAE4PCJTYNGUDQ.LARGE.jpg", "https://cdn.instructables.com/F0Y/RU3I/JTYNGUJG/F0YRU3IJTYNGUJG.LARGE.jpg", "https://cdn.instructables.com/FQJ/58IF/JTYNGUJN/FQJ58IFJTYNGUJN.LARGE.jpg", "https://cdn.instructables.com/F5V/7Q3O/JTYNGUK1/F5V7Q3OJTYNGUK1.LARGE.jpg", "https://cdn.instructables.com/FJ8/BI8D/JTYNGUGI/FJ8BI8DJTYNGUGI.LARGE.jpg"], "step_title": "Step 2: Apply a Layer of Polymer Modeling Clay"}, {"step": 3, "steps_text": "Tools:\nOven (PLA: <170\u02daF / 77\u02daC ~ ABS: <190\u02daF / 87\u02daC)\nBaking sheet or aluminum foil\nPlace your part on a baking sheet/aluminum foil and, if you have multiple parts, spread them out so that they are not touching. Start with 30 minutes and check the parts often. Leave the parts in until they feel slightly hard.\nNote: Your parts will shrink slightly, especially if they were printed with a low infill. Adjust accordingly.\nLearn from My Mistake: Craft smart recommends baking at 275\u02daF (135\u02daC) but I found that this was much too hot for PLA. 275\u02daF is above the glass temperature and the PLA quickly becomes soft at this temperature. The top of my Golbat (shown) was baked at 275\u02daF for a fraction of their recommended time (10 minutes), and resulted in very noticeable dips in the surface. I had to re-coat the entire model in clay and re-bake at the lower temperature.\nBake Temps: Bake the parts at no more than 170\u02daF (77\u02daC) for PLA-based parts. - If you have an oven that can be set lower, PLA glass temperature is about 140\u02daF (60\u02daC) so I recommend trying 135\u02daF (57\u02daC). ABS's glass temperature is about 212\u02daF (100\u02daC), so 190\u02daF (87\u02daC) should work well.\nSafety: Polymer clay is stated as being safe, but I noticed a distasteful off-gassing smell when baking. I highly recommend using good ventilation and an oven that is not used to cook food. I also used single-use aluminum foil instead of a reusable cooking sheet for this reason.", "step_imgs": ["https://cdn.instructables.com/FYN/QONA/JTYNGUJW/FYNQONAJTYNGUJW.LARGE.jpg"], "step_title": "Step 3: Bake"}, {"step": 4, "steps_text": "Tools:\nPaints\nPaint brushes\nPallet\nYou might find you like the stone-appearance of the clay if you applied it thickly, but most likely, you wanted to smooth your part so that you could paint it. I've found that the clay works fairly well as a base layer for painting, but if you want to be certain, add a base coat of Primer first. I used acrylic paints very successfully for my models and sealed the paints with a top coat of clear satin spray paint.\nNote: The image with the Golbats, shows the difference between a painted part that had been smoothed first (bottom - grey) and a part that was not smoothed first (blue - top)", "step_imgs": ["https://cdn.instructables.com/F2M/42GM/JTYNGUKW/F2M42GMJTYNGUKW.LARGE.jpg", "https://cdn.instructables.com/FC9/J1OI/JTYNGUL2/FC9J1OIJTYNGUL2.LARGE.jpg", "https://cdn.instructables.com/FKG/JNE1/JTYNGULA/FKGJNE1JTYNGULA.LARGE.jpg", "https://cdn.instructables.com/F1M/VUYE/JTYNGULE/F1MVUYEJTYNGULE.LARGE.jpg", "https://cdn.instructables.com/FHN/M95H/JTYNGUZI/FHNM95HJTYNGUZI.LARGE.jpg"], "step_title": "Step 4: Paint"}], "channel": ""}, {"category": "", "description": "Hi, in this Instructable we will learn how to make a Musical Painting Canvas, that is, a different song sounds every time we color with a brush of each color. This is very fun and works to encourage painting in young children or also to give a special character to each tone of the work.", "title": "Musical Painting Canvas With Makey Makey", "url": "https://www.instructables.com/id/Musical-Painting-Canvas-With-Makey-Makey/", "section": "technology", "steps": [{"step": 1, "steps_text": "Tape of any kind, I used electrical tape\nFour brushes\nFour paintings of different color\nFive thin and long cables (1.5 m)\nSix cayman-type cables - alligator\nPaper sheet\nSmall towel\nA Makey Makey\nScissors", "step_imgs": ["https://cdn.instructables.com/F5X/Y14E/JTYNCORX/F5XY14EJTYNCORX.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "Peel the ends of the 5 thin cables, for this an alligator-alligator cable is used as shown in the photos.", "step_imgs": ["https://cdn.instructables.com/F7E/N1GQ/JTYNCKG9/F7EN1GQJTYNCKG9.LARGE.jpg", "https://cdn.instructables.com/FEM/XV2Q/JTYNCKHJ/FEMXV2QJTYNCKHJ.LARGE.jpg", "https://cdn.instructables.com/F5F/DAMG/JTYNCKHX/F5FDAMGJTYNCKHX.LARGE.jpg"], "step_title": "Step 2: Strip Cables"}, {"step": 3, "steps_text": "In order for the brushes to work with the Makey Makey, we must connect them to one end of each thin wire. Insert one end of the cable into the tip of the brush and then secure it with tape. We repeat the process with the 4 brushes.", "step_imgs": ["https://cdn.instructables.com/FJN/UBS4/JTYNCKHZ/FJNUBS4JTYNCKHZ.LARGE.jpg", "https://cdn.instructables.com/FTJ/MERR/JTYNCKJ9/FTJMERRJTYNCKJ9.LARGE.jpg", "https://cdn.instructables.com/F4G/9BB7/JTYNCKJL/F4G9BB7JTYNCKJL.LARGE.jpg", "https://cdn.instructables.com/FC9/F9BC/JTYNCKNQ/FC9F9BCJTYNCKNQ.LARGE.jpg"], "step_title": "Step 3: Wiring the Brushes"}, {"step": 4, "steps_text": "At the other ends of the thin wires, connect the 6 alligator - alligator cables and secure them with tape.", "step_imgs": ["https://cdn.instructables.com/FNO/697Q/JTYNCKO2/FNO697QJTYNCKO2.LARGE.jpg", "https://cdn.instructables.com/FW4/8P2S/JTYNCKTR/FW48P2SJTYNCKTR.LARGE.jpg", "https://cdn.instructables.com/FRX/BCBF/JTYNCKU7/FRXBCBFJTYNCKU7.LARGE.jpg", "https://cdn.instructables.com/F3V/ZV49/JTYNCKWH/F3VZV49JTYNCKWH.LARGE.jpg"], "step_title": "Step 4: Connect the Alligator -alligator Cables"}, {"step": 5, "steps_text": "Connect the 4 alligator - alligator cables of the brushes to the 4 arrows of the Makey Makey. Connect the remaining cable to the ground of the Makey Makey.", "step_imgs": ["https://cdn.instructables.com/FKM/9GOH/JTYNCKYQ/FKM9GOHJTYNCKYQ.LARGE.jpg", "https://cdn.instructables.com/FY9/WHMW/JTYNCL6Z/FY9WHMWJTYNCL6Z.LARGE.jpg"], "step_title": "Step 5: Connections to the Makey Makey"}, {"step": 6, "steps_text": "First, locate the sheet of paper on which you are going to paint, you can attach it with tape to the surface.\nThen, locate the screen where you will see the videos and listen to the music (Tablet, cell phone, PC or TV) close to the canvas to paint.\nFinally, connect the ground Makey Makey to the sheet of paper and connect the Makey Makey to the tablet, phone or PC.", "step_imgs": ["https://cdn.instructables.com/F2W/QBY5/JTYNCLNH/F2WQBY5JTYNCLNH.LARGE.jpg", "https://cdn.instructables.com/F52/DZN1/JTYNCM1X/F52DZN1JTYNCM1X.LARGE.jpg", "https://cdn.instructables.com/FXW/GKSH/JTYNCLFD/FXWGKSHJTYNCLFD.LARGE.jpg", "https://cdn.instructables.com/FC1/SGAX/JTYNCLUG/FC1SGAXJTYNCLUG.LARGE.jpg", "https://cdn.instructables.com/FJX/PUHM/JTYNCLGI/FJXPUHMJTYNCLGI.LARGE.jpg"], "step_title": "Step 6: Set Up the Workspace (for Children and Adults)"}, {"step": 7, "steps_text": "For the project to work, you must wet the sheet of paper with water, for this we use a small towel.", "step_imgs": ["https://cdn.instructables.com/F0C/AJOK/JTYNCLD3/F0CAJOKJTYNCLD3.LARGE.jpg", "https://cdn.instructables.com/FGZ/HF9X/JTYNCLXN/FGZHF9XJTYNCLXN.LARGE.jpg"], "step_title": "Step 7: Wet the Sheet of Paper"}, {"step": 8, "steps_text": "I made an app in Unity for PC or Android, you must download and install the application on your device for the project to work.", "step_imgs": ["https://cdn.instructables.com/FQ1/B609/JTYNCULG/FQ1B609JTYNCULG.LARGE.jpg"], "step_title": "Step 8: Install the App"}, {"step": 9, "steps_text": "When we get to this step we can already paint on our canvas!\nEvery time we paint with a different brush it will change the song that sounds.\nNote:\nThe brush connected to the arrow pointing upwards should be yellow.\nThe brush connected to the arrow pointing down must be blue.\nThe brush connected to the arrow pointing to the left should be red.\nThe brush connected to the arrow pointing to the right should be green.\nI hope that you all enjoyed this Instructable! Thanks for reading and watching.\nIv\u00e1n.", "step_imgs": ["https://cdn.instructables.com/FZJ/GOVN/JTYNCLQM/FZJGOVNJTYNCLQM.LARGE.jpg", "https://cdn.instructables.com/F4Y/MV4H/JTYNCM9N/F4YMV4HJTYNCM9N.LARGE.jpg", "https://cdn.instructables.com/F5K/2F0L/JTYNCME3/F5K2F0LJTYNCME3.LARGE.jpg"], "step_title": "Step 9: Paint and Enjoy"}], "channel": ""}, {"category": "", "description": "I have been working on converting my bicycle to an electric one using a DC motor for automatic door mechanism and for that I have also made a battery pack thats rated at 84v DC.\nNow we need a speed controller that can limit the amounbt of energy delivered to the motor from the battery pack. Most of the speed controller avliable online are not rated for that much high voltage so I decided to built one for myself. So thats whats this project is going to be, to design and built a customized PWM speed controller to controll the speed of large scale DC motors.", "title": "DIY 2000 Watts PWM Speed Controller", "url": "https://www.instructables.com/id/DIY-PWM-SPEED-CONTROLLER/", "section": "technology", "steps": [{"step": 1, "steps_text": "For this project you need basic soldering tools such as:\nA soldering iron\nSucker\nPliers and twizzers\nThe schematic, Gerber files and the list of comonents is avliable here.", "step_imgs": ["https://cdn.instructables.com/FAS/0BEG/JTENF9A8/FAS0BEGJTENF9A8.LARGE.jpg", "https://cdn.instructables.com/FOC/VJ8R/JTENEKA7/FOCVJ8RJTENEKA7.LARGE.jpg", "https://cdn.instructables.com/FGT/AA5E/JTENEKBF/FGTAA5EJTENEKBF.LARGE.jpg", "https://cdn.instructables.com/F1C/HKUR/JTENEKD8/F1CHKURJTENEKD8.LARGE.jpg", "https://cdn.instructables.com/FRL/O94B/JTENEKDI/FRLO94BJTENEKDI.LARGE.jpg"], "step_title": "Step 1: Tools Materials and Skills"}, {"step": 2, "steps_text": "Since we are aiming to con trol the speed of a DC motor for which we can use two techinquies, A buck converter which will stepdown the input voltage buts its a rather complicated one so what we have decided to go with is PWM Control (Pulse Width Modulation). The approach is simple, to control the speed the battery power is switched on and off at a high frequency. To change the speed the duty cycle or the on off time period of the switch is changed.\nNow mechanical switches are not expected to undergo such high stress so an appropriate choice for such application is an N-Channel Mosfet that are specifically made to handle moderate amount of current at high frequency.\nTo switch the mosfets we need a PWM signal which is produced by a 555 timer IC and the duty cycle of the switching signal is varied using a 100k potentiometer.\nSince we cant operate 555 timer above 15v so we incorporated a lm5008 Buck converter IC which steps down the input voltage from 84VDC to 10VDC which is used to power the timer IC and the cooling fan.\nNow to handle the large amount of current, I have used four N-Channel Mosfets that are connected in parallel.\nBesided that I have added all the complimentary components as described in the datasheets.", "step_imgs": ["https://cdn.instructables.com/FQS/FPXQ/JTYNG70F/FQSFPXQJTYNG70F.LARGE.jpg", "https://cdn.instructables.com/FCQ/XR2G/JTYNG7H8/FCQXR2GJTYNG7H8.LARGE.jpg", "https://cdn.instructables.com/FZ1/ZCMY/JTYNG7HD/FZ1ZCMYJTYNG7HD.LARGE.jpg", "https://cdn.instructables.com/FS0/CBSS/JTYNG7HI/FS0CBSSJTYNG7HI.LARGE.jpg"], "step_title": "Step 2: Designing the Speed Controller"}, {"step": 3, "steps_text": "As I finished the schematic I have decided to go with designing a dedicated PCB for the speed controller as it will not only help us to keep everything neat but I intended to design this unit so thats its capable of further modifications for my other DIY projects that uses large DC motors.\nThe idea of designing a PCB might seems to take a whole lot of efforts but believe me it worth that all when you get your hands on customized boards. So with that in mind I designed the PCB for the speed controller unit. Always try to define particular regions such as the control circuitry and the power on the other side so that when you are connecting everything together you are good to go with appropriate track width specially on the power side.\nI have also added four mounting holes which will be helpful to mount the controller and also hold the colling fan along with the heat sink above the MOSFETs.", "step_imgs": ["https://cdn.instructables.com/FHV/0IEA/JTYNG71I/FHV0IEAJTYNG71I.LARGE.jpg", "https://cdn.instructables.com/FJ2/71QY/JTYNG70I/FJ271QYJTYNG70I.LARGE.jpg", "https://cdn.instructables.com/FYK/8157/JTYNG71E/FYK8157JTYNG71E.LARGE.jpg"], "step_title": "Step 3: Designing the Printed Circuit Boards"}, {"step": 4, "steps_text": "Unlike any other customized part for your DIY Project, PCBs are surely the easiest one to get. Yes Now once we generated gerber files of our finilized PCB layout we are jjust a few clicks away from ordering our customized PCBs.\nWhat all I did is to head upto PCBWAY and after going through a bunch of options there I uploaded my gerber files. Once the deisgn is checked for any errors by their techinical team your design is forwarded to the manufacturing line. The whole process will take two days to completa and hopefully you will get your PCBs within ust a week.\nPCBWAY have made this project possible by their support so take your time and have a look at their website. They are offering Standard PCB, Quick-turn PCB, SMD etc so for discounts of upto 30% on your PCBs visit this link.\nGerber files,schematic and the BOM(Bill Of Material) for the speed controller PCB is avliable here.", "step_imgs": ["https://cdn.instructables.com/F44/9XOB/JTYNGD55/F449XOBJTYNGD55.LARGE.jpg", "https://cdn.instructables.com/F6F/CRNA/JTYNGD6Q/F6FCRNAJTYNGD6Q.LARGE.jpg", "https://cdn.instructables.com/FSY/EMAM/JTYNGD9S/FSYEMAMJTYNGD9S.LARGE.jpg", "https://cdn.instructables.com/FVC/P9AR/JTENEKAL/FVCP9ARJTENEKAL.LARGE.jpg", "https://cdn.instructables.com/FYV/IPR8/JTENEKAA/FYVIPR8JTENEKAA.LARGE.jpg"], "step_title": "Step 4: Ordering the PCBs"}, {"step": 5, "steps_text": "As expected the PCBs arrived within a week and the finish is just too good. The quality of the PCBs is absolutely flawless. Now time to gather all the components as mentioned in the BOM(Bill of Material) and drop them in place.\nTo keep things flowing we need to start with the smallest component on the PCB which in our case is LM5008 Buck converter, an SMP component. Once we sottered it using soldering braid as we dont have a hot gun to deal with SMD component, we than sottered the inductor next to it and moved towards larger components.\nOnce we are done assembling the boards, Its time to drop the 555 timer in place with the notch in correct direction.", "step_imgs": ["https://cdn.instructables.com/FXF/N8AM/JTENEKAH/FXFN8AMJTENEKAH.LARGE.jpg", "https://cdn.instructables.com/FWM/BEVM/JTENEKDE/FWMBEVMJTENEKDE.LARGE.jpg", "https://cdn.instructables.com/FMD/TXEO/JTENEKEB/FMDTXEOJTENEKEB.LARGE.jpg", "https://cdn.instructables.com/F7C/9K0T/JTENEKEF/F7C9K0TJTENEKEF.LARGE.jpg", "https://cdn.instructables.com/FRS/JL3R/JTENEKEM/FRSJL3RJTENEKEM.LARGE.jpg", "https://cdn.instructables.com/FEV/31T3/JTENEKET/FEV31T3JTENEKET.LARGE.jpg", "https://cdn.instructables.com/F1K/UWTU/JTENEKF0/F1KUWTUJTENEKF0.LARGE.jpg", "https://cdn.instructables.com/F3W/X65E/JTENEKF1/F3WX65EJTENEKF1.LARGE.jpg", "https://cdn.instructables.com/F0I/DWNR/JTENEKF5/F0IDWNRJTENEKF5.LARGE.jpg", "https://cdn.instructables.com/F0S/3TDL/JTENEKF8/F0S3TDLJTENEKF8.LARGE.jpg", "https://cdn.instructables.com/F6S/8VUW/JTENEKFE/F6S8VUWJTENEKFE.LARGE.jpg", "https://cdn.instructables.com/FCA/OMDX/JTENEKFG/FCAOMDXJTENEKFG.LARGE.jpg", "https://cdn.instructables.com/FBR/EQNZ/JTENEKFJ/FBREQNZJTENEKFJ.LARGE.jpg", "https://cdn.instructables.com/F35/DGZ9/JTENEKFK/F35DGZ9JTENEKFK.LARGE.jpg", "https://cdn.instructables.com/F4A/UQGV/JTENEKR1/F4AUQGVJTENEKR1.LARGE.jpg", "https://cdn.instructables.com/FTX/0PBH/JTENEKQO/FTX0PBHJTENEKQO.LARGE.jpg", "https://cdn.instructables.com/FJF/SHJY/JTENEKR3/FJFSHJYJTENEKR3.LARGE.jpg", "https://cdn.instructables.com/FZI/IWKH/JTENEKRC/FZIIWKHJTENEKRC.LARGE.jpg", "https://cdn.instructables.com/FWW/YA00/JTENEKRF/FWWYA00JTENEKRF.LARGE.jpg"], "step_title": "Step 5: Assembling the PCBs"}, {"step": 6, "steps_text": "With this much amount of power that we are going to deal with, obviously things are expected to heat up. So to deal with that we are going to bend the MOSFETs and mounted a 12v fan with the heat sink sandwitched inbetween.\nWith that being done, the beast of a PWM speed controller is ready to roll.", "step_imgs": ["https://cdn.instructables.com/FDO/VIN7/JTENEKRM/FDOVIN7JTENEKRM.LARGE.jpg", "https://cdn.instructables.com/FQG/JO64/JTENF6V7/FQGJO64JTENF6V7.LARGE.jpg", "https://cdn.instructables.com/FHQ/QONO/JTENEKSV/FHQQONOJTENEKSV.LARGE.jpg", "https://cdn.instructables.com/FO9/Z0ER/JTENEKRN/FO9Z0ERJTENEKRN.LARGE.jpg", "https://cdn.instructables.com/FFH/F0C5/JTENEKTO/FFHF0C5JTENEKTO.LARGE.jpg", "https://cdn.instructables.com/FM9/4T6I/JTENEKUJ/FM94T6IJTENEKUJ.LARGE.jpg"], "step_title": "Step 6: Cooling Things Up"}, {"step": 7, "steps_text": "To test the controller we are goint to use an 84v customized battery pack that we have built for our electric bicycle. The controller is temporarily connected to the battery pack and the motor that is attached to the bicycle to drive the rear wheel.\nAs I toggled the switch, the controller is powered on with the fan blowing air over the MOSFETs. As I turned the potentiometer clockwise, the motor started to rotated and gradually increasing the speed proportional to the rotation of knob.", "step_imgs": ["https://cdn.instructables.com/FBN/N1MV/JTENESAU/FBNN1MVJTENESAU.LARGE.jpg", "https://cdn.instructables.com/FC6/5N7O/JTENEKY2/FC65N7OJTENEKY2.LARGE.jpg", "https://cdn.instructables.com/FSK/UB4Q/JTENERZD/FSKUB4QJTENERZD.LARGE.jpg", "https://cdn.instructables.com/FEB/0VWV/JTENF6HH/FEB0VWVJTENF6HH.LARGE.jpg", "https://cdn.instructables.com/FEA/KTBE/JTENF6L5/FEAKTBEJTENF6L5.LARGE.jpg", "https://cdn.instructables.com/FFW/PA9X/JTENF6K7/FFWPA9XJTENF6K7.LARGE.jpg", "https://cdn.instructables.com/FI6/972P/JTENESIB/FI6972PJTENESIB.LARGE.jpg"], "step_title": "Step 7: Testing the Controller"}, {"step": 8, "steps_text": "At this stage the speed controller is ready and it went way beyound my expectations as far as the finish is concerned. The controller seems to operate easily on 84v battery pack and controlls the speed of the motor smoothly.\nBut to test this speed controller on load we need to finish our bicycle project and mount everything in place. So guys for on load performance stay tuned for the upcoming project video which is a DIY electric bicycle conversion project.\nSubscribe and stay tuned for upcoming project video.\nRegards.\nDIY King", "step_imgs": ["https://cdn.instructables.com/F3P/01D6/JTENEKV9/F3P01D6JTENEKV9.LARGE.jpg", "https://cdn.instructables.com/FJ7/41RO/JTENEKWB/FJ741ROJTENEKWB.LARGE.jpg", "https://cdn.instructables.com/F1L/7STI/JTENEKXL/F1L7STIJTENEKXL.LARGE.jpg", "https://cdn.instructables.com/FMT/OJ4M/JTENES55/FMTOJ4MJTENES55.LARGE.jpg", "https://cdn.instructables.com/F6S/DE7D/JTENES7F/F6SDE7DJTENES7F.LARGE.jpg", "https://cdn.instructables.com/FP6/BFEG/JTENF6NG/FP6BFEGJTENF6NG.LARGE.jpg", "https://cdn.instructables.com/FGY/02C6/JTENF6RI/FGY02C6JTENF6RI.LARGE.jpg"], "step_title": "Step 8: Final Results"}], "channel": ""}, {"category": "", "description": "After getting a bunch of promotional buttons, I decided to spend countless hours to design and build a machine to give them out for me.", "title": "Automatic Promotional Button Dispenser", "url": "https://www.instructables.com/id/Automatic-Promotional-Button-Dispenser/", "section": "technology", "steps": [{"step": 1, "steps_text": "The build process is outlined in this video, including how I tried to use a magnetic escapement instead of the 3D-printed \"blades\" that I eventually settled on.\nThe concept of the device is known as an escapement, and the top servo holds most of the buttons back, while the bottom servo drops one at a time.", "step_imgs": [], "step_title": "Step 1: Video"}, {"step": 2, "steps_text": "Parts list is pretty simple:\n2 standard hobby servos (Amazon 4-pack)\nCapacitive touch sensor (Amazon)\nArduino Uno\nArduino sensor shield\nCapacitor for sensor shield\n3D-printed slide\nScrews for servo attachment\nBase\nNote strange initial sketch. Also considered a linkage-driven pusher mechanism.\nAmazon links are affiliate.", "step_imgs": ["https://cdn.instructables.com/FWJ/33UF/JS0OPEMP/FWJ33UFJS0OPEMP.LARGE.jpg", "https://cdn.instructables.com/FHR/LMBI/JS0OPGRV/FHRLMBIJS0OPGRV.LARGE.jpg"], "step_title": "Step 2: Parts Needed"}, {"step": 3, "steps_text": "Files for the slide can be found on GitHub here. Note that you'll need to file things down to get things to slide smoothly. The three sections are attached together with CNA glue (AKA super glue), and the holes for servo attachment will need to be tapped (best done before gluing everything together).\nButtons used were 1.25\" diameter from Sticker Mule. This code/link will get you and I a $10 discount on an order if you so desire.", "step_imgs": ["https://cdn.instructables.com/FBM/XPW2/JS0OPI3D/FBMXPW2JS0OPI3D.ANIMATED.LARGE.gif"], "step_title": "Step 3: Print Slide"}, {"step": 4, "steps_text": "I won't outline the base making process exactly, as it could be done many different ways. The one thing you'll need to watch out for is that there's not too much space for the capacitive sensor to act through. I made a cavity with a router to take the spacing down to about 1/8 of an inch.", "step_imgs": ["https://cdn.instructables.com/FB9/2G89/JS0OPS70/FB92G89JS0OPS70.LARGE.jpg", "https://cdn.instructables.com/FGM/ZQQ2/JS0OPRXB/FGMZQQ2JS0OPRXB.LARGE.jpg", "https://cdn.instructables.com/FLT/URIZ/JS0OPRXC/FLTURIZJS0OPRXC.LARGE.jpg", "https://cdn.instructables.com/F6K/VRB5/JS0OPS26/F6KVRB5JS0OPS26.LARGE.jpg"], "step_title": "Step 4: Make Base and Assemble"}, {"step": 5, "steps_text": "The electrical setup and code is very simple. Just two outputs for each servo and an input for the capacitive touch sensor. Code is found here.\nNote capacitor hooked into sensor shield to help with power spikes. Not sure if this is necessary, and transistors would be a better solution anyway. Feel free to improvise/improve.", "step_imgs": ["https://cdn.instructables.com/FK4/XQJP/JS0OPRSH/FK4XQJPJS0OPRSH.LARGE.jpg"], "step_title": "Step 5: Wire and Program"}, {"step": 6, "steps_text": "So far, the device has survived one Mini Maker Faire, and hopefully it'll make it's way to many others!", "step_imgs": ["https://cdn.instructables.com/FLT/WZX1/JS0OPV8C/FLTWZX1JS0OPV8C.ANIMATED.LARGE.gif"], "step_title": "Step 6: Enjoy!"}], "channel": ""}, {"category": "", "description": "In this DIY guide I will show you how to make your own wireless weather station!\nMy communication protocol will allow you to have up to 10 sensor stations in your wireless network, but you can change and extend it up to 254 stations! The RF technology and the module that we used will allow you to have a long range distance between your sensors and master station that will have in your room. You can power on your sensor stations with 5V battery (or even with 3.7V) or a solar panel system!\nEvery \"Sensor Station\" can have a:\nPhotocell / photoresistor Light sensor\nDHT-22/DHT11 Temperature/Humidity Sensor\nDS12B20 Waterproof Temp Sensor\nIn this project I decided to make my own PCB that is based on Arduino UNO microcontroller - Atmega328p.\nBellow you will find the electronic schematic with PCB layout so you can easily produce it!\nLet's get started!\n~Projects can be found here:\nhttps://www.ardumotive.com/arduino-wireless-weathe...\n\nVideo presentation:", "title": "Arduino Based Wireless (RF) Weather Station Network", "url": "https://www.instructables.com/id/Arduino-Based-Wireless-RF-Weather-Station-Network/", "section": "technology", "steps": [{"step": 1, "steps_text": "For Master Station you will need:\nOur custom PCB circuit *\nAtmega328 (with Arduino UNO bootloader)\n28 dip socket\n16 MHz crystal oscillator\n2x22 pF capacitors\n1x100nF ceramic capacitor\n1x10uF Electrolytic Capacitor\n1x10K resistor\nScrew terminal 2P 2.54mm\n2xPin Header\n1x5 Female 2.54mm\n----> Or use an Arduino board with breadboard\nBasic 8x2 Character LCD - Black on Green 5V\nWireless Serial Transceiver Module HC12\nTrimmer 20kOhm\nDHT-22 sensor (or any other DHT family sensor)\nPush Button Latching - 12.5mm\nDC Power\nJackOn/Off SW (lcd back light)\n~Power by 5V power adapter or USB powerbank~\nFor every Slave - Sensor Station you will need:\nOur custom PCB circuit *\nAtmega328 (with Arduino UNO bootloader)\n28 dip socket\n16 MHz crystal oscillator\n2x22 pF capacitors\n1x100nF ceramic capacitor\n1x10uF Electrolytic Capacitor\n1x10K resistor\nScrew terminal 2P 2.54mm\n2xPin Header\n1x5 Female 2.54mm\n----> Or use an Arduino board with breadboard\nWireless Serial Transceiver Module HC12\nOne of the following sensors:\nDHT-22 sensor (or any other DHT)\nDS18B20 (Waterproof) and 1x4.7K Resistor\nPhotocell and 1x 10K Resistor\n~Power by 5V power adapter or USB powerbank or battery pack~\n*You will also need a TTL to USB module or an Arduino UNO board for the programming procedure.", "step_imgs": ["https://cdn.instructables.com/FWH/V7S7/JTYNCW7A/FWHV7S7JTYNCW7A.LARGE.jpg"], "step_title": "Step 1: What You Will Need - Hardware Part List"}, {"step": 2, "steps_text": "Find the electronic and pcb schematic at link below:\nMaster Station:\nhttps://easyeda.com/mi.vasilakis/Wireless-Weather-...\n\nSlave/Sensor Station:\nhttps://easyeda.com/mi.vasilakis/slave\nYou can make any changes you want!", "step_imgs": ["https://cdn.instructables.com/F09/L5Q9/JTYNCW81/F09L5Q9JTYNCW81.LARGE.jpg", "https://cdn.instructables.com/FA5/32EZ/JTYNCW7B/FA532EZJTYNCW7B.LARGE.jpg", "https://cdn.instructables.com/FFP/FOFY/JTYNCW7D/FFPFOFYJTYNCW7D.LARGE.jpg", "https://cdn.instructables.com/FE1/QGW4/JTYNCW7Q/FE1QGW4JTYNCW7Q.LARGE.jpg"], "step_title": "Step 2: The Circuit - Electronic and PCB Schematic"}, {"step": 3, "steps_text": "--> For Master Station\nLCD\nRS pin to Arduino Pin 3\nEN pin to Arduino Pin 4\nD4 pin to Arduino Pin 5\nD5 pin to Arduino Pin 6\nD6 pin to Arduino Pin 7\nD7 pin to Arduino Pin 11\nDHT Sensor\nData pin to Arduino Pin 2\nHC-12\nTX pin to Arduino Pin 8\nRX pin to Arduino Pin 9\n--> For Slave/Sensor Station\nDHT Sensor\nData pin to Arduino Pin 8\nDS18B20 Sensor\nData pin to Arduino Pin 2\nPhotocell\nto Arduino A0", "step_imgs": ["https://cdn.instructables.com/FSY/A2I6/JTYNCW7R/FSYA2I6JTYNCW7R.LARGE.jpg", "https://cdn.instructables.com/FNY/8HDB/JTYNCW7V/FNY8HDBJTYNCW7V.LARGE.jpg", "https://cdn.instructables.com/FEU/VZ0B/JTYNCW80/FEUVZ0BJTYNCW80.LARGE.jpg", "https://cdn.instructables.com/F9J/G9GP/JTYNCW82/F9JG9GPJTYNCW82.LARGE.jpg", "https://cdn.instructables.com/FE1/BGSZ/JTYNCW7S/FE1BGSZJTYNCW7S.LARGE.jpg"], "step_title": "Step 3: Arduino Connection Pins"}, {"step": 4, "steps_text": "How to program our PCBs:\nConnect your circuit with TTL to USB module with 5 cables to the programming header. The pins RX and TX must be cross-connected.\nNOTE: If you are using the Arduino UNO board make sure to remove the ATmega328 IC from it first and connect the headers RX to RX and TX to TX pins of the board. The RS pin must be connected to Arduino UNO reset pin.\n-------------CONFIGURATION-----------------\nMaster\n/***CONFIGURATION ****/\nconst long interval = 5000; // ms\nconst int slaves = 1; //Number of slaves (max 16) (go to line 95 and complete the if statement for every sensor) /*********************/\nSlave\n/***CONFIGURATION ****/\nconst long interval = 5000; // ms\nString ADDR = \"0\"; //Device address from 0 to f #define SENSOR_TYPE 1 // Type of sensor in slave unit. Can be 1 for DHT, 2 for DS18B20 or 3 for PHOTOCELL\n/*********************/\nDownload the code from here and open it with Arduino IDE. Inside you will also find the libraries for this project.", "step_imgs": [], "step_title": "Step 4: The Code"}, {"step": 5, "steps_text": "Download and print the case of the master and slave stations with your 3D printer!", "step_imgs": ["https://cdn.instructables.com/FND/1RNV/JTYNCW88/FND1RNVJTYNCW88.LARGE.jpg", "https://cdn.instructables.com/FOF/4UTM/JTYNCW87/FOF4UTMJTYNCW87.LARGE.jpg", "https://cdn.instructables.com/FJX/WL3F/JTYNCW7E/FJXWL3FJTYNCW7E.LARGE.jpg", "https://cdn.instructables.com/FSZ/7KAR/JTYNCW7Y/FSZ7KARJTYNCW7Y.LARGE.jpg", "https://cdn.instructables.com/F18/GHTO/JTYNCW7X/F18GHTOJTYNCW7X.LARGE.jpg", "https://cdn.instructables.com/FTQ/M9HI/JTYNCW7H/FTQM9HIJTYNCW7H.LARGE.jpg"], "step_title": "Step 5: 3D Parts"}, {"step": 6, "steps_text": "I hope you liked this, let me know in the comments !!!", "step_imgs": ["https://cdn.instructables.com/FPB/51XY/JTYNCW7W/FPB51XYJTYNCW7W.LARGE.jpg", "https://cdn.instructables.com/F83/ITNZ/JTYNCW7Z/F83ITNZJTYNCW7Z.LARGE.jpg", "https://cdn.instructables.com/FAP/O4DE/JTYNCW7F/FAPO4DEJTYNCW7F.LARGE.jpg", "https://cdn.instructables.com/FW8/5K80/JTYNCW7C/FW85K80JTYNCW7C.LARGE.jpg"], "step_title": "Step 6: Well Done!"}], "channel": ""}, {"category": "", "description": "Time for a fun-filled, easy-peasy Japan-easy to make a project! Today, we\u2019re going to show you how to make an LED POV Display. POV, an acronym for the persistence of vision, is a kind of optical illusion in which a visual image seems to persist even when the light from it ceases to enter our eyes and this makes it super cool! You can display any text or image that you want to in the display.\nSounds awesome, right? So, why are you still here?! Let\u2019s begin right away!", "title": "Persistence of Vision (PoV) Display Using Arduino", "url": "https://www.instructables.com/id/Persistence-of-Vision-PoV-Display-Using-Arduino/", "section": "technology", "steps": [{"step": 1, "steps_text": "Hardware\nevive\nArduino Nano\nIR Sensor\nGeneral Purpose Board\nLEDs\nResistors\nDC Motor\nBattery\nWires\nGlue Gun\nSoldering Iron\nWhite Paper\nSome 3D Printed Parts\nSoftware\nArduino IDE", "step_imgs": ["https://cdn.instructables.com/FRK/RBQW/JTYND13O/FRKRBQWJTYND13O.LARGE.jpg"], "step_title": "Step 1: List of Components Needed"}, {"step": 2, "steps_text": "What is Persistence of Vision?\nPersistence of Vision, or POV, occurs when a visual image seems to persist continuously when a stream of light is repeatedly interrupted for very brief instances and does not enter our eyes during those durations.\nHow does the Persistence of Vision works?\nThe human eye cannot process more than 10-12 images per second. When a series of images more is presented in quick succession, it gives us the illusion that the images are in motion.\nThis is the basic principle behind the making of the animated movies.", "step_imgs": [], "step_title": "Step 2: Understanding Some Basic Concepts"}, {"step": 3, "steps_text": "Here we are going to 3D Print the holder to which we will be fixing our complete assembly. Download the .STL given below.\nThe Holder consists of two parts.\nThe Rotating Part\nThe Stable Part", "step_imgs": ["https://cdn.instructables.com/FTU/KEH5/JTYND13J/FTUKEH5JTYND13J.LARGE.jpg"], "step_title": "Step 3: Printing the 3D Printed Part"}, {"step": 4, "steps_text": "Once you have the 3D Printed parts with you, its time to start the making.\nTake the General Purpose Board and cut it in the size that fits the Rotating part.\nOnce done, its time to add the LEDs.\nIn this project, I have used 8 red LEDs, you can use as many and of any color you want.\nOnce done, short (common) the cathode terminal of all the LEDs by soldering them on the GPB.\nAdd resistors to protect the LEDs from blowing up due to high voltage supply (5V). I have used the 220ohm resistors. Solder one end of each resistor to the anode terminal or positive leg of each LED.\nSolder jumper cables to the second leg of each resistor.", "step_imgs": ["https://cdn.instructables.com/FGI/CG24/JTYND14H/FGICG24JTYND14H.LARGE.jpg", "https://cdn.instructables.com/FLA/VYW6/JTYND14Q/FLAVYW6JTYND14Q.LARGE.jpg", "https://cdn.instructables.com/FZD/AQ4Z/JTYND14M/FZDAQ4ZJTYND14M.LARGE.jpg"], "step_title": "Step 4: Assembling the LEDs"}, {"step": 5, "steps_text": "Connect all the LEDs to Arduino Nano as given below:\nLED0: D2 of nano\nLED1: D3 of nano\nLED2: D4 of nano\nLED3: D5 of nano\nLED4: D6 of nano\nLED5: D7 of nano\nLED6: D8 of nano\nLED7: D9 of nano\nCommon cathode: Ground of nano", "step_imgs": ["https://cdn.instructables.com/F52/RDLV/JTYND14O/F52RDLVJTYND14O.LARGE.jpg"], "step_title": "Step 5: Connection With Arduino Nano"}, {"step": 6, "steps_text": "Attach the DC Motor to the given space in the holder.\nPower the DC Motor using evive.", "step_imgs": ["https://cdn.instructables.com/FQV/SPB2/JTYND14D/FQVSPB2JTYND14D.LARGE.jpg"], "step_title": "Step 6: Attaching the DC Motor"}, {"step": 7, "steps_text": "It's time to add the IR Sensor.\nAs we need to indicate the beginning from where the text should be written. Attach a small piece of white paper to the steady assembly, which will be detected by the IR Sensor.\nVarying the place of the paper leads to a change in the position of the text displayed.\nConnect it to Nano:\nGND: GND of nano\nVin: 5v of nano\nOut: D10 of nano", "step_imgs": ["https://cdn.instructables.com/FZR/0VJU/JTYND14I/FZR0VJUJTYND14I.LARGE.jpg", "https://cdn.instructables.com/FB0/F1JR/JTYND152/FB0F1JRJTYND152.LARGE.jpg", "https://cdn.instructables.com/F70/ET8N/JTYNG7EH/F70ET8NJTYNG7EH.LARGE.jpg"], "step_title": "Step 7: Adding IR Sensor"}, {"step": 8, "steps_text": "We need to power up the Nano. For that, connect the battery to it.\nOnce done, fix the Nano into the Rotating Part.\nFasten the Rotating Part to the holder.", "step_imgs": ["https://cdn.instructables.com/FY0/XPF2/JTYND14Y/FY0XPF2JTYND14Y.LARGE.jpg", "https://cdn.instructables.com/FHI/MQJG/JTYND13K/FHIMQJGJTYND13K.LARGE.jpg", "https://cdn.instructables.com/FDL/I7Y8/JTYND6J9/FDLI7Y8JTYND6J9.LARGE.jpg"], "step_title": "Step 8: Completing the Assembly."}, {"step": 9, "steps_text": "Upload the following code to Arduino Nano:", "step_imgs": [], "step_title": "Step 9: Arduino Code"}, {"step": 10, "steps_text": "When the IR sensor detects the white paper, the LEDs start glowing and create the illusion that something is displayed by the LED. This is due to the persistence of vision, where the LEDs turn on and off in such a way that the different images overlap each other forming letters.", "step_imgs": [], "step_title": "Step 10: Working"}, {"step": 11, "steps_text": "With this, your very own LED POV Display is all set to display the message of your choice!", "step_imgs": [], "step_title": "Step 11: Conclusion"}], "channel": ""}, {"category": "", "description": "This project shows how to upcycle a pallet and make a loom of its wooden planks, using some additional parts (the weaving comb and the ratchet gears) from a 3D-printer.\nBy using two somewhat contradictionary materials like wood, which is often seen as \"good\" material because its a natural stuff and secondly Plastics (ABS) as a synthetic material which is often seen as \"evil\", i wanted to show, that good or evil is never an attribute of a material itself, but merely, that it depends on what the humans will do with it.\nIf you use it in a creative or productive manner (like here with weaving), where it can be used over and over for eternities, then even the plastic is ok. But it is not ok, when we use it as one-way packaging material and it ends up swimming in the pacific ocean and there building an floating island of one third the size of Europe. So its all about our responsibility how we deal with the things.\n\nFurthermore i wanted to demonstrate by this project how we can reuse and upcycle wood materials from old paletts and that \"up-cycling\" is even better than \"re-cycling\" (eg. burning the palett wood).\nBut that are just my personal ambitions which motivated me for doing this project. If you have no pallet available you can also use regular softwoods like spruce, fir or pine (or even hartwoods) with a thickness of 20mm. If only 18mm is available it will also work.", "title": "OHLOOM - an Open Hardware Loom", "url": "https://www.instructables.com/id/OHLOOM-an-Open-Hardware-Loom/", "section": "technology", "steps": [{"step": 1, "steps_text": "Any pallet with measurements conform to the standardized \"euro-pallet\"-format should be appropriate. Here i use a pallet which is no standard-format, but fullfills the most importantant points, like having up to 14.5cm wide planks, with a thickness of 22mm, that will give us 20mm when planed.\nAt first you have to dissassemble the pallet by the help of a crowbar (or two). Remove any nails from the woodplanks by using a hammer and pliers. Then the planks should be planed onto a thickness of 20mm. This can be done by a jointer machine or manually by a carpenter's plane. If neither of this tools is available to you, then you can of course also buy some appropriate planks (2cm thick, 15cm width, 60cm long) from a hardware store. But the upcycling-process is part of the fun ;)\nCut the planks to length and width, according to the plans in step 3. At the picture are also shown two wooden rounded bars from beechwood, which i bought initially. But then later i decided to make each single wooden part from the pallet and i replaced the rounded bars by two more octagonal bars wich i made from two glued-together wood-stripes. The octogonal profile is even more better for the weaving.", "step_imgs": ["https://cdn.instructables.com/FPZ/O2C5/INUJO2LA/FPZO2C5INUJO2LA.LARGE.jpg", "https://cdn.instructables.com/FGB/YHCI/INUJO2LE/FGBYHCIINUJO2LE.LARGE.jpg", "https://cdn.instructables.com/F96/UDG6/INUJO2LT/F96UDG6INUJO2LT.LARGE.jpg", "https://cdn.instructables.com/FAS/ZJAF/INUJO2LX/FASZJAFINUJO2LX.LARGE.jpg"], "step_title": "Step 1: Upcycling a Pallet"}, {"step": 2, "steps_text": "Glue together two small planks of XXmm length, 40mm width and 20mm thickness. You get a square profile with 40x40mm. Cut this to 35x35mm on a table-saw.\nThen remove the edges with a hand-planer in a manner that you get an octogonal profile.\nAfterwards round each last 10cm of each end of the rod with the planner or a sanding machine to a diameter of 35 mm.\nAlternatively you can also use a cylindrical wooden shaft with 35mm diameter and 710 mm length.", "step_imgs": ["https://cdn.instructables.com/FOO/36M4/INUJO4N6/FOO36M4INUJO4N6.LARGE.jpg", "https://cdn.instructables.com/FDL/BJ5K/INUJO4N7/FDLBJ5KINUJO4N7.LARGE.jpg"], "step_title": "Step 2: Make a Warp- and a Cloth-Beam"}, {"step": 3, "steps_text": "The frame-side is made from a 20 mm plank with 58x14cm and has some drilling-holes, according to the plan. This part is also available as fcstd-file (FreeCAD).\nThe comb-holder is a small peace of 118x60mm and can easily be cuttet from the planks. It will be mounted to the frame-side and has coded the up and down moves into its gaps-sizes.", "step_imgs": ["https://cdn.instructables.com/FZ9/MX19/INUJODTE/FZ9MX19INUJODTE.LARGE.jpg", "https://cdn.instructables.com/F1W/U8DR/INUJOFAL/F1WU8DRINUJOFAL.LARGE.jpg", "https://cdn.instructables.com/F91/WTYN/INUJOFFW/F91WTYNINUJOFFW.LARGE.jpg", "https://cdn.instructables.com/F8U/NAYB/INUJOG0S/F8UNAYBINUJOG0S.LARGE.jpg", "https://cdn.instructables.com/F7X/AVB4/INUJODTI/F7XAVB4INUJODTI.LARGE.jpg", "https://cdn.instructables.com/FS1/2CBT/INUJOFKB/FS12CBTINUJOFKB.LARGE.jpg"], "step_title": "Step 3: The Frame-side"}, {"step": 4, "steps_text": "The Weaving Comb and the Ratchet-Gear and the end-rings are made from a 3D-printer. I was too lazy to make these parts from wood ;) The ABS-material is stable and strong enough for this task of weaving. You can find the needed construction filess as .stl-files for printing and as .fcstd FreeCAD-files in the source-package.", "step_imgs": ["https://cdn.instructables.com/FLR/8IDD/INUJOS4J/FLR8IDDINUJOS4J.LARGE.jpg", "https://cdn.instructables.com/FOL/O7H3/INUJOS7A/FOLO7H3INUJOS7A.LARGE.jpg", "https://cdn.instructables.com/FGF/ZYMO/INUJOSAV/FGFZYMOINUJOSAV.LARGE.jpg", "https://cdn.instructables.com/F8G/HTWE/INUJOTWB/F8GHTWEINUJOTWB.LARGE.jpg", "https://cdn.instructables.com/FBJ/2CJ2/INUJOTZ3/FBJ2CJ2INUJOTZ3.LARGE.jpg"], "step_title": "Step 4: The Weaving Comb and the Ratchet-Gear"}, {"step": 5, "steps_text": "Start with mounting the combholder to the frame sides with two 35mm woodscrews. Then place the two crosslink parts between the sides and put the Warpbeam and the clothbeam shafts into the holes. Connect the sideparts to the crosslinks with two 60mm woodscrews on each side.\nThen move the ratchetwheels and the clamprings onto the shaftends and fix it with a M6x70 cylinderscrew and two nuts.\n\nNow bind the Stringstick (for connecting the warp strings) on the clothbeam like in the above photo.", "step_imgs": ["https://cdn.instructables.com/FT9/MASJ/JTWSWV2D/FT9MASJJTWSWV2D.LARGE.jpg", "https://cdn.instructables.com/F6A/HOSC/JTWSWV29/F6AHOSCJTWSWV29.LARGE.jpg", "https://cdn.instructables.com/FM3/WIDY/JTWSWW8T/FM3WIDYJTWSWW8T.LARGE.jpg"], "step_title": "Step 5: Assembly of the Frame"}, {"step": 6, "steps_text": "For assembling the comb hold the two slotbeams in parallel but facing the slot towards each other. Then put the 4 3D-printed comb-modules into the slot so that they build a homogenious comb of about 400mm length.\nConnect the beams with two threaded rods at each end, which you fix with the help of two M8 nuts. The theraded rods act here also as a distance holder for the slotbeams and build a kind of frame with them together.", "step_imgs": ["https://cdn.instructables.com/FMZ/CB98/JTWSWV0R/FMZCB98JTWSWV0R.LARGE.jpg", "https://cdn.instructables.com/FZ9/S7VP/JTWSWUZA/FZ9S7VPJTWSWUZA.LARGE.jpg", "https://cdn.instructables.com/FUU/NDP7/JTWSWUWI/FUUNDP7JTWSWUWI.LARGE.jpg"], "step_title": "Step 6: Assembly of the Weaving Comb"}, {"step": 7, "steps_text": "Next mount the OHLOOM to a table with a clamp and heddle the warp.\nIts important to note, that the length of the warp can be far longer like the looms length, like 2 or 3 m. This is because the yarn on one side and the fresh woven cloth on the other side can be wrapped around the warpbeam and the clothbeam by simply turning it after loosening the ratchet pawl. Then you have to bring some tension into the warp before putting it back into place.", "step_imgs": ["https://cdn.instructables.com/F70/VJDE/JTWSWUUU/F70VJDEJTWSWUUU.LARGE.jpg", "https://cdn.instructables.com/F6H/07KG/JTWSWUSI/F6H07KGJTWSWUSI.LARGE.jpg", "https://cdn.instructables.com/FBW/0VI3/JTWSWUOU/FBW0VI3JTWSWUOU.LARGE.jpg"], "step_title": "Step 7: Heddle the Warp"}, {"step": 8, "steps_text": "Prepare the ends of the shuttle like in the photo above. It is important to smooth the edges by rounding them with a file or sandpaper. Sharp edges could otherwise damage the yarn.\n\nThen wind some yarn onto the shuttle and start weaving.", "step_imgs": ["https://cdn.instructables.com/FJY/9879/JTWSWUNW/FJY9879JTWSWUNW.LARGE.jpg", "https://cdn.instructables.com/FEL/16LN/JTWSWUMV/FEL16LNJTWSWUMV.LARGE.jpg", "https://cdn.instructables.com/FJQ/1GOG/JTYNA8RX/FJQ1GOGJTYNA8RX.LARGE.jpg", "https://cdn.instructables.com/FZT/6LVG/JTYNA8UD/FZT6LVGJTYNA8UD.LARGE.jpg"], "step_title": "Step 8: The Shuttle for Weaving"}, {"step": 9, "steps_text": "An OHLOOM project page in german language can be found at:\nhttps://wiki.opensourceecology.de/Open_Hardware-We...", "step_imgs": ["https://cdn.instructables.com/F6C/E94V/JTYN7KST/F6CE94VJTYN7KST.LARGE.jpg"], "step_title": "Step 9: BOM and Sources"}], "channel": ""}, {"category": "", "description": "What is one of the first pieces of advice on the internet for when your brand new, (maybe) shiny K40 laser cutter shows up? Install interlock switches!\nWhat is an interlock switch? Basically just a switch (in our case, a microswitch), that is mounted near the lids of the machine. If the machine is running and you lift up any of the lids, the switch will disengage and cut power to the machine. The functional concept is extremely similar to an emergency stop button, except you don't, need to press anything.\nSo as I patiently researched which machine I would buy, I also was building up a list of upgrades that were going to happened before the laser ever turned on. Safety first! The main problem I discovered about installing interlock switches is that there isn't too many good guides that are (1) simple; (2) written for non-electrical engineers; (3) have good documentation.\nSo this guide is for all the people out there that want a 100% effective, quick, and safe way to wire up interlock switches for your K40 laser.\nRequired Parts:\n(3) End-Stop Style Microswitches \u2014 Commonly found on 3D printers, especially Prusa kits. You can in theory just use plain jane microswitches, but I decided to spend the 5-6 bucks to get these that are mounted on the boards and come wired ready to go. Also, Don from Don's Laser Cutter Things, has a schematic for an end-stop switch that has some more components on it. Honestly, not sure why, but I'm rolling with Don.\nSmall, Blank PCB \u2014 I happened to have one of these Adafruit ones laying around that I used\nJumper Wire \u2014 I like getting solid core wire for these\nMale Header Pins\n2 Pin Screw Terminal Mount \u2013 In general, when I get to the making the PCB section, you can substitute these things for whatever you prefer or have on hand.\n3M Mounting Tape (you can always drill holes and bolt the switches on)\nHeat Shrink Tubing (optional, but do yourself a favor and get some)\nRequired Tools:\nSoldering Iron (you could probably pull this off without one, but come on, you will need one soon enough if you bought yourself a K40)\nWire Strippers, Wire Cutters, Needle Nose Pliers (when don't you need these things??)\nScrew driver\nONE IMPORTANT FINAL NOTE!\nMy machine came with an emergency stop switch, which I am going to be tapping into for our wiring, which also makes it very easy. If you don't have an e-stop, you'll have to proceed at your own risk in terms of slicing the positive wire that runs into the power switch. Easy enough, but I won't be showing that.", "title": "How to Make Interlock Safety Switches for K40 Laser Cutter", "url": "https://www.instructables.com/id/How-to-Make-Interlock-Safety-Switches-for-K40-Lase/", "section": "technology", "steps": [{"step": 1, "steps_text": "Alright, so let's get going with the electrical.\nOur methods for installing interlock switches will be to tap into the emergency stop button on the machine. My crude post-it note drawings explain.\nWe are going to...\nTake off the wire going into the e-stop from the PSU\nRun that wire into one of our interlock switches\nRun wire between each switch (parallel) so each switch, including the e-stop, will need to be closed in order for the machine to work.\nThere were so many other methods people proposed, using magnetic reed switches, and all sorts of stuff. This seems to be pretty foolproof.", "step_imgs": ["https://cdn.instructables.com/FSH/SQ41/JTYNCG6B/FSHSQ41JTYNCG6B.LARGE.jpg", "https://cdn.instructables.com/FLW/NJYC/JTYNCG06/FLWNJYCJTYNCG06.LARGE.jpg", "https://cdn.instructables.com/FE4/GBM3/JTYNCFZB/FE4GBM3JTYNCFZB.LARGE.jpg", "https://cdn.instructables.com/F21/EGCF/JTYNCFZ5/F21EGCFJTYNCFZ5.LARGE.jpg"], "step_title": "Step 1: Step 1: Understanding How the Interlocks Will Be Wired"}, {"step": 2, "steps_text": "So the first two pictures you can almost imagine that being our e-stop. Even though you press in an e-stop button to engage it, when it is not pressed down, it is actually allowing current to flow right through it.\nTo make sure what I wanted to do was truly the right way to go, I did a quick experiment using a breadboard and a few more microswitches I had around.\nFirst I wired up 1 microswitch (call this our e-stop switch), and it worked. Then I added 3 more microswitches to represent each of the 3 switches we will be adding. They are wired just like my post-it note schematic in the first part. Everything worked and I was confident everything would work fine.\nThe final test I did, was grabbing one of my end-stops and some alligator clips and actually hooking it up to the e-stop and turning on the machine with one interlock switch to see if it worked as planned. Yep, all good.\nNow let's make our little break out board.", "step_imgs": ["https://cdn.instructables.com/FS8/UQMV/JTYNBTEQ/FS8UQMVJTYNBTEQ.LARGE.jpg", "https://cdn.instructables.com/F5K/0FL5/JTYNBTJ0/F5K0FL5JTYNBTJ0.LARGE.jpg", "https://cdn.instructables.com/FK2/VYYL/JTYNBTP7/FK2VYYLJTYNBTP7.LARGE.jpg", "https://cdn.instructables.com/FLQ/4P5M/JTYNBTP8/FLQ4P5MJTYNBTP8.LARGE.jpg", "https://cdn.instructables.com/FAE/AM4I/JTYNBTPT/FAEAM4IJTYNBTPT.LARGE.jpg", "https://cdn.instructables.com/FAW/0UVH/JTYNBU6F/FAW0UVHJTYNBU6F.LARGE.jpg", "https://cdn.instructables.com/FA9/7JVO/JTYNBU8D/FA97JVOJTYNBU8D.LARGE.jpg", "https://cdn.instructables.com/FD6/TGLP/JTYNBU9W/FD6TGLPJTYNBU9W.LARGE.jpg"], "step_title": "Step 2: Step 2: Demonstration of How the System Works"}, {"step": 3, "steps_text": "This part does assume you have some basic electronic skills and know how to solder and make simple, hand-made PCBs.\nThe board I made was super simple. I wired up 4 sets of 3 male header pins on the PCB and soldered them down.\nI then ran jumper wired in between each switches connection, once again, similar to my post-it note schematic, and how we wired the switches together on the breadboard.\nI put 4 sets on there, you only need to do 3 though. I put a 4th on there as in the future I want to add a water flow sensor to my system and I can plug it right in there. I put a little homebrewed jumper those pins.\nSolder on your 2-Pin Screw Terminal Connector and wire each end to the start and end of the interlock switch header pins.\nIf this isn't self-explanatory, please leave a comment.\nI think just added some 3M mounting tape to the back of it. I like using this stuff because its crazy strong, and it acts as a good insulator when mounting to metal stuff like the case of this (poorly) wired laser cutter.\nAs you can see in the last pics, I just took the wire going into the e-stop, cut it in half, took the side with the wire crimp and added a length of wire to that and also added a length of wire to the other end of the cut wire.\nAlmost done!", "step_imgs": ["https://cdn.instructables.com/FJA/CLA4/JTYNBUBM/FJACLA4JTYNBUBM.LARGE.jpg", "https://cdn.instructables.com/FRB/SG3S/JTYNBUCV/FRBSG3SJTYNBUCV.LARGE.jpg", "https://cdn.instructables.com/FIG/FEPU/JTYNBUEA/FIGFEPUJTYNBUEA.LARGE.jpg", "https://cdn.instructables.com/F73/CNL8/JTYNBULX/F73CNL8JTYNBULX.LARGE.jpg", "https://cdn.instructables.com/FZD/7S1P/JTYNBUN6/FZD7S1PJTYNBUN6.LARGE.jpg", "https://cdn.instructables.com/FA8/XFUC/JTYNBUR7/FA8XFUCJTYNBUR7.LARGE.jpg", "https://cdn.instructables.com/F74/W0PO/JTYNBUVA/F74W0POJTYNBUVA.LARGE.jpg"], "step_title": "Step 3: Step 3: Making a Breakout Board for Your Switches"}, {"step": 4, "steps_text": "And that's about it!\nPlug the e-stop wires into the appropriate side of the screw terminal.\nPlug in the interlocks (make sure the orientation is correct.\nAnd this is where I will let your ingenuity and inventiveness take over. You can see where I decided to mount two of mine for the front lids. I need to add something to make them engage when the lid is closed still. If you have gottten this far, I'm sure you can figure out how to mount them. If you have a 3D printer, go over to thingiverse, there are lots of models out there as well.\nHope this was helpful and happy Chinese laser cuttin'!", "step_imgs": ["https://cdn.instructables.com/FBC/B3U8/JTYNBUVT/FBCB3U8JTYNBUVT.LARGE.jpg", "https://cdn.instructables.com/FHY/DV94/JTYNBUVW/FHYDV94JTYNBUVW.LARGE.jpg", "https://cdn.instructables.com/FAK/TUK2/JTYNBUVV/FAKTUK2JTYNBUVV.LARGE.jpg", "https://cdn.instructables.com/F6X/G1I8/JTYNBUW7/F6XG1I8JTYNBUW7.LARGE.jpg", "https://cdn.instructables.com/FAK/BCMI/JTYNBUX8/FAKBCMIJTYNBUX8.LARGE.jpg", "https://cdn.instructables.com/F61/SXD0/JTYNBUYE/F61SXD0JTYNBUYE.LARGE.jpg"], "step_title": "Step 4: Step 4: Mount Your Board and Plug Everything In!"}], "channel": ""}, {"category": "", "description": "As any maker can attest, over the years, one collects a lot of parts. Perhaps it all started with a few resistors and LEDs, a breadboard, and an Arduino. But soon there were motors and motor drivers, IR rangefinders and tactile switches. Accelerometers, microphones, heatshrink tubes, potentiometers, relays, hookup wire, all those things salvaged from that printer you took apart... and the list goes on.\nNow, organizing such a collection of goodies is no easy task. Some may have turned to baggies, for others, boxes. And then there were those who filled shelves with boxes, filled with baggies, filled with parts. All intricately labelled, yet still so cumbersome to manage.\nThis Instructable takes a stab at solving the age-old problem of organizing a bunch of things. So without further ado, FindyBot3000.", "title": "FindyBot3000 - a Voice Controlled Organizer", "url": "https://www.instructables.com/id/FindyBot3000-a-Voice-Controlled-Organizer/", "section": "technology", "steps": [{"step": 1, "steps_text": "'nuff said.", "step_imgs": ["https://cdn.instructables.com/FNV/JCBT/JTON2686/FNVJCBTJTON2686.LARGE.jpg"], "step_title": "Step 1: The Problem"}, {"step": 2, "steps_text": "This project is an Internet-of-Things organizer, designed for hands-free searching and intuitive voice-controlled management of parts.\nThis Instructable is organized as follows:\nOverview - Describing how the tech is all linked\nPrerequisites - Required Tools, Software, Electronics, and Parts Lists\nConstruction\nMechanical - Building the organizer\nElectrical - Wiring it all up\nBasic Testing\nSoftware\nDownload and setup necessary accounts\nVoice-Control - Linking Google Home to Particle Photon\nThe Cloud - Deploying an Azure Function and SQL Database on Microsoft Azure\nFuture Plans - New features, animations, debugging techniques, etc.", "step_imgs": [], "step_title": "Step 2: Table of Contents"}, {"step": 3, "steps_text": "A broad tech stack is used, ranging from lower-level C++ programming (Arduino-style!) to higher-level C# programming for the (Microsoft) Cloud!\nTechnologies and Languages\nWhile many makers will be familiar with Google Home/Google Assistant, the other technologies may be unknown. Here's a quick summary:\nHuman - That's you!\nGoogle Home- This is what you talk to, and turns voice into text. Behind the scenes, Google Home uses Google Assistant, which is really doing all the work. This project can actually work with any device that supports Google Assistant, like an Android phone or tablet.\nIFTTT - If-this-then-that, a free online service which allows different apps to communicate. In this project, IFTTT is used to connect Google Home with Particle Photon.\nParticle Photon - A cheap WiFi capable microcontroller, programmable Arduino-style! This chip drives the LED display on the organizer. Development with this microcontroller has us working with:\nC++ (Arduino style)\nWebhooks - Send/receive real-time data between applications (like Particle Photon to an Azure Function)\nParticle Dev - The integrated development environment (IDE) which is used to code for the Photon.\nAzure Function- A piece of code that runs in the cloud. No virtual machines or web apps to worry about. This does all the heavy lifting in terms of processing text, building SQL queries, and any other work that would be much more difficult or (computationally) expensive to do on a microcontroller like the Photon.\nSQL Database - Keeps track of all the parts: names, quantities, locations, search tags, dates, etc. The database is queried to insert, remove, find, or update parts.\nIn the next step, a sequence diagram shows how all these pieces fit together.", "step_imgs": [], "step_title": "Step 3: Overview"}, {"step": 4, "steps_text": "In the UML sequence diagram shown, the flow of each component is laid out. There's a ton of technology behind it all, so it's pretty incredible that FindyBot3000 can find parts within a second. This Instructable won't go into the nitty-gritty technical details of how each step is implemented. Instead, we will focus on building the physical assembly, deploying the necessary software components, and configuring everything to work together.\nNow this is a pretty complicated drawing, showing how all the software components talk to each other, and in which order. Follow the arrows, noting which lifelines (vertical lines) they are pointing to, to get a sense of what is happening and when.\nYou may be wondering -- why don't we send the data from Google Home directly to the Azure Function, instead of first the the Photon? The reason is to provide a single source of debugging information. By logging all commands which are incoming and outgoing from the Photon, we can easily identify where data loss or a bug may have occurred.\nWe will come back to this diagram in later steps, but for now, on to construction!", "step_imgs": [], "step_title": "Step 4: The Ebb and Flow"}, {"step": 5, "steps_text": "Tools:\nJigsaw w/ fine wood blade\nDrill with 1/16th bit, 1/4\" bit, and countersink bit\nScrewdriver\nDremel w/ mutipurpose cutting bit\nSoldering Iron\nSolder\nScissors\nRetractable utility knife\nDuct tape\nDouble-sided foam tape\nClamps\nSuper glue\nSand paper\nMeasuring tape\nCarpenter/rafter/combination square\nHardware:\nItem Quantity Cost Total Cost Notes\n8'x7\"x3/4\" pine board 3 $8.00 $24 Hardware Store\nAcroMils 64-compartment organizer 2 $28.65 $57.30\nAcroMils 24-compartment organizer 2 $34.95 $69.90\n1-3/4\" Wood screws 18 $0.10 $1.80 Hardware Store\n3/4\" Pan-head sheet metal screws 8 $0.10 $0.80 Hardware Store\nSquare foam exercise pads 1 $20.99 $20.99 0.5\", grey\n2'x2' 1/4\" plywood 1 $15 $15 Hardware Store\nTotal Cost: $189.79\nElectronics:\nItem Quantity Cost Total Cost Note\nLED strip 7 $15.76 $110.32 5V, 2 meter, 60 pixels/meter, 4mm wide, black PCB\nHeatshrink tubing 1 $6.99 $6.99 An assortment of tubes will last you a while\nServo extention cable, 10cm 7 $7.99 $7.99 Pack of 10. Only 7 needed.\n16ft 2-wire cable 1 $8.77 $8.77 Check hardware store for by-the-foot pricing\nParticle Photon 1 $19 $19 The microcontroller. Can be bought on Amazon here.\nHalf-size breadboard 1 $7.99 $7.99 Because I didn't want to design a PCB\nJumper wires 1 $5.99 $5.99 Hook everything up\n25A Solid state relay 1 $9.46 $9.46 Turn on/off the power supply to the LEDs\n14 Gauge Hookup wire 3 $0.25 $0.75 Your local hardware store will sell this by the foot\n5V 60A Power supply 1 $27.77 $27.77 Powers all 840 RGB LEDs\n5V 2A Power supply 1 $4.77 $4.77 Powers the Particle Photon\nPower cord 1 $10 $10 Price fluctuates a lot, any grounded 3-wire cord will do\n3.3V - 5V Logic level converter 1 $2.95 $2.95 Particle Photon (3.3V) > Converter > LED strip (5V)\nTotal: $222.75\n\nAccounts needed: You'll need to create an account with each of these services\nGoogle Account\nIFTTT\nGithub\nMicrosoft Azure\nParticle\n\nSoftware:\n(Necessary)Particle Dev - Write Arduino-style code to run on the Particle Photon\n(Optional) Visual studio, community edition - Modify the Azure Function and manually manipulate the SQL database\nExtensions: Azure Development, .NET desktop development, Desktop development with C++, Data storage and processing\n(Optional) Postman - For unit testing. Sends HTTP Post requests to the Azure Function.", "step_imgs": ["https://cdn.instructables.com/F4N/US1G/JTWT3KTL/F4NUS1GJTWT3KTL.LARGE.jpg"], "step_title": "Step 5: Parts Lists"}, {"step": 6, "steps_text": "The short animation demonstrates how FindyBot3000 was assembled.\nFusion 360 was used to design the CAD model, animation, and drawings for FindyBot3000.\nBy the way, you can use Fusion 360 for FREE as a hobbyist, like I am doing for this project!\nI couldn't find an easy way to upload the parts, so the table below provides links to them in the Fusion 360 cloud:\nImage Part\nAssembly\nFoam Pad\nVertical Board\nHorizontal Board\nMiddle Board\nLower Cabinet\nUpper Cabinet\nDrawings:\nHorizontal board drawing\nVertical board drawing\nMiddle board drawing\nFoam pad drawing", "step_imgs": [], "step_title": "Step 6: Construction - Design Files and Animation"}, {"step": 7, "steps_text": "FindyBot3000 bundles the four individual organizer boxes in a slim wooden frame, sandwiched between slices of foam pad. The foam pads offer an aesthetically pleasing way of concealing all the wiring for the LED strips, as you'll see in later steps.\nThe first order of business is cutting the foam pads to size, from which the board dimensions are measured. Just lay the foam on a markable surface, then the board on top of the foam, and use a utility knife to cut the foam to the width of the board. With the foam cut out, measure the height needed by propping it up against the organizer box. Use a carpenter square or end of a board to make a square cut.\nGreat, first step done!", "step_imgs": ["https://cdn.instructables.com/FJ5/VUKG/JTON2C9B/FJ5VUKGJTON2C9B.LARGE.jpg", "https://cdn.instructables.com/FPI/SZ2G/JTWT4Q4S/FPISZ2GJTWT4Q4S.LARGE.jpg", "https://cdn.instructables.com/F5W/62A2/JTON2CBA/F5W62A2JTON2CBA.LARGE.jpg", "https://cdn.instructables.com/FOO/NAXV/JTON2CBB/FOONAXVJTON2CBB.LARGE.jpg", "https://cdn.instructables.com/FST/DLGF/JTON2CBD/FSTDLGFJTON2CBD.LARGE.jpg", "https://cdn.instructables.com/FG7/9YXY/JTON2CBE/FG79YXYJTON2CBE.LARGE.jpg", "https://cdn.instructables.com/FZ7/YZ9K/JTON2CC4/FZ7YZ9KJTON2CC4.LARGE.jpg", "https://cdn.instructables.com/F3H/SF47/JTON2CC3/F3HSF47JTON2CC3.LARGE.jpg"], "step_title": "Step 7: Construction - Foam Pads"}, {"step": 8, "steps_text": "Cut the bottom, middle and top boards to length. Layering the cabinets as shown in the first picture produces the results. Stack the horizontal boards and the cabinets to find the total height of the assembly, and use that to mark the length the vertical boards need to be.\nAlternatively, you can use the technical drawings. I've put images of them in this step for convenience.", "step_imgs": ["https://cdn.instructables.com/FCL/0MPU/JU31RJVI/FCL0MPUJU31RJVI.LARGE.jpg", "https://cdn.instructables.com/FMY/YRXF/JTON2CC5/FMYYRXFJTON2CC5.LARGE.jpg", "https://cdn.instructables.com/FFH/9OIG/JTON2CB3/FFH9OIGJTON2CB3.LARGE.jpg", "https://cdn.instructables.com/FAO/IV87/JU31RJUG/FAOIV87JU31RJUG.LARGE.jpg", "https://cdn.instructables.com/FLD/5BTH/JU31RJV8/FLD5BTHJU31RJV8.LARGE.jpg", "https://cdn.instructables.com/F10/N6QY/JU31RJVB/F10N6QYJU31RJVB.LARGE.jpg", "https://cdn.instructables.com/FCF/WOHU/JTON2CBC/FCFWOHUJTON2CBC.LARGE.jpg", "https://cdn.instructables.com/FOV/MZRF/JTWT4Q3U/FOVMZRFJTWT4Q3U.LARGE.jpg", "https://cdn.instructables.com/FW5/G76F/JTWT4Q4R/FW5G76FJTWT4Q4R.LARGE.jpg", "https://cdn.instructables.com/FTP/AJNZ/JTWT4Q56/FTPAJNZJTWT4Q56.LARGE.jpg"], "step_title": "Step 8: Construction - Cutting the Boards"}, {"step": 9, "steps_text": "Begin by assembling the horizontal boards with the right vertical board. Remember to drill pilot and countersink holes to relieve strain on the end of the boards.", "step_imgs": ["https://cdn.instructables.com/FFC/PBOB/JTON2CC8/FFCPBOBJTON2CC8.LARGE.jpg", "https://cdn.instructables.com/FQD/DNU4/JTWT53LC/FQDDNU4JTWT53LC.LARGE.jpg", "https://cdn.instructables.com/F20/8ISE/JTWT53LG/F208ISEJTWT53LG.LARGE.jpg", "https://cdn.instructables.com/FBH/DK2T/JTON2CC7/FBHDK2TJTON2CC7.LARGE.jpg", "https://cdn.instructables.com/FCM/5OI0/JTON2CCA/FCM5OI0JTON2CCA.LARGE.jpg", "https://cdn.instructables.com/F35/05N3/JTON2CGN/F3505N3JTON2CGN.LARGE.jpg", "https://cdn.instructables.com/FHA/F7XL/JTWT53LE/FHAF7XLJTWT53LE.LARGE.jpg", "https://cdn.instructables.com/F2D/KFGB/JTWT53LF/F2DKFGBJTWT53LF.LARGE.jpg"], "step_title": "Step 9: Construction - Frame Assembly"}, {"step": 10, "steps_text": "The horizontal supports for all the containers in the cabinet are recessed about a half inch behind the bezel. To route the LED strips along these horizontal supports, a drill is used to make holes in the bezel to thread the LED strips through. I used sandpaper and a dremel to tidy up the holes.", "step_imgs": ["https://cdn.instructables.com/FKM/8TY8/JTON2CB5/FKM8TY8JTON2CB5.LARGE.jpg", "https://cdn.instructables.com/FAP/WLQI/JU31RJVJ/FAPWLQIJU31RJVJ.LARGE.jpg"], "step_title": "Step 10: Construction - Prepare the Cabinets"}, {"step": 11, "steps_text": "1. Take each of the 7 2-meter long LED strips, and find the middle. The contact terminals in the middle will have solder on them, making them different from all the rest. (There is solder on the terminals every 50cm on these LED strips). Use a pair of scissors to cut the solder pads in half. Do this for all LED strips, leaving you with 14 1-meter long lengths. Leave the paper backing on for now.\n2. Critical Step: Find a LED strip length with a male-end connector, as shown. Note: the direction of the little arrows on the LED strip should point away from the connector.\n\n3. From the top-left of the four-cabinet assembly, feed the led strips in as shown. This will produce a zig-zag pattern when connecting all the LEDs. Note: starting from the top, for every odd row the arrows should point to the right. For every even row, the arrows should point to the left.", "step_imgs": ["https://cdn.instructables.com/FU6/R73I/JU31RJUA/FU6R73IJU31RJUA.LARGE.jpg", "https://cdn.instructables.com/FCD/GCCR/JTYN51TG/FCDGCCRJTYN51TG.LARGE.jpg", "https://cdn.instructables.com/F1V/FUMI/JTYN51TH/F1VFUMIJTYN51TH.LARGE.jpg", "https://cdn.instructables.com/FEV/ZTO8/JTT5VFI6/FEVZTO8JTT5VFI6.LARGE.jpg", "https://cdn.instructables.com/F4Y/0UTI/JTON2CE7/F4Y0UTIJTON2CE7.LARGE.jpg", "https://cdn.instructables.com/FGG/R7ZX/JTON2CCC/FGGR7ZXJTON2CCC.LARGE.jpg", "https://cdn.instructables.com/FXZ/WQQT/JTON2CD1/FXZWQQTJTON2CD1.LARGE.jpg", "https://cdn.instructables.com/FP1/47AS/JTON2CD2/FP147ASJTON2CD2.LARGE.jpg", "https://cdn.instructables.com/FA4/JE2K/JTON2CD3/FA4JE2KJTON2CD3.LARGE.jpg", "https://cdn.instructables.com/FEW/LB99/JTON2CD6/FEWLB99JTON2CD6.LARGE.jpg", "https://cdn.instructables.com/FAO/HMHQ/JTWT53LI/FAOHMHQJTWT53LI.LARGE.jpg", "https://cdn.instructables.com/FIQ/XVVF/JTWT5482/FIQXVVFJTWT5482.LARGE.jpg", "https://cdn.instructables.com/F0K/199T/JTWT53ME/F0K199TJTWT53ME.LARGE.jpg", "https://cdn.instructables.com/F0U/A0YP/JTON2CEC/F0UA0YPJTON2CEC.LARGE.jpg", "https://cdn.instructables.com/F4F/AH2H/JTON2CDS/F4FAH2HJTON2CDS.LARGE.jpg", "https://cdn.instructables.com/FY0/PQGN/JTON2CEF/FY0PQGNJTON2CEF.LARGE.jpg", "https://cdn.instructables.com/F3S/Z77B/JTON2CEI/F3SZ77BJTON2CEI.LARGE.jpg", "https://cdn.instructables.com/F57/BD24/JTON2CDZ/F57BD24JTON2CDZ.LARGE.jpg", "https://cdn.instructables.com/F18/4HR1/JTON2CFF/F184HR1JTON2CFF.LARGE.jpg", "https://cdn.instructables.com/FRU/2P0C/JTWT53M2/FRU2P0CJTWT53M2.LARGE.jpg", "https://cdn.instructables.com/FV4/BKHI/JTT5VFN4/FV4BKHIJTT5VFN4.LARGE.jpg"], "step_title": "Step 11: Construction - Install the LED Strips"}, {"step": 12, "steps_text": "Before we finish up the assembly, it's a good idea to make sure all the wiring is correct and the LEDs are working.\n1. Setup the circuit as shown in the Fritzing diagram.\n2. Open up Particle Dev, or use the Particle Web IDE, to upload HelloWorld.ino to your photon.\nThis test lights up four LEDs along the length of some of the strip, to test that it's working.\nWARNING: Do NOT turn on more than 4 LEDs at once. You risk consuming more power than the USB connection can supply. We will address this in the next step.", "step_imgs": ["https://cdn.instructables.com/FE3/GXIE/JTT5JOSC/FE3GXIEJTT5JOSC.LARGE.jpg", "https://cdn.instructables.com/F2K/OA25/JTON2CHS/F2KOA25JTON2CHS.LARGE.jpg", "https://cdn.instructables.com/FHG/8DQD/JTON2CHT/FHG8DQDJTON2CHT.LARGE.jpg", "https://cdn.instructables.com/FKF/XRA8/JTYN5QOU/FKFXRA8JTYN5QOU.LARGE.jpg"], "step_title": "Step 12: Quick Testing"}, {"step": 13, "steps_text": "You may be wondering, why have all those power wires? Do I really need them? Yes, for two reasons:\n1. To support turning on several LEDs at once, in case the search result turns up multiple items\n2. To provide consistent 5V to all LEDs, as there is a small voltage drop across each LED.\nTo see what happens if you don't apply power at regular intervals, watch this video:\nWhy have such a large power supply? Do we really need 60A?\nTechnically, no. But if you want to run the LEDs at full brightness, then yes. So why limit your options?\nPower Calculations\nHow do we arrive at 60A?\nThe manufacturer mentions 18W/meter @ 60 pixels/meter in the datasheet, and by datasheet, I mean a bunch of text hastily scribbled down on the product page:\nEach row on the organizer is exactly 1 meter, and there are 14 rows, so we have 14 meters of LED goodness.\n14 meters at 100% brightness, means the total wattage of the strip is 18W/m*14m = 252W.\nWe can use the power equation: P = IV, to give us a rough estimate of current (Amps) needed. Rearranging:\nPower, P, is measured in Watts; I = Amperes; V = Volts\nI = P/V = 252Watts/5V = 50.4A.\nThe next smallest power supply down from 60A was 40A - too small to power all LEDs at full brightness. So 60A it is. It's a good idea to get a power supply that exceeds the power requirements of your system by some margin, a ~12% safety margin (60/50.4 - 1) in this case is sufficient.\nBut what happens if you don't know how many watts are used per meter of your LED strip? Well, you can estimate it using rough estimates for other LEDs you may have. Most standard 5mm LEDs, like the red ones shown in the demo video, draw around 20mA of current when running off of 5V. Using that information, we can extrapolate power requirements for an LED strip:\n\n1. 20mA (milliamperes) is drawn per LED, that's 0.020A (1000mA = 1A)\n2. RGB LEDs have three LEDs each: one red, blue, and green\n3. Find the number of pixels per meter, in this case, there are 60 pixels per meter.\nAt 14 rows, with each row being 1 meter long, that leaves us with:\n14 meters * 60 pixels/meter * 3 LEDs/pixel * 0.020A / LED = 50.4A\n\nHey great, that's the same Amp requirements as calculated in our previous equation!", "step_imgs": ["https://cdn.instructables.com/F30/08V3/JTON2CD9/F3008V3JTON2CD9.LARGE.jpg", "https://cdn.instructables.com/FE4/VKVV/JTON2CGM/FE4VKVVJTON2CGM.LARGE.jpg", "https://cdn.instructables.com/FMH/EKGN/JTON2CDF/FMHEKGNJTON2CDF.LARGE.jpg", "https://cdn.instructables.com/F6P/9B48/JTON2CFU/F6P9B48JTON2CFU.LARGE.jpg", "https://cdn.instructables.com/F7L/VNKE/JTON2CFK/F7LVNKEJTON2CFK.LARGE.jpg", "https://cdn.instructables.com/FP5/F650/JTON2CFR/FP5F650JTON2CFR.LARGE.jpg", "https://cdn.instructables.com/FBL/XZSJ/JTON2CGR/FBLXZSJJTON2CGR.LARGE.jpg", "https://cdn.instructables.com/FKD/H1B9/JTON2CGU/FKDH1B9JTON2CGU.LARGE.jpg", "https://cdn.instructables.com/FXU/8K8W/JTON2CGV/FXU8K8WJTON2CGV.LARGE.jpg", "https://cdn.instructables.com/FAZ/KQA3/JTON2CHR/FAZKQA3JTON2CHR.LARGE.jpg", "https://cdn.instructables.com/F3X/L11H/JTON2CFV/F3XL11HJTON2CFV.LARGE.jpg", "https://cdn.instructables.com/F2O/I0UL/JTON2CJH/F2OI0ULJTON2CJH.LARGE.jpg"], "step_title": "Step 13: Construction - Install the LED Strip Power Wires"}, {"step": 14, "steps_text": "We're not done with those foam pads just yet. In the first step, we cut them to size. Now we'll route cutouts and channels for all the wiring to run through. Align the pad to the wooden frame, and use a marker to mark the routes the wires take along the foam pads, then use a dremel to cut holes and channels for said wire to run through. Since we haven't fastened the cabinets to the wood yet, you can just slide them length wise along the frame to access both sides.\nAs you can see, I did a pretty quick and dirty job of this. But no matter, it never sees the light of day once everything is put together.", "step_imgs": ["https://cdn.instructables.com/FG2/2MV8/JTON2CDL/FG22MV8JTON2CDL.LARGE.jpg", "https://cdn.instructables.com/FY2/QDHX/JTON2CDO/FY2QDHXJTON2CDO.LARGE.jpg", "https://cdn.instructables.com/FZO/A56T/JTON2CDI/FZOA56TJTON2CDI.LARGE.jpg", "https://cdn.instructables.com/F8U/D108/JTON2CKV/F8UD108JTON2CKV.LARGE.jpg", "https://cdn.instructables.com/F1A/8XN6/JTON2CJI/F1A8XN6JTON2CJI.LARGE.jpg", "https://cdn.instructables.com/FQ3/9F6S/JTON2CKX/FQ39F6SJTON2CKX.LARGE.jpg"], "step_title": "Step 14: Construction - Foam Pads V2"}, {"step": 15, "steps_text": "To aid with wiring, the cabinets were never fastened in place.\nWith the wiring done, and the foam pads in place, finally install the vertical board on the left.\nNudge the cabinets so they are flush with the front of the frame assembly, and then drill two holes on the bottom of each cabinet into the supporting wood plank below. Fasten the cabinets to the assembly with the 3/4\" machine pan-head screws.", "step_imgs": ["https://cdn.instructables.com/FBG/OVVK/JTWT5BFX/FBGOVVKJTWT5BFX.LARGE.jpg", "https://cdn.instructables.com/F7F/G5MG/JTON2CKY/F7FG5MGJTON2CKY.LARGE.jpg", "https://cdn.instructables.com/FIH/5C9R/JTWT53MQ/FIH5C9RJTWT53MQ.LARGE.jpg", "https://cdn.instructables.com/F7K/B2U2/JTON2CF9/F7KB2U2JTON2CF9.LARGE.jpg", "https://cdn.instructables.com/FSQ/XHEY/JTT5VFML/FSQXHEYJTT5VFML.LARGE.jpg", "https://cdn.instructables.com/F04/VEBS/JTON2CLM/F04VEBSJTON2CLM.LARGE.jpg"], "step_title": "Step 15: Construction - Final Touches to the Assembly"}, {"step": 16, "steps_text": "I found that over time, the foam pads applied a little too much lateral pressure to the cabinets. This resulted in the LED strips buckling off of the cabinet rows. To fix that, I used some wooden wedges to push the cabinets apart and pull the LED strips taught.", "step_imgs": ["https://cdn.instructables.com/F56/QALJ/JTON2CL1/F56QALJJTON2CL1.LARGE.jpg", "https://cdn.instructables.com/FPO/CM0A/JTON2CL3/FPOCM0AJTON2CL3.LARGE.jpg", "https://cdn.instructables.com/FY0/MFVF/JTON2CL5/FY0MFVFJTON2CL5.LARGE.jpg", "https://cdn.instructables.com/FTH/BZ3Z/JTON2CL4/FTHBZ3ZJTON2CL4.LARGE.jpg", "https://cdn.instructables.com/F3N/PP9W/JTON2CL6/F3NPP9WJTON2CL6.LARGE.jpg"], "step_title": "Step 16: Construction - Adjusting the Boards"}, {"step": 17, "steps_text": "WARNING: HIGH VOLTAGE - In this step, we attach the beefy power supply up to all the LED strip power lines.\nDo not, under any circumstances, wire up the power supply with the power cable plugged in.\n1. Begin with testing that the power supply turns on. See the first photo. Then unplug the power supply cable.\n2. Wire up only the first row of LEDs to the power supply\n3. Disconnect the second and third row of LEDs\n4. Repeat the test on Step 12: Quick Testing. If the LEDs work as expected, great! If not, make sure the 5V and GND power supply lines are wired correctly.\n5. When the first row of LEDs is tested and working with the power supply, go on and wire up the remaining LED strip power lines. Repeat Step 12: Quick Testing, but make the following modification:\nBefore After\nThis time, the four-led pewpew that zig-zags across the display should maintain the same brightness the entire way through. Like so:\n6. Once all the LEDs are working as intended, go on and cleanup the wiring. Use some double-sided foam tape to secure the power supply.", "step_imgs": ["https://cdn.instructables.com/F4L/IT5B/JTON2CJK/F4LIT5BJTON2CJK.LARGE.jpg", "https://cdn.instructables.com/FVQ/YEU8/JTON2CJJ/FVQYEU8JTON2CJJ.LARGE.jpg", "https://cdn.instructables.com/FMX/UHT6/JTON2CJQ/FMXUHT6JTON2CJQ.LARGE.jpg", "https://cdn.instructables.com/FQJ/WQDS/JTON2CJS/FQJWQDSJTON2CJS.LARGE.jpg", "https://cdn.instructables.com/FLI/ZG3B/JTON2CJV/FLIZG3BJTON2CJV.LARGE.jpg", "https://cdn.instructables.com/FSL/N6HX/JTON2CJW/FSLN6HXJTON2CJW.LARGE.jpg", "https://cdn.instructables.com/FZ4/DTPZ/JTON2CKT/FZ4DTPZJTON2CKT.LARGE.jpg", "https://cdn.instructables.com/FBV/HAG3/JTON2CJX/FBVHAG3JTON2CJX.LARGE.jpg", "https://cdn.instructables.com/F4B/JNE3/JTON2CKS/F4BJNE3JTON2CKS.LARGE.jpg", "https://cdn.instructables.com/FH9/K892/JTON2CL0/FH9K892JTON2CL0.LARGE.jpg"], "step_title": "Step 17: Electrical - Hooking Up the Power Supply and Testing"}, {"step": 18, "steps_text": "The particle photon drives two important pieces of FindyBot3000:\n1. The Relay - this allows FindyBot3000 to operate in low-power mode, by turning on the LED power supply only when needed.\n2. The LEDs - the Photon drives the LEDs through the voltage step-up converter.", "step_imgs": ["https://cdn.instructables.com/FF9/M8AF/JTYN8D6M/FF9M8AFJTYN8D6M.LARGE.jpg", "https://cdn.instructables.com/FSK/EOYN/JTON2CLE/FSKEOYNJTON2CLE.LARGE.jpg", "https://cdn.instructables.com/FE2/Z9V4/JTWT53NT/FE2Z9V4JTWT53NT.LARGE.jpg", "https://cdn.instructables.com/F7I/ZMMZ/JTT5VFMX/F7IZMMZJTT5VFMX.LARGE.jpg", "https://cdn.instructables.com/FLS/HPK4/JTON2CLG/FLSHPK4JTON2CLG.LARGE.jpg", "https://cdn.instructables.com/F6B/6PUV/JTON2CLH/F6B6PUVJTON2CLH.LARGE.jpg", "https://cdn.instructables.com/FF4/64RL/JTON2CLI/FF464RLJTON2CLI.LARGE.jpg", "https://cdn.instructables.com/FCD/K0SL/JTON2CLJ/FCDK0SLJTON2CLJ.LARGE.jpg"], "step_title": "Step 18: Electrical - Wiring Up the Particle Photon"}, {"step": 19, "steps_text": "In this step, we link together the Google Home and Particle Photon.\nPrerequisites:\n- Log into your Github account\n- Download and install Particle Dev\n- Download and install Github Desktop\nSteps:\n1. Navigate to the FindyBot3000 repo on Github: https://github.com/Inventor22/FindyBot3000\n2. Clone the repo to your computer\n3. Open Particle Dev, and load the project folder: FindyBot3000\\Photon\\FindyBot\n3. Plug in the Photon to your computer via USB cable, and select your photon from the devices menu in Particle Dev\n4. Flash the particle photon with the firmware\nBefore we can test to see if the photon is working with the flashed firmware, we need to setup Google Home to talk to the Particle Photon, through IFTTT.", "step_imgs": ["https://cdn.instructables.com/FR9/HZ3I/JTYNCCWX/FR9HZ3IJTYNCCWX.LARGE.jpg", "https://cdn.instructables.com/FAT/8Z57/JTYN9I0H/FAT8Z57JTYN9I0H.LARGE.jpg", "https://cdn.instructables.com/F6V/I4UG/JTYN9HW4/F6VI4UGJTYN9HW4.LARGE.jpg", "https://cdn.instructables.com/FKR/CXJ3/JTYN9HUN/FKRCXJ3JTYN9HUN.LARGE.jpg", "https://cdn.instructables.com/FJ9/K6F5/JTYN9JMQ/FJ9K6F5JTYN9JMQ.LARGE.jpg", "https://cdn.instructables.com/F4U/8M0W/JTYN96LO/F4U8M0WJTYN96LO.LARGE.jpg", "https://cdn.instructables.com/FSU/SE6P/JTYN96TN/FSUSE6PJTYN96TN.LARGE.jpg", "https://cdn.instructables.com/FRO/4FBM/JTYN974F/FRO4FBMJTYN974F.LARGE.jpg", "https://cdn.instructables.com/F6J/I9N4/JTYN977J/F6JI9N4JTYN977J.LARGE.jpg", "https://cdn.instructables.com/F0U/X8P9/JTYN977P/F0UX8P9JTYN977P.LARGE.jpg", "https://cdn.instructables.com/FIW/XD71/JTYN9BOY/FIWXD71JTYN9BOY.LARGE.jpg", "https://cdn.instructables.com/FM5/UWYA/JTYN97G7/FM5UWYAJTYN97G7.LARGE.jpg", "https://cdn.instructables.com/FI1/53W2/JTYN97JK/FI153W2JTYN97JK.LARGE.jpg", "https://cdn.instructables.com/F53/8QJU/JTYN97MW/F538QJUJTYN97MW.LARGE.jpg"], "step_title": "Step 19: Software - Download and Install"}, {"step": 20, "steps_text": "To test the firmware we just uploaded to the Particle Photon, there are a few simple commands we can trigger on the Google Home.\nFirst, we make an IFTTT applet that is triggered when we say \"Ok Google, Welcome $\", where $ is the name of the individual you would like to welcome.\nAs soon as the applet has deployed, you can begin testing your FindyBot3000!", "step_imgs": ["https://cdn.instructables.com/F6Z/ZV2N/JTYN9X69/F6ZZV2NJTYN9X69.LARGE.jpg", "https://cdn.instructables.com/FFH/5OYJ/JTYN9Z3T/FFH5OYJJTYN9Z3T.LARGE.jpg", "https://cdn.instructables.com/FSX/131W/JTYNA6XL/FSX131WJTYNA6XL.LARGE.jpg", "https://cdn.instructables.com/FVC/MR30/JTYNA6R6/FVCMR30JTYNA6R6.LARGE.jpg", "https://cdn.instructables.com/FAV/2HCL/JTYNA6PF/FAV2HCLJTYNA6PF.LARGE.jpg", "https://cdn.instructables.com/F1P/CU4B/JTYNA6NU/F1PCU4BJTYNA6NU.LARGE.jpg", "https://cdn.instructables.com/FCW/U35Z/JTYNA7X3/FCWU35ZJTYNA7X3.LARGE.jpg", "https://cdn.instructables.com/F57/4OV6/JTYNA6NI/F574OV6JTYNA6NI.LARGE.jpg", "https://cdn.instructables.com/FZ1/TN48/JTYNA6LM/FZ1TN48JTYNA6LM.LARGE.jpg", "https://cdn.instructables.com/FNZ/IQN1/JTYNA6SX/FNZIQN1JTYNA6SX.LARGE.jpg", "https://cdn.instructables.com/FY2/EB6E/JTYNA720/FY2EB6EJTYNA720.LARGE.jpg", "https://cdn.instructables.com/FWQ/WJ9D/JTYNA6Z3/FWQWJ9DJTYNA6Z3.LARGE.jpg"], "step_title": "Step 20: Software - Linking in IFTTT"}, {"step": 21, "steps_text": "Use the table above to create the remaining IFTTT applets.\nCurrently FindyBot3000 supports 10 commands which require a SQL database, and another 4 commands which run locally on the Photon.\nRequires SQL Database:\nFindItem - Find an item\nFindTags - Find items matching provided tags, colored on a gradient according to number of tags matched\nInsertItem - Insert a new item into the organizer\nRemoveItem - Remove an existing item from the organizer\nAddTags - Add tags to an existing object. Ex: \"Add tags diode light emitting to green LEDs\"\nSetQuantity - Set the quantity of an existing item\nUpdateQuantity - Update the quantity of an existing item\nShowAllBoxes - Light up all the boxes which have items in them with random colors\nBundleWith - Bundle a new item with an existing item. Ex: \"Bundle 8 blue LEDs with red LEDs\"\nHowMany - Show, in ASCII text on the display, the remaining quantity of an item.\nLocal Commands:\nWelcome - Scroll text across the display, welcoming the specified individual\nSetBrightness - Change the brightness of the LEDs\nSetDisplay - Turn on and off the display\nChangeColors - Change the color gradient used by the FindTags command", "step_imgs": ["https://cdn.instructables.com/FFJ/AVZG/JTYNACY9/FFJAVZGJTYNACY9.LARGE.jpg", "https://cdn.instructables.com/F79/O0MW/JTYNAF08/F79O0MWJTYNAF08.LARGE.jpg"], "step_title": "Step 21: Software - Remaining IFTTT Commands"}, {"step": 22, "steps_text": "A picture speaks a thousand words...\nNavigate to the Microsoft Azure Portal and log in.\nHere we deploy the Azure Function, and set up continuous integration through Github. In this way, when new changes are pushed to the forked repository you created, they will automatically update the Azure Function with the new bits.", "step_imgs": ["https://cdn.instructables.com/FWF/W2IC/JTYNAPR3/FWFW2ICJTYNAPR3.LARGE.jpg", "https://cdn.instructables.com/FF6/HIJD/JTYNAN1O/FF6HIJDJTYNAN1O.LARGE.jpg", "https://cdn.instructables.com/F30/QGZC/JTYNAN1Q/F30QGZCJTYNAN1Q.LARGE.jpg", "https://cdn.instructables.com/FM4/DGHE/JTYNAN21/FM4DGHEJTYNAN21.LARGE.jpg", "https://cdn.instructables.com/FBG/QL86/JTYNAO24/FBGQL86JTYNAO24.LARGE.jpg", "https://cdn.instructables.com/F9I/KL64/JTYNAOO7/F9IKL64JTYNAOO7.LARGE.jpg", "https://cdn.instructables.com/FM8/X241/JTYNAOTS/FM8X241JTYNAOTS.LARGE.jpg", "https://cdn.instructables.com/F34/6GLX/JTYNAOUJ/F346GLXJTYNAOUJ.LARGE.jpg", "https://cdn.instructables.com/FRL/UV8A/JTYNAOUO/FRLUV8AJTYNAOUO.LARGE.jpg", "https://cdn.instructables.com/F4Z/L73T/JTYNAOUP/F4ZL73TJTYNAOUP.LARGE.jpg", "https://cdn.instructables.com/FYF/C8VB/JTYNAOUR/FYFC8VBJTYNAOUR.LARGE.jpg", "https://cdn.instructables.com/FQY/FJEE/JTYNAOV3/FQYFJEEJTYNAOV3.LARGE.jpg", "https://cdn.instructables.com/FQC/VSTB/JTYNAOUU/FQCVSTBJTYNAOUU.LARGE.jpg", "https://cdn.instructables.com/FI6/1ROS/JTYNAOUV/FI61ROSJTYNAOUV.LARGE.jpg"], "step_title": "Step 22: Software - Deploy the Azure Function"}, {"step": 23, "steps_text": "In order for the Particle Photon to successfully send data to the Azure Function, it needs to know where to send the message. In this step, we setup a Webhook between the Photon and our Azure Function.", "step_imgs": ["https://cdn.instructables.com/FH5/FOR0/JTYNAPJ3/FH5FOR0JTYNAPJ3.LARGE.jpg", "https://cdn.instructables.com/F5W/EL4Z/JTYNAPJ9/F5WEL4ZJTYNAPJ9.LARGE.jpg", "https://cdn.instructables.com/FNN/6EKA/JTYNBAA0/FNN6EKAJTYNBAA0.LARGE.jpg", "https://cdn.instructables.com/FEE/JMIG/JTYNBAAB/FEEJMIGJTYNBAAB.LARGE.jpg", "https://cdn.instructables.com/F0W/QZYJ/JTYNAPKW/F0WQZYJJTYNAPKW.LARGE.jpg", "https://cdn.instructables.com/FYG/TWP3/JTYNBBMK/FYGTWP3JTYNBBMK.LARGE.jpg"], "step_title": "Step 23: Software - Link Particle Photon to Azure Function"}, {"step": 24, "steps_text": "In this step we deploy the SQL Database, and provide access to the Azure Function via the sql_connection string.", "step_imgs": ["https://cdn.instructables.com/FSX/K9G8/JTYNAONJ/FSXK9G8JTYNAONJ.LARGE.jpg", "https://cdn.instructables.com/FMX/3WAV/JTYNAONK/FMX3WAVJTYNAONK.LARGE.jpg", "https://cdn.instructables.com/F0W/CEXU/JTYNAONL/F0WCEXUJTYNAONL.LARGE.jpg", "https://cdn.instructables.com/F0W/O4AR/JTYNAOOA/F0WO4ARJTYNAOOA.LARGE.jpg", "https://cdn.instructables.com/F7Q/RDYF/JTYNAOOB/F7QRDYFJTYNAOOB.LARGE.jpg", "https://cdn.instructables.com/FR5/FLEE/JTYNAOOE/FR5FLEEJTYNAOOE.LARGE.jpg", "https://cdn.instructables.com/FP5/HR4O/JTYNAOOF/FP5HR4OJTYNAOOF.LARGE.jpg", "https://cdn.instructables.com/FQU/GMM9/JTYNAOP8/FQUGMM9JTYNAOP8.LARGE.jpg", "https://cdn.instructables.com/FZX/I408/JTYNAOQQ/FZXI408JTYNAOQQ.LARGE.jpg", "https://cdn.instructables.com/F5A/O04J/JTYNAOQS/F5AO04JJTYNAOQS.LARGE.jpg", "https://cdn.instructables.com/FS3/KLJN/JTYNAOSA/FS3KLJNJTYNAOSA.LARGE.jpg", "https://cdn.instructables.com/F1I/HWDE/JTYNAOV5/F1IHWDEJTYNAOV5.LARGE.jpg", "https://cdn.instructables.com/FZO/RLB1/JTYNAOV6/FZORLB1JTYNAOV6.LARGE.jpg", "https://cdn.instructables.com/FMP/ABJ8/JTYNAOV7/FMPABJ8JTYNAOV7.LARGE.jpg", "https://cdn.instructables.com/FBM/2P1A/JTYNAOV8/FBM2P1AJTYNAOV8.LARGE.jpg", "https://cdn.instructables.com/FS6/YZ8Q/JTYNAOV9/FS6YZ8QJTYNAOV9.LARGE.jpg"], "step_title": "Step 24: Software - Deploy the SQL Database"}, {"step": 25, "steps_text": "So we've got the Photon talking to the Azure Function, and the Azure Function talking to the SQL Database. But We're not out of the woods just yet. In order for the SQL queries in the Azure Function to work correctly, they need to query SQL Tables. In this step, we create the necessary tables in the SQL Database.", "step_imgs": ["https://cdn.instructables.com/FDG/L6WS/JU31TA04/FDGL6WSJU31TA04.LARGE.jpg", "https://cdn.instructables.com/FIZ/ET1J/JTYNBEXH/FIZET1JJTYNBEXH.LARGE.jpg", "https://cdn.instructables.com/FCC/49RE/JTYNBFT7/FCC49REJTYNBFT7.LARGE.jpg", "https://cdn.instructables.com/FHI/CP3J/JTYNBFUG/FHICP3JJTYNBFUG.LARGE.jpg"], "step_title": "Step 25: Software - Create the SQL Tables"}, {"step": 26, "steps_text": "There's a lot more that can be done!\nIn the future, there will be room for an LCD to display debug information, or animating the lights, beyond just text scrolling.", "step_imgs": [], "step_title": "Step 26: Final Thoughts"}], "channel": ""}, {"category": "", "description": "This instructable is for the making of a moving origami kinetic sculpture/machine. This will also show you the basics of how to use servo motors with an arduino type micro-controller. I have been wanting to figure out how to use motors with the arduino for a while since they are one of the main ways to go from electrical to mechanical. The way I make the origami swan move is by using two strands of fishing line that are connected to the servo motor which swings back and forth to pull the wings down. The paper's natural springiness then brings the wings back up and the process repeats.", "title": "Automaton Origami", "url": "https://www.instructables.com/id/Automaton-Origami/", "section": "technology", "steps": [{"step": 1, "steps_text": "Itsy Bitsy\nFishing line\nWire\nWire stripper\nSmall screwdriver\nSmall computer screws\nServo Motor\nServo motor arm (this will come in the package for the servo motor)\nPaper\n3d Printer (or an online 3d printing service)\nComputer that is compatible with the arduino software", "step_imgs": ["https://cdn.instructables.com/FK3/WNE7/JT91KV0I/FK3WNE7JT91KV0I.LARGE.jpg"], "step_title": "Step 1: Materials/Tools"}, {"step": 2, "steps_text": "For this step you can either download the STL files from below or go to my thingiverse page here: https://www.thingiverse.com/thing:3534613. If you got the same parts that I mentioned above everything should fit just fine however, depending on your printer settings, you may need to use different sized screws.", "step_imgs": ["https://cdn.instructables.com/FI4/XHAF/JTYNBDZ1/FI4XHAFJTYNBDZ1.LARGE.jpg"], "step_title": "Step 2: 3D Printing the Case"}, {"step": 3, "steps_text": "First of all, you are going to want to go get the Arduino IDE software that we will be using to program the board from here: https://www.arduino.cc/en/Main/Software. Next, go ahead and plug in the Itsy Bitsy to your computer and follow the directions here: https://learn.adafruit.com/introducting-itsy-bitsy-32u4/arduino-ide-setup under \"Arduino IDE Setup\" and \"Using With Arduino IDE.\" I would have explained this in the instructable however the people at adafruit.com do a great job explaining how to use their products.", "step_imgs": ["https://cdn.instructables.com/FAP/KAZ9/JTWS25OV/FAPKAZ9JTWS25OV.LARGE.jpg"], "step_title": "Step 3: Setting Up the Itsy Bitsy"}, {"step": 4, "steps_text": "The wiring of the electronics was fairly straight forward just take a look at the diagram above. I started off with cutting the servo wire down to a shorter size, you won't be needing the adapter on the end for this project. Next I soldered the wires up to their appropriate spots on the Itsy Bitsy. Soldering should probably be done outside of the case however you may need to check the fit so that you ensure you have enough slack in the wires. The red wires went to the 5v pin. The black and brown wires went to the ground pin. Finally, the two different colored wires from the servo and the switch go to a numbered pin of your choosing, just make sure you remember them.", "step_imgs": ["https://cdn.instructables.com/F7J/5513/JTYNC1NK/F7J5513JTYNC1NK.LARGE.jpg", "https://cdn.instructables.com/FWS/GA70/JTYNB4ZO/FWSGA70JTYNB4ZO.LARGE.jpg", "https://cdn.instructables.com/FMT/BCF6/JTYNBDUB/FMTBCF6JTYNBDUB.LARGE.jpg"], "step_title": "Step 4: Wiring the Electronics"}, {"step": 5, "steps_text": "The programming is fairly straightforward as well. It tells the Itsy Bitsy to have the motor spin back and forth 180 degrees while the switch is on. You may need to change the inputs and outputs in the code if you soldered them to different spots than I did. I originally learned the code for the spinning of servos from https://www.arduino.cc/en/Tutorial/sweep and used the same concept for this project. Once you complete the wiring and programming, attach the one-sided, small, servo arm (see picture above) to the servo and activate the program. Take it off and put it back on until it is changing direction while it is parallel to the length of the servo.\n#include Servo myservo;\n\nint pos = 0;\n\nvoid setup() {\n  myservo.attach(1);\n  pinMode(7, INPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {  if (digitalRead(7)== HIGH) {\n  for (pos = 0; pos <= 180; pos += 5) {\n    myservo.write(pos);\n    delay(15);\n  }\n  for (pos = 180; pos >= 0; pos -= 5) {\n    myservo.write(pos);\n    delay(15);\n  }\n}\n\n}", "step_imgs": ["https://cdn.instructables.com/FWN/3I6O/JTYNHVOB/FWN3I6OJTYNHVOB.LARGE.jpg"], "step_title": "Step 5: Programming and Calibration of the Servo"}, {"step": 6, "steps_text": "Start with a 8\" by 8\" piece of paper\nFold sideways and diagonally to make the next step easier.\nTake one of the corners and fold it inwards with the corners on either side of it.\nFold the sides to the middle and the top corner downwards.\nFlip over and repeat step 4.\nTake the bottom corner and bring it up (make sure you look at the picture).\nFlip over and repeat step 6.\nFold the sides to the middle. repeat on opposite side\nTurn each of the sides inside out and to the side.\nFold down a small bit of one side for the head.\nFold down wings\nPoke two small holes in each wing for the fishing line. I used a special tool for this, however a toothpick should work the same way.", "step_imgs": ["https://cdn.instructables.com/FAB/EYJL/JTYNBSQU/FABEYJLJTYNBSQU.LARGE.jpg", "https://cdn.instructables.com/FAN/F0LL/JTYNBSWR/FANF0LLJTYNBSWR.LARGE.jpg", "https://cdn.instructables.com/FOE/N8Y5/JTYNBSYZ/FOEN8Y5JTYNBSYZ.LARGE.jpg", "https://cdn.instructables.com/FT6/X5J7/JTYNBT05/FT6X5J7JTYNBT05.LARGE.jpg", "https://cdn.instructables.com/F5J/0JIY/JTYNBT2E/F5J0JIYJTYNBT2E.LARGE.jpg", "https://cdn.instructables.com/FDO/WCNQ/JTYNBT6J/FDOWCNQJTYNBT6J.LARGE.jpg", "https://cdn.instructables.com/FGI/3ADG/JTYNBT9F/FGI3ADGJTYNBT9F.LARGE.jpg", "https://cdn.instructables.com/F7N/LK68/JTYNBTAR/F7NLK68JTYNBTAR.LARGE.jpg", "https://cdn.instructables.com/FAJ/X4CS/JTYNBTC6/FAJX4CSJTYNBTC6.LARGE.jpg", "https://cdn.instructables.com/FJR/GX5D/JTYNBTFS/FJRGX5DJTYNBTFS.LARGE.jpg", "https://cdn.instructables.com/F53/HIKH/JTYNBTFV/F53HIKHJTYNBTFV.LARGE.jpg", "https://cdn.instructables.com/FJY/5TEJ/JTYNBTFZ/FJY5TEJJTYNBTFZ.LARGE.jpg", "https://cdn.instructables.com/F4O/M4GE/JTYNBTG4/F4OM4GEJTYNBTG4.LARGE.jpg", "https://cdn.instructables.com/FEC/WLFX/JTYNBTG8/FECWLFXJTYNBTG8.LARGE.jpg", "https://cdn.instructables.com/FB5/UTK3/JTYNBTG9/FB5UTK3JTYNBTG9.LARGE.jpg"], "step_title": "Step 6: Folding the Origami Swan"}, {"step": 7, "steps_text": "Make sure you have all of the electronics in the correct places (see picture).\nTie two strands of fishing line to the end of the servo arm. There will be excess that can be cut off later, it just makes handling easier for the time being.\nFeed the strands through the small hole in the middle top of the case. (this may need to be enlarged a bit with something like a toothpick depending on the quality of your print)\nPlace the top of the case on the base and screw in the corners making sure that the fishing line is still coming through.\nFit the origami swan in the slits on the top of the case.\nTie one of the two strands to each of the wings of the swan using the holes that were punched in step 7. Make sure that there is minimal slack when the wings are at their natural resting position.\nCut off the excess of the fishing line.\nFYI, the fishing line was a bit difficult to photograph so if you are confused by anything feel free to message me or put something in the comments. :D", "step_imgs": ["https://cdn.instructables.com/FLW/PXLL/JTYNB58U/FLWPXLLJTYNB58U.LARGE.jpg", "https://cdn.instructables.com/FSY/LJPM/JTYNHTDW/FSYLJPMJTYNHTDW.LARGE.jpg", "https://cdn.instructables.com/FKI/CNY1/JTYNHTF7/FKICNY1JTYNHTF7.LARGE.jpg", "https://cdn.instructables.com/F8L/KJQB/JTYNHTBB/F8LKJQBJTYNHTBB.LARGE.jpg"], "step_title": "Step 7: Attaching Everything"}, {"step": 8, "steps_text": "This project was very fun and helpful for getting into adding motion to my projects. The applications for this project and the concept are basically limitless by using the same design for other origami models like a dragon or other flying animals. If you make this project or some variation please feel free to share it below.", "step_imgs": ["https://cdn.instructables.com/FVC/9B35/JTYNBUUO/FVC9B35JTYNBUUO.ANIMATED.LARGE.gif"], "step_title": "Step 8: Conclusion"}], "channel": ""}, {"category": "", "description": "I wrote a web program, called Polygonia Design Suite, to make it easy to create symmetrical designs. These designs can be used for laser cutters, CNC machines, 3D printers, printed on paper, used to make fabric, used for \"manufacture on demand\", even to make tattoos -- although I have not tried the last one yet! You can see what I have made so far on my Instagram.\nThis project is about how to make cube with a design you have created in Polygonia. I used a laser-cutter at my local makerspace, Nova Labs. You can use a service, like Ponoko, or a paper cutter, like the Cameo or Cricut, or even just print the design on paper and fold it up.\nFull disclosure: Polygonia Design Suite is my start-up. All accounts are free. You can create as many designs as you like. (It is my go-to place for doodling!) You can download three free designs a month. If you want to download more there is a small monthly fee.\nBut wait, there's more: I am in the process of figuring out how to add \"promotion codes\". Once I do, you will be able to enter \"INSTRUCTABLES-EPILOG\" and get two months of complementary \"Hobbyist\" subscription, so you can download more designs for free.\nOkay, so let's get started...", "title": "Polygonia Cube", "url": "https://www.instructables.com/id/Polygonia-Cube/", "section": "technology", "steps": [{"step": 1, "steps_text": "I decided that I wanted a cube that was 3\" on each side. Actually, I found piece of MDF in the scrap pile at Nova Labs that was 6\" wide, and that's why I made the cube 3\".\nRight now Polygonia only works in millimeters and pixels, so I tend to work in millimeters for things like this. (I am adding inches soon. It's on my to do list.) 3\" is very close to 75mm.\nA quick google search led me to MakerCase. This site lets you easily design a cube for laser cutting. I changed the units to millimeters and entered 75 for the Width, Height, and Depth fields. I also clicked \"Outside Dimensions\".\nThe MDF I found was 1/4\" thick, or about 6.5mm. I entered that for the \"Material Thickness\", by clicking \"Custom Thickness\". I also wanted a top, so I selected \"Closed box\". And I wanted the finger or tab connections, so for \"Edge Joints\" I clicked \"Finger\".\nI was ready to download the file as an SVG. I clicked the \"Download Box Plans\" and then clicked \"Download SVG\".\nThis gave me an SVG file that I could open in Inkscape (a free vector editor software -- it's my favorite). Here is a link to the file I downloaded: MakerCase 75mm box.", "step_imgs": ["https://cdn.instructables.com/FPJ/MFS3/JTYN4ZYY/FPJMFS3JTYN4ZYY.LARGE.jpg", "https://cdn.instructables.com/FF6/0VTE/JTYN4ZZN/FF60VTEJTYN4ZZN.LARGE.jpg", "https://cdn.instructables.com/FT7/43G1/JTYN500C/FT743G1JTYN500C.LARGE.jpg", "https://cdn.instructables.com/F40/O8CN/JTYN5013/F40O8CNJTYN5013.LARGE.jpg"], "step_title": "Step 1: It Starts With a Cube..."}, {"step": 2, "steps_text": "It is easy to create symmetrical patterns in Polygonia. You draw a line and Polygonia will copy it for you and connect it to other lines. You can use your Google account to login or create an account.\nI'll go over what to do in Polygonia in the next few steps.", "step_imgs": ["https://cdn.instructables.com/FK0/HCVG/JTYN546K/FK0HCVGJTYN546K.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FLK/97AG/JTYN4S94/FLK97AGJTYN4S94.LARGE.jpg", "https://cdn.instructables.com/F0I/BWKL/JTYN4SFY/F0IBWKLJTYN4SFY.LARGE.jpg"], "step_title": "Step 2: Explore Polygonia"}, {"step": 3, "steps_text": "Click on the Frame tab, the second from the left, to access the frame settings.\nSince my cube is 3\", or 75mm, I want a design that is a rectangle that is 75mm wide and 75mm high.\nIn the \"Shape\" popup, pick \"Rectangle\"\nEnter 75 in \"Width\"\nEnter \"75\" in \"Height\"\nEnter \"11\" or \"12\" in \"Border Width\"\nFor \"Render\" select \"Inside Edge Only\"\nWhen you are done you should have a white square in a blue field.\nThe \"Border Width\" has to be large enough to account for both the tabs created by \"MakerCase\" and still leave some space so the side will not fall apart when you cut it with the laser.\nYou want \"Inside Edge Only\" because we get the outside edge from the MakerCase SVG file.", "step_imgs": ["https://cdn.instructables.com/FQB/ZLXK/JTYN56JH/FQBZLXKJTYN56JH.LARGE.jpg"], "step_title": "Step 3: Set the Frame Size in Polygonia"}, {"step": 4, "steps_text": "Click on the \"Tile\" tab, to the left of the \"Frame\" tab.\nDraw a few lines.\nYou might want to reduce the tile size to fit more of the tile onto the frame, since the default tile size is 55mm, or about 2\".", "step_imgs": ["https://cdn.instructables.com/FY7/S1GQ/JTYN571W/FY7S1GQJTYN571W.LARGE.jpg"], "step_title": "Step 4: Create a Design"}, {"step": 5, "steps_text": "For the laser cutter, we don't need a fill color, so we can remove it in the \"Lines\" tab.\nClick on the \"Lines\" tab, which is the third from the left.\nUnclick the \"Fill\" checkbox. Your design should now be only gray lines.\nThis is also the tab where you can add curves to your design.\nWait a second... You might notice that a few steps ago that the sketches I posted had a frame and had a fill color. That was because I made the mistake of not following my own advice. So I had to do more work in Inkscape.", "step_imgs": ["https://cdn.instructables.com/FTA/J0SD/JTYN57IX/FTAJ0SDJTYN57IX.LARGE.jpg"], "step_title": "Step 5: Remove the Fill Color"}, {"step": 6, "steps_text": "Your design files are automatically saved in the cloud.\nTo download a local copy...\nClick on the \"Files\" tab.\nClick on the \"Download...\" label\nEnter a file name\nClick the \"Save as SVG\" checkbox.\nI also usually click the \"Save as PNG\" checkbox, just so I have a reference picture.\nClick the \"Download Design in Selected Formats\"\nYou get one (or two) files downloaded.", "step_imgs": ["https://cdn.instructables.com/F0H/QLBW/JTYN5BLZ/F0HQLBWJTYN5BLZ.LARGE.jpg"], "step_title": "Step 6: Save Your Design File"}, {"step": 7, "steps_text": "Make a copy of the SVG file you saved from MakerCase.\nOpen the copy.\nIt should look similar to the file above.\nUngroup everything:\nClick once on anything in the document\nFrom the Object menu, select \"Ungroup\"\nDelete the text\nClick on each label\nHit delete\nSave your work", "step_imgs": ["https://cdn.instructables.com/FXF/3JMY/JTYN59II/FXF3JMYJTYN59II.LARGE.jpg", "https://cdn.instructables.com/FAF/5F1E/JTYN5A4O/FAF5F1EJTYN5A4O.LARGE.jpg"], "step_title": "Step 7: Prepare the MakerCase File"}, {"step": 8, "steps_text": "Open the SVG file you saved from Polygonia.\nClick on the contents to select them.\nSelect \"Copy\" from the edit menu or use \"Ctrl-C\"\nGo back to the Inkscape window with the MakerCase file\nSelect \"Paste\" or use \"Ctrl-V\"\nYou can see that the Polygonia design is not aligned with anything. You can move it manually, but I like to use the \"Align\" feature of Inkscape to do that for me.\nIn the \"Objects\" menu, click on the \"Align and Distribute...\" item. (It is near the bottom.)\nClick once on one of the sides created by MakerCase and then click on the Polygonia design.\nThen click on the \"Vertical Align\" and \"Horizontal Align\" buttons.\nRepeat the \"Paste\" and align steps for the remaining sides.\nSave your file.", "step_imgs": ["https://cdn.instructables.com/FUF/P3BP/JTYN5AEP/FUFP3BPJTYN5AEP.LARGE.jpg", "https://cdn.instructables.com/FWM/A41L/JTYN5AFR/FWMA41LJTYN5AFR.LARGE.jpg", "https://cdn.instructables.com/F9I/QJCE/JTYN5B4P/F9IQJCEJTYN5B4P.LARGE.jpg", "https://cdn.instructables.com/FSH/MZVX/JTYN5B38/FSHMZVXJTYN5B38.LARGE.jpg"], "step_title": "Step 8: Combine the Files"}, {"step": 9, "steps_text": "If you are going to use Ponoko, you will need to follow their specific requirements for line wide and line color.\nI was using RDWorks, the laser cutter software we use at NovaLabs. RDWorks can import DXF files, so I selected \"Save As...\" from Inkscape and selected DXF.\nIn RDWorks, I imported the file and modified the settings to cut through the 1/4\" MDF I was using.", "step_imgs": [], "step_title": "Step 9: Prepare for the Laser Cutter"}, {"step": 10, "steps_text": "Cutting the MDF.\nI used two different designs for the cube.", "step_imgs": ["https://cdn.instructables.com/FDN/8459/JTYN5ML2/FDN8459JTYN5ML2.LARGE.jpg", "https://cdn.instructables.com/F39/BZJK/JTYN5MKZ/F39BZJKJTYN5MKZ.LARGE.jpg"], "step_title": "Step 10: Pew-pew: Lasers!"}, {"step": 11, "steps_text": "The cube assembles quite easily. I did not account for the kerf, the part of the wood that is vaporized by the laser, so the parts slip together easily. They also slip apart easily, so this needs to be glued.", "step_imgs": ["https://cdn.instructables.com/FMW/JS43/JTYN4Q88/FMWJS43JTYN4Q88.LARGE.jpg", "https://cdn.instructables.com/FL0/15MH/JTYN4QBH/FL015MHJTYN4QBH.LARGE.jpg"], "step_title": "Step 11: Assembling the Cube"}, {"step": 12, "steps_text": "I really like how the cube came out. It has a nice solid feel and would look great with an LED tea light.\nThe cube could be made with no top, to hold a votive candle. Also the bottom could be solid.\nIt doesn't have to be a cube. You would have a quite nice pencil box if it was taller.\nIf you have a Cricut or Silhouette, you can follow the same steps in Polygonia, but start with a cube designed for paper. (I don't have a link handy, but I would be happy to create an SVG file for anyone to use.)", "step_imgs": [], "step_title": "Step 12: Final Thoughts"}], "channel": ""}, {"category": "", "description": "A little while ago, I had a print fail. The extruder dragged a pile of molten plastic around and tore the insulator around the hotend of my printer. After suffering through a few prints, it was time to repair it. This is how I replaced the insulator on my Monoprice Select Mini 3D printer.", "title": "3D Printer Insulator Replacement Monoprice Select Mini", "url": "https://www.instructables.com/id/3D-Printer-Insulator-Replacement-Monoprice-Select-/", "section": "technology", "steps": [{"step": 1, "steps_text": "The first step is to gather the tools required for this repair. The list of tools is pretty minimal:\nPhillips Head Screwdriver\nSmall Pliers\nScissors\nUtility Knife\nAlso required are a few materials: the new ceramic insulator and some high-temperature electrical Kapton tape. These links are what I ordered:\nhttps://www.amazon.com/gp/product/B01LAYCRAA\nhttps://www.amazon.com/gp/product/B00W3FAFP0", "step_imgs": ["https://cdn.instructables.com/F9V/N3I0/JTIYIAZ0/F9VN3I0JTIYIAZ0.LARGE.jpg"], "step_title": "Step 1: Tools Required"}, {"step": 2, "steps_text": "The next step is to remove the fan and shroud. Just unhook the spring clips from the sides and the plastic cover will come right off, just hook it up and behind the printer arm to keep it out of the way.", "step_imgs": ["https://cdn.instructables.com/FN6/NASN/JTIYIAZZ/FN6NASNJTIYIAZZ.LARGE.jpg", "https://cdn.instructables.com/FPL/VURQ/JTIYIB0W/FPLVURQJTIYIB0W.LARGE.jpg"], "step_title": "Step 2: Remove the Fan"}, {"step": 3, "steps_text": "With the fan shroud out of the way, I can remove the two Phillips head screws from the plastic clamp that secures the hotend. Once the clamp is removed, the entire hotend assembly can be easily pulled from its enclosure.", "step_imgs": ["https://cdn.instructables.com/F4G/2WE5/JTIYIB1T/F4G2WE5JTIYIB1T.LARGE.jpg", "https://cdn.instructables.com/FH7/TSBW/JTIYIB2Q/FH7TSBWJTIYIB2Q.LARGE.jpg", "https://cdn.instructables.com/FFN/MOL6/JTIYIB3N/FFNMOL6JTIYIB3N.LARGE.jpg"], "step_title": "Step 3: Remove the Extruder"}, {"step": 4, "steps_text": "After exposing the hotend, I removed the old, torn, ceramic insulation using a utility knife. Then, I could mark and layout the new insulator and cut around the nozzle and cooling fins to make a tight fit around the hot end. I secured the new insulator in place with a small spring clamp.", "step_imgs": ["https://cdn.instructables.com/FIP/SZ2D/JTIYIB4C/FIPSZ2DJTIYIB4C.LARGE.jpg", "https://cdn.instructables.com/FBU/MNL5/JTIYIB59/FBUMNL5JTIYIB59.LARGE.jpg"], "step_title": "Step 4: Cut the New Insulator"}, {"step": 5, "steps_text": "This was the most difficult part. I cut small strips of the Kapton tape and secured the insulation in place. Take your time and make sure to not cover the nozzle. The tape is pretty durable, but it does not stretch at all. Be careful to work it around and be careful not to get the tape stuck to itself.", "step_imgs": ["https://cdn.instructables.com/FOD/MY6A/JTIYIB6U/FODMY6AJTIYIB6U.LARGE.jpg", "https://cdn.instructables.com/FZS/DUPD/JTIYIB7S/FZSDUPDJTIYIB7S.LARGE.jpg"], "step_title": "Step 5: Secure the Insulator"}, {"step": 6, "steps_text": "Press the hotend assembly back into the arm of the printer and reinstall the plastic cover. Tighten the screws evenly, moving back and forth between the two to draw the clamp into place evenly.", "step_imgs": ["https://cdn.instructables.com/FVZ/I7AK/JTIYIB8P/FVZI7AKJTIYIB8P.LARGE.jpg", "https://cdn.instructables.com/FLT/T44P/JTIYIB9M/FLTT44PJTIYIB9M.LARGE.jpg"], "step_title": "Step 6: Reinstall the Extruder"}, {"step": 7, "steps_text": "Reinstall the fan, using pliers to manipulate the clips. I found it easiest to work each clip on halfway, and then press them all the way into place. I like to wipe down the build plate with rubbing alcohol after any repair to make sure any fibers, dust or other debris is removed. Check that the nozzle is clear after the insulation replacement and that's it!", "step_imgs": ["https://cdn.instructables.com/FM7/NCNU/JTIYIB9R/FM7NCNUJTIYIB9R.LARGE.jpg"], "step_title": "Step 7: Reinstall the Fan"}], "channel": ""}, {"category": "", "description": "Hello Guys Whatsup, In this instructable, I am making an Awesome mini laser engraver from old DVD writers. It's an amazing machine. You can use this laser engraver machine to make any kind of design, logo, art on the surface like WOOD, MDF, PLYWOOD, VNYL Paper. It's little difficult to make a high-resolution laser engraver from DVD writer. But I tried my best to make a pretty close one. In this instructable, I am going to show you the entire procedure of how I made this DIY Laser Engraver. So let's get started :)\nIF YOU LIKE THIS PROJECT THEN DON'T FORGET TO VOTE FOR ME, I AM PARTICIPATING IN REMIX CONTEST\nPROJECT INSPIRATION\nI got this Laser engraver's idea from Maggie Shah. Here's the version of his laser engraver https://www.instructables.com/id/Mini-CNC-Laser-Wood-Engraver-and-Paper-Cutter/ . I remixed his project with my own touch.\n\nHere's the full video tutorial Video", "title": "DIY Arduino Mini Laser Engraver", "url": "https://www.instructables.com/id/DIY-Arduino-Mini-Laser-Engraver/", "section": "technology", "steps": [{"step": 1, "steps_text": "We need these following parts to make this project.\nArduino Nano\n250mW 650nm Laser Module\nA4988 Motor Driver\nIRFZ44N Mosfet\nLM7805 Voltage Regulator.\nLaser Heatsink\nIC Heatsink\n1000uF Capacitor\n10k & 47R Resistor\nMale And Female Header Pin\nScrew Terminal\nJST 2.0 Connector\n2.5mm Jumper Cap\nShrink Tube\nDVD Writer\nCustom PCB Board\n5mm Acrylic Sheet\nTools List:\nSoldering Iron\nDrill Machine\nMetal File\nSandpaper\nWire Cutter\nSuperglue", "step_imgs": ["https://cdn.instructables.com/FUS/7A59/JPLJRCYN/FUS7A59JPLJRCYN.LARGE.jpg", "https://cdn.instructables.com/FEE/3FSH/JPLJREAO/FEE3FSHJPLJREAO.LARGE.jpg", "https://cdn.instructables.com/F5Y/MI8L/JPLJRE0E/F5YMI8LJPLJRE0E.LARGE.jpg", "https://cdn.instructables.com/FRO/KM9O/JPLJRCX8/FROKM9OJPLJRCX8.LARGE.jpg", "https://cdn.instructables.com/F3W/H2FZ/JPLJRCXX/F3WH2FZJPLJRCXX.LARGE.jpg", "https://cdn.instructables.com/FXX/PQO0/JPLJRD8T/FXXPQO0JPLJRD8T.LARGE.jpg"], "step_title": "Step 1: Parts List"}, {"step": 2, "steps_text": "We need two DVD writers mechanism for this project. One for X-Axis and another one for Y-Axis. You can find this DVD writer from broken CPU or local hardware shop. I also got from the local hardware shop at very cheap prices. Now its time to disassemble the DVD writers.\nUse Philips head screwdriver to remove all the screws.\nUnplugged all the connectors and cables.\nOpen the disk holder and unscrew the sliding mechanism.\nDetached the Sliding mechanism.", "step_imgs": ["https://cdn.instructables.com/F4L/JIOB/JPINYL6U/F4LJIOBJPINYL6U.LARGE.jpg", "https://cdn.instructables.com/FSU/33HQ/JPINYL70/FSU33HQJPINYL70.LARGE.jpg", "https://cdn.instructables.com/FFI/CJ8E/JPINYL71/FFICJ8EJPINYL71.LARGE.jpg", "https://cdn.instructables.com/F8Z/HV1H/JPINYL8T/F8ZHV1HJPINYL8T.LARGE.jpg", "https://cdn.instructables.com/F6X/V4Y4/JPINYL9C/F6XV4Y4JPINYL9C.LARGE.jpg", "https://cdn.instructables.com/FM8/FCB4/JPINYL8Q/FM8FCB4JPINYL8Q.LARGE.jpg", "https://cdn.instructables.com/F9W/SIYE/JPINYL8S/F9WSIYEJPINYL8S.LARGE.jpg", "https://cdn.instructables.com/FPZ/2C09/JPINYL7B/FPZ2C09JPINYL7B.LARGE.jpg", "https://cdn.instructables.com/F4C/KNIO/JPINYL9Q/F4CKNIOJPINYL9Q.LARGE.jpg", "https://cdn.instructables.com/FEY/L58J/JPINYL6J/FEYL58JJPINYL6J.LARGE.jpg", "https://cdn.instructables.com/F77/9NZS/JPINYL9K/F779NZSJPINYL9K.LARGE.jpg"], "step_title": "Step 2: Remove the Stepper Sliding Mechanism"}, {"step": 3, "steps_text": "Here I've used 5mm acrylic to make the frame. It is a very good choice for making the enclosure for every DIY Project. Personally, I frequently use this sheet to make the enclosure for my DIY Projects. It is easy to cut, bend and sand. I made the printable templates to make the laser engraver more stable.\nFirst, print the templates then attach the templates to the acrylic sheet using the glue stick.\nCarefully cut the acrylic sheet according to the template's design using a jigsaw or mini handsaw.\nRemove the plastic cover from acrylic and sand all the pieces to get the smooth matte finish.\nUse super glue to attach all the pieces together.", "step_imgs": ["https://cdn.instructables.com/FZ8/9C9O/JTWS73AF/FZ89C9OJTWS73AF.LARGE.jpg", "https://cdn.instructables.com/FKB/7XIQ/JTWS73AP/FKB7XIQJTWS73AP.LARGE.jpg", "https://cdn.instructables.com/FVP/JWZF/JPINYL9U/FVPJWZFJPINYL9U.LARGE.jpg", "https://cdn.instructables.com/FGA/DTVE/JPINYL9X/FGADTVEJPINYL9X.LARGE.jpg", "https://cdn.instructables.com/FYX/XZ0N/JPINYLA0/FYXXZ0NJPINYLA0.LARGE.jpg", "https://cdn.instructables.com/F10/TE4U/JPINYLA1/F10TE4UJPINYLA1.LARGE.jpg", "https://cdn.instructables.com/FS4/ZE6X/JPINYLA5/FS4ZE6XJPINYLA5.LARGE.jpg", "https://cdn.instructables.com/F7T/CS25/JPINYLAU/F7TCS25JPINYLAU.LARGE.jpg", "https://cdn.instructables.com/FZB/4XAX/JPINYLB0/FZB4XAXJPINYLB0.LARGE.jpg", "https://cdn.instructables.com/FTC/UHVV/JPINYLB4/FTCUHVVJPINYLB4.LARGE.jpg", "https://cdn.instructables.com/FCO/JEUB/JPINYLCE/FCOJEUBJPINYLCE.LARGE.jpg", "https://cdn.instructables.com/F1N/EGVY/JPINYLB8/F1NEGVYJPINYLB8.LARGE.jpg"], "step_title": "Step 3: Assemble the Frames"}, {"step": 4, "steps_text": "In this step, I'll solder wires to the stepper motors. Follow the steps below to properly solder wires.\nFirst, determine the 2 coils A and B using multimeter's continuity mode.\nCut the flexible PCB of stepper motors.\nSolder wires to stepper motors\nConnect 1*4 Female header pin at the end of wires and secure them using shrink tube.", "step_imgs": ["https://cdn.instructables.com/F4A/CVWY/JPINYLD0/F4ACVWYJPINYLD0.LARGE.jpg", "https://cdn.instructables.com/F6L/2BTM/JPINYLG0/F6L2BTMJPINYLG0.LARGE.jpg", "https://cdn.instructables.com/F9Q/2YBD/JPINYLFF/F9Q2YBDJPINYLFF.LARGE.jpg", "https://cdn.instructables.com/FWL/EHKZ/JPINYLG4/FWLEHKZJPINYLG4.LARGE.jpg", "https://cdn.instructables.com/FZY/HKEA/JPINYLEU/FZYHKEAJPINYLEU.LARGE.jpg", "https://cdn.instructables.com/F6S/L3AX/JPINYLG1/F6SL3AXJPINYLG1.LARGE.jpg", "https://cdn.instructables.com/FQ6/ZIMZ/JPINYLIY/FQ6ZIMZJPINYLIY.LARGE.jpg", "https://cdn.instructables.com/FUA/R4WH/JPINYLG9/FUAR4WHJPINYLG9.LARGE.jpg", "https://cdn.instructables.com/FV4/U9SR/JPINYLGD/FV4U9SRJPINYLGD.LARGE.jpg", "https://cdn.instructables.com/FVX/D4ZM/JPINYLJ5/FVXD4ZMJPINYLJ5.LARGE.jpg"], "step_title": "Step 4: Wiring of Stepper Motor"}, {"step": 5, "steps_text": "In this, I'll make the holes to mount the sliding mechanism.\nFirst properly position the sliding mechanism on the engraver frame.\nMark the holes using a screwdriver.\nUse 3mm drill bit to make the holes.", "step_imgs": ["https://cdn.instructables.com/FWX/2K2J/JPINYLJA/FWX2K2JJPINYLJA.LARGE.jpg", "https://cdn.instructables.com/FHW/GIVR/JPINYLJZ/FHWGIVRJPINYLJZ.LARGE.jpg", "https://cdn.instructables.com/F18/PYAI/JPINYLJ6/F18PYAIJPINYLJ6.LARGE.jpg", "https://cdn.instructables.com/FVM/8S3Y/JPLJRHYQ/FVM8S3YJPLJRHYQ.LARGE.jpg", "https://cdn.instructables.com/F78/POL2/JPLJRHZY/F78POL2JPLJRHZY.LARGE.jpg", "https://cdn.instructables.com/FVE/U9BJ/JPLJRIKT/FVEU9BJJPLJRIKT.LARGE.jpg", "https://cdn.instructables.com/FQQ/DE3I/JPLJRIJI/FQQDE3IJPLJRIJI.LARGE.jpg"], "step_title": "Step 5: Making Holes for Sliding Mechanism"}, {"step": 6, "steps_text": "Here, I am attaching 6mm standoff spacer with the sliding mechanism before mounting it on the engraver frame. It will help to reduce the vibration to get high precision engraving.", "step_imgs": ["https://cdn.instructables.com/F6K/K4O2/JPLJRIL2/F6KK4O2JPLJRIL2.LARGE.jpg", "https://cdn.instructables.com/F00/TBCU/JPLJRIL7/F00TBCUJPLJRIL7.LARGE.jpg", "https://cdn.instructables.com/FCE/87PP/JPLJRIL9/FCE87PPJPLJRIL9.LARGE.jpg", "https://cdn.instructables.com/FU5/T982/JPLJRIM2/FU5T982JPLJRIM2.LARGE.jpg", "https://cdn.instructables.com/FOF/3FBT/JPLJRIMA/FOF3FBTJPLJRIMA.LARGE.jpg", "https://cdn.instructables.com/FO7/IK3I/JPLJRIMB/FO7IK3IJPLJRIMB.LARGE.jpg"], "step_title": "Step 6: Attach Spacer"}, {"step": 7, "steps_text": "Now I'll mount the sliding mechanism.\nAttach 5mm hex nylon PCB spacer before mounting the slider.\nUse 4xM3x12 screw to attach the sliding mechanism.\nAttach bolt with the screw to tighten more securely.", "step_imgs": ["https://cdn.instructables.com/FI3/ED3W/JPLJRIMD/FI3ED3WJPLJRIMD.LARGE.jpg", "https://cdn.instructables.com/FWK/RLB0/JPLJRIKU/FWKRLB0JPLJRIKU.LARGE.jpg", "https://cdn.instructables.com/FB7/GSXZ/JPLJRIW3/FB7GSXZJPLJRIW3.LARGE.jpg", "https://cdn.instructables.com/FJ7/Z2MB/JPLJRIME/FJ7Z2MBJPLJRIME.LARGE.jpg", "https://cdn.instructables.com/FLC/YMMS/JPLJRIMG/FLCYMMSJPLJRIMG.LARGE.jpg", "https://cdn.instructables.com/FDK/942Q/JPLJRITP/FDK942QJPLJRITP.LARGE.jpg", "https://cdn.instructables.com/FT8/S3AG/JPLJRIW4/FT8S3AGJPLJRIW4.LARGE.jpg", "https://cdn.instructables.com/FJ9/O0IL/JPLJRIW1/FJ9O0ILJPLJRIW1.LARGE.jpg", "https://cdn.instructables.com/FXD/YOJJ/JPLJRIP7/FXDYOJJJPLJRIP7.LARGE.jpg", "https://cdn.instructables.com/F8G/8G3A/JPLJRIPC/F8G8G3AJPLJRIPC.LARGE.jpg"], "step_title": "Step 7: Mount the Sliding Mechanism"}, {"step": 8, "steps_text": "Now we need to attach the engraving platform. I started off by attaching 3cm square acrylic using superglue. after that i attached the main engraving platform. which dimention is 9x9cm. It would be better you use a metel grill for the engraving platform.", "step_imgs": ["https://cdn.instructables.com/F5E/MAJR/JPINYLPP/F5EMAJRJPINYLPP.LARGE.jpg", "https://cdn.instructables.com/F5D/5LDH/JPINYL6R/F5D5LDHJPINYL6R.LARGE.jpg", "https://cdn.instructables.com/FK8/O1H1/JPINYLPF/FK8O1H1JPINYLPF.LARGE.jpg", "https://cdn.instructables.com/F78/I5BK/JPINYLPO/F78I5BKJPINYLPO.LARGE.jpg", "https://cdn.instructables.com/FYB/3FXV/JPINYLPG/FYB3FXVJPINYLPG.LARGE.jpg", "https://cdn.instructables.com/FMH/PXZ1/JPINYLPL/FMHPXZ1JPINYLPL.LARGE.jpg", "https://cdn.instructables.com/F1O/VEDU/JPINYLPN/F1OVEDUJPINYLPN.LARGE.jpg", "https://cdn.instructables.com/F6A/O2ZG/JPINYLPM/F6AO2ZGJPINYLPM.LARGE.jpg"], "step_title": "Step 8: Mount the Engraving Platform"}, {"step": 9, "steps_text": "In this project, i am using custom designed circuit board to give more profesional touch. So i chose JLCPCB to design and order the custom designed PCB for this project.\nCircuit Schematic link\nGerber File link\nAbout JLCPCB\nJLCPCB (Shenzhen JIALICHUANG Electronic Technology Development Co., Ltd.), is the largest PCB prototype enterprise in China and a high-tech manufacturer specializing in quick PCB prototype and small-batch PCB production. With over 10 years of experience in PCB manufacturing, JLCPCB has more than 200,000 customers at home and abroad, with over 8,000 online orders of PCB prototyping and small quantity PCB production per day. The annual production capacity is 200,000 sq.m. for various of 1-layer, 2-layer or multi-layer PCBs. JLC is a professional PCB manufacturer featured of large scale, well equipment, strict management and superior quality.\nRelated download files\nYou can get the Circuit (PDF) file from here. As you can see in the pictures above the PCB is very well manufactured and I\u2019ve got the same PCB design that we\u2019ve made for our main board and all the labels and logos are there to guide me during the soldering steps. You can also download the Gerber file for this circuit from here in the case you want to place an order for the same circuit design. If you want to design your own version of PCB you can design it on JLCPCB family site which called EasEDA. It's so simple and easy to design pcb for DIY projects.", "step_imgs": ["https://cdn.instructables.com/F13/QDOW/JTWSUN8P/F13QDOWJTWSUN8P.LARGE.jpg", "https://cdn.instructables.com/FOB/CN8S/JTWSUN9G/FOBCN8SJTWSUN9G.LARGE.jpg", "https://cdn.instructables.com/FVL/1AJH/JTWSUSGF/FVL1AJHJTWSUSGF.LARGE.jpg", "https://cdn.instructables.com/FXC/6JW9/JTWSUSCO/FXC6JW9JTWSUSCO.LARGE.jpg", "https://cdn.instructables.com/FF3/0025/JTWSUS8T/FF30025JTWSUS8T.LARGE.jpg", "https://cdn.instructables.com/FHS/2G1C/JTWS60SH/FHS2G1CJTWS60SH.LARGE.jpg"], "step_title": "Step 9: The PCB Making"}, {"step": 10, "steps_text": "Now its soldering time. use clean fine soldering tip. first I started off by soldering all the small components like header pins then solder other components according to the circuit diagram.\nYou can make this circuit on a perf board. It's very simple and easy. just follow the circuit schematic which I mentioned above. But first, make it on a beard board to check everything works perfectly then you can go for the pref board", "step_imgs": ["https://cdn.instructables.com/FEY/5N4C/JPINYLKF/FEY5N4CJPINYLKF.LARGE.jpg", "https://cdn.instructables.com/FMY/9YLB/JPINYLL1/FMY9YLBJPINYLL1.LARGE.jpg", "https://cdn.instructables.com/F4R/7Z5D/JPINYLKV/F4R7Z5DJPINYLKV.LARGE.jpg", "https://cdn.instructables.com/FLF/HKQR/JPINYLND/FLFHKQRJPINYLND.LARGE.jpg", "https://cdn.instructables.com/FTC/2ZNJ/JPINYLMM/FTC2ZNJJPINYLMM.LARGE.jpg", "https://cdn.instructables.com/FEY/GGHH/JPINYLM6/FEYGGHHJPINYLM6.LARGE.jpg", "https://cdn.instructables.com/FFE/VG5Y/JPINYLML/FFEVG5YJPINYLML.LARGE.jpg", "https://cdn.instructables.com/F7U/SB07/JPINYLMN/F7USB07JPINYLMN.LARGE.jpg", "https://cdn.instructables.com/F8Y/Y72Q/JPINYLMO/F8YY72QJPINYLMO.LARGE.jpg", "https://cdn.instructables.com/FDU/E21M/JPINYLNF/FDUE21MJPINYLNF.LARGE.jpg", "https://cdn.instructables.com/F93/0LKI/JPINYLNN/F930LKIJPINYLNN.LARGE.jpg", "https://cdn.instructables.com/F48/NFF3/JPINYLOJ/F48NFF3JPINYLOJ.LARGE.jpg"], "step_title": "Step 10: Soldering All the Components"}, {"step": 11, "steps_text": "Now mount the Arduino and A4988 motor drivers.\nIn GRBL the digital and analog Pins of Arduino are reserved. The 'Step' pin for the X and Y axes is attached to digital pins 2,and 3 respectively. The 'Dir' pin for the X and Y axes is attached to digital pins 5 and 6 respectively. D11 is for laser Enable. The Arduino gets power through the USB Cable. The A4988 Drivers through external power source. All ground share common connections. VDD of A4988 are connected to 5V of Arduino. The laser I've used runs on 5V and has built in constant current circuit. For the constant 5V source from the external power supply LM7805 voltage regulator is used. Heatsink is compulsory. The IRFZ44N N-CHANNEL MOSFET works as an elelctronic switch when receives digital high signal from pin D11 of Arduino. NOTE: 5V from Arduino nano can't be used beause the laser draws more than 250mA and the Arduino Nano is not capable of delivering that much of current.\n\nConfiguring Micro Stepping for Each Axis.\nMS0 MS1 MS2 Microstep Resolution.\nLow Low Low Full step.\nHigh Low Low Half step.\nLow High Low Quarter step.\nHigh High Low Eighth step.\nHigh High High Sixteenth step.\nThe 3 pins (MS1, MS2 and MS3) are for selecting one of the five step resolutions according to the above truth table. These pins have internal pull-down resistors so if we leave them disconnected, the board will operate in full step mode. I've used the 16th step configuration for smooth and noise free. Most (but certainly not all) stepper motors do 200 full steps per revolution. By appropriately managing the current in the coils it is possible to make the motor move in smaller steps. The Pololu A4988 can make the motor move in 1/16th steps - or 3,200 steps per revolution.The main advantage of microstepping is to reduce the roughness of the motion. The only fully accurate positions are the full-step positions. The motor will not be able to hold a stationary position at one of the intermediate positions with the same position accuracy or with the same holding torque as at the full step positions.Generally speaking when high speeds are required full steps should be used.", "step_imgs": ["https://cdn.instructables.com/F7J/1USP/JPINYLPE/F7J1USPJPINYLPE.LARGE.jpg", "https://cdn.instructables.com/F2C/3OPD/JPINYLPB/F2C3OPDJPINYLPB.LARGE.jpg", "https://cdn.instructables.com/FUX/KMCW/JPINYLPC/FUXKMCWJPINYLPC.LARGE.jpg", "https://cdn.instructables.com/FE8/0V8O/JPINYLPD/FE80V8OJPINYLPD.LARGE.jpg"], "step_title": "Step 11: Mount the Arduino and Motor Drivers"}, {"step": 12, "steps_text": "Now it's time to attach the laser module. I am using here 250mW 650nm focusable laser module. You have to attach the required heatsink for longtime performance. You can buy the heatsink from the online store or you can use the old motherboard's heatsink which I did here. Just broke some pins of the heatsink then mount the laser module. Use superglue to attach the heatsink with the X-Axis slider.", "step_imgs": ["https://cdn.instructables.com/FPS/JOWZ/JTWS7EEH/FPSJOWZJTWS7EEH.LARGE.jpg", "https://cdn.instructables.com/FY7/K6SR/JTWS7E67/FY7K6SRJTWS7E67.LARGE.jpg", "https://cdn.instructables.com/FOT/UGIN/JTWS7E15/FOTUGINJTWS7E15.LARGE.jpg", "https://cdn.instructables.com/FQR/WN51/JTWS7D2H/FQRWN51JTWS7D2H.LARGE.jpg"], "step_title": "Step 12: Attach the Laser Module"}, {"step": 13, "steps_text": "Now mount the circuit with engraver frame using 4xM3 hex nylon screw. After mounting the circuit board plugged in the stepper motor and laser module connectors.", "step_imgs": ["https://cdn.instructables.com/F0U/ILSO/JTWS7CGG/F0UILSOJTWS7CGG.LARGE.jpg", "https://cdn.instructables.com/F8L/OMI4/JTWS7C7L/F8LOMI4JTWS7C7L.LARGE.jpg", "https://cdn.instructables.com/FUM/VPOH/JTWS7C08/FUMVPOHJTWS7C08.LARGE.jpg"], "step_title": "Step 13: Mount the Circuit Board"}, {"step": 14, "steps_text": "What is GRBL firmware?\nGRBL is a firmware for Arduino boards(uno,nano,Duemillanove) that controls stepper motors and spindles/lasers. GRBL uses gcode as input and outputs signals via the Arduino pins.\nFirst, Download the GRBL firmware.\nOpen the Arduino IDE.\nThen Choose Sketch>>Include Library>>Add.Zip Library>>Select the grbl-master.zip file\nThe library is installed now we have to upload the grbl sketch.\nSelect the sketch from the File>>Examples>>grbl>> select the grblUpload\nSelect the Correct board and port, then click on the upload button to upload the sketch in Arduino.", "step_imgs": ["https://cdn.instructables.com/F3K/ORBH/JTWS58FP/F3KORBHJTWS58FP.LARGE.jpg", "https://cdn.instructables.com/F52/3REP/JTWS58FQ/F523REPJTWS58FQ.LARGE.jpg", "https://cdn.instructables.com/F0O/W95L/JTWS4XZT/F0OW95LJTWS4XZT.LARGE.jpg", "https://cdn.instructables.com/F00/AAPZ/JTWS58FT/F00AAPZJTWS58FT.LARGE.jpg", "https://cdn.instructables.com/F0T/I1YY/JTWS58FU/F0TI1YYJTWS58FU.LARGE.jpg", "https://cdn.instructables.com/FJ8/OHPK/JTWS58FY/FJ8OHPKJTWS58FY.LARGE.jpg", "https://cdn.instructables.com/FDP/JGXE/JTWS4Y0N/FDPJGXEJTWS4Y0N.LARGE.jpg", "https://cdn.instructables.com/FF5/VMBE/JTWS4Y2R/FF5VMBEJTWS4Y2R.LARGE.jpg", "https://cdn.instructables.com/FY0/L8ZJ/JTWS4Y2S/FY0L8ZJJTWS4Y2S.LARGE.jpg"], "step_title": "Step 14: GRBL Firmware"}, {"step": 15, "steps_text": "LaserGRBL is one of the best Windows GCode streamer for DIY Laser Engraver. LaserGRBL is able to load and stream GCode path to arduino, as well engrave images, pictures and logo with internal conversion tool.\nDownload the LaserGRBL and install it on your PC.\nOpen the LaserGRBL.Then select the correct COM port and proper baud rate for the connection. (default 115200)\nClick on the file icon to load the image which you want to engrave. LaserGRBL supports any kind of image format.\nSelect proper dimension(40x40mm) and engraving speed\nClick on the green play button to start the engraving.", "step_imgs": ["https://cdn.instructables.com/F41/UNK0/JTWSUN8N/F41UNK0JTWSUN8N.LARGE.jpg", "https://cdn.instructables.com/FG4/5O8P/JTWS5F46/FG45O8PJTWS5F46.LARGE.jpg", "https://cdn.instructables.com/FAY/5NU5/JTWS4XYL/FAY5NU5JTWS4XYL.LARGE.jpg", "https://cdn.instructables.com/FVZ/OAQU/JTWS4Y3J/FVZOAQUJTWS4Y3J.LARGE.jpg", "https://cdn.instructables.com/FE1/3NHS/JTWS4Y3N/FE13NHSJTWS4Y3N.LARGE.jpg", "https://cdn.instructables.com/FO9/FHJ2/JTWS4Y3P/FO9FHJ2JTWS4Y3P.LARGE.jpg"], "step_title": "Step 15: The LaserGRBL Software"}, {"step": 16, "steps_text": "First, adjust the laser dot the smallest as possible. Then choose the picture which you to engrave. Remember engraving setting is different for different kind of surface.", "step_imgs": ["https://cdn.instructables.com/FSB/ZLJ3/JTWS8RVR/FSBZLJ3JTWS8RVR.LARGE.jpg", "https://cdn.instructables.com/FA0/ZWUO/JTWS9AE4/FA0ZWUOJTWS9AE4.LARGE.jpg", "https://cdn.instructables.com/F5O/IJ84/JTWS8Q9K/F5OIJ84JTWS8Q9K.LARGE.jpg", "https://cdn.instructables.com/F6G/L6Z2/JTWS8RPF/F6GL6Z2JTWS8RPF.LARGE.jpg", "https://cdn.instructables.com/FEV/2FKH/JTWS8SFK/FEV2FKHJTWS8SFK.LARGE.jpg"], "step_title": "Step 16: It's Engraving Time"}, {"step": 17, "steps_text": "I hope this tutorial helps you to build your own Arduino Laser Engraver machine. If you make your own Laser Engraver then please send a photo in the comment section. I am very excited to see your own creation.\nI'll keep updating this instructable.\nThanks for watching project, I hope you liked this project, if you did then please follow me I'll keep posting awesome new projects. Also, don't forget to SUBSCRIBE my YouTube channel.", "step_imgs": [], "step_title": "Step 17: We're Done Now"}], "channel": ""}, {"category": "", "description": "This Instructable / Design Concept, is meant to assist the translation between 2D images and 3D modeling algorithms by upgrading a turntable into more of a HID (Human Interface Device) scanning tool.\nMy motivation to design a tool that will increase a modeling algorithm\u2019s ability of translating images with a high degree of accuracy, is to decrease the amount of human image alignment. Accurate models of non-geometric shapes are hard to achieve by pushing and pulling polygons. With the right tools, DIY Photogrammetry allows the import of accurately modeled, complex organic meshes into my CAD program.\nTable Features\n- A graduated rotating scale around the turntable\u2019s perimeter has been incorporated to assist with uniform manual rotation.\n- The turntable\u2019s deck plates and bearing, are made to accommodate heavy model loads.\n- Three aluminum legs radiate from the lower deck plate to stabilize bulky scan models. Each leg is equipped with a leveling foot bolt.\n- The top deck plate features a column and large transition coupling to support heavy models.\n- The transition coupling permits attachment of custom built, user defined, mechanical devices to support different types of modeling subjects.\n- A model support column is 11.5\u201d tall is included to permit photography from beneath without re-positioning the model.\nThe graduated scale is a Tailor\u2019s Soft Measurement Tape glued to the 36\u201d circumference of the top deck plate. Using the 1/8\u201d marks, 288 revolve graduations of 1.25-degrees each are achievable.\nWeight capacity is dramatically increased using \u00be\u201d (23/32\u201d) BC plywood turntable decks, sandwiching a 12\u201d diameter turntable bearing rated at several hundred pounds.\nThe \u00bd\u201d coupling nut attached to the top deck plate can transfer significant weight and side loads to the hefty supporting structure beneath.\nBulky and offset center of gravity stability is achieved using three out-rigger legs of 1\u201d aluminum square tubing. On the end of each leg is a \u00bc\u201d rivet nut and \u00bc\u201d bolt used to level the turntable assembly. For very heavy loads, a round PVC cap fits between the three legs. Load force is transmitted to the cap through direct contact with the lower plywood plate. The leg bolts are adjusted to level the suspended load.\nRubber feet have also been attached to the aluminum legs, under the deck plate, to provide skid protection.\nThe threaded coupling nut serves as a mechanical transition for attachment of specialized hardware (designed by user) to secure different types of scan models. Examples would include a metal spike, alligator clip, a metal crossbeam, a flat plate, glue stub or whatever type of securing device is needed by a modeling practitioner.\nI\u2019m going to assume that people interested in 3D printing and CAD might not have a router table or drill press. For their sake, I\u2019m going to present an Instructable using techniques that require only an electric hand drill, jig saw and basic hand tools. For those of you that are equipped to construct the next generation of a Mar's Lander, just gloss over the features and concept. You already know how to do this.\nI\u2019ve included many features with this turntable design, for the purpose of letting you choose what features you need. So, leave off anything you don\u2019t need and add feature ideas of your own. For the first time in my life, I\u2019ve broken \"Big Al\u2019s\" number one rule of design, by making this Instructable an excessive conglomeration of possible features.\n\u201cAny intelligent fool can make things bigger or more complex\u2026It takes a touch of genius and a lot of courage to move in the opposite direction.\u201d \u2013 Albert Einstein\nMaterials and Hardware\n12\u201d x 24\u201d x \u00be\u201d (23/32\u201d) BC or Lauan Plywood (lowes.com item# 6654)\n12\u201d Diameter Turntable Bearing (lowes.com \u2013 item# 383405).\nThree = 1\u201d x 1\u201d x 16\u201d x .125\u201d wall thickness, Aluminum Square Tubing (onlinemetals.com \u2013 48\u201d of item# 18014).\nThree = \u00bc\u201d \u2013 20 Steel Rivet Nuts (I would suggest an assortment pack (for future projects) from ebay.com. Grip range isn\u2019t important since the nuts won\u2019t have pull out forces applied).\nSoft Tape Measure (amazon.com)\nThree = \u00bc\u201d \u2013 20 x 2.5\u201d Zinc Plated, Carriage Bolts (lowes.com item# 63334)\nOne = 12\u201d length of \u00bd\u201d-13 All-Thread\nOne = \u00bd\u201d-13 Coupling Nut (lowes.com item# 142075))\nOne = \u00bd\u201d-13 Hex Nut (lowes.com item# 63304)\nOne = \u00bd\u201d-13 Nylon Insert Locking Hex Nut (lowes.com item#63406)\nTwo = \u00bd\u201d Flat Washers (lowes.com item# 63309)\nOne = \u00bd\u201d Fender Washer 1/8\u201d thick or two \u00bd\u201d fender Washers 1/16\u201d thick.\nSix = \u00bc\u201d-20 x 1.5\u201d Long Hex Head Bolts (lowes.com item# 63312)\nSix = \u00bc\u201d-20 Hex Head Nuts (lowes.com)\nSix = \u00bc\u201d Flat Washers (lowes.com)\nSix = \u00bc\u201d Flat Washers (lowes.com item# 63306)\nThree = \u00bc\u201d \u2013 20 x 2.5\u201d Grade 8, Hex Head Bolts (lowes.com)\nThree = \u00bc\u201d \u2013 20 Grade 8, Hex Head Nuts (lowes.com)\nFive = 2 \u00bd\u201d Long Deck Screws Hex Head Bolts (lowes.com)\nEight = #8 x 5/8\u201d Phillips Pan Head Sheet Metal Screws (lowes.com)\nEight = #8 Flat Washers (lowes.com)\nOne = 9.5\u201d length of \u00bd\u201d PVC Pipe (lowes.com)\nOne = 2\u201d PVC Cap (lowes.com item# 23920)\nNew Paper Envelope\nCard Board or Heavy Paper 7\u201d x 1\u201d\nSpray Can of Grey Primer (lowes.com item# 1026826)\nSpray Can of Matte White Paint and Primer (lowes.com item# 1026724)\n3/4\u201d x 4\u201d x 12\u201d Any Scrap Wooden Board or Plywood Section (for sanding only)\nCan of Spray -or- Brush On, Contact Adhesive (lowes.com item# 275900)\nThree = Self Adhesive Rubber Feet\nCoarse Sand Paper (lowes.com item# 470333)\nFine Sand Paper (lowes.com)\nMasking Tape (lowes.com)\nTools\nWork Table\nElectric Drill\n1/8\u201d Drill Bit\n\u00bc\u201d Drill Bit\n\u00bd\u201d Paddle Bit\n\u00bd\u201d drill Bit (optional)\nJig Saw\nSanding Block\nYard Stick\nPencil\nBlack Marker\nSharp Nail or Awl\nHammer\n7/16\u201d Wrench\n7/16\u201d Socket Wrench\n\u00be\u201d Wrench\n\u00be\u201d Socket Wrench\nAdjustable Crescent Wrench\nRazor Knife\nVise\nMetal File\nStaple Gun (optional)\nCarpenter Square\n#2 Phillips Screwdriver\n1\u201d Wide Putty Knife\nLarge Flat Tip Common Screwdriver", "title": "Photogrammetry HID Tool", "url": "https://www.instructables.com/id/Photogrammetry-HID-Tool/", "section": "technology", "steps": [{"step": 1, "steps_text": "Using the yard stick and pencil, draw a single line across the exact middle of the 12\u201d x 24\u201d piece of BC Plywood. This will create two 6\u201d x 24\u201d segments (1).", "step_imgs": ["https://cdn.instructables.com/FOG/4JD0/JTYN8C6Z/FOG4JD0JTYN8C6Z.LARGE.jpg"], "step_title": "Step 1:"}, {"step": 2, "steps_text": "Use a black marker to label your bearing as I have, so there is no confusion during layout or assembly (2 and 3). These areas of the bearing will not be seen after the top and bottom decks are attached.", "step_imgs": ["https://cdn.instructables.com/F9Q/I9JL/JTYN8C7K/F9QI9JLJTYN8C7K.LARGE.jpg", "https://cdn.instructables.com/FCM/OL1D/JTYN8C85/FCMOL1DJTYN8C85.LARGE.jpg"], "step_title": "Step 2:"}, {"step": 3, "steps_text": "Lay the Bearing so the \u201cTop of Bearing\u201d label is up. Position the two holes marked with an Arrow so they are centered across the centerline of the plywood, drawn in Step 1. Keeping everything aligned, slide the bearing to within 1/8\u201d of the plywood\u2019s edge (4). Use the pencil to write \u201cBottom Plate\u201d on the plywood offset from the center of the opening.", "step_imgs": ["https://cdn.instructables.com/F57/M9ND/JTYN8C8P/F57M9NDJTYN8C8P.LARGE.jpg"], "step_title": "Step 3:"}, {"step": 4, "steps_text": "I\u2019ve added two more Arrows to the bearing of Step 3. Use the pencil to trace the four holes marked with Arrows, onto the plywood (5).", "step_imgs": ["https://cdn.instructables.com/FO7/DS9L/JTYN8C8R/FO7DS9LJTYN8C8R.LARGE.jpg"], "step_title": "Step 4:"}, {"step": 5, "steps_text": "Trace a line, with the pencil, around the outside of the bearing onto the plywood. Angle the pencil slightly inward and keep the same angle as you trace (6).", "step_imgs": ["https://cdn.instructables.com/F1F/CGGM/JTYN8C9C/F1FCGGMJTYN8C9C.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "The larger hole near the perimeter of the bearing is the access hole. Trace the outline of the access hole with the pencil (7).", "step_imgs": ["https://cdn.instructables.com/FSL/PTP6/JTYN8C9Z/FSLPTP6JTYN8C9Z.LARGE.jpg"], "step_title": "Step 6:"}, {"step": 7, "steps_text": "Set the bearing to the side and use a sharp nail with a hammer to mark the center of each of the traced mounting holes. Then use the yard stick and pencil to draw a line between the two mounting holes without a centerline between them (8). The two intersecting lines mark the center of the bottom plate.", "step_imgs": ["https://cdn.instructables.com/F7X/4PZ3/JTYN8CAK/F7X4PZ3JTYN8CAK.LARGE.jpg"], "step_title": "Step 7:"}, {"step": 8, "steps_text": "Use a new envelope as a right angle (90\u00b0) and draw a line from the two marked holes with the new centerline (Step 7). Use the yard stick to measure 1-3/8\u201d from each hole and mark these two locations with a pencil (9).", "step_imgs": ["https://cdn.instructables.com/FDA/1ZD0/JTYN8CAM/FDA1ZD0JTYN8CAM.LARGE.jpg"], "step_title": "Step 8:"}, {"step": 9, "steps_text": "Draw a line between the two 1 3/8\u201d marks of Step 8. Then measure 2 3/8\u201d from the original centerline of Step 1, both above and below the original centerline and mark these two locations, on the 1 3/8\u201d line (10).", "step_imgs": ["https://cdn.instructables.com/FBP/VLXJ/JTYN8CAN/FBPVLXJJTYN8CAN.LARGE.jpg"], "step_title": "Step 9:"}, {"step": 10, "steps_text": "Using the yard stick carefully pencil two lines radiating from the center of the Bottom Plate, through the two marks of Step 9 and continue the lines past the perimeter trace of the bottom plate (11). Note that this creates three 120-degree angles between the two lines and the original centerline. These angled lines will be used to mount the turntable\u2019s legs.", "step_imgs": ["https://cdn.instructables.com/FXW/8486/JTYN8CB8/FXW8486JTYN8CB8.LARGE.jpg"], "step_title": "Step 10:"}, {"step": 11, "steps_text": "Measure 1 7/8\u201d from center of the Bottom Plate, up each 120-degree line and make a pencil mark. Use the hammer and nail to mark each location (12). These are the future locations of the inside \u00bc\u201d bolts which will secure the aluminum legs.", "step_imgs": ["https://cdn.instructables.com/F1Y/ILJ5/JTYN8CCP/F1YILJ5JTYN8CCP.LARGE.jpg"], "step_title": "Step 11:"}, {"step": 12, "steps_text": "I used a vitamin bottle cap that was 2\u201d in diameter to create a circle for the future center cut-out. I centered the cap by measuring the radius of the cap, 1\u201d up each 120-degree line and marking the location with a pencil. Then I centered the cap using the pencil marks and drew a line around it (13). Don\u2019t make the circle larger than 2\u201d or the structural integrity of the leg mounting bolts (at 1 7/8\u201d marks) can be compromised.", "step_imgs": ["https://cdn.instructables.com/F4H/QYIY/JTYN8CDM/F4HQYIYJTYN8CDM.LARGE.jpg"], "step_title": "Step 12:"}, {"step": 13, "steps_text": "Lay the turntable bearing so the side marked \u201cBottom of Bearing\u201d is up. Rotate the bearing to line up the Access Hole with the large mounting hole on the opposite side of the bearing. Now look inside the two holes marked with Arrows. They should have a corresponding smaller mounting hole on the back of the bearing aligned with them. You can lift and rotate the bearing over to see that the mounting holes are marked with asterisks on the \u201cTop of Bearing\u201d, match the two arrow marked holes on the \u201cBottom of Bearing\u201d.\nPosition the two arrowed mounting holes across the original centerline with the edge of the bearing on the edge of the Plywood. Don\u2019t worry that the bearing overlaps the \u201cBottom Plate\u201d plywood outline trace (14).", "step_imgs": ["https://cdn.instructables.com/F9R/A4I6/JTYN8CH8/F9RA4I6JTYN8CH8.LARGE.jpg"], "step_title": "Step 13:"}, {"step": 14, "steps_text": "I\u2019ve marked the two remaining mounting holes on this side with a couple of Arrows. Use a pencil to trace the outline of all four mounting holes (15).", "step_imgs": ["https://cdn.instructables.com/FRH/2BD6/JTYN8CLQ/FRH2BD6JTYN8CLQ.LARGE.jpg"], "step_title": "Step 14:"}, {"step": 15, "steps_text": "Lay the bearing to the side and mark each mounting hole\u2019s center with the hammer and nail. Use the yard stick to pencil a line between the two holes without a centerline between them and mark the crossing of the two centerlines with the nail and hammer (16).", "step_imgs": ["https://cdn.instructables.com/FPD/8NAH/JTYN8CN6/FPD8NAHJTYN8CN6.LARGE.jpg"], "step_title": "Step 15:"}, {"step": 16, "steps_text": "Use a piece of Cardboard or in my case a piece of 94-pound paper and draw a line across it. Using the yard stick and a very sharp pencil, make two marks on the line 5.75\u201d apart (17).", "step_imgs": ["https://cdn.instructables.com/FRV/21BR/JTYN8CRZ/FRV21BRJTYN8CRZ.LARGE.jpg"], "step_title": "Step 16:"}, {"step": 17, "steps_text": "Cut away excess paper around the line and marks, creating a swath about 1\u201d across. Then use the sharp nail or Awl to barely penetrate both of the marks (18).", "step_imgs": ["https://cdn.instructables.com/F01/N93Y/JTYN8CTL/F01N93YJTYN8CTL.LARGE.jpg"], "step_title": "Step 17:"}, {"step": 18, "steps_text": "Position one marked paper hole over the intersection of the two cross centerlines of Step 15, then gently push the nail or awl straight down into the crossed centerlines about \u00bc\u201d. Using a very sharp pencil placed in the remaining hole, gently rotate the paper or cardboard around the nail, tracing a 5.75\u201d radius cut line (19). Remove the nail / awl and paper.", "step_imgs": ["https://cdn.instructables.com/FZ6/VD3Q/JTYN8CYK/FZ6VD3QJTYN8CYK.LARGE.jpg"], "step_title": "Step 18:"}, {"step": 19, "steps_text": "It\u2019s time to fire-up the jig saw. Cut out the plates and access holes. Note: The jig saw blade is slightly wider than the pencil lines of the two plate\u2019s perimeter cut lines. For this reason, keep the jig saw blade just to the outside of the pencil lines. We will sneak up on the pencil lines with a sanding block and coarse sand paper.\nThe \u201cBottom Plate\u201d has both the 2\u201d center hole and the 1\u201d access hole that need to be cut out. If you don\u2019t have hole saws or paddle bits for the drill, simply drill a \u00bd\u201d hole inside both the traced cut out holes and insert the jig saw to cut them out. The 1\u201d access hole can be larger. I cut mine at 1 \u00bd\u201d.\nFor clarity, I\u2019ve noted the two cut-out lines and the two cut-outs (20).\nNote: Before starting this Instructable I had already cut and drilled the two turntable plates, so I\u2019m going to switch to them now and save my layout illustration piece of plywood for another project.", "step_imgs": ["https://cdn.instructables.com/FTX/ZH8M/JTYN8CZ7/FTXZH8MJTYN8CZ7.LARGE.jpg"], "step_title": "Step 19:"}, {"step": 20, "steps_text": "Once the plates are cut out, use coarse sand paper and a sanding block to clean up the perimeter cuts with some hand sanding. Make all the peaks match the valleys while creating a smooth circular edge. Start with short strokes focused on the peaks while rotating each plate. Then do long strokes to create an even gentle curve. While sanding, do your best to keep the sanding block perpendicular to the edge of the plate.\nCaution: Don\u2019t sand into the penciled perimeter cut lines (especially with the \u201cTop Plate\u201d). Let the outside pencil edge be the smooth circular boundary (21).", "step_imgs": ["https://cdn.instructables.com/FMM/OS18/JTYN8D3P/FMMOS18JTYN8D3P.LARGE.jpg"], "step_title": "Step 20:"}, {"step": 21, "steps_text": "Spray the edge of each plate with grey primer (22).", "step_imgs": ["https://cdn.instructables.com/FM1/7KOR/JTYN8D55/FM17KORJTYN8D55.LARGE.jpg"], "step_title": "Step 21:"}, {"step": 22, "steps_text": "If you don\u2019t have a staple gun use some spray adhesive and glue a coarse piece of sand paper to a smooth flat face on a 1\u201d x 4\u201d x 18\u201d board (23). Use five 2 \u00bd\u201d deck screws and attach the sand paper board to the end of your work table. The board needs to be screwed tight so it is at a 90-degree angle perpendicular to the work table\u2019s surface (24).", "step_imgs": ["https://cdn.instructables.com/FXC/Z59E/JTYN8D6N/FXCZ59EJTYN8D6N.LARGE.jpg", "https://cdn.instructables.com/F3H/IZTC/JTYN8DC5/F3HIZTCJTYN8DC5.LARGE.jpg"], "step_title": "Step 22:"}, {"step": 23, "steps_text": "Lay the \u201cBottom Plate\u201d on top of the work table and slide the edge of the plate down the length of the sanding board while rotating the Plate. This will make the Plate\u2019s edge perpendicular to the Plate\u2019s surface. Flip the plate over a few times while sanding, just in case the sanding board\u2019s not exactly perpendicular. When all of the primer is sanded off you will know that all irregularities have been removed and the plate is ready to be mounted (25).", "step_imgs": ["https://cdn.instructables.com/FQF/S2R7/JTYN8DEP/FQFS2R7JTYN8DEP.LARGE.jpg"], "step_title": "Step 23:"}, {"step": 24, "steps_text": "Drill a 1/8\u201d hole through the center of the \u201cTop Plate\u201d. Turn the plate over so the smooth \u201cB\u201d side is on top. Use a \u00bd\u201d paddle bit to drill completely through the plate, using the 1/8\u201d hole as a guide.\nIf you don\u2019t have a paddle bit, use a pencil and the shank of a regular \u00bd\u201d drill bit and draw a \u00bd\u201d diameter circle, centered around the 1/8\u201d pilot hole. Use a razor knife to cut out the \u00bd\u201d circle. Cut down to a depth of the top veneer. Now you can use the regular \u00bd\u201d drill bit to drill the hole without severely splintering the plywood\u2019s veneer (26).", "step_imgs": ["https://cdn.instructables.com/FS7/Y8E0/JTYN8DF7/FS7Y8E0JTYN8DF7.LARGE.jpg"], "step_title": "Step 24:"}, {"step": 25, "steps_text": "Use the tailor\u2019s tape and measure the circumference of the \u201cTop Plate\u201d. My circumference was 36 7/16\u201c(27). Place the \u00bd\u201d x 4 \u00bd\u201d bolt in the center hole of the Plate, to use as a hand grip and sand down the edge (28).\nRotate and sand until the edge is perpendicular and the circumference of the \u201cTop Plate\u201d is exactly 36\u201d. Then remove the bolt hand grip.\nCaution: measure the circumference frequently so you don\u2019t go below 36\u201d of circumference. 7/16\u201d of extra circumference equals a little more than 1/16\u201d (0.0625\u201d) of radius.\n7/16\u201d (0.4375\u201d) / pi (3.1416) / 2 = 0.0696\u201d of radius.\nNote: This step took a lot of sanding but the result was worth it. I switched back and forth between using my sanding block to remove a lot of material and the sanding board to reestablish my perpendicular edge.", "step_imgs": ["https://cdn.instructables.com/F9S/AAIR/JTYN8DKW/F9SAAIRJTYN8DKW.LARGE.jpg", "https://cdn.instructables.com/FEZ/8MT6/JTYN8DLH/FEZ8MT6JTYN8DLH.LARGE.jpg"], "step_title": "Step 25:"}, {"step": 26, "steps_text": "Use a razor knife to cut the tailor\u2019s tape at the \u00bd\u201d mark and the 36 \u00bd\u201d mark. Wrap the top of tape around the Top Plate one more time to make sure the two ends touch. If they touch, spray contact adhesive onto the edge of the \u201cTop Plate\u201d and the back of the tailor\u2019s tape. I sprayed the Top Plate upside down so the bearing side of the plate would receive the over-spray adhesive.\nCaution: When applying the tape to the plate, make sure the \u201cTop\u201d face of the Top Plate is up, have the plate on a flat surface and wrap the tape (numbers up) around the Plate using the flat surface to guide the bottom edge of the tape.\nAfter letting adhesive dry slightly but while still tacky, position and adhere the tailor\u2019s tape around the edge of the plate. (29).", "step_imgs": ["https://cdn.instructables.com/FJ2/GE9Q/JTYN8DYQ/FJ2GE9QJTYN8DYQ.LARGE.jpg"], "step_title": "Step 26:"}, {"step": 27, "steps_text": "Use the yard stick, masking tape and pencil to mark both ends of each 16\u201d aluminum leg. Place the two marks centered along the length of the leg, \u00bd\u201d from each end of the square tube (30).", "step_imgs": ["https://cdn.instructables.com/F60/7A10/JTYN8E7M/F607A10JTYN8E7M.LARGE.jpg"], "step_title": "Step 27:"}, {"step": 28, "steps_text": "Drill a \u00bc\u201d hole through only one face, at one mark, on one end of each square tube. At the remaining mark, on each square tube, Drill a 0.332\u201d (Q bit size) or 0.3281\u201d (21/64\u201d bit size) hole completely through the square tube (31).", "step_imgs": ["https://cdn.instructables.com/FL9/2KFU/JTYN8ECO/FL92KFUJTYN8ECO.LARGE.jpg"], "step_title": "Step 28:"}, {"step": 29, "steps_text": "Insert a \u00bc\u201d\u201320 aluminum rivet nut into the \u201cQ\u201d hole face of each tube that doesn\u2019t have a \u00bc\u201d hole in the opposite end of the tube on the same face (32). Seat the rivet nut with a hammer.", "step_imgs": ["https://cdn.instructables.com/FW4/12IN/JTYN8ELS/FW412INJTYN8ELS.LARGE.jpg"], "step_title": "Step 29:"}, {"step": 30, "steps_text": "Place each piece of tubing into a vice to set it's rivet. Thread a \u00bc\u201d\u201320 x 1 \u00bd\u201d hex bolt into a \u00bc\u201d\u201320 hex nut and then screw the nut and bolt into the river nut. Use two 7/16\u201d wrenches to seat the rivet nut (33). Then remove the bolt, nut and the tubing from the vise. Repeat the process for the other two aluminum legs.", "step_imgs": ["https://cdn.instructables.com/FLO/K8PP/JTYN8EU4/FLOK8PPJTYN8EU4.LARGE.jpg"], "step_title": "Step 30:"}, {"step": 31, "steps_text": "Using a carpenter\u2019s square and a pencil continue the 120-degree lines created in step 10 over the edge of the \u201cBottom Plate\u201d (34).", "step_imgs": ["https://cdn.instructables.com/F81/U4EF/JTYN8F1T/F81U4EFJTYN8F1T.LARGE.jpg"], "step_title": "Step 31:"}, {"step": 32, "steps_text": "Use four #8 x 5/8\u201d Phillips Pan Head Sheet Metal Screws and a #2 Phillips Screw driver to attach the Turn Table Bearing to the Bottom Plate, at the locations marked in Step 7 (35). Note: Make sure you match the Access Hole locations of the Bottom Plate and Bearing.", "step_imgs": ["https://cdn.instructables.com/F2W/8MSH/JTYN8F1V/F2W8MSHJTYN8F1V.LARGE.jpg"], "step_title": "Step 32:"}, {"step": 33, "steps_text": "Drill three \u00bc\u201d holes through the Bottom Plate, at the leg bolt locations marked in Step 11 (36).", "step_imgs": ["https://cdn.instructables.com/F6W/KBAD/JTYN8FKU/F6WKBADJTYN8FKU.LARGE.jpg"], "step_title": "Step 33:"}, {"step": 34, "steps_text": "Insert three \u00bc\u201d-20 x 1\u00bd\u201d Hex Head Bolts through the Bottom Plate \u00bc\u201d holes and into the \u00bc\u201d holes of the three, square tubing legs. Temporarily, secure them with \u00bc\u201d\u201320 Hex Nuts only.", "step_imgs": [], "step_title": "Step 34:"}, {"step": 35, "steps_text": "Position the assembly with the legs down, on top of the work table and align the 120-degree edge marks made in Step 31 with the centers of the square tubes (37).", "step_imgs": ["https://cdn.instructables.com/F19/6QTY/JTYN8FQD/F196QTYJTYN8FQD.LARGE.jpg"], "step_title": "Step 35:"}, {"step": 36, "steps_text": "Place masking tape on the inside of the bearing above the radiating 120-degree lines. Use a narrow putty knife as a straight edge and mark the three lines on the tape. With the yard stick, measure \u00bd\u201d up each line, from the inside of the bearing and make a pencil mark (38).", "step_imgs": ["https://cdn.instructables.com/F5I/6GI2/JTYN8FZJ/F5I6GI2JTYN8FZJ.LARGE.jpg"], "step_title": "Step 36:"}, {"step": 37, "steps_text": "Double check that the square tubes are still centered on the edge lines. At the marks made in the last step, use a \u00bc\u201d Drill Bit and drill through the bearing plate, the Bottom Plate and the square tubes (39).", "step_imgs": ["https://cdn.instructables.com/FMI/1K8L/JTYN8G8H/FMI1K8LJTYN8G8H.LARGE.jpg"], "step_title": "Step 37:"}, {"step": 38, "steps_text": "Remove the three \u00bc\u201d hex bolts installed in Step 34. Re-install them into the \u00bc\u201d holes drilled in Step 37, but this time use a \u00bc\u201d lock washer inside each square tube to keep the hex nut tight. Small fingers and patience are a plus when getting the washers and nuts on the bolts, inside the tube. I was able to do it despite my big fingers and lack of patience. When you tighten the nut, wedge a large flat tip screw driver between the nut and the inside wall of the tube, to keep the nut from spinning.", "step_imgs": [], "step_title": "Step 38:"}, {"step": 39, "steps_text": "Repeat Step 34 using new nuts and bolts along with flat washers under the bolts and lock washers under the nuts.", "step_imgs": [], "step_title": "Step 39:"}, {"step": 40, "steps_text": "Position the \u201cTop Plate\u201d upside down on the work table. Rotate the bearing so one of the Top Plate mounting holes is centered in the Access Hole of the Bottom Plate. Refer to photos 40 and 41 for clarification. Position and align the Bearing Top Plate mounting hole (in the Access Hole) to a mounting hole in the Top Plate.\nUse four #8 x 5/8\u201d Phillips Pan Head, Sheet Metal Screws and a #2 Phillips screw driver to attach the Turn Table Bearing to the Top Plate, through the access hole, at the locations marked in Step 15 (42). Note: Don\u2019t tighten the screws completely until all four are inserted in the Top Plate. Just screw them in enough so the bearing\u2019s access hole can be rotated to the next screw location.", "step_imgs": ["https://cdn.instructables.com/F4X/WQWM/JTYN8G9E/F4XWQWMJTYN8G9E.LARGE.jpg", "https://cdn.instructables.com/FK0/GVUF/JTYN8GGT/FK0GVUFJTYN8GGT.LARGE.jpg", "https://cdn.instructables.com/FIH/W08X/JTYN8GM0/FIHW08XJTYN8GM0.LARGE.jpg"], "step_title": "Step 40:"}, {"step": 41, "steps_text": "Use a couple of wrenches to tighten the \u00bd\u201d coupling nut snug against a \u00bd\u201d hex nut, on the \u00bd\u201d all-thread. Then thread the \u00bd\u201d self-locking, nylon insert hex nut onto the opposite end of the all-thread, until 1/8\u201d thread protrudes (43). Loosen and remove the hex nut and coupling nut.", "step_imgs": ["https://cdn.instructables.com/FOA/8X61/JTYN8GR1/FOA8X61JTYN8GR1.LARGE.jpg"], "step_title": "Step 41:"}, {"step": 42, "steps_text": "Place the \u00bd\u201d ID x 1/8\u201d thick fender washer on the all-thread (44) and thread it through the Top Plate, from beneath the assembly.", "step_imgs": ["https://cdn.instructables.com/F30/MWDC/JTYN8GT6/F30MWDCJTYN8GT6.LARGE.jpg"], "step_title": "Step 42:"}, {"step": 43, "steps_text": "Place a \u00bd\u201d washer onto the all-thread and then wrap masking tape around the all-thread, just above the washer and 9\u201d above the washer. Wrap the tape at both locations until it\u2019s thick enough to act as bushings to keep the PVC centered around the all-thread (45).", "step_imgs": ["https://cdn.instructables.com/FO7/SF3G/JTYN8GY5/FO7SF3GJTYN8GY5.LARGE.jpg"], "step_title": "Step 43:"}, {"step": 44, "steps_text": "Place the PVC over the tape bushings, add the \u00bd\u201d washer, \u00bd\u201d lock washer and \u00bd\u201d coupling. Tighten the assembly using two wrenches (46). Sand the surfaces of the \u00bd\u201d washers, \u00bd\u201d lock washer, \u00bd\u201d coupling nut and PVC Tube.", "step_imgs": ["https://cdn.instructables.com/FMQ/GR7K/JTYN8H6Q/FMQGR7KJTYN8H6Q.LARGE.jpg"], "step_title": "Step 44:"}, {"step": 45, "steps_text": "Mask the adhered tailor\u2019s tape with masking tape and trim of the excess tape with a razor knife.", "step_imgs": [], "step_title": "Step 45:"}, {"step": 46, "steps_text": "Sand and clean the assembly, install a \u00bd\u201d bolt in the top of the coupling (no spray on threads), then coat it thoroughly with spray primer / paint (47).", "step_imgs": ["https://cdn.instructables.com/FAK/SAYF/JTYN8H7H/FAKSAYFJTYN8H7H.LARGE.jpg"], "step_title": "Step 46:"}, {"step": 47, "steps_text": "After drying, remove the masking tape and thread cover bolt, from the assembly. Then attach the self-adhesive rubber feet to the bottom of the aluminum legs (48).", "step_imgs": ["https://cdn.instructables.com/FHR/Q6PF/JTYN8HCZ/FHRQ6PFJTYN8HCZ.LARGE.jpg"], "step_title": "Step 47:"}, {"step": 48, "steps_text": "Note: The round PVC cap is normally not secured to the base plate. The three aluminum legs keep it confined during application of heavy loads (49). Normally it\u2019s treated as a loose accessory. If you decide to attach it, I would suggest using double sided tape applied to the deck plate and cap edge. This will give you easy access to the column nut if you ever need it.", "step_imgs": ["https://cdn.instructables.com/F22/1P2K/JTYN8HQ6/F221P2KJTYN8HQ6.LARGE.jpg"], "step_title": "Step 48:"}, {"step": 49, "steps_text": "The base assembly can be adjusted to what you want to model. Here we see the removable cap pivot, rubber feet and adjustable bolt feet (50).\nIf your modeling is confined to smaller subjects, you might decide not to install turntable legs and just use rubber feet attached directly to the lower deck.\nIf you are prone to modeling large bulky models with an off center, CG (center of gravity), weighing less than 20 lbs, the legs and bolt feet will do nicely.\nThere is a variety of choices for the discriminating photogramist.", "step_imgs": ["https://cdn.instructables.com/FW4/YPAM/JTYN8I5T/FW4YPAMJTYN8I5T.LARGE.jpg"], "step_title": "Step 49:"}, {"step": 50, "steps_text": "Specialized model mounting hardware flexibility is accomplished with the \u00bd\u201d-13 transition coupling. To kick start your creativity, I\u2019ve included a few securing devices that I will use soon.\nThe first is a spike, made from an old screwdriver nested in a hole drilled into the head of a \u00bd\u201d-13 bolt (51).", "step_imgs": ["https://cdn.instructables.com/F9F/3YM0/JTYN8ICD/F9F3YM0JTYN8ICD.LARGE.jpg"], "step_title": "Step 50:"}, {"step": 51, "steps_text": "Second is a glob of hot glue seated on a \u00bd\u201d-13 carriage bolt (52). I call it the \u201cGlubber\u201d. Heat the glue to re-use it on the base of models.", "step_imgs": ["https://cdn.instructables.com/FAD/RVCI/JTYN8ICF/FADRVCIJTYN8ICF.LARGE.jpg"], "step_title": "Step 51:"}, {"step": 52, "steps_text": "Next is the offset plate. Very handy for keeping the model centered during rotation while utilizing a screw hole in the base of the model (53).", "step_imgs": ["https://cdn.instructables.com/FG9/FVUH/JTYN8IGH/FG9FVUHJTYN8IGH.LARGE.jpg"], "step_title": "Step 52:"}, {"step": 53, "steps_text": "My last example is a carriage bolt wrapped with masking tape to support a model that can be clamped around it (54).\nI hope that this Instructable has inspired your creativity and that you will share your re-mix of this project.\nHappy Modeling.", "step_imgs": ["https://cdn.instructables.com/FWJ/EZUO/JTYN8IKW/FWJEZUOJTYN8IKW.LARGE.jpg"], "step_title": "Step 53:"}], "channel": ""}, {"category": "", "description": "ENTRY IN THE REMIX CONTEST - VOTE NOW HERE OR AT THE BOTTOM OF THE PAGE!!!\nThis is a remix I just had to do ever since I saw two awesome instructables and couldn't stop thinking about combining the two! This mashup basically combines the interface of the Light Switch Box with simple games (Simon, Whack-a-Mole, etc...) on the Arduino. Like the original author of the Light Switch Box mentions, I have no idea why toddlers love to play with light switches so much, but this project gives them their fix! I adapted the simple electronics to add the Simon Arduino game and then multiple game modes so my older kids can play too! I also made one major enhancement for the LEDs and used ping pong balls to diffuse the LEDs because it looks so much cooler than the original!\nIt should be an easy way to get into electronics and take it one notch further to simple Arduino'ing. Check out the original inspiration - here are the links!\nChild's Toy Light Switch Box\nArduino Simon Says Game\n\nAside - My Motivation:\nMy 4 kids mean everything to me.\nAt their young ages right now (7,5,3,and 1) it takes a lot of attention and work to keep everyone sane! That doesn't leave much time for tinkering, Arduino'ing, writing Instructables, etc. But oddly enough it's those types of projects and hobbies that keep me sane. Anyone else feel similarly? For whatever sad, strange reason that my wife tries really hard to comprehend (bless her heart), I absolutely love getting sucked into a good project for hours on end that gets my creative thinking going, makes me problem-solve, and gives me the opportunity for hand's-on engineering.\nAnd that's what I love about Instructables!!!\nI get to see the passion in other's projects - so many great ideas and my mind starts racing! So at least when I gear the project towards my kids right now and involve them in the process I feel like I'm giving them a taste of the hobbies that I love. And who knows? Maybe one day they'll turn out to be some famous inventor, designer, entrepreneur, hacker, etc. But as long as they can be creative, finding passion in their work, it will all be worth it.\nLet's get started!!!", "title": "Kid's Toy Light Switch Box + Games Remix", "url": "https://www.instructables.com/id/Childs-Toy-Light-Switch-Box-Remix/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials List:\n--- Hardware Store ---\n(1) 1\"x10\" board (Need about 12\"-18\")\n(4) single pole light switches\n(4) light switch wall plates\n(4) plastic \"old work\" electric boxes\n--- Walmart or Amazon---\n(2) white ping pong balls\n(4) AA batteries\n--- Electronic Components Online ---\n(4) RGB 10mm LEDs\n(1) Push button switch\n(1) Piezo buzzer (or speaker)\n(5) 100 ohm resistors\n(1) 220 ohm resistor\n(1) 4xAA battery holder\n(1) Slide switch\n(1) Arduino Uno\nTools List:\n--- Workshop ---\nJigsaw\nDrill with bits (1 1/2\" flat boring bit, 1/2\" flat boring bit, then standard 1/2\", 1/4\", 1/16\")\nScrewdrivers (phillips and flat head)\nTape measure\nUtility knife\nSandpaper and paint (optional)\n--- Home and Electronics ---\nSoldering iron and solder\nWire strippers\nHot glue gun\nRuler\nPencil\nScissors", "step_imgs": ["https://cdn.instructables.com/F9L/CRKQ/JTOMY7ET/F9LCRKQJTOMY7ET.LARGE.jpg", "https://cdn.instructables.com/F7I/6A39/JTOMY86D/F7I6A39JTOMY86D.LARGE.jpg"], "step_title": "Step 1: Materials and Tools"}, {"step": 2, "steps_text": "To create the panel you'll need a board or a box that at least has room on the main panel for 4 light switches and 4 ping pong balls. About 14\" by 8\" is the smallest you'd want to go to fit this. In the original Child's Toy Light Switch Box instructable Ben recommends buying a wooden box for this project, but I made do with a 1\" x 10\" board for now.\nTake the board (or box lid) and layout the switches and ping pong balls (18\" by 9 1/4\" in my design)\nMeasure from the bottom of the board and mark how far up you want the switches set (1 1/2\" in my design)\nUsing a ruler draw in pencil a straight line across those markings\nDo the same for the top line where you want to center the ping pong balls (2\" in my design)\nNext find the center of the board by measuring across the length and mark the center line\nUse symmetrical distances from the middle on each side with equal spacing between electric boxes and ping pong balls\nSketch out the switch boxes and mark on the top line equal to the center of each switch where the ping pong ball will go\n(Note: Don't worry about the pencil lines assuming you will paint or sand the completed board.)", "step_imgs": ["https://cdn.instructables.com/F78/HZ76/JTON4LT2/F78HZ76JTON4LT2.LARGE.jpg", "https://cdn.instructables.com/F9R/JTVX/JTOMY7KA/F9RJTVXJTOMY7KA.LARGE.jpg", "https://cdn.instructables.com/FCT/DWLX/JTOMY7AW/FCTDWLXJTOMY7AW.LARGE.jpg"], "step_title": "Step 2: Draft Main Panel Layout"}, {"step": 3, "steps_text": "Cutting out the electric box rectangles:\nDrill 1/4\" holes in each corner of each rectangle as shown\nCut out each rectangle using a jigsaw to connect the holes along the sides, top and botto\nPreparing the Ping Pong Ball holes:\nOn each of the 4 ping pong marks, first use the 1 1/2\" drill bit to start the hole where the cover will go\nWarning: Here you only drill about 1/8\" down into the wood!!! Just enough for a lip.\nAfter prepping the 1 1/2\" hole, drill through the center of each hole with 1/4\" bit", "step_imgs": ["https://cdn.instructables.com/FFV/H1GR/JTOMY7BV/FFVH1GRJTOMY7BV.LARGE.jpg", "https://cdn.instructables.com/FS8/W5AV/JTOMY7BI/FS8W5AVJTOMY7BI.LARGE.jpg", "https://cdn.instructables.com/F7I/7R0I/JTOMY7B8/F7I7R0IJTOMY7B8.LARGE.jpg", "https://cdn.instructables.com/FUD/75M1/JTOMY7B6/FUD75M1JTOMY7B6.LARGE.jpg"], "step_title": "Step 3: Drill and Cut Panel Holes"}, {"step": 4, "steps_text": "Next mount each electrical box by sliding them into the hole making sure the tabs on top and bottom are tucked in next to the box.\nAfter making sure the electric box is completely in (flush with the front face), screw in the top and bottom.\nMake sure the tabs for these \"old work\" boxes end up out and grab the back of the board, making it snug.\nWarning: Don't over-tighten or you may break the plastic!!", "step_imgs": ["https://cdn.instructables.com/FT0/4Z6D/JTOMY7R9/FT04Z6DJTOMY7R9.LARGE.jpg", "https://cdn.instructables.com/FXF/2ZEM/JTOMY7B7/FXF2ZEMJTOMY7B7.LARGE.jpg", "https://cdn.instructables.com/F88/PH4K/JTOMY7Y6/F88PH4KJTOMY7Y6.LARGE.jpg"], "step_title": "Step 4: Mount Electric Boxes on Panel"}, {"step": 5, "steps_text": "Cut and strip about 1/2\" off the edges of 2 wires for each light switch.\n(About 12\" - 14\" is the most you'll need so it can reach across the panel).\nConnect a wire to each side screw of the light switch.", "step_imgs": ["https://cdn.instructables.com/FMJ/YCH6/JTOMY7BU/FMJYCH6JTOMY7BU.LARGE.jpg", "https://cdn.instructables.com/FT0/BKWQ/JTOMY7EA/FT0BKWQJTOMY7EA.LARGE.jpg", "https://cdn.instructables.com/F85/7ECA/JTOMY7D8/F857ECAJTOMY7D8.LARGE.jpg"], "step_title": "Step 5: Wire the Switches"}, {"step": 6, "steps_text": "Flipping the panel over to the backside, use a screwdriver or pliers to pop out one of the top wire tabs on each of the 4 electrical boxes.\nTurning the panel back over to the front, thread the wire ends through the open tab and screw in each switch.", "step_imgs": ["https://cdn.instructables.com/F1P/GQEG/JTOMY7OT/F1PGQEGJTOMY7OT.LARGE.jpg", "https://cdn.instructables.com/FKM/V9ZX/JTOMY86T/FKMV9ZXJTOMY86T.LARGE.jpg"], "step_title": "Step 6: Attach Switches to Electric Boxes"}, {"step": 7, "steps_text": "I find it simplest (and maybe even cheapest) to just buy a bulk amount of RGB LEDs and then I can pick whatever color(s) I want for a project. If you already have red, blue, green, and yellow LEDs, ignore this step. For everyone else, clipping off the leads we won't be using from each LED will help us not get confused.\nOn each common cathode RGB LED the longest lead is GND and will always be used\nFor each LED use wire cutters/snippers to cut off the unneeded leads shown in the diagram\nAs you can see in the diagram yellow is made using the red and green leads\nNote: Try not to mix up the LEDs after snipping the leads, but if you do, just refer back to diagram to tell them apart.", "step_imgs": ["https://cdn.instructables.com/FXZ/TMBF/JTT5H94D/FXZTMBFJTT5H94D.LARGE.jpg", "https://cdn.instructables.com/FKO/OW85/JTOMY7CN/FKOOW85JTOMY7CN.LARGE.jpg", "https://cdn.instructables.com/FW1/REOG/JTOMY7FE/FW1REOGJTOMY7FE.LARGE.jpg"], "step_title": "Step 7: Cut RGB LED Leads"}, {"step": 8, "steps_text": "Using a hot glue gun, add glue to the underside of each LED and stick the leads through the hole, gluing it to the front of the panel. (Here you will want to make sure you are putting the LED colors in the order you choose).", "step_imgs": ["https://cdn.instructables.com/FUC/WOUR/JTOMY7CL/FUCWOURJTOMY7CL.LARGE.jpg"], "step_title": "Step 8: Mount LEDs to Panel"}, {"step": 9, "steps_text": "At this point I decided to add a push button switch (latching kind) to the front of the panel to assist with changing modes. If you only want to do one mode on the Arduino, you can ignore this switch.\nDrill 1/2\" hole for push button switch where desired (for mine it was in line with the LEDs and center of the panel)\nNext, flip the panel over and using a 1/2\" flat boring bit, drill most of the way through the wood until just the tip of the bit breaks through to the front side. (This hole is for the piezo - without a small hole the sound will be muffled.)", "step_imgs": ["https://cdn.instructables.com/FCP/DSPU/JTOMY7JE/FCPDSPUJTOMY7JE.LARGE.jpg", "https://cdn.instructables.com/F6Z/6KIL/JTOMY7WY/F6Z6KILJTOMY7WY.LARGE.jpg"], "step_title": "Step 9: Drill Holes for Push Button and Piezo"}, {"step": 10, "steps_text": "Next, paint or spray paint the panel. If like me, you don't want to remove the switches, just cover them with tape. (Or if I had thought about it earlier I suppose I would have painted before mounting LEDs and Switches)", "step_imgs": ["https://cdn.instructables.com/FBO/AO8I/JTOMY7BA/FBOAO8IJTOMY7BA.LARGE.jpg"], "step_title": "Step 10: Paint the Panel"}, {"step": 11, "steps_text": "Used ping pong balls will work just fine here, but should be cleaned first. For dirty ping pong balls use a little dish soap and wash with your fingers and then dry. (The ping pong balls in these pictures were very used and looked much different before I washed them!)\nTake each ping pong ball and carefully use a utility or exacto knife to cut the ball down the middle seam. (Holding the ball up to the light you should be able to see the seam).\nNext, use scissors to cut around the edge, trimming about another 1/8\" - 1/4\" further until the cover is able to fit into the 1 1/2\" round slot.\nTo mount each ping pong ball gently press one side into the slot, then ease in around the ball the edges into the slot.\nMine fit so snugly that no glue was needed. If needed add a dab of hot glue on the back when putting them in the slot.\nNote: If the ball cover doesn't fit, keep trimming a bit off the bottom edge until you can get it in the slot. It may be good to practice mounting one of the balls to get the right size, then trim the others similarly.", "step_imgs": ["https://cdn.instructables.com/FKA/KEVM/JTOMY7E0/FKAKEVMJTOMY7E0.LARGE.jpg", "https://cdn.instructables.com/FRC/NXS1/JTOMY7BJ/FRCNXS1JTOMY7BJ.LARGE.jpg", "https://cdn.instructables.com/FGX/YSOT/JTOMY7A4/FGXYSOTJTOMY7A4.LARGE.jpg", "https://cdn.instructables.com/FJH/NTNC/JTOMY7F4/FJHNTNCJTOMY7F4.LARGE.jpg"], "step_title": "Step 11: Cut and Mount Ping Pong Ball LED Covers"}, {"step": 12, "steps_text": "Mount the switch plate covers using a flat-head screwdriver.", "step_imgs": ["https://cdn.instructables.com/F6O/W2L8/JTOMY7MA/F6OW2L8JTOMY7MA.LARGE.jpg"], "step_title": "Step 12: Mount the Switch Plate Covers"}, {"step": 13, "steps_text": "Put the push button through the front hole and hold in place to add hot glue to the back until dry.\nRemove any cover from the piezo and slide into the slot. Use hot glue to hold in place.", "step_imgs": ["https://cdn.instructables.com/FLK/V74J/JTOMY7PN/FLKV74JJTOMY7PN.LARGE.jpg", "https://cdn.instructables.com/FQS/KSGK/JTOMY7BN/FQSKSGKJTOMY7BN.LARGE.jpg"], "step_title": "Step 13: Attach Push Button and Piezo"}, {"step": 14, "steps_text": "So for simple electronics projects like this with a minimal number of components, I prefer a simple method of connecting resistors and wires directly to the wood board. Drilling small holes in board for the component leads allows them to hold in place easily while soldering!\nFirst, on the back of the board label the colors of the LEDS, and the leads with a + and - (remember the neg- side is the longest)\nAlso, for the yellow LED label both positive terminals with R (red) and G (green) since it will have two leads\nDrill a 1/8\" or 1/16\" small hole in the wood right next to each LED lead coming out of the hole in the board\nWarning: Make sure to not drill all the way through the board to the front! Just a 1/4\" - 1/2\" hole where you can feed in wires.\nGently bend over the LED leads and insert into the hole\nNext, drill a 1/8\" or 1/16\" small hole about an inch away from the positive+ terminal(s) on each LED\nWrite the resistor size that will span this gap based on the diagram\nNext, fold or trim the resistor leads and span each gap with the appropriate resistor\nUsing a soldering iron and solder, the component leads should be touching and you can now simply solder at each hole\nLast, put a dab of hot glue on each connection to better hold the components and leads to the board.", "step_imgs": ["https://cdn.instructables.com/F1U/8CEG/JTOMY81J/F1U8CEGJTOMY81J.LARGE.jpg", "https://cdn.instructables.com/F5F/70YI/JTT5HGA7/F5F70YIJTT5HGA7.LARGE.jpg", "https://cdn.instructables.com/FLI/V41J/JTOMY7A2/FLIV41JJTOMY7A2.LARGE.jpg", "https://cdn.instructables.com/F5A/6R28/JTOMY7AY/F5A6R28JTOMY7AY.LARGE.jpg"], "step_title": "Step 14: Mount and Solder Resistors"}, {"step": 15, "steps_text": "Follow the diagram to make connections between the LEDs, resistors, push button, piezo, light switches and Arduino. Each line that is black in the diagram is connected to ground (GND) on the Arduino. Similar to the resistors, it is easiest to drill a hole in the wood, feed all the ground wires into the hole to solder together with a single wire that will lead from the bunch to the arduino. Again, use hot glue to pin the wires to where you want on the board.", "step_imgs": ["https://cdn.instructables.com/F9R/VLQK/JTT5HL82/F9RVLQKJTT5HL82.LARGE.jpg", "https://cdn.instructables.com/FSI/MFYJ/JTOMY7JQ/FSIMFYJJTOMY7JQ.LARGE.jpg"], "step_title": "Step 15: Wire the Circuit"}, {"step": 16, "steps_text": "Position the Arduino on the back of the panel and attach to the board using screws through the small holes in the sides or strong tape.", "step_imgs": ["https://cdn.instructables.com/FTH/54SF/JTOMY7JC/FTH54SFJTOMY7JC.LARGE.jpg"], "step_title": "Step 16: Mount the Arduino"}, {"step": 17, "steps_text": "If you don't want to run the board off USB power, add 4AA batteries to the circuit using a battery pack. Adding a small slide switch between the positive terminal and the Arduino will allow you to turn on and off power since a regular Arduino Uno and the LEDs will quickly run down batteries.", "step_imgs": ["https://cdn.instructables.com/FRC/ABSV/JTYN8QRN/FRCABSVJTYN8QRN.LARGE.jpg"], "step_title": "Step 17: Add Batteries and Power Switch"}, {"step": 18, "steps_text": "The original code for Simon Says worked great for this project, but I needed to make some modifications to include a simple pass the switch through to the LEDs as well as other modes. The video shows the functionality and below is the code for the completed games.", "step_imgs": [], "step_title": "Step 18: Code the Arduino"}, {"step": 19, "steps_text": "With everything connected, test the circuit and functionality. I haven't yet added a back (the box) part for mine, but the kids love it! I'll end up just enclosing it with a few pieces of wood or putting the panel in a play area. Happy kid gaming! Feel free to add your own logic and games to this simple setup!", "step_imgs": ["https://cdn.instructables.com/FVR/5CB9/JTYN97UD/FVR5CB9JTYN97UD.LARGE.jpg", "https://cdn.instructables.com/FXV/W5GU/JTYN8STF/FXVW5GUJTYN8STF.LARGE.jpg"], "step_title": "Step 19: Test, Enjoy, and Even Customize!"}], "channel": ""}, {"category": "", "description": "Hey guys,\nIn this instructables I want to show you how to build your own automated mixed-drink maker to satisfy all your liquid (and alcohol ;) )needs.\nFor a while now, I have been satisfying my thirst and taste-buds with pre-made concentrates from sodastream. The unit allows you to easily carbonate water and add flavoring to it. However, where it exceeds in easy of use, it lacks in quality. After nearly 4 months of research and planning, I can finally say that i have built my own solution that goes above and beyond anything currently on the market. Having gone through all the steps, this project is great for those who want to build a full-tier product, involving both software and hardware. This project has been a great starting point for the exploration of arduino and manufacturing.\nWith that being said, Follow along to build your own Automated Mixed-Drink Machine..\n\nTake a look at the 3D model below, this is an outline of what the final product should like once your done.\n(If you can't see the interactive 3D model below, its probably because you're not using a WebGL - enabled browser, or your using the instructables app))\nHowever, Before we get any further, its a good idea for you to know what you are going to build, so take a look at these wonderful beauty shots. (yes there is a top, but the internals look cool for the photos :D )\nBelow are GIFs of each station. As the drink is being constructed, it is transported to each station on the a motorized sliding rail. Depending on the recipe, the drink may or may not need to move in different patterns.\nStations Include:\nAutomated Mint, Sugar, and Lime Muddle for releasing all the flavors\nAutomated Lime Slicer and Dispenser\nAutomated Mint and Sugar Dispenser\nAutomated Liquid Dispenser\nAdditionally all these processes are controlled by multiples Arduinos and 10.1\" tablet via a Serial Connection. (Refer to coding steps)\nWOW!!!!\n(This looks even better in real life. If you guys want more photos, please don't hesitate to ask in the comments - i will be happy to upload more :D)", "title": "Automated Cocktail Drink Machine", "url": "https://www.instructables.com/id/Automated-Cocktail-Drink-Machine/", "section": "technology", "steps": [{"step": 1, "steps_text": "The entire machine was modeled and designed in Fusion 360. Below you can find all the required technical parts and files for the machine.\nStandard Hardware Parts:\nMost of these parts you can buy at a local hardware store or online from Amazon/Aliexpress:\nQuantity Description Link Price\n4x 32-35 mm (1\") pipe mounting brackets Bauhaus 3,50\u20ac\n4x\n32-35 mm (1\") pipe mounting brackets\nBauhaus 3,50\u20ac\n2x\n74-80 mm (21/2\") pipe mounting brackets\nBauhaus 4,50\u20ac\n10x Square mounting brackets Bauhaus 15,00\u20ac\n1x 500mmx1500mmx60mm Styrofoam Panel Bauhaus 3,00\u20ac\nNails, Screws, Nuts, Bolts, and Washers:\nQuantity Description Where to buy\nPrice\n8x M5x20mm DIN912 cylinderhead screw\nlocal hardware store\n-\n4x M5x10mm DIN912 cylinderhead screw\nlocal hardware store\n-\n6x M4x20mm DIN912 cylinderhead screw\nlocal hardware store\n-\n4x 1.2mmx20mm Steel Nails local hardware store -\n20x M3x30mm DIN912 cylinderhead screw\nlocal hardware store\n-\n10x M3x25mm DIN912 cylinderhead screw\nlocal hardware store\n-\n30x 5mmx15mm Wood Screws local hardware store -\n20x 5mmx30mm Wood Screws local hardware store -\n2x 30mmx50mm Brass Hinges local hardware store -\n20x M3 Nut\nlocal hardware store\n-\n15x M5 washer\nlocal hardware store\n-\n6x M4 washer\nlocal hardware store\n-\n30x M3 washer\nlocal hardware store\n-\nPipes & Rails:\nQuantity Description Link Price\n1x 20x1000mm round aluminium extrusion\nlocal hardware store\n3,50\u20ac\n1x 15x15x1000 square stainless steel extrusion local hardware store 8,80\u20ac\n1x\n12x1000mm round aluminium extrusion\nlocal hardware store 5,80\u20ac\n1x 75mm Y PVC Pipe Fitting local hardware store 0,50\u20ac\n1x 75mm T PVC Pipe Fitting\nlocal hardware store 0,50\u20ac\n1x 75mmx500mm round PVC pipe\nlocal hardware store 0,75\u20ac\nCNC-Laser-Cut Parts:\nAll laser cut parts were cut on a BOSS LS-1630 laser cutter. I was able to get access to a laser cutter from a nearby school, but there are more and more maker-shops poping up, and those often have similar equipment. For 3mm Acrylic, power was set to 90 and speed 25. For 5mm Acrylic parts the power was set to 95 and speed 10. These settings seemed to work well - it always cut through the plastic and protective covering without any problems, however depending on your machine these settings will likely need to be changed.\nThese are the \"must-have\" laser cut parts - additional laser cut parts from 3mm&5mm acrylic sheets are included in the files, however these only for atheistic purposes.\nDXF Files can be found at the bottom of this step\nQuantity Description How the part looks like\n1x\nTop Bracket\n2x\nSide Bracket\n1x\nBottom Slider\n1x\nCopper Backing\n1x\nWood Bracket\n1x\nLeft Panel\n2x Top & Bottom Electronic Structure\n2x\nSide Panel Electronic Structure\n8x\nBraces\n3D-Printed Parts:\nThe 3D-Printed parts are made out of PLA with a resolution of 0.1mm. I used a Prusa I3 Mk3 3D printer to print the parts. Total Print time was around 48 hours and used almost 500g of filament at 20% infill.\nAll the required STL files are available at the end of this step in addition to GrabCAD and Fusion360 Gallery.\nQuantity Description How the part looks like\n1x\nMint Container\n1x\nSugar Container\n1x\nMint Auger\n1x\nSugar Auger", "step_imgs": [], "step_title": "Step 1: Mechanical Parts List"}, {"step": 2, "steps_text": "Below you can find a list of all the electrical and technical parts (and links to the purchased parts). Many of these can be found in pre-made kits from elegoo, such as:\nELEGOO Mega 2560 Project The Most Complete Starter Kit\nELEGOO EL-KIT-012 UNO Project Smart Robot Car Kit V 3.0 with UNO R3\nI Highly recommend these as they also come with tutorials and other projects for future DIYing! :)\nQuantity Description Name on PCB\nLink Price\n1x Arduino Uno R3\nElegoo Kit -\n1x Arduino Mega 2560\n\nElegoo Kit -\n8x 1k Resistor\nElegoo Kit -\n1x 500N, 100mm, Linear Actuator 20mm/s\nBangood\n38$\n1x 200N, 200mm, Linear Actuator 50mm/s\nBangood\n45$\n3x 5x 60w Peltier Modules\n\nAmazon\n12$\n1x 9g Servo Motor\nGlass Slider Elegoo Kit -\n1x 10.1\" Samsung Tablet\n-\n1x LN298 Motor Driver\nElegoo Kit -\n50x M-M BreadBoard Wires\nElegoo Kit -\n1x Bread Board\nElegoo Kit -\n2x 8 Channel Relay\n\nAmazon\n7$\n2x 120mm Fans\n-\n7x Pumps\n-", "step_imgs": ["https://cdn.instructables.com/FFM/93CE/JTYN898V/FFM93CEJTYN898V.LARGE.jpg"], "step_title": "Step 2: Electronics Part List"}, {"step": 3, "steps_text": "Here comes the most important part, build the structural frame for all the technical parts. The goal here was to make the entire product look and feel as professional as possible. Using materials such as shiny acrylic, hard PVC sheets and thick dark wood did just that. They provided a feed that resembled the strength and functionality of an industrial appliance, but also emitted a sense of homeliness and luxury.\nAfter all, this is just that, a luxury machine. I mean... Its a cocktail maker with copper sheets just for looks! WOW!\nThe Process:\nFirst things first, we need to cut each material to its required size. A list of hand drawn dimensions and diagrams can be seen below, but also obtained via the 3D model above and DXF files for each part. (I'll Include those at the end of this step)", "step_imgs": ["https://cdn.instructables.com/FL4/3081/JTYN686Z/FL43081JTYN686Z.LARGE.jpg", "https://cdn.instructables.com/F1G/3LL5/JTYN893M/F1G3LL5JTYN893M.LARGE.jpg", "https://cdn.instructables.com/F9V/ARU2/JTYN69A0/F9VARU2JTYN69A0.LARGE.jpg", "https://cdn.instructables.com/F5E/RO3Y/JTYN62YU/F5ERO3YJTYN62YU.LARGE.jpg", "https://cdn.instructables.com/FYX/ELWN/JTYN67BP/FYXELWNJTYN67BP.LARGE.jpg", "https://cdn.instructables.com/F6K/XMX1/JTT5RLOO/F6KXMX1JTT5RLOO.LARGE.jpg", "https://cdn.instructables.com/FNL/4CEQ/JTT5RLIU/FNL4CEQJTT5RLIU.LARGE.jpg", "https://cdn.instructables.com/F79/0DW9/JTT5RL5C/F790DW9JTT5RL5C.LARGE.jpg", "https://cdn.instructables.com/F2J/DONZ/JTT5RLE6/F2JDONZJTT5RLE6.LARGE.jpg", "https://cdn.instructables.com/FHT/Z041/JTT5RL0P/FHTZ041JTT5RL0P.LARGE.jpg", "https://cdn.instructables.com/FL5/ZICG/JTYN668O/FL5ZICGJTYN668O.LARGE.jpg", "https://cdn.instructables.com/F2Y/MI9W/JTYN685T/F2YMI9WJTYN685T.LARGE.jpg", "https://cdn.instructables.com/F8W/BS7P/JTYN66H4/F8WBS7PJTYN66H4.LARGE.jpg", "https://cdn.instructables.com/FYP/PV2H/JTYN65WE/FYPPV2HJTYN65WE.LARGE.jpg", "https://cdn.instructables.com/FO7/KLL8/JTYN8YOJ/FO7KLL8JTYN8YOJ.LARGE.jpg", "https://cdn.instructables.com/FLI/2M1I/JTYN660E/FLI2M1IJTYN660E.LARGE.jpg", "https://cdn.instructables.com/FCT/CPMV/JTYN66WJ/FCTCPMVJTYN66WJ.LARGE.jpg", "https://cdn.instructables.com/FE3/AKS4/JTYN65P9/FE3AKS4JTYN65P9.LARGE.jpg", "https://cdn.instructables.com/FDG/R5PZ/JTYN65HZ/FDGR5PZJTYN65HZ.LARGE.jpg", "https://cdn.instructables.com/FBE/WMAS/JTYN66OB/FBEWMASJTYN66OB.LARGE.jpg", "https://cdn.instructables.com/FD1/02U1/JTYN68I1/FD102U1JTYN68I1.LARGE.jpg"], "step_title": "Step 3: Build the Base and Drink Cabinet"}, {"step": 4, "steps_text": "First things first - Print the parts. The 3D-Printed parts are made out of PLA with a resolution of 0.1mm. I used a Prusa I3 Mk3 3D printer to print the parts. I found 20% infill to be the best compromise between strength and filament used.\nBelow is a cross section of a failed print. Here you can see the internal grid structure that provides the 3D object its strength. I even took this piece and ran over it with a car, it still looks the same. :)\nOnce you have all your 3D printed parts, its time to clean them up. I used a chisel and pliers to remove all the support structure, and then sanded every surface with 100,200, and 400, grit sand paper. It is important that these parts have a smooth surface as they will be rubbing against each other.\nNext, you want to insert your motor into the square cavity (you can see this clearly above). Make sure the shaft lines up with the hollowed out circular hole. the tab of the motor should also fit in the tiny square hole perpendicular to the shaft. Once the motor is in place, use hotglue to secure to the 3D printed structure.\nAfter the glue is dry, take the matching auger and slide it into the container. there is a D shaped mounting bracket at the end of the auger shaft which matches that of the motor, use super glue to attach the two for a strong fit.\nOnce the product is complete, mint and sugar will fill the large and small containers respectively. The rotating auger/Archimedes screw will transport the material to the T-shaped pipe, where they both fall down the same shaft into the glass.\nUsing a screw to dose materials allows us to be very accurate (to the gram in my experiments). With this accuracy, we can make the perfect drink!", "step_imgs": ["https://cdn.instructables.com/FGN/HSOK/JTT5RJLY/FGNHSOKJTT5RJLY.LARGE.jpg", "https://cdn.instructables.com/F65/5T2D/JTYN695H/F655T2DJTYN695H.LARGE.jpg", "https://cdn.instructables.com/FV2/OJUE/JTYN63YM/FV2OJUEJTYN63YM.LARGE.jpg", "https://cdn.instructables.com/FHS/1L5Y/JTT5RJDG/FHS1L5YJTT5RJDG.LARGE.jpg", "https://cdn.instructables.com/FUM/FMT3/JTT5RJ7H/FUMFMT3JTT5RJ7H.LARGE.jpg", "https://cdn.instructables.com/FDI/PYDD/JTT5RJ8V/FDIPYDDJTT5RJ8V.LARGE.jpg", "https://cdn.instructables.com/F7R/40DO/JTT5RJHP/F7R40DOJTT5RJHP.LARGE.jpg", "https://cdn.instructables.com/FY8/2WDA/JTT5S4RR/FY82WDAJTT5S4RR.LARGE.jpg", "https://cdn.instructables.com/FD5/KK5G/JTYN88RS/FD5KK5GJTYN88RS.LARGE.jpg", "https://cdn.instructables.com/FSL/PINA/JTT5RJ8H/FSLPINAJTT5RJ8H.LARGE.jpg", "https://cdn.instructables.com/FCG/GMU2/JTYN64X5/FCGGMU2JTYN64X5.LARGE.jpg", "https://cdn.instructables.com/F12/R5BR/JTYN64N8/F12R5BRJTYN64N8.LARGE.jpg", "https://cdn.instructables.com/F3H/KY1L/JTYN64AW/F3HKY1LJTYN64AW.LARGE.jpg", "https://cdn.instructables.com/F4N/3YL1/JTYN68VF/F4N3YL1JTYN68VF.LARGE.jpg"], "step_title": "Step 4: Construct the Mint & Sugar Dispensers"}, {"step": 5, "steps_text": "As you can see in the 3D model above, this is the sliding mechanism used to transport the glass between stations (Liquid Fill, Lime Fill, Sugar/Mint Fill, & Linear Actuator Muddle Station)\nParts Needed:\n15x15mm Square Chrome Pipe\n12mm Diameter Chrome Pipe\n9g Continuous Servo Motor\n70mmx100mmx18mm Dark Wood\nCut the Pipes:\nYou will need to make adjustments to the side of the Pipe Stock. Below you can find the dimensions and quantity required for each part.\n430mmx12mm Diameter Chrome Pipe (2x)\n100x15x15mm Square Chrome Pipe (2x)\n70x100x18mm Stained Wooden Block (1x)\nAdjusting the wooden block:\nAs shown in the interactive 3D model, underneath you will need to house the 9g servo motor. Using a chisel remove 12(d)x34(w)x40(l) of material. I also found that using a 30-35mm circular drill bit was a fast and easy method to remove the majority of material.\nOnce the square is removed, using hot-glue, mount the 9g servo motor underneath. The orientation isn't important, but i found it is better to have the side with the cable on it closer to the wall so it doesn't get stuck.\nNext, using the mounting brackets that come with the servo, attach them to a circular (20mm Diameter) disk (Laser cut DXF Files). This will be the wheel that provides traction to move the slider.\nOnce the servo is mounted, Hot glue the wooden block to the two square chrome pipes. Attach the pipes on the two longer sides of the block. Once attached, the entire piece should make a 100x100mm square.\nNext slide the two longer 12mm round chrome pipes though the 15x15mm square pipes.\nThe Slider Is now complete, and can be mounted in a future step!", "step_imgs": ["https://cdn.instructables.com/FA4/8H1Q/JTYN898W/FA48H1QJTYN898W.LARGE.jpg", "https://cdn.instructables.com/FY9/VM8K/JTYN6976/FY9VM8KJTYN6976.LARGE.jpg", "https://cdn.instructables.com/FW7/U9Q2/JTYN698B/FW7U9Q2JTYN698B.LARGE.jpg"], "step_title": "Step 5: Slider Module (Moves the Glass)"}, {"step": 6, "steps_text": "Common thermal management solutions used in electronics applications address cooling objects with heat exchangers and fluid flow. The heat exchanger is typically either the electronic package itself or an extruded or stamped heat sink attached to the package. Air is the most common fluid used in thermal solutions, either with natural convection or propelled by a fan. In most of these solutions the temperature of the object being cooled remains above the ambient temperature. Peltier modules are electronic devices designed for cooling objects to below the ambient temperature or maintaining objects at a specific temperature by controlled heating or cooling. Selecting or specifying a Peltier module is not difficult but a basic understanding of module characteristics can be helpful to ensure the process flows smoothly.\nPeltier Module Basics\nPeltier modules contain two external ceramic plates separated by semiconductor pellets. One of the plates absorbs heat (becomes cooler) and the other plate dissipates heat (becomes hotter) when a current is passed through the semiconductor pellets. More details regarding the construction and operation of Peltier modules can be found in this technical paper.\nThe following constraints should be understood when selecting or specifying a Peltier module:\nHeat transfer through the module\nTemperature difference across the module\nTemperature of hot side of the module\nSurface area of module\nRequired operating current\nRequired driving voltage\nHeat Transfer Through Peltier Modules\nThe amount of heat to be transferred through a Peltier module from the cold side to the hot side is denoted Q and is specified in Watts. This parameter may be the heat generated by an object to be cooled or it may be the heat conducted to the ambient environment from the object being cooled. It should be understood that Peltier modules do not possess the ability to absorb thermal energy. Peltier modules only transfer thermal energy and the energy being transferred will need to be dissipated on the hot side of the module.\nTemperature Difference Across Peltier Modules\nThe temperature difference specified in a Peltier module datasheet (\u0394T) is measured on the outside surfaces of the two ceramic plates of the module. Care must be taken to understand if there is any temperature difference between the Peltier module plates and the external system temperatures of interest. The following diagram indicates five potentially different temperature regions of a Peltier module system.\nTemperature of the Hot Side of Peltier Modules\nThe characteristics of Peltier modules also change with operating temperature. Some vendors, such as CUI, provide specification data for more than one operating temperature. Specification data will probably not be available for the specific operating temperatures of the application and thus the closest available data should be used.\nSurface Area of Peltier Modules\nThe surface area of Peltier modules is typically specified based upon either the area of the object to be cooled or the area available for heat dissipation. An area mismatch between the area available and the area of the Peltier module can be compensated for by the use of a low thermal impedance heat spreader. A simple heat spreader can be manufactured from aluminum or copper.\nRequired Operating Current\nPeltier modules are current-driven devices similar to LEDs. The desired operating parameters are most conveniently achieved by driving the module with a controlled current source and allowing the current source to provide the required load voltage (the voltage compliance of the current source). This is analogous to providing a specific voltage to a voltage driven device and then letting the voltage source provide the required current (i.e. providing a voltage to a microprocessor and ensuring the voltage source can provide the required load current). Peltier modules can be driven with voltage sources but doing so will make it more difficult to accurately control the heat flow and temperature difference across the module.\nRequired Operating Voltage\nThe required voltage compliance of the current source will be determined from the Peltier module datasheet and operating constraints.\nThe Peltier Module I Chose:\nI Chose a 40mmx40mm Standard 60w Peltier Module. The Module Peaks at 12v, however i found that it seems to work better at around 8, where 12 just makes both sides hot.", "step_imgs": ["https://cdn.instructables.com/FLN/3CYQ/JTWRXXDV/FLN3CYQJTWRXXDV.LARGE.jpg"], "step_title": "Step 6: How to Select a Peltier Module"}, {"step": 7, "steps_text": "For many drink additives (Juices & Tonic Water), it is imperative that they are kept cool. In order to achieve this, an insulated temperature controlled chamber was designed using peltier technology and temperature sensors.\nAt a local hardware store i was able to purchase a large sheet of 60mm thick insulation foam. so far this has done a great job keeping the insides of the container cool.\nUsing a handsaw saw, cut the sheet to the dimensions listed below:\n426mmx226mm (1x) (base)\n470mmx426mm (2x) (side wall)\n470mmx226mm (2x) (side wall)\nUsing hotglue or super glue, construct the 5 sided container. I recommend building it vertically ontop of the base. Sometimes hotglue guns can melt the stryrofoam, but if you hold the glue about 30cm away from the surface you are applying it too, it has enough time to cool down to the point where it does melt. I found that this worked best, even better than superglue.\nOnce the foam frame is constructed, Gather the acrylic parts cut on the laser cutter. In case you don't have access to a laser cutter, they have also been designed to be able to be cut on a table saw or with a circular saw. Remember, these parts are not required, but they do make the product feel complete.\n306mmx106mm (1x) (Cooler Bottom)\n300mmx467mm (2x) (Cooler Sides)\n106mmx467mm (2x) (Cooler Sides)\nIn this case, the smaller walls sandwich the larger ones, with all the walls ontop of the bottom place.\nOnce the cooler's structure is complete, You will need 3 peltier modules and 3 heat sinks. I was able to find extra heatsinks at an electronics recycling bin. It is important to note that your heat sinks should be able to disperse the energy transferred from the peltier modules. (In my case, the larger one is rated to handle 250w, and the smaller ones 100w. More than enough for the 60w peltier modules)\nUsing a steaknife, cuttout the foot print of your coolers on one of the larger foam sides. Then using a drill and 40-50mm diameter bit, cut three holes in the acrylic sheet where the heatsinks will go.\nOn the inside of the cooler, glue a sheet of copper to the wall with the holes in it. I used super glue, but make sure to only glue along the outer edge and away from the holes.\nNext, Using thermal paste (Common at any computer store like fryes or radioshack), stick the peltier modules too the copper from the outside. I tend to use an X shape when applying thermal paste, and then let the force of application spread the rest. This seemed to work well.\nOn the other side of the peltier module, apply more thermal paste, and mount the heat sink to it. If necessary, you may have to drill through the wall and mount the heatsink with nuts and bolts if it is too heavy. Make sure to then attach a fan to the heat sink if it doesn't already have one.\nIn order to accurately control the temperature of the cooled container, I used a Bluetooth-Temperature Module. The temperature of the container can also be viewed via an app on you android or IOS device. Remotely, you can review the temperature and humidity levels as well as set the desired temp.", "step_imgs": ["https://cdn.instructables.com/FQE/HUMU/JTYN88YD/FQEHUMUJTYN88YD.LARGE.jpg", "https://cdn.instructables.com/FVG/4H1A/JTT5RJQK/FVG4H1AJTT5RJQK.LARGE.jpg", "https://cdn.instructables.com/FYN/HOTE/JTYN68DX/FYNHOTEJTYN68DX.LARGE.jpg", "https://cdn.instructables.com/FMV/E3LR/JTYN68GB/FMVE3LRJTYN68GB.LARGE.jpg", "https://cdn.instructables.com/FXA/A6SV/JTT5RJV5/FXAA6SVJTT5RJV5.LARGE.jpg", "https://cdn.instructables.com/FFG/BYEM/JTT5RJZQ/FFGBYEMJTT5RJZQ.LARGE.jpg", "https://cdn.instructables.com/FIQ/13DF/JTT5RKI9/FIQ13DFJTT5RKI9.LARGE.jpg", "https://cdn.instructables.com/FNL/2LIS/JTT5RK91/FNL2LISJTT5RK91.LARGE.jpg", "https://cdn.instructables.com/FKB/HRA4/JTT5RK4D/FKBHRA4JTT5RK4D.LARGE.jpg", "https://cdn.instructables.com/FXS/ECA7/JTT5RKMX/FXSECA7JTT5RKMX.LARGE.jpg", "https://cdn.instructables.com/F1G/FQ1A/JTT5RKRI/F1GFQ1AJTT5RKRI.LARGE.jpg", "https://cdn.instructables.com/FNJ/8DZQ/JTT5RKW4/FNJ8DZQJTT5RKW4.LARGE.jpg", "https://cdn.instructables.com/FL3/V9AP/JTT5RKDO/FL3V9APJTT5RKDO.LARGE.jpg", "https://cdn.instructables.com/FH6/OECJ/JTYN68C7/FH6OECJJTYN68C7.LARGE.jpg", "https://cdn.instructables.com/FQO/14KW/JTYN688Q/FQO14KWJTYN688Q.LARGE.jpg", "https://cdn.instructables.com/FKJ/FPQG/JTYN68AG/FKJFPQGJTYN68AG.LARGE.jpg", "https://cdn.instructables.com/FR6/D208/JTYNDOSG/FR6D208JTYNDOSG.LARGE.jpg", "https://cdn.instructables.com/FPR/U1QH/JTYNDP00/FPRU1QHJTYNDP00.LARGE.jpg", "https://cdn.instructables.com/F2G/JMOU/JTYNDP4A/F2GJMOUJTYNDP4A.LARGE.jpg"], "step_title": "Step 7: Temperature Controlled Chamber"}, {"step": 8, "steps_text": "One of the stations on the automated drink maker is an automated Lime dispenser and slicer. A lime drops down a Y-shaped pipe, where it is then forced against a sharp metal grid by a 500N 12v Linear actuator. The grid slices the lime into 4 equal parts, and then drops into the glass. This step is followed by others such muddling and filling the glass with liquid.\nIn order to mount the linear actuator to the frame and keep all the moving parts stable, I used 32-34mm Pipe claims with Bolt holes on either side. These provided a simple way to mount the actuators and pipes in the upper compartment while keeping everything sturdy. (This actuator provides 500N of force - that\"s a lot!)", "step_imgs": [], "step_title": "Step 8: Lime Slicer"}, {"step": 9, "steps_text": "In order to create a slick user interface to accompany the final product, i decided to use a an android tablet. The tablet has a screen side of 10.1\" which makes it perfect for viewing and easily selecting the desired drink. The app's main purpose is to send commands to the arduino over a USB serial connection.\nIn order to do this, drinks have been put into scrollable horizontal carousels based on their type (Rum, Whisky, Gin.. etc). Each item has an image and name associated with it to make the drink easily identifiable. Once the user clicks on the desired drink, we will make a popup where the user can then change the size (the amount of liquid) they want in addition to inputting personal tweaks (e.g. more ice, more alcohol, more sugar, etc..). Once the drink's characteristics are chosen, the drink can be ordered. A long chain of numbers, each representing a different variable (e.g. quantity of ice), is then generated and sent to the arduino. The arduino interprets this unique drink ID and makes the desired drink as requested.\nThe Code:\nThe app consists of three main sections:\nMainActivity.java (this is where all the java and code will go to provide functionality to the app)\nactivity_main.xml (This is where the list of drinks are located)\ncustompopup.xml (This is the layout page for the custom ordering popup)\nCreating the template:\nOpen up android studio or your IDE of choice and create a new blank app template. This process should automatically create MainActivity.java and activity_main.xml for you. I Also chose to develop my app on android 4.4 (Kit Kat) as this supports almost 90% of devices. Once this is done, we can move on to designing our first page.\nActivity_Main.xml:\nActivity_main.xml is the primary android layout. For us it will house our list of drinks, an order button, and a custom edit-text forum to insert your own drinkIDs and testing the serial connection.\nStart off by creating a linear layout. This will allow us to stack our elements on top of each other for a nice and tidy look.\n<linearlayout xmlns:android=\"http://schemas.android.com/apk/res/android\" <br=\"\"><p><LinearLayout</p><p><linearlayout <br=\"\">xmlns:android=\"http://schemas.android.com/apk/res/android\"\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\nxmlns:tools=\"http://schemas.android.com/tools\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:background=\"@color/colorPrimaryDark\"\nandroid:gravity=\"center|top\"\nandroid:orientation=\"vertical\"\ntools:context=\"MainActivity\"></linearlayout></p><p><linearlayout <br=\"\"><br></linearlayout></p><p><linearlayout <br=\"\"><br></linearlayout></p></LinearLayout></linearlayout>\nTake a look at the steps below and the code that follows for each step.\nNext, we want to add specific elements inside this linear layout. For the custom edit-text bar and controls for the serial connection, create a relative layout and put it inside of the linear layout.\nNow we want to create a carousel for each drink type (Gin, Rum, etc..). This consists of a Text box labeling it, and the carousel itself. I will have three drink types.\nThis is what your file should look like", "step_imgs": ["https://cdn.instructables.com/F9N/VSUC/JTWRXXEU/F9NVSUCJTWRXXEU.LARGE.jpg"], "step_title": "Step 9: Programming the User Interface (Android Studio)"}, {"step": 10, "steps_text": "This one is a little more complicated. Here we will have to make all the functions,classes, and variables that allow the app to run. We will also need to include a method to make a serial connection with the arduino. Yikes!\nPlease Look at this Gist file for what the entire file should look like or the GitHub Repository for all the files(sorry instructables wouldn't let me embed it.. too big i guess.) I also included all the files in addition to the apk at the end of this step so you can easily install the application on your android deice.", "step_imgs": [], "step_title": "Step 10: Editing MainActivy.java"}, {"step": 11, "steps_text": "For the majority of drink icons and the images used throughout the android application, the came from depositphotos.\nThe specific icon set i used can be found here: Drink Images For purchase, however i have also included the free versions below (with water marks) if you would like to use those instead. In the files i have included, the images has already been split up into a 3x3 grid to isolate each icon and renamed to make coding easier.", "step_imgs": ["https://cdn.instructables.com/F1U/YJ3C/JTWRY0PE/F1UYJ3CJTWRY0PE.LARGE.jpg"], "step_title": "Step 11: Drink Images"}, {"step": 12, "steps_text": "As mentioned above, the arduino interprets the chain of numbers and assigns a variable to each digit. Based on these variables, the drink machine then constructs your drink through a series of steps as shown below.\nThe arduino file can be downloaded below:", "step_imgs": [], "step_title": "Step 12: Programming the Machine (Arduino)"}, {"step": 13, "steps_text": "Here are all the files in one place, for easy access so you don't have to scroll through the instructables:", "step_imgs": [], "step_title": "Step 13: All the Files"}], "channel": ""}, {"category": "", "description": "In this instructable, I will show you how to repair planetary gear of Li-ion screwdriver model IXO manufactured by Bosch. My search at WWW found only repair instructions on how to change the battery. This was not my case.\nThe problem of my screwdriver was lack of exit force. The motor was audible, but there is no chuck rotation. After an easy disassembly procedure, I found that second planetary gear tooths are destroyed.\nI will describe step by step the process as tightly as possible with lots of pictures.", "title": "How to Repair/resurrect Li-ion Screwdriver IXO Bosch Planetary Gear", "url": "https://www.instructables.com/id/How-to-Repairresurrect-Li-ion-Screwdriver-IXO-Bosc/", "section": "technology", "steps": [{"step": 1, "steps_text": "1. 1-hour free time :)\n2. Appropriate screwdriver, only size matters.\n3. Sandpaper (hard P80 and soft P800).\n4. Acrylic/Plexiglass 4 mm thickness (PMMA)\n5. Access to a laser cutter or local dealer of this kind of service (I used service).\n6. Tweezers with the appropriate size for small details.\n7. Pliers small ones.\n8. Glue (a few drops of fast drying glue).\n9. High-speed grease. Gears should be well lubricated.", "step_imgs": ["https://cdn.instructables.com/F8W/MGPM/JTWT5QC4/F8WMGPMJTWT5QC4.LARGE.jpg", "https://cdn.instructables.com/FJ6/9395/JTWT5SM4/FJ69395JTWT5SM4.LARGE.jpg", "https://cdn.instructables.com/F8T/VQGM/JTWT5TTE/F8TVQGMJTWT5TTE.LARGE.jpg"], "step_title": "Step 1: Step 1: Tools and Fabrication Techniques"}, {"step": 2, "steps_text": "I will spare you unsuccessful experiments to build the gear by handy 3D Pen or moulding clay. :)\nLaser cutting machines are very precise as I learned trying to make gear as thin as possible, so it can fit in the chuck. Measurements are visible in the first picture. The main problem was to make a gear that has the exact number of teeth and a very thin wall to hold them. The PLT file format is usable on many laser cutting software directly. The SVG file format is the original source and commonly editable.\nThere is a square figure in both files with exact dimensions - 10 x 10 millimetres. It is used for a calibration checkup. The first cut should be the square. If it is not exactly 10 x 10 millimetres then a change in a global parameter for cutting software or loaded file is needed.\nCut few gears, they are fragile and could be broken at the fitting process.", "step_imgs": ["https://cdn.instructables.com/FZW/VA4J/JTWT65H4/FZWVA4JJTWT65H4.LARGE.jpg", "https://cdn.instructables.com/FB0/4CM1/JTWT5ZT5/FB04CM1JTWT5ZT5.LARGE.jpg", "https://cdn.instructables.com/F6I/8OTT/JTWT60SY/F6I8OTTJTWT60SY.LARGE.jpg"], "step_title": "Step 2: Step 2: Laser Cut Part Files"}, {"step": 3, "steps_text": "The disassembly process is very easy just follow the step by step pictures.\n1. Unscrew.\n2. Open the plastic cover.\n3. Remove the chuck.\n4. Open the chuck. Be very careful there are small parts.", "step_imgs": ["https://cdn.instructables.com/FZR/TETE/JTYN6MT0/FZRTETEJTYN6MT0.LARGE.jpg", "https://cdn.instructables.com/F0B/9TCH/JTYN6MWG/F0B9TCHJTYN6MWG.LARGE.jpg", "https://cdn.instructables.com/FCJ/DTZ8/JTYN6N0V/FCJDTZ8JTYN6N0V.LARGE.jpg", "https://cdn.instructables.com/FX3/63KV/JTYN6N92/FX363KVJTYN6N92.LARGE.jpg", "https://cdn.instructables.com/FUO/HTQG/JTYN6NCP/FUOHTQGJTYN6NCP.LARGE.jpg", "https://cdn.instructables.com/F75/9RSK/JTYN6NG9/F759RSKJTYN6NG9.LARGE.jpg", "https://cdn.instructables.com/FZB/CBPJ/JTYN6NJ4/FZBCBPJJTYN6NJ4.LARGE.jpg", "https://cdn.instructables.com/FPV/7JAD/JTYN6NN2/FPV7JADJTYN6NN2.LARGE.jpg", "https://cdn.instructables.com/FYD/C5IL/JTYN6NUZ/FYDC5ILJTYN6NUZ.LARGE.jpg", "https://cdn.instructables.com/FHT/C2NX/JTYN6NW4/FHTC2NXJTYN6NW4.LARGE.jpg", "https://cdn.instructables.com/FTR/GPQB/JTYN6NX9/FTRGPQBJTYN6NX9.LARGE.jpg", "https://cdn.instructables.com/FSB/ZQE9/JTYN6O3X/FSBZQE9JTYN6O3X.LARGE.jpg", "https://cdn.instructables.com/FTK/B7Y2/JTYN6O78/FTKB7Y2JTYN6O78.LARGE.jpg", "https://cdn.instructables.com/FLW/HDQK/JTYN6OD2/FLWHDQKJTYN6OD2.LARGE.jpg", "https://cdn.instructables.com/FWF/PBIX/JTYN6OJE/FWFPBIXJTYN6OJE.LARGE.jpg", "https://cdn.instructables.com/F5N/MIOQ/JTYN6OLV/F5NMIOQJTYN6OLV.LARGE.jpg", "https://cdn.instructables.com/F72/HEV3/JTYN6OR6/F72HEV3JTYN6OR6.LARGE.jpg", "https://cdn.instructables.com/F9R/HB84/JTYN6PVC/F9RHB84JTYN6PVC.LARGE.jpg"], "step_title": "Step 3: Step 3: Dissasembly"}, {"step": 4, "steps_text": "1. Remove the grease and clean chuck inside.\n2. Sand the damaged teeth with sandpaper by hand.\n3. Sand gently by hand the bed for new gear ring. For referral border, I assumed the line marked with red colour.\n4. Regularly check if sanding is enough and gear ring fits tight.\n5. Position the new gear ring aligned in line with remaining undamaged old teeth\n6. Use a few drops of glue to fasten the gear ring. Wait appropriate time.", "step_imgs": ["https://cdn.instructables.com/FSK/3TMJ/JTYN73FT/FSK3TMJJTYN73FT.LARGE.jpg", "https://cdn.instructables.com/FNB/UAY9/JTYN6VQF/FNBUAY9JTYN6VQF.LARGE.jpg", "https://cdn.instructables.com/FL9/BKCD/JTYN6VZX/FL9BKCDJTYN6VZX.LARGE.jpg", "https://cdn.instructables.com/FLR/RWAX/JTYN6W7C/FLRRWAXJTYN6W7C.LARGE.jpg", "https://cdn.instructables.com/FHR/8NGC/JTYN6WC4/FHR8NGCJTYN6WC4.LARGE.jpg", "https://cdn.instructables.com/FO0/HD9V/JTYN6WGV/FO0HD9VJTYN6WGV.LARGE.jpg", "https://cdn.instructables.com/FNC/FGGG/JTYN6WML/FNCFGGGJTYN6WML.LARGE.jpg", "https://cdn.instructables.com/FO9/WZFC/JTYN7DJP/FO9WZFCJTYN7DJP.LARGE.jpg"], "step_title": "Step 4: Step 4: Fitting the Planetary Gear Ring"}, {"step": 5, "steps_text": "The assembly process is very easy just follow the step by step pictures.\n\n1. Put enough grease at every moving or stationary chuck parts.\n2. After closing the chuck remove any overflow grease.\nRemember grease reduces friction.\nCongratulations a screwdriver is alive. ;)", "step_imgs": ["https://cdn.instructables.com/FHN/N1D9/JTYN7A3B/FHNN1D9JTYN7A3B.LARGE.jpg", "https://cdn.instructables.com/F7F/C20N/JTYN7A62/F7FC20NJTYN7A62.LARGE.jpg", "https://cdn.instructables.com/FOY/WT9J/JTYN7A8T/FOYWT9JJTYN7A8T.LARGE.jpg", "https://cdn.instructables.com/FGN/N5PQ/JTYN7AFE/FGNN5PQJTYN7AFE.LARGE.jpg", "https://cdn.instructables.com/FGA/SFHD/JTYN7AI5/FGASFHDJTYN7AI5.LARGE.jpg", "https://cdn.instructables.com/F36/3ABC/JTYN7AKW/F363ABCJTYN7AKW.LARGE.jpg", "https://cdn.instructables.com/F34/SG7D/JTYN7ANN/F34SG7DJTYN7ANN.LARGE.jpg", "https://cdn.instructables.com/F94/02M6/JTYN7AVM/F9402M6JTYN7AVM.LARGE.jpg", "https://cdn.instructables.com/FXT/7W2H/JTYN7B3L/FXT7W2HJTYN7B3L.LARGE.jpg", "https://cdn.instructables.com/FUT/U3AH/JTYN7B6C/FUTU3AHJTYN7B6C.LARGE.jpg", "https://cdn.instructables.com/FDA/WHQZ/JTYN7B93/FDAWHQZJTYN7B93.LARGE.jpg", "https://cdn.instructables.com/FMV/NMJA/JTYN7BBU/FMVNMJAJTYN7BBU.LARGE.jpg", "https://cdn.instructables.com/F2Y/O4S8/JTYN7BEL/F2YO4S8JTYN7BEL.LARGE.jpg", "https://cdn.instructables.com/FY2/JY7C/JTYN7BFO/FY2JY7CJTYN7BFO.LARGE.jpg", "https://cdn.instructables.com/FKU/91LA/JTYN7BGR/FKU91LAJTYN7BGR.LARGE.jpg", "https://cdn.instructables.com/FXO/795E/JTYN7BN2/FXO795EJTYN7BN2.LARGE.jpg", "https://cdn.instructables.com/F29/GTUB/JTYN7BV1/F29GTUBJTYN7BV1.LARGE.jpg", "https://cdn.instructables.com/FH5/3I3D/JTYN7C30/FH53I3DJTYN7C30.LARGE.jpg", "https://cdn.instructables.com/F20/TH3K/JTYN7CB0/F20TH3KJTYN7CB0.LARGE.jpg"], "step_title": "Step 5: Step 5: Assembly"}], "channel": ""}, {"category": "", "description": "I have been using a bigger version of this voltmeter for quite some time and it was always very helpful\nso when I saw Pocket Sized Contest I said to my self why didn't use this opportunity and share this with you\nI made a few design improvements during this process so I am very happy with results", "title": "Pocket Volt Meter", "url": "https://www.instructables.com/id/Pocket-Volt-Meter/", "section": "technology", "steps": [{"step": 1, "steps_text": "parts:\nsmall voltmeter eBay link I recommend 0.36\" version\nsmall switch eBay link\nprobes alligator clips or hook probes\n9V battery\nholder for 9V battery eBay link (i recommend plastic one as on my picture)\nheat shrink foil 50mm \u00f835mm eBay link\ntools:\nsoldering iron\nhot glue gun\nhot air gun or flame from hob (if you using heat shrink foil)", "step_imgs": ["https://cdn.instructables.com/FDH/IIJ1/JTT5NK6Z/FDHIIJ1JTT5NK6Z.LARGE.jpg", "https://cdn.instructables.com/F3H/0CM6/JTWSHB2D/F3H0CM6JTWSHB2D.LARGE.jpg", "https://cdn.instructables.com/FMB/DKI0/JTT5NK7A/FMBDKI0JTT5NK7A.LARGE.jpg", "https://cdn.instructables.com/FRW/U4E3/JTT5NK74/FRWU4E3JTT5NK74.LARGE.jpg"], "step_title": "Step 1: Materials and Tools"}, {"step": 2, "steps_text": "disconnect all wires and find the best position for the switch\nif you have a good position you can glue switch on the place\nthen connect (+) power to middle pin on the switch", "step_imgs": ["https://cdn.instructables.com/F2L/LKI4/JTYN3DCJ/F2LLKI4JTYN3DCJ.LARGE.jpg", "https://cdn.instructables.com/FZB/KVPW/JTYN3D6D/FZBKVPWJTYN3D6D.LARGE.jpg", "https://cdn.instructables.com/FTP/C7IG/JTYN3CX6/FTPC7IGJTYN3CX6.LARGE.jpg", "https://cdn.instructables.com/FKI/WU3Z/JTYN3D08/FKIWU3ZJTYN3D08.LARGE.jpg", "https://cdn.instructables.com/F7T/N24J/JTYN3DFM/F7TN24JJTYN3DFM.LARGE.jpg", "https://cdn.instructables.com/FG0/RBFH/JTYN3DHL/FG0RBFHJTYN3DHL.LARGE.jpg"], "step_title": "Step 2: Switch"}, {"step": 3, "steps_text": "connect a wire to crocodile clips and secure it with hot glue\nthen connect black (-) probe to common ground and red (+) probe to pin where was orriginaly yellow or white wire", "step_imgs": ["https://cdn.instructables.com/F7Z/PUGQ/JTYN3E6C/F7ZPUGQJTYN3E6C.LARGE.jpg", "https://cdn.instructables.com/FC7/QG2A/JTYN3DHN/FC7QG2AJTYN3DHN.LARGE.jpg", "https://cdn.instructables.com/FI1/C6M3/JTYN3DNU/FI1C6M3JTYN3DNU.LARGE.jpg", "https://cdn.instructables.com/FVT/SOHT/JTYN3DRA/FVTSOHTJTYN3DRA.LARGE.jpg", "https://cdn.instructables.com/FJ0/GZF8/JTYN3DUD/FJ0GZF8JTYN3DUD.LARGE.jpg", "https://cdn.instructables.com/F0A/RROH/JTYN3DX4/F0ARROHJTYN3DX4.LARGE.jpg", "https://cdn.instructables.com/FGG/FLZY/JTYN3E1O/FGGFLZYJTYN3E1O.LARGE.jpg", "https://cdn.instructables.com/F1U/R2RR/JTYN3E40/F1UR2RRJTYN3E40.LARGE.jpg", "https://cdn.instructables.com/F8Y/5VAG/JTYN3E8Z/F8Y5VAGJTYN3E8Z.LARGE.jpg"], "step_title": "Step 3: Probes"}, {"step": 4, "steps_text": "pick a place where you want your voltmeter and cut them to the needed length\n(I made this second to sit on the connector so they were werry short)\nconnect the red wire to switch pin and black to common ground", "step_imgs": ["https://cdn.instructables.com/F3Q/Q8EW/JTYN3EBB/F3QQ8EWJTYN3EBB.LARGE.jpg", "https://cdn.instructables.com/FU3/9XO3/JTYN3EES/FU39XO3JTYN3EES.LARGE.jpg", "https://cdn.instructables.com/FU6/6JG0/JTYN3EH5/FU66JG0JTYN3EH5.LARGE.jpg"], "step_title": "Step 4: Battery Connector"}, {"step": 5, "steps_text": "test it and if everything works you can adjust accuracy if needed with little potentiometer (not every voltmeter have this option)\nif you are done glue every wire to secure long life and glue the whole potentiometer on its place\nyou can wrap finished voltmeter in heat-shrink foil if you want for better-looking finish", "step_imgs": ["https://cdn.instructables.com/F32/IO1G/JTYN3EN6/F32IO1GJTYN3EN6.LARGE.jpg", "https://cdn.instructables.com/F39/PDAA/JTYN3EPV/F39PDAAJTYN3EPV.LARGE.jpg", "https://cdn.instructables.com/FQX/QITM/JTYN3ESX/FQXQITMJTYN3ESX.LARGE.jpg", "https://cdn.instructables.com/F5J/GFOO/JTYN3EY8/F5JGFOOJTYN3EY8.LARGE.jpg", "https://cdn.instructables.com/FKR/FNY0/JTYN3F3Z/FKRFNY0JTYN3F3Z.LARGE.jpg", "https://cdn.instructables.com/FDL/YS9G/JTYN3F8M/FDLYS9GJTYN3F8M.LARGE.jpg", "https://cdn.instructables.com/FOT/U2XQ/JTYN44GB/FOTU2XQJTYN44GB.LARGE.jpg"], "step_title": "Step 5: Test"}, {"step": 6, "steps_text": "and you are done you can now put your mini voltmeter into your pocket and have it wherever you go ready to use\nenjoy :)", "step_imgs": ["https://cdn.instructables.com/F8V/4QJ1/JTYN44EC/F8V4QJ1JTYN44EC.LARGE.jpg", "https://cdn.instructables.com/FZD/SVZ0/JTYN48I6/FZDSVZ0JTYN48I6.LARGE.jpg"], "step_title": "Step 6:"}], "channel": ""}, {"category": "", "description": "CREATOR(S): Anya Timchenko, Diane Brancazio\nBalloon Cars Grades K-8, Engineering, Science\nLesson Overview\nIn this activity, students design and build a balloon-powered car for play or to compete in a performance challenge. The car design includes a custom 3D printed base, inexpensive toy wheels, and common hardware. Our Balloon Car challenge is an engaging way to practice the Engineering Design Process while learning 3D modeling on Tinkercad. The challenge can also be structured for learning physics principles such as velocity, acceleration, and traction.\nThis project is structured to follow the Engineering Design Process (EDP), a process that helps designers in any discipline create solutions to problems. While there are many ways that people solve problems, designers often use the EDP because it offers a clear roadmap for them to follow as they work towards a solution.\nFirst, designers Define the challenge they are facing, then Learn more about the problem and Explore existing solutions. It\u2019s tempting to skip these first few steps and head straight into brainstorming, but don\u2019t! When designers take the time to understand the problem clearly, they come up with much better solutions.\nThe Design phase is where brainstorming happens. Designers brainstorm multiple possible solutions, then develop a few of them into more detailed plans. Encourage your students to plan at least 3 of their potential ideas before choosing a design direction and starting to Create a product based on their design. If they hit any roadblocks trying to create their first design choice, they\u2019ll be able to revisit their alternate design plans and choose a new direction - without starting from scratch.\nDesigners then take time to Observe their design and see how they can Improve it. We strongly recommend that students have an opportunity for at least 2 Create-Observe-Improve cycles. When students feel they have to \u201cget it right the first time,\u201d they are less willing to take risks and be creative. By repeating the cycle, they have a chance to fix flaws and adopt successful ideas from classmates, and in fact, they\u2019re practicing what professional designers really do.\nA good design cycle builds in time for the designer to Reflect on their product and the process of making it, looking for learning habits and insights that will help in future challenges.\nWhen the work is complete, designers are ready to Share. They bring their work into the real world, by posting, publishing, presenting, or exhibiting - or giving or selling if appropriate! - what they\u2019ve made. For students working through a design process, a real audience helps students connect their learning and work experiences to the world outside the classroom. For Makerspaces and Maker projects, in particular, this is hugely important for building confidence in every student and a sense of community among Makers.\nTo help students work through this process, be sure to build in planned \u201cstops\u201d at each step for students to record their thoughts and progress as they work through product iteration cycles.\nEssential Question(s)\nHow can the Engineering Design Process be used to efficiently and effectively create a vehicle to meet a specified challenge?\nHow can a toy balloon car be used to experimentation and understanding of physical principles?\nSkills Taught:\nEngineering Design Process\nUse of simple hand tools and fasteners\nBasic physics\nBasic Prototyping Skills\nTime Required: 2 - 3 Hours\nMaterials Needed:\nBalloons\nFlexible PVC Tubing, 3/8\u201d Outside diameter, \u00bc\u201d Inside diameter, commonly available at hardware stores\nRubberbands\nPlastic Wheels, ~1.5\u201d diameter, with \u215b\u201d diameter hole for the axle, such as http://kelvin.com/front-wheel-blue-yellow/\nScrews #4 self-tapping screws, pan head, Phillips. 5/8\u201d long\nWashers, #4 flat\nScrewdriver, Phillips\nBalloon inflator\nTinkercad\n3D printer filament\nMisc. Arts+Crafts materials (cardstock, plastic sheets, hot glue, markers, etc.)\nLightweight objects to carry on the car", "title": "Balloon Cars", "url": "https://www.instructables.com/id/Balloon-Cars/", "section": "technology", "steps": [{"step": 1, "steps_text": "Context\nThe Engineering Design Process (EDP) is a respected process for solving engineering and other critical thinking challenges. Students will learn and practice transferable skills involving creativity, communication, collaboration, critical thinking. In this activity, students work individually or in small groups to design and construct a balloon-powered vehicle that meets design criteria designated by the teacher. They use Tinkercad 3D modeling software to create a custom body that includes a base, balloon stem holder, wheel mounts and other optional features for steering, holding items, etc.\nThis lesson gives students an opportunity to learn about common hardware items as well as technical design and construction techniques. This car is designed to use pre-fab wheels, that are inexpensive and readily available from Technical Education supply companies such as Kelvin.com. This feature reduces 3D printer time and gives the designer a real-world product to coordinate their design. The wheels are mounted to the car base with self-tapping screws which are not tightened down completely, creating a gap for the wheel hubs to roll freely. The flexible PVC tubing used as a balloon stem is another real-world product that students can incorporate in their design.\nChallenge\nDesign a balloon-powered car to complete performance challenges.\nStudent teams may consider scoring options and plan a strategy to earn points.\nSample Challenge 1 - Targets\nCreate a target area on the floor either in a linear or bullseye fashion as shown. Cars that reach the outer limits have met the challenge while those that make it to the precise center earn extra recognition. Target features can include point zones or obstacles.\nSample Challenge 2 - Deliver objects\nCars carry and deliver objects such as foam blocks or action figures to a designated target area in a specified amount of time. Cars that carry basic objects have met the challenge while those that carry more complex objects or get there faster earn extra recognition.\nThe Challenges are set up so there is not 1 winner, but levels which students can try to attain, as they might in sports or martial arts. Student designers can create balloon cars that earn points in different ways, features that enhance their performance and repeatability.\nCriteria:\nStudents must build a balloon-powered car that reaches the target (any zone)\nThe car must roll freely, hold a balloon stem securely, and be propelled forward by the deflating balloon\nThe car is assembled correctly using the materials provided/specified by the teacher\nThe car must carry a small item and hold onto it until the car stops (optional, but fun)\nThe car has a logo or text engraved in the bottom (optional, but also fun)\nConstraints:\nThe car footprint is less than 10 square inches\nThe car can be printed on the 3D printer in 30 minutes or less\nNo other power source is used to propel the car during the competitions trials\nPoints:\nIn the example scoring, Solid zone = 10 points, Super Zone = 12 point, Bullseye = 15 points\nStudents may be given several trials to reach the target and accumulate points.\nStudent Product / Learning Goals\nProduct: Students design, build, and test a balloon-powered car.\nGoal: practice an iterative design process to build a vehicle that reliably carries cargo (optional) and reaches the target. Aspects of the car that will need to be designed and redesigned: car body design, wheel assembly, balloon diameter when inflated, angle to the intended path of travel when they first release the car, etc.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research: Play around with balloons. Attach stems made from PVC tubing and figure out the optimal length for a slow steady release of air from the balloon. Attach the balloon to premade cars or other objects and see how well they are propelled and how the balloon behaves during travel. Choose items to carry as cargo.\n2. Collect: Instruct students on how/where to keep notes on their experiments and other things they learned. They may create an \u201cinspiration page\u201d such as a blog, Google Docs, a notebook, poster, etc.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "1. Design:\nStudents work together to brainstorm ideas on how to hold cargo and manage the balloon during travel. The design process is most effective when designers create at least 3 different ideas.\nOption A: draw designs on how the balloon car will look and/or function. Use paper, whiteboard, drawing apps.\nOption B: Build simple models using crafting materials (paper, glue, clay, pipe cleaners, etc.) to show look and/or function\nOption C: Let the students play around in Tinkercad to get familiar with the program and make practice models.\n2. Direction: Help the students choose a design that fills the criteria of the project, as well as the \u201cThing\u201d Checklist (this checklist can be found in the Resource section of the Lesson).", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "Build the Balloon Car base:\nSummary of steps described in the video:\nCreate the Car body using a box sized to: 4\u201d x 2\u201d x \u215b\u201d\nCreate the Wheel Mounts using a Round Roof and size to 0.30\u201d wide \u201c x 0.125 high x 0.30\u201d long\nCopy the wheel mount and align to the 4 corners.\nMake the pilot hole for the screw through the wheel mounts, 0.11\u201d diameter\nCreate the Balloon Stem holder using a cube and a cylinder hole, making sure to measure the tubing to confirm the outside diameter\nAdd a name or decoration on the bottom\nAdd holes or other features to hold the cargo or support the balloon\nBalloon Car Assembly video:\nAssemble the wheels to the base\n3D print the base and collect these materials to assemble: 4 wheels, 4 screws, 8 washers (optional), 3\u201d piece of tubing, rubberband, balloon, screwdriver, balloon inflator, craft materials (optional)\nUse washers on either side of the wheel hub. Tighten the screw so that the wheel rolls freely yet doesn\u2019t wobble.\nConnect the balloon to the stem with a rubber band\nBalloon Car Race:\nExperiment with balloon cars and make your own race!", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "1. Play with balloon cars and have a race! Student teams earn points for reaching zones on the target. Encourage students to help each other solve problems so that all teams make it at least to the outer edge of the target.\n2. It is recommended that students have an opportunity for at least 2 design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\n3. Provide stopping points for the class where students can observe, evaluate, and document their design.\n4. Give students a chance to record their thoughts and progress as they work through product iteration cycles.\n5. Follow instructions in the Create Step as needed for the next iteration.\nDownload pdf with possible prompts for Steps 5 and Step 6:", "step_imgs": [], "step_title": "Step 5: Observe and Test"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.\nDownload pdf with possible prompts for Steps 5 and Step 6:", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "\u201cTHING\u201d Checklist: To ensure you get a quality print, go through the list before tinkering and printing.\nMeets overall size requirements as specified in the course packet.\nHeight, Width, Depth, Weight, Volume as specified in the challenge description.\nEmbossed features stick out no more than 1 mm (.04 in).\nEngraved features go in no more than 2 mm (.08 in).\nUnsupported features (overhangs) are angled up at least 15\u2070 (more is better).\nBridge features have an unsupported span no greater than 12 mm (.5 in).\nWall thicknesses are typically 2 mm (.08 in).\nThin features such as details are no smaller than 1 mm (.08 inch).\nRound holes can be at any angle and are greater than 2 mm (.08 in).", "step_imgs": [], "step_title": "Step 7: Resources"}, {"step": 8, "steps_text": "Possible content explorations\nClass competition - debrief afterward\nIf students have designed according to the specs of \u201ccustomer(s),\u201d have them rate vehicles according to customer request, or match the best vehicle to the best customer\nELA/Social Studies - if students are reading material about racing, or about characters\u2019 or peoples\u2019 transportation needs, have them create an advertisement about the benefits of their balloon vehicle - e.g. get Ralph Mouse to give up his motorcycle for your balloon car\nModifications\nCreate a balloon-powered sand/snow sled or boat\nCouple with kinetic sculpture load that moves as the car\u2019s wheels turn\nWe hope you had fun designing and sharing your Balloon Cars. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in?\nSend us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nLists of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 8: Project Extensions"}], "channel": ""}, {"category": "", "description": "TFT touchscreens are the amazing graphical interface which can be used with microcontrollers such as Atmel, PIC, STM, as it has a wide color range, and good graphical ability and a good mapping of pixels.\nToday, we are going to Interface 2.4 inch TFT LCD Shield with Arduino.\nThis shield is for Arduino UNO, but I'll teach how to use it with Arduino Mega for a very logical reason, the \"Program Memory\".\nBy using this color TFT LCD shield we can show characters, strings, button interfacing, bitmap images, etc on the color TFT LCD.", "title": "Arduino TFT Interfacing Basics", "url": "https://www.instructables.com/id/Arduino-TFT-Interfacing-Basics/", "section": "technology", "steps": [{"step": 1, "steps_text": "To make the shield interface with the Arduino mega, we need the following.\n\nHARDWARE :\n\u2022 Arduino mega\n\u2022 TFT 2.4/2.8/3.2 inch LCD\n\u2022 USB Cable\nSOFTWARE :\n\u2022 Arduino IDE\n\u2022 UTFT Library / spfd5408 Library\nThe Shield is originally made for the Arduino UNO boards, which can be used with Arduino mega.\nThere are two main issues while using it with the Arduino UNO: \"Storage memory\" and pins usage.\nIt is difficult to use the unused pins which are available on UNO, whereas it is better with Arduino MEGA since we have more I/O pins left.\nIn the next step, I'll show how to edit the UTFT library to use the TFT shield", "step_imgs": ["https://cdn.instructables.com/FHW/N1AY/JTYN5K5S/FHWN1AYJTYN5K5S.LARGE.jpg", "https://cdn.instructables.com/FVZ/TTS2/JTYN5K70/FVZTTS2JTYN5K70.LARGE.jpg"], "step_title": "Step 1: Hardware and Software Requirements"}, {"step": 2, "steps_text": "This library is the continuation of my ITDB02_Graph, ITDB02_Graph16 and RGB_GLCD libraries for Arduino and chipKit. As the number of supported display modules and controllers started to increase I felt it was time to make a single, universal library as it will be much easier to maintain in the future.\nArduino MEGA has 256kb of program memory. In addition, there are 54 pins.\nMost of them are free to use, and the analog just 5 are taken from 16.\nThis library supports a number of 8bit,16bit, and serial graphics displays, and will work with both Arduino, chipKit boards and select TI LaunchPads.\nNOTE: Due to the size of the library I do not recommend using it on ATmega328 (Arduino Uno) and ATmega32U4 (Arduino Leonardo) as they only have 32KB of flash memory. It will work, but you will be severely limited in available flash memory for your application.\nSteps:\nDownload the UTFT Library\nUnzip the Library\nOpen UTFT\\hardware\\avr in case of Arduino or depending on the microcontroller used\nOpen HW_AVR_defines using Notepad\nUncomment Line 7 to enable UNO shield for MEGA\nSave the file and Add this Library to Arduino IDE\nNow we are done with this step! In the next step, I'll show to use the library and define the pins for Arduino Mega.", "step_imgs": ["https://cdn.instructables.com/F5L/7VLH/JTYN5KMG/F5L7VLHJTYN5KMG.LARGE.jpg"], "step_title": "Step 2: Tweaking UTFT Lib"}, {"step": 3, "steps_text": "After editing the library, Add it to the Arduino directory.\nNext, I'm gonna show you how to define the right TFT module that you have\nwe should find its module name in the library.\nopen the library file\ngo to the documentation\nYou can see these files in the Documentation\n\u2022 UTFT:\nThis file shows all the functions and commands included in this library.\n\u2022 UTFT_Requirement\nThis file has information about the modules and how it's related to the library, like pins configurations\n\u2022UTFT_Supported_display_modules_&_controller\nThis is our target, this file has the names of the modules and shields that are supported by this library, you can see in it a list of module names and module names for the UTFT which you should use to define your module.\nSteps to Define the TFT:\nOpen UTFT_Supported_display_modules_&_controller file from the library\nOpen UTFT_Supported_display_modules_&_controller file from the library\nFind the Models for UTFT for the Modules (shield) which you have.\nNow to define a UTFT function on the Arduino IDE, we use the command :\nUTFT name(module,Rs,Wr,Cs,Rst);\nOpen UTFT_Requirement file from the library\nFrom the document, we know that the pins are located on the A5, A4, A3, and A2 pins.\nwe use the command:\nUTFT myGLCD(ITDB28,19,18,17,16); # note that pins 19,18,17,16 in the Arduino Mega\nUTFT myGLCD(ITDB28,A5,A4,A3,A2); # note that pins A5,A4,A3,A2 in the Arduino UNO\nAnd done! Now you can use the library examples on the Arduino IDE with the Following changes.", "step_imgs": ["https://cdn.instructables.com/F82/JCPD/JTYN5MTF/F82JCPDJTYN5MTF.LARGE.jpg"], "step_title": "Step 3: Initializing the TFT Shield"}, {"step": 4, "steps_text": "#include <utft.h>// Declare which fonts we will be using\nextern uint8_t BigFont[];\nextern uint8_t SevenSegNumFont[];\n// Remember to change the model parameter to suit your display module!\nUTFT myGLCD(ITDB28, A5, A4, A3, A2);\nvoid setup()\n{\nmyGLCD.InitLCD();\nmyGLCD.clrScr();\nmyGLCD.setFont(BigFont);\n}\nvoid loop()\n{\nmyGLCD.setColor(0, 255, 0); //green\nmyGLCD.print(\"HELLO WORLD\", 45, 100);\nwhile (true) {};\n}", "step_imgs": ["https://cdn.instructables.com/FNA/Y24F/JTYN5NFY/FNAY24FJTYN5NFY.LARGE.jpg"], "step_title": "Step 4: Basic Hello World"}, {"step": 5, "steps_text": "#include <utft.h> // Declare which fonts we will be using\nextern uint8_t SmallFont[];\nextern uint8_t BigFont[];\nextern uint8_t SevenSegNumFont[]; // Set the pins to the correct ones for your development shield\n// ------------------------------------------------------------\n// Arduino Uno / 2009:\n// -------------------\n// Standard Arduino Uno/2009 shield            : <display model=\"\">,A5,A4,A3,A2\n// DisplayModule Arduino Uno TFT shield        : <display model=\"\">,A5,A4,A3,A2\n//\n// Arduino Mega:\n// -------------------\n// Standard Arduino Mega/Due shield            : <display model=\"\">,38,39,40,41\n// CTE TFT LCD/SD Shield for Arduino Mega      : <display model=\"\">,38,39,40,41\n//\n// Remember to change the model parameter to suit your display module!\nUTFT myGLCD(ITDB32S,38,39,40,41);\nvoid setup()\n{\n  myGLCD.InitLCD()\n  myGLCD.clrScr();\n}\nvoid loop()\n{\n  myGLCD.setColor(0, 255, 0);\n  myGLCD.setBackColor(0, 0, 0);\n  myGLCD.setFont(BigFont);\n  myGLCD.print(\" !\\\"#$%&'()*+,-./\", CENTER, 0);\n  myGLCD.print(\"0123456789:;<=>?\", CENTER, 16);\n  myGLCD.print(\"@ABCDEFGHIJKLMNO\", CENTER, 32);\n  myGLCD.print(\"PQRSTUVWXYZ[\\\\]^_\", CENTER, 48);\n  myGLCD.print(\"`abcdefghijklmno\", CENTER, 64);\n  myGLCD.print(\"pqrstuvwxyz{|}~ \", CENTER, 80);\n  myGLCD.setFont(SmallFont);\n  myGLCD.print(\" !\\\"#$%&'()*+,-./0123456789:;<=>?\", CENTER, 120);\n  myGLCD.print(\"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\", CENTER, 132);\n  myGLCD.print(\"`abcdefghijklmnopqrstuvwxyz{|}~ \", CENTER, 144);\n  myGLCD.setFont(SevenSegNumFont);\n  myGLCD.print(\"0123456789\", CENTER, 190);\n  while(1) {};\n}", "step_imgs": ["https://cdn.instructables.com/FUI/7J6V/JTYN5NM4/FUI7J6VJTYN5NM4.LARGE.jpg"], "step_title": "Step 5: UTFT Fonts"}, {"step": 6, "steps_text": "<p>#include \"UTFT.h\"<br>// Declare which fonts we will be using<br>extern uint8_t SmallFont[];// Set the pins to the correct ones for your development shield\n// ------------------------------------------------------------\n// Arduino Uno / 2009:\n// -------------------\n// Standard Arduino Uno/2009 shield            : ,A5,A4,A3,A2\n// DisplayModule Arduino Uno TFT shield        : ,A5,A4,A3,A2\n//\n// Arduino Mega:\n// -------------------\n// Standard Arduino Mega/Due shield            : ,38,39,40,41\n// CTE TFT LCD/SD Shield for Arduino Mega      : ,38,39,40,41\n//\n// Remember to change the model parameter to suit your display module!\nUTFT myGLCD(ITDB32S,38,39,40,41);void setup()\n{\n  randomSeed(analogRead(0));\n  \n// Setup the LCD\n  myGLCD.InitLCD();\n  myGLCD.setFont(SmallFont);\n}</p><p>void loop()\n{\n  int buf[318];\n  int x, x2;\n  int y, y2;\n  int r;// Clear the screen and draw the frame\n  myGLCD.clrScr();  myGLCD.setColor(255, 0, 0);\n  myGLCD.fillRect(0, 0, 319, 13);\n  myGLCD.setColor(64, 64, 64);\n  myGLCD.fillRect(0, 226, 319, 239);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.setBackColor(255, 0, 0);\n  myGLCD.print(\"* Universal Color TFT Display Library *\", CENTER, 1);\n  myGLCD.setBackColor(64, 64, 64);\n  myGLCD.setColor(255,255,0);\n  myGLCD.print(\"\", CENTER, 227);  myGLCD.setColor(0, 0, 255);\n  myGLCD.drawRect(0, 14, 319, 225);// Draw crosshairs\n  myGLCD.setColor(0, 0, 255);\n  myGLCD.setBackColor(0, 0, 0);\n  myGLCD.drawLine(159, 15, 159, 224);\n  myGLCD.drawLine(1, 119, 318, 119);\n  for (int i=9; i<310; i+=10)\n    myGLCD.drawLine(i, 117, i, 121);\n  for (int i=19; i<220; i+=10)\n    myGLCD.drawLine(157, i, 161, i);// Draw sin-, cos- and tan-lines  \n  myGLCD.setColor(0,255,255);\n  myGLCD.print(\"Sin\", 5, 15);\n  for (int i=1; i<318; i++)\n  {\n    myGLCD.drawPixel(i,119+(sin(((i*1.13)*3.14)/180)*95));\n  }\n  \n  myGLCD.setColor(255,0,0);\n  myGLCD.print(\"Cos\", 5, 27);\n  for (int i=1; i<318; i++)\n  {\n    myGLCD.drawPixel(i,119+(cos(((i*1.13)*3.14)/180)*95));\n  }  myGLCD.setColor(255,255,0);\n  myGLCD.print(\"Tan\", 5, 39);\n  for (int i=1; i<318; i++)\n  {\n    myGLCD.drawPixel(i,119+(tan(((i*1.13)*3.14)/180)));\n  }  delay(2000);  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);\n  myGLCD.setColor(0, 0, 255);\n  myGLCD.setBackColor(0, 0, 0);\n  myGLCD.drawLine(159, 15, 159, 224);\n  myGLCD.drawLine(1, 119, 318, 119);// Draw a moving sinewave\n  x=1;\n  for (int i=1; i<(318*20); i++) \n  {\n    x++;\n    if (x==319)\n      x=1;\n    if (i>319)\n    {\n      if ((x==159)||(buf[x-1]==119))\n        myGLCD.setColor(0,0,255);\n      else\n        myGLCD.setColor(0,0,0);\n      myGLCD.drawPixel(x,buf[x-1]);\n    }\n    myGLCD.setColor(0,255,255);\n    y=119+(sin(((i*1.1)*3.14)/180)*(90-(i / 100)));\n    myGLCD.drawPixel(x,y);\n    buf[x-1]=y;\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some filled rectangles\n  for (int i=1; i<6; i++)\n  {\n    switch (i)\n    {\n      case 1:\n        myGLCD.setColor(255,0,255);\n        break;\n      case 2:\n        myGLCD.setColor(255,0,0);\n        break;\n      case 3:\n        myGLCD.setColor(0,255,0);\n        break;\n      case 4:\n        myGLCD.setColor(0,0,255);\n        break;\n      case 5:\n        myGLCD.setColor(255,255,0);\n        break;\n    }\n    myGLCD.fillRect(70+(i*20), 30+(i*20), 130+(i*20), 90+(i*20));\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some filled, rounded rectangles\n  for (int i=1; i<6; i++)\n  {\n    switch (i)\n    {\n      case 1:\n        myGLCD.setColor(255,0,255);\n        break;\n      case 2:\n        myGLCD.setColor(255,0,0);\n        break;\n      case 3:\n        myGLCD.setColor(0,255,0);\n        break;\n      case 4:\n        myGLCD.setColor(0,0,255);\n        break;\n      case 5:\n        myGLCD.setColor(255,255,0);\n        break;\n    }\n    myGLCD.fillRoundRect(190-(i*20), 30+(i*20), 250-(i*20), 90+(i*20));\n  }\n  \n  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some filled circles\n  for (int i=1; i<6; i++)\n  {\n    switch (i)\n    {\n      case 1:\n        myGLCD.setColor(255,0,255);\n        break;\n      case 2:\n        myGLCD.setColor(255,0,0);\n        break;\n      case 3:\n        myGLCD.setColor(0,255,0);\n        break;\n      case 4:\n        myGLCD.setColor(0,0,255);\n        break;\n      case 5:\n        myGLCD.setColor(255,255,0);\n        break;\n    }\n    myGLCD.fillCircle(100+(i*20),60+(i*20), 30);\n  }\n  \n  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some lines in a pattern\n  myGLCD.setColor (255,0,0);\n  for (int i=15; i<224; i+=5)\n  {\n    myGLCD.drawLine(1, i, (i*1.44)-10, 224);\n  }\n  myGLCD.setColor (255,0,0);\n  for (int i=224; i>15; i-=5)\n  {\n    myGLCD.drawLine(318, i, (i*1.44)-11, 15);\n  }\n  myGLCD.setColor (0,255,255);\n  for (int i=224; i>15; i-=5)\n  {\n    myGLCD.drawLine(1, i, 331-(i*1.44), 15);\n  }\n  myGLCD.setColor (0,255,255);\n  for (int i=15; i<224; i+=5)\n  {\n    myGLCD.drawLine(318, i, 330-(i*1.44), 224);\n  }\n  \n  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some random circles\n  for (int i=0; i<100; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    x=32+random(256);\n    y=45+random(146);\n    r=random(30);\n    myGLCD.drawCircle(x, y, r);\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some random rectangles\n  for (int i=0; i<100; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    x=2+random(316);\n    y=16+random(207);\n    x2=2+random(316);\n    y2=16+random(207);\n    myGLCD.drawRect(x, y, x2, y2);\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);// Draw some random rounded rectangles\n  for (int i=0; i<100; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    x=2+random(316);\n    y=16+random(207);\n    x2=2+random(316);\n    y2=16+random(207);\n    myGLCD.drawRoundRect(x, y, x2, y2);\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);  for (int i=0; i<100; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    x=2+random(316);\n    y=16+random(209);\n    x2=2+random(316);\n    y2=16+random(209);\n    myGLCD.drawLine(x, y, x2, y2);\n  }  delay(2000);\n  \n  myGLCD.setColor(0,0,0);\n  myGLCD.fillRect(1,15,318,224);  for (int i=0; i<10000; i++)\n  {\n    myGLCD.setColor(random(255), random(255), random(255));\n    myGLCD.drawPixel(2+random(316), 16+random(209));\n  }  delay(2000);  myGLCD.fillScr(0, 0, 255);\n  myGLCD.setColor(255, 0, 0);\n  myGLCD.fillRoundRect(80, 70, 239, 169);\n  \n  myGLCD.setColor(255, 255, 255);\n  myGLCD.setBackColor(255, 0, 0);\n  myGLCD.print(\"That's it!\", CENTER, 93);\n  myGLCD.print(\"Restarting in a\", CENTER, 119);\n  myGLCD.print(\"few seconds...\", CENTER, 132);\n  \n  myGLCD.setColor(0, 255, 0);\n  myGLCD.setBackColor(0, 0, 255);\n  myGLCD.print(\"Runtime: (msecs)\", CENTER, 210);\n  myGLCD.printNumI(millis(), CENTER, 225);\n  \n  delay (10000);\n}</p>", "step_imgs": ["https://cdn.instructables.com/FIW/ALI3/JTYN5PGB/FIWALI3JTYN5PGB.LARGE.jpg"], "step_title": "Step 6: UTFT Shapes, Lines and Pattern"}, {"step": 7, "steps_text": "#include <UTFT.h>\n\n#include  <avr/pgmspace.h>// Declare which fonts we will be using\n\nextern uint8_t SmallFont[];// Set the pins to the correct ones for your development shield\n// ------------------------------------------------------------\n// Arduino Uno / 2009:\n// -------------------\n// Standard Arduino Uno/2009 shield            : ,A5,A4,A3,A2\n// DisplayModule Arduino Uno TFT shield        : ,A5,A4,A3,A2\n//\n// Arduino Mega:\n// -------------------\n// Standard Arduino Mega/Due shield            : ,38,39,40,41\n// CTE TFT LCD/SD Shield for Arduino Mega      : ,38,39,40,41\n//\n// Remember to change the model parameter to suit your display module!\nUTFT myGLCD(ITDB32S,A5,A4,A3,A2);extern unsigned int info[0x400];\nextern unsigned int icon[0x400];\nextern unsigned int tux[0x400];void setup()\n{\n  myGLCD.InitLCD();\n  myGLCD.setFont(SmallFont);\n}void loop()\n{\n  myGLCD.fillScr(255, 255, 255);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.print(\" *** A 10 by 7 grid of a 32x32 icon *** \", CENTER, 228);\n  for (int x=0; x<10; x++)\n    for (int y=0; y<7; y++)\n      myGLCD.drawBitmap (x*32, y*32, 32, 32, info);  delay(5000);\n  \n  myGLCD.fillScr(255, 255, 255);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.print(\"   Two different icons in scale 1 to 4  \", CENTER, 228);\n  int x=0;\n  for (int s=0; s<4; s++)\n  {\n    x+=(s*32);\n    myGLCD.drawBitmap (x, 0, 32, 32, tux, s+1);\n  }\n  x=0;\n  for (int s=4; s>0; s--)\n  {\n    myGLCD.drawBitmap (x, 224-(s*32), 32, 32, icon, s);\n    x+=(s*32);\n  }  delay(5000);\n}", "step_imgs": ["https://cdn.instructables.com/FKM/OJIH/JTYN5R2Y/FKMOJIHJTYN5R2Y.LARGE.jpg"], "step_title": "Step 7: UTFT Bitmap"}, {"step": 8, "steps_text": "#include <UTFT.h>\n#include  <URTOUCH.h>// Initialize display\n// ------------------\n// Set the pins to the correct ones for your development board\n// -----------------------------------------------------------\n// Standard Arduino Uno/2009 Shield            : ,19,18,17,16\n// Standard Arduino Mega/Due shield            : ,38,39,40,41\n// CTE TFT LCD/SD Shield for Arduino Due       : ,25,26,27,28\n// Teensy 3.x TFT Test Board                   : ,23,22, 3, 4\n// ElecHouse TFT LCD/SD Shield for Arduino Due : ,22,23,31,33\n//\n// Remember to change the model parameter to suit your display module!\nUTFT    myGLCD(ITDB32S,38,39,40,41);// Initialize touchscreen\n// ----------------------\n// Set the pins to the correct ones for your development board\n// -----------------------------------------------------------\n// Standard Arduino Uno/2009 Shield            : 15,10,14, 9, 8\n// Standard Arduino Mega/Due shield            :  6, 5, 4, 3, 2\n// CTE TFT LCD/SD Shield for Arduino Due       :  6, 5, 4, 3, 2\n// Teensy 3.x TFT Test Board                   : 26,31,27,28,29\n// ElecHouse TFT LCD/SD Shield for Arduino Due : 25,26,27,29,30\n//\nURTouch  myTouch( 6, 5, 4, 3, 2);// Declare which fonts we will be using\nextern uint8_t BigFont[];int x, y;\nchar stCurrent[20]=\"\";\nint stCurrentLen=0;\nchar stLast[20]=\"\";/*************************\n**   Custom functions   **\n*************************/void drawButtons()\n{\n// Draw the upper row of buttons\n  for (x=0; x<5; x++)\n  {\n    myGLCD.setColor(0, 0, 255);\n    myGLCD.fillRoundRect (10+(x*60), 10, 60+(x*60), 60);\n    myGLCD.setColor(255, 255, 255);\n    myGLCD.drawRoundRect (10+(x*60), 10, 60+(x*60), 60);\n    myGLCD.printNumI(x+1, 27+(x*60), 27);\n  }\n// Draw the center row of buttons\n  for (x=0; x<5; x++)\n  {\n    myGLCD.setColor(0, 0, 255);\n    myGLCD.fillRoundRect (10+(x*60), 70, 60+(x*60), 120);\n    myGLCD.setColor(255, 255, 255);\n    myGLCD.drawRoundRect (10+(x*60), 70, 60+(x*60), 120);\n    if (x<4)\n      myGLCD.printNumI(x+6, 27+(x*60), 87);\n  }\n  myGLCD.print(\"0\", 267, 87);\n// Draw the lower row of buttons\n  myGLCD.setColor(0, 0, 255);\n  myGLCD.fillRoundRect (10, 130, 150, 180);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.drawRoundRect (10, 130, 150, 180);\n  myGLCD.print(\"Clear\", 40, 147);\n  myGLCD.setColor(0, 0, 255);\n  myGLCD.fillRoundRect (160, 130, 300, 180);\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.drawRoundRect (160, 130, 300, 180);\n  myGLCD.print(\"Enter\", 190, 147);\n  myGLCD.setBackColor (0, 0, 0);\n}void updateStr(int val)\n{\n  if (stCurrentLen<20)\n  {\n    stCurrent[stCurrentLen]=val;\n    stCurrent[stCurrentLen+1]='\\0';\n    stCurrentLen++;\n    myGLCD.setColor(0, 255, 0);\n    myGLCD.print(stCurrent, LEFT, 224);\n  }\n  else\n  {\n    myGLCD.setColor(255, 0, 0);\n    myGLCD.print(\"BUFFER FULL!\", CENTER, 192);\n    delay(500);\n    myGLCD.print(\"            \", CENTER, 192);\n    delay(500);\n    myGLCD.print(\"BUFFER FULL!\", CENTER, 192);\n    delay(500);\n    myGLCD.print(\"            \", CENTER, 192);\n    myGLCD.setColor(0, 255, 0);\n  }\n}// Draw a red frame while a button is touched\nvoid waitForIt(int x1, int y1, int x2, int y2)\n{\n  myGLCD.setColor(255, 0, 0);\n  myGLCD.drawRoundRect (x1, y1, x2, y2);\n  while (myTouch.dataAvailable())\n    myTouch.read();\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.drawRoundRect (x1, y1, x2, y2);\n}/*************************\n**  Required functions  **\n*************************/void setup()\n{\n// Initial setup\n  myGLCD.InitLCD();\n  myGLCD.clrScr();  myTouch.InitTouch();\n  myTouch.setPrecision(PREC_MEDIUM);  myGLCD.setFont(BigFont);\n  myGLCD.setBackColor(0, 0, 255);\n  drawButtons();  \n}void loop()\n{\n  while (true)\n  {\n    if (myTouch.dataAvailable())\n    {\n      myTouch.read();\n      x=myTouch.getX();\n      y=myTouch.getY();\n      \n      if ((y>=10) && (y<=60))  // Upper row\n      {\n        if ((x>=10) && (x<=60))  // Button: 1\n        {\n          waitForIt(10, 10, 60, 60);\n          updateStr('1');\n        }\n        if ((x>=70) && (x<=120))  // Button: 2\n        {\n          waitForIt(70, 10, 120, 60);\n          updateStr('2');\n        }\n        if ((x>=130) && (x<=180))  // Button: 3\n        {\n          waitForIt(130, 10, 180, 60);\n          updateStr('3');\n        }\n        if ((x>=190) && (x<=240))  // Button: 4\n        {\n          waitForIt(190, 10, 240, 60);\n          updateStr('4');\n        }\n        if ((x>=250) && (x<=300))  // Button: 5\n        {\n          waitForIt(250, 10, 300, 60);\n          updateStr('5');\n        }\n      }      if ((y>=70) && (y<=120))  // Center row\n      {\n        if ((x>=10) && (x<=60))  // Button: 6\n        {\n          waitForIt(10, 70, 60, 120);\n          updateStr('6');\n        }\n        if ((x>=70) && (x<=120))  // Button: 7\n        {\n          waitForIt(70, 70, 120, 120);\n          updateStr('7');\n        }\n        if ((x>=130) && (x<=180))  // Button: 8\n        {\n          waitForIt(130, 70, 180, 120);\n          updateStr('8');\n        }\n        if ((x>=190) && (x<=240))  // Button: 9\n        {\n          waitForIt(190, 70, 240, 120);\n          updateStr('9');\n        }\n        if ((x>=250) && (x<=300))  // Button: 0\n        {\n          waitForIt(250, 70, 300, 120);\n          updateStr('0');\n        }\n      }      if ((y>=130) && (y<=180))  // Upper row\n      {\n        if ((x>=10) && (x<=150))  // Button: Clear\n        {\n          waitForIt(10, 130, 150, 180);\n          stCurrent[0]='\\0';\n          stCurrentLen=0;\n          myGLCD.setColor(0, 0, 0);\n          myGLCD.fillRect(0, 224, 319, 239);\n        }\n        if ((x>=160) && (x<=300))  // Button: Enter\n        {\n          waitForIt(160, 130, 300, 180);\n          if (stCurrentLen>0)\n          {\n            for (x=0; x", "step_imgs": ["https://cdn.instructables.com/F08/S52P/JTYN5SGF/F08S52PJTYN5SGF.LARGE.jpg"], "step_title": "Step 8: Button Interfacing"}, {"step": 9, "steps_text": "#include  <UTFT.h>\n#include  <URTOUCH.h>\n#include  <EEPROM.h>//==== Creating Objects\nUTFT    myGLCD(SSD1289,38,39,40,41); //Parameters should be adjusted to your Display/Schield model\nUTouch  myTouch( 6, 5, 4, 3, 2);//==== Defining Fonts\nextern uint8_t SmallFont[];\nextern uint8_t BigFont[];\nextern uint8_t SevenSegNumFont[];extern unsigned int bird01[0x41A]; // Bird Bitmapint x, y; // Variables for the coordinates where the display has been pressed// Floppy Bird\nint xP = 319;\nint yP = 100;\nint yB = 50;\nint movingRate = 3;\nint fallRateInt = 0;\nfloat fallRate = 0;\nint score = 0;\nint lastSpeedUpScore = 0;\nint highestScore;\nboolean screenPressed = false;\nboolean gameStarted = false;void setup() {\n  // Initiate display\n  myGLCD.InitLCD();\n  myGLCD.clrScr();\n  myTouch.InitTouch();\n  myTouch.setPrecision(PREC_MEDIUM);\n  \n  highestScore = EEPROM.read(0); // Read the highest score from the EEPROM\n  \n  initiateGame(); // Initiate the game\n}void loop() {\n    xP=xP-movingRate; // xP - x coordinate of the pilars; range: 319 - (-51)   \n    drawPilars(xP, yP); // Draws the pillars \n    \n    // yB - y coordinate of the bird which depends on value of the fallingRate variable\n    yB+=fallRateInt; \n    fallRate=fallRate+0.4; // Each inetration the fall rate increase so that we can the effect of acceleration/ gravity\n    fallRateInt= int(fallRate);\n    \n    // Checks for collision\n    if(yB>=180 || yB<=0){ // top and bottom\n      gameOver();\n    }\n    if((xP<=85) && (xP>=5) && (yB<=yP-2)){ // upper pillar\n      gameOver();\n    }\n    if((xP<=85) && (xP>=5) && (yB>=yP+60)){ // lower pillar\n      gameOver();\n    }\n    \n    // Draws the bird\n    drawBird(yB);    // After the pillar has passed through the screen\n    if (xP<=-51){\n      xP=319; // Resets xP to 319\n      yP = rand() % 100+20; // Random number for the pillars height\n      score++; // Increase score by one\n    }\n    //==== Controlling the bird\n    if (myTouch.dataAvailable()&& !screenPressed) {\n       fallRate=-6; // Setting the fallRate negative will make the bird jump\n       screenPressed = true;\n    }\n    // Doesn't allow holding the screen / you must tap it\n    else if ( !myTouch.dataAvailable() && screenPressed){\n      screenPressed = false;\n    }\n    \n    // After each five points, increases the moving rate of the pillars\n    if ((score - lastSpeedUpScore) == 5) {\n      lastSpeedUpScore = score;\n      movingRate++;\n    }\n}\n// ===== initiateGame - Custom Function\nvoid initiateGame() {\n  myGLCD.clrScr();\n  // Blue background\n  myGLCD.setColor(114, 198, 206);\n  myGLCD.fillRect(0,0,319,239);\n  // Ground\n  myGLCD.setColor(221,216,148);\n  myGLCD.fillRect(0, 215, 319, 239);\n  myGLCD.setColor(47,175,68);\n  myGLCD.fillRect(0, 205, 319, 214);\n  // Text\n  myGLCD.setColor(0, 0, 0);\n  myGLCD.setBackColor(221, 216, 148);\n  myGLCD.setFont(BigFont);\n  myGLCD.print(\"Score:\",5,220);\n  myGLCD.setFont(SmallFont);\n  myGLCD.print(\"HowToMechatronics.com\", 140, 220); \n  myGLCD.setColor(0, 0, 0);\n  myGLCD.setBackColor(114, 198, 206);\n  myGLCD.print(\"Highest Score: \",5,5);\n  myGLCD.printNumI(highestScore, 120, 6);\n  myGLCD.print(\">RESET<\",255,5);\n  myGLCD.drawLine(0,23,319,23);\n  myGLCD.print(\"TAP TO START\",CENTER,100);\n  \n  drawBird(yB); // Draws the bird\n  \n  // Wait until we tap the sreen\n  while (!gameStarted) {\n    if (myTouch.dataAvailable()) {\n    myTouch.read();\n    x=myTouch.getX();\n    y=myTouch.getY();        \n    // Reset higest score\n    if ((x>=250) && (x<=319) &&(y>=0) && (y<=28)) {\n    highestScore = 0;\n    myGLCD.setColor(114, 198, 206);\n    myGLCD.fillRect(120, 0, 150, 22);\n    myGLCD.setColor(0, 0, 0);\n    myGLCD.printNumI(highestScore, 120, 5);\n    } \n    if ((x>=0) && (x<=319) &&(y>=30) && (y<=239)) {\n    gameStarted = true;\n    myGLCD.setColor(114, 198, 206);\n    myGLCD.fillRect(0, 0, 319, 32);\n    }   \n  }\n  }\n  // Clears the text \"TAP TO START\" before the game start\n  myGLCD.setColor(114, 198, 206);\n  myGLCD.fillRect(85, 100, 235, 116);\n  \n}\n// ===== drawPlillars - Custom Function\nvoid drawPilars(int x, int y) {\n    if (x>=270){\n      myGLCD.setColor(0, 200, 20);\n      myGLCD.fillRect(318, 0, x, y-1);\n      myGLCD.setColor(0, 0, 0);\n      myGLCD.drawRect(319, 0, x-1, y);      myGLCD.setColor(0, 200, 20);\n      myGLCD.fillRect(318, y+81, x, 203);\n      myGLCD.setColor(0, 0, 0);\n      myGLCD.drawRect(319, y+80, x-1, 204); \n    }\n    else if( x<=268) {\n      // Draws blue rectangle right of the pillar\n      myGLCD.setColor(114, 198, 206);\n      myGLCD.fillRect(x+51, 0, x+60, y);\n      // Draws the pillar\n      myGLCD.setColor(0, 200, 20);\n      myGLCD.fillRect(x+49, 1, x+1, y-1);\n      // Draws the black frame of the pillar\n      myGLCD.setColor(0, 0, 0);\n      myGLCD.drawRect(x+50, 0, x, y);\n      // Draws the blue rectangle left of the pillar\n      myGLCD.setColor(114, 198, 206);\n      myGLCD.fillRect(x-1, 0, x-3, y);      // The bottom pillar\n      myGLCD.setColor(114, 198, 206);\n      myGLCD.fillRect(x+51, y+80, x+60, 204);\n      myGLCD.setColor(0, 200, 20);\n      myGLCD.fillRect(x+49, y+81, x+1, 203);\n      myGLCD.setColor(0, 0, 0);\n      myGLCD.drawRect(x+50, y+80, x, 204);\n      myGLCD.setColor(114, 198, 206);\n      myGLCD.fillRect(x-1, y+80, x-3, 204);\n  }\n  // Draws the score\n  myGLCD.setColor(0, 0, 0);\n  myGLCD.setBackColor(221, 216, 148);\n  myGLCD.setFont(BigFont);\n  myGLCD.printNumI(score, 100, 220);\n}//====== drawBird() - Custom Function\nvoid drawBird(int y) {\n  // Draws the bird - bitmap\n  myGLCD.drawBitmap (50, y, 35, 30, bird01);\n  // Draws blue rectangles above and below the bird in order to clear its previus state\n  myGLCD.setColor(114, 198, 206);\n  myGLCD.fillRoundRect(50,y,85,y-6);\n  myGLCD.fillRoundRect(50,y+30,85,y+36);\n}\n//======== gameOver() - Custom Function\nvoid gameOver() {\n  delay(3000); // 1 second\n  // Clears the screen and prints the text\n  myGLCD.clrScr();\n  myGLCD.setColor(255, 255, 255);\n  myGLCD.setBackColor(0, 0, 0);\n  myGLCD.setFont(BigFont);\n  myGLCD.print(\"GAME OVER\", CENTER, 40);\n  myGLCD.print(\"Score:\", 100, 80);\n  myGLCD.printNumI(score,200, 80);\n  myGLCD.print(\"Restarting...\", CENTER, 120);\n  myGLCD.setFont(SevenSegNumFont);\n  myGLCD.printNumI(2,CENTER, 150);\n  delay(1000);\n  myGLCD.printNumI(1,CENTER, 150);\n  delay(1000);\n  \n  // Writes the highest score in the EEPROM\n  if (score > highestScore) {\n    highestScore = score;\n    EEPROM.write(0,highestScore);\n  }\n  // Resets the variables to start position values\n  xP=319;\n  yB=50;\n  fallRate=0;\n  score = 0;\n  lastSpeedUpScore = 0;\n  movingRate = 3;  \n  gameStarted = false;\n  // Restart game\n  initiateGame();\n}", "step_imgs": ["https://cdn.instructables.com/F4B/1F67/JTYN5SZ3/F4B1F67JTYN5SZ3.LARGE.jpg"], "step_title": "Step 9: Flappy Bird"}, {"step": 10, "steps_text": "You can find the source code in my Github repository.\nLink: https://github.com/Rahul24-06/Arduino-TFT-Interfacing-Basics\nGive a thumbs up if it really helped you and do follow my channel for interesting projects :)\nShare this video if you like.\nHappy to have you subscribed: https://www.youtube.com/channel/UCks-9JSnVb22dlqtMgPjrlg/videos\nThanks for reading!", "step_imgs": [], "step_title": "Step 10: Working of the Project"}], "channel": ""}, {"category": "", "description": "This project shows how to make an interactive picture of a dandelion. It starts as a yellow flower with LED's for petals then changes into a white dandelion clock, which can be blown on to make the seeds disperse.\nIt is based on a beautiful artwork by Qi Jie, whose picture was inspired by a single flower design by Jessie Thompson and Zachory Berta. I made mine on fabric and framed it in a tapestry hoop to go on the wall of the Tech and Textiles makerspace in Devon, England, as an example of a beginners project that combines sewing with Arduino.\nVideo of light painting by Qi Jie\nVideo of single flower design by Jessie Thompson and Zachory Berta\nThe code for both existing projects is available and I thought it would be easy to make, but the instructions were minimal and it took several attempts before I found a method that worked. So here are the full instructions and time saving tips for a remix that combines elements of both designs and tweaks of my own.\nDetails of what didn\u2019t work for me are at the end for anyone who's interested in why I chose this way.\nCode for light painting by Qi Jie\nCode for small flower picture by Jessie Thompson and Zachory Berta\nMaterials\nArduino UNO\nAdafruit Ring of 12 Neopixels\n5V Strip of 11 RGB LEDs\nSound Microphone Sensor\nJumper Wires\n5V Rechargeable Battery with USB A connection\nPrinter Cable (USB A to B cable)\nGlue Dots or Hot Glue\nA4 Card\n30cm x 30cm Cream Cotton Fabric, such as an old pillowcase\nGreen Fabric Paint\nBrown Cotton Thread\n70cm x 50cm Corrugated Cardboard, such as pizza boxes\nMasking Tape\n9 inch Embroidery Hoop to frame the picture\n9 Self-Adhesive Velcro Tabs\nTools\nA computer with Arduino IDE downloaded\nSoldering Iron and Lead-Free Solder\nBreadboard for testing circuit\nWire Stripper/Cutters\nSewing Needle\nPen\nScissors", "title": "Interactive Dandelion", "url": "https://www.instructables.com/id/Interactive-Dandelion/", "section": "technology", "steps": [{"step": 1, "steps_text": "Solder different color wires to each of the power, ground and data pads on the back of the NeoPixel ring.\nIf you have a different version of the ring, your wires may not be in the same position as the photo of mine.\nMake a note of which wires are for input and output as well as positive, data and ground because the markings for these are on the underside of the ring and won\u2019t be visible when the ring is in position.", "step_imgs": ["https://cdn.instructables.com/FEH/3UXW/JTIYMDIS/FEH3UXWJTIYMDIS.LARGE.jpg"], "step_title": "Step 1: Prepare the NeoPixel Ring"}, {"step": 2, "steps_text": "Cut 11 individual LEDs from a strip of RGB LEDs, taking care to cut along the centre line to leave solder pads on both sides of the cut. Dab a blob of solder on the top side of each pad.", "step_imgs": ["https://cdn.instructables.com/F75/QDAK/JTIYMD0L/F75QDAKJTIYMD0L.LARGE.jpg", "https://cdn.instructables.com/FU6/ZN67/JTIYMD0M/FU6ZN67JTIYMD0M.LARGE.jpg"], "step_title": "Step 2: Cut the Strips of LEDs"}, {"step": 3, "steps_text": "Make a hole in the middle of the card to fit the microphone. Using glue dots, stick the ring of neo pixels and individual LEDs in position as shown, making sure all the arrows on the LEDs will line up the same way when daisy chained together.\nSolder the output wires from the ring to the first individual LED, matching the positive, ground and data wires to the same pads on both LEDs.\nThe quickest and easiest way I found to join the LEDs together is to strip a jumper wire into separate copper strands. Attach one strand to link each of the soldered pads on the LEDs to the next one, matching positive, data and ground. It just takes a quick touch of a hot soldering iron because the pads have been pre-soldered in the previous step. Instead of cutting the wires at this stage, take them across the top of the LED to reach the soldered pads on the other side. Making sure no wires cross or touch each other, solder to those pads and continue round to the input side of the last LED.\nDon\u2019t attach a wire to the output side of the last LED. Unlike some LEDs you may be familiar with, you don\u2019t need to complete a round circuit that takes power back to ground as you\u2019ve been wiring separate ground and positive lines all the way along. Cut all the wires that go across the top of the LEDs so that you only have wires linking between them.\nTip: To prevent wires touching when going round corners, thread each one back into a small strip of plastic insulation that was previously removed.", "step_imgs": ["https://cdn.instructables.com/F4L/N4OI/JTIYMCX0/F4LN4OIJTIYMCX0.LARGE.jpg", "https://cdn.instructables.com/FTS/N9UY/JTIYMD0N/FTSN9UYJTIYMD0N.LARGE.jpg", "https://cdn.instructables.com/F0K/906C/JTIYMCWZ/F0K906CJTIYMCWZ.LARGE.jpg"], "step_title": "Step 3: Solder the LEDs"}, {"step": 4, "steps_text": "Make another hole in the white card for the input wires and push them through.\nSeparate the two rings of the tapestry hoop. Draw round the outside of the smallest ring on 5 pieces of corrugated card and cut out. Cut holes in the middle of 3 of the circles approximately 2cm in from the edge to make rings and cut a 5mm slit in each one. Glue the rings on top of each other, lining up the slits, and stick this to one of the remaining circles of card.", "step_imgs": ["https://cdn.instructables.com/FNK/0DJN/JTIYMDIR/FNK0DJNJTIYMDIR.LARGE.jpg", "https://cdn.instructables.com/FBW/B84S/JTWT8U00/FBWB84SJTWT8U00.LARGE.jpg"], "step_title": "Step 4: Preparing the Back"}, {"step": 5, "steps_text": "Wire your Arduino to the microphone sensor and the LED ring as shown. I used TinkerCad to create the circuit diagram, which doesn\u2019t have a microphone picture so I\u2019ve substituted another sensor that uses the same pins and works the same way in the simulation.\nTo view the simulation, go to https://www.tinkercad.com/things/5cgI2wluA0c. Drag the circle attached to the sensor onto the active area to simulate blowing into the microphone. The LEDs are in strips on 6, so the last LED in the simulation isn\u2019t part of the design and doesn\u2019t light up.", "step_imgs": ["https://cdn.instructables.com/FKW/PYTG/JTEMVU2W/FKWPYTGJTEMVU2W.LARGE.jpg", "https://cdn.instructables.com/FUX/FQRI/JTIYMDLO/FUXFQRIJTIYMDLO.LARGE.jpg"], "step_title": "Step 5: Wiring the Microphone and Arduino"}, {"step": 6, "steps_text": "Open Arduino IDE on your computer and start a new Sketch\nDelete everything inside the sketch and copy and paste this code into it instead\n// Adapted using NeoPixel Ring simple sketch (c) 2013 Shae Erisson<br>//and sensor code from <a href=\"https://www.hackster.io/ingo-lohs/first-test-37-sensor-kit-v2-0-from-elegoo-7-37-ba2d7d\" rel=\"nofollow\"> https://www.hackster.io/ingo-lohs/first-test-37-s...</a>\n\n#include <Adafruit_NeoPixel.h>\n\n// Which pin on the Arduino is connected to the NeoPixels?\n#define PIN            6\n\n// How many NeoPixels are attached to the Arduino?\n#define NUMPIXELS      23\n\n// When we setup the NeoPixel library, we tell it how many pixels, and which pin to use to send signals.\n// Note that for older NeoPixel strips you might need to change the third parameter--see the strandtest\n// example for more information on possible values.\nAdafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);\n\nint delayval = 500; // delay for half second\nint sensorPin  =  A0;     // select the input pin for the sensor\nint sensorValue =  0;     // variable to  store  the value  coming  from  the sensor\n\nconst int threshold = 200;   // an arbitrary threshold level that's in the range of the analog input\n\nvoid setup() {\n\n pixels.begin(); // This initializes the NeoPixel library.\n  pixels.setBrightness(20); // Set brightness\n  Serial.begin(9600);\n}\n\nvoid loop() {\n\n  // For a set of NeoPixels the first NeoPixel is 0, second is 1, all the way up to the count of pixels minus one.\n\n  // Dandelion LEDs\n\n  // pixels.Color takes RGB values, from 0,0,0 up to 255,255,255\n  pixels.setPixelColor(0, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(1, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(2, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(3, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(4, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(5, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(6, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(7, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(8, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(9, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(10, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(11, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval*6);//Gradual change from flower to seed head\n\n    // pixels.Color takes RGB values, from 0,0,0 up to 255,255,255\n  pixels.setPixelColor(0, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(1, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(2, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(3, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(4, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(5, pixels.Color(226,246,255)); // bluishwhite\n  pixels.setPixelColor(6, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(7, pixels.Color(226,246,255)); // bluishwhite\n  pixels.setPixelColor(8, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(9, pixels.Color(226,246,255)); // bluishwhite\n  pixels.setPixelColor(10, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(11, pixels.Color(226,246,255)); // bluishwhite.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n    delay(delayval*6);\n\n  //  Seed head LEDs\n\n pixels.setPixelColor(0, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(1, pixels.Color(0,0,0)); //off\n  pixels.setPixelColor(2, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(3, pixels.Color(0,0,0)); //off\n  pixels.setPixelColor(4, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(5, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(6, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(7, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(8, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(9, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(10, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(11, pixels.Color(226, 246, 255)); //off\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval*3); // Delay for a period of time (in milliseconds).\n\n  pixels.setPixelColor(0, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(1, pixels.Color(0,0,0)); //off\n  pixels.setPixelColor(2, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(3, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(4, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(5, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(6, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(7, pixels.Color(255, 165, 0)); // Orange.\n  pixels.setPixelColor(8, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(9, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(10, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(11, pixels.Color(226,246,255)); //Bluish white.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval*3); // Delay for a period of time (in milliseconds).\n\n  pixels.setPixelColor(0, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(1, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(2, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(3, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(4, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(5, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(6, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(7, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(8, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(9, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(10, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(11, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval); // Delay for a period of time (in milliseconds).\n\n  // Read the sensor value and display it in the serial monitor\n  sensorValue = analogRead(sensorPin);\n  Serial.println(sensorValue);\n  delay(250);\n\n  // While sensor value is less than threshold, check the sensor value and print it in the serial monitor. When the value is above threshold, the sketch can continue\n  while (sensorValue < threshold) {\n  sensorValue = analogRead(sensorPin);\n  Serial.println(sensorValue);\n  delay(250);\n  }\n\n  // First wind LEDs\n\n  pixels.setPixelColor(0, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(1, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(2, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(3, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(4, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(5, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(6, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(7, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(8, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(9, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(10, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(11, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(12, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(13, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(14, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(15, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(16, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(17, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(18, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(19, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(20, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(21, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(22, pixels.Color(0, 0, 0)); // Off.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(delayval); // Delay for a period of time (in milliseconds).\n\n  // Second wind LEDs\n\n  pixels.setPixelColor(0, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(1, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(2, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(3, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(4, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(5, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(6, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(7, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(8, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(9, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(10, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(11, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(12, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(13, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(14, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(15, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(16, pixels.Color(0, 0, 0)); // Off.\n  pixels.setPixelColor(17, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(18, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(19, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(20, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(21, pixels.Color(226, 246, 255)); // Bluish white.\n  pixels.setPixelColor(22, pixels.Color(226, 246, 255)); // Bluish white.\n\n  pixels.show(); // This sends the updated pixel color to the hardware.\n\n  delay(2000); // Delay for a period of time (in milliseconds).\n\n}\nAttach your Arduino to the computer with the USB printer cable\nGo to Tools > Board and select the Arduino/Genuino UNO board\nGo to Port and make sure you\u2019ve got the board connected to the right USB port. If you\u2019re unsure you can unplug the Arduino and see which port disappears from the list. Plug it back in and the port will be listed again.\nUpload the sketch by clicking on the Upload icon, shown in the annotated photo. Lights should flash on the Arduino while it uploads. When it finishes uploading half the LEDs on the neo pixel ring will light up yellow and then change to a full ring of white lights. Blow on the microphone to test the circuit. The LEDs in the outer layers should light up in turn. Check the solder on any LEDs that don\u2019t work.", "step_imgs": ["https://cdn.instructables.com/FLQ/1BM8/JTEMVW25/FLQ1BM8JTEMVW25.LARGE.jpg"], "step_title": "Step 6: Programming the Arduino"}, {"step": 7, "steps_text": "Colors\nThe colours of the LEDs are set using RGB (Red Green Blue) colour values. If you prefer to use different colors than I've used you can find the values for the colours you want by using an online RGB colour calculator such as www.w3schools.com/colors/colors_rgb.asp\nTo turn an LED off, use the values 0, 0, 0.\nTo set the LED to white, use the values 255, 255, 255. The code in the previous step uses a bluish white with the values 226, 246, 255 and an orange with the values of 255, 165, 0.\nBrightness\nTo change the brightness of the LEDs, go to the void setup section of the code and find the following line of code:\npixels.setBrightness(20); // Set brightness\nEdit the number in the brackets to change the brightness of the LEDs.\nSensor Threshold\nWhen you run the program, half the NeoPixel ring starts off yellow to represent a flower and gradually changes to a full circle of white LEDs to represent the seed head. At this point the program should pause until you blow on the microphone sensor. If the program continues and lights up the outer layers of LEDs without activation from the sensor, go to the void setup section of the code and lower the value shown below. Increase the value if the program pauses but doesn't respond when you blow on the sensor.\nconst int threshold = 200;", "step_imgs": ["https://cdn.instructables.com/FYT/5L3K/JTEMVQ7G/FYT5L3KJTEMVQ7G.LARGE.jpg", "https://cdn.instructables.com/FMZ/60OC/JTEMVQDU/FMZ60OCJTEMVQDU.LARGE.jpg"], "step_title": "Step 7: Changing the Colours, Brightness and Sensor Threshold"}, {"step": 8, "steps_text": "When the circuit works, unplug the Arduino from the computer and remove the microphone sensor from the breadboard. Solder wires from the Arduino to the microphone sensor to make the same circuit more permanent. Push the microphone through the hole in the card from behind. If necessary, carefully bend the microphone by 90 degrees so the board can lie flat behind the card. Attach the battery to the Arduino using the printer cable and the whole sequence should work.", "step_imgs": ["https://cdn.instructables.com/F2Z/MKA3/JTYN4ZH9/F2ZMKA3JTYN4ZH9.LARGE.jpg"], "step_title": "Step 8: Making the Circuit More Permanent"}, {"step": 9, "steps_text": "Make a hole in your fabric where you want the microphone. I used a hot soldering iron to burn a small hole and trimmed it with scissors until the microphone fitted through. Paint and stitch your flower on the fabric. When the paint dries, attach the painting to the embroidery hoop and trim away excess fabric, leaving a small border.\nTo see if any of the circuit components show through the fabric, temporarily place the fabric and hoop on top of the card with the microphone showing through the hole. If necessary, cover the circuit with layers of masking tape, checking occasionally, until the components don't show anymore. The LEDs are bright enough to be seen through a layer of masking tape. If you have to add even more layers you can make the LEDs brighter by adjusting your code as shown in Step 7.\nPlace the fabric and hoop back on top of the card as before and secure in place by gluing the extra fabric over the back of the card.", "step_imgs": ["https://cdn.instructables.com/F7S/ZG5T/JTWT8TZW/F7SZG5TJTWT8TZW.LARGE.jpg"], "step_title": "Step 9: Create a Picture"}, {"step": 10, "steps_text": "Glue the white card onto the corrugated cardboard circle, enclosing the microphone, but not the Arduino and battery pack, which need to go round the edge of the cardboard with the wires passing through the slits.\nAttach the last circle of cardboard with Velcro so that you can access the battery. Make a hole in the cardboard where you want to hang it on a hook on the wall.", "step_imgs": ["https://cdn.instructables.com/FLK/3H5N/JTYN54VT/FLK3H5NJTYN54VT.LARGE.jpg"], "step_title": "Step 10: Putting It Together"}, {"step": 11, "steps_text": "My first attempt was with circuit stickers and copper tape. Circuit stickers are tiny LEDs surface mounted onto stickers with copper pads. They come from Qi Jie's company, Chibitroniks, and I thought they\u2019d be perfect.\nI couldn\u2019t get a reliable connection using copper tape or silver tape and when I soldered wire to the stickers I could still only get a series of 3 LED stickers to light using a 9V battery. It became clear they are not intended for multi light projects as I\u2019d hoped. When I looked more closely at a web page about circuit stickers, a project with 4 lights turned out to be a different type of LEDs. I could power circuit stickers with a 12V battery but it would be too bulky to fit inside the picture.\nThen I tried sewable LEDs. I thought having only power and ground would be easier to wire than programmable LEDs which have power, ground and data lines. But it turned out to be a more complicated circuit needing an extra power supply and a MOSFET, which I didn\u2019t have. I could have used sewable NeoPixels, but they are more expensive.\nSo after a few false starts, I ended up with a string of programmable LEDs which are cheap and easy to use.", "step_imgs": ["https://cdn.instructables.com/FD8/CG7L/JTIYMDLI/FD8CG7LJTIYMDLI.LARGE.jpg", "https://cdn.instructables.com/F21/H6JG/JTIYMDS9/F21H6JGJTIYMDS9.LARGE.jpg", "https://cdn.instructables.com/FCJ/ZB7A/JTIYMDLL/FCJZB7AJTIYMDLL.LARGE.jpg"], "step_title": "Step 11: Learning From Mistakes"}], "channel": ""}, {"category": "", "description": "Since I found out what a rubens tube is I have wanted to make one. They just seem so cool. Something that could show sound waves though little flames. I found it was the perfect match: a little fire that dances to music. I never thought I could make one until I searched it on instructables and found this: https://www.instructables.com/id/The-Rubens--Tube%253a-Soundwaves-in-Fire!/.\nI had looked at other ones but none of them seemed to look all that good. They all looked very \"redneck\". With this instructable I will show you how to make one that looks good too.\nIf you are planning to make this, make sure you also consider the safety hazards that come along with it. Make sure to read the safety section in this instructable: https://www.instructables.com/id/The-Rubens--Tube%253a-Soundwaves-in-Fire!/\nI will try to explain all the steps in a clear way to make it easier. So, lets get to the point and start building.", "title": "Leon's Rubens Tube", "url": "https://www.instructables.com/id/Rubens-Tube-5/", "section": "technology", "steps": [{"step": 1, "steps_text": "I have tried to include a picture of everything i needed.\nMaterials:\nVentilation Ducting\nI used 4\" x 60\" air duct (4 inch diameter x 60 inches long)\nHose Clamps x2\nEpoxy putty\nHose / tubing\nI used 1/4\" tube\nhose barb splicer x2\ntwo 1/4\" hose splicers (make sure its the right size for your tubing, 1/4\" for me because I used 1/4\" tube)\nHose T barb connector\n1/4\" for me\nTeflon Tape\nPolyethylene Sheets\nI used polyethylene because that was all that I could find but yourtvlies says that latex works best.\npropane and torch\nI used this as my fuel source. The torch should have a fuctioning valve to turn it off.\nSpray paint x2\nOne color for the stands (I used textured charcoal) and another High heat color for the tube itself (I used silver)\nscrap wood\ntwo pieces at least\nClamps of all kinds\nA 1/4\" and a 1/16\" drill bit\nTape measure\nA Sharpie\nPliers\nA File\nA 2\" x 10\" at least 44\" long if you plan to make a base.\nAn amplifier\nPlay your own music or use a tone generator.", "step_imgs": ["https://cdn.instructables.com/FF2/XB5G/JTON895V/FF2XB5GJTON895V.LARGE.jpg", "https://cdn.instructables.com/F4N/MRZZ/JTT5QTVG/F4NMRZZJTT5QTVG.LARGE.jpg", "https://cdn.instructables.com/FUB/RYGG/JTON8974/FUBRYGGJTON8974.LARGE.jpg", "https://cdn.instructables.com/FQD/3SLE/JTON899L/FQD3SLEJTON899L.LARGE.jpg", "https://cdn.instructables.com/FNC/JERA/JTONAAK9/FNCJERAJTONAAK9.LARGE.jpg", "https://cdn.instructables.com/F7V/Y5YK/JTT5QTXS/F7VY5YKJTT5QTXS.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "put masking tape around the duct at approximatly 42\" from the good side (the side without the bumps).\nmeasure and mark 42\" in several different places around the duct on the tape.\nuse the tin snips to cut along the line\ndon't throw out the extra piece of duct, we will use it later.", "step_imgs": ["https://cdn.instructables.com/FH7/5HIG/JTON899P/FH75HIGJTON899P.LARGE.jpg", "https://cdn.instructables.com/F9N/TG6Z/JTON899Q/F9NTG6ZJTON899Q.LARGE.jpg", "https://cdn.instructables.com/FYV/15HG/JTON899T/FYV15HGJTON899T.LARGE.jpg"], "step_title": "Step 2: Measure and Cut Duct"}, {"step": 3, "steps_text": "you will need two peices of wood the same width as the duct flattened and at least 3ft long. I used the extra piece of duct left to mark it", "step_imgs": ["https://cdn.instructables.com/FOA/LPTZ/JTON89CC/FOALPTZJTON89CC.LARGE.jpg", "https://cdn.instructables.com/FEO/Y5X1/JTON89L4/FEOY5X1JTON89L4.LARGE.jpg"], "step_title": "Step 3: Cut the Wood"}, {"step": 4, "steps_text": "flatten the long duct onto the first peice of wood.\nput the next piece of wood on top\nclamp them together with the duct in between", "step_imgs": ["https://cdn.instructables.com/F0H/JTD3/JTON89MD/F0HJTD3JTON89MD.LARGE.jpg", "https://cdn.instructables.com/FN7/66BN/JTON89NM/FN766BNJTON89NM.LARGE.jpg", "https://cdn.instructables.com/F4U/TZA6/JTONC0AQ/F4UTZA6JTONC0AQ.LARGE.jpg"], "step_title": "Step 4: Clamp It in Place"}, {"step": 5, "steps_text": "The pictures help explain this part.\nStarting at 4\" from the ends of the ducts, mark where you will drill 1/16\" holes 1/2\" apart centered on the duct.\nAt 1/4 and 3/4 of the way down the line of dots, mark where you will drill 1/4\" holes 3 5/16\" away from the center dots.", "step_imgs": ["https://cdn.instructables.com/F7G/D8NB/JTONC0I3/F7GD8NBJTONC0I3.LARGE.jpg", "https://cdn.instructables.com/F5W/LG9K/JTON89OY/F5WLG9KJTON89OY.LARGE.jpg", "https://cdn.instructables.com/FIR/50FM/JTON89OX/FIR50FMJTON89OX.LARGE.jpg"], "step_title": "Step 5: Do Your Drawing."}, {"step": 6, "steps_text": "make a little dent in all the places you will be drilling. This will help so the drill bit won't move around.\ndrill all the holes. try your best to only drill strait up and down", "step_imgs": ["https://cdn.instructables.com/FO3/4B5J/JTONAAJY/FO34B5JJTONAAJY.LARGE.jpg", "https://cdn.instructables.com/FEE/5IT8/JTON89PR/FEE5IT8JTON89PR.LARGE.jpg"], "step_title": "Step 6: Drilling"}, {"step": 7, "steps_text": "take the clamps off\ntake the top piece of wood off. It will bulge up.", "step_imgs": ["https://cdn.instructables.com/FAR/8MMH/JTON89R3/FAR8MMHJTON89R3.LARGE.jpg", "https://cdn.instructables.com/FSM/KEVU/JTON89SG/FSMKEVUJTON89SG.LARGE.jpg"], "step_title": "Step 7: Take the Clamps Off"}, {"step": 8, "steps_text": "cut two pieces of 1/4\" tube that are the same size\nput teflon tape around the barbs on one end of the splicers.\npush* one splicer onto each piece of tube\nwrap two ends of the T connector and attach* the other ends of the tubes onto it. (see pictures)\n* when you attach the hoses it helps to turn the hose as it goes on.", "step_imgs": ["https://cdn.instructables.com/F2K/1W1R/JTON89XF/F2K1W1RJTON89XF.LARGE.jpg", "https://cdn.instructables.com/FU7/D8ZO/JTON89ZQ/FU7D8ZOJTON89ZQ.LARGE.jpg", "https://cdn.instructables.com/FDS/2X1I/JTON89ZR/FDS2X1IJTON89ZR.LARGE.jpg"], "step_title": "Step 8: Start Making the Hose System"}, {"step": 9, "steps_text": "Some of the rubens tube instructables don't mention this but if you are using a torch end like mine, this step is necessary. We tried it without making the hole bigger, there was not even enough propane to light the flames.\nclamp the torch\ndrill a 1/16\" hole in the end.", "step_imgs": ["https://cdn.instructables.com/F00/B79K/JTWT0S4T/F00B79KJTWT0S4T.LARGE.jpg", "https://cdn.instructables.com/FM5/WR0C/JTWT0SVR/FM5WR0CJTWT0SVR.LARGE.jpg", "https://cdn.instructables.com/FJJ/OV1C/JTWT0SDT/FJJOV1CJTWT0SDT.LARGE.jpg"], "step_title": "Step 9: Make the Torch Hole Bigger"}, {"step": 10, "steps_text": "push and twist the propane torch onto another, longer piece of tubing.\nwrap teflon tape onto the last end of the T connector.\npush and twist the other end of the tube onto the barbed T connector.", "step_imgs": ["https://cdn.instructables.com/FIQ/7OIE/JTON89ZS/FIQ7OIEJTON89ZS.LARGE.jpg", "https://cdn.instructables.com/FPJ/E32E/JTON89ZT/FPJE32EJTON89ZT.LARGE.jpg", "https://cdn.instructables.com/FLJ/9LC8/JTON89ZU/FLJ9LC8JTON89ZU.LARGE.jpg"], "step_title": "Step 10: Finish the Tubing"}, {"step": 11, "steps_text": "Scrape up around the hose splicers. This will make the epoxy putty stick to the metal better. See the pictures.", "step_imgs": ["https://cdn.instructables.com/FG8/TMEY/JTON8A4Z/FG8TMEYJTON8A4Z.LARGE.jpg", "https://cdn.instructables.com/F5A/YNWU/JTON8ABA/F5AYNWUJTON8ABA.LARGE.jpg", "https://cdn.instructables.com/F1B/HNPW/JTON8A7J/F1BHNPWJTON8A7J.LARGE.jpg", "https://cdn.instructables.com/FJA/MKQZ/JTON8AC1/FJAMKQZJTON8AC1.LARGE.jpg"], "step_title": "Step 11: Prepare for Glueing"}, {"step": 12, "steps_text": "take a chunk off\nknead and mix it with your hand* until it is even in color.\napply it around the splicers on the inside and outside\ndo the next step before it dries. (it should say on the package how long it takes)", "step_imgs": ["https://cdn.instructables.com/F23/5T76/JTON8A2D/F235T76JTON8A2D.LARGE.jpg", "https://cdn.instructables.com/FEO/1W0J/JTON8AC2/FEO1W0JJTON8AC2.LARGE.jpg", "https://cdn.instructables.com/FG2/5QW5/JTON8AC4/FG25QW5JTON8AC4.LARGE.jpg", "https://cdn.instructables.com/FED/NO55/JTON8AC5/FEDNO55JTON8AC5.LARGE.jpg"], "step_title": "Step 12: Put on the Epoxy Putty."}, {"step": 13, "steps_text": "Close the duct before the putty dries. You can pactice closing it on the extra piece on ducting.\nAfter closing thd duct, make sure the putty is still all right.", "step_imgs": ["https://cdn.instructables.com/FY0/8XY5/JTON8AC6/FY08XY5JTON8AC6.LARGE.jpg"], "step_title": "Step 13: Close the Duct."}, {"step": 14, "steps_text": "tape along the conecting point. this will mke it airtight\ncut short pieces of tape and put them on the sharp ends of the duct. See pictures.", "step_imgs": ["https://cdn.instructables.com/FWY/1JI9/JTONAANF/FWY1JI9JTONAANF.LARGE.jpg", "https://cdn.instructables.com/FWR/8AEI/JTONAANM/FWR8AEIJTONAANM.LARGE.jpg", "https://cdn.instructables.com/FNH/R3WS/JTONAANG/FNHR3WSJTONAANG.LARGE.jpg", "https://cdn.instructables.com/FKN/5LCT/JTONAANP/FKN5LCTJTONAANP.LARGE.jpg"], "step_title": "Step 14: Duct Tape"}, {"step": 15, "steps_text": "cut a piece of polyethelene film big enough to fit over the end of the tube with a little sticking off. see pictures", "step_imgs": ["https://cdn.instructables.com/FDG/30ZT/JTONAANU/FDG30ZTJTONAANU.LARGE.jpg", "https://cdn.instructables.com/F5H/XYF0/JTONAANV/F5HXYF0JTONAANV.LARGE.jpg", "https://cdn.instructables.com/FVD/AWO0/JTONAANX/FVDAWO0JTONAANX.LARGE.jpg", "https://cdn.instructables.com/FLZ/4GQ3/JTONAAR7/FLZ4GQ3JTONAAR7.LARGE.jpg"], "step_title": "Step 15: The Diaphragm"}, {"step": 16, "steps_text": "Use small pieces of duct tape to stretch the film over the hole. See the pictures.\nput two layers of tape on top to make it look better and airtight.", "step_imgs": ["https://cdn.instructables.com/FTY/VQQG/JTONAAXO/FTYVQQGJTONAAXO.LARGE.jpg", "https://cdn.instructables.com/FT9/ZK6P/JTONAAXP/FT9ZK6PJTONAAXP.LARGE.jpg", "https://cdn.instructables.com/F1Q/D5IH/JTONAAK6/F1QD5IHJTONAAK6.LARGE.jpg", "https://cdn.instructables.com/FJP/TYMA/JTONAAK7/FJPTYMAJTONAAK7.LARGE.jpg"], "step_title": "Step 16: Install the Diaphragm"}, {"step": 17, "steps_text": "do the same on the other side of the tube", "step_imgs": [], "step_title": "Step 17: Repeat Steps 14-16 on the Other Side"}, {"step": 18, "steps_text": "cut a strip 1\" wide and the same lengh as the extra piece of duct.\nmesure 1\" from each side.\nmesure 3 1/2\" from that on each side. (see pictures)\nfold on all the lines and turn the center into a curve.", "step_imgs": ["https://cdn.instructables.com/FHK/CJTW/JTT5QU66/FHKCJTWJTT5QU66.LARGE.jpg", "https://cdn.instructables.com/FTY/63VU/JTT5QU93/FTY63VUJTT5QU93.LARGE.jpg", "https://cdn.instructables.com/F26/7Z3A/JTT5QUA7/F267Z3AJTT5QUA7.LARGE.jpg"], "step_title": "Step 18: The Stand"}, {"step": 19, "steps_text": "measure a rectangle 6 1/4\" long and 1\" wide on the extra piece of duct.\nmeasure 1\" from both ends\ncut on the outer lines\nfold on the 1\" lines\nNow, to glue it all together.", "step_imgs": ["https://cdn.instructables.com/F6K/39JW/JTT5QTZY/F6K39JWJTT5QTZY.LARGE.jpg", "https://cdn.instructables.com/F2Z/O23J/JTT5QU1R/F2ZO23JJTT5QU1R.LARGE.jpg", "https://cdn.instructables.com/F4K/GUU2/JTT5QUGI/F4KGUU2JTT5QUGI.LARGE.jpg"], "step_title": "Step 19: The Stand Support"}, {"step": 20, "steps_text": "tighten the clamp onto the end of the duct.\ndraw a line a few spaces down from the tightener\nline up the line with the top of the stand.\nwhile holding it in place, mark some lines beside it to help while gluing", "step_imgs": ["https://cdn.instructables.com/FJ6/VR33/JTT5QUJX/FJ6VR33JTT5QUJX.LARGE.jpg", "https://cdn.instructables.com/FR2/S1TX/JTT5QUH2/FR2S1TXJTT5QUH2.LARGE.jpg", "https://cdn.instructables.com/F4Q/OBYC/JTT5QUQ2/F4QOBYCJTT5QUQ2.LARGE.jpg", "https://cdn.instructables.com/FW4/8P2E/JTT5QULO/FW48P2EJTT5QULO.LARGE.jpg"], "step_title": "Step 20: Preparing the Clamp for Gluing"}, {"step": 21, "steps_text": "Scrape and file anywhere the stand and clamp touch.", "step_imgs": ["https://cdn.instructables.com/FC1/I14D/JTT5QUTU/FC1I14DJTT5QUTU.LARGE.jpg", "https://cdn.instructables.com/FE3/392O/JTT5QUVX/FE3392OJTT5QUVX.LARGE.jpg"], "step_title": "Step 21: Scrape/file"}, {"step": 22, "steps_text": "mix up a chunk of epoxy putty\nroll it into a long piece\napply it along the bottom of the clamp.\nPush it onto the stand", "step_imgs": ["https://cdn.instructables.com/FJ5/595M/JTT5QV0E/FJ5595MJTT5QV0E.LARGE.jpg", "https://cdn.instructables.com/FSK/PRBZ/JTT5QV13/FSKPRBZJTT5QV13.LARGE.jpg", "https://cdn.instructables.com/FRB/VF1L/JTT5QV2C/FRBVF1LJTT5QV2C.LARGE.jpg"], "step_title": "Step 22: Glue"}, {"step": 23, "steps_text": "clamp it together. Don't worry if some putty comes though the holes. The stand will get deformed. This doesn't matter we will straiten it.\nLeave it for at least 30 min.", "step_imgs": ["https://cdn.instructables.com/FJS/DS6A/JTT5QUB0/FJSDS6AJTT5QUB0.LARGE.jpg", "https://cdn.instructables.com/FH5/Q349/JTT5QV44/FH5Q349JTT5QV44.LARGE.jpg"], "step_title": "Step 23: Clamp"}, {"step": 24, "steps_text": "Take the clamps off.\nFile the bumps away.", "step_imgs": ["https://cdn.instructables.com/F7Y/UVQA/JTT5QV4P/F7YUVQAJTT5QV4P.LARGE.jpg", "https://cdn.instructables.com/F5Q/0OQE/JTT5QVW7/F5Q0OQEJTT5QVW7.LARGE.jpg"], "step_title": "Step 24: Finishing Touches"}, {"step": 25, "steps_text": "Straiten the stand\nmeasure 1/2\" from the bottom of the stand.\nscrape anywhere the support and stand touches", "step_imgs": ["https://cdn.instructables.com/FLE/AOPZ/JTT5QV6J/FLEAOPZJTT5QV6J.LARGE.jpg", "https://cdn.instructables.com/FYB/VNRJ/JTT5QV8X/FYBVNRJJTT5QV8X.LARGE.jpg", "https://cdn.instructables.com/FWA/11I9/JTT5QVD7/FWA11I9JTT5QVD7.LARGE.jpg", "https://cdn.instructables.com/FAH/VINK/JTT5QVHF/FAHVINKJTT5QVHF.LARGE.jpg"], "step_title": "Step 25: Get Ready for the Support."}, {"step": 26, "steps_text": "apply some mixed epoxy putty to the support\npush it onto the stand\nclamp it\nremove any extras that come squishing out\ndo the same on the other side.", "step_imgs": ["https://cdn.instructables.com/FLP/BEXA/JTT5QVLM/FLPBEXAJTT5QVLM.LARGE.jpg", "https://cdn.instructables.com/FDU/AF1E/JTT5QVOT/FDUAF1EJTT5QVOT.LARGE.jpg", "https://cdn.instructables.com/FVX/CM2H/JTT5QVS2/FVXCM2HJTT5QVS2.LARGE.jpg", "https://cdn.instructables.com/F64/VLGF/JTT5QVTF/F64VLGFJTT5QVTF.LARGE.jpg"], "step_title": "Step 26: Glue"}, {"step": 27, "steps_text": "You will need to make another but this time with the support pointing the other way. See the pictures for better details.", "step_imgs": ["https://cdn.instructables.com/FM1/7FE4/JTT5QW11/FM17FE4JTT5QW11.LARGE.jpg"], "step_title": "Step 27: Redo Steps 17-25"}, {"step": 28, "steps_text": "This is what you'll need", "step_imgs": ["https://cdn.instructables.com/FBO/6OH1/JTT5QW5N/FBO6OH1JTT5QW5N.LARGE.jpg", "https://cdn.instructables.com/F7V/SML5/JTT5QW3T/F7VSML5JTT5QW3T.LARGE.jpg"], "step_title": "Step 28: Painting"}, {"step": 29, "steps_text": "cover the place you will paint with some sort of plastic stuff (I used some of the Polyethelene film I used for the diaphragm)\npaint with several thin coats", "step_imgs": ["https://cdn.instructables.com/FTU/EUB7/JTT5QW6W/FTUEUB7JTT5QW6W.LARGE.jpg", "https://cdn.instructables.com/F0X/FEAO/JTT5QWBR/F0XFEAOJTT5QWBR.LARGE.jpg", "https://cdn.instructables.com/F7Q/J24O/JTT5QWQD/F7QJ24OJTT5QWQD.LARGE.jpg", "https://cdn.instructables.com/FG5/QY2G/JTT5QWAT/FG5QY2GJTT5QWAT.LARGE.jpg"], "step_title": "Step 29: Painting the Stands"}, {"step": 30, "steps_text": "Cover the place again\nPut masking tape on anything you don't want covered in paint. Make sure you cover the holes so they don't get clogged.\nPaint it with high heat spray paint. I used silver\nLet it dry\nTake the tape off", "step_imgs": ["https://cdn.instructables.com/F7K/I1RY/JTT5QWLD/F7KI1RYJTT5QWLD.LARGE.jpg", "https://cdn.instructables.com/FIN/J49I/JTT5QWNV/FINJ49IJTT5QWNV.LARGE.jpg", "https://cdn.instructables.com/F7W/LZBY/JTT5QWSG/F7WLZBYJTT5QWSG.LARGE.jpg"], "step_title": "Step 30: Paint the Duct"}, {"step": 31, "steps_text": "Get a 2\" x 10\"\ncut it 42\" if you want it the same size as the duct or 44\" if you want it 1\" longer on each side for protection.", "step_imgs": ["https://cdn.instructables.com/F0A/FX9H/JTT5QWDA/F0AFX9HJTT5QWDA.LARGE.jpg", "https://cdn.instructables.com/FVE/IO4W/JTT5QWDP/FVEIO4WJTT5QWDP.LARGE.jpg", "https://cdn.instructables.com/FMV/8IX9/JTT5QWFM/FMV8IX9JTT5QWFM.LARGE.jpg"], "step_title": "Step 31: Make a Base (not Necessary)"}, {"step": 32, "steps_text": "Tighten the stands onto the duct\nScrew the stands onto the base (if you did one).", "step_imgs": ["https://cdn.instructables.com/FH4/CP6U/JTT5QWWX/FH4CP6UJTT5QWWX.LARGE.jpg"], "step_title": "Step 32: WOW! It's DONE (unless You Paint the Base)"}, {"step": 33, "steps_text": "Make sure the torch end is off\nscrew in a propane bottle\nturn it on**\nLight the holes\nput an amp beside it\nturn the lights out\nENJOY!\nTips & Tricks\nIf you play music, it will dance. If you want to see riples use a tone generator such as this: https://www.szynalski.com/tone-generator/\n**The remix I did said to prime the tube. This means that you put tape on the holes and turn the propane on. Then you wait a couple of minutes to let it fill up before removing the tape and lighting it. This will gather up pressure so the flames are higher. I found that most of the pessure was lost right away when you took the tape off anyway. Thus, I just opened the valve higher and didn't bother priming it at all.", "step_imgs": ["https://cdn.instructables.com/FNI/WG7O/JTYN8L6P/FNIWG7OJTYN8L6P.LARGE.jpg", "https://cdn.instructables.com/FSL/700V/JTWT0I9S/FSL700VJTWT0I9S.LARGE.jpg", "https://cdn.instructables.com/FGF/KMWH/JTYN8LGQ/FGFKMWHJTYN8LGQ.LARGE.jpg", "https://cdn.instructables.com/FEI/63RK/JTWT0HCT/FEI63RKJTWT0HCT.LARGE.jpg", "https://cdn.instructables.com/F5K/OX7E/JTWT0GEW/F5KOX7EJTWT0GEW.LARGE.jpg"], "step_title": "Step 33: Get Ready & Enjoy!"}], "channel": ""}, {"category": "", "description": "The idea was born after being selected to expose at Maker Faire Lille, a giant event around Science, inventions and the Do-It-Yourself mindset.\nI wanted to build something that makes visitors want to subscribe to my YouTube channel YouLab.\nI quickly though about a real time YouTube counter. However, it was lacking of interactivity with visitors.\nThat's why, I've decided to make an action after each subscription : Making bubbles.\nThe two following instructables have inspired me in the realization of the YouTube Subscriber Counter Bubble Machine.\nYouTube Counter :https://www.instructables.com/id/YouTube-Subscribe...\nBubble Machine : https://www.instructables.com/id/Bubble-Machine/\nLet's discover how I made this interactive counter.", "title": "YouTube Subscriber Counter Bubble Machine", "url": "https://www.instructables.com/id/YouTube-Counter-Bubble-Machine/", "section": "technology", "steps": [{"step": 1, "steps_text": "To make this project, you will need the following electronic material.\nESP8266 ESP-12 module\nESP-12E Motor Shield\n5V DC motor (At least 5000 RPM)\n5V DC gear-motor (about 100 RPM)\nLed Matrix 8x8 (between 3 to 8 units for a 3 to 8 digits counter)\nUSB Cable with power supply (At least 1A)\nIt can be purchase online for a very cheap price.\nThe ESP8266 is the brain of the circuit. This programmable board can connect to WIFI to get YouTube statistics, send commands to drive motors and pilot Led Matrix display.\nAs this module have limited current on output, a motor shield board must be added to drive motors.", "step_imgs": ["https://cdn.instructables.com/FOX/0KXG/JTYNE4LL/FOX0KXGJTYNE4LL.LARGE.jpg"], "step_title": "Step 1: Electronic Material"}, {"step": 2, "steps_text": "First of all, plug the ESP8266 module on the motor shield board.\nTo power these boards you can either use a separate power supply for motors and EPS8266 alimentation either use the same power supply.\nIn order to simplify the circuit I have chosen a unique power supply. To do so, you just have to had a jumper between VIN and VM on the motor shield board.\nThen connect the Led Matrix to the shield Board using the following table\nShield - Led Matrix\nVIN - VCC\nG - GND\n7 - DIN\n8 - CS\n5 - CLK\nFinally connect motors to A+/A- B+/B- and USB cable to VIN/GND", "step_imgs": ["https://cdn.instructables.com/FJG/4M9U/JTWT4YLM/FJG4M9UJTWT4YLM.LARGE.jpg", "https://cdn.instructables.com/F7G/C6UC/JTWT6L3Y/F7GC6UCJTWT6L3Y.LARGE.jpg"], "step_title": "Step 2: Electronic Circuit"}, {"step": 3, "steps_text": "The ESP8266 module runs Arduino. Some librairies and board configuration are required to run this project :\nAdd following URL in Preferences > Additional Boards Manager URLs:\nhttp://arduino.esp8266.com/stable/package_esp8266com_index.json\nInstall ESP8266 v2.4.2 in Tools > Boards Manager\nSelect NodeMCU 1.0 (ESP-12E Module) in Tools > Boards\nInstall ArduinoJson 5.13.5 in Library Manager\nInstall YoutubeAPI 1.1.0 in Library Manager", "step_imgs": ["https://cdn.instructables.com/FIG/DXVW/JTYNE4LE/FIGDXVWJTYNE4LE.LARGE.jpg"], "step_title": "Step 3: Sketch Configuration : Librairies and Board"}, {"step": 4, "steps_text": "Download the code attached to this step and open the file Youtube_counter_bubble_machine.ino\nYou will find three information to be customized in the code in the section 'Custom configuration to be replaced':\nCustomize WIFI\nIt correspond to the WIFI network that will be used by the ESP8266.\nUpdate WIFI SSID and Password fields with your network informations\nCustomize Channel ID\nThis field correspond to the YouTube channel that will be used to get subscribers statistics.\nYour Channel ID can be found in the URL of your web browser when you are on the main page of your YouTube channel.\nFor example the URL of YouLab Youtube page is :\nhttps://www.youtube.com/channel/UCQVsjlyPMlN4tZ7cGd5NnnA\nYouLab Channel ID is UCQVsjlyPMlN4tZ7cGd5NnnA\nCustomize Google API_Key\nSome Youtube API are used to get subscriber count of a channel. An API_Key is required to use Youtube APIs.\nWith a logged in google acount go to\nhttps://console.developers.google.com\nIn Dashboard select create project and in credentials select create credentials - API Key.\nIn Library select YouTube Data API v3 and enable.\nCopy the API Key in the Youtube counter code.", "step_imgs": ["https://cdn.instructables.com/F9V/KKV1/JTYNE4L5/F9VKKV1JTYNE4L5.LARGE.jpg", "https://cdn.instructables.com/F3B/3KVR/JTWT4YST/F3B3KVRJTWT4YST.LARGE.jpg", "https://cdn.instructables.com/FHS/KAN2/JTWT4YT1/FHSKAN2JTWT4YT1.LARGE.jpg"], "step_title": "Step 4: Customize Code"}, {"step": 5, "steps_text": "Let's try the firmware on the hardware.\nFirst connect the ESP8266 to your computer by USB and select the upload button. The firmware will be sent to your board.\nWhen finished, your Led Matrix should display INIT.\nAfter 3 to 5 seconds the Led Matrix should display the number of subscribers of your YouTube channel.\nTry to subscribe an check that the display is updated and motors start to run for 5 seconds.\nIf you face some troubles, open the serial monitor that will provide useful logs and help you debug your hardware or software.", "step_imgs": ["https://cdn.instructables.com/FM5/IT3I/JTWT4Z1X/FM5IT3IJTWT4Z1X.LARGE.jpg", "https://cdn.instructables.com/F74/M9M4/JTWT4ZGI/F74M9M4JTWT4ZGI.LARGE.jpg", "https://cdn.instructables.com/FL0/I9B6/JTWT4ZLD/FL0I9B6JTWT4ZLD.LARGE.jpg"], "step_title": "Step 5: Transfer Firmware and Test Boards"}, {"step": 6, "steps_text": "The code is divided in two parts, the setup phase and the loop phase.\nThe setup consist in initializing the Matrix Led, the WIFI and the two motors.\nThe loop phase repeat every two seconds :\nCall YouTube API\nUpdate Led Matrix\nIf new subscriber gain Power motors for 5 seconds", "step_imgs": ["https://cdn.instructables.com/FDS/V2DI/JTYNE4LA/FDSV2DIJTYNE4LA.LARGE.jpg"], "step_title": "Step 6: The Code"}, {"step": 7, "steps_text": "The bubble machine part is quit simple.\nA disk full of holes will dive into a dish soap liquid then rotate in front of a fan. It will create a lot of bubbles.\nThe disk is a CD-ROM or a DVD.\nMake some holes in it with a soldering machine.\nThen plug the disk on the gear-motor using a plastic cap to make the interface.", "step_imgs": ["https://cdn.instructables.com/F3R/PL56/JTYNE4LO/F3RPL56JTYNE4LO.LARGE.jpg", "https://cdn.instructables.com/FWS/1GG2/JTWT50LQ/FWS1GG2JTWT50LQ.LARGE.jpg", "https://cdn.instructables.com/FGV/9WHL/JTWT50QJ/FGV9WHLJTWT50QJ.LARGE.jpg"], "step_title": "Step 7: Bubble Machine"}, {"step": 8, "steps_text": "The casing is based on an old wood wine box that originally contained 3 bottles.\nMake a rectangle hole for the led matrix, a circular hole for the fan and a small hole for the gear motor axis.\nAttach a container on the bottom front of the wood box. It will contain the soap liquid.\nPlug the disk on the gear motor from the front of the wood box.\nFinally fill the container with some dish soap mixed to water.\nYour YouTube counter Bubble Machine is ready.", "step_imgs": ["https://cdn.instructables.com/FAP/P9XA/JTWT50IV/FAPP9XAJTWT50IV.LARGE.jpg", "https://cdn.instructables.com/FTS/Y9IK/JTWT50KO/FTSY9IKJTWT50KO.LARGE.jpg", "https://cdn.instructables.com/FX7/9UGX/JTYNE4K7/FX79UGXJTYNE4K7.LARGE.jpg"], "step_title": "Step 8: Casing"}], "channel": ""}, {"category": "", "description": "In this DIY guide I will show you how to make your own security check system based on Arduino!\nYou can use this system in areas with security guards (e.g. warehouses, malls, open areas). Every guard will have a personal RFID card with a unique ID number. When a security guard pass his cards over the Check point station - the ID and the current time/date will be stored inside controller memory (EEPROM). The security guard inside the \"Control Room\" can read the report of all check point stations with only one click!\nThis project started out as a Bachelor's thesis by me - John Vasilakis (supervised by Grigoris Tziallas) - Electronic Engineering Department of Stereas Elladas University. We are supporting the open hardware - software community so this project will be marked as an open-source. Before share/copy/change anything of below guide, make sure to read and agree with the CC BY-NC-SA licence agreement!\nWe used the RFID technology to read scanned card and the RS485 electrical data bus protocol for communication. In this project I decided to make my own PCB that is based on Arduino UNO microcontroller - Atmega328p.\nWe can have up to 254 slave-check point stations and one master station in the RS485 data bus. The master station is communicating with one computer in security room via serial USB port. We will describe the communication protocol in the following steps!\nLet's get started.\n~Project link can be found here:\nhttps://www.ardumotive.com/arduino-security-check-...\nVideo presentation:", "title": "Security Check RFID System Based on Arduino and RS485 Data Bus", "url": "https://www.instructables.com/id/Security-Check-RFID-System-Based-on-Arduino-and-RS/", "section": "technology", "steps": [{"step": 1, "steps_text": "For Master Station you will need:\nOur custom PCB circuit\nAtmega328 (with Arduino UNO bootloader)\n28 dip socket\n16 MHz crystal oscillator\n2x22 pF capacitors\n1x100nF ceramic capacitor\n1x10uF Electrolytic Capacitor\n1x10K resistor\nScrew terminal 2P 2.54mm\n2xPin Header 1x5 Female 2.54mm\n----> Or use an Arduino board with breadboard\nRFID MFRC-522 Module\nSN75176 Transceiver RS485\nbuzzer\n~Power by 5V power adapter\nFor every Slave - Sensor Station you will need:\nOur custom PCB circuit\nAtmega328 (with Arduino UNO bootloader)\n28 dip socket\n16 MHz crystal oscillator\n2x22 pF capacitors\n1x100nF ceramic capacitor\n1x10uF Electrolytic Capacitor\n1x10K resistor\nScrew terminal 2P 2.54mm\n2xPin Header 1x5 Female 2.54mm\n----> Or use an Arduino board with breadboard\nSN75176 Transceiver RS485\nDisplay 16x2 Character LCD - 5V\nTrimmer 20kOhm\nRFID MFRC-522 Module\nDS1307 IC RTC\n32.768 KHz Crystal\nCoin Cell Battery Holder (for CR2032 type batteries)\nbuzzer\n~Power by 5V power adapter\n*You will also need a TTL to USB module or an Arduino UNO board for the programming procedure, and then use it for USB communication for Master Station.", "step_imgs": ["https://cdn.instructables.com/FLJ/CTBP/JTWSW1K1/FLJCTBPJTWSW1K1.LARGE.jpg"], "step_title": "Step 1: What You Will Need - Hardware Part List"}, {"step": 2, "steps_text": "Find the electronic and pcb schematic at link below:\nhttps://easyeda.com/mi.vasilakis/RFID-RS485-ARDUIN...\nYou can make any changes you want!\nWe used the JLCPCB for $2 PCB Fabrication & 2-day Build Time, the quality is really good, check the below photo of our pcb board. JLCPCB it will not charge you for any color selection for your pcb board! Enter here to produce your PCB board!", "step_imgs": ["https://cdn.instructables.com/F5R/HD0P/JTWRZJ9D/F5RHD0PJTWRZJ9D.LARGE.jpg", "https://cdn.instructables.com/FWZ/MS8R/JTWRZJ9C/FWZMS8RJTWRZJ9C.LARGE.jpg", "https://cdn.instructables.com/F8J/HA4H/JTYND0NU/F8JHA4HJTYND0NU.LARGE.jpg"], "step_title": "Step 2: The Circuit - Electronic and PCB Schematic"}, {"step": 3, "steps_text": "LCD\nRS pin to Arduino Pin 2\nEN pin to Arduino Pin 3\nD4 pin to Arduino Pin 4\nD5 pin to Arduino Pin 5\nD6 pin to Arduino Pin 6\nD7 pin to Arduino Pin 7\nRFID\nSDA pin to Arduino Pin 10\nSCL pin to Arduino Pin 13\nMOSI pin to Arduino Pin 11\nMISO pin to Arduino Pin 12\nRST pin to Arduino Pin 9\nRTC\nSDA pin to Arduino Pin A4\nSCL pin to Arduino Pin A5\nSN75176\nRE pin to Arduino Pin A3\nDE pin to Arduino Pin A2\nR pin to Arduino Pin A0\nD pin to Arduino Pin A1\nBuzzer to Arduino Pin 8", "step_imgs": ["https://cdn.instructables.com/FW0/VHTH/JTWRZIVR/FW0VHTHJTWRZIVR.LARGE.jpg", "https://cdn.instructables.com/F2U/TX19/JTWRZIVW/F2UTX19JTWRZIVW.LARGE.jpg", "https://cdn.instructables.com/FES/NZKK/JTWRZJ09/FESNZKKJTWRZJ09.LARGE.jpg", "https://cdn.instructables.com/F2U/CHLH/JTWRZJ3E/F2UCHLHJTWRZJ3E.LARGE.jpg", "https://cdn.instructables.com/FZT/A20B/JTWRZJ5T/FZTA20BJTWRZJ5T.LARGE.jpg"], "step_title": "Step 3: Arduino Connection Pins"}, {"step": 4, "steps_text": "*See the attached images.", "step_imgs": ["https://cdn.instructables.com/FCY/PSWL/JTWRZJ9H/FCYPSWLJTWRZJ9H.LARGE.jpg", "https://cdn.instructables.com/FOH/Z727/JTWSW5FT/FOHZ727JTWSW5FT.LARGE.jpg", "https://cdn.instructables.com/FG3/16YE/JTWSW5H5/FG316YEJTWSW5H5.LARGE.jpg", "https://cdn.instructables.com/FRB/25BR/JTWSW5H6/FRB25BRJTWSW5H6.LARGE.jpg"], "step_title": "Step 4: Communication Protocol"}, {"step": 5, "steps_text": "Connect your circuit with the TTL to USB module with 5 cables to the programming header. The pins RX and TX must be cross-connected.\nNOTE: If you are using the Arduino UNO board make sure to remove the ATmega328 IC from it first and connect the headers RX to RX and TX to TX pins of the board. The RS pin must be connected to Arduino UNO reset pin.\n-------------CONFIGURATION-----------------\nMaster\nCode for the master station unit. The \"Master Station\" is responsible for the communication between \"Slave stations\" via RS485 data bus. It also communicate via serial port with the software that is running to \"control room\" computer.\nSlave\nCode for the slave station units. Every \"Slave Station\" - check point unit has a unique address. Edit the variable \"PORT\" (line 25) with hex value of unit address - value from 01 to FE (total of 254 stations). Also change the \"name\" of the current station by editing the variable \"point\" at line 24. Every check point can store to EEPROM memory up to 10 card IDs. If the security card exist, the ID and time-stamp will be saved to EEPROM memory.\nDownload the code from here and open it with Arduino IDE. Inside you will also find all library files.", "step_imgs": [], "step_title": "Step 5: The Code"}, {"step": 6, "steps_text": "Download and print the case of the master and slave stations with your 3D printer!", "step_imgs": ["https://cdn.instructables.com/F7Y/76MJ/JTWRZJ7R/F7Y76MJJTWRZJ7R.LARGE.jpg", "https://cdn.instructables.com/FID/LA3T/JTWRZJ8K/FIDLA3TJTWRZJ8K.LARGE.jpg", "https://cdn.instructables.com/FAB/VZ91/JTWRZJ8Y/FABVZ91JTWRZJ8Y.LARGE.jpg", "https://cdn.instructables.com/FN0/TJ8U/JTWRZJ8M/FN0TJ8UJTWRZJ8M.LARGE.jpg"], "step_title": "Step 6: 3D Parts"}, {"step": 7, "steps_text": "In this section we will describe the operation of the software that will run in the \"control\" room computer.\nFirst, you need to connect with master station via serial port.\nOnce logged in we will update the time and date of all stations based on the clock of the computer.\nWe have the option of entering the cardholder's name in our staff list. To do this, pass a card over the RFID (of master station) to read the ID and after the 'beep' sound click the \"Read ID\" button, select index position (from 1 to 10) and click the \"Add \" button. The new ID will be added to staff panel, there you can add a name of the employee. Now click on \"Update Stations with Card IDs\" button, now all stations are updated with new cards.\nThe report given by the devices since the card last passed. The total number of control stations indicates how many devices we have. We use 3 devices in our example. Clicking on the last check status report will look at the report that our devices gave us. For example: Station 1 replied that the E0 BD 74 AE card passed on 26/2/2019 at 19:13.\nFinally, we can read the time and date or the card table of each device.", "step_imgs": ["https://cdn.instructables.com/FHC/R8L1/JTWRZW7O/FHCR8L1JTWRZW7O.LARGE.jpg", "https://cdn.instructables.com/F4R/TFS4/JTWRZWIJ/F4RTFS4JTWRZWIJ.LARGE.jpg", "https://cdn.instructables.com/FNO/4P8L/JTWRZWOE/FNO4P8LJTWRZWOE.LARGE.jpg", "https://cdn.instructables.com/FM0/J9BC/JTWRZWQW/FM0J9BCJTWRZWQW.LARGE.jpg", "https://cdn.instructables.com/F16/MGSD/JTWRZWS1/F16MGSDJTWRZWS1.LARGE.jpg"], "step_title": "Step 7: Windows Software"}, {"step": 8, "steps_text": "I hope you liked this, let me know in the comments!!!", "step_imgs": ["https://cdn.instructables.com/FI3/LVEH/JTWRZIVK/FI3LVEHJTWRZIVK.LARGE.jpg", "https://cdn.instructables.com/FPV/2MF9/JTWRZJ6J/FPV2MF9JTWRZJ6J.LARGE.jpg"], "step_title": "Step 8: Well Done!"}], "channel": ""}, {"category": "", "description": "After having used my custom-made diving mask frame with the add-on lenses, I started finding that there was room for further improvements. These added features would facilitate the construction and make the overall use of the add-on lens frame more convenient to use while diving.\nThankfully, in recent times there have been great advancements made in the field of photogrammetry which have made this technology accessible to virtually anyone with a smartphone. Add to this the reduction in the costs of 3D printing and the combination of the two has offered the right opportunity to take my custom-made diving mask frame with the add-on lenses to the next level.\nIn the following steps I use some of the latest technologies that are now available to all to remix and transform the first version into a superior and more pleasing result!\nThe link to the first version: https://www.instructables.com/id/Diving-Mask-With-Add-on-Lenses/", "title": "Diving Mask With Custom Add-on Lenses (V2.0) Made Using Photogrammetry", "url": "https://www.instructables.com/id/Diving-Mask-With-Custom-Add-on-Lenses-V20-Made-Usi/", "section": "technology", "steps": [{"step": 1, "steps_text": "In the previous version (1.0) I had found the following difficulties while making and also when using the mask frame.\nShortcomings in V 1.0\nConstruction difficulties:\nThe 2D, flat, planar surface of the acrylic sheet provides limited possibilities to add more features and elements to it.\nThe mask frame supports (Step 16) are designed by taking visual measurements and are therefore inaccurate. Because of these inaccuracies the shape of the supports don't match the shape of the mask and don't get glued properly. I had to re-glue the supports a few times before they got firmly stuck.\nAligning all of the 4 frame supports on the mask which has irregularly shaped surfaces was challenging.\nBecause the frame supports are permanently glued to the mask, the mask gets permanently altered and can't be used as a \"regular mask\".\nUtilization difficulties:\nMoving and sliding the lenses up and down the slot in the frame requires the use of both hands - one hand to loosen the butterfly nut and the other to hold the lens frame.\nImprovements in V 2.0\nConstruction improvements:\nBy designing an add-on mask frame that closely matches the shape of the diving mask, we get a 3D shape which offers us many more surfaces and areas to add features and elements to the frame.\nAn add-on mask frame that closely fits the diving mask does not need to be permanently fixed or glued to the mask as it's holds itself in place.\nThe add-on mask frame can be added and removed without making any changes to the diving mask.\nThe availability of larger areas on the mask frame, on the sides and the back of the frame, provides the space to add elements to fasten the mask frame to the diving mask and also add a mechanism to slide the lenses up and down the face of the mask.\nImproved usage:\nA mechanism to slide the lenses up and down the face of the mask and with the use of just one hand has been added making the adjustment of the lenses extremely convenient.", "step_imgs": ["https://cdn.instructables.com/FZP/PN6V/JTWS8GD1/FZPPN6VJTWS8GD1.LARGE.jpg", "https://cdn.instructables.com/FNO/271Y/JTWS8GEI/FNO271YJTWS8GEI.LARGE.jpg"], "step_title": "Step 1: Remixing Version 1.0 to 2.0"}, {"step": 2, "steps_text": "One of the challenges of designing an add-on frame to a diving mask is the irregularity of the shape of a diving mask. The shapes of a typical diving mask are mostly curved with complex three dimensional forms. This makes it difficult to take those measurements of a mask that would be required to design a closely matching frame.\nThe difficulty of taking measurements of a mask can be overcome with the use of photogrammetry where one can directly recreate a virtual 3D mesh of the mask that closely matches the real mask without having to take any measurements.\nMoreover, photogrammetry has become greatly user-friendly and anyone with a smartphone or any other camera can take photos of almost any object and obtain a virtual 3D mesh of that object with the clicks of a few buttons. There are several software that offer photogrammetry for free and as this field is advancing so rapidly I suggest that anyone who wants to try it can look up the latest versions that are available online.\nFor the use of photogrammetry in this project, I watched a few videos on how to take the photos of my mask so that I could get a fairly accurate 3D mesh of the mask. Briefly, the important things to keep in mind are the lighting of the object, reflections from the object and making sure that there's sufficient overlap between successive photos.\nI didn't bother too much about the lighting and just used the natural daylight light in the room while keeping all the lights in the room on. Some of the photos came out a bit dark, but it didn't seem to matter too much. To remove the reflections from the mask I sprinkled some talcum powder on it and spread it all over with a paint brush. I took as many photos as possible from all the angles, about 120 photos which were probably more than necessary, in order to make sure that the photos overlapped each other. The photos were then fed into the photogrammetry software which created a sufficiently accurate 3d mesh of the mask.", "step_imgs": ["https://cdn.instructables.com/FB9/M1FA/JTWS8KFO/FB9M1FAJTWS8KFO.LARGE.jpg", "https://cdn.instructables.com/FKZ/VAQE/JTWS8K4D/FKZVAQEJTWS8K4D.LARGE.jpg", "https://cdn.instructables.com/FP9/8F5Y/JTWS8K88/FP98F5YJTWS8K88.LARGE.jpg", "https://cdn.instructables.com/FGL/CX5N/JTWS8KDQ/FGLCX5NJTWS8KDQ.LARGE.jpg", "https://cdn.instructables.com/F1S/V41E/JTWS8KAY/F1SV41EJTWS8KAY.LARGE.jpg", "https://cdn.instructables.com/FHD/EM2J/JTWS8KH2/FHDEM2JJTWS8KH2.LARGE.jpg"], "step_title": "Step 2: Using Photogrammetry"}, {"step": 3, "steps_text": "Once you have the 3D mesh of the model of the mask, you can use the mesh to recreate and reverse engineer the exact 3D shape and model of the mask in a CAD software. It is not necessary to be extremely precise while modeling and deviations in the range of +0.5 mm to 1.0 mm are acceptable. The model of the mask has to be larger than the mesh because otherwise he frame will not fit the mask.\nIt is important to bear in mind that the mesh of the mask is not to scale. To scale the 3D model that has been created so that it matches the actual mask, I used the same method of scanning, tracing and creating a 2D sketch that I used in steps 2 and 3 in the V 1.0. The 2D sketch is to scale and the 3D model of the mask frame that has been created can be scaled so that it matches the 2D sketch.", "step_imgs": ["https://cdn.instructables.com/FH3/76ZV/JTWS8NX9/FH376ZVJTWS8NX9.LARGE.jpg", "https://cdn.instructables.com/F4Z/8R0O/JTWS8NYW/F4Z8R0OJTWS8NYW.LARGE.jpg"], "step_title": "Step 3: Reverse Engineering the Mask's Profile"}, {"step": 4, "steps_text": "Once the 3D model of the diving mask has been created, it will serve as the base model around which the mask frame can be modeled. The mask frame has to make contact with the front and on all of the sides of the diving mask, with the allowance of a few millimeters. The mask frame can be attached to the mask either with a strap or with an attachment that is fitted at the back of the mask frame and which holds it onto the mask.\nThe mask frame can be modeled by offsetting the surfaces of the diving mask by about 1 mm so that we are sure that the mask frame is larger than the diving mask. These surfaces can then be thickened externally to create the solid 3D model of the mask frame. One can use one's imagination and design sense while creating the mask frame.\nFor instance I tried to maintain the design and profile of the original mask as much as possible and I added some space for a hole at the top so that a mount for a compact underwater camera such as a GoPro can be fitted onto the mask frame.\nWhile modeling the mask frame, it is not necessary to be too precise as long as the 3D model of the mask frame is larger than the diving mask. A few millimeters here and there in excess don't matter that much. The idea is to make an external frame that fits onto the diving mask.", "step_imgs": ["https://cdn.instructables.com/F8V/4V8X/JTWS8PHV/F8V4V8XJTWS8PHV.LARGE.jpg", "https://cdn.instructables.com/FWJ/1HP6/JTWS8PGU/FWJ1HP6JTWS8PGU.LARGE.jpg"], "step_title": "Step 4: Creating the 3D Model of the Mask Frame"}, {"step": 5, "steps_text": "To improve the ease of moving and sliding the lenses up and down the frame, a geared mechanism with a pinion that moves on a linear guide with a rack, was conceived. Essentially, by turning a knob which is connected to the pinion, the lens can be moved up or down the rack, with just one hand. To keep the lens sliding mechanism in its place a locking mechanism has also been incorporated along with the knob. This has greatly simplified the minute adjustment and positioning of the lenses.\nThe travel length of the linear guide mechanism is determined by the position of the eye in relation to the mask and also the shape of the mask, in my case I needed a travel length of 3 cm. This was covered in steps 2 to 6 of the V 1.0.", "step_imgs": ["https://cdn.instructables.com/FCZ/73OS/JTWS9649/FCZ73OSJTWS9649.LARGE.jpg"], "step_title": "Step 5: Linear Guide Mechanism for Lens Movement"}, {"step": 6, "steps_text": "3D Printing Filament (PLA) - as the parts in this project won't take much load I would recommend to use PLA due to its facility of printing. One can choose their preferred colour of filament, I decided to go with black as it would seamlessly integrate with the colour of my existing mask.\n3D Printer - Creality Ender 3 highly recommended.\nM5 Bolts x 8 - I tried 3D printing the bolts but they were not strong enough. I would advise using stainless steel bolts as seawater is unforgiving and will quickly corrode any other metal. You will require 4 bolts to be of length 1 cm and the other 4 to be of length 3 cm.\nClear Acrylic - 3 mm thick clear acrylic sheets will be required for encasing the lenses, as was done in V 1.0.", "step_imgs": ["https://cdn.instructables.com/F7F/P2BW/JTWSU50N/F7FP2BWJTWSU50N.LARGE.jpg"], "step_title": "Step 6: Materials Needed"}, {"step": 7, "steps_text": "All the parts have been modeled with respect to ease of 3D printing. A considerable amount of time went in designing the parts keeping in mind the structural strength of the parts as well as the feasibility of 3D printing. Ideally, I would have liked to print fewer parts, but I had to split some of the parts into smaller units because it was not possible to print those parts in one go.\nI have sliced the model in a way that no component has any overhangs and thus can be printed without supports. The complete list of the parts with their 3d printing specifications (stl's and g-codes) are in the file above.", "step_imgs": ["https://cdn.instructables.com/F9H/X8DT/JTWSU50P/F9HX8DTJTWSU50P.LARGE.jpg", "https://cdn.instructables.com/FG7/6ACT/JTWSU51B/FG76ACTJTWSU51B.LARGE.jpg", "https://cdn.instructables.com/FUV/EEES/JTWSU4UF/FUVEEESJTWSU4UF.LARGE.jpg"], "step_title": "Step 7: 3D Printing Specifications"}, {"step": 8, "steps_text": "The key to a well functioning mechanism, is finding the right tolerances. It took me several prototypes, from fits being too tight to components being too loose, to finally achieve the correct tolerances. Unfortunately tolerances depend on the precision of the 3d printer being used and thus might need to be altered for specific printers. I used the Creality Ender 3 to print the parts using tolerance of +0.25 mm while friction fit parts were of +0.1 mm. These settings lead to successful results.\nTherefore to analyse and gauge the required tolerances I have prepared a test print file of the section of the mechanism. This way one can prototype faster and have less waste. Once you have achieved the wanted results you are ready for the next steps.", "step_imgs": ["https://cdn.instructables.com/F0U/5ZA0/JTWSUDK0/F0U5ZA0JTWSUDK0.LARGE.jpg"], "step_title": "Step 8: Tolerance Test Sample"}, {"step": 9, "steps_text": "Thanks to the advancements in photogrammetry and its increased user-friendliness I was able to create a sufficiently accurate add-on frame for my mask that fitted it closely. Additionally, I find that it also looks better than the acrylic frame in V 1.0.", "step_imgs": ["https://cdn.instructables.com/F27/SL1W/JTWSU50M/F27SL1WJTWSU50M.LARGE.jpg", "https://cdn.instructables.com/F18/J52D/JTWSU520/F18J52DJTWSU520.LARGE.jpg", "https://cdn.instructables.com/FZ0/MY1L/JTWSU51X/FZ0MY1LJTWSU51X.LARGE.jpg", "https://cdn.instructables.com/FYU/K0PJ/JTWSU51Z/FYUK0PJJTWSU51Z.LARGE.jpg", "https://cdn.instructables.com/F11/T60N/JTWSU52J/F11T60NJTWSU52J.LARGE.jpg", "https://cdn.instructables.com/F6K/Z3MY/JTWSU51Y/F6KZ3MYJTWSU51Y.LARGE.jpg", "https://cdn.instructables.com/FCW/AT9L/JTWS8YNK/FCWAT9LJTWS8YNK.LARGE.jpg"], "step_title": "Step 9: Mask Frame From Photogrammetry"}, {"step": 10, "steps_text": "Press fit the four threaded inserts on either side of the frame, by gently tapping the inserts with a mallet. Once the insert is flush with the side of the frame, screw on the Linear Guide Rails on each side of the frame with the M5 3D printed screws.", "step_imgs": ["https://cdn.instructables.com/F4C/VXRJ/JTWSU58W/F4CVXRJJTWSU58W.LARGE.jpg", "https://cdn.instructables.com/FPZ/MB7Y/JTWSU543/FPZMB7YJTWSU543.LARGE.jpg", "https://cdn.instructables.com/F7K/CAFK/JTWSU54M/F7KCAFKJTWSU54M.LARGE.jpg", "https://cdn.instructables.com/F2M/9FKN/JTWSU558/F2M9FKNJTWSU558.LARGE.jpg", "https://cdn.instructables.com/FT6/ZY20/JTWSU55U/FT6ZY20JTWSU55U.LARGE.jpg", "https://cdn.instructables.com/F9N/XNEM/JTWSU56J/F9NXNEMJTWSU56J.LARGE.jpg", "https://cdn.instructables.com/FIS/ISYH/JTWSU578/FISISYHJTWSU578.LARGE.jpg", "https://cdn.instructables.com/FYU/Y3X3/JTWSU58A/FYUY3X3JTWSU58A.LARGE.jpg", "https://cdn.instructables.com/F55/X3HI/JTWSU59F/F55X3HIJTWSU59F.LARGE.jpg"], "step_title": "Step 10: Mounting the Guide Rails on the Frame"}, {"step": 11, "steps_text": "The rack can be slid into the Linear Guide and held in a place with a bit of CA glue.\nThe Lens Slider is prepared by inserting the knob in its hole and joining it to the pinion. The locking bolt is then inserted through the knob and joined to the locking plate.", "step_imgs": ["https://cdn.instructables.com/FJ3/9AQV/JTWSU59Z/FJ39AQVJTWSU59Z.LARGE.jpg", "https://cdn.instructables.com/FL7/E1C5/JTWSU5A0/FL7E1C5JTWSU5A0.LARGE.jpg", "https://cdn.instructables.com/FV3/R126/JTWSU5A1/FV3R126JTWSU5A1.LARGE.jpg", "https://cdn.instructables.com/FNF/33W7/JTWSU9W7/FNF33W7JTWSU9W7.LARGE.jpg", "https://cdn.instructables.com/FZJ/DBVL/JTWSUA0X/FZJDBVLJTWSUA0X.LARGE.jpg", "https://cdn.instructables.com/FFC/9H7F/JTWSUA10/FFC9H7FJTWSUA10.LARGE.jpg", "https://cdn.instructables.com/F4S/XOVF/JTWSUA5R/F4SXOVFJTWSUA5R.LARGE.jpg", "https://cdn.instructables.com/FS7/8JCF/JTWSU4SK/FS78JCFJTWSU4SK.LARGE.jpg", "https://cdn.instructables.com/F9L/KDZI/JTWSUA9A/F9LKDZIJTWSUA9A.LARGE.jpg", "https://cdn.instructables.com/FNN/82VL/JTWSUACA/FNN82VLJTWSUACA.LARGE.jpg", "https://cdn.instructables.com/F88/R164/JTWSUAFU/F88R164JTWSUAFU.LARGE.jpg", "https://cdn.instructables.com/F4X/GLZK/JTWSUAKO/F4XGLZKJTWSUAKO.LARGE.jpg"], "step_title": "Step 11: Assembling the Linear Mechanism"}, {"step": 12, "steps_text": "This step is identical to Step 10 of V 1.0 and the photos are self-explanatory. It is important to ensure that the lenses and lens covers are clean before gluing because once glued the lenses and the inner surfaces of the lens covers are inaccessible. One should also be careful not to smear epoxy on the lens covers because it is virtually impossible to clean it later on.", "step_imgs": ["https://cdn.instructables.com/FWD/IGHN/JTWSU4WJ/FWDIGHNJTWSU4WJ.LARGE.jpg", "https://cdn.instructables.com/F7T/3IQ2/JTWSU4W4/F7T3IQ2JTWSU4W4.LARGE.jpg", "https://cdn.instructables.com/FCP/TY2F/JTWSU4WI/FCPTY2FJTWSU4WI.LARGE.jpg", "https://cdn.instructables.com/FQ0/86A1/JTWSU4W6/FQ086A1JTWSU4W6.LARGE.jpg", "https://cdn.instructables.com/FQ0/1C9A/JTWSU4Y6/FQ01C9AJTWSU4Y6.LARGE.jpg", "https://cdn.instructables.com/FD4/FVQC/JTWSU4YP/FD4FVQCJTWSU4YP.LARGE.jpg", "https://cdn.instructables.com/F6I/IPIE/JTWSU4WK/F6IIPIEJTWSU4WK.LARGE.jpg", "https://cdn.instructables.com/F6X/FSVX/JTWSU4YS/F6XFSVXJTWSU4YS.LARGE.jpg", "https://cdn.instructables.com/FAO/8VAJ/JTWSU4W5/FAO8VAJJTWSU4W5.LARGE.jpg", "https://cdn.instructables.com/FJE/BFFD/JTWSU4ZH/FJEBFFDJTWSU4ZH.LARGE.jpg"], "step_title": "Step 12: Gluing the Lens Holder"}, {"step": 13, "steps_text": "The assembly of the Lens Rotating and Blocking mechanism is similar to Step 14 of V 1.0 except that I have now given the provision to add two more of the movable, sliding teeth that block the gear in place. This has been done to reduce the amount of play that there was in the V 1.0 and to make the lens frame more firm. Although in V 2.0 I can fit 4 teeth I found that the mechanism worked sufficiently well with just 3 teeth.\nThe Lens Frame with the Rotating mechanism is then assembled to the Lens Slider mechanism.", "step_imgs": ["https://cdn.instructables.com/FWL/R3XT/JTWS5KGL/FWLR3XTJTWS5KGL.LARGE.jpg", "https://cdn.instructables.com/F66/ZQEB/JTWS5KA6/F66ZQEBJTWS5KA6.LARGE.jpg", "https://cdn.instructables.com/FH1/N6AV/JTWS5KB1/FH1N6AVJTWS5KB1.LARGE.jpg", "https://cdn.instructables.com/F2C/8TLT/JTWS5KD7/F2C8TLTJTWS5KD7.LARGE.jpg", "https://cdn.instructables.com/FR4/4G4L/JTWS5KF8/FR44G4LJTWS5KF8.LARGE.jpg", "https://cdn.instructables.com/FRB/XZL0/JTWS5KHF/FRBXZL0JTWS5KHF.LARGE.jpg", "https://cdn.instructables.com/FIJ/OKP6/JTWS5KKB/FIJOKP6JTWS5KKB.LARGE.jpg", "https://cdn.instructables.com/FYT/6EH8/JTWS5KKT/FYT6EH8JTWS5KKT.LARGE.jpg", "https://cdn.instructables.com/FLD/23QZ/JTWS5KLO/FLD23QZJTWS5KLO.LARGE.jpg"], "step_title": "Step 13: Assembling the Lens Rotating and Blocking Mechanism"}, {"step": 14, "steps_text": "The modular Fastening Blocks that are required to attach the mask frame onto the mask are best fitted from the front of the mask frame with the 4 M5 stainless steel bolts.\nI chose to have modular blocks instead of having blocks that are an integral part of the frame because the modular blocks can be modified to have side mounts for a torch or an accessory that one may want to add to the side of the mask frame. Modular blocks can therefore be easily interchanged and they add greater versatility to the mask frame.", "step_imgs": ["https://cdn.instructables.com/FW9/IBD5/JTWS5BN5/FW9IBD5JTWS5BN5.LARGE.jpg", "https://cdn.instructables.com/FRM/V7TT/JTWS5BR1/FRMV7TTJTWS5BR1.LARGE.jpg", "https://cdn.instructables.com/F3A/HSKF/JTWS5BUX/F3AHSKFJTWS5BUX.LARGE.jpg", "https://cdn.instructables.com/FB5/K3LT/JTWS5BYS/FB5K3LTJTWS5BYS.LARGE.jpg", "https://cdn.instructables.com/FYB/662S/JTWS5C2Q/FYB662SJTWS5C2Q.LARGE.jpg", "https://cdn.instructables.com/FIU/N6DW/JTWS5C2S/FIUN6DWJTWS5C2S.LARGE.jpg", "https://cdn.instructables.com/FQW/53F6/JTWS5C7B/FQW53F6JTWS5C7B.LARGE.jpg", "https://cdn.instructables.com/FY2/I30P/JTWS5C7E/FY2I30PJTWS5C7E.LARGE.jpg", "https://cdn.instructables.com/FL5/3ZYM/JTWS5C7G/FL53ZYMJTWS5C7G.LARGE.jpg"], "step_title": "Step 14: Attaching the Fastening Blocks"}, {"step": 15, "steps_text": "The mask is now ready to be inserted into the frame and the two can be fastened to each other by bolting the two straps to the fastening blocks at the back of the mask. The bolts are tightened till the frame is firmly fixed to the mask.", "step_imgs": ["https://cdn.instructables.com/FWW/BKEU/JTWS5I5T/FWWBKEUJTWS5I5T.LARGE.jpg", "https://cdn.instructables.com/FHR/WX4A/JTWS5I6N/FHRWX4AJTWS5I6N.LARGE.jpg", "https://cdn.instructables.com/FAK/PBUV/JTWS5I6T/FAKPBUVJTWS5I6T.LARGE.jpg", "https://cdn.instructables.com/FIJ/TH1E/JTWS5I7N/FIJTH1EJTWS5I7N.LARGE.jpg", "https://cdn.instructables.com/FG3/NZLP/JTWS5I8L/FG3NZLPJTWS5I8L.LARGE.jpg", "https://cdn.instructables.com/FGO/0Q1F/JTWS5I9F/FGO0Q1FJTWS5I9F.LARGE.jpg", "https://cdn.instructables.com/F0Z/EWRA/JTWS5IAX/F0ZEWRAJTWS5IAX.LARGE.jpg"], "step_title": "Step 15: Mounting the Frame to the Mask"}, {"step": 16, "steps_text": "The lens frame with the lens sliding mechanism can then be inserted into the linear guide. The ends of the linear guide can then be closed with the plugs to prevent the slider from sliding out of the linear guide.\nThe last image describes the lens sliding mechanism and how it's used.", "step_imgs": ["https://cdn.instructables.com/FX9/7FLS/JTWS5JU3/FX97FLSJTWS5JU3.LARGE.jpg", "https://cdn.instructables.com/FS2/P6FJ/JTWS5JN3/FS2P6FJJTWS5JN3.LARGE.jpg", "https://cdn.instructables.com/FWP/2RF3/JTWS5JNZ/FWP2RF3JTWS5JNZ.LARGE.jpg", "https://cdn.instructables.com/F6Y/YXR9/JTWS91GP/F6YYXR9JTWS91GP.LARGE.jpg", "https://cdn.instructables.com/FJE/CTK4/JTWS90AC/FJECTK4JTWS90AC.LARGE.jpg"], "step_title": "Step 16: Assembling and Using the Lens Frame and Sliding Mechanism"}, {"step": 17, "steps_text": "The creation of a customized mask frame with the use of photogrammetry has allowed me to increase the functionality of my ordinary, conventional diving mask. I can now add movable prescription lenses and various kinds of accessories such as mounts for cameras and flashlights which add greater value to the experience of diving.", "step_imgs": ["https://cdn.instructables.com/FOW/A7M8/JTWS5MBF/FOWA7M8JTWS5MBF.LARGE.jpg"], "step_title": "Step 17: The Modular Mask of the Future"}, {"step": 18, "steps_text": "This project would not have been possible if I was not introduced to the latest developments in photogrammetry that my son, Satya, shared with me. Moreover, his invaluable experience in 3D printing was indispensable for the execution of this project. Finally, his photographic skills and documentation also came in handy.", "step_imgs": [], "step_title": "Step 18: Acknowledgement"}], "channel": ""}, {"category": "", "description": "The Arduino is the ultimate tool in the Maker's arsenal. You should be able to build your own! In the early days of the project, circa 2005, the design was all through-hole parts and communication was via a RS232 serial cable. The files are still available, so you can make your own, and I have, but not many computers have the older serial ports.\nThe Arduino USB version followed shortly, and probably contributed greatly to the project's success because it allowed easy connection and communication. It did, however come at a cost: the FTDI communication chip only came in a surface mount package. Plans are still available for it as well, but surface mount soldering is beyond most beginners.\nNewer Arduino boards use 32U4 chips with built in USB (Leonardo), or separate Atmel chips for USB (UNO), both which still leave us in surface mount territory. At one point there was \"TAD\" from Dangerous Devices that used a through hole PIC to do USB, but I can't find anything left on the web of them.\nSo here we are. I firmly believe a beginner, like a Jedi Knight, should be able to build their own Arduino (light sabre). \"An elegent weapon from a more civilize age\". My solution: make a through-hole FTDI chip using a surface mount package! That allows me to do the surface mount, and offer the remaining project as DIY through-hole! I also designed it in Open Source KiCad, so you can study the design files, modify them, and spin your own version.\nIf you think this is a stupid idea, or love surface mount soldering, check out my Leonardo Clone, otherwise, read on . . .", "title": "DIY Arduino-Compatible Clone", "url": "https://www.instructables.com/id/DIY-Arduino-2/", "section": "technology", "steps": [{"step": 1, "steps_text": "The full bill of materials is located at https://github.com/aspro648/Arduino/tree/master/D...\nThe unique parts of this are the circuit boards, one for the Arduino, and one for the FTDI chip. You can have OSH Park make them for you, or use the design files with your favorite board house.\nA kit for this project is available on Tindie.com. Purchasing the kit will save you the time and expense of ordering from several different vendors and avoid the minimum PCB order premium. It will also provide you a tested surface-mounted FDTI through-hole chip as well a pre-flashed Atmega.\nTools and Supplies:\nFor my workshops, I use SparkFun's Beginner's ToolKit which has most of what you need:\nSoldering iron.\nSolder\nWire nippers\nDesoldering braid (hopefully not needed, but you never know).", "step_imgs": ["https://cdn.instructables.com/F66/TH1S/JTMSUPXI/F66TH1SJTMSUPXI.LARGE.jpg"], "step_title": "Step 1: Parts and Supplies"}, {"step": 2, "steps_text": "I'm not going to try and teach you soldering. Here are a couple of my favorite videos that show it much better than I can:\nCarrie Ann from Geek Girl Diaries.\nColin from Adafruit\nIn general:\nFind the location on the PCB using the silk screen markings.\nBend the component leads to fit the foot print.\nSolder the leads.\nTrim the leads", "step_imgs": ["https://cdn.instructables.com/FYQ/R1D5/JTMSUPXQ/FYQR1D5JTMSUPXQ.LARGE.jpg", "https://cdn.instructables.com/FGU/ZJPF/JTMSUPXS/FGUZJPFJTMSUPXS.LARGE.jpg", "https://cdn.instructables.com/FAP/V9JO/JTOMY6WW/FAPV9JOJTOMY6WW.LARGE.jpg"], "step_title": "Step 2: Ladies and Gentlemen, Start Your Irons"}, {"step": 3, "steps_text": "Let's start with resistors since they are the most plentiful, lowest seating, and easiest to solder. They are more heat resistant and will give you a chance to brush up on your technique. They also have no polarity, so you can put them in either way.\nStart with the three 10K ohm (brown - black - orange -gold), which are in a couple of places on the board (see picture). These are \"pull-up\" resistors that keep the signal at 5V unless they are actively pulled low.\nPair of 22 ohm (red - red - black - gold) are in the upper left corner. These are part of the USB communication circuit.\nPair of 470 ohm (Yellow, Violet, Brown, Gold) are the next ones down. These are current limiting resistors for the RX/TX LEDs.\nSingle 4.7K ohm (Yellow, Violet, Red, Gold). An odd-ball for the FTDI VCC signal.\nAnd finally, a pair of 1K ohm (Brown, Black, Red, Gold). These are current limiting resistors for the power and D13 LEDs (330 ohm would work, but I don't like them too bright).", "step_imgs": ["https://cdn.instructables.com/FHZ/BABW/JTT5HRJR/FHZBABWJTT5HRJR.LARGE.jpg", "https://cdn.instructables.com/FP6/YWPA/JTMSUPO2/FP6YWPAJTMSUPO2.LARGE.jpg", "https://cdn.instructables.com/FM2/WQMH/JTMSUPO9/FM2WQMHJTMSUPO9.LARGE.jpg", "https://cdn.instructables.com/FWE/JC7D/JTMSUPOF/FWEJC7DJTMSUPOF.LARGE.jpg", "https://cdn.instructables.com/FKJ/CPBM/JTMSUPOG/FKJCPBMJTMSUPOG.LARGE.jpg"], "step_title": "Step 3: Resistors"}, {"step": 4, "steps_text": "Next up we have the diode which protects the circuit from reverse current from power jack. Most, but not all components will react poorly to reverse polarity.\nIt has a polarity which is marked by a silver band on one end.\nMatch it with the silk screen marking and solder in place.", "step_imgs": ["https://cdn.instructables.com/F7F/5GHJ/JTMSUPOP/F7F5GHJJTMSUPOP.LARGE.jpg"], "step_title": "Step 4: Diode"}, {"step": 5, "steps_text": "There are two voltage regulators, and the main one is a 7805 which will regulate twelve volts from the jack down to 5 volts that the Atmega 328 needs. There are large copper features on the printed circuit board to help dissipate heat. Bend the leads so that the back touches the board with the hole aligned with the hole in part and solder in place.", "step_imgs": ["https://cdn.instructables.com/FYY/XVF7/JTWRZ5WP/FYYXVF7JTWRZ5WP.LARGE.jpg"], "step_title": "Step 5: Voltage Regulator (5V)"}, {"step": 6, "steps_text": "Sockets allow IC chips to be inserted and removed without soldering. I think of them as insurance because they are cheap and allow you to replace a blown chip or reorient the IC if put in backward. They have a divot in one end to show the direction of the chip, so match it to the silk screen. Solder two pins and then verify it is seated correctly before soldering the remaining pins.", "step_imgs": ["https://cdn.instructables.com/FVU/3XND/JTMSUPPJ/FVU3XNDJTMSUPPJ.LARGE.jpg"], "step_title": "Step 6: Sockets"}, {"step": 7, "steps_text": "Arduino's typically have a reset button to restart the chip if it hangs up or needs to restart. Yours is in the upper left corner. Press it in place and solder.", "step_imgs": ["https://cdn.instructables.com/F0K/IBYK/JTMSUPQ3/F0KIBYKJTMSUPQ3.LARGE.jpg"], "step_title": "Step 7: Button"}, {"step": 8, "steps_text": "There are a number of LEDs to indicate status. LEDs have a polarity. The long leg is the anode, or positive, and goes in the round pad with the \"+\" next to it. The short leg is the cathode, or negative, and goes in the square pad.\nThe color is arbitrary, but I typically use:\nYellow for RX/TX which blink when the chip is communicating or being programmed.\nGreen for the the D13 LED which can be used to by the program to indicate events.\nRed to show 5 volt power is available either via USB or the power jack.", "step_imgs": ["https://cdn.instructables.com/FZI/TF13/JTMSUPQI/FZITF13JTMSUPQI.LARGE.jpg", "https://cdn.instructables.com/F2C/3CRD/JTT5MOFA/F2C3CRDJTT5MOFA.LARGE.jpg", "https://cdn.instructables.com/FEX/9YIZ/JTT5MON0/FEX9YIZJTT5MON0.LARGE.jpg"], "step_title": "Step 8: LEDs"}, {"step": 9, "steps_text": "Ceramic capacitors have no polarity.\nPower smoothing capacitors are typically used to remove transients from the power supply to chips. The values are typically specified in the component's data sheet.\nEach IC chip in our design has a 0.1uF capacitor for power smoothing.\nThere are two 1uF capacitors for smoothing power around the 3.3 volt regulator.\nAdditionally, there is a 1uF capacitor that helps with the timing of the software reset function.", "step_imgs": ["https://cdn.instructables.com/FL9/FVIS/JTMSUPQX/FL9FVISJTMSUPQX.LARGE.jpg", "https://cdn.instructables.com/FGM/XX4A/JTMSUPR5/FGMXX4AJTMSUPR5.LARGE.jpg"], "step_title": "Step 9: Ceramic Capacitors"}, {"step": 10, "steps_text": "Electrolytic Capacitors do have a polarity which must be observed. They typically come in larger values than ceramic capacitors, but in this case we have 0.33 uF capacitor for power smoothing around the 7805 regulator.\nThe long leg of the device is positive and goes in the square pad marked \"+\". These tend to go \"pop\" if put in backward, so get it right or you will need a replacement.", "step_imgs": ["https://cdn.instructables.com/FR8/I4OR/JTMSUPS8/FR8I4ORJTMSUPS8.LARGE.jpg"], "step_title": "Step 10: Electrolytic Capacitors"}, {"step": 11, "steps_text": "While the Atmega chip runs on 5 volts, the FTDI USB chip needs 3.3 volts to operate correctly. To provide this, we use a MCP1700 and since it requires very little current, it is in a small TO-92-3 package like transistors instead of the big TO-220 package like the 7805.\nThe device has a flat face. Match it to the silk screen and adjust the component height about a quarter inch above the board. Solder in place.", "step_imgs": ["https://cdn.instructables.com/F7E/5Z3R/JTMSUPSO/F7E5Z3RJTMSUPSO.LARGE.jpg"], "step_title": "Step 11: 3.3 Voltage Regulator"}, {"step": 12, "steps_text": "The beauty of Arduino is the standardized footprint and pinout. The headers allow plugging in \"shields\" that allow quickly changing hardward configurations as needed.\nI typically solder one pin of each header in and then verify the alignment before soldering the remaining pins.", "step_imgs": ["https://cdn.instructables.com/FG8/ZCED/JTT5MP0H/FG8ZCEDJTT5MP0H.LARGE.jpg"], "step_title": "Step 12: Headers"}, {"step": 13, "steps_text": "Atmega chips have an internal resonator which can run at different frequencies up to 8 Mhz. An external timing source allows the chip to run up to 20 Mhz, but, the standard Arduino use 16 Mhz which was the maximum speed of the Atmega8 chips used in the original design.\nMost Arduino's use crystals, which are more accurate, but they require additional capacitors. I decided to use a resonator, which is accurate enough for most work. It does not have a polarity, but I usually face the marking outward so curious makers can tell you are running a standard setup.", "step_imgs": ["https://cdn.instructables.com/FSC/QIC5/JTMSUPTJ/FSCQIC5JTMSUPTJ.LARGE.jpg"], "step_title": "Step 13: Resonator"}, {"step": 14, "steps_text": "Most Arduino don't have fuses, but any Maker who is learning will quite often (at least in my case) hook things up incorrectly. A simple re-setable fuse will help keep from releasing the \"magic smoke\" necessitating chip replacement. This fuse will open if too much current is pulled, and will reset itself when it cools off. It has no polarity, and kinks in the legs hold it above the board.", "step_imgs": ["https://cdn.instructables.com/FH9/HPPY/JTMSUPVA/FH9HPPYJTMSUPVA.LARGE.jpg"], "step_title": "Step 14: Fuse"}, {"step": 15, "steps_text": "Two more headers, these one with male pins. Near the USB connector are three pins which allow switching between USB power and the jack using a jumper. An UNO has circuity to do this automatically, but I haven't been able to replicate that in through-hole form.\nThe second header is a six-pin \"in system programming\" header. This allows connecting an external programmer to reprogram the Atmega directly if needed. If you buy my kit, the chip already has firmware loaded, or the Atmega can be removed from the socket and placed directly in a programming socket, so this header is rarely used and therefore optional.", "step_imgs": ["https://cdn.instructables.com/FXU/7OV6/JTMSUPVB/FXU7OV6JTMSUPVB.LARGE.jpg"], "step_title": "Step 15: Headers"}, {"step": 16, "steps_text": "Instead of USB, a standard 5.5 x 2.1 mm jack can be used to bring in external power. This supplies the pin marked \"Vin\" and powers the 7805 voltage regulator which makes 5 volts. The center pin is positive and the input can be up to 35V, although 12V is more typical.", "step_imgs": ["https://cdn.instructables.com/FNM/C0NQ/JTT5MPD1/FNMC0NQJTT5MPD1.LARGE.jpg"], "step_title": "Step 16: Power Jack"}, {"step": 17, "steps_text": "Newer Arduinos like the Leonardo use a USB micro connection, but the original USB B connection is robust and cheap and you probably have lots of cables laying around. The two large tabs are not electrically connected, but are soldered for mechanical strength.", "step_imgs": ["https://cdn.instructables.com/F9F/ML1R/JTT5MQL0/F9FML1RJTT5MQL0.LARGE.jpg"], "step_title": "Step 17: USB"}, {"step": 18, "steps_text": "Time to install the chips. Verify the orientation. If the socket is in backwards, just ensure the chip is matching the silk screen markings. In the orientation we have been working with, the bottom two chips are upside down.\nInsert the chip so the legs are aligned with the holds. ICs come from the manufacture with the legs slightly splayed, so will need to be bent to vertical. This is usually already done for you in my kits. Once you are are sure of the orientation, gently press both sides of the chip. Check to make sure no legs got folded over by accident.", "step_imgs": ["https://cdn.instructables.com/FMQ/74N5/JTMSUPXA/FMQ74N5JTMSUPXA.LARGE.jpg"], "step_title": "Step 18: Chips"}, {"step": 19, "steps_text": "The bootloader is a small bit of code on the chip that allows loading code easily via USB. It runs for the first few seconds on power up looking for updates, and then launches the existing code.\nThe Arduino IDE makes flashing firmware easy, but it does require an external programmer. I use my own AVR Programmer, and will of course, sell you a kit for that. If you do have a programmer, you don't really need an Arduino since you can program the chip directly. Kind of a chick-and-egg thing.\nAnother option is to buy the Atmega with a bootloader already on it: https://www.adafruit.com/product/123\nI will point to you the official Arduino instructions since it could easily turn into it's own Instructable if we are not careful: https://www.arduino.cc/en/Hacking/Bootloader", "step_imgs": [], "step_title": "Step 19: Flashing the Bootloader"}, {"step": 20, "steps_text": "The power jumper is a manual way of selecting the source of power between 5 volts from USB or the power jack. Standard Arduinos have circuitry to switch automatically, but I wasn't able to implement it easily with through hole parts.\nIf the jumper is not installed, there is no power. If you select the jack, and have nothing plugged in, there is no power. That is why there is a red LED to show you if you have power.\nInitially, you want to see if the Arduino communicates via USB, so place the jumper to that setting. Plug your Arduino into your computer at watch carefully. If you get an \"unrecognized USB device\", unplug and start trouble shooting.\nOtherwise, use your Arduino IDE to upload the basic blink sketch. Use \"Arduino UNO\" as the board. Follow instructions here: https://www.arduino.cc/en/tutorial/blink", "step_imgs": ["https://cdn.instructables.com/FHZ/E60G/JTT5MQP5/FHZE60GJTT5MQP5.LARGE.jpg"], "step_title": "Step 20: Install Power Jumper and Connect"}, {"step": 21, "steps_text": "On initial power up, you are always looking for indications of success or failure, and are ready to unplug the board quickly if things are not going as expected. Don't loose heart if success isn't immediate. In my workshops, I try to encourage:\nPatience, this is not always easy, but usually worth it.\nPersistence, you won't solve the problem if you give up .\nPositive Attitude, you can figure this out, even if you need help to do so.\nWhen ever I am struggling with a problem, I always tell myself the harder it is to solve, the bigger the reward or learning will be for solving it.\nWith that in mind, start with the simple stuff:\nInspect the solder joints on the back of the board, retouching any joint that looks suspect.\nCheck that the IC chips are in the correct orientation and that none of the leads got folding in when inserted.\nIs the red LED on when plugged in? If not, check your power jumper and USB solder joints.\nCheck that other components that have polarity are correctly oriented.\nLook for other clues like error messages or components getting hot.\nIf you are still having trouble, ask for help. I write Instructables because I want to teach and help those who want to learn. Provide a good description of what the symptoms are and what steps you have done to find errors. A high resolution photograph of the front and back of the board may help as well. Never give up. Every struggle is a lesson.", "step_imgs": ["https://cdn.instructables.com/FAP/V9JO/JTOMY6WW/FAPV9JOJTOMY6WW.LARGE.jpg", "https://cdn.instructables.com/FHQ/YBGN/JTT5MT5N/FHQYBGNJTT5MT5N.LARGE.jpg"], "step_title": "Step 21: Troubleshooting"}], "channel": ""}, {"category": "", "description": "This is an instructable on how to build a 6x6x6 RGB LED (Common Anodes) Cube controlled by a Bluetooth App using an Arduino Nano. The entire build is easily adaptable to a say 4x4x4 or 8x8x8 Cube. This project is inspired by GreatScott. I decided to go for a more sophisticated build using bigger leds (8mm), with less distance + adding Bluetooth communication which makes adding new functions so much easier and also adds the capability of building an app to control the cube. This also allows me to e.g. code a Snake Game (3rd showcase video at the end). On top of that I added an Audio Visualizer mode which allows the cube to visualize an AUX Input e.g. Music using an MSGEQ7( showcase video at the end). Additionally I wrote an AnimationCreator application in Java with an easy to use UI to create and tweak Animations, so that anyone can build custom animations very quick. So the Sketch + Bluetooth App provides a framework for any LED Cube configuration and with the Animation Creator you do not need to worry about implementing custom animations.\nLinks to the Arduino Sketch and Bluetooth App:\nRGBCube_Arduino Sketch (Github)+Animation Creator.jar\nCubo Bluetooth App (Github)\nParts list for the Cube:\n216x RGB LED (Common Anode) (8mm)( AliExpress / Ebay)-> 6x6x6=216\nRibbon Cable (1m 40Pin should be sufficient) ( AliExpress / Ebay / Amazon)\nFemale and Male Headers (at least 4x40pin each) ( AliExpress / Ebay / Amazon)\nTinned Copper/Silver Wire 0.8mm (~25Meter) ( AliExpress / Ebay / Amazon)\nShrinking Tube (AliExpress / Ebay / Amazon)\nParts list for the Control Boards:\n7 x TLC5940 LED Driver ( Ebay / AliExpress)\n6 x IRF 9540 P-Channel MOSFETs ( Amazon / Ebay / AliExpress)\n8 x 10 uF Capacitors ( Amazon / Ebay / AliExpress)\n3 x 1000 uF Capacitors ( Amazon / Ebay / AliExpress)\n14x 2.2kOhm Resistors ( Amazon / Ebay / AliExpress)\n1 x 1kOhm Resistor ( Amazon / Ebay / AliExpress)\n7 x 28pin IC Sockets ( Amazon / Ebay / AliExpress)\n1 x Arduino Nano ( Amazon / Ebay / AliExpress)\n1 x 1N4001 Diode (Any common Diode) ( Amazon / Ebay / AliExpress)\n8 x 0.1uF Capacitors ( Ebay)\n1 x DC Jack PCB Mount ( Amazon / Ebay / AliExpress)\n1 x HC-05 Bluetooth Module ( Amazon / Ebay / AliExpress)", "title": "RGB LED Cube With Bluetooth App + AnimationCreator", "url": "https://www.instructables.com/id/RGB-LED-Cube-With-Bluetooth-App-AnimationCreator/", "section": "technology", "steps": [{"step": 1, "steps_text": "If you are not interested in theory about multiplexing than jump to Step 2 for the start of the actual build\nSince the hardware and software are equally big parts of this project, lets have a look at the theory first.\nThe brain of the cube is an Arduino Nano. It provides enough I/O to interract with the used LED Drivers as well as establish a Bluetooth connection to an HC-05 module and other control hardware. If you have looked at other LED Cube builds, you will know that most people use simple Shift registers to store brightness values of the colors of the individual LEDs. This build does not use Shift registers, but instead so called \"TLC5940\" LED Drivers. As we will see later this saves us a lot of time as well as tons of additional hardware (e.g. resistors).\nThe basic functionality of controlling the cube uses multiplexing. In this case we are multiplexing the 6 layers of the cube, meaning all Anodes(+) of all LEDs in a layer are connected, whereas the individual Cathodes of all LEDs in the same Column are connected towards the bottom. This means that if you want to light up the LED at position x=1,y=2,z=3,color: green you need to provide 5V at the Anode of Layer 3 and connect GND to the Cathode of the Column corresponding to Green Pin of x=1,y=2. So in reality at one point in time, only one layer of the Cube is actually turned on, but as you will see later in the Code we are turning off and on the individual Layers so fast, that our eye thinks the entire cube is on.\nTo control things such as brightness, animations and so on we use an HC-05 Bluetooth module connected to the Arduino Nano. It's very simple to use the module with an Arduino since you only need 4 Pin connection and can simply interface the module via the default Serial-Commuincation of the Arduino. Towards the end of this instructable you will se how easy it is to write your own Bluetooth App to control the Cube.\nNOTE:\nIn my schematic of the Arduino Circuit board you can also see a small schematic for interfacing a MSGEQ7 chipto process Audio Input, this is absolutely not necessary for the actual cube and is just an additional functionality I added, hence you can simply ignore the Schematic marked with \"MSGEQ7\"", "step_imgs": ["https://cdn.instructables.com/FI9/96FI/JT91V2B2/FI996FIJT91V2B2.LARGE.jpg"], "step_title": "Step 1: Theory"}, {"step": 2, "steps_text": "So lets have a look at how to build the Cube itself, before talking about the control circuit around the Arduino Nano.\nParts List for the Cube Construction :\n216x RGB LED (Common Anode) ( AliExpress / Ebay )-> 6x6x6=216\nRibbon Cable (1m 40Pin should be sufficient) ( AliExpress / Ebay / Amazon )\nFemale and Male Headers (at least 4x40pin) ( AliExpress / Ebay / Amazon )\nTinned Copper/Silver Wire 0.8mm (~25Meter) ( AliExpress / Ebay / Amazon )\nShrinking Tube (AliExpress / Ebay / Amazon )\nThe first thing to do, and I now it is tedious but necessary, we have to test the LEDs. To do that, we simple connect a power supply e.g 9V Battery block with clip to a breaboard. As you can see in picture 3 the longest Pin of the LEDs is the Anode (+) so you connect this pin to the +9V of the battery. Now before connecting GND to the individual colors Cathodes( Red,Green,Blue) add a 220Ohm resistor to each cathode to limit the current. Now have fun testing all colors of all 216 LEDs.\nIn the next step we will prepare the tested LEDs so that we can easily assemble them in columns later.", "step_imgs": ["https://cdn.instructables.com/F0N/EWE6/JTOMX1SR/F0NEWE6JTOMX1SR.LARGE.jpg", "https://cdn.instructables.com/F2U/IWY1/JT91V2JD/F2UIWY1JT91V2JD.LARGE.jpg", "https://cdn.instructables.com/FX8/24NP/JTCSFBD5/FX824NPJTCSFBD5.LARGE.jpg"], "step_title": "Step 2: Hardware: LED Cube Build"}, {"step": 3, "steps_text": "Before we can solder the LEDs into their respective rows we need to bend and cut the leads.\nAs you can see in the first picture i simple drilled a 8mm hole (for 8mm LEDs) into a piece of wood and drilled 3 very small drills to the left of the LED hole and another to the right of the hole. These drills are markers for bending the leads correctly and should have a distance of about 1cm from the middle of the hole for the LED.\nThis technique is inspired by Steve Manley , you can find a video of him doing this in a slight variation on YouTube.\nBefore you cut and bend the leads around the drills as seen in picture 2 and 3, make sure that the orientation of the leads corresponds to picture 1 (Blue on the top to the left ,then green, then anode + to the right, and red left again). The circle you bent into the leads should have a big enough diameter to fit the tinned copper wire (0.8mm). This step makes it magnificently easier to solder the LEDs in place nicely.\nNow that all the LEDs are prepared, we want to assemble them in rows of 6 where the Anodes(+) are connected:\nBuild a small jig as seen in picture 6, drill 6 holes (diameter 0.8mm) with a distance of 2.5cm to the next hole. This allows us fit 6 LEDs at a time into the jig\nTo connect the anodes we need a straight tinned copper wire piece of ~ 16cm length (with some extra margin). To get the wire nice and straight you can mount one end of the wire into e.g an electric drill , secure about 2m of wires at a time on a table, then holding the drill so that the wire is stretched and tight and power on the drill for a few seconds with straightens out the wire very quick. You can then cut the wire right at where you secured the piece. You can also use two pliers and tighten smaller pieces of wire at a time, but that is much more tedious\nOnce you have 16cm long wires you direct them through the Anode(+) holes of the LEDs in the jig and solder the Anode pins to the wire (Picture 7)\nFor the entire cube we will need 6x6 =36 of these LED rows", "step_imgs": ["https://cdn.instructables.com/FVH/B4CN/JT91V2EZ/FVHB4CNJT91V2EZ.LARGE.jpg", "https://cdn.instructables.com/FZN/9UB0/JT91V2F1/FZN9UB0JT91V2F1.LARGE.jpg", "https://cdn.instructables.com/FDM/3683/JT91V2HK/FDM3683JT91V2HK.LARGE.jpg", "https://cdn.instructables.com/FS4/5SME/JT91V2JH/FS45SMEJT91V2JH.LARGE.jpg", "https://cdn.instructables.com/FBV/OLZ3/JT91V2JI/FBVOLZ3JT91V2JI.LARGE.jpg", "https://cdn.instructables.com/FPV/TWMY/JT91V2JE/FPVTWMYJT91V2JE.LARGE.jpg"], "step_title": "Step 3: LED Rows"}, {"step": 4, "steps_text": "As I have mentioned before, we will multiplex the layers of the cube, but for the assembly it is easier to build 6 Walls of 6x6 LEDs and then assembling them next to each other and simply run a single tinned copper wire connecting the anodes of the rows in a layer together.\nBeware that this step takes a lot of time and patience to do it right, in total you will have to solder around 1000 solder joints for the build so take your time!\nTo build an LED Wall:\nFor the jig: We need a piece of wood with 6 carved lines to fit 6 rows one above the other to build a wall. You can see the jig itself in picture 2 (distances between rows: 2.5cm)\nYou fit the 6 rows of LEDs into the carvings, with the Anode wire face down into the carved line, so that the 3 Cathodes (R,G,B) face up\nTo connect the Cathodes positioned above each other (see picture 2) we need some more wire (so again we 6 Columns x 3 Cathodes x 6 Walls = 108 tinned wire pieces as described in the last step (2.) (same length aswell))\nSlide the wire pieces from the bottom of a column through the holes of the Cathodes to the top row and solder the wire in place at each LED\nYou do this 6 times to get 6 Walls of LEDs.\nNow we can actually assemble the Walls into the actual cube itself. But to hold the cube, we need to build some sort of ground plane. For this I simply used some thin plywood and drilled little 0.8mm holes into it, to fit the wires hanging from the lowest LED Rows (for all 6 LED Walls). The measurings for the holes of a single LED are documented in Step 3 and the distances between each LED is 2.5cm.\nWith the holes in place we now take the first wall and maneuver it into the holes on the very left of the plywood. The LED row on the bottom should sit right on the wood, so that in the end all the Walls are aligned the same.\nGo on doing the same thing with the rest of the LED Walls, but remember that the Anodes of the Walls always face the same direction. ( in picture 3 all the Anodes of the Walls face the left )\nOnce the entire Cube is in place, we need to solder the Anodes of each layer together. To do this we take another ~16cm piece of straight wire and lay it on top of the first layer, so that the wire touches all the Anode wires of the 6 walls in one layer. Watch out that the new wire does not touch any of the Cathodes. Solder the wire in place and repeat the same thing for the 5 remaining layers.", "step_imgs": ["https://cdn.instructables.com/F9U/QAWC/JT91V2E5/F9UQAWCJT91V2E5.LARGE.jpg", "https://cdn.instructables.com/FZ5/QE8B/JTCSI8OH/FZ5QE8BJTCSI8OH.LARGE.jpg", "https://cdn.instructables.com/FEW/NWE3/JT91V2JK/FEWNWE3JT91V2JK.LARGE.jpg"], "step_title": "Step 4: Layer Assembly"}, {"step": 5, "steps_text": "Now that the physical structure of the cube is in place it is time add wires to the Cathodes and Anodes to later connect it to the controller circuit board.\nFirst things first, we cut of extend wire on the bottom of the wooden plane, but leave around 1.5cm to solder on the wires. To make the software code easier to map the individual Colors of the LEDs to the LED Driver pins, we use the wiring schematic described in picture 1. Our TLC5940 LED Drivers have 16 Output each, so that means we need (6x6)Leds x 3 Colors = 108 / 16 = 6,75 -> So we need 7 TLC Drivers (the last one is not fully used).\nThat means we need 7 x 16 wires which are connected on one end with the LED Cathodesand with a male pin header on the other end. So from your Ribbon Cablecut 7x 16 pins cables with a length of about 20cm. To solder on the male pin headers on the other end of the cables watch this video from ZTAR-Planet .\nStart at one corner of the cube with the cable on the very left of the Ribbon cable soldered first.In my case I started with the Blue Cathode of the LED in the bottom right corner\nThe second cable gets soldered to the Green Cathode of the same LED,the next to the Red Cathode, the following to the Blue of the LED to the left of the first LED, then the Green of this Led, then Blue, on to the next Blue Cathode and so on\nSo you follow this schematic so that the sequence always is : Blue Cathode, Red Cath. , Green Cath., Blue Cath., ... as seen in picture 1. You start with the first 16pin cable, once you solder the last pin of the cable, you take the next cable on solder the left most pin to the next Cathode in the sequence. So the last pin of a cable is follow by the first pin of the next cable.\nFor the Anodes it is recommended to use slightly thicker cable since there is more current flowing through it then the cathodes.To acces the Anodes of the 6 Layers on the bottom of the Cube, we need yet some more tinned copper wire.This time we drill holes on one side of the Cube (see picture 1, white circles) and run the copper wire through these holes and solder them onto the corresponding Layer Anode. So in picture 1 the Anode labelled \"0\" is a tinned copper wire piece soldered to the Anode wire of Layer 0, 1 is soldered to the Anode of Layer 1, and so on. For the cable you once again solder a 6 pin male header on the other side of the cable, and the other to the extend wire of the Layer Anodes.", "step_imgs": ["https://cdn.instructables.com/FYX/7YK9/JT91V2JN/FYX7YK9JT91V2JN.LARGE.jpg", "https://cdn.instructables.com/FVR/B2H7/JT91V29G/FVRB2H7JT91V29G.LARGE.jpg"], "step_title": "Step 5: Cube Wiring"}, {"step": 6, "steps_text": "Parts for the LED Driver Board:\n7 x TLC5940\n6/7 x 10 uF Capacitors\n2 x 1000 uF Capacitors\n7x 2.2kOhm Resistors\n7 x 28pin IC Sockets\n7 x 0.1uF Capacitors\nRibbon Cable\nMoving on to the controlling circuits, lets first have a look at the LED Driver board. As mentioned before we need 7 TLC5940 connected to the Arduino Nano. All of the TLC5940 Chips are daisy chained which means that all the control Pins of the Drivers are interconnected( e.g BLANK pin of the first TLC is connected to BLANK of the second,third,fourth,... TLC) and are all connected to the Arduinowith the same wires, except the Serial In which is first connected from an Arduino Digital Pin to the first TLC, then the Serial Out pin of this first TLC is connected to the SIN pin of the second TLC and so on (see picture 4)...\nSo the schematic of the TLC Board is quite simple as you can see in the attached schematic.\n(IF YOU WANT TO ETCH THE BOARD JUMP TO STEP 8)\nI also attached a screenshot of the schematic in frizzwhich includes pin labelsand also an GIMP .xcf files with layers for every Control Pin connection separated.\nStart by soldering all the IC sockets in place,then adding the 100nF Capacitors to each TLC, followed by the 2.2kOhm resistorsto IREFand GND and the 7 pin Header in the top right corner.. After that you can simply follow the .xcf file by starting with the \"SIN layer\" in the Gimp file which showcases how to connect the Serial IN/OUT pins of the Drivers using Ribbon Cables, then enabling the CLK Layer in GIMP and so on. Make sure that you have good connections of the + and - Pins to the pin Header on the top right The rest of the schematic should be self explanatory but make sure you add enough 1000uF and 10uF Capacitors to the board it is not so relevant where exactly you position them.\nOnce this board is finished you can move on to the Arduino Board in the next step.", "step_imgs": ["https://cdn.instructables.com/FJP/28WI/JT91V2CJ/FJP28WIJT91V2CJ.LARGE.jpg", "https://cdn.instructables.com/F8R/7QYL/JTIYHFFY/F8R7QYLJTIYHFFY.LARGE.jpg", "https://cdn.instructables.com/FKA/5UWF/JTMSSEU6/FKA5UWFJTMSSEU6.LARGE.jpg", "https://cdn.instructables.com/FIG/MCYL/JT91V2BU/FIGMCYLJT91V2BU.LARGE.jpg"], "step_title": "Step 6: LED Driver Board"}, {"step": 7, "steps_text": "Parts for the Control Board:\n6 x IRF 9540 P-Channel MOSFETs\n1 x 10 uF Capacitors\n1 x 1000 uF Capacitors\n7 x 2.2kOhm Resistors\n1 x 1kOhm Resistor\n2 x 14 Female pin Header\n1 x Arduino Nano\n1 x 1N4001 Diode\n1 x 0.1uF Capacitors\n1 x DC Jack PCB Mount\n1 x HC-05 Bluetooth Module\n1 x 3.5mm Audio Jack\nThe Arduino Control Board is mainly handling the multiplexing aswell as providing the counterpart of the pin header of the LED Driver board.\nSoldering on perfboard:\nPlace two female Pin headers to act as socket for the Arduino in the middle of the board.\nPut the 6 MOSFETs in a row next to each other on the right side of the Arduino(the side with the Analog Pins) and add a 2.2kOhm resistor between the first and the last pin each.\nNow place the 6 pin header in front of the MOSFETs (middle of the row) and connect the 6 DRAIN pins of the FETs(middle pin) to the header and the GATE pins (left pin) of the FETs to the respective Arduino Analog pins.\nNext, solder the 7pin header for the LEDDriver connection on the other side of the Arduino,leave some space for cables and solder all the connections from the Arduino to the pin header.\nAdd some capacitors (1-2 1000uF, 1 10uF, 100nF next to the Arduino) for possible current drains.\nSolder a 4 pin header next to the back side of the Arduino for the HC-05 module and make the 4 connections to VCC,RX,TX,GND and dont forget to make a voltage divder from the RX Pin of the HC-05 and the TX Pin of the Arduino (see here)\nPlace the DC Jack on any edge of the board with a switch next to and connect the right pin of the switch to the + Pin of the DC Jack\nFinally make all the necessary Power connections from the GND Pin of the DC Jack and the right pin of the switch (VCC) to the Arduino,MOSFETs,Capacitors and HC-05 as seen in the schematic. Remember to add the Diode only granting the Power from the VCC pin of the switch to flow into the Arduinos 5V pin, not the other way.(this protects the Arduino when programming it via USB connection)\nFor the power connection I used a DC Power Jackwith a simple switch,you could also use a USB Connector if you want.I outsourced the power connector to another small circuit board to nicely fit in into my wooden case but you can simply put it directly onto the Arduino Board. As mentioned in the first step there is also a MSGEQ7 Connection Circuit in the schematic but simply ignore that if you dont use an MSGEQ7. (For more info about the MSGEQ7 functionality click here )\nDont forget to make another 7Pin Ribbon Cable with male pin Headers on each end for connecting the Arduino board with the Driver board.", "step_imgs": ["https://cdn.instructables.com/FMW/BNEF/JTMSSCB8/FMWBNEFJTMSSCB8.LARGE.jpg"], "step_title": "Step 7: Arduino + Bluetooth Control Board"}, {"step": 8, "steps_text": "So if you dont like soldering lots of cables of course you can also etch the necessary PCB's if you prefer that.\nIn my Cube the Arduino board and the Power/Audio connector board are both etched boards using the attached schematic/EAGLE files. The first time I made a mistake in the schematic so I had to redo the LED Driver board like I did in the last step. There are no huge advantages to etch the board instead of using perboard, so feel free to either etch the board or solder it on perfboard.\nIn the attached .zip you can find both a BOARD file as well as a SCHEMATIC file.\nNotice that the top layer traces (red) are supposed to be wire bridges (since I cant etch two sided boards at home). The unrouted traces showcase the connections to be made via cables for the female Pin Headers.\nThe schematic includes the MSGEQ7 feature, which you can simply omit by deleting the section of the schematic marked \"(MSGEQ7)\" in the screenshot of the .pdf schematic.", "step_imgs": ["https://cdn.instructables.com/FZV/WLEH/JTMSS8W5/FZVWLEHJTMSS8W5.LARGE.jpg", "https://cdn.instructables.com/FJY/CUTO/JTCSFBQT/FJYCUTOJTCSFBQT.LARGE.jpg", "https://cdn.instructables.com/FJK/NP3P/JTMSS8W8/FJKNP3PJTMSS8W8.LARGE.jpg"], "step_title": "Step 8: Optional: Etching the Circuit Boards"}, {"step": 9, "steps_text": "To connect all the parts of the Cube, start by pluging in the 7pin Cable to the Arduino Board and the Driver Board (make sure the orientation is correct!). Next plug in the HC05 Module to the 4 Pin header and connect the Power Board if separated.\nTo connect the 7x16 Pin Headers of the Cube make sure to start with the first TLC (the one whose SIN pin is connected to the Arduino directly). Find the correct 16pin Cable from the Cube and connect it to the first TLC's pin header (make sure the cable for Cathode Nr.0 connects to the first TLC OUT0 Pin!). Go on and connect the other 16pin Cables to the corresponding TLC headers in the correct order.\nLast but not least, connect the 6Pin Cable for the Anodes from the Cube to the 6Pin header on the Control Board next to the MOSFETs.\nTo finish the Cube I added walls to the case with some more plywood with black paint on it and glued them in.\nNow we are finished with all the hardware required for the entire build!", "step_imgs": ["https://cdn.instructables.com/F88/B3AE/JTOMX1N1/F88B3AEJTOMX1N1.LARGE.jpg", "https://cdn.instructables.com/FM7/JFP7/JTIYHQVP/FM7JFP7JTIYHQVP.LARGE.jpg", "https://cdn.instructables.com/F8R/6TUI/JT91V2AD/F8R6TUIJT91V2AD.LARGE.jpg"], "step_title": "Step 9: Connecting the Cube"}, {"step": 10, "steps_text": "Now in theory the Arduino is constanly executing the following cycle:\nIf the LayerDuration has passed, load the Values for the next Layer to the TLCs, turn off the current Layer,turn on the next Layer, reset the LayerDuration, commit the new Values to the TLCs\nIf the FrameDuration has passed, load the new Frame of the current Animation by storing the values for all LEDs and Colors into the ValueLed[] buffer, reset FrameDuration\nIf Bluetooth Data is available, react upon them( Change Animations,Brightness,...)(more information later)\nAs you can see the main focus of the code is speed. It is important that the time to change the Layer is minimal.\nThe faster you switch on/off the Layers the more \"Frames\" you will get. for a 6x6x6 RGB LED Cube like this I figured out that a Layer Duration of 1700 microSec. is good enough to keep flickering at a minimum and should be left at this value. The FrameDuration controls more of the speed of the Animation so it can be changed for different Animations.\nIn the next step we will look at how we can actually write our own Animations.", "step_imgs": ["https://cdn.instructables.com/F7Z/NK4W/JTON0MXB/F7ZNK4WJTON0MXB.LARGE.jpg"], "step_title": "Step 10: Software: Multiplexing Cycle"}, {"step": 11, "steps_text": "To implement an animation we have to set the ValueLed[] buffer to the Values we want for the next Frame every time FrameDuration has passed. We do that by calling the Macro function \"SETLED(x,y,z,COLOR,Brightness)\"\nx,y,z are the coordinates of the LED we want to set and COLOR (RED,GREEN or BLUE) is the color we want to set and Brightness is the actual Value for this particular color we set.\nSo to for example implement an Animation that simply displays Red,Green and Blue color randomly across the entire cube you can simply do this:\nvoid randomLedsFull(){\n  for (uint8_t j = 0; j < CUBE_SIZE; j++){\n    for (uint8_t x = 0; x < CUBE_SIZE; x++){\n      for (uint8_t y = 0; y < CUBE_SIZE; y++){\n        uint8_t rand = random8(3);\n        SETLED(x,y,j,rand,maxBright);\n      }\n    }\n  }\n}\nThis method is called every time the FrameDuration has passed and is selected from the switch-case command in the loop(). If you write new animations you can add them by simply adding them into the switch-case.", "step_imgs": ["https://cdn.instructables.com/FU8/8BC6/JTT5QE5S/FU88BC6JTT5QE5S.LARGE.jpg", "https://cdn.instructables.com/FFQ/4ZJ3/JTT5QGJB/FFQ4ZJ3JTT5QGJB.LARGE.jpg"], "step_title": "Step 11: Custom Animations"}, {"step": 12, "steps_text": "I additionaly wrote an AnimationCreator using JavaFX and Java3D.\nIt makes creating and editing custom Animations very easy by providing an easy to understand UI.\nYou can create,edit,rename and reconfigure Animations for 4x4x4,6x6x6 or 8x8x8 LED Cubes.\nTo create a new Animation simply hit File>New, under \"Cube\" you can select the Cube size, to set the Color of a LED select the color you want with the Color picker on the left and then left click the LEDs you want in that color for that Frame. To add another Frame hit \"Next\" or \"+\". The rest of the UI Controls is quite self explanatory, the checkboxes next to the Cubes Layers are to check which Layers should be affected by shifting and \"Keep Frame\". Just test it out and you will figure out everything in no time.\nAdditionally to simulate the Animation you can click the \"View 3D\" Button which opens another window with a Java3D Model of the Cube. You can rotate the Camera while holding down the left mouse button (Press R to reset the Camera).To play/pause the Animation hit the P Key, to reset the Animation hit Q. The TextField below the \"View 3D\" buttondenotes the current FrameTime, ergo the speed of your animation.\nWhen you are done with the Animation give it a name and hit File>Save As... and save the Animation to the same folder as the Cubo_Control.ino Sketch.\nTo include you new Animation in the Sketch open the Cubo_Control.ino and add following code on top of the Sketch:\n#include \"<YOUR_ANIMATION>RGBit.h\" //Replace <YOUR_ANIMATION>\nScroll down to BTEvent()and add case statement to the switch-case of the animations\nswitch(curAnim){\n...\ncase 10:               \n animation= &ani_cubesmove[0][0];\n FRAME_TIME= ANI_CUBESMOVE_FRAMTIME;\n maxCount= ANI_CUBESMOVE_FRAMES;\n break;\n\ncase 11:            //YOUR NEW ANIMATION\n animation= &ani_<YOUR_ANIMATION>rgbit[0][0];\n FRAME_TIME= <YOUR_ANIMATION>RGBIT_FRAMETIME;\n maxCount= ANI_<YOUR_ANIMATION>RGBIT_FRAMES;\n break;\n}", "step_imgs": ["https://cdn.instructables.com/F6I/XV64/JT91VU77/F6IXV64JT91VU77.LARGE.jpg"], "step_title": "Step 12: Additional: AnimationCreator"}, {"step": 13, "steps_text": "To actually control the Cube, thanks to the HC-05 Module it is quite simple to build a Bluetooth app to connect your Phone to the Cube.\nLink to the App :Github\nThe App is open source so feel free to add additional Animations/features yourself.\nStart the App, it asks you to turn on Bluetooth\nClick \"Search\" and a list of available Bluetooth connections appears. Identify the HC-05 Module from the Cube and click on it.\nIf there is an error when trying to connect to the Cube, try to pair the HC-05 module in the Bluetooth settings manually\nOnce connected the App switches to the Control Screen and the Bluetooth connection has been established\nControls:\nSpeed & Brightness: Change slider values to speed up/slow down the Animation or change the brightness\nAnimations: Click on a button to change the Animation, by default the Animations are looping (Starting from the top left the button correspond to currAnim)\nText Scroll: Click the \"Text\" button which brings up a dialog to input some text which will be scrolled through the cube\nCommand: You can enter commands manually with the Command TextField (look into the BTEvent() method of Cubo_Control.ino for syntax)\nSnake: classic Snake Game (red:apple, green:snake Head, blue:sneak Tail) (Controls: 4 directional Buttons, Up and Down is triggered by turning the Phone forward (Up) or backward (Down))\nAudio Visualizer: MSGEQ7 used to visualize 6 audio bands from AUX Jack (Button for Animation 7)", "step_imgs": ["https://cdn.instructables.com/F14/H6DW/JTT5QDT8/F14H6DWJTT5QDT8.LARGE.jpg"], "step_title": "Step 13: Bluetooth App"}, {"step": 14, "steps_text": "NOTES: Since it is very hard to accurately capture the LED Cube in bad lightning conditions, I turned down the brightness of the Cube to 15 (max: 255). Note that in reality with full brightness for the human eye there is no flickering of the LEDs whatsoever.\nFor the Snake Game:\nThe Red Animation at the end instantly signals Game Over when you move the Head into any part of the tail of the snake.", "step_imgs": [], "step_title": "Step 14: Showcase"}], "channel": ""}, {"category": "", "description": "In recent days, I started looking for a vacuum cleaner for keeping my desk clean.\nAnd I found some junk in my storage space, let's diy a vacuum cleaner.", "title": "Vacuum Cleaner From a Hairdryer", "url": "https://www.instructables.com/id/Vacuum-Cleaner-From-a-Hairdryer/", "section": "technology", "steps": [{"step": 1, "steps_text": "This hair dryer is out of function. I tore it down and removed the heater and useless parts.\nReverse the set of the motor like the fourth and the fifth pictures show. And then reconnected the cables to power the motor.\nCut the parts which blocked the fan.", "step_imgs": ["https://cdn.instructables.com/F33/VOY0/JTT5R4Y7/F33VOY0JTT5R4Y7.LARGE.jpg", "https://cdn.instructables.com/F1Z/H4R7/JTT5R57Y/F1ZH4R7JTT5R57Y.LARGE.jpg", "https://cdn.instructables.com/FJV/3HXT/JTT5R5JL/FJV3HXTJTT5R5JL.LARGE.jpg", "https://cdn.instructables.com/FG6/Y811/JTT5RT9Q/FG6Y811JTT5RT9Q.LARGE.jpg", "https://cdn.instructables.com/FVV/KGYP/JTT5RT93/FVVKGYPJTT5RT93.LARGE.jpg", "https://cdn.instructables.com/F4Q/LWCN/JTT5R5Y8/F4QLWCNJTT5R5Y8.LARGE.jpg", "https://cdn.instructables.com/FVP/ZDYB/JTT5R5UE/FVPZDYBJTT5R5UE.LARGE.jpg", "https://cdn.instructables.com/FED/MC0T/JTT5R65V/FEDMC0TJTT5R65V.LARGE.jpg", "https://cdn.instructables.com/F2L/DRI1/JTT5R63Y/F2LDRI1JTT5R63Y.LARGE.jpg"], "step_title": "Step 1: Modify a Hair Dryer From Blowing Into a Sucking Device"}, {"step": 2, "steps_text": "I had a busted container. There were some holes on its lid.\nThis lid was attached a piece of wood from a pallet. And then put RTV glue to ensure the lid sealed.\nCut off the area of the lid and drilled five holes for air flow.\nThe center one of the holes was used to fix air filter. Mount the air filter with a screw and nuts.\nDrill a 32mm diameter hole.\nSqueeze the hose into that hole and seal it with RTV glue.", "step_imgs": ["https://cdn.instructables.com/FXC/OM94/JTT5R6EN/FXCOM94JTT5R6EN.LARGE.jpg", "https://cdn.instructables.com/F39/ZJWN/JTT5R6IJ/F39ZJWNJTT5R6IJ.LARGE.jpg", "https://cdn.instructables.com/FRQ/JY7W/JTT5R6L4/FRQJY7WJTT5R6L4.LARGE.jpg", "https://cdn.instructables.com/FHV/0B0U/JTT5R6L5/FHV0B0UJTT5R6L5.LARGE.jpg", "https://cdn.instructables.com/FDF/RSLI/JTT5RV6Q/FDFRSLIJTT5RV6Q.LARGE.jpg", "https://cdn.instructables.com/FIG/B0QA/JTT5R6RK/FIGB0QAJTT5R6RK.LARGE.jpg", "https://cdn.instructables.com/F22/39RN/JTT5R6VD/F2239RNJTT5R6VD.LARGE.jpg", "https://cdn.instructables.com/F1T/NNQW/JTT5R6AU/F1TNNQWJTT5R6AU.LARGE.jpg", "https://cdn.instructables.com/F4Z/R85X/JTT5R75K/F4ZR85XJTT5R75K.LARGE.jpg", "https://cdn.instructables.com/FZ0/ZGZ5/JTT5R6XY/FZ0ZGZ5JTT5R6XY.LARGE.jpg", "https://cdn.instructables.com/FG3/FQGO/JTT5R71R/FG3FQGOJTT5R71R.LARGE.jpg"], "step_title": "Step 2: Make the Air Filter Parts and the Dust Chamber"}, {"step": 3, "steps_text": "Make a supporter to hold the hairdryer.\nDraw a line along the shadow of the hairdryer. Grind along the line~\nDrill two big holes for the steel rings.\nAssemble the hairdryer and seal the gap between the hair dryer and the plate.", "step_imgs": ["https://cdn.instructables.com/FFD/9TIF/JTT5RXR0/FFD9TIFJTT5RXR0.LARGE.jpg", "https://cdn.instructables.com/FAZ/1U79/JTT5RXRP/FAZ1U79JTT5RXRP.LARGE.jpg", "https://cdn.instructables.com/F1I/6HZA/JTT5RXSE/F1I6HZAJTT5RXSE.LARGE.jpg", "https://cdn.instructables.com/F3A/TDLO/JTT5R7HQ/F3ATDLOJTT5R7HQ.LARGE.jpg", "https://cdn.instructables.com/FUO/97J6/JTT5R98C/FUO97J6JTT5R98C.LARGE.jpg", "https://cdn.instructables.com/FY6/RIUH/JTT5R81C/FY6RIUHJTT5R81C.LARGE.jpg", "https://cdn.instructables.com/F5N/61VH/JTT5R9DO/F5N61VHJTT5R9DO.LARGE.jpg", "https://cdn.instructables.com/FFD/6Y96/JTT5R77H/FFD6Y96JTT5R77H.LARGE.jpg"], "step_title": "Step 3: Fix the Hairdryer"}, {"step": 4, "steps_text": "Tear down the control switch.\nDrill a hole and put a screw for fix the control switch.\nCAUTION:\nMake sure twice that metal screw is insulated from the PCB.\nOr a short circuit would cause the fire alarm.\nAttach the power supply on the base.", "step_imgs": ["https://cdn.instructables.com/FXZ/A2CW/JTT5R8TN/FXZA2CWJTT5R8TN.LARGE.jpg", "https://cdn.instructables.com/FSQ/Y7M3/JTT5R8IB/FSQY7M3JTT5R8IB.LARGE.jpg", "https://cdn.instructables.com/FC7/UBMW/JTT5R8EV/FC7UBMWJTT5R8EV.LARGE.jpg", "https://cdn.instructables.com/FJU/T408/JTT5R9FL/FJUT408JTT5R9FL.LARGE.jpg", "https://cdn.instructables.com/FIU/YKDH/JTT5R9J0/FIUYKDHJTT5R9J0.LARGE.jpg", "https://cdn.instructables.com/F7D/6KWE/JTT5R8EW/F7D6KWEJTT5R8EW.LARGE.jpg", "https://cdn.instructables.com/FFC/3HTM/JTT5R9KJ/FFC3HTMJTT5R9KJ.LARGE.jpg"], "step_title": "Step 4: Electronics for Power Control : CAUTION"}, {"step": 5, "steps_text": "IT WORKS~~~\nThis baby can pick up dust, tiny wires, smoke, coins, and pads.\nBut thin cable and nuts could not be carried away. The hairdryer motor is 60W only.\nThe air flow is not strong enough to suck up those cables and nuts.\nThis performance satisfied me, I like it.", "step_imgs": [], "step_title": "Step 5: Let's See the Performance"}, {"step": 6, "steps_text": "If you don't have broken things such as a hairdryer, a sealable box, and a power supply, etc, it would cost more rather than buy a brand new vacuum cleaner.\nCommercial vacuum cleaners are more much effective than made by my own.\nWhat you paid for are the strong motor, the air flow, the good sealability, the nozzle good use, the safety, and so on.\nThat is worthy!\nBUT........\nThe pros. that making that vacuum cleaner by my own is.......\nThe suction to pick up dust or smoke or bolts is not the same thing.\nPicking up bolts and nuts.........maybe the magnet does that job better!\nAnd no one wants to collect anything in the dust chamber which filled with dust......\nWhen we are talking about sucking dust, my device doses that job very well.\nAdjustable suction level, less power consumption, lower noise, no bad smell, longer operating time, and don't concern about overheat.\nIt is not necessary to pick up just dust with high power consumption device!!", "step_imgs": [], "step_title": "Step 6: I Want to Say ......"}], "channel": ""}, {"category": "", "description": "A few weeks ago I received a last minute invite to participate in a PhabLabs Hackathon at Science Centre Delft in the Netherlands. For an enthusiastic hobbyist like me, who can normally spend only a limited amount of time on tinkering, I saw this as a great opportunity to schedule some dedicated time to turn one of my many ideas, within the scope of the Hackathon: Photonics, into an actual project. And with the great facilities in the Makerspace at Science Centre Delft it was just impossible to turn down this invite.\nOne of the ideas I already had for a while related to photonics was that I wanted to do something with Persistence of Vision (POV). There are already tons of examples available online of how to build a basic POV display using some basic components: microcontroller, old fan/hard disk/motor and one string of leds connected perpendicular to the axis of the rotating device. With a relatively simple setup you can already create an impressive 2 dimensional image, e.g.: https://www.youtube.com/watch?v=QAGnpKz7zvY\nAnother variation of POV displays connects a string of leds parallel to the axis of the rotating device. This will result in a 3 dimensional cylindrical POV display, e.g.: https://www.instructables.com/id/3D-POV-Clock-fro...\nInstead of connecting the string of leds parallel to the axis of the rotating device you can also arc the string of leds. This will result in a spherical (globe) POV display, e.g.: https://www.instructables.com/id/POV-Globe-24bit-... The next level is to build several layers of led strings to create a volumetric 3D display. Here are some examples of such volumetric 3D POV displays which I used as inspiration for this specific project:\nhttps://www.instructables.com/id/PropHelix-3D-POV-...\nhttps://github.com/mbjd/3DPOV\nhttps://hackaday.io/project/159306-volumetric-pov-...\nhttps://hackaday.com/2014/04/21/volumen-the-most-a...\nAs the makers of the examples above provided very useful information, it made a lot of sense to remix parts of their projects. But as a Hackathon is supposed to be challenging, I also decided to build a different type of volumetric 3D POV display. Some of them were using rotors and lots of hot glue to keep the components from flying around. Others created custom PCB\u2019s for their project. After reviewing some of the other 3D POV projects I saw room for some \u201cinnovation\u201d or introduce some challenges for myself:\nWith no prior experience of creating customised PCB\u2019s and due to the time constraint of the Hackathon I choose to follow a more basic prototype approach. But instead of creating actual rotors I was curious about how such a volumetric 3D POV display would look like when using a cylinder build out of layers of acrylic plastic.\nNo use or else minimum use of hot glue to make the device less dangerous", "title": "Transparent 3D Volumetric POV", "url": "https://www.instructables.com/id/Transparent-3D-Volumetric-POV/", "section": "technology", "steps": [{"step": 1, "steps_text": "For the Motor Controller\nArduino Pro Micro 5V/16Mhz\nSmall Breadboard\n3144 Hall Effect Switch Sensor\nMagnet with Diameter: 1cm, Height: 3mm\nToggle Switch - MTS-102\n10K Potentiometer\nDupont Jumper Wires\n16 x M5 Nuts\nLCD display module with blue backlight (HD44780 16\u00d72 Characters)\n10K Resistor - Pull Up Resistor for the Hall Effect Sensor\n220Ohm Resistor - For controlling the contrast of the LCD Screen\nThreaded Rod Diameter: 5mm\nPlywood, Thickness: 3mm\nFor the Platform Base\nPiece of Scrap Wood (250 x 180 x 18 mm)\nMean Well - 12V 4.2A - Switching Power Supply LRS-50-12\nPower Plug Cable 220V\nDC-DC Wireless Converter - 5V 2A (Transmitter)\nTurnigy D2836/8 1100KV Brushless Outrunner Motor\nTurnigy Plush 30amp Speed Controller W/BEC\nTerminal Blocks Connectors\n12 x M6 Nuts to secure the platform using the threaded rods with a diameter of 6mm.\n3 x M2 Bolts (18mm length) for securing the bolt-on adapter to the brushless motor\n4 x M3 Nuts and Bolts for securing the brushless motor to the piece of scrap wood\nThreaded Rod Diameter: 6mm (4 x length 70 mm)\nThreaded Rod Diameter: 4mm (1 x length 80 mm)\nPlywood, Thickness: 3mm\nFor the Rotating Casing\nDC-DC Wireless Converter - 5V 2A (Receiver)\n3D Printed Bolt On Adapter (PLA Filament, White)\nTeensy 3.6\nIC 74AHCT125 Quad Logic Level Converter/Shifter (3V to 5V)\n10K Resistor - Pull Up Resistor for the Hall Effect Sensor\n1000uF 16V Capacitor\nThreaded Rod Diameter 4mm\nMagnet with Diameter: 1cm, Height: 3mm\nPlywood, Thickness: 3mm\nPlywood, Thickness: 2mm\nAcrylic Sheet, Thickness: 2mm\nSteel Rod Diameter: 2mm\nNuts & Bolts\n0.5 meter ledstrip APA102C 144 leds / meter\nTools Used\nMerlin Laser Cutter M1300 - Laser Cutting Plywood and Acrylic Sheet\nUltimaker 2+ for 3D Printing the Bolt On Adapter\nSoldering Station and Solder\nTable Drill\nScrewdrivers\nPlyers\nHammer\nCaliper\nHacksaw\nWrenches\nHeat Shrink Tubing\nSoftware Used\nFusion 360\nUltimaker Cura\nArduino IDE and Teensyduino (containing Teensy Loader)", "step_imgs": ["https://cdn.instructables.com/FUP/GDEY/JTWRZF4I/FUPGDEYJTWRZF4I.LARGE.jpg"], "step_title": "Step 1: Material and Tools Used"}, {"step": 2, "steps_text": "The Motor Controller Unit sends a signal to the Turnigy Electronic Speed Controller (ESC) which will control the number of rotations provided by the brushless motor.\nAdditionally I also wanted to be able to display the actual rotations per minute of the POV cylinder. That's why I have decided to include a hall effect sensor and an 16x2 LCD Display to the Motor Controller Unit.\nIn the attached zip file (MotorControl_Board.zip) you will find three dxf files which will enable you to lasercut one base plate and two top plates for the motor controller unit. Please use plywood with a thickness of 3mm. The two top plates can be placed on top of each other which will allow you to screw in the 16x2 LCD Display.\nThe two holes in the top plate are meant for one on/off toggle switch and one potentiometer to control the speed of the brushless motor (I haven't wired the on/off toggle switch myself yet). To construct the Motor Controller Unit you need to saw the threaded rod with a diameter of 5mm into 4 pieces of the desired height. Using the 8 M5 nuts you can first fasten the base. Then I attached the small breadboard to the base plate using the two sided adhesive sticker that was provided with the breadboard. The attached schematic shows how you should wire the components so it can work with the source code (MotorControl.ino) attached to this step. I've used a 10K pull up resistor for the hall sensor. An 220 Ohm resistor worked good enough to make the text visible on the LCD screen.\nPlease make sure that you isolate the pins of the hall effect sensor using heat shrink tubes, just as shown on the pictures. The correct functioning of the hall sensor will rely on a magnet that will be placed in the rotating case at step 3.\nOnce the wiring is completed you can secure the 2 top plates with the LCD Display, Switch and Potentiometer using again 8 M5 nuts as shown on the pictures.\nPending on the model of your motor used, you might need to adjust the following line of code in the MotorControl.ino file:\nthrottle = map(averagePotValue, 0, 1020, 710, 900); <br>\nThis line of code (line 176) maps the position of the 10K potentiometer to the signal for the ESC. The ESC accepts value between 700 and 2000. And as the motor I used for this project started to turn around 823, I limited the RPM's of the motor by limiting the max value to 900.", "step_imgs": ["https://cdn.instructables.com/FT0/NYU9/JTWS1SZM/FT0NYU9JTWS1SZM.LARGE.jpg", "https://cdn.instructables.com/FJM/KSGR/JTWSYXPI/FJMKSGRJTWSYXPI.LARGE.jpg", "https://cdn.instructables.com/FV4/154D/JTWSYXNY/FV4154DJTWSYXNY.LARGE.jpg", "https://cdn.instructables.com/FUV/DPBT/JTWRZEOL/FUVDPBTJTWRZEOL.LARGE.jpg", "https://cdn.instructables.com/FOA/OENQ/JTWRZEPY/FOAOENQJTWRZEPY.LARGE.jpg", "https://cdn.instructables.com/FTF/FR6Y/JTWRZEOD/FTFFR6YJTWRZEOD.LARGE.jpg"], "step_title": "Step 2: Motor Controller Unit to Regulate the Rotation Speed"}, {"step": 3, "steps_text": "Nowadays there are basically two ways to power devices which needs to rotate: slip rings or transmitting power wirelessly via induction coils. As high quality slip rings which can support high RPM's tend to be very expensive and more prone to wear and tear I opted for the wireless option using a 5V Wireless DC-DC converter. According to the specifications it should be possible to transfer up to 2 Amps using such a converter.\nThe Wireless DC-DC converter consists of two components, a transmitter and a receiver. Please be aware that the PCB connected to the transmitting induction coil is smaller than the one receiving.\nThe platform itself is build using a piece of scrap wood (250 x 180 x 18 mm).\nOn the platform I screwed on the Mean Well 12V Power Supply. The 12V output is connected to the ESC (see the schematics at Step 1) and the PCB of the transmitting part of the Wireless DC-DC Converter.\nIn the attached Platform_Files.zip you find the dxf files to lasercut the platform out of plywood with a thickness of 3mm:\nPlatform_001.dxf and Platform_002.dxf: You need to place them on each other. This will create a recessed area for the transmitting induction coil.\nMagnet_Holder.dxf: Lasercut this design three times. One of the three times, include the circle. In the other two lasercuts: remove the circle from being cut. After cutting, glue the three pieces together to create a holder for a magnet (diameter 10mm, thickness: 3mm). I used superglue to glue the magnet in the Magnet holder. Please make sure that you glue the correct side of the Magnet to the holder as the hall sensor will only work with one side of the magnet.\nPlatform_Sensor_Cover.dxf: This piece will help you to keep the hall sensor attached to the Motor Control Unit in place as shown in the first picture.\nPlatform_Drill_Template.dxf: I used this piece as a template for drilling the holes in the piece of scrap wood. The four larger 6 mm holes are for the supporting threaded rods with a diameter of 6mm to support the platform. The 4 smaller holes are for securing the brushless motor to the piece of scrap wood. The largest hole in the middle was required for the axis that sticked out of the brushless motor. As the bolts for the motor and the threaded rods for the platform need to be secured on the bottom of the platform, it is necessary to enlarge those holes for a few mm deep to allow for the nuts to fit in.\nUnfortunately the shaft of the brushless motor stuck out of the 'wrong' side for this project. But I was able to reverse the shaft with the help of the following instruction I found on Youtube: https://www.youtube.com/watch?v=4jSix3rUI2E\nOnce the motor and supporting rods are secured, the platform can be constructed using the lasercut platform pieces. The platform itself can be secured using 8 M6 nuts. The Magnet holder can be glued to the platform at the border as shown in the first picture.\nThe attached file \"Bolt-On Adapter.stl\" can be printed using a 3D printer. This adapter is necessary to attach a threaded rod with a diameter of 4mm to the Brushless Motor using 3 x M2 bolts with a length of 18mm.", "step_imgs": ["https://cdn.instructables.com/F52/6W0X/JTWRZEXW/F526W0XJTWRZEXW.LARGE.jpg", "https://cdn.instructables.com/FF6/EIMG/JTWRZEHO/FF6EIMGJTWRZEHO.LARGE.jpg", "https://cdn.instructables.com/FRP/ZH5X/JTWRZF0E/FRPZH5XJTWRZF0E.LARGE.jpg", "https://cdn.instructables.com/F4B/MHTY/JTWRZF4A/F4BMHTYJTWRZF4A.LARGE.jpg", "https://cdn.instructables.com/FKW/WDS6/JTWRZEY5/FKWWDS6JTWRZEY5.LARGE.jpg", "https://cdn.instructables.com/FHF/IQK7/JTWRZF06/FHFIQK7JTWRZF06.LARGE.jpg", "https://cdn.instructables.com/FLB/FMX7/JTWRZF2B/FLBFMX7JTWRZF2B.LARGE.jpg"], "step_title": "Step 3: Building the Platform for Wireless Transmitting Power"}, {"step": 4, "steps_text": "The attached Base_Case_Files.zip contains the dxf files to laser cut the 6 layers to construct the case for the components controlling the APA102C led strip.\nLayers 1-3 of the Case design are meant to be glued together. But please make sure that a magnet (diameter 10mm, height: 3mm) is put into the circular cutout in Layer 2 before glueing the three layers together. Also make sure that the magnet is glued with the correct pole to the bottom, as the hall effect sensor placed on the platform constructed in Step 3 will only respond to one side of the magnet.\nThe design of the case contains compartments for the components listed in the attached wiring schematics. The IC 74AHCT125 is required to convert the 3.3V signal from the Teensy to the 5V signal required for the APA102 led strip. Layers 4 and 5 can also be glued together. Top layer 6 can be piled upon the other layers. All layers will remain in the correct position with the help of 3 steel rods with a diameter of 2mm. There are three small holes for the 2mm steel rods surrounding the larger hole for the rotating 4mm threaded rod attached to the brushless motor. Once all components are soldered according the schematic, the complete case can be put on the bolt-on adapter printed in Step 3. Please make sure that any open wires are properly insulated using heat shrink tubes. Please be aware that the correct functioning of the hall sensor of this steps depends on the magnet placed in the magnet holder described at step 3.\nThe attached proof of concept code 3D_POV_POC.ino will lighten up some leds in red. The sketch results in a square being displayed once the cylinder starts to rotate. But before the rotating starts the leds which are required to simulate a square are turned on by default. This is helpful to test the correct functioning of the leds in the next step.", "step_imgs": ["https://cdn.instructables.com/FGV/5GRG/JTWRZEK0/FGV5GRGJTWRZEK0.LARGE.jpg", "https://cdn.instructables.com/FJO/FUI6/JTWS3M9J/FJOFUI6JTWS3M9J.LARGE.jpg", "https://cdn.instructables.com/FKX/5ROJ/JTWRZEQF/FKX5ROJJTWRZEQF.LARGE.jpg", "https://cdn.instructables.com/FV6/JATR/JTWRZELL/FV6JATRJTWRZELL.LARGE.jpg", "https://cdn.instructables.com/FHC/3N9J/JTWRZEN0/FHC3N9JJTWRZEN0.LARGE.jpg", "https://cdn.instructables.com/FEQ/D9EU/JTWRZEJS/FEQD9EUJTWRZEJS.LARGE.jpg", "https://cdn.instructables.com/FB5/EGZG/JTWRZETT/FB5EGZGJTWRZETT.LARGE.jpg", "https://cdn.instructables.com/FRM/C07L/JTWRZEV8/FRMC07LJTWRZEV8.LARGE.jpg", "https://cdn.instructables.com/F9C/MYIO/JTWRZF23/F9CMYIOJTWRZF23.LARGE.jpg", "https://cdn.instructables.com/FMZ/UEIB/JTWRZESF/FMZUEIBJTWRZESF.LARGE.jpg", "https://cdn.instructables.com/F0W/0MDW/JTWRZEQ6/F0W0MDWJTWRZEQ6.LARGE.jpg"], "step_title": "Step 4: Rotating Casing"}, {"step": 5, "steps_text": "The attached Rotor_Cylinder_Files.zip contains the dxf files for cutting a 2mm thick Acrylic Sheet. The resulting 14 discs are necessary to build the transparent cylinder for this POV project. The discs need to be piled upon each other. The design of the cylindric discs allow 12 led strips to be soldered together as one long led strip. Starting from disc one a small led strip containing 6 leds need to be attached to a disc using the adhesive stickers on the led strip. Solder the wires to the led strip first before attaching the led strips to the disc using the adhesive stickers. Else you run the risk that the solder gun will melt the acrylic disc.\nOnce disc #13 is piled upon the transparent cylinder, the 2mm steel rod used to keep all layers in the correct positions can now also be cut to the right length, aligned to the the top of disc #13 of the cylinder. Disc #14 can then be used to keep the 2mm steel rods in place with the help of two M4 nuts.\nBecause the amount of time required to construct the whole device, I haven't been able to program more stable visually interesting 3D displays yet within the timeframe of the hackathon. That is also the reason why the provided code for controlling the leds is still very basic to proof the concept, showing only a red square 3 dimensionally for the time being.", "step_imgs": ["https://cdn.instructables.com/FA0/G772/JTWRZF3Z/FA0G772JTWRZF3Z.LARGE.jpg", "https://cdn.instructables.com/F63/SHX6/JTWRZELD/F63SHX6JTWRZELD.LARGE.jpg", "https://cdn.instructables.com/FLU/ALO2/JTWRZF2L/FLUALO2JTWRZF2L.LARGE.jpg", "https://cdn.instructables.com/FE8/CJIX/JTWRZF0O/FE8CJIXJTWRZF0O.LARGE.jpg"], "step_title": "Step 5: Rotating Cylinder With the Led Strips"}, {"step": 6, "steps_text": "Teensy 3.6\nI ordered a Teensy 3.5 for this project, but the supplier sent me a Teensy 3.6 by mistake. As I was eager to finish the project within the timeframe of the hackathon I decided to move forward with the Teensy 3.6. The reason why I wanted to use the Teensy 3.5 was because of the ports, they are 5V tolerant. This is not the case with the Teensy 3.6. That is also the reason why I had to introduce a bi-directional logic converter to the setup. With a Teensy 3.5 this would not have been required.\nPower Ramp Up issue: When turning on the device there is a power ramp up via the wireless dc-dc charging module to power the Teensy 3.6. Unfortunately the ramp up is too slow for the Teensy 3.6 to startup correctly. As a workaround I currently have to power up the Teensy 3.6 via the micro USB connection and then plug in the 12V Power Supply feeding the wireless dc-dc transmitter. Once the wireless dc-dc receiver is also supplying the power to the Teensy I can unplug the USB cable. People have shared their hack with a MIC803 for the slow power ramp up issue here: https://forum.pjrc.com/threads/44704-Boot-on-Power-Up-Problem-with-three-T3-6s\nLCD Screen Module\nErratic behaviour on external power. The screen works correctly when powered via USB. But when I power the LCD screen via the breadboard using the 5V supplied by the BEC or an independent Power Supply, the text starts to get scrambled after a few seconds after the text is supposed to change. I still need to investigate what is causing this issue.\nMechanical\nIn order to test my motor controller unit to measure the actual RPM\u2019s, I let the motor spin with the bolt on adapter, bolt and base case attached to the motor. During one of the initial test runs the screws connecting the motor holder to the motor unscrew themselves due to the vibrations. Luckily I noticed this issue in time so a potential disaster was avoided. I solved this issue by screwing the screws a bit tighter to the motor and also used a few drops of Loctite to secure the screws even more.\nSoftware\nWhen you export Fusion 360 sketches as dxf files for the laser cutter, supportive lines are exported as regular lines.", "step_imgs": [], "step_title": "Step 6: Lessons Learned"}, {"step": 7, "steps_text": "What would I have done differently based on the experience I gained with this project:\nUsing a led strip containing at least 7 leds instead of 6 leds per layer for some what nicer textual visualisations\nBuy a different brushless motor where the shaft is already sticking out on the correct (bottom) side of the motor. (e.g.: https://hobbyking.com/de_de/ntm-prop-drive-28-36-1000kv-400w.html) This will save you the trouble of either cutting the shaft or pushing the shaft to the correct side like I had to do now.\nSpending more time on balancing the device to minimize the vibrations, either mechanical or model it in Fusion 360.\nI have also been thinking about some potential improvements, which I might look into if time allows:\nActual making use of the SD card functionality on the Teensy to create longer animations\nIncrease density of imaging by using smaller leds (APA102(C) 2020). When I started this project a few weeks ago, led strips containing these small leds (2x2 mm) were not readily available in the market. It is possible to buy them as separate SMD components, but I would only consider this option if you are willing to solder these components on a custom PCB.\nTransfer 3D images wirelessly to the device (Wifi or Bluetooth). This should also make it possible to program the device to visualize sound/music.\nConvert Blender animations to a file format that can be used with the device\nPut all led strips on the base plate and focus the light to the layers of acryl. On each different layer small areas can be engraved to reflect the light when omitted from the leds. The light should be focused to the engraved areas. This should be possible by creating a tunnel guiding the light or using lenses on the leds to focus the light.\nImproving the stability of the 3D Volumetric display and regulation of rotation speed by separating the rotating base from the brushless motor by using gears and a timing belt.", "step_imgs": [], "step_title": "Step 7: Potential Improvements"}, {"step": 8, "steps_text": "I would like to give special thanks to the following persons:\nMy fantastic wife and daughters, for their support and understanding.\nTeun Verkerk, for inviting me to the Hackathon\nNabi Kambiz, Nuriddin Kadouri and Aidan Wyber, for your support, assistance and guidance throughout the Hackaton\nLuuk Meints, an artist and a fellow participant of this Hackaton who was so kind to give me a personal 1 hour introduction speed course to Fusion 360 which allowed me to model all the parts that I needed for this project.", "step_imgs": [], "step_title": "Step 8: Shout Out"}], "channel": ""}, {"category": "", "description": "For my daughters second birthday, we decided to get her a kitchen set. But I really wanted to make what we got her special and after being inspired by what some awesome makers had done with the Ikea Duktig Kitchen, we decided to get one and to make some modifications to it to make in unique.\nThe two new features we added to the kitchen are\nOven Mod:\nAdding lights to the oven section that could be set to different colours and that the brightness could be adjusted. This is obviously is not a realistic representation of how an oven works, but our daughter was just starting to learn her colours and we thought that she would really enjoy swapping between the different colours. (sorry about my dog wanting to be famous)\nMicrowave Mod:\nAdding lights and a timer to the microwave section. I went for a little bit more realism here, even trying to simulate the item in the microwave spinning by rotating the lit LED around the neopixel ring. This was bit too advanced for her at the time but now that she is a few months older she does really like this too!\nSeeing my Daughter play with this for the first time is probably my proudest moment as a maker. A lot of the times the things I make might be kind of interesting or cool, but seeing the glow on my Daugther's face the first time she was playing with it is honestly one of the highlights of my Dad career so far (some of it was from the Oven lights, but there was serious joy too!)", "title": "Ikea Kids Kitchen Lights Mod", "url": "https://www.instructables.com/id/Ikea-Kids-Kitchen-Lights-Mod/", "section": "technology", "steps": [{"step": 1, "steps_text": "I seen a couple mods for the Ikea Duktig Kitchen last year that I thought were amazing so I wanted to see if I could combine some of the best of both and make a few changes based on what I parts I had available and my based on my limited woodworking skills!\nThe first is the Kids Kitchen that says BEEP by RoaldH. This is a mod that adds lights and buttons to the oven section of the Kitchen.\nThe second is the IKEA Hack: Microwave for the Duktig Kids Kitchen by Myles Eftos. This mod adds a rotary encoder, a 7 segment and lights to the microwave section of the kitchen.\nLastly, I had a lot of spare Neopixel rings and ESP8266 boards left over from my WiFi Wedding Lights project so I wanted to try use as much as I could from that project so it would no longer just be sitting in a box on a shelf! I also think its kind of nice that something from our wedding is now being used by daughter to play with!", "step_imgs": ["https://cdn.instructables.com/FFM/SFCF/JT91LXY9/FFMSFCFJT91LXY9.LARGE.jpg", "https://cdn.instructables.com/FYP/T9MX/JT91LYN9/FYPT9MXJT91LYN9.LARGE.jpg", "https://cdn.instructables.com/FXV/787B/JTWS1UMC/FXV787BJTWS1UMC.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F9E/ZI3R/JTMSEDKO/F9EZI3RJTMSEDKO.LARGE.jpg"], "step_title": "Step 1: The Remix"}, {"step": 2, "steps_text": "I used the following parts in this project\nComponents:\n2no. D1 Mini ESP8266 Arduino boards* - I used these as I had some spare after the Wifi Wedding Lights project. You could replace this with any Arduino board though\n3no. 16 LED Neopixel Ring* - Again these were spare from the Wedding lights project, but the rings ended up working out quite well, especially for the mircrowave.\n4no. Arcade Buttons\n2no. Rotary encoder modules*\n1no. 7-Segment display module\nLarge Amp 5V power supply* - You need minimum 3 or 4 A amps, but could get away with less if you limit the max brightness of the the Neopixels.\nSome perf board* - I used two pieces\nScrew terminals*\nDC Jack to screw terminal adaptors (Male and Female)*\nParts From Ikea:\nIkea Dukstig Kitchen - I had mine assembled before stating these mods.\nCable trunking - This is a nice cheap way of tidying up the cable.\nTools:\nCordless Drill\nSelection of standard wood drill bits\n25mm Hole Saw bit\nSome screws\nSome clips to tidy up cables\n3d Printer (or access to one)", "step_imgs": [], "step_title": "Step 2: Things You'll Need"}, {"step": 3, "steps_text": "There are two sketches used in this project, one for the Oven mod and one for the Microwave mod.\nThe code is pretty simple, and as mentioned earlier, should run on any arduino if you change the pin numbers to match.\nIf you are using the ESP8266 boards like I did, you will first need to setup your Arduino IDE for programming these boards, check out the video above for steps on how to do this.\nOnce you are setup, download the the two sketches from github and upload them to the two separate boards\nMicrowave Sketch\nOven Sketch", "step_imgs": [], "step_title": "Step 3: The Code"}, {"step": 4, "steps_text": "First thing that we need to do is drill the holes above the oven to house the buttons and the rotary encoder. I did these steps while the kitchen was fully assembled, I just needed to remove the plastic stove top. You may need to remove the door in later steps, but that's easily done.\nI put some masking tape on the area where the buttons were being places so I could mark out where the holes were and to help protect the finish of the wood when drilling.\nI marked out the holes as shown below. The marking for the centre, the rotary encoder, is 16cm from the left. The inner buttons are marked 5cm from the centre and the outer buttons are marked 6cm from the inner buttons.\nI drilled a guide hole on the markings for the buttons using a 4mm drill bit. I then used a 25mm hole saw to drill the holes out large enough so that buttons could fit in them.\nNow comes for the scariest part of the whole build for me, the hole for the rotary encoder. The shaft of my rotary encoder was far to short to be able to just drill a single hole through the wood and get the nut on the shaft. I drilled a hole for the shaft using a 8mm drill bit (I think, please check the size before doing it!). Then from the inside of the oven I used a flat drill bit to drill out a hollow so that the rotary encoder fits inside this to make the depth of the hole the shaft needs to pass through shorter. Be very careful at this part! Take it slow and keep checking if its deep enough for the encoder to go through and grip the nut.\nNow would be a good time to test the fit of the button and the Rotary encoder. I was really happy with how they came out!", "step_imgs": ["https://cdn.instructables.com/FIY/4WXY/JTMSEDCV/FIY4WXYJTMSEDCV.LARGE.jpg"], "step_title": "Step 4: The Oven Mod - Drilling the Holes"}, {"step": 5, "steps_text": "The main components for the oven mod consists of\n4 arcade push buttons\n1 rotary encoder\n2 neopixel rings\nThe D1 Mini ESP8266 board.\nThe circuit is laid out as follows:\nI started by building a proof of concept of the circuit using a breadboard and crocodile clips so I could test out the circuit and start writing the Arduino sketch. It is a bit of a mess but it's a really good way of trialing out what you want to do without having anything permanent.\nOnce I was happy with the POC, I decided to move to a more solid solution. I made up a board using perfboard and screw terminals for connecting all the external components to the board. I find screw terminals are a great way of connecting components that are not attached to the same perfboard as the arduino so it allows you cut the wire to whatever length it needs to be.", "step_imgs": ["https://cdn.instructables.com/F3Q/PE6R/JTMSEDIJ/F3QPE6RJTMSEDIJ.LARGE.jpg", "https://cdn.instructables.com/F28/ZVOR/JTT5PK2A/F28ZVORJTT5PK2A.LARGE.jpg"], "step_title": "Step 5: The Oven Mod - the Circuit"}, {"step": 6, "steps_text": "I first screwed the perfboard to the inside of the oven towards the back.\nFor wire I used some CAT5 cable I had to hand. CAT5 has 4 pairs of wires (8 wire in total) so this was perfect to run one length of this up to the buttons. Make sure to keep it long enough to get to the furthest away button while being clipped against the edge (you don't want these wires dangling inside the oven)\nMy arcade buttons had a hole on their terminals so I decided to just wrap the wire around rather than soldering so I could easily remove if required.\nMy rotary encoder came with headers pre-soldered, I needed to un solder these and replace them with wire. Again i used a length of CAT5. The wire should be soldered from the bottom of the PCB so it fits better (as seen below)\nThe neopixel rings need to be attached to the bottom of the plastic hob and to the bottom of the shelf inside the oven. I used hot glue to attach these.\nI made a makeshift connector for the neopixels rings using male and female headers. This is so the neopxiels rings, or even what they are attached to, could be removed from the kitchen without the need for unscrewing them from the screw terminals. This is especially important for the one attached to the hob as that may need to be removed regular to replace it's batteries etc.\nFinally, I drilled a hole in the back panel to allow the power supply through (more about this in a later step)", "step_imgs": ["https://cdn.instructables.com/FBQ/1Y7J/JTMSEDMJ/FBQ1Y7JJTMSEDMJ.LARGE.jpg", "https://cdn.instructables.com/FCS/Z01G/JTMSEDTX/FCSZ01GJTMSEDTX.LARGE.jpg", "https://cdn.instructables.com/F0B/IF48/JTMSEDQG/F0BIF48JTMSEDQG.LARGE.jpg", "https://cdn.instructables.com/FYG/2SU2/JTMSEDOQ/FYG2SU2JTMSEDOQ.LARGE.jpg"], "step_title": "Step 6: The Oven Mod - Assembling"}, {"step": 7, "steps_text": "The main components for the oven mod consists of\n1 Rotary Encoder Module\n1 Passive Buzzer Module\n1 TM1637 7 Segment display\n1 Neopixel Ring\nA D1 Mini ESP8266 board.\nThe circuit is laid out as follows:\nYou should test the circuit out on a breadboard before starting assembly just to make sure everything is working as expect.\nLike I did with the oven mod, When I was happy with it how it turned out, I created a board using perfboard and screw terminals.\nThe 7 segment display and the rotary encoder are housed in a 3D printed enclosure that is screwed in below the microwave. This is not an exact fit for the parts (I'm not good at 3D design!) but with a bit of hot glue for the 7-segment display, it does the job fine!\nJust to note, that i left the buzzer attached to the perfboard, but if your buzzer is a bit quite it might be a good idea to bring it to this enclosure as well.\nSimilar to what we did earlier with the rotary encoder for the oven, we need to replace the pre-soldered header pins with wires for both the rotary encoder and the 7 Segment display.\nI had too take off the top of the kitchen in order to screw the Neopixel ring into place insider the microwave, but you could just use glue to save yourself this step. I drilled out a hole in the back of the microwave to allow the cables from the neopixel ring out.\nI screwed the perfboard to the back of the microwave and connected up all the wires.", "step_imgs": ["https://cdn.instructables.com/FWP/JB0S/JTT5Q6B9/FWPJB0SJTT5Q6B9.LARGE.jpg", "https://cdn.instructables.com/F6M/Y6JX/JTT5PK0X/F6MY6JXJTT5PK0X.LARGE.jpg", "https://cdn.instructables.com/F7K/E5FT/JTT5PK0Y/F7KE5FTJTT5PK0Y.LARGE.jpg", "https://cdn.instructables.com/F3B/93QY/JTWS0U6I/F3B93QYJTWS0U6I.LARGE.jpg", "https://cdn.instructables.com/FWQ/BAGC/JTWS0UED/FWQBAGCJTWS0UED.LARGE.jpg"], "step_title": "Step 7: The Microwave"}, {"step": 8, "steps_text": "To power the project, I used a single laptop style 5V power supply. Seeing as there are 48 neopixels, you should be aiming for a PSU cable of supplying at least 3 Amps (the neopixels will not all be on at the one time, but better to have the extra amp room if you want them, rather than looking for them).\nI used a DC Jack socket to screw terminal adaptor to take the single power supply in and then split it from there to the two perfboards. I used DC barrels connector to screw terminal adapters to connect this to each of the perfboards.\nFor tidying up the wires I used the mini trunkink from Ikea everywhere I could just to keep the wiring neat. This stuff is pretty cheap, can easily be cut using something like a snips and has adhesive on back so it's easy to stick up.", "step_imgs": ["https://cdn.instructables.com/FSO/KRJJ/JTWS0UA4/FSOKRJJJTWS0UA4.LARGE.jpg", "https://cdn.instructables.com/FBC/VC1L/JTWS0UC4/FBCVC1LJTWS0UC4.LARGE.jpg"], "step_title": "Step 8: Powering the Kitchen and Tidying Up Wires"}, {"step": 9, "steps_text": "One thing that I thought would be nice about getting the kitchen for our daughter is that it would hopefully be something she would have long time. I have been thinking of some changes that I could make to it so that it grows with her.\nDisplay the time to the microwave 7 Segment:\nMy daughter can't tell the time at the moment, but the way she is growing and learning I don't feel thats too far away! One simple mod would be display the time on the 7 segment display when it's not actively in use by the microwave. No additional hardware would even be required as the ESP8266 is capable of fetching the time from the internet. Here is a sample sketch I did displaying the time on this type of a display using an ESP8266\nAlexa integration:\nMy daughter is a big fan of \"lexa\" and I was thinking it would be pretty cool to add some integration between Alexa and the kitchen. I'm not sure exactly what that would be yet but I'm sure we could have some fun with it! Check out this library for using an ESP8266 with an Alexa\nDo you have any other ideas that could be added?", "step_imgs": [], "step_title": "Step 9: Ideas to Improve It in the Future"}, {"step": 10, "steps_text": "If I was building this again, there a couple of small things I would do differently to make it easier.\nD1 Mini Breakout Shield\nAfter building 2 of pretty much the exact same perfboard for this project, I decided I never wanted to build another one like this again! I ended up designing a PCB to this job instead and I'm really happy with how it turned out. It has screw terminals for all the pins of the D1 mini plus 6 addtional ones that can be connected to circuitry on the built in prototype area. This would have saved several hours when doing this build (perfboard projects always take me longer than I think). I sell these on Tindie if you want to buy one!\nArcade button Crimp Terminal\nThese slot onto the arcade buttons so it makes it really easy to connect them up. Definitely would be more convenient than the wrapping of out terminals like I did!\nYou can buy them on Aliexpress for really cheap*\n* Affilate Link", "step_imgs": ["https://cdn.instructables.com/FFA/VUAN/JTWRY1WU/FFAVUANJTWRY1WU.LARGE.jpg", "https://cdn.instructables.com/F37/M9DS/JTWRY1WT/F37M9DSJTWRY1WT.LARGE.jpg"], "step_title": "Step 10: Things I Would Do Differently"}, {"step": 11, "steps_text": "This is easily one of the most rewarding builds I have ever done. Lot's of times I make things because they are interesting or cool, but in truth they usual sit on a shelf. But this is something my daughter uses nearly every day and it means a lot to me that I could make something for her.\nI was really happy with how this turned out, the finish is definitely one of my better ones! It's actually quite interesting seeing unmodified versions of the kitchen, they look kind of strange to me!\nHopefully you enjoy this guide and can make use of it. If you do make a version of one I would absolutely love to see it!\nAll the best,\nBrian\nYouTube\nTwitter\nTindie", "step_imgs": ["https://cdn.instructables.com/FEC/VOBW/JTWS1YQ9/FECVOBWJTWS1YQ9.LARGE.jpg"], "step_title": "Step 11: Conclusion"}], "channel": ""}, {"category": "", "description": "Hello, i am happy to present you my first instructable.\nFirst, i am sorry if my English is bad, i learned English at school 15 years ago. I try my best.\nI used a lot of tutorials and forums for having solutions or ideas but i never contribute. That is why i am happy to start my contribution with you.\nMy project is a 3D printer build with recycled components and cheap materials. This project started with my son when i started to learn him how recycling and fixing are important for his future and the earth. 3d printer is for me a formidable machine that can contribute for a responsible consummation. It can contribute to the development of imagination and is a good approach to mechanical, programming, electronics, engineering ...\nMy specifications :\nA compact design.\nEasy to move and use.\nThe print area is 10 cm x 10 cm x 10 cm.\nFilament roll stored in the machine (250g spool).\nCompatible with regular nema17 steppers and GT2 belt.\nModular head.\nThe must important : use a maximum of scavenged components and 3d printed parts with PLA (biodegradable).\nHowever, i don't want a poor machine, it must have good prints. So i had to buy some parts like bearings because i didn't find better solution. All parts i bought are cheap but do their job.\nI chose the coreXY arrangement because it corresponds to my specifications and it need only one motor for the Z axis. I designed all the parts except the bowden extruder (by Schlotzz) and the clamp for linear bearings.\nAs you can see in the picture the first user is my son. In the first photo you can see everything the machine printed (tests and fails comprise). The machine can print with 0.15mm resolution and the longer print i do was 3 hours (motors are very small so they heat faster than the classic nema 17). It is quite noisy but i am always impressed to see it working !", "title": "Green Core XY : a 3D Printer With Recycled Components.", "url": "https://www.instructables.com/id/Green-Core-XY-a-3D-Printer-With-Recycled-Component/", "section": "technology", "steps": [{"step": 1, "steps_text": "2x nema 17 steppers with belts and bolts for XY axis (i found them in olds Espon C20 printers).\n1x nema 17 stepper with bolts for z axis (Epson C20 printer).\n1x nema 17 stepper (you can find strongest in big photocopier machine).\n1x coupler 4x6.\n1x 608zz bearing.\n16x 623zz bearings (i recently found them in server's cooling fans).\n8x LM8uu linear bearings.\n1x pneumatic connector PC4.\n1x driver gear.\n1x e3dv6 hotend remote bowden 1.75 12v.\n1x kit Arduino mega + Ramps 1.4 + 4x polulu 4988.\n12V 5A power supply (i am trying to convert a computer power supply).\n12V power jack plug.\nUSB cables.\n2x DVD drives (1 for the door).\n1x endstop switch.\n8mm linear shafts.\n6mm threaded rod.\nScrews, bolts and nuts (M2, M3, M4 & M6).\nSprings (found in printer, machines).\nMDF or plywood offcuts.\nPlexyglass offcut.\n12mm flexible tube (you can use PVC flexible cable pipe).", "step_imgs": ["https://cdn.instructables.com/FJW/8NSR/JTON6J8V/FJW8NSRJTON6J8V.LARGE.jpg", "https://cdn.instructables.com/FU5/7DW5/JTEMZFMO/FU57DW5JTEMZFMO.LARGE.jpg", "https://cdn.instructables.com/FVI/O9DN/JTWSBWXS/FVIO9DNJTWSBWXS.LARGE.jpg", "https://cdn.instructables.com/FCN/YYBD/JTWSBWZM/FCNYYBDJTWSBWZM.LARGE.jpg", "https://cdn.instructables.com/F0G/2IK0/JTWSBX1J/F0G2IK0JTWSBX1J.LARGE.jpg", "https://cdn.instructables.com/F8I/H1W2/JTWSBX6U/F8IH1W2JTWSBX6U.LARGE.jpg"], "step_title": "Step 1: Bill of Materials :"}, {"step": 2, "steps_text": "I built the box with 10mm thickness MDF (but plywood is better because less toxic) and 3mm plexiglass for the door. I got it in a carpentry workshop, they are offcuts that they don't use because to small. I cut it with a circular saw. The door frame is cut with a wood router.\nSadly, i accidentally deleted photos i took during this step. however, with the dust and bad light they were not very exploitable. I apologize for this lack.\nI used 25mm M3 screws.\nYou can choose to leave the wood apparent or to paint it. I finally painted mine with a white paint found in my garage.", "step_imgs": ["https://cdn.instructables.com/F0W/GEZE/JTCSJ34B/F0WGEZEJTCSJ34B.LARGE.jpg", "https://cdn.instructables.com/FOL/ABND/JTYNF51O/FOLABNDJTYNF51O.LARGE.jpg", "https://cdn.instructables.com/FTR/3TJJ/JTYNF51M/FTR3TJJJTYNF51M.LARGE.jpg"], "step_title": "Step 2: Woodworking"}, {"step": 3, "steps_text": "Maybe the most sporty part of this instructable !\nI picked up my linear rods from a demolition. I found in an old fax 6mm diameter linear shaft compatible with lm6uu bearings. You can modify the 3d files to adjust. The 3mm rod is in the DVD drive.\n8mm diameter linear shaft (mine are not rectified but fortunately it works great) :\n2x 225 mm (X axis)\n2x 180 mm (Z axis)\n2x 200 mm (Y axis)\n6mm diameter threaded rods :\n1x 135mm (Z axis)\n3mm diameter linear rod (optional) :\n2x 30mm (hinges)", "step_imgs": ["https://cdn.instructables.com/FO0/BLZS/JTEMZTHC/FO0BLZSJTEMZTHC.LARGE.jpg", "https://cdn.instructables.com/FIU/S8US/JTYNF5AI/FIUS8USJTYNF5AI.LARGE.jpg"], "step_title": "Step 3: Linear and Threaded Rod"}, {"step": 4, "steps_text": "Now it is time to use your 3d printer ! That is why I said this is a formidable machine. You can duplicate your printer, upgrade it, print mechanical elements ... but you need one to start this project. Maybe the 3d printer paradox ?\nI used my 3D printer Discoeasy200 by Dagoma with Gracious green and black PLA Filaments by ICE and White Chromatik PLA Filament by Dagoma. The project need 220g of filament.\nPrint settings :\nSupports : no\nResolution : 0.2 mm\nInfill : 20%\nFilament : PLA\nAll files are directly printable with the best orientation. I recommend you to start with the Test.stl file. Indeed, this part got all different assemblies present in the machine. It is a good way to verify if your printer is properly calibrated to don't make the mistake to print all parts for nothing.", "step_imgs": ["https://cdn.instructables.com/FTJ/TRQD/JTEMZMXE/FTJTRQDJTEMZMXE.LARGE.jpg", "https://cdn.instructables.com/FT7/ZDGQ/JTEMZMY9/FT7ZDGQJTEMZMY9.LARGE.jpg"], "step_title": "Step 4: 3D Printing"}, {"step": 5, "steps_text": "For my project I used 3 stepper motors scavenged in old Epson C20 printers. Generally, printers are thrown in the trash because print heads are clogged, however, all the other parts in the machine work well. You can scavenge stepper motor, M3 nuts and bolts, belt, linear shaft, springs, buttons ... Fortunately, in old Epson printers motor steppers are nema 17. Apparently in big photocopier machine like Ricoh you can fo1nd more powerful stepper.\nTo prepare steppers you need Dupont connectors, old USB cables and your soldering material. You need two motors with drive pulley and another without (Z axis).\nWires length :\nStepper front right (with pulley) : 73 cm\nStepper front left (with pulley) : 50 cm\nStepper bottom Z : 23 cm\nYour motors can be connected like this to your Ramps but I preferred make an intermediate cable for this reason : If you want to connect your motors to another motherboard you have to disconnect only a big Dupont connector instead of three (six with the endstops).", "step_imgs": ["https://cdn.instructables.com/FBS/XGBC/JTCSIC1X/FBSXGBCJTCSIC1X.LARGE.jpg", "https://cdn.instructables.com/FN1/ZVYR/JTYNF5MT/FN1ZVYRJTYNF5MT.LARGE.jpg"], "step_title": "Step 5: Stepper Motors"}, {"step": 6, "steps_text": "For this step I try to use 3 different components : two are found in the DVD drive and one is a classic end stop (old project). You need old USB cables and soldering materials.\nWires length :\nClassic end stop (Y) : 29 cm\nButton (X) : 51 cm\nThree foot switch (Z) : 32 cm\nYou will connect each end stop with a female Dupont double connector during the wiring step (after the pre assembling).\nLike motors, these end stops can be directly connected to the ramps, but I preferred the solution for a big connector.\nNotice I tried to use an LED with the three foot switch but i failed.", "step_imgs": ["https://cdn.instructables.com/F23/0XU3/JTCSIDDS/F230XU3JTCSIDDS.LARGE.jpg", "https://cdn.instructables.com/F5F/S8OH/JTYNF5T2/F5FS8OHJTYNF5T2.LARGE.jpg", "https://cdn.instructables.com/F5N/N3LT/JTCSIDAX/F5NN3LTJTCSIDAX.LARGE.jpg"], "step_title": "Step 6: End Stops"}, {"step": 7, "steps_text": "As i said all my wires are from old USB cables.\nI chose to have an intermediate section of wires between the Ramps and the steppers/end stops. If i want to change the board i only have to disconnect the two big connectors. If you want to alternate the Arduino Mega and the Ramps with the Arduino Uno and the CNC shield it will be easier and fast.\nHowever, you can directly connect the motors and the end stops to the Ramps. The extruder is directly connected with the Ramps.\nTo make the nodes i used sleeving heat shrink tube but, you can use tape or a hot glue gun.", "step_imgs": ["https://cdn.instructables.com/FF0/XEYC/JTONB5SN/FF0XEYCJTONB5SN.LARGE.jpg", "https://cdn.instructables.com/FY2/DGIW/JTT5KOOX/FY2DGIWJTT5KOOX.LARGE.jpg"], "step_title": "Step 7: Wiring"}, {"step": 8, "steps_text": "Here is a special step for the bed. It is not hard, but i prefer separate this step for a better readability.\nTake care to be sure that the M6 nut doesn't move. Use paper or tape to add thickness if needed. I used for the bed an aluminum panel cutoff, but you can use another strong material that doesn't curve. I suggest you to use Blue tape on the bed for a good adherence with the first layer.\nLike the box I painted the wood in white.", "step_imgs": ["https://cdn.instructables.com/FKM/6JDK/JTEMZOL8/FKM6JDKJTEMZOL8.LARGE.jpg", "https://cdn.instructables.com/F5C/SOFN/JTYNF5Y3/F5CSOFNJTYNF5Y3.LARGE.jpg", "https://cdn.instructables.com/F6A/FNBV/JTYNF5Y0/F6AFNBVJTYNF5Y0.LARGE.jpg"], "step_title": "Step 8: The Bed"}, {"step": 9, "steps_text": "It is time to test your dexterity !\nThese assemblies are intuitive and quite repetitive. So if you pass the first element you will success the other.\nTake care with the Z axis' motor, his shaft moves and it can cause troubleshoots during printing. That is why you have to pinch it with the coupler.\nNotice that in the illustration some parts are not updated.", "step_imgs": ["https://cdn.instructables.com/FTF/4P8E/JTON79Z1/FTF4P8EJTON79Z1.LARGE.jpg", "https://cdn.instructables.com/FT3/HT3Z/JTON00R6/FT3HT3ZJTON00R6.LARGE.jpg", "https://cdn.instructables.com/FWY/7UGS/JTYNF60X/FWY7UGSJTYNF60X.LARGE.jpg", "https://cdn.instructables.com/FV7/QZY0/JU31R5US/FV7QZY0JU31R5US.LARGE.jpg", "https://cdn.instructables.com/FME/OLG9/JTYNF63E/FMEOLG9JTYNF63E.LARGE.jpg", "https://cdn.instructables.com/FKK/MQL2/JTYNF671/FKKMQL2JTYNF671.LARGE.jpg", "https://cdn.instructables.com/FB5/JK9W/JTYNF68C/FB5JK9WJTYNF68C.LARGE.jpg", "https://cdn.instructables.com/FS8/M49U/JTYNF68D/FS8M49UJTYNF68D.LARGE.jpg", "https://cdn.instructables.com/FBF/4524/JTYNF68E/FBF4524JTYNF68E.LARGE.jpg", "https://cdn.instructables.com/FXK/G64E/JTYNF68B/FXKG64EJTYNF68B.LARGE.jpg", "https://cdn.instructables.com/F1O/QD5E/JTYNG0OP/F1OQD5EJTYNG0OP.LARGE.jpg", "https://cdn.instructables.com/FW5/GYBT/JTYNG0QN/FW5GYBTJTYNG0QN.LARGE.jpg", "https://cdn.instructables.com/FXJ/5ARQ/JTYNG0PK/FXJ5ARQJTYNG0PK.LARGE.jpg"], "step_title": "Step 9: Pre Assembling"}, {"step": 10, "steps_text": "The minimum needed is 12V 5A. I am not reassured that a machine works during 3 hours with a diy power supply, especially if my son is around ! That is why i use a power supply used for Christmas lighting. However, i am working to build a secure diy power supply from an old computer.\nBe careful with electricity, it can burn your house and kill.", "step_imgs": ["https://cdn.instructables.com/FZR/AGEF/JTWSC7KK/FZRAGEFJTWSC7KK.LARGE.jpg", "https://cdn.instructables.com/FFT/LUW1/JTWSC7L9/FFTLUW1JTWSC7L9.LARGE.jpg"], "step_title": "Step 10: Power Supply"}, {"step": 11, "steps_text": "For software I use Repetier Host for this reason :\nIt is free.\nIt is easy to use.\nIt can slice and pilot your printer.\nYou can use Cura and Slic3r to slice.\nYou can easily configure it for a CNC or a Laser.\nIt is compatible with Marlin firmware.\nIf you want another solution you can use to slice Slic3r or Cura and to pilot Pronterface for example. They are free and have a big community.\nYou need to install Arduino IDE to transfer the firmware (Repetier or Marlin) in your Ramps.\nI give you my Marlin and Repetier configurations they work both.", "step_imgs": ["https://cdn.instructables.com/FRY/1228/JTONC9PC/FRY1228JTONC9PC.LARGE.jpg", "https://cdn.instructables.com/FIB/W2S6/JTONC9QZ/FIBW2S6JTONC9QZ.LARGE.jpg"], "step_title": "Step 11: Firmwares & Softwares"}, {"step": 12, "steps_text": "I chose these two elements because they are cheap, well known and if you get a problem, with luck you only have to change one of them. Nevertheless, when you are working on the Ramps be sure that there is no electricity\n(12V or USB connection). Be careful and verify your connection before powering the shield. I did the mistake and I think i killed a component in the Arduino (my 5V outputs are 3V now). You have to plug stepper drivers to control the motors. I chose the pololu A4988. They are cheap and work well.\nAfter plugging the jumpers and the pololu, attach the Arduino with the printed motherboard rail. Then plug the Ramps in the Arduino Mega. Depending your power supply you can like me, attach a 12V power jack plug.\nWe will verify the steppers :\nDispose the motors like if they were in the box.\nOnly plug the motors on the Ramps.\nVerify all then connect the motherboard to your computer.\nPower the Ramps.\nLaunch Repetier Host and connect the printer.\nGo to the manual control.\nTest to go to the right, and look the motor's rotation.\nCompare with my schema. If one turn in the bad direction disconnects the printer, unplug the USB and power supply.\nInvert the connection of the motor on the ramps.\nDo it with the other motors (Z goes down).\nNow it is time to adjust the steppers :\nYou will do the following steps.\ntest to go to the right.\nWith an isolate screwdriver, slowly turn the little screw on the pololu in anticlockwise.\ntest to go to the right.\nWhen the motor stop to work turn 1/4 in clockwise.\nDo it with the other motors (Z goesdown).\nThis method looks archaic, but works for all steppers I used.", "step_imgs": ["https://cdn.instructables.com/FD7/71IJ/JTT5S21Q/FD771IJJTT5S21Q.LARGE.jpg", "https://cdn.instructables.com/FU3/ZTAK/JTWSCDVN/FU3ZTAKJTWSCDVN.LARGE.jpg", "https://cdn.instructables.com/F8A/WW5B/JTWSCDQY/F8AWW5BJTWSCDQY.LARGE.jpg", "https://cdn.instructables.com/FGW/TBWT/JTWSCJAJ/FGWTBWTJTWSCJAJ.LARGE.jpg"], "step_title": "Step 12: Arduino Mega and Ramps 1.4"}, {"step": 13, "steps_text": "It is time to assemble all the parts before giving life to your printer.", "step_imgs": ["https://cdn.instructables.com/FMB/V9OU/JTYNFZZI/FMBV9OUJTYNFZZI.LARGE.jpg", "https://cdn.instructables.com/F7Q/PM6F/JTYNFZRD/F7QPM6FJTYNFZRD.LARGE.jpg", "https://cdn.instructables.com/F4X/34VY/JTYNFZTH/F4X34VYJTYNFZTH.LARGE.jpg", "https://cdn.instructables.com/FII/FZZP/JTYNG03B/FIIFZZPJTYNG03B.LARGE.jpg", "https://cdn.instructables.com/F5A/P9ZE/JTYNG01O/F5AP9ZEJTYNG01O.LARGE.jpg", "https://cdn.instructables.com/FGF/4SGU/JTYNFZX9/FGF4SGUJTYNFZX9.LARGE.jpg", "https://cdn.instructables.com/F1H/3RJ0/JTYNFZTG/F1H3RJ0JTYNFZTG.LARGE.jpg", "https://cdn.instructables.com/FGJ/QDSF/JTYNFZSH/FGJQDSFJTYNFZSH.LARGE.jpg"], "step_title": "Step 13: Assembling"}, {"step": 14, "steps_text": "Folow the instruction for the bed leveling.\nNotice you can move the head with the software, or with the hand if you unpower the motors in the software.\nPersonally i prefer the second solution.\nAfter this step your printer is operational.\nI hope you enjoy reading my first instructable. It is a hard work, but i am happy to share it. I will update this instructable. Tell me if there is something wrong. Thank you. R\u00e9my", "step_imgs": ["https://cdn.instructables.com/F6C/8I7U/JU31RPS4/F6C8I7UJU31RPS4.LARGE.jpg"], "step_title": "Step 14: Calibration"}, {"step": 15, "steps_text": "I designed this printer to be transformable in CNC, plotter or a Laser engraver.\nYou can disconnect the Ramps 1.4 and use a CNC shield, you can unplug the Hotend and plug another tool.\nI tried with a motor with a drill bit, a dremel and a pen. That works !", "step_imgs": ["https://cdn.instructables.com/FP4/XN64/JTWSBPHN/FP4XN64JTWSBPHN.LARGE.jpg"], "step_title": "Step 15: Transformations"}], "channel": ""}, {"category": "", "description": "Featured design on Thingiverse.com!\nI started working with 3D printing in 2017, the year I got my first printer and started to venture into 3D modeling and printing.\nAt the time I spent more and more time in the improvised laboratory in a bedroom, doing different experiments with 3D printing and electronics. And the first challenge I faced was to print my own tools to better organize and enjoy my space. It was in this context that I decided that I needed to improve the lighting of my workbench.\nI searched the internet for different models, but none adapted to my requirements. It was then that I came across with the Articulating, Wall-Mounted, Magnetic Phone Mount designed by Kenneth Haynie . And that's where this Remix started! The model, used as a mobile phone holder, has been transformed into an articulated luminaire.\nWith the permission of the original author, I remodeled all the pieces following a similar pattern, and after I finished and satisfied with the result, I decided to share it with the community. And to my surprise, the model was extremely well accepted and even featured on Thingiverse, one of the largest, if not the largest, platform for sharing models for 3D printing! The model became a hit with over 220,000 views, 36,000 downloads and 7,800 likes! To help users print and assemble their own pieces, I shared a tutorial here in Instructables which, to my second surprise, was awarded in the Plastics Contest of 2017 with almost 20,000 views!\nAnd what surprised me the most is that other users started to print and create their own remixes! At the time of publication of this article, more than 60 lamps had already been produced and shared. For me, it was a surprise to know that people all over the world liked the model so much that they spent hours of their lives printing and posting versions of my project. In the end, the project has evolved to become a kind of kit, such as a LEGO-lamp, in which users can make different combinations and form different structures.\nThroughout this tutorial I present my version of several of these remixes developed over the last few years to improve the use of the articulating lamp. I'll show you some remixes (made out of remixes of my initial designed, which was remixed from another design!) and the links fo the parts developed by members of the 3D printing user community, as well as detailed information for my version of each of these parts.\nAlthough it is extremely simple, I'll show you how to assemble the lamp, and suggestions on how to combine the pieces to form different structures.\n\nBe careful when working with electricity. Make sure there is no short circuit and just try to connect to the electrical power plug after making sure that all components are properly connected and double insulated. If you don't have enough experience working with electricity, as for others help.\nDon't touch any exposed wire or any metal part of the LED lamp after it's energized! Some LED spots have a metal heat sink. Avoid touching that part when the lamp is on!\nOnce there are exposed wires, it's not recommend to use it places accessible to children or animals. Under no circunstances use it close to wet surfaces!\nIt's and experimental design, so you might use it with caution.", "title": "3D Printed Articulating Lamp - REMIXED", "url": "https://www.instructables.com/id/Articulating-LED-Lamp-REMIXED/", "section": "technology", "steps": [{"step": 1, "steps_text": "[atualizar links e coupons]\nThe following tools and materials were used in this project:\n3D printer (link / link). In my case I used a Voolt3D, a Grabber i3 based 3D printer. But you can't use differente models of 3D printers. Most of the parts are quite small. The larger ones will be the arms of the lamp, with up to 200 mm. Make sure that your printer has enough print area for that.\n1.75mm PLA (link / link) of different colors. I combined white, orange and blue PLA in my design;\nScrewdriver. You'll need it for mounting your lamp on the wall and to assemble the electrical plug and switch;\nScrews (for mouting your lamp on the wall);\n5W LED spotlight (link). Don't forget to check its voltage.\nGU10 socket (link). Don't forget to check its voltage.\nYou'll probably need some wires, a power plug and a on/off switch. You can find it in electrical hardware stores.\nThe links described above are only a suggestion of where you can find the items used in this tutorial (and support my future hacks). Feel free to search for them elsewhere and buy at your favourite store.\nPlease be carefull when working with electricity. It might be dangerous. Some of those connectors and LED bulbs might have exposed metal parts! Don't touch it's energized and keep it out of reach from children or pets. Make sure that everything is perfectly isolated beforing turning it on. If you have no experience working with electricity, ask for help of any one with experience, or use lower voltages (e.g. 5V LEDs).\nCollect everything and get ready for some action!\nDid you know you can buy a Creality3D Ender for only $199.99? Get yours at http://bit.ly/2WBY0jm.", "step_imgs": ["https://cdn.instructables.com/FPA/DUV1/J6MGIP0Q/FPADUV1J6MGIP0Q.LARGE.jpg", "https://cdn.instructables.com/F3U/3HRS/J6MGIPFL/F3U3HRSJ6MGIPFL.LARGE.jpg", "https://cdn.instructables.com/FRI/QU5I/J6QQGPJI/FRIQU5IJ6QQGPJI.LARGE.jpg", "https://cdn.instructables.com/F7Z/ZTSD/J6QQGPJA/F7ZZTSDJ6QQGPJA.LARGE.jpg", "https://cdn.instructables.com/FGU/PCQQ/J6QQEZTA/FGUPCQQJ6QQEZTA.LARGE.jpg", "https://cdn.instructables.com/F8W/W6FH/J6QQEZTN/F8WW6FHJ6QQEZTN.LARGE.jpg", "https://cdn.instructables.com/FBB/8SY5/J6QQGQR8/FBB8SY5J6QQGQR8.LARGE.jpg", "https://cdn.instructables.com/FLO/MWOX/J6QQEZRT/FLOMWOXJ6QQEZRT.LARGE.jpg", "https://cdn.instructables.com/FW5/CRKS/J6MGIPW3/FW5CRKSJ6MGIPW3.LARGE.jpg"], "step_title": "Step 1: Tools and Materials"}, {"step": 2, "steps_text": "In the next sections I'll tell you a little about each of the pieces used in this project. The general idea of the 3D model was based on Kenneth's Articulating, Wall-Mounted, Magnetic Phone Mount desing. Thanks, man! For this lamp I redesigned most of the parts using Fusion 360 and made some adaptations and improvements for my specific application.\nYou can find all files at: https://www.thingiverse.com/thing:2505394\nThe initial design had two models of arms:\nOne with two \"male\" ends (two threaded ends);\nOne with two \"female\" ends (two ends with a hole).\nThe idea here seemed great to me! The threaded end of one of the arms passes into the hollowed end of the other, and a knob, also 3D printed, is screwed to compress the two pieces together. Grooves and bounces on the surface of these two partes are used to lock the position of the arms.\nThese two models are still available and are still compatible with all other parts. However, these two types of parts slightly limit the mounting of the lamp, since one should always use an even number of arms between the lamp holder and the anchor point.\nThe first remix of the project was the inclusion of a new type of arm, containing a threaded joint at one end (male) and a hole at the opposite end (female). In this way, it is possible to mount the lamp with any desired number of arms (even or odd number of arms), making the structure longer or shorter as desired. Special thanks to Robert Phelps\nwho had the great idea of adapting the arms (link). Thank you!\nDifferent applications may require larger spacing between the fixing point of the lamp and the object to be illuminated. With this in mind, different sizes of arms were introduced: 100, 140 and 200 mm. Any of the sizes can be combined in the construction of the joint. The idea came after Ken Mckittrick published and 8 inch long arm (link), and made realize that this might be usefull for different users.\nPlease also check div saW remix (link). It uses a spring between the arms and the nuts to create a self articulating joint.", "step_imgs": ["https://cdn.instructables.com/FDU/20HW/JTIYOHRD/FDU20HWJTIYOHRD.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FFN/SCXN/JTIYOIG3/FFNSCXNJTIYOIG3.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FRZ/Y7JW/JTIYOIKR/FRZY7JWJTIYOIKR.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FDD/7CMW/JTIYOK7P/FDD7CMWJTIYOK7P.ANIMATED.LARGE.gif"], "step_title": "Step 2: 3D Models - Arms"}, {"step": 3, "steps_text": "One of the points that had most of the remixes since the creation of this model was the lamp holder. Different users have proposed different models for different types of lamps: from incandescent lamps to 5V LED lamps.\nThe original design is based on the use of LED lamps with GU10 connector. You can find both lamp and connector on electrical hardware stores. The idea here is quite simple: the lamp is fitted on one side of the holder in a circular cavity, and the connector is engaged on the opposite side. This assembly makes the lamp stay fixed, without the need for additional parts.\nOne remix proposed here was the addition of a new lamp holder model, enabling a pair of lamps on the same holder. Thus, it is possible to achieve twice the brightness for the luminaire.\nThis remix was inspired in Lena Br\u00fcder design (link), which accomodates three lamps in a single holder. I thought three lamps would be too much for me, so I redesigned it for a pair of lamps only. :)\nA lot of users warned me about the dangers of the exposed contacts behind the socket, and the danger of and electrical discharge. Carlos Martinez (link) and Pepe Potamo (link) proposed a lamp cover as a safety improvement. But what really caught my attention was the solution of MAILLERE Brigitte (link), who proposed a lamp cover with a round switch for turning the lamp on/off. I really liked that and decided to make my own version, in a octagonal pattern to resemble the format of the nuts used in my design. The socket is hidden inside this structure, and a round button is installed on the opposite side. There's a hole on side for the wires.\nI also designed a simpler version, without a button, meant to cover the exposed contacts of the connector and avoid electical issues. As always, use it if caution even with this protective lamp cap.\nThe very first suggestion I received was for a wire holder for the lamp. The wires between the connector and the socket are loose, being able to entagle with the structure itself or with nearby objects. Some users solved this using some zip ties, which's just fine. But Carlos Martinez (link) presented another great solution for the problem, followed latter by Pepe Potamo (link). They devised a clip to hold the wires close to the structure of the arm itself.\nAlthough, I wanted something simpler. So I designed my own version of the wire clip, which's easy to use, easy to print and, I hope, not so easy to break! :)\nUsers all around the world have proposed different types of holders for different lamp bulbs (incandescent lamps, 5V LEDs, etc.). I did not get to try these remixes, but I encourage you to try, if the lamp you want to use is different from the one I present here. Here are some suggestions:\nGU10 holder (link)\nE27 connector (link / link)\nIkea lamp (link / link)", "step_imgs": ["https://cdn.instructables.com/F7Y/5IL0/JTON98NY/F7Y5IL0JTON98NY.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FW9/DF8F/JTON98RR/FW9DF8FJTON98RR.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F92/D54U/JTON6H0F/F92D54UJTON6H0F.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FFR/USH9/JTWSCBYY/FFRUSH9JTWSCBYY.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FPM/XV97/JTON6H8U/FPMXV97JTON6H8U.ANIMATED.LARGE.gif"], "step_title": "Step 3: 3D Models - Lamp Holders"}, {"step": 4, "steps_text": "The fixing point of the lamp was verry questioned since the birth of this project. The wall bracket was initially designed for a specific configuration in my office, where the lamp would be fitted into the gap between two wooden panels, without the need for fastening screws.\nIn fact this setting is quite specific and few users would find the same facility in their homes or workplaces. Thus, another model was proposed for the instalation using a pair of screws. It's made of three parts: the wall mount (which's screwed on the wall), a joint (which allows the lamp to turn 180 degrees around the fixing point), and a bolt (which is used for the instalation of the joint, along with a knob described earlier).\nSoon a lot of suggestions and remixes for new support proposals appeared.\nSome of them used Johann Joe's G-Clamp desing as reference, like the ones proposed by Morten Thorsen (link) and Tim Hespel (link). They both look great!\nThis type of support is very versatile, since it can be installed on tables and other flat surfaces, including in the 3D printers themselves (a popular assembly among printer owners!).\nI present my support version here, remixed from the model of Johann. The model allows the installation of the support on surfaces with thickness up to 45 mm, and might be used on table top or shelves. The model is composed of three parts: the clamp itself, a bolt (which is threaded to the clamp) and a cap (fitted to the end of the bolt to compensate for surface angulation). A bolt and a knob are also used for the complete assembly.\nAnother new support presented here is the clip peg type. This support is designed to be \"clipped\" on flat surfaces with thickness up to 35 mm. The advantage here is, in addition to versatility, the fact that it is made up of a single piece! It will take longer to print, but it's make of a single part with no external moving parts.\nThe last part I present here is the zip tie mount. It was proposed by Gael Lanfond (link) based on a remix of the wall mount part. It has a couple of inserts, through which zip ties are passed. This assembly allows tying the luminaire in tubular structures, like pipes and post. It's a great idea!\nSome users also proposed some models meant to be installed on 3D printers. like those ones by MAILLERE Brigitte (link) and Simon Couturier (link). Since different printers would have different setups, there are endless possibilities for supports like this!", "step_imgs": ["https://cdn.instructables.com/FW1/IPP1/JTON98BV/FW1IPP1JTON98BV.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F10/6PB3/JTIYOK74/F106PB3JTIYOK74.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F83/JUJA/JTON988X/F83JUJAJTON988X.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FYM/F80D/JTON988V/FYMF80DJTON988V.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FMR/BAWJ/JTON988W/FMRBAWJJTON988W.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F32/NC6S/JTON988U/F32NC6SJTON988U.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FR2/69DO/JTON98FT/FR269DOJTON98FT.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FAI/PBC8/JTON6H61/FAIPBC8JTON6H61.ANIMATED.LARGE.gif"], "step_title": "Step 4: 3D Model - Fixing Point"}, {"step": 5, "steps_text": "You may print the parts described on the previous steps, in your favourite color. Some of the parts, like the arms or the knobs, might have to be printed more than once. I printed all the parts in PLA, with 0,2mm resolution, 20% infill and no supports (considering you place then with the right orientation, the one of the stl files).\nYou can find all files at: https://www.thingiverse.com/thing:2505394\nFollows a picture of each part and the extimated tipe you'll take to print them.\nArms:\nPrinting time:\n- \"Female/female\" arm (100 mm / 140 mm / 200 mm): 70 min / 90 min / 110 min\n- \"Male/Male\" arm (100 mm / 140 mm / 200 mm): 120 min / 140 min / 160 min\n- \"Female/Male\" arm (100 mm / 140 mm / 200 mm): 90 min / 110 min / 130 min\nKnob\nPrinting time: 30 min\nSingle lamp holder:\nPrinting time: 105 min\nDouble lamp holder:\nPrinting time: 145 min\nLamp button:\nPrinting time: 95 min\nLamp cap:\nPrinting time: 25 min\nWire clip:\nPrinting time: 10 min\nWall mount:\nPrinting time: 70 min\nBolt:\nPrinting time: 70 min\nWall joint:\nPrinting time: 90 min\nClamp:\nPrinting time: 110 min\nClamp screw:\nPrinting time: 90 min\nClamp cap:\nPrinting time: 10 min\nClip:\nPrinting time: 235 min\nTube mount:\nPrinting time: 85 min", "step_imgs": [], "step_title": "Step 5: 3D Printing"}, {"step": 6, "steps_text": "In this step I'll show you how to assemble the lamp, connecting each part of it. The assembly is very intuitive and self explanatory, however I wanted to include some animations here! :D\nAs I said before, there are several ways to mount the lamp using more or less components. Here I present just how to assemble each component individually.\n\nArms\nConnect the threaded end of one arm with the hollowed end of the next arm and use a knob to compress the two and lock their relative position.\nSingle lamp holder\nConnect its end to the threaded end of one arm and use a knob to compress the two and lock their relative position.\nDouble lamp holder\nConnect its end to the threaded end of one arm and use a knob to compress the two and lock their relative position.\nLamp connector\nPass a LED spotlight through the lamp holder and put the GU-10 connector on the other side.\nWire holder\nClip the wire holder into the arm, securing the cable.\nLamp cap\nPass the wires through the center hole of the part and attach the cap to the lamp connector.\nLamp button cap\nFit the button on the cap, solder the wires from the connector to the button terminals (not shown in the animation), and the power wires through the cap hole (not shown in the animation). Attach the connector to the lamp button cap part, and then the connector on the lamp.\nWall mount\nConnect the wall joint to the hollowed end of one of the arms, imprisoning it with a knob. Enclose the wall mount in the wall joint, and pass a bolt through both parts. Thread a knob at the end of the bolt. Use a couple of screws to install it on the wall.\nG-clamp\nConnect the wall joint to the hollowed end of one of the arms, imprisoning it with a knob. Enclose the clamp in the wall joint, and pass a bolt through both parts. Thread a knob at the end of the bolt.\nClip\nConnect the clip to the hollowed end of one of the arms, imprisoning it with a knob.\nTube mount\nConnect the wall joint to the hollowed end of one of the arms, imprisoning it with a knob. Enclose the tube mount in the wall joint, and pass a bolt through both parts. Thread a knob at the end of the bolt. Use a couple of zip ties to install it on a pipe or post.", "step_imgs": [], "step_title": "Step 6: Assembling"}, {"step": 7, "steps_text": "As I showed before, once parts are printed, mounting the structures is easy! There are several ways to assemble the lamp by combining different parts to create the desired structure. Below I present some \"recipes\" for mounting your lamp:\nRecipe #1 - Wall-mounted lamp\nWall mount (1)\nBolt (1)\nWall joint (1)\nArms (n)\nNuts (n+2)\nLamp holder (1)\nHow-to: Start from the wall mount part. The bolt passes through the wall mount and the wall joint parts and is locked with a knob on its end. Attach the female arm (or a mixed arm) to the wall joint using a knob. Connect the male arm (or another mixed arm) to the female on with another knob and attach the lamp holder to the other end of the male arm with another knob. Finally pass a LED spotlight through the lamp holder and put its connector. Your structure will be ready to be attached to the wall.\nRecipe #2 - Desk/shelf mounted lamp (with clamp)\nClamp (1)\nClamp screw (1)\nClamp cap (1)\nBolt (1)\nWall joint (1)\nArms (n)\nNuts (n+2)\nLamp holder (1)\nHow-to: Start from the clamp part. Put the screw on one side of the camp and attach the cap on it's end. The bolt passes through the clamp and the wall joint parts and is locked with a knob on its end. Attach the female arm (or a mixed arm) to the wall joint using a knob. Connect the male arm (or another mixed arm) to the female on with another knob and attach the lamp holder to the other end of the male arm with another knob. Finally pass a LED spotlight through the lamp holder and put its connector. Your structure will be ready to be attached to the wall.\nRecipe #3 - Desk/shelf mounted lamp (with clip)\nClip (1)\nArms (n)\nNuts (n+1)\nLamp holder (1)\nHow-to: Start from the clip part. Attach the female arm (or a mixed arm) to the clip part using a knob. Connect the male arm (or another mixed arm) to the female on with another knob and attach the lamp holder to the other end of the male arm with another knob. Finally pass a LED spotlight through the lamp holder and put its connector. Your structure will be ready to be attached to the wall.\nRecipe #4 - Tube/post mounted lamp\nTube mount (1)\nBolt (1)\nWall joint (1)\nArms (n)\nNuts (n+2)\nLamp holder (1)\nHow-to: Start from the tube mount part. The bolt passes through the tube mount and the wall joint parts and is locked with a knob on its end. Attach the female arm (or a mixed arm) to the wall joint using a knob. Connect the male arm (or another mixed arm) to the female on with another knob and attach the lamp holder to the other end of the male arm with another knob. Finally pass a LED spotlight through the lamp holder and put its connector. Your structure will be ready to be attached to the wall.\n*n is the number of arms you want on your articulating lamp. In any of the recipes, you might add some wire holders (one for each arm), a button cap or a simple protective cap.\n\nBe careful when working with electricity. Make sure there is no short circuit and just try to connect to the electrical power plug after making sure that all components are properly connected and double insulated. If you don't have enough experience working with electricity, as for others help! Don't touch any exposed wire or any metal part of the LED lamp after it's energized! Some LED spots have a metal heat sink, and some GU10 connectors have exposed metal. Avoid touching that part when the lamp is on! If necessary, cover it with isolating materials!", "step_imgs": ["https://cdn.instructables.com/FIE/GT7U/JTT5HRLC/FIEGT7UJTT5HRLC.LARGE.jpg", "https://cdn.instructables.com/FUZ/LL91/JTT5HRNK/FUZLL91JTT5HRNK.LARGE.jpg", "https://cdn.instructables.com/FN2/0T5F/JTT5HRML/FN20T5FJTT5HRML.LARGE.jpg", "https://cdn.instructables.com/FF5/GS2E/JTT5HRI7/FF5GS2EJTT5HRI7.LARGE.jpg", "https://cdn.instructables.com/FMY/44E3/JTT5HRJ3/FMY44E3JTT5HRJ3.LARGE.jpg", "https://cdn.instructables.com/FAY/TGX8/JTT5HRKC/FAYTGX8JTT5HRKC.LARGE.jpg", "https://cdn.instructables.com/FF8/IX0I/JTT5HRII/FF8IX0IJTT5HRII.LARGE.jpg"], "step_title": "Step 7: Assembling - Suggested Recipes"}, {"step": 8, "steps_text": "It's done! Turn it on an let it shine!\nYou can adjust the angle between each component to make the spotlight aim the place you want to light up.\nHave suggestions on how to improve the design? Need aditional parts to be designed? Leave it on the comments bellow!\nIf you still don't follow my tutorials, take a look at those other projects in which I explain a little bit about internet of things, robotics and 3D printing. I hope you enjoy them too!\nPlease consider supporting my future projects with a small donation! :D\nBitcoin donation: Deposit Address = 1FiWFYSjRaL7sLdr5wr6h86QkMA6pQxkXJ\nPaypal donation: igorfonseca83@gmail.com\nThingiverse tip: https://www.thingiverse.com/igorF2/about", "step_imgs": ["https://cdn.instructables.com/F45/F18W/JTT5HNAZ/F45F18WJTT5HNAZ.LARGE.jpg", "https://cdn.instructables.com/FTH/RD05/JTT5HN9I/FTHRD05JTT5HN9I.LARGE.jpg", "https://cdn.instructables.com/FVA/N51G/JTT5HN9H/FVAN51GJTT5HN9H.LARGE.jpg", "https://cdn.instructables.com/FPB/6M2N/JTT5HN9Z/FPB6M2NJTT5HN9Z.LARGE.jpg", "https://cdn.instructables.com/FGC/YCWM/JTT5HNAG/FGCYCWMJTT5HNAG.LARGE.jpg", "https://cdn.instructables.com/FWY/8N30/JTT5HN9G/FWY8N30JTT5HN9G.LARGE.jpg", "https://cdn.instructables.com/F3T/KFAL/JTT5HNBG/F3TKFALJTT5HNBG.LARGE.jpg"], "step_title": "Step 8: End Notes"}], "channel": ""}, {"category": "", "description": "I want to start by saying that I am not a professional, I don\u2019t have any degrees in electronics. I simply enjoy working with my hands and figuring things out. I say that to be encouraging to all you nonprofessionals like me. You have the ability to do anything like this, all it takes is patience and research! My research was done through this website and YouTube.\nI have seen LED matrix's before like this one on Youtube\nand it sparked such excitement for me that I started thinking \u201cI can make something like that.\u201d I made my first LED matrix as a demo following an instuctables tutorial three years ago. Every time I looked at it I thought, \u201cI want to go bigger!\u201d My wife and I live in the Amazon basin of Ecuador but we had to temporarily relocate to city that's a little bit larger when my wife was going to give birth to our son. While living and working here we found out about \u201cNight to Shine\u201d.\nNight to Shine is a special night dedicated to people that are physically or mentally disabled. I\u2019m not trying to promote for this event, but it was something that I believed in and wanted to help support in anyway that I could. I built a LED wall stage backdrop to be something that added excitement to that night for these special guest attending the event.\nPs. If you like my Instructable tutorial please scroll to the bottom and vote for it in the contest!", "title": "Huge Flexible Transparent LED Matrix Under $150. Easy to Make.", "url": "https://www.instructables.com/id/Huge-Flexible-Transparent-LED-Matrix-Under-150-Eas-1/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts list:\n400x 4-Pin LED Chip & Heatsink 5V 5050 RGB WS2811 IC Built-in. $43.80\nhttps://www.ebay.com/itm/10-1000-4-Pin-WS2812B-WS2...\nAC 110-220V TO DC 5VOLT, 30AMP, Power Supply. $19.63\nhttps://www.ebay.com/itm/AC-110-220V-TO-DC-5V-12V-...\nDC 5-24V T1000S SD Card LED Pixel Controller For WS2812B LPD8806 WS2811 WS2801. $18.83\nhttps://www.ebay.com/itm/DC-5-24V-T1000S-SD-Card-L...\n50 meters of 3Pin Extension Wire Cable For WS2811. $15.88\nhttps://www.ebay.com/itm/2Pin-3Pin-4Pin-5Pin-Exten...\n3m x 5m Sheet of concrete reinforcement wire. (each wire 6 inches apart). $32.00\n3 rolls of electrical tape. $1.50\nHot glue sticks $3.25\nSolder for connections. $5.50", "step_imgs": ["https://cdn.instructables.com/F75/50BX/JTIYMEW0/F7550BXJTIYMEW0.LARGE.jpg", "https://cdn.instructables.com/FET/ACQJ/JTIYMEVE/FETACQJJTIYMEVE.LARGE.jpg"], "step_title": "Step 1: Gathering Parts"}, {"step": 2, "steps_text": "Using a fine tip soldering iron, first apply solder to each one of the LED chip contact points. (See example picture 1.)The great thing about these LEDs is that they are intelligent and they basically map out and number themselves when they are connected. This makes programming quite simple even for a beginner like me.\nYou need to use three pin wire to connect each LED together. I used a regular pair of wire cutters to strip all three wires simultaneously. They also sell strippers that can do this with ease.\nAfter your wires are stripped do you need to begin the tinning process on the wires. This keeps the wires from getting straggly (See example picture 2.) and facilitates connecting to the chip without any short circuits.\nTo tin the wires you simply touch the tip of the hot soldering iron to each wire and then touch the solder to the wire. The solder will then penetrate into the strands of each wire. As it cools, the wires will become rigid and uniform. (See example picture 3.)\nImportant note: as you solder the chips together to the wires. Make sure all the arrows on the chips are oriented the same direction. (These arrows show the data input direction)\nIf you have tinned the wires correctly and applied the proper amount of solder to each LED chip they\u2019ll be no need for additional solder as you connect them. All you simply need to do is place the wire on each side of the surface and apply the heat of the soldering iron to make the connection. (picture 4.)\nI created a template using a CNC mill cutting holes the exact size of the LED chips and then horizontal channels to connect it so that way as I strip the wires and solder them together I had a gauge on how long each wire should be. It was also because the chips are small and the board held them stationary as I soldered them.\nThis is the link to my CNC template design.\nhttp://easel.inventables.com/projects/ibMc1dJU_v7j...", "step_imgs": ["https://cdn.instructables.com/FEB/ZHD0/JTIYN55G/FEBZHD0JTIYN55G.LARGE.jpg", "https://cdn.instructables.com/FN2/7L9D/JTIYMEUE/FN27L9DJTIYMEUE.LARGE.jpg", "https://cdn.instructables.com/F7P/X96H/JTIYMEUG/F7PX96HJTIYMEUG.LARGE.jpg", "https://cdn.instructables.com/F2P/JZ5C/JTIYMEV7/F2PJZ5CJTIYMEV7.LARGE.jpg", "https://cdn.instructables.com/FRN/W6DM/JSKOWD63/FRNW6DMJSKOWD63.LARGE.jpg", "https://cdn.instructables.com/FCQ/LABZ/JSKOWD75/FCQLABZJSKOWD75.LARGE.jpg"], "step_title": "Step 2: Assembling LED Strands."}, {"step": 3, "steps_text": "As you solder and complete the connections on each LED it is a good idea to protect the contact points from damage and short circuits. This can be done by covering the backside with electrical tape. Yet, I found an easier solution using a hot glue gun to cover the back of each chip and partially covering the wires to make a strong partially flexible connection. I think it\u2019s better than electrical tape because it keeps the wires from breaking free from the solder connection.\nTip: I would suggest making each strand of led pixels twice the length of your pixel height. (My matrix was 16 pixels high so 32 pixels long was ideal for assembly.) I will explain this more in power and power injection step.", "step_imgs": ["https://cdn.instructables.com/FAT/28QU/JTIYMEVH/FAT28QUJTIYMEVH.LARGE.jpg", "https://cdn.instructables.com/FWG/CET6/JTIYMEVX/FWGCET6JTIYMEVX.LARGE.jpg", "https://cdn.instructables.com/F2O/J6AA/JSL33OQZ/F2OJ6AAJSL33OQZ.LARGE.jpg", "https://cdn.instructables.com/FZ9/Y4BO/JSL33OWZ/FZ9Y4BOJSL33OWZ.LARGE.jpg"], "step_title": "Step 3: Connection of LEDs Continued,"}, {"step": 4, "steps_text": "In an effort to simplify construction of a grid for the matrix I came across concrete reinforcement wire. It\u2019s great because it can be purchased in various sizes and wire spacing, it\u2019s also flexible so it can be formed into curves, cylinders, etc. Another reason I like it so much is that the wire is very thin, this gives the matrix a transparent effect because you can see through it easily.\nUsing electrical tape attach each LED strand to the reinforcement wire. Align every pixel chip with the intersection points of the steel wire.\nI used 6 inch wire. (Which means there was a pixel every 6 inches at each place where each wire intersects.) The structure of the wire keeps everything uniform. Honestly, I was in a hurry and so I think I did a sloppy job. Thankfully because of the uniform nature of the wire the matrix looked amazing! As long as all of the LED chips are aiming out the visual display will be uniform and stunning.", "step_imgs": ["https://cdn.instructables.com/F2J/B7IM/JSL33P1E/F2JB7IMJSL33P1E.LARGE.jpg", "https://cdn.instructables.com/FCY/FIEP/JTIYMEVS/FCYFIEPJTIYMEVS.LARGE.jpg", "https://cdn.instructables.com/FC3/ZKFW/JSL33OUP/FC3ZKFWJSL33OUP.LARGE.jpg", "https://cdn.instructables.com/FFO/JUZ0/JSKOWD5W/FFOJUZ0JSKOWD5W.LARGE.jpg", "https://cdn.instructables.com/FQH/8FVJ/JSL33OSS/FQH8FVJJSL33OSS.LARGE.jpg"], "step_title": "Step 4: Assembling the Structure,"}, {"step": 5, "steps_text": "I\u2019ve included a wiring diagram so you understand the purpose of the power injection. Each of the chips does create a small amount of resistance. So as you connect all these LEDs together eventually the power begins to dissipate. The result of this is the illumination of the LEDs begins to change color and fade. First the blue begins to go out causing the strand to have a yellow hue and then the green causing the color to transition to red. (Please see the picture I created to illustrate this problem.)\nThe solution to this problem is injecting power throughout the matrix. Each of the LED chips can receive positive and negative current entering the chip from either direction. You\u2019re only limitation is data wires need to be in sequence. The second picture shows the easiest way to resolve this problem. As I said before, it\u2019s beneficial to have each strand be twice the pixel height of the matrix. As you look at my wiring diagram you see that each loop is 32 pixels long. And the voltage is being injected to both ends of the strand. This caused all LEDs to have uniform brightness without the color dissipating.", "step_imgs": ["https://cdn.instructables.com/FL7/5P95/JTON5SZO/FL75P95JTON5SZO.LARGE.jpg", "https://cdn.instructables.com/FS9/4FKR/JTIYN5JG/FS94FKRJTIYN5JG.LARGE.jpg", "https://cdn.instructables.com/FYL/IVXA/JSL33OYZ/FYLIVXAJSL33OYZ.LARGE.jpg", "https://cdn.instructables.com/FIY/LGOW/JTIYMEVM/FIYLGOWJTIYMEVM.LARGE.jpg", "https://cdn.instructables.com/F2X/ZTLD/JSL33PA8/F2XZTLDJSL33PA8.LARGE.jpg"], "step_title": "Step 5: Power and Power Injection,"}, {"step": 6, "steps_text": "Testing is quite simple to ensure all your wiring is correct. I\u2019ve included a picture of the T1000S controller. When it is connected to the LED strand, it will begin to cycle through various colors and fades. (This will happen when the SD memory card is not inserted). Testing is simply confirming that all LEDs are lighting the same color at the same time. If there are any problems with the wiring or solder connections the light typically stops at that point that needs correction. Simply review your solder connections and confirm that wires are in their proper place without contacting to any other connection points.\nConnecting to the controller is simple. Simply connect your 5 volt power supply to the 5 volt screw head. From the negative side of the power supply connect to the ground screw head. The wire that you will connect to the matrix to supply the information is the Data line. With these three wires connected your matrix will function. (I additionally bridged another wire to the other side of the ground just for good measure).", "step_imgs": ["https://cdn.instructables.com/F1A/CMM1/JTON4BTY/F1ACMM1JTON4BTY.LARGE.jpg", "https://cdn.instructables.com/FTW/ZSQH/JSL33P9D/FTWZSQHJSL33P9D.LARGE.jpg"], "step_title": "Step 6: Testing and Programming"}, {"step": 7, "steps_text": "The Software downloads can be found at this link.\nhttp://www.ipixelleds.com/index.php?catid=7\nThe LED edit program is one of the simplest ways to create visual effects. There is no need to understand coding or even the complexity of the Neopixels. You simply record the program and export it to the SD card memory.\nI was limited with my creativity because some of the guest suffer from epileptic seizures therefore I had to be very conservative with how dramatic each effect would be.\nTo begin:\nIn the software interface click on \u201cFile\u201d and choose \u201cNew Project\u201d from the drop down list .\nAt this point it will be a window that shows all the controller options. I used the T1000S which is highlighted in the first picture. But the chips that I am using (neopixels) are the selection directly below it WS2811. After making your selection click \"OK\".\nNext you want to design the layout of your matrix. There is an auto configuration tool that will make this very easy. You simply input the number of vertical pixels and the number of horizontal pixels in select the data direction that matches the wiring diagram I posted in the earlier step.\nAnd now you are ready to record your visualizations!\nThe most simple way is to go to the video effects tab. There are lots of preloaded effects and that's what I used to my matrix. Again, I was somewhat limited on how dramatic I could make the effects because some of our guest suffered from epilepsy.\nSimply open any effect allow it to play in the window and when you see what you like click the record button. Just to the right you will see the number of frames ascending in numerical order. This is showing how many frames have been captured during the recording process.\nWhen you're satisfied with what you have captured, press \"stop recording\". The visual that is displaying the number of frames that has been captured will stop ascending.\nThe final step is to click export. In the file Will be created in saved at the location you designate. This file needs to be copied and pasted onto the SD card that is formatted as FAT and everything will work!\nIt's that simple!", "step_imgs": ["https://cdn.instructables.com/FEM/B3I0/JTON4DMR/FEMB3I0JTON4DMR.LARGE.jpg", "https://cdn.instructables.com/FZJ/E73Q/JTON4DMQ/FZJE73QJTON4DMQ.LARGE.jpg", "https://cdn.instructables.com/F9Q/1YOC/JTON4DMP/F9Q1YOCJTON4DMP.LARGE.jpg", "https://cdn.instructables.com/FUC/BMGY/JTON4DMM/FUCBMGYJTON4DMM.LARGE.jpg", "https://cdn.instructables.com/FUN/6L1M/JTON4DMK/FUN6L1MJTON4DMK.LARGE.jpg", "https://cdn.instructables.com/FP4/1JOJ/JTON4DML/FP41JOJJTON4DML.LARGE.jpg", "https://cdn.instructables.com/FRM/UO5U/JTON4DMJ/FRMUO5UJTON4DMJ.LARGE.jpg"], "step_title": "Step 7: Led Edit Program"}, {"step": 8, "steps_text": "Wasn't that easy?!\nAt this point everything is completed and you can power your matrix on! You can use the mode button on the controller to cycle through up to 16 programs you've created.\nThere are many other options for driving the matrix also. If you're more ambitious you can look into writing a code yourself and in putting that code through the data line into the matrix display. You can use any type of microcontroller that has a digital output for this task!\nI hope that you'll be inspired to do something like this for yourself or someone else. It only takes commitment to do something great!\nIf you have any questions please leave me a comment and I'll be happy to answer them.\nI appreciate you taking your time to read my instructable! If you liked it, vote for me below!", "step_imgs": ["https://cdn.instructables.com/FWW/YH1X/JTT5RNCF/FWWYH1XJTT5RNCF.LARGE.jpg", "https://cdn.instructables.com/FAL/YGR6/JTT5RNBZ/FALYGR6JTT5RNBZ.LARGE.jpg", "https://cdn.instructables.com/F1X/907C/JTIYMEW3/F1X907CJTIYMEW3.LARGE.jpg", "https://cdn.instructables.com/FDX/9BFX/JSL33PB4/FDX9BFXJSL33PB4.LARGE.jpg", "https://cdn.instructables.com/F5K/XXLL/JSL33P5A/F5KXXLLJSL33P5A.LARGE.jpg"], "step_title": "Step 8: Celebrate!  the Party Can Begin!"}], "channel": ""}, {"category": "", "description": "A bartop arcade build with the unique feature that the LED matrix marquee changes to match the selected game. The character art on the cabinet sides are laser cut inlays and not stickers.\nA big thanks to Tobias for posting the original laser cut CAD design for this project. This project leverages the design from Tobias with the following modifications:\nAn integrated PIXEL LED Matrix marquee that changes based on the selected game\nLaser cut design modified for a vertical mount monitor instead of horizontal (many classic arcade games are optimized for a vertically mounted monitor)\nLaser cut side art inlays\nAudio amp with volume control knob\nShutdown/Restart Button\nMaterial is Acrylic vs. Wood\nAll laser cut .SVG files, software scripts, LED GIF images and animations, wiring table, and artwork for this project are open source and here in GitHub.\nParts\n1x PIXEL Maker's Kit Arcade Bundle (includes PIXEL LED driver board, 64x32 P3 LED Matrix, and (7) 12mm dome pushbuttons) - $149\n1x Arcade Joystick - $24\n4x 30mm Arcade Buttons ($15, with Cherry D44X 75g .187\" Microswitch)\n1x 2.1mm Panel Mount DC Jack (.33\" mounting hole)\n1x Rocker On/Off Panel Mount Switches (you'll need 2 but the PIXEL:Maker's Kit comes with 1) - $1.17\n1x Raspberry Pi 3+ - $38\n1x microSD card (128 GB is a good size for this project) - $20\n1x Official Raspberry Pi Monitor - $74\n1x 5V, 10A Power Brick - $21\n1x Audio Amplifier - $14\n2x Mini Oval Speakers 35mm x 20mm - $10\n1x Stereo audio cable (right angle is better but normal will fit and is ok too) - $3\n2x USB Panel Mount Cable A-A - $16\n1x Right angle DC power jack - $2.50\n1x microUSB jack (use an old microUSB cable and chop off the large USB side)\n1x Bottle of India Ink - $5\n1x Mr. Clean Magic Eraser Sponge\nBlue Painter's Tape\nScrews, Nuts, Stand-Offs\n8x 4/40 x 3/16\" pan head screws (for maintenance ports)\n2x 4/40 x 7/16\" pan head screws ?\n7x M3 screws x 10mm\n4x M3 screws x 5mm (for joystick mounts)\n4x M3 square hex nuts (for joystick mounts)\n8x 2/56 x 1/2\" pan head screws black (for speakers)\n8x 2/25 nuts (for speakers)\n(4) Hex Stand-Off Aluminum, 1/4\" Hex, 5/8\" Long, 4-40 Thread\n2x 4/40 x 3/8\" Nylon Screws\n4x 4/40 Nylon Nuts\n4x rubber bumper pads for the bottom\nAcrylic & Glue\n5x 12x20\" Yellow Acrylic Sheet , 1/8\" thick - $48\n3x 12x20\" Black Acrylic Sheet , 1/8\" thick - $29\n1x 12x12 Transparent Light Smoke Acrylic Sheet, 1/8\" thick\nMisc colored sheets depending on desired arcade character inlays (optional)\nAcrylic Cement Glue\nAcrylic Cement for Capillary Application\nLow Density Polyethylene Bottle Applicator\nOptional\nKaptop tape (for securing the cables to the Pi header)\n1x USB Audio Adapter (this is not really needed, while the Pi audio is known to be poor, I can't really tell the difference with this one)\nDupont Female Pin Crimp Terminals 2.54mm Pitch (for making your own cables with DuPont connectors that plug into the Raspberry Pi GPIO 40-pin header but you can also just use off the shelf cables and splice them which is cheaper\nDupont Terminal Crimper\nTools\nLaser Cutter (I used a Glowforge with a 19.5\" x 11 cutting area)\n4/40 Tap Tool (for tapping eight 4/40 holes for the maintenance ports)", "title": "Vertical Bartop Arcade With Integrated PIXEL LED Display", "url": "https://www.instructables.com/id/Vertical-Bartop-Arcade-With-Integrated-PIXEL-LED-D/", "section": "technology", "steps": [{"step": 1, "steps_text": "LASER CUTTING SVG FILES HERE\nVERY IMPORTANT: Before you laser cut the acrylic for this project, be sure and have all parts on hands first and measure to ensure they fit the mounting holes in the laser .SVG files. Here are items in particular to check and adjust.\n1. 64x32 P3 HUB75 LED Matrix - The one used in this project I bought direct from China, not from Adafruit and different LED panel manufacturers have different mounting hole locations.\n2. Speakers - I did not use the speakers in the link and instead had some lying around my shop. The ones in the link I think are close but am not sure the mounting holes will line up exactly.\nI used a Glowforge laser cutter and all the .SVG laser cut files are sized for the cut size of the Glowforge at 19.5\" x 11\".\nAlso, there are lot of ways the laser cutting and assembling can go wrong resulting in scrap due to the complexity of the assembly & specific orientation steps so it's highly recommend to first laser cut and assemble in cardboard and then cut in acrylic after you've got it dialed in.", "step_imgs": ["https://cdn.instructables.com/FQD/RYQL/JTWS1BOB/FQDRYQLJTWS1BOB.LARGE.jpg", "https://cdn.instructables.com/FCN/0F6K/JTT5RJ8F/FCN0F6KJTT5RJ8F.LARGE.jpg", "https://cdn.instructables.com/F7W/LJBN/JTT5RJHM/F7WLJBNJTT5RJHM.LARGE.jpg", "https://cdn.instructables.com/FVE/O2ZB/JTT5RJID/FVEO2ZBJTT5RJID.LARGE.jpg", "https://cdn.instructables.com/FUA/OUSO/JTT5RJJ5/FUAOUSOJTT5RJJ5.LARGE.jpg", "https://cdn.instructables.com/FNH/J654/JTT5RJLS/FNHJ654JTT5RJLS.LARGE.jpg", "https://cdn.instructables.com/FXF/VF8L/JTT5RJNN/FXFVF8LJTT5RJNN.LARGE.jpg", "https://cdn.instructables.com/FBY/B659/JTT5RJRZ/FBYB659JTT5RJRZ.LARGE.jpg", "https://cdn.instructables.com/FWM/PYFH/JTWS1BKI/FWMPYFHJTWS1BKI.LARGE.jpg", "https://cdn.instructables.com/FKP/4C1O/JTWS1BMB/FKP4C1OJTWS1BMB.LARGE.jpg"], "step_title": "Step 1: Laser Cutting & Cardboard Assembly First"}, {"step": 2, "steps_text": "The maintenance port allows you to get to the electronics in the back if you ever need to in the future. This part is tricky, it's recommended to first assemble this in cardboard. Follow the steps in the video.", "step_imgs": [], "step_title": "Step 2: Back Maintenance Port"}, {"step": 3, "steps_text": "The bottom maintenance port allows you to get to the bottom of the arcade buttons and joystick to in the future. This part is tricky, it's recommended to first assemble this in cardboard. Follow the steps in the video.", "step_imgs": [], "step_title": "Step 3: Bottom Maintenance Port"}, {"step": 4, "steps_text": "Attach the Pi monitor and Raspberry Pi. Be sure and fit the Pi monitor on the frame without the slot.\nWhile waiting for the first layer to dry, add screws in the speaker holes to ensure alignment.\nNow is a good time to install RetroPie, the pre-built image you'll install on your Pi microSD card. At the end of the RetroPie install, you'll be prompted to configure inputs. Hook up a generic USB keyboard and use these keys:\nD-PAD UP - Up Arrow\nD-PAD DOWN - Down Arrow\nD-PAD LEFT - Left Arrow\nD-PAD RIGH - Right Arrow\nStart - A\nSelect - S\nA Button - Z\nB Button - X\nX Button - C\nY Button - V\nHold down any key to skip the rest of the keys until you get to Hotkey Enable\nHOTKEY - SPACE\nWhen you get to OK press the button you have configured as the A Button which in this case is \"Z\"", "step_imgs": ["https://cdn.instructables.com/FDV/4KLV/JRV8GGXF/FDV4KLVJRV8GGXF.LARGE.jpg", "https://cdn.instructables.com/FWO/BVP1/JRYURT7C/FWOBVP1JRYURT7C.LARGE.jpg", "https://cdn.instructables.com/F2D/PXWX/JRYURT7H/F2DPXWXJRYURT7H.LARGE.jpg", "https://cdn.instructables.com/F9H/X4C0/JRYURT7M/F9HX4C0JRYURT7M.LARGE.jpg", "https://cdn.instructables.com/FTZ/C1Y4/JRYURT7R/FTZC1Y4JRYURT7R.LARGE.jpg", "https://cdn.instructables.com/FWS/E9F0/JRYURT7W/FWSE9F0JRYURT7W.LARGE.jpg", "https://cdn.instructables.com/FP2/QB85/JRYURT83/FP2QB85JRYURT83.LARGE.jpg", "https://cdn.instructables.com/FJU/D0D9/JRYURT88/FJUD0D9JRYURT88.LARGE.jpg", "https://cdn.instructables.com/FNP/28ZW/JRYURT8D/FNP28ZWJRYURT8D.LARGE.jpg", "https://cdn.instructables.com/FYV/ZISH/JRYURT96/FYVZISHJRYURT96.LARGE.jpg", "https://cdn.instructables.com/F60/5WD1/JRYURT9H/F605WD1JRYURT9H.LARGE.jpg", "https://cdn.instructables.com/F2N/G8XK/JRYURT9M/F2NG8XKJRYURT9M.LARGE.jpg", "https://cdn.instructables.com/F76/2PWX/JRYURT9N/F762PWXJRYURT9N.LARGE.jpg"], "step_title": "Step 4: Pi Monitor Mount"}, {"step": 5, "steps_text": "Screw in the joystick to the bottom layer with the screws and square nuts. Do a test and place the top layer on top of the bottom layer and ensure you've engraved deep enough such that the two layers are flush. Then use acrylic cement to glue the two layers together and clamp.\nThe Sanwa joystick I got was default configured for 8-way. My interest is 80s arcade games which are mostly played with a 4-way joystick. So this is a good time to change from 8-way to 4-way which is easily done by moving a template piece on the bottom of the joystick, this video explains how to switch from 8-way to 4-way and vice-versa. Using the bottom maintenance port of the arcade machine, you can change back and forth later after everything is installed but space is limited and it'll be much easier to do that now.\nUse your the continuity tester on your multimeter and then label each wire on the Joystick (up, down, left, right).", "step_imgs": ["https://cdn.instructables.com/FYA/VWQQ/JRYURSEA/FYAVWQQJRYURSEA.LARGE.jpg", "https://cdn.instructables.com/F69/Z49K/JRYURSEB/F69Z49KJRYURSEB.LARGE.jpg", "https://cdn.instructables.com/F3O/SVXE/JRYURSEH/F3OSVXEJRYURSEH.LARGE.jpg", "https://cdn.instructables.com/F7Z/S4B2/JRYURSEO/F7ZS4B2JRYURSEO.LARGE.jpg", "https://cdn.instructables.com/F71/ATP5/JRYURSF4/F71ATP5JRYURSF4.LARGE.jpg", "https://cdn.instructables.com/FKV/73IO/JRYURSF6/FKV73IOJRYURSF6.LARGE.jpg", "https://cdn.instructables.com/FQI/Y7Q6/JRYURSFN/FQIY7Q6JRYURSFN.LARGE.jpg", "https://cdn.instructables.com/FZ5/KI71/JSITPWGY/FZ5KI71JSITPWGY.LARGE.jpg", "https://cdn.instructables.com/FQH/RWPC/JTT5R9F1/FQHRWPCJTT5R9F1.LARGE.jpg", "https://cdn.instructables.com/FF9/GYAI/JTT5R9KB/FF9GYAIJTT5R9KB.LARGE.jpg", "https://cdn.instructables.com/FSC/60U5/JTT5R9KE/FSC60U5JTT5R9KE.LARGE.jpg", "https://cdn.instructables.com/FR8/P137/JTT5R9KG/FR8P137JTT5R9KG.LARGE.jpg", "https://cdn.instructables.com/FCK/U66Z/JTT5R9KJ/FCKU66ZJTT5R9KJ.LARGE.jpg", "https://cdn.instructables.com/FJI/C6E8/JTT5R9N8/FJIC6E8JTT5R9N8.LARGE.jpg", "https://cdn.instructables.com/F0W/JCQB/JTT5R9PV/F0WJCQBJTT5R9PV.LARGE.jpg", "https://cdn.instructables.com/FIF/EI9R/JTT5R9PY/FIFEI9RJTT5R9PY.LARGE.jpg", "https://cdn.instructables.com/FHE/PM6Q/JTT5R9Q0/FHEPM6QJTT5R9Q0.LARGE.jpg", "https://cdn.instructables.com/F7B/JH7X/JTT5R9R6/F7BJH7XJTT5R9R6.LARGE.jpg", "https://cdn.instructables.com/FD6/F91O/JTT5R9WH/FD6F91OJTT5R9WH.LARGE.jpg", "https://cdn.instructables.com/FGH/HVP1/JTT5R9WI/FGHHVP1JTT5R9WI.LARGE.jpg", "https://cdn.instructables.com/FPK/8UIN/JTT5R9WK/FPK8UINJTT5R9WK.LARGE.jpg", "https://cdn.instructables.com/F4T/6ZD6/JTT5R9WN/F4T6ZD6JTT5R9WN.LARGE.jpg", "https://cdn.instructables.com/FFG/L458/JTT5R9WS/FFGL458JTT5R9WS.LARGE.jpg", "https://cdn.instructables.com/FV1/8J2D/JTT5R9WT/FV18J2DJTT5R9WT.LARGE.jpg", "https://cdn.instructables.com/FXX/98RA/JTT5R9WY/FXX98RAJTT5R9WY.LARGE.jpg", "https://cdn.instructables.com/FGJ/BWYF/JTT5RA2D/FGJBWYFJTT5RA2D.LARGE.jpg", "https://cdn.instructables.com/F8B/WM49/JTT5RA2I/F8BWM49JTT5RA2I.LARGE.jpg", "https://cdn.instructables.com/FBP/LXWP/JTT5RA2J/FBPLXWPJTT5RA2J.LARGE.jpg", "https://cdn.instructables.com/F0U/IQ2O/JTT5RA2K/F0UIQ2OJTT5RA2K.LARGE.jpg", "https://cdn.instructables.com/F4E/NXVN/JTT5RA3O/F4ENXVNJTT5RA3O.LARGE.jpg", "https://cdn.instructables.com/F90/KH45/JTT5RA4D/F90KH45JTT5RA4D.LARGE.jpg"], "step_title": "Step 5: Control Panel - Joystick and Buttons"}, {"step": 6, "steps_text": "Leave the acrylic masking tape on and brush paint India ink generously. Let the India ink dry for a couple of hours or longer.\nOnce dry, remove the acrylic masking tape and you'll be left with some residue to be removed. Take some strong duct tape like Gorilla duct tape and press it hard on the engraved text and then tear off. Repeat this a few times and most of the ink residue will be removed. Then use either a wet soft sponge or a Mr. Clean magic eraser sponge to take off the rest.", "step_imgs": ["https://cdn.instructables.com/F3T/8HXF/JTT5RWWH/F3T8HXFJTT5RWWH.LARGE.jpg", "https://cdn.instructables.com/FQH/G7KF/JTT5RX49/FQHG7KFJTT5RX49.LARGE.jpg", "https://cdn.instructables.com/FBI/FW6W/JTT5RWYY/FBIFW6WJTT5RWYY.LARGE.jpg", "https://cdn.instructables.com/F5J/04X7/JTT5RWUT/F5J04X7JTT5RWUT.LARGE.jpg", "https://cdn.instructables.com/FJV/IC07/JTT5RWVN/FJVIC07JTT5RWVN.LARGE.jpg"], "step_title": "Step 6: Front Panels Buttons and Inking Black Text"}, {"step": 7, "steps_text": "Refer to the wiring diagram schematics and make the power cable which will consist of a female DC jack which will then 4 way split to the Pi (microUSB connector), PIXEL:LED ART Board (right angle DC barrel jack connector), audio mini amp (hook-up wire), and LED light bar (hook-up wire). Find an old microUSB cable and cut off the large USB connector end and splice and solder to this power cable for the connection to the Pi.\nPut together a wiring table that maps each joystick direction and button to the corresponding pin on the Pi and assigned keyboard key. If you map to the same keys I did, then you can use the config files in the next steps out of the box.\nYou'll need female DuPont cables to connect to the 40-pin GPIO header on the Pi. I ended up making my own cables which was pretty fun but also a lot of work and you'll also need a crimper and the female DuPont terminals. It'll be faster and cheaper to just use stock female to female DuPont cables that you probably already having lying around and splice/solder them. If you do end up making your own DuPont cables, it turns out they are not easy to make, I found this YouTube video tutorial very helpful and was able to make them with ease after that.\nMake the cables for the buttons and joystick and don't connect to the Pi yet. You'll connect to the Pi in the next step. In general, each cable should be ~13 inches long, that will be long enough to reach the Pi when mounted. If you can, use a different color for each cable (use black for all GND) or label each cable which will make things easier in the next step.", "step_imgs": ["https://cdn.instructables.com/F4W/JPRH/JTT5R44Z/F4WJPRHJTT5R44Z.LARGE.jpg", "https://cdn.instructables.com/F68/9FO7/JTT5R46N/F689FO7JTT5R46N.LARGE.jpg", "https://cdn.instructables.com/FAG/5022/JTT5R4IF/FAG5022JTT5R4IF.LARGE.jpg", "https://cdn.instructables.com/FMC/AMUN/JTT5R48A/FMCAMUNJTT5R48A.LARGE.jpg", "https://cdn.instructables.com/F24/O1KZ/JTT5R3A8/F24O1KZJTT5R3A8.LARGE.jpg", "https://cdn.instructables.com/FIR/CFTJ/JTT5R3KB/FIRCFTJJTT5R3KB.LARGE.jpg", "https://cdn.instructables.com/FKU/5ZYY/JTT5R3P6/FKU5ZYYJTT5R3P6.LARGE.jpg", "https://cdn.instructables.com/FOK/N9T7/JTT5R3VG/FOKN9T7JTT5R3VG.LARGE.jpg", "https://cdn.instructables.com/FXA/GOQ3/JTT5R439/FXAGOQ3JTT5R439.LARGE.jpg", "https://cdn.instructables.com/FD0/DKTY/JTT5R3C5/FD0DKTYJTT5R3C5.LARGE.jpg", "https://cdn.instructables.com/F15/I221/JTT5R3I5/F15I221JTT5R3I5.LARGE.jpg", "https://cdn.instructables.com/FFJ/BNZR/JTT5R3EB/FFJBNZRJTT5R3EB.LARGE.jpg"], "step_title": "Step 7: Wiring"}, {"step": 8, "steps_text": "Go ahead and remove the acrylic masking tape on both sides now.\nFirst mount the PIXEL PCB board and then mount the LED panel on the other side. Pay attention to the orientation & make sure the LED panel is facing up matching the label on the acrylic mount.\nNext mount the screw in the lower right hand of the PIXEL board to the panel.\nMount the LED panel using (6) M3 x 8mm screws. Note the LED panels are threaded for M3 screws, 4/40 will not work.", "step_imgs": ["https://cdn.instructables.com/FOJ/GAFC/JTT5RIR3/FOJGAFCJTT5RIR3.LARGE.jpg", "https://cdn.instructables.com/F58/Z53H/JTT5RI3L/F58Z53HJTT5RI3L.LARGE.jpg", "https://cdn.instructables.com/F89/EEGI/JTT5RIBD/F89EEGIJTT5RIBD.LARGE.jpg", "https://cdn.instructables.com/FOF/NCL2/JTT5RIB8/FOFNCL2JTT5RIB8.LARGE.jpg", "https://cdn.instructables.com/FNP/M4RH/JTT5RHYW/FNPM4RHJTT5RHYW.LARGE.jpg", "https://cdn.instructables.com/FOL/YIVY/JTT5RHYX/FOLYIVYJTT5RHYX.LARGE.jpg", "https://cdn.instructables.com/FQJ/Z9WC/JTT5RI92/FQJZ9WCJTT5RI92.LARGE.jpg", "https://cdn.instructables.com/FXA/ZOTF/JTT5RIC8/FXAZOTFJTT5RIC8.LARGE.jpg", "https://cdn.instructables.com/FKH/NGQL/JTT5RI4P/FKHNGQLJTT5RI4P.LARGE.jpg", "https://cdn.instructables.com/FRI/2GIA/JTT5RINE/FRI2GIAJTT5RINE.LARGE.jpg", "https://cdn.instructables.com/F86/K892/JTT5RIRX/F86K892JTT5RIRX.LARGE.jpg"], "step_title": "Step 8: LED Matrix Panel Mounting"}, {"step": 9, "steps_text": "Now comes the fun part where you put everything together! But first mount all 6 buttons on the front red panel, the 4 arcade button and the joystick on the black control panel, and the power jack, toggle switches, and audio amp on the back panel. You won't be able to mount the buttons and joystick after the case is together due to lack of elbow room.\nFollow the pictures to assemble things together but do not glue anything yet and instead use some blue painter's tape to keep things together for now. Once you get to the picture labelled \"After you get here, connect wires to the GPIO Pi Header\", then start to connect the wires to the pins on the Pi header.\nFollow the table you put together in the previous step to connect each wire to the Pi header. It will be very cramped and not so easy to connect the pins to the Pi header so have patience.\nOnce you have everything connected, power the system up and do a full test that includes testing the joystick and every button. To test, we'll need to install a utility from Adafruit called Retrogame which converts the joystick and button inputs from the Pi's GPIO into keyboard inputs. By using Retrogame, you won't need a separate USB arcade keyboard emulator which is nice.\nFollow these instructions from Adafruit to install Retrogame. After you've installed Retrogame, then copy this retrogame.cfg file to the /boot directory on your Pi. The retrogame.cfg file here assumes you have followed the same keyboard mappings and pin connections in the wiring table from Step 8 - Wiring. If you have used different pins or keyboard mappings, no worries, just make the corresponding changes in retrogame.cfg. Chances are you've connected a pin or two wrong so just test every input and correct.\nThis tutorial guides you through how to setup the combined shutdown and restart button.\nOnce everything is working, now you're ready to make things permanent. If you happen to have some Kapton tape, that's a nice way to secure the Pi pins ensuring they won't come loose later. Wrap some Kapton tape around the pins and Pi header. But no worries if you don't, it should still be fine.\nNow turn the arcade on its side. At this point, you only have the left side installed, the right side is still open. Use your capillary action acrylic solvent applicator to glue the acrylic. Acrylic solvent works very quickly and will be sturdy in less than 5 minutes and does not need to be clamped. Here's a good primer on using acrylic solvent.\nAttach the pieces for the marquee (make sure to do this before adding the right side).\nNow attach the right side and glue that using the acrylic solvent.\nLastly, use a grinder or Dremel tool to grind down the left and right sides such that they are flush (the black notches may be sticking out a little bit). You'll want to do this so the outside pieces when attached will be nice and flush.", "step_imgs": ["https://cdn.instructables.com/FRT/FLT8/JTT5R79B/FRTFLT8JTT5R79B.LARGE.jpg", "https://cdn.instructables.com/F1F/I3DA/JTT5R7AI/F1FI3DAJTT5R7AI.LARGE.jpg", "https://cdn.instructables.com/F1D/ZNQE/JTT5R7BF/F1DZNQEJTT5R7BF.LARGE.jpg", "https://cdn.instructables.com/FI6/DJRI/JTT5R7CU/FI6DJRIJTT5R7CU.LARGE.jpg", "https://cdn.instructables.com/F79/F7XE/JTT5R7EF/F79F7XEJTT5R7EF.LARGE.jpg", "https://cdn.instructables.com/FZ2/5AGK/JTT5R7J3/FZ25AGKJTT5R7J3.LARGE.jpg", "https://cdn.instructables.com/FA8/MR4N/JTT5R7K5/FA8MR4NJTT5R7K5.LARGE.jpg", "https://cdn.instructables.com/F5H/EFBF/JTT5R7R0/F5HEFBFJTT5R7R0.LARGE.jpg", "https://cdn.instructables.com/F1I/YUYK/JTT5R7SY/F1IYUYKJTT5R7SY.LARGE.jpg", "https://cdn.instructables.com/FU2/2VGE/JTT5R7UX/FU22VGEJTT5R7UX.LARGE.jpg", "https://cdn.instructables.com/FHX/L66J/JTT5R7UY/FHXL66JJTT5R7UY.LARGE.jpg", "https://cdn.instructables.com/FHI/SI5Z/JTT5R7UZ/FHISI5ZJTT5R7UZ.LARGE.jpg", "https://cdn.instructables.com/FT5/AN52/JTT5R7V1/FT5AN52JTT5R7V1.LARGE.jpg", "https://cdn.instructables.com/FC0/KMV4/JTT5R7WH/FC0KMV4JTT5R7WH.LARGE.jpg", "https://cdn.instructables.com/FJL/SME4/JTT5R7X0/FJLSME4JTT5R7X0.LARGE.jpg", "https://cdn.instructables.com/FKF/FTTZ/JTT5R7YK/FKFFTTZJTT5R7YK.LARGE.jpg", "https://cdn.instructables.com/F21/MK77/JTT5R7TH/F21MK77JTT5R7TH.LARGE.jpg", "https://cdn.instructables.com/F6V/I04N/JTT5R7Z3/F6VI04NJTT5R7Z3.LARGE.jpg", "https://cdn.instructables.com/FLX/IPRO/JTT5R7GN/FLXIPROJTT5R7GN.LARGE.jpg", "https://cdn.instructables.com/FS3/7DN8/JTT5R808/FS37DN8JTT5R808.LARGE.jpg", "https://cdn.instructables.com/F9T/V7SY/JTT5R82V/F9TV7SYJTT5R82V.LARGE.jpg", "https://cdn.instructables.com/FPA/2AEM/JTT5R87E/FPA2AEMJTT5R87E.LARGE.jpg", "https://cdn.instructables.com/FXJ/RQKZ/JTT5R8A1/FXJRQKZJTT5R8A1.LARGE.jpg"], "step_title": "Step 9: Putting It All Together"}, {"step": 10, "steps_text": "The arcade character inlays are optional but a pretty nice effect if you've got the time. If not using the inlays, then you could also use a service like this to print some side art stickers or just leave the sides solid red which would still be nice.\nIf not using the inlays, then modify the left and right outside panels and delete the inlay outlines. If you want personalize with your own favorite arcade characters, here's a great resource for arcade sprites. Then it's a matter of isolating each color of the sprite and then tracing in a vector program like Illustrator or Inkscape. Warning, this is a good amount of work. If you want to stick with the characters I used, use this file to laser cut each color of each character.\nAs you laser cut each color of each character, lay them out on a table and only glue to the arcade side once you know everything fits together right. Chances are there will be some mistakes (I made a bunch) so if you glue too soon, you'll be in trouble as the acrylic solvent is permanent.\nAlso VERY IMPORTANT, you don't want to use yellow color for any of the inlay characters as the side panel is already yellow. So if your desired arcade sprite has yellow, then substitute another color.", "step_imgs": ["https://cdn.instructables.com/FPU/XC5W/JTT5RMSP/FPUXC5WJTT5RMSP.LARGE.jpg", "https://cdn.instructables.com/FAJ/OHXM/JTT5RMSQ/FAJOHXMJTT5RMSQ.LARGE.jpg", "https://cdn.instructables.com/FC8/9HLK/JTT5RMTF/FC89HLKJTT5RMTF.LARGE.jpg", "https://cdn.instructables.com/FFP/F1KH/JTT5RMWD/FFPF1KHJTT5RMWD.LARGE.jpg", "https://cdn.instructables.com/FE3/R73H/JTT5RMX5/FE3R73HJTT5RMX5.LARGE.jpg", "https://cdn.instructables.com/F1X/C92X/JTT5RMYB/F1XC92XJTT5RMYB.LARGE.jpg", "https://cdn.instructables.com/FAA/5RV6/JTT5RN0I/FAA5RV6JTT5RN0I.LARGE.jpg", "https://cdn.instructables.com/FGI/5UW5/JTT5RN1N/FGI5UW5JTT5RN1N.LARGE.jpg", "https://cdn.instructables.com/FDH/ZIDS/JTT5RN23/FDHZIDSJTT5RN23.LARGE.jpg", "https://cdn.instructables.com/F3L/JRX4/JTT5RN2W/F3LJRX4JTT5RN2W.LARGE.jpg", "https://cdn.instructables.com/FXG/SFDP/JTT5RN4D/FXGSFDPJTT5RN4D.LARGE.jpg", "https://cdn.instructables.com/FJ5/A8HB/JTT5RN54/FJ5A8HBJTT5RN54.LARGE.jpg", "https://cdn.instructables.com/FD3/S3KA/JTT5RN6J/FD3S3KAJTT5RN6J.LARGE.jpg", "https://cdn.instructables.com/FN9/6NPV/JTT5RN6K/FN96NPVJTT5RN6K.LARGE.jpg", "https://cdn.instructables.com/FOI/FJ3K/JTT5RN6L/FOIFJ3KJTT5RN6L.LARGE.jpg", "https://cdn.instructables.com/FGI/RFYE/JTT5RN7C/FGIRFYEJTT5RN7C.LARGE.jpg", "https://cdn.instructables.com/FT1/NOHW/JTT5RN9K/FT1NOHWJTT5RN9K.LARGE.jpg", "https://cdn.instructables.com/FM0/6TYP/JTT5RN9L/FM06TYPJTT5RN9L.LARGE.jpg", "https://cdn.instructables.com/FE6/QUBI/JTT5RNA0/FE6QUBIJTT5RNA0.LARGE.jpg", "https://cdn.instructables.com/F58/LFDX/JTT5RNBI/F58LFDXJTT5RNBI.LARGE.jpg", "https://cdn.instructables.com/F48/NBDG/JTT5RNBJ/F48NBDGJTT5RNBJ.LARGE.jpg", "https://cdn.instructables.com/FE3/HDGI/JTT5RNBK/FE3HDGIJTT5RNBK.LARGE.jpg", "https://cdn.instructables.com/F8G/B9KM/JTT5RNCE/F8GB9KMJTT5RNCE.LARGE.jpg", "https://cdn.instructables.com/FSD/DXYI/JTT5RNDZ/FSDDXYIJTT5RNDZ.LARGE.jpg", "https://cdn.instructables.com/FCO/MJ6B/JTT5RNEE/FCOMJ6BJTT5RNEE.LARGE.jpg", "https://cdn.instructables.com/FUL/A641/JTT5RNH3/FULA641JTT5RNH3.LARGE.jpg", "https://cdn.instructables.com/FAQ/KG9H/JTT5RNHK/FAQKG9HJTT5RNHK.LARGE.jpg", "https://cdn.instructables.com/FCV/86CU/JTT5RNJ8/FCV86CUJTT5RNJ8.LARGE.jpg", "https://cdn.instructables.com/FLW/VO5S/JTT5RNJA/FLWVO5SJTT5RNJA.LARGE.jpg", "https://cdn.instructables.com/F50/X0J3/JTT5RNJC/F50X0J3JTT5RNJC.LARGE.jpg", "https://cdn.instructables.com/FDW/LN8N/JTT5RNJE/FDWLN8NJTT5RNJE.LARGE.jpg"], "step_title": "Step 10: Left and Right Outside Panels & Arcade Character Inlays"}, {"step": 11, "steps_text": "Almost done! The last step is to add some scripts such that the PIXEL: LED ART display will change artwork automatically based on the selected game from RetroPie. Fortunately, RetroPie includes a hook called runcommand which is a user supplied bash shell script that runs prior to each game launching. So we'll add our own runcommand script that passes the current game to a command line Java program that the PIXEL: LED ART board uses (pixelc.jar) that writes an LED still image or animation GIF we specify per game. As your install may include many games, you can just pick the games you want to do a special LED design for and then write a generic LED design for all the other games. I've made custom GIFs for ~35 games so you can use this to start too. And if you make your own and are open to share, please do let me know (comment here or github pull request) and I'll add to the repo for others.\nCheck if Java 8 is installed on your Pi.\njava -version\nIf Java 8 is not installed:\nsudo apt-get update\nsudo apt-get install oracle-java8-jdk\nCopy the Java command line PIXEL: LED ART program called pixelc.jar to your Pi, download here. First create a directory on your pi called pixel.\nmkdir /home/pi/pixel\nTransfer pixelc.jar from your PC or Mac to your Pi\nscp /local-path-on-your-pc/pixelc.jar pi@your_raspberrypi_IP_address:/home/pi/pixel\nYou must have the Android only firmware installed on your PIXEL:LED ART board which is the default, the iOS/Android firmwares will not work. Double check that the PIXEL:LED ART board is USB connected to the Pi. Also ensure that the toggle switch on the PIXEL:LED ART board is facing the USB direction and not facing the BT direction. Check that your Pi detects the PIXEL:LED ART board.\nls /dev/ttyACM0\nAnd you should get back\n/dev/ttyACM0\nDownload runcommand-onstart.sh to your local PC. You'll modify this script for your needs and then copy over to your Pi. Let's first understand what this script is doing. The logic is the following:\n1. Sets the path where pixelc.jar is located. If you copied pixelc.jar in /home/pi/pixel, then leave this line as is\nPIXELPATH=\"/home/pi/pixel/\";\n2. Checks that the PIXEL:LED ART board is connected. If yes, we keep going and if no, the script terminates.\nif $pixelexists | grep -q '/dev/ttyACM0';\n3. RetroPie passes to this script in the form of a variable called $3 the path of the selected game rom which includes the rom name. So then we just use a long if statement to check for the games we're interested in and if there is a match, we tell the script what GIF file we want to write before launching the rom. In the example script below, if the rom path contains \"galaga\", then we'll write galaga.gif. If the rom path contains \"pacman\", then we'll write pacman.gif. You will need to have copied galaga.gif and pacman.gif to the same directory as pixelc.jar, so copy them to /home/pi/pixel . Since this particular installation uses a 64x32 LED display, your GIFs for galaga.gif and pacman.gif should both be 64x32. pixelc.jar will automatically resize your GIFs if they are not 64x32. They can be either single image GIFs or multi-frame GIF animations. Keep in mind that the longer the GIF animation, the longer it will take to write meaning you'll want to make your animations fairly short or it will take longer to load your game. Here is a sample of the contents of your /home/pi/pixel folder which works with all the sample scripts shown here and also here are some more GIFs you can use and please do a pull request if you do your own to share with others.\nROMPATH=$3\nif [[ $ROMPATH == *\"galaga\"* ]];\nthen echo \"galaga match\" >&2\nGAMEIMAGE=\"galaga.gif\"\nelif [[ $ROMPATH == *\"pacman\"* ]];\nthen echo \"pacman match\" >&2\nGAMEIMAGE=\"pacman.gif\"\n4. Then we end the if statement with this which means if the game launched didn't match any of the roms we were looking for, then just write a default GIF, in this case cherry.gif\nelse echo \"no game match\" >&2\nGAMEIMAGE=\"cherry.gif\"\nfi\n5. This last command in the script does the actual write to the LED display where the GAMEIMAGE variable was set within the if statement.\njava -jar pixelc.jar --gif=$GAMEIMAGE --adafruit64x32 --write\nSo go ahead and modify per your needs and also copy your corresponding GIFs to /home/pi/pixel and then copy your version of runcommand-onstart.sh to /opt/retropie/all/\nscp /local-path-on-your-pc/runcommand-onstart.sh pi@your_raspberrypi_IP_address:/opt/retropie/all/\nMake the script executable\nsudo chmod +x runcommand-onstart.sh\nHere is the script for the combined shutdown / restart button.\nSince this installation is for a vertical orientated monitor, you'll want to get a vertical theme for RetroPie which is a theme available from RetroPie, info here.", "step_imgs": ["https://cdn.instructables.com/FV5/6NAU/JTT5RCOR/FV56NAUJTT5RCOR.LARGE.jpg"], "step_title": "Step 11: Software Scripts for the The PIXEL: LED ART Matrix Integration"}], "channel": ""}, {"category": "", "description": "Together, we can reforest the world.\nDrone technology combined with native coated seeds will revolutionize the efficiency of ecosystem restoration. We created a set of open sourcetools, to use drones for sowing seedballs of wild seeds with efficient microorganisms for ecological restoration,making easier the seeding at industrial scale and low cost.\nDrones can analyze the terrain and sow with precision hectares in minutes. Sowing a combination of thousands of trees and herbaceous for carbon fixation, turning every seed into a winner, making green large-scale landscapes at low cost, with the power of open-source and digital fabrication.\nWe share this technology to individuals, ecologist teams and restoration organizationsaround the world, for dramatically improve the traditional forest seeding.\nDronecoria represents a new area of symbiotic devices, produced by biological and technological processes, revealing the potential impact of interaction between ecologies and robotic systems on critical environments. Relies on mechanisms borrowed from cybernetics, robotics and permaculture, to sow seeds from affordable wooden made drones. Allowing accurately positioning of each new seedling, increasing the chance of survival.\nSpecs:\nTotal weight without payload: 9,7Kg.\nFlying time without payload: 41min.\nMaximum payload: 8kg of seeds.\nAutonomy: Can sow in autopilot one hectare in 10 minutes, around 5 seeds by square meter, with a speed of 5 m/s.\nProduction cost: 1961,75 US$\nLicense:\nAll files are licensed with Creative Commons BY-SA, this perfectly allow to make profit with this project (please do it!) You only are required to give us attribution (dronecoria.org), and if you made any improvement, you should share it with the same license.", "title": "Dronecoria: Drone for Forest Restoration", "url": "https://www.instructables.com/id/Dronecoria-Drone-for-Forest-Restoration/", "section": "technology", "steps": [{"step": 1, "steps_text": "Attention:\nIf this is the first drone you make, we recommend to start with smaller and safer drones, like the wooden, small, and also open source drone: flone intructable. Dronecoria is too powerful to be your first drone!\nWhere to Build/Buy:\nThe cost of the complete drone with two batteries, and a radio controller is less than 2000 US$. You should look for a laser cut service for cutting the wood, and a 3D printing service for the sowing mechanism. Good places to ask should be FabLab's and MakerSpaces.\nWe place here the links to different online stores like Banggood, Hobbyking, or T-Motor, where to buy the components, most of them you can also found them on eBay. Keep in mind that depends on your country, you will be able to find a closer or cheaper supplier.\nPlease check the right legal frecency of the telemetryradio for your country, normally is 900 Mhz for America and 433Mhz for Europe.\nOur batteries of 16000 mAh allowed the aircraft to fly without payload for 41 minutes, but due to the nature of the operations, fly to an area, deliver the seeds as soon as possible (it takes 10 minutes around), and land, smaller and lighter batteries are also recommended.\nAirframe\nPlywood 250 x 122 x 0,5 cm $28\nElectronics\nMotors:T-Motor P60 170KV 6 x $97.11\nESC:Flame 60A 6 x $90\nPropellers:T-MOTOR Polymer Folding 22\"Propeller MF2211 3 x $55\nBatteries:Turnigy MultiStar 6S 16000mAh 12C LiPo Battery 2 x $142\nFlight Controller:HolyBro Pixhawk 4 & M8N GPS Module Combo 1 x $225.54\nTelemetry:Holybro 500mW Transceiver Radio Telemetry Set V3 for PIXHawk 1 x $46.36\nServo (Seed control): Emax ES09MD 1 x $9.65\nVarious\nBattery connector AS150 anti-spark 1 x $6.79\nMotor connector MT60 6 x $1.77\nMotor screws M4x20 (Alternative) 3 x $2.42\nHeat Shrink Tubing Insulation 1 x $4.11\nBlack and Red cable 12 AWG 1x $6.83\nBlack and Red cable 10 AWG 1 meter x $5.61\nBattery strap 20x500mm 1 x $10.72\nAdhesive Velcro Tape $1.6\nRadio transmitter iRangeX iRX-IR8M 2.4G 8CH Multi-Protocol w/ PPM S.BUS Receiver - Mode 2 1 x 55$\nTotal: 1961,75 US$\nPossible customs expenses, TAX or shipping costs, are not included in this budget.", "step_imgs": ["https://cdn.instructables.com/FGE/ZY3L/JTON1JKI/FGEZY3LJTON1JKI.LARGE.jpg", "https://cdn.instructables.com/FSJ/BVYE/JTT5MKE2/FSJBVYEJTT5MKE2.LARGE.jpg"], "step_title": "Step 1: Acquire the Materials"}, {"step": 2, "steps_text": "In this step we will follow the process of build and assemble the frame of the drone.\nThis frame is made in plywood, like historic radio controlled planes, this also means, that can be repaired with glue, and is compostable if there is an accident and brakes.\nPlywood is a very good material, allowing us to make a lightweight drone and low-cost. Weights 1.8 kg and can cost a couple of hundreds dollars, instead of thousands.\nDigital fabrication allow us an easy replication, and sharing the design withyou!\nIn the video, and the attached instructions, you will see how it looks the process of mounting the frame.\nFirst you should download the files and find a place with a laser cutter to cut them. Once si done, this are the main assembling steps:\nYou need to get use with the pieces, every arm is identified by numbers. To start building the arms, order the pieces of every arm.\nStart assembling the upper part of each arm. glue or use zipties to get the connection strong.\nDo the same with the lower part of the arms.\nBlend this last part to fit the rest of the arm.\nFinish the arms adding the landing gear.\nFinally, use the top and bottom plates to put all arms together.\nAnd that\u2019s it!\nIn the next step, you will learn how to mount the 3D Printed part to drop the seeds, we wait for you there!", "step_imgs": ["https://cdn.instructables.com/F9O/N140/JTCRJWC8/F9ON140JTCRJWC8.LARGE.jpg", "https://cdn.instructables.com/F42/0CJR/JTCRJYS7/F420CJRJTCRJYS7.LARGE.jpg", "https://cdn.instructables.com/FZI/M33H/JTT5MMP2/FZIM33HJTT5MMP2.LARGE.jpg", "https://cdn.instructables.com/FTR/X1MA/JTT5MMMZ/FTRX1MAJTT5MMMZ.LARGE.jpg", "https://cdn.instructables.com/FDW/3WT0/JTT5JX5D/FDW3WT0JTT5JX5D.LARGE.jpg"], "step_title": "Step 2: Cut and Ensemble the Airframe"}, {"step": 3, "steps_text": "We designed a 3D printed seed-release system, that can be screwed to any PVC water bottle like a tap, for use plastic bottles as a seed containers.\nBottles can be used as a low weight - low cost, recipient of Nendo Dango seed balls, as a payload for drones. The release mechanism is in the neck of the bottle, the servo motor controls the opened diameter, allowing the automatic open and control, of the rate of sowing of the seeds failing out of the bottle.\nThis are the materials that you will need:\nA plastic bottle with big bottleneck.\nThe 3D printed mechanism.\nA ziptie.\nFive M3x16mm Screws and Nuts,\nA screwdriver.\nA servo.\nSomething to connect to the servo, like a flight controller, radio receiver, or servo tester.\nFor aerial vehicles we recommend digital servos, because the digital circuit filters the noise, reducing battery consumption, extending flight time, and not producing any electronic noise that can affect the flightcontroller.\nWe recommend the EMAX ES09MD servo, have a good quality/price balance, and includes metallic gears.\nYou can order online the parts in Shapeways, or download and print the parts by yourself.\nThe assembly is very simple:\nJust place the ring over the screw piece.\nScrew one by one each of the screws, attaching the small pieces to the main body, placing the nuts at the end.\nPlace the servo in his place, fixing it with the zip tie. Is recommended to use also the screw that comes with the servo, to fix it more firmly.\nFit the gear to the axis of the servo. (In the video is glued, but it's not any more necessary.\nTo test it: connect the servo to a servo tester, and drop some seeds :)\nFeel free to check the v\u00eddeo, to see the assembling process in detail !", "step_imgs": ["https://cdn.instructables.com/F76/JRNU/JS8TEU9R/F76JRNUJS8TEU9R.LARGE.jpg", "https://cdn.instructables.com/FT4/BEHN/JTT5HOCE/FT4BEHNJTT5HOCE.LARGE.jpg", "https://cdn.instructables.com/FMU/9O9A/JS8TEUD6/FMU9O9AJS8TEUD6.LARGE.jpg", "https://cdn.instructables.com/FPM/3DY0/JTON1ENE/FPM3DY0JTON1ENE.LARGE.jpg", "https://cdn.instructables.com/FB1/DT61/JTON1HVM/FB1DT61JTON1HVM.LARGE.jpg"], "step_title": "Step 3: 3D Print and Ensemble the Seed Dispenser"}, {"step": 4, "steps_text": "Once the frame, and the sowing mechanism are assembled, is time to do the electronic part.\nWARNING!\nDo the soldering properly, made a bad connection can have catastrophic consequences, like the totally loose of the aircraft, or accidents.\nUse a generous quantity of solder since some wires will support high amperages.\nOnly connect the batteries when all safety checks are done. You should check (with a tester) that there are not short-circuits between wires.\nNever put the propellers until everything is well configured. Placing the propellers is ALWAYS the last step.\nFor this part of the process, you should have all the electronic components:\n6 Motors P60 179KV.\n6 ESC Flame 60A.\n2 LiPo Batteries 6S.\n1 FlightBoard Pixhawk 4\n1 GPS Module.\n2 Radio Telemetry Transceivers.\n1 Radio Receiver.\n2 AS150 Battery connectors.\n6 MT60 three wire connector.\nBattery strap.\n1 meter Black cable 12 AWG\n1 meter Red cable 12 AWG.\n1 meter Black cable 10 AWG\n1 meter Red cable 10 AWG.\n24 screws for the motors. M4 x 16.\nAnd some tools like:\nSolder & soldering iron.\nHeat Shrink tubing insulation\nAdhesive tape.\nVelcro\nThird hand for soldering.\nDouble sided tape.\nSo let\u2019s go!\nMotors and ESC\nFrom each motor there is three cables, to avoid electromagnetic interferences with the rest of the electronic equipment, is a good idea to plait the wires, in order to reduce this interferences, also the length of this connection should be as short as possible.\nThis three cables from the motors should be wired to the three cables of the ESC, the order of this wires depends the final direction of the motors, you should swap two wires to change the direction. Check the scheme for the right direction of each motor.\nTo make the final wiring you can use the MT60 with the three connectors: solder the cables from the motor to the male connector, and the three wires from the ESC to the female connector.\nJust repeat this 6 times for each couple Motor-ESC.\nNow you can screw the motors to each arm using the M4 screws. Place also the ESC\u2019s inside the frame and connect each motor with the corresponding ESC.\nFlight Controller\nUse a double sided vibrating isolation tape to place the flight board to the frame, is important that you use a right tape in order to isolate the board from vibrations. Check that the arrow of the flight board is in the same direction of the arrow of the frame.\nPower Distribution Board.\nThe PDB is the electric hearth of the drone that powers every element. All ESC are wired there to get the voltage from the Battery. This PDB has integrated a BEC to power all elements that require 5V, like the flight controller and the electronics. Also mesure the electric consumption of the aircraft in order to know the battery left.\nSolder the battery connectors to the PDB.\nThe P60 motors that we use are designed to work in 12S (44 Volts) since our batteries are 6S, they should be connected in serial for adding the voltage of each one. Each battery has 22.2 Volts, if we connect the batteries in series we will obtain 44.4 V.\nThe easiest way to wire batteries in serie is with the AS150 connector, this allow us to connect directly one battery to the other and the positive and negative of each battery to the PDB.\nIf your battery have a different connector, you can easily change the connector to the AntiSpark AS150 or use an adapter.\nStart soldering the 10 AWG wires to the PDB, use sufficient cable to arrive from the position of the PDB to the batteries. Then finish soldering the AS150 connectors. Please take care of the right polarity.\nSolder ESC\u2019s to the PDB.\nThe energy from the batteries go directly to the PDB, and then from the PDB the power goes to the six different ESC. Start placing the PDB in their designed place and screw it or use velcro to fixit to the frame.\nSolder the two wires, positive and negative of each ESC to the PDB with the 12 AWG wire, this PDB can support up to 8 motors, but we will use the connections only for six motors, so solder ESC by ESC, positive and negative, to the PDB.\nEach ESC comes with a three wire conector, you would pick the white wire of signal of this connector and solder it to the specified position in the PDB.\nFinally, wire the PDB with the designed port to the flight board,\nGPS & Arm Button & Buzzer\nThis GPS has integrated a button to arm the aircraft and a buzzer to trigger an alarm or beep different signals.\nPlace the base of the GPS in the marked position and screw it to the frame, take care of build a solid attachment without vibrations or movement, then connect it to the flightboard with the specified cables.\nTelemetry\nTypically you will need a pair of devices, one for the aircraft and one for the ground station. Place one telemetry transceiver in the desired position and use velcro or double sided tape to fix in their position. Connect it to the flight board with the specific port.\nRadio Receiver\nPlace the radio receiver in the designed place, fixing it with velcro or double sided tape, then put the antenas as far away as possible, and attach them safely to the frame with tape. Wire the receiver to the flight board as you can see in the scheme.", "step_imgs": ["https://cdn.instructables.com/F79/UQQV/JTT5PA73/F79UQQVJTT5PA73.LARGE.jpg", "https://cdn.instructables.com/F6L/MCJK/JTT5IDHM/F6LMCJKJTT5IDHM.LARGE.jpg", "https://cdn.instructables.com/FF1/JLB3/JTT5IE0P/FF1JLB3JTT5IE0P.LARGE.jpg", "https://cdn.instructables.com/FSA/QHJO/JTT5IDFV/FSAQHJOJTT5IDFV.LARGE.jpg", "https://cdn.instructables.com/F7C/AQNW/JTT5KGY1/F7CAQNWJTT5KGY1.LARGE.jpg", "https://cdn.instructables.com/F4L/LA0T/JTT5MVZI/F4LLA0TJTT5MVZI.LARGE.jpg", "https://cdn.instructables.com/FXC/MYLL/JTT5KFTH/FXCMYLLJTT5KFTH.LARGE.jpg", "https://cdn.instructables.com/FV7/FK03/JTT5OPVX/FV7FK03JTT5OPVX.LARGE.jpg", "https://cdn.instructables.com/F98/42BU/JTT5OPVY/F9842BUJTT5OPVY.LARGE.jpg", "https://cdn.instructables.com/FHK/WP1A/JTT5MYOV/FHKWP1AJTT5MYOV.LARGE.jpg", "https://cdn.instructables.com/F4I/WJ7P/JTT5PA6F/F4IWJ7PJTT5PA6F.LARGE.jpg", "https://cdn.instructables.com/F9S/JIKU/JTT5PA6N/F9SJIKUJTT5PA6N.LARGE.jpg", "https://cdn.instructables.com/FF3/AHU4/JTT5PA6V/FF3AHU4JTT5PA6V.LARGE.jpg"], "step_title": "Step 4: Electronics"}, {"step": 5, "steps_text": "Tip:\nWe made this Instructable as complete as possible, with the essential instructions needed to have the flight controller ready to fly. For the full configuration, you can always consult the official documentation of the Ardupilot / PixHawk projects, in case of something is unclear or the firmware is updated to a new version.\nFor do this step you should have internet connection to download and install the required software and firmware.\nAs a ground station, to configure and execute flight plans in arducopter-based vehicles, you can use APM Planner 2 or QGroundControl, both works well in all platforms, Linux, Windows and OSX. (QGroundControl even in Android)\nSo the first step will be download and install the Ground Station of your choose to your computer.\nDepending of your operating system maybe you need to install a extra driver to connect to the board.\nOnce is installed, connect the flight controller to your computer via the USB cable, select Install Firmware, as airframe, you should select the hexacopter drone with + configuration, this will download the last firmware to your computer and upload-it to the drone. Don\u2019t interrupt this process or disconnect the cable meanwhile the upload.\nOnce the firmware is installed, you can connect to the drone, and do the configuration of the aircraft, this configuration should be done only one time or every time that a new firmware is upgraded. Since is a big aircraft, could be better to configure first the connection with a wireless link with the telemetry radios to easy move the drone without a wired cable.\nRadio Telemetry connection.\nConnect the USB-Radio to your computer, and power on the drone using the batteries.\nThen, connect also the batteries to the drone, and click on connect in the Ground Station, depending of your operating system a different port can appear by default, normally with the Port in AUTO, a solid connection should be done.\nIf not ,check that you are using the right port, and the right speed in this port.\nESC Calibration.\nIn order to configure the ESC\u2019s with the minimum and maximum Throttle value, an ESC calibration should be performed. The easiest way to do this is through Mission Planer, clicking on ESC Calibration and following the steps on the screen. If you have doubts you can check section of ESC calibration in the official documentation.\nCalibration of the accelerometer.\nTo calibrate the accelerometer you will need a flat surface, then you should click in the button of Calibrate Accelerometer and follow the instructions on the screen, they will ask you to put the drone in different positions and press the button each time, the positions should be level, on the left side, on the right side, nose up and nose down.\nCalibration of the magnetometer.\nTo calibrate the magnetometer, once the button Calibrate Magnetometer is pressed, you should move the full aircraft 360 degrees in order to do a full calibration, the screen will assist you in the process, and alert you when is done.\nPair to the radio receiver.\nFollow the instructions of your radio controller to bind the emitter and the receiver. Once the connection is done you will see the signals arriving to the flight controller.\nConfiguring the servo for seed release\nThe seed release system, for the flight controller, can be configured as a camera, but instead of take a photo, drop seeds :)\nThe camera configuration is under Trigger Modes, different modes are supported, just select the one woks better for your mission:\nWorks like a basic intervalometer that can be enabled and disabled. Automatic open and close.\nSwitches the intervalometer constantly on. The drone is always dropping seeds. Maybe not so useful since we will lost some seeds during take off.\nTriggers based on distance. Will be useful in manual flights to drop seeds with specific frequency on the ground with independence of the speed of the aircraft. The system opens the door every time the set horizontal distance is exceeded.\nTriggers automatically when flying a survey in Mission mode. Useful to plan the places to drop the seeds from the Ground Station.\nOur frame works well with the standard configuration, so no specific configuration needs to be done.", "step_imgs": ["https://cdn.instructables.com/FE6/JR02/JTT5Q3WJ/FE6JR02JTT5Q3WJ.LARGE.jpg", "https://cdn.instructables.com/FBO/JGUJ/JTT5Q3WI/FBOJGUJJTT5Q3WI.LARGE.jpg", "https://cdn.instructables.com/FKQ/UZJZ/JTT5Q3XS/FKQUZJZJTT5Q3XS.LARGE.jpg", "https://cdn.instructables.com/FIV/0W6V/JTWSC77R/FIV0W6VJTWSC77R.LARGE.jpg"], "step_title": "Step 5: Software Configuration"}, {"step": 6, "steps_text": "Mapping the Territory.\nAfter a fire, or to recover a degraded area, the first step would be to perform a damage assessment and document the current state before any intervention. For this task drones are a fundamental tool because they document faithfully the state of the land. To perform these tasks we can use a conventional drone, or cameras that capture the near infrared that will able us to see the photosynthetic activity of the plants.\nThe more infrared light reflected, the plants will be healthier. Depending on the amount of terrain affected, we could use multirotors, which can have a mapping capacity of about 15 hectares per flight, or opt for a fixed wing, which could map up to 200 hectares in a single flight. The resolution to choose depends on what we want to observe. To perform a first evaluation, with resolutions of 2 to 5 cm per pixel would be sufficient.\nFor further evaluations, when looking to check the evolution of seed sown in an area, it may be advisable to perform samplings with resolutions around 1 cm/pixel to see the growth.\nFlight around 23 meters of altitude will get 1cm/pixel and flights at 70 meters will obtain a resolution of 3 cm/pixel.\nTo make the Orthophoto and digital model of the terrain, we can use free tools like PrecissionMapper or OpenDroneMap that is also Free Software.\nOnce the orthophoto is done, please upload it to Open Aerial Map, to share with others the state of the land.\nAnalysis and classification of the Territory\nWhen we have rebuilt the orthophoto, this image, usually in geoTIFF format, contains the geographical coordinates of each pixel, so any recognizable object in the image has associated its 2D, latitude and longitude coordinates in the real world.\nIdeally, to understand the territory, we should also work with 3D data and analyze its elevation characteristics, with the aim of locating the ideal places to sow.\nSurface Classification and segmentation\nThe area to be reforested, the density and type of species will be determined by a Biologist, Ecologist, Forestry Engineer, or professional of the restoration, and also by legal or political questions.\nAs approximate value, we can point to 50,000 seeds per hectare, this would be 5 seeds per square metre. This surface to be sown will be circumscribed within the previously mapped area. Once determined the potential area to be reforested, the first necessary classification would be differentiate the real area to sow, and where not.\nYou should identify as NON-sowing zones:\nInfrastructures: Roads, constructions, roads.\nWater: Rivers, lakes, flooded areas.\nNon-fertile surfaces: rocky areas, or with large stones.\nInclined Land: with a slope greater than 35%.\nSo this first step would be to make the segmentation of the territory to the areas to perform the seeding.\nWe could sow filling these areas, producing a vegetation cover, avoid erosion and begin as soon as possible with the recovery of the soil.\nSowing with drones\nOnce we have constructed these polygons where to sow, to make a complete filling of the surface with seeds, we should know the sowing width path that can open the Seeder drone, and the height of flight established, to make a complete tour of the territory, with a separation between paths of this known width.\nThe speed will also determine the number of seeds per square metre, but we will try to maximize the speed, to minimize the flight time and to carry out the sowing operation per hectare in the minimum possible time. Assuming that we fly at 20 km/hour this would be about 5 meters per second, if we have a path width of 10 meters, in one second would cover a surface of 50 square meters, so we should throw 250 seeds per second to cover the target raised 5 seeds per squared meter.\nWe hope that you will have nice flights restoring ecosystems.\nWe need you for fight against wild fires.\nIf you arrived here, you have in your hands a very powerful tool, a drone capable of reforest an hectare in just 8 minutes. But this power is a big responsibility, use ONLY NATIVE SEEDS for not make any interference with the ecosystem.\nIf you want to collaborate, have issues to be resolved, or you have good ideas to improve this project, we are organized in the wikifactory site, so please use this platform to grow the project.\nThanks again to help us to make a greener planet.\nDronecoria Team.\n\nThis manual is made by:\nLot Amor\u00f3s (Aeracoop)\nWeiwei Cheng Chen (PicAirDrone)\nSalva Serrano (Ootro Studio)", "step_imgs": ["https://cdn.instructables.com/FLN/MJYV/JTIXB8F9/FLNMJYVJTIXB8F9.LARGE.jpg", "https://cdn.instructables.com/FBZ/1QWT/JTIXB88F/FBZ1QWTJTIXB88F.LARGE.jpg", "https://cdn.instructables.com/F11/LVTI/JTIXB89M/F11LVTIJTIXB89M.LARGE.jpg", "https://cdn.instructables.com/FT3/LIJH/JTIXB8F4/FT3LIJHJTIXB8F4.LARGE.jpg", "https://cdn.instructables.com/FOD/6E06/JT2SNTQM/FOD6E06JT2SNTQM.LARGE.jpg"], "step_title": "Step 6: Fly and Perform Reforestation Projects!"}, {"step": 7, "steps_text": "Powerful Seeds (Semillas Poderosas) is a project that we made to make accessible the knowledge around the organic seed coating, putting light on the type of ingredients and the production methodology with low-cost materials.\nIn the recovery of degraded land, whether by fires or infertile soils, seed pelletizing can be a key factor in improving the sowing and reducing seed costs and environmental needs.\nWe hope that this information will be useful for farmers and conservationists to make restoration projects, pelletizing their seeds themselves, increasing the viability of the seeds, ensuring that the seeds will be protected against fungi and predators during germination, adding microbiology for an increasing soil fertility.\nWe have developed this tutorial using a conventional cement mixer, and a water sprayer to pelletize large quantities of seeds. To pelletize smaller seeds, a bucket can be applied to the mixer. Our 3-layer method:\nFirst Layer:Bioprotection. Natural compounds that allow to protect the seed against harmful agents such as fungi and bacteria. The main natural fungicides are: garlic, nettle, ash,horsetail, cinnamon, diatom.\nSecond Layer:Nutrition. They are natural organic fertilizers produced by beneficial soil microorganisms, which produce a synergy with the roots. Main biofertilizers: Earthworm Humus, compost, liquid fertilizer, efficient microorganisms.\nThird Layer:External protection. Natural compounds that allow to protect the seed against external agents, such as predators, sun and dehydration. Agents against insects: ash, garlic, diatomaceous earth, clove, turmeric tobacco, cayenne, Lavender. Agents against external factors: Clay, hydrogel, charcoal, lime dolomitic.\nIn between: Binders. Coating materials are bonded through binder or adhesive substances, preventing layers of coverage from breaking or tearing. These binders can be: Plantago, alginate, agar.agar, arabic gum, gelatin, vegetable oil, milk powder, casein, honey, starch or resins.\nWe recommend that you start with small controls until you master the technique. The process is simple, but requires experience until you know the right amounts.\nThe solid ingredients should be applied very thin, and very little by little, not to form lumps or to create pellets without seeds inside. The liquid components are applied through a pulverizer as thin as possible, which does not produce drops. Minimum amounts of liquid are applied between material and material to improve the adhesion of the dust on the balls. Some materials need more binders than others because they can be more stickers. If you stick the balls together you can separate them with your hands very carefully, as they can break. A good pelletization should not need mechanical separation.\nIn the video you will see an example of the coating process of Eruca Sativa. Note that this is an example, you can combine different components for coating, depending on the deficiencies or potential soil and seeds, also from predators as well, or availability of the ingredients in your region. For this tutorial me made also the attached list of posible ingredients that you can use.\nAs a binder we will use agar agar. As bio-protection agent we will use diatomaceous earth. As components of nutrition, charcoal, also compost, dolomite and liquid biofertilizer. Clay and turmeric for the outer protection layer.\nThe most important element is the seed, which must not have suffered any type of process with agrochemicals.\nThe biofertilizer is diluted in water in proportions of one in ten. In this case 50 cubic centimeters in half a liter of water. The liquid preparation is in a liquid sprayer and we give-it a load of 15 compressions.\nWe deposit the seeds in the machine, and spray them with water. Sprays should be as small as possible so that lumps do not form. Then we turn on the machine and start with the coating.\nWith your hands you can gently separate the seeds if stick between them.\nWe add diatomaceous powder and mix to form an homogeneous mix, then we add water disarming the lumps.\nCharcoal is added to the mixture and repeating the water spray, then add dolomite or calcareous earth.\nOnce the layers are well formed, substrate is added as thin as possible. For achieve this you can use a filter.\nThe clay is added generously mixing well with the seeds. Finally for the outer protection layer, we decided to incorporate turmeric.\nPelleted seeds should be dried outdoors in the shade, otherwise they can brake.\nAnd that's it! Have a nice time creating a wonderful ecosystem !", "step_imgs": ["https://cdn.instructables.com/F68/W9UT/JT91PYYG/F68W9UTJT91PYYG.LARGE.jpg", "https://cdn.instructables.com/FXR/M5IG/JT91LLGU/FXRM5IGJT91LLGU.LARGE.jpg", "https://cdn.instructables.com/FVO/N9GS/JT91NRIY/FVON9GSJT91NRIY.LARGE.jpg"], "step_title": "Step 7: Bonus Track: Coat Your Own Seeds for Aerial Sowing"}], "channel": ""}, {"category": "", "description": "This project started all the way back when I was in 6th grade and completely new to electronics, when I thought to myself, \"Hey, let's build a drone....it shouldn't be that hard......right?\" Yea, guess what, it's hard. Almost 4 years later, this project is coming to a close, and along the way, I have built my engineering knowledge from the ground up, and I will be sharing my knowledge with everyone in the Instructables community so that if another 6th grader were to find themselves upon this Instructable, I hope they will not spend nearly as much time trying to build a drone, but still acquire the same knowledge that I have.\nThis drone tutorial go cover how I built my drone as well as go deep into the nitty-gritty aspects from the construction of the frame all the way to the code. I hope that by reading this instructable, you will be able to fully understand and admire the concepts and theory behind quadcopter building. I would like to thank and recommend some Youtube channels that I have watched and learned from which helped arm me with the knowledge that I have today:\n- Joop Brokking: https://www.youtube.com/user/MacPuffdog (He has an AMAZING playlist for drone building)\n- Great Scott: https://www.youtube.com/user/greatscottlab (Great electronics information)\n- Electronoobs: https://www.youtube.com/channel/UCjiVhIvGmRZixSzup... (Clear explaination of PID)\n- Electroboom: https://www.youtube.com/user/msadaghd (Funny and also great electronics information)\nWithout further ado, here's the breakdown of this instructable.\nSome parts are written as if a complete beginner was reading it:\n- Steps 1-2: Physics and About Quadcopters\n- Steps 3-6: Frame Design/Construction\n- Steps 7-12: Power Electronics\n- Steps 13-15: Control Electronics\n- Steps 16-24: Wiring the Quadcopter\n- Steps 25-31: Code, Calibration, Setup, and Theory\n- Steps 32-34: PID Tuning and Maiden Flight-ish\n- Steps 35: Summary, Future Upgrades/Add-Ons, Final Remarks\nNote: Though this drone is made of cardboard, this is no slouch when it comes to flying. Fully loaded with the battery, the all up weight (AUW) is just above 800g, and with each motor pushing out up to 740g of thrust. Theoretically, this drone has a thrust-to-weight ratio about 4:1. In perspective, a DJI Phantom has a thrust to weight ratio of about 2:1.", "title": "The Ultimate Guide to Building a Quadcopter From Scratch", "url": "https://www.instructables.com/id/The-Ultimate-Guide-to-Building-a-Quadcopter-From-S/", "section": "technology", "steps": [{"step": 1, "steps_text": "Newton's 3 Laws of Motion\nFirst Law: What is at rest will stay at rest and what is in motion will stay in motion, unless there is an external force acting on it.\nSecond Law: The force required to accelerate an object to a certain velocity depends on the mass (F=ma)\nThird Law: For every action there is an equal and opposite reaction\nBased off of the first law, a drone will stay on the unless you decide to move it. A drone will move if you move it.\nBased off of the second law, it is clear if you have a lighter drone, you will have longer flight times (less force required to accelerate it), quicker reaction time (if you decide to put more force, the drone will accelerate faster), and better maneuverability.\nBased off of the third law, drone propellers throw air down with a certain force, the air molecules will push up on the propellers with the same force, therefore the drone moves up. There is another aspect to this law however, and is the fact that anything rotating will generate a small spinning force in the opposite direction, called torque. Just like how a person needs to \"push off\" against the ground in order to walk forwards, the motor needs to continuously \"push off\" against something in order to rotate. That is why if helicopters only have the main rotor, the torque generated by the main propeller will send the body of the helicopter spinning in the opposite direction, and it needs a small rotor on the tail to prevent that.", "step_imgs": [], "step_title": "Step 1: Physics"}, {"step": 2, "steps_text": "It's a helicopter with 4 propellers.\nIn order to explain what makes a quadcopter stand out from the rest of the flying contraptions will take a lot more than 6 words. But before we go into that, we need to define some key terms I will be using to describe movement.\n- X-axis: the axis that points left/right or west/east\n- Y-axis: the axis that points forwards/backwards or north/south\n- Z-axis: the axis that points up/down\n- Roll: when the aerial vehicle tilts left/right; rotates about the y axis\n- Pitch: when the aerial vehicle tilts forwards/backwards; rotates about the x axis\n- Yaw: when the aerial vehicle spins in place left or right; rotates about the z axis\n- Degrees of Freedom (DOF): the number of independent factors that can be assessed (I'll explain this term in better detail later, with an example)\nHelicopters have one main propeller that can provide the acceleration, but need the small rotor in the back to counteract the torque created by the big spinning propeller. Additionally, there are countless other control mechanisms to physically tilt the main propeller in order for the helicopter to move in the 2D-plane.\nBicopters have two equal-sized counter-rotating propellers that provide the acceleration, roll, and the yaw control, but needs the assistance of two servos to tilt the propellers in order to maintain balance and control the pitch.\nTricopters have three equal-sized propellers that provide the roll, pitch, and acceleration control. Two of the propellers spin clockwise and the remaining propeller spins counterclockwise. Due to the extra propeller spinning clockwise, there is no control over the yaw angle, so a servo must be use to tilt the last motor in order to compensate and gain yaw control.\nQuadcopters, with four propellers, have the least amount of physical propellers and motors that can allow it to travel in 4 degrees of freedom (move linearly in the x-axis, move linearly in the y-axis, move linearly in the z-axis, and accelerate). However, if one motor fails, it will be the demise of the quadcopter.....unless there is specific code that can compensate.\nHexacopters and Octocopters have 6 and 8 propellers, respectively. They offer an advantage over quadcopters that if it loses one propeller, it will still be able to and safely, but at the cost of increase complexity, decreased flight time, higher cost, and less maneuverability.\nUnlike planes, quadcopters are naturally unstable and will need software assistance. Overall, the greatest challenge in the construction of the quadcopter will not be the hardware, but instead, the code itself.", "step_imgs": [], "step_title": "Step 2: What Is a Quadcopter?"}, {"step": 3, "steps_text": "The frame makes up around 90% of a quadcopter....so it's kinda important. The first thing you have to consider is the size of the frame you want. Note, the number represents the approximate diagonal arm span of the drone and is measured in millimeters (so if I say I have a 250 frame, the frame is about 250 mm diagonally from arm tip to arm tip). The size of the drone you make depends on your use case, but the general rule of thumb is that the smaller the frame, the more agile and maneuverable the drone is, but it will be less stable. A larger frame will be less agile and maneuverable, but it will be much more stable. In this instructable, I plan to make a size 550 quadcopter.", "step_imgs": [], "step_title": "Step 3: Frame Selection"}, {"step": 4, "steps_text": "There are a lot of different materials you can use to build a quadcopter, each with their own advantages and disadvantages. Here are some of the most popular materials:\nCarbon Fiber (strongest and lightest, but expensive)\nWood\nAluminum\nFoam\nPlastic\nBut I believe that with some engineering, you can make a working quadcopter frame out of almost anything. So as a result, I decided challenge myself and make my quadcopter out of cardboard (:D).", "step_imgs": [], "step_title": "Step 4: Frame Material"}, {"step": 5, "steps_text": "There are three main types of quadcopter frames, the \"X\" frame, the \"+\" frame, and the \"H\" frame. There are also some other obscure types like the Deadcat or hybrid H-X frames, but we're not going to go into those.\nThe \"X\" frame is the classic drone frame, where the arms are at right angles to each other and the quadcopter looks nice and symmetrical. Most commercial drones like the DJI Phantom are based off of this frame type.\nThe \"+\" frame version is virtually identical to the \"X\" frame - the only difference is the orientation when it is flying in the direction that you call \"forwards\". The \"+\" orientation is not as commonly used because the arm sticking out when flying \"forwards\" will block the view of the camera.\nThe \"H\" frame looks like an H and are mainly found on racing drones. An advantage that the \"H\" frame has over the \"X\" and \"+\" is there is a lot more room available to mount the electronics and batteries.\nFor my drone, I decided to go with the \"X\" frame.", "step_imgs": [], "step_title": "Step 5: Frame Arm Orientation"}, {"step": 6, "steps_text": "I planned to make my drone come together like a puzzle with a minimal use of adhesives. All the plates and pieces will slide into each other and are locked with additional arm lock pieces. I also used some zip ties to secure everything together even more.\nI initially created my idea using a computer-aided design (CAD) software called AutoDesk Inventor Professional. My frame consists of arms that mimic the shape of I-beams, as it will give cardboard arms the structural integrity the quadcopter arms will need.\nGoing to my local makerspace, I laser cut all the pieces out of cardboard and surprisingly, the result was better than I expected.\nThe bare frame weight is around 98 grams.\nAssemble the frame and use zipties to hold everything securely in place.\nNOTE: The \"Arm Lock MIR\" in the drawings are the same thing as \"Arm Lock\".", "step_imgs": ["https://cdn.instructables.com/F6K/33U9/JR4TZKCK/F6K33U9JR4TZKCK.LARGE.jpg", "https://cdn.instructables.com/FB8/MD8I/JR4TZK0M/FB8MD8IJR4TZK0M.LARGE.jpg", "https://cdn.instructables.com/FAX/W069/JR4TZK03/FAXW069JR4TZK03.LARGE.jpg", "https://cdn.instructables.com/FUX/TJF9/JR4TZK14/FUXTJF9JR4TZK14.LARGE.jpg", "https://cdn.instructables.com/FGU/57Y1/JR4TZK1O/FGU57Y1JR4TZK1O.LARGE.jpg", "https://cdn.instructables.com/FCL/0W9W/JR4TZK26/FCL0W9WJR4TZK26.LARGE.jpg"], "step_title": "Step 6: Designing and Assembling the Frame"}, {"step": 7, "steps_text": "Now, onto my favorite part about any engineering project: the electronics!\nIn a nutshell, the main electronics are pretty simple to understand: the battery power gets split and directed between the 4 individual motors and the control board. The control board decodes the signals sent by the controller and taking that information as well as the tilt information into account, controls the motors accordingly.\nRefer to the schematics above for more information.\nFor those who are completely new to reading a schematic........\nCRASH COURSE ON HOW TO READ A SCHEMATIC:\nFollow the lines to see where and how they connect. Overlapping lines do not mean those wires are connected, unless there is a dot at the intersection.", "step_imgs": ["https://cdn.instructables.com/FZR/0M4F/JREUAIXF/FZR0M4FJREUAIXF.LARGE.jpg"], "step_title": "Step 7: POWAAAAAA!!!!"}, {"step": 8, "steps_text": "All motors have two parts, the rotor and the stator. The rotor is the part that spins and the stator is the part that stays in place.\nMotors come in two main classes: brushed and brushless. Brushed motors have two wires and generally have the coils on the rotor and magnets on the stator. When the coils are energized, it will create a magnetic field that will attract or repel the magnets on the stator, causing the rotor to spin. The coils get the energy through \"brushes\" and as the rotor spins, the direction of electric flow will change accordingly, keeping the motor spinning. These motors are inexpensive, but generally spin slower and are less efficient due to the friction of the brushes on the rotor. This is why most drones use motors found in the latter class, brushless motors.\nBrushless motors have three wires. Due to the structure of brushless motors, they cannot run directly off of the battery. Their structure is opposite of brushed motors, they have the magnets on the rotor and the coils on the stator. Now, the poles of the electromagnet will no longer flip with the rotation of the rotor, so a component called the electronic speed controller (ESC) is necessary. The main job of these devices is to turn on and off the coils in a timed manner in order to keep the motor running. Brushless motors are a lot faster and more efficient as they do not suffer from additional friction from brushes and their speed depends on the switching rate of the ESC. Almost all high-quality drones use brushless motors.\nBrushless motors have two subclasses, inrunners and outrunners. The difference between the two are what each motor calls the rotor and stator. Inrunner motors have the rotor on the inside, where only the shaft of the motor spins and the casing outside stays in place. Outrunner motors on the other hand, have the rotor on the outside, so in outrunners, the whole casing spins and only the base of the motor, which the stator is mounted upon, stays in place. Generally, outrunner motors have a lower kV rating.....which is what I will explain in the next step.", "step_imgs": ["https://cdn.instructables.com/FGW/5IEI/JTT5O4SN/FGW5IEIJTT5O4SN.ANIMATED.LARGE.gif", "https://cdn.instructables.com/F9K/SW4T/JTT5O5E2/F9KSW4TJTT5O5E2.LARGE.jpg"], "step_title": "Step 8: Motors and Electronic Speed Controllers"}, {"step": 9, "steps_text": "When looking at motors, ESCs, and batteries, you get bombarded with scary numbers with weird units....this step will explain all of those.\nLet's say on the motor, you saw this: A2212 1000kV 12N14P\nkV: This unit is found on motors and does not stand for \"kilovolts\". The letter \"k\" in this case stands for a constant and \"V\" is for volts. Basically what this tells you is the approximate number of revolutions per minute (rpms) the motor will spin per volt you put in. For example, the motor is 1000 kV, it means that this motor will spin about 1000 rpm at one volt, 2000 rpm at two volts, and so on. Generally, a motor with a lower kV rating will spin at slower rpms, but will have more torque, which is the turning force.\nA2212: Ignore the A, but the first two numbers you see (the 22) tell you the diameter of the motor itself or the stator in millimeters. The second pair (the 12) tell you the height of the motor itself or the stator in millimeters.\n12N14P: The number in front of the \"N\" tells you how many electromagnets/coils the stator has and the number in front of the \"P\" tells you how many permanent magnets are on the rotor.\nThe following numbers apply to all batteries, ESCs, and motors\nA or Amps: This is usually found on ESCs and motor datasheets. This is the amount of punch the ESC can provide to the motor. Make sure that this amount is at least 20-30% higher than the amp rating of your motor. It is important to remember that you cannot shove amps into a motor, a motor will pull as many amps as it needs. SO if your motor only pulls 8 amps maximum, it is not necessary to have a 60 amp esc, because you will never pull anywhere near that 60 amps and you will be carrying around unnecessary weight. However, don't pair a motor that can pull up to 60A with an ESC with a 20A rating because that ESC is going to fry faster than you can say \"kV\". On ESCs, there is sometimes a \"burst\" amperage that the ESC can supply for a couple of seconds before irreversible damage. Only use this number for reference.\nBattery labels: 3s 2000mAH 20c\nmAH or milliamp-hour: This is found on batteries. This is the capacity of the battery, or how much electricity the battery can supply before it dies. Divide this number by 1000 (to convert it to Amp-hour) and multiply by the C rating to get the maximum number of Amps the battery can supply before damage. You can also use the Amp-hour value to calculate a crude approximate of your flight time. In this case, 2000mAH --> 2 AH, meaning that this battery can supply a continuous 2 amps for one hour before dying. Keep in mind that you are never going to discharge a battery all the way, so this is an estimate.\nC rating or just C: This number along with the mAH can tell you the maximum amount of amps that this battery can supply. Just like an ESC, there is also a \"burst C rating\" which is the maximum amount of amps the battery can provide for a short period of time (like about 10-30 seconds). So with the example battery, it can provide 40A of continuous current (2000mAH --> 2 AH --> 2AH * 20C --> 40A).\n3s: This is found on batteries and tells you how many cells are wired in series and parallel. Assuming we are talking about Lithium Polymer (LiPo) batteries, each cell has a nominal or \"normal\" voltage of 3.7v, but when fully charged, they are 4.2v, though some LiPos can go up to 4.35v per cell, and are labelled as LiHV or high voltage. So in this case, 3s means that there are three LiPo cells wired in series, which means this battery has a nominal voltage of 11.1v (3 * 3.7) and a maximum voltage of 12.6v (3 * 4.2). This is also found on ESCs and tells you how much voltage the ESC can handle.\nBEC: Battery Eliminator Circuit. It is a circuit found inside ESCs that provide a steady 5v (or 6v...depending on your ESC) to power receivers, the flight controller board, servos, etc. Not all ESCs have a BEC.", "step_imgs": [], "step_title": "Step 9: All Those Darn Numbers and Letters....What Do They Mean?"}, {"step": 10, "steps_text": "Here are the parts that I have decided to use:\n- 1000kV brushless outrunner motors (x4): https://www.amazon.com/Hobbypower-Brushless-Outrun...\n- 10x4.5in propellers: https://www.amazon.com/Genuine-Gemfan-10x4-5-Prope...\n- 30A Blheli ESCs: https://www.amazon.com/BLHeli-32-Brushless-Control...\n- Power Distribution Board: https://www.ebay.com/itm/Multirotor-ESC-Power-Dist...\n- XT-60 connectors: https://www.amazon.com/Finware-Female-Bullet-Conne...\n- Bullet Connectors (if your ESC does not come with these): https://www.amazon.com/JFtech-Bullet-Banana-Connec...\n- 30dB earplugs: https://www.lowes.com/pd/Safety-Works-Ear-Plugs/10...\n- Heat Shrink Tubing: https://www.amazon.com/NTE-Electronics-47-23448-BK...\n- DIY flight controller (which I well get to in Step 14)\n- DIY battery pack (which I will explain in the next step)\nTip: Don't go cheap on motors and ESCs, as poor quality parts will result in poor performance. If you are serious into drone building, put a bit of money into quality parts, it will be worth it in the long run. I do not recommend the no-brand motors I got, but I have provided the link anyways.", "step_imgs": ["https://cdn.instructables.com/FBQ/2N5B/JREUAFEE/FBQ2N5BJREUAFEE.LARGE.jpg", "https://cdn.instructables.com/FH9/1FK4/JRKZ193J/FH91FK4JRKZ193J.LARGE.jpg"], "step_title": "Step 10: My Layout"}, {"step": 11, "steps_text": "LiPo batteries are the most popular batteries for drones in general, but they scare me:\nThat is why I decided to take the path that not many people have taken: making my own battery pack.\nNote, if this is your first drone, I do not recommend building your own battery, it is better to buy a good battery and a good charger.\nI salvaged cells from a lithium drill battery pack to build my pack. The cells found in a lithium drill battery pack are called 18650 cells and are also commonly found in old laptop batteries. However, not all 18650 cells are created equal. The ones found in laptop batteries are made to discharge slowly, but can last for a long time. Drills on the other hand, require a lot of continuous power but not for hours on an end. Drones are very similar when it comes to power usage- they need that punch of power, but flying for three hours on end is not a necessity.\nI got my batteries from this battery pack: https://www.lowes.com/pd/Kobalt-24-volt-Max-1-5-Am...\nInside the pack, I got Samsung INR18650-15L cells, which according to their datasheet, can provide 18A of continuous current and have a nominal capacity of 1500 mAH. I will wire the pack into a 3s2p pack. The 2p stands for 2 parallel, and when batteries are wired in parallel, the overall capacity (the mAH) and the maximum current (A) will increase, but the voltage will stay the same. Therefore, I will have a battery pack that has a 11.1v nominal voltage, 12.6 v maximum voltage, 3000 mAH capacity (1500 mAH * 2p), and 36A continuous output current (18A * 2p).", "step_imgs": ["https://cdn.instructables.com/FE9/CCB5/JREUAFAG/FE9CCB5JREUAFAG.LARGE.jpg", "https://cdn.instructables.com/FMS/J5FG/JREUAFAK/FMSJ5FGJREUAFAK.LARGE.jpg", "https://cdn.instructables.com/FMM/SWOE/JREUAFB4/FMMSWOEJREUAFB4.LARGE.jpg"], "step_title": "Step 11: Battery Choice"}, {"step": 12, "steps_text": "I am too poor to afford a spot welder to make my battery. I have to come up with another plan.\nSo....back to AutoDesk Inventor I go to design a battery pack. I want a modular battery pack that enables to quickly remove the cells when I want to charge them and put them back together for flight.\nThe CAD drawings and STL files are attached.\nThe battery holders are 3D printed at my local makerspace (a total of 12 modules were needed).\nTo make the connections within the batteries, I cut strips of metal out of aluminium soda cans and used aluminum rivets to secure the soda can and the power wires to the battery holders....and as a bonus, the heads of the rivets act as contact points for the batteries. The pack will be physically held together with thick rubber bands.\n(Note: Check step 34 for updated battery design)\nIMPORTANT: IF THIS IS DONE INCORRECTLY, IT MAY CAUSE A LOT OF DAMAGE:\nCreate two identical \"plates\" of the battery holder, place the batteries in the orientation as shown, and place the second plate EXACTLY as shown in the drawing. Use the schematic of the battery pack to make sure you are doing it right.\nTo charge the battery, I take it apart and charge the cells individually using a charger like this: https://www.walmart.com/ip/Tbest-4-Slots-Battery-C....", "step_imgs": ["https://cdn.instructables.com/FNL/K1I6/JRBBP2A6/FNLK1I6JRBBP2A6.LARGE.jpg", "https://cdn.instructables.com/FMJ/4OHS/JRKZ11C6/FMJ4OHSJRKZ11C6.LARGE.jpg", "https://cdn.instructables.com/F6N/5KMA/JREUAJ8R/F6N5KMAJREUAJ8R.LARGE.jpg", "https://cdn.instructables.com/F56/IE7Y/JRKZ11C5/F56IE7YJRKZ11C5.LARGE.jpg", "https://cdn.instructables.com/FRD/IXBK/JRKZ11C1/FRDIXBKJRKZ11C1.LARGE.jpg", "https://cdn.instructables.com/FBD/96DY/JRKZ11C2/FBD96DYJRKZ11C2.LARGE.jpg", "https://cdn.instructables.com/F58/Y450/JRKZ11V2/F58Y450JRKZ11V2.LARGE.jpg", "https://cdn.instructables.com/FJR/39DN/JRKZ11C3/FJR39DNJRKZ11C3.LARGE.jpg"], "step_title": "Step 12: Battery Construction"}, {"step": 13, "steps_text": "There is this ad I've seen somewhere that states \"Power is nothing without control\", and that is very true when it comes to quadcopters.\nNow for many beginners, it is good enough to go buy a commercial flight controller board like an Ardupilot, which is based off of the Arduino Mega and can be programmed with the Arduino IDE (https://www.newegg.com/Product/Product.aspx?Item=9...), NAZA 32 (https://www.ebay.com/i/322013155847?chn=ps), etc and use that instead. You will probably get better performance that way, but what is the fun in that?\nSo being the naive child I am, I decided to make my own flight controller...how hard can that be?\nSigh.", "step_imgs": ["https://cdn.instructables.com/F6R/T74Z/JTT5O45W/F6RT74ZJTT5O45W.LARGE.jpg"], "step_title": "Step 13: Control"}, {"step": 14, "steps_text": "This is the brains of the drone. Let's make it. I will assume soldering skills are present.\nYou will need:\n- 1x 5v Arduino Pro Mini (or clone): https://www.microcenter.com/product/486546/arduino...\n- 1x GY-87 10 DOF triple axis gyroscope, accelerometer, magnetometer, and barometer: https://www.amazon.com/GUWANJI-MPU6050-HMC5883L-BM...\n- Resistors\n- 2.2k resistor\n- 6.8k resistor\n- 40x Header pins\n- 1x LM7805 5v voltage regulator (I dug mine out of an old ESC which I burned up): https://www.adafruit.com/product/2164\n- Wires\n- A ton of programming skills\n- Perfboard\n- 2.4 Ghz transmitter and receiver (at least 4 channels, I used a Flysky FS-i6X: https://www.amazon.com/Flysky-FS-TM10-Transmitter-...)\nMost components within the quadcopter communicate via PWM. You will see wire \"ribbons\" (called servo connectors) with three wires: red, black, and white (or sometimes, orange, red, and brown). Red is for 5V (positive), white/orange is for signal, and black/brown is for GND (negative). I will explain the communication methods in the \"Theory\" section.", "step_imgs": ["https://cdn.instructables.com/F46/KPM3/JRKZ18G4/F46KPM3JRKZ18G4.LARGE.jpg"], "step_title": "Step 14: Flight Controller"}, {"step": 15, "steps_text": "The Arduino Pro Mini is powered by the 5v regulator (built into the voltage sense wire...look at step 18) and communicates with the GY-87 gyroscope via the I2C bus. The voltage of the battery is read through analog input pin 3 (A3) through a voltage divider (also built into the voltage sense wire).", "step_imgs": ["https://cdn.instructables.com/FGB/0GTV/JRKZ24E7/FGB0GTVJRKZ24E7.LARGE.jpg", "https://cdn.instructables.com/F2Z/L0HB/JRKZ18IW/F2ZL0HBJRKZ18IW.LARGE.jpg", "https://cdn.instructables.com/FU9/H1V1/JRKZ18M2/FU9H1V1JRKZ18M2.LARGE.jpg"], "step_title": "Step 15: Flight Controller Schematic"}, {"step": 16, "steps_text": "The title may sound intimidating, but to be honest, this is probably the easiest part of the whole process of quadcopter building. Still not convinced? Well, I'll show you....", "step_imgs": ["https://cdn.instructables.com/FXA/EJY8/JRKZ18XZ/FXAEJY8JRKZ18XZ.LARGE.jpg"], "step_title": "Step 16: Wiring the Whole Quadcopter"}, {"step": 17, "steps_text": "Female bullet connectors get soldered onto the three wires coming out from the ESC and male bullet connectors get soldered onto the two power wires from the ESC.\nLook at this video if you need help:\nFemale bullet connectors also get soldered onto the Power Distribution Board (PDB). First, lay them sideways and clamp them on the metal contacts. Then, melt the solder all around it to make sure it stays in place.\nThe male XT-60 connector gets soldered to the PDB as well. Solder wires to the XT-60 connector and solder the wires to the PDB.\nCreate the voltage regulator circuit on the PDB.", "step_imgs": ["https://cdn.instructables.com/FG9/NUO9/JRKZ193K/FG9NUO9JRKZ193K.LARGE.jpg", "https://cdn.instructables.com/F0R/WR4J/JRKZ242I/F0RWR4JJRKZ242I.LARGE.jpg"], "step_title": "Step 17: Solder (all) the Connectors"}, {"step": 18, "steps_text": "This wire will allow the Arduino to determine if the battery voltage is too low as well as provide 5V regulated power to the Arduino.", "step_imgs": ["https://cdn.instructables.com/FW8/7336/JRKZ1MNC/FW87336JRKZ1MNC.LARGE.jpg", "https://cdn.instructables.com/FGR/1AY1/JRKZ19C0/FGR1AY1JRKZ19C0.LARGE.jpg"], "step_title": "Step 18: Make the Voltage Sense Wire"}, {"step": 19, "steps_text": "Use zipties to mount the PDB onto the bottom plate of the quadcopter and feed the sense wire through the hole and up to the top of the quadcopter.", "step_imgs": ["https://cdn.instructables.com/F4X/VE9V/JRKZ193L/F4XVE9VJRKZ193L.LARGE.jpg"], "step_title": "Step 19: Mount the PDB"}, {"step": 20, "steps_text": "Since it is impossible to screw through cardboard and expect there to be a strong mount, I decided to use zipties again and they work very well.", "step_imgs": ["https://cdn.instructables.com/F37/L0I4/JREUAFDV/F37L0I4JREUAFDV.LARGE.jpg"], "step_title": "Step 20: Mount the Motors"}, {"step": 21, "steps_text": "Use double-sided sticky tape to mount the ESCs and plug the power wires of the ESC to the PDB. Then, plug the three wires coming out of the other side of the ESC into the motor (it does not matter which way....we will fix that later if necessary).", "step_imgs": ["https://cdn.instructables.com/F5H/DCGK/JRKZ1998/F5HDCGKJRKZ1998.LARGE.jpg", "https://cdn.instructables.com/FB0/REKZ/JRKZ196G/FB0REKZJRKZ196G.LARGE.jpg", "https://cdn.instructables.com/FSV/JDM6/JRKZ19JG/FSVJDM6JRKZ19JG.LARGE.jpg"], "step_title": "Step 21: Mount and Wire the ESCs"}, {"step": 22, "steps_text": "Feed the signal wires of the ESC to the top of the quadcopter and insert the top plate. Glue 30dB earplugs to the top plate. These earplugs will act as vibration dampeners for the flight controller.", "step_imgs": ["https://cdn.instructables.com/F67/G768/JRKZ19FQ/F67G768JRKZ19FQ.LARGE.jpg", "https://cdn.instructables.com/FJH/1NQL/JRKZ19MD/FJH1NQLJRKZ19MD.LARGE.jpg", "https://cdn.instructables.com/FYG/UXQ6/JRKZ19P9/FYGUXQ6JRKZ19P9.LARGE.jpg"], "step_title": "Step 22: Wire Management"}, {"step": 23, "steps_text": "Put velcro on the receiver as well as the top plate of the quadcopter and mount it. Feed the antenna wires under the zipties on the arms, 90 degrees with respect to each other.", "step_imgs": ["https://cdn.instructables.com/FXU/LAS8/JRKZ19S1/FXULAS8JRKZ19S1.LARGE.jpg", "https://cdn.instructables.com/F4M/16L1/JRKZ19UU/F4M16L1JRKZ19UU.LARGE.jpg", "https://cdn.instructables.com/FC1/EGF5/JRKZ18AI/FC1EGF5JRKZ18AI.LARGE.jpg", "https://cdn.instructables.com/F5B/XJHS/JRKZ18DA/F5BXJHSJRKZ18DA.LARGE.jpg"], "step_title": "Step 23: Mount the Receiver"}, {"step": 24, "steps_text": "Plug in the voltage sense wire to the flight controller and make the following connections:\nReceiver --> Arduino\nCH1 --> 12\nCH2 --> 11\nCH3 --> 10\nCH4 --> 9\nMotor --> Arduino\nTop left --> 4\nTop right --> 5\nBottom left --> 7\nBottom right --> 6\nThen, secure the flight controller on top of the earplugs.", "step_imgs": ["https://cdn.instructables.com/F38/0W7E/JRKZ18V7/F380W7EJRKZ18V7.LARGE.jpg"], "step_title": "Step 24: Wire the Flight Controller In"}, {"step": 25, "steps_text": "To make our lives easier when it comes to the tuning, let's build ourselves a programming board we can attach to the Arduino that will allow us to program wirelessly.\nYou will need:\n- 1x HC-05 Bluetooth Module\n- 2x 2n2222 NPN bipolar junction transistor (or equivalent)\n- Resistors\n- 1.8k (x1)\n- 3.3k (x1)\n- 10k (x2)\n- 1x 0.01 microfarad ceramic capacitor\n- Some wires\n- 6x female header pins\n- Arduino Uno for HC-05 setup\n- Perfboard\n- Laptop/Computer with bluetooth\nSet up the HC-05:\nConnect the HC-05 to the Arduino Uno according to the schematic, hold down the button on the HC-05, power the Arduino with your laptop, and open the Arduino IDE.\nUpload the test code and open the Serial Monitor.\nMake sure that the Line Ending box is set to NL & CR (instead of No line ending) and at 9600 baud.\nType \"AT\" (without the quotes) into the Serial Monitor and hit enter, you should get a response of \"OK\".\nIf so, then set the baud rate of the HC-05 to the programming baud rate of the Arduino Pro Mini with the command \"AT+UART=57600,0,0\" (without quotes)\nYou should get a response of:\n+UART: 57600,0,0\nOK\nIf you want to change the password, use this command \"AT+PSWD=xxxx\" (replace the x's with your numerical password). This is optional.\nTo connect with your laptop for programming, unplug the HC-05 from your laptop and power it from an external source. Then, turn on your laptop's bluetooth and find the device called \"HC-05\". When you try to pair with it, it will prompt you for a password, in which you will type the password that you set previously or if you chose not to change the password, the default is \"1234\". If that does not work, try \"0000\".\nConstruction of the Programming Board:\nRefer to the schematic for construction information.", "step_imgs": ["https://cdn.instructables.com/FZZ/60CU/JREUACDF/FZZ60CUJREUACDF.LARGE.jpg", "https://cdn.instructables.com/FRM/E2BD/JREU8PZV/FRME2BDJREU8PZV.LARGE.jpg", "https://cdn.instructables.com/FYE/DCNY/JRKZ18OV/FYEDCNYJRKZ18OV.LARGE.jpg", "https://cdn.instructables.com/FKU/HUK4/JRKZ18RN/FKUHUK4JRKZ18RN.LARGE.jpg"], "step_title": "Step 25: Programming Board"}, {"step": 26, "steps_text": "In the following sections I explain how the flight controller \"thinks\" and how things communicate with each other inside a quadcopter.\nYou will notice that many things like the receiver and motors connect to the flight controller with three-wire cables, which are called servo connectors. The red and the black/brown wires are your 5V and GND, respectively, and your white/orange wire is the signal wire, which sends pulse width modulation (PWM) signals like the image shown above.\nBy varying the amount of time the signal is \"high\" or connected to 5V, control information can be quickly sent and received. The signal sent out from the receiver at a 50 hertz (Hz) refresh rate and the \"high\" pulse varies between 1000 microseconds to 2000 microseconds (1-2 milliseconds). There are 1 million microseconds in a second...so that pulse is very fast.\nBased on the image above, you can see that the whole signal takes about 20 milliseconds. The signal is only high for 1000-2000 microseconds, but for the remaining time, the signal is low. There are 1000 milliseconds in a second, and if you divide 1000/20, you get 50 Hz, indicating that there can be 50 twenty-millisecond signals sent within a second.\nNow, the 50 Hz refresh rate may sound very fast to you, but for quadcopters, a 50Hz refresh rate is too slow to keep the quadcopter balanced. Why? Well, only the duration of the \"high\" pulse carries the motor speed information, and the low pulse is only there to help the flight controller differentiate between the first signal and the next signal and does not carry any important information. So in other words, making the \"low\" pulse way too long is a waste of time, and this is certainly the case. That is why the PWM interface for the motors is clocked much faster, in this case, 250 Hz, or 250 times a second! If we do the calculations: 1000/250, we can see that each signal only lasts for 4 milliseconds! In off-the-shelf flight controllers, refresh rates can be as high as a couple of kilohertz, but the Arduino is not fast enough to achieve those speeds.", "step_imgs": ["https://cdn.instructables.com/F3I/GQXY/JRGOFQ00/F3IGQXYJRGOFQ00.LARGE.jpg"], "step_title": "Step 26: Theory (PWM Communication)"}, {"step": 27, "steps_text": "Flying a drone is 98% computer and 2% human. Why? Because humans are slow. Like reeeeaaaaaallllllllyyyyy slow. In fact it is nearly impossible to fly a quadcopter without a flight controller to automatically adjust and stabilize the quadcopter hundreds of times per second. In the previous step, I mentioned how receiver information has a refresh rate of 50 Hz, and that is good enough because human reaction times are not going to be that fast anyway (average response time to a touch stimulus, the fastest, is around 150 milliseconds).\nHowever, how does the flight controller know that the quadcopter is tilting? Well, in my drone, I used a GY-87 10DOF IMU, or inertial measurement unit. This module is capable of measuring acceleration in the x, y, and z axes, can measure rotation rate around the x, y, and z, axes, the angle from magnetic north on the x, y, and z axes, and can measure air pressure as well. Using all these pieces of information, the quadcopter can accurately determine the tilt. I will go into more detail in the next step.\nThe IMU is getting all this good information, but how does it tell all this to the Arduino....and fast enough so it is not too late to save a falling quadcopter? This most certainly cannot use PWM, as it would be way too slow to send all these 10 pieces of information all at once. Instead, it uses a communication protocol called I2C (pronounced \"eye squared see\", but also known as TWI, or two wire interface), which as the name suggests, uses two wires called SDA (serial data) and SCL (serial clock). This communication method can allow maximum speeds of up to 400 kHz or 400,000 times per second!\nHow does it work?\nWell, I2C communication occurs between a master (the device who wants the information) and a slave (the device that gives the information), and the slave has its own address, or name, in hexadecimal form. It kinda works like a really small band, let's say a drummer and a rapper. The drummer keeps the beat and the rapper delivers the message. The SCL line keeps both devices synchronized, the SDA line sends a chain of pulses of different lengths to send different messages. This is called serial communication because the information packets are delivered sequentially, one after another. With this method, over 100 devices can be connected and interfaced independently with only two wires! Really neat stuff.", "step_imgs": ["https://cdn.instructables.com/F3P/WNSK/JRGOFPRL/F3PWNSKJRGOFPRL.LARGE.jpg"], "step_title": "Step 27: More Theory (I2C Communication)"}, {"step": 28, "steps_text": "Each sensor has their own advantages and disadvantages, and this is why we need a ton of sensors.\nGyroscope (or gyro): Measures angular velocity, or the rate at which the quadcopter is spinning in degrees per second. So if you know the speed at which the quadcopter is spinning and the amount of time passed, you can calculate the angle. This is by far the most accurate and reliable sensor on any drone, as the values are not affected by vibration and linear motion (motion in a straight line). However, gyros do suffer from drifting (called low frequency noise), where small errors add up to make huge problems.\nAccelerometer: Measures linear acceleration and knows which way is down (it uses the acceleration of gravity to determine that). By using trigonometry (look at pictures), we can figure out the angle which it is tilted at. However, this sensor's values are very noisy and is greatly affected by quadcopter motion, vibration from motors, and high frequency noise.\nAccelerometers also suffer from gimbal lock:\nFor example, if the quadcopter is perfectly level, the z axis will point upwards and the x and y axes will be parallel to the earth. In this case, if the quadcopter were to pitch and roll, the x or y axes will no longer be parallel to the earth and the z axis will no longer be perpendicular to the ground, therefore, registering an acceleration on the axes. This enables the accelerometer to calculate pitch and roll. However, if the quadcopter were to yaw, the accelerometer will not sense any change because the Z axis will still be pointing straight upwards and the x and y axes will still be parallel to the earth. We lose one axis of rotation.\nMagnetometer: Tells you where is magnetic north and how many degrees you are away from it. However, because this sensor measures magnetic fields, if you have big coils with a lot of electricity running though it or big metal things with magnets spinning at thousands of rpms (cough cough your motors), then the measurement will be affected. These sensors need to be manually calibrated from time to time (check the next step for information).\nBarometer: Measures air pressure. Using this information we can approximate altitude. This sensor can be affected by light (yes it is that sensitive).\nA quadcopter needs to measure pitch, roll, and yaw angles, as well as position and altitude (both optional).\nPitch and Roll: The accelerometer and gyroscope data are both used to calculate the angle. The gyro does most of the angle measurement but the accelerometer is there to check and correct the gyro values if it has drifted too far.\nYaw: The gyro and magnetometer are used to calculate the angle. In this case, the magnetometer replaces the accelerometer and corrects the gyro drift.\nAltitude: The barometer and GPS are used to calculate the altitude. Using only the barometer is fine for most cases, but if you really need precise altitude information (altitude hold for example), GPS can be used to correct barometer errors\nPosition: GPS....doesn't need anything for compensation as it is very accurate, but GPS has a really slow refresh rate (10 Hz).", "step_imgs": ["https://cdn.instructables.com/FMZ/1XS5/JRKZ2A1G/FMZ1XS5JRKZ2A1G.LARGE.jpg", "https://cdn.instructables.com/F17/B6KW/JRKZ2A1J/F17B6KWJRKZ2A1J.LARGE.jpg", "https://cdn.instructables.com/F9M/MRNT/JRKZ2A1M/F9MMRNTJRKZ2A1M.LARGE.jpg"], "step_title": "Step 28: Even More Theory (Sensors, Math, and Angle Calculation)"}, {"step": 29, "steps_text": "If you just bought a transmitter and receiver, you have to let the transmitter know that it will be talking to the specific receiver that came with your box and vice-versa. This process is called binding and it takes literally 10 seconds.\n1. Plug the bind cable into the \"BAT\" (battery) port on your receiver.\nThe bind cable is the little black loop of wire with a servo connector at the end\n2. Power on the receiver with the Arduino flight controller\n3. While holding the \"BIND\" key on your transmitter, turn it on\n4. Lights should blink and when everything stops blinking, you can unplug the bind cable and you are done!", "step_imgs": ["https://cdn.instructables.com/F1E/0J83/JROTLIHN/F1E0J83JROTLIHN.LARGE.jpg", "https://cdn.instructables.com/FVK/5ED0/JROTLIHO/FVK5ED0JROTLIHO.LARGE.jpg"], "step_title": "Step 29: Transmitter and Receiver Info"}, {"step": 30, "steps_text": "There are two things we need to calibrate before we can fly, the motors and the magnetometer.\nCalibrate the Motors:\nWe need to do this in order to tell the ESCs what the throttle range is. This is very important, because if you do not take the time to calibrate your motors, your motors may start at different times, not start at all, or may not utilize the full range of the throttle correctly.\nMoreover, the standard timing for an ESC is 50 Hz, which I mentioned previously, is way too slow for a drone, so a calibration will allow the ESC timing to be scaled up to 250 Hz.\nThis is fairly simple. Upload the code attached to the Arduino (called \"motor_calibrate\") and follow this procedure:\n1. Unplug battery\n2. Take off your propellers\n3. Take off your propellers\n4. Did you do steps 2 and 3?\n5. Set your throttle stick on your RC transmitter to full throttle.\n6. Check and make sure your propellers are off\n7. Plug in the battery\n8. Your ESCs will beep a startup tone and then it will beep once or twice\n9. After you hear the final beeps, lower your throttle to minimum throttle and wait for a confirmation beep.\n10. Then move your throttle stick up and down, all motors should spin up at the same time\n11. Check if the motors are spinning in the right directions: top left- counterclockwise, top right- clockwise, bottom left- clockwise, bottom right- counterclockwise.\n12. If any motor is not spinning in the right direction, simply swap any two of the wires connected to the ESC and the motor will change direction.\n13. Unplug battery\n14. When you are ready for the main code and PID tuning, put the propellers on. Depending on which way your motors are spinning, remember that the elevated edge of the propeller blade cuts into the air first.\nCalibrate the magentometer:\nIf the magnetometer is not calibrated, the yaw angle values will be off.\n1. Upload the code called \"calibrate_mag\" to the Arduino.\n2. Open the Serial Monitor (use No line ending and 9600 baud) and spin your quadcopter around the z-axis at least 3 times slowly.\n3. Record the final two numbers. These are your offset values.\n4. When you get around to uploading the final flight controller code, insert the offset values into the code (there will be comments in the code which indicates where you should put your offset values).", "step_imgs": [], "step_title": "Step 30: Calibration"}, {"step": 31, "steps_text": "I attached the code for the quadcopter, note that this code is nowhere near perfect and does not take advantage of all the sensors and input devices I've mentioned. In fact it, is the bare minimum required for flight. However, if you are a seasoned programmer, go ahead and adjust it to make other cool stuff happen.\nTo use the bluetooth programming board to program the Arduino, turn on your computer's bluetooth and open the Arduino IDE. Go to Tools --> Ports and note the available ports. Power on the Arduino, go back into Ports and look at the new port that appeared. Click on this port and upload the code and it should upload wirelessly.\nNote: The refresh rate of the code is 250 Hz, which means it takes 4000 microseconds to complete a loop. If you add more code, make sure the looptime is not greater than 4000 microseconds, or angle calculation will be off. Remember the gyro outputs the rate of rotation, so it must be multiplied by the elapsed time in order to calculate angle. Calculating elapsed time every loop makes the program too sluggish, so setting the looptime to a constant time (4 milliseconds) will enable the Arduino to calculate the gyro angle much faster.", "step_imgs": [], "step_title": "Step 31: Code"}, {"step": 32, "steps_text": "Before you can actually fly, you need to tune your PID controller. Essentially, you initially make the P-gain equal to 1.00, upload the code to the Arduino, fly, land, change more values, and repeat until you get something flying nice.\nThe PID controller is responsible for how responsive the quadcopter is going to be. There are a ton of different methods to PID tuning, but this method works for me:\nIncrease the P-gain (whole or half number intervals): Increases the responsiveness (or the \"kick\") of the quadcopter (aka determines how much the quadcopter speeds up the motors when there is little tilt). Keep increasing this value until the quadcopter starts to overcompensate and starts wobbling.\nIncreasethe D-gain (intervals of about 0.5): Dampens the P-gain. For example, a human hitting the drone or sudden gust of wind will cause the drone to try to rocket back to stability, but the D-gain provides a \"force\" to resist the drone from overshooting. Increase this until the quadcopter starts vibrating, then decrease it by around .5.\nIncrease the I-gain (intervals of 0.001): Corrects small quadcopter drift and helps the quadcopter actually return to zero degrees.\nPID tuning is long, brutal, and will require some (a lot of) patience. Play with the values in this order until you get satisfactory performance.\nFor more information I recommend watching Joop Brokking's channel on youtube as he explains a lot more through his videos in a rather entertaining way.", "step_imgs": ["https://cdn.instructables.com/F0L/RV0K/JTT5O776/F0LRV0KJTT5O776.LARGE.jpg"], "step_title": "Step 32: PID Tuning"}, {"step": 33, "steps_text": "When you try your best but you don't succeed.....\nThis was the first flight with my original code that I did not post because it's bad.\nNow as you can see, my drone did not take off successfully in this footage, and there's a couple of reasons why. 1. The batteries were too discharged\n- I spent the whole day tuning the PID on the quadcopter and never bothered to check the voltage of the battery (preferably above 12 volts) before taking it out to fly....so it is essential to have fresh batteries before flight. With a discharged battery, your motors will not produce the expected amount of thrust and your drone will not fly.\n2. PID values were out of wack\n- Even with a whole day of PID tuning, you can see that I didn't do a good job of it, as see by the large wobbling around the y-axis. Decreasing the P gain of the roll can solve the problem (note, if the drone was oscillating very rapidly, then it is the fault of the D gain).\n3. Battery Connections were not good\n- If you caught the quick beeps from the ESCs at the end of the video, you can tell that the quadcopter had powered off and powered on again. This is the result of bad connections that rocked loose during the wobbling.", "step_imgs": [], "step_title": "Step 33: Flight....fail"}, {"step": 34, "steps_text": "Problem 1 is easy to solve....charge the batteries!!!\nProblem 2 will require more hours of tuning.\nProblem 3 is also fairly easy to solve. Apparently trying to clamp the battery wires underneath the soda can and hot-gluing them in place is not enough....so here's my solution:\n- Solder the battery wires to washers\n- Pre-sand the washers with 100 grit sandpaper so the solder will stick to the washers better\n- Solder the wires.\n- Slide the rivet through the washer\n- Put the soda can strip on top, and rivet everything together\nClearly, this was a much more robust solution.", "step_imgs": ["https://cdn.instructables.com/FV2/O3FS/JTWS1YYT/FV2O3FSJTWS1YYT.LARGE.jpg", "https://cdn.instructables.com/FC8/ZQ9X/JTWS1YZX/FC8ZQ9XJTWS1YZX.LARGE.jpg", "https://cdn.instructables.com/FT1/FQBP/JTWS1Z11/FT1FQBPJTWS1Z11.LARGE.jpg"], "step_title": "Step 34: Fix Those Problems"}, {"step": 35, "steps_text": "So congratulations, you've finally reached the end of this really long instructable. I hope that you've learned a lot of about the art of drone building and electronics as much as I did and I hope that I did not bore you too much.\nThere are a ton of upgrades I can make to the quadcopter, but if I had the time (and money) to do so, I would:\n- Upgrade the battery to higher quality pack, because my DIY battery pack is heavier and requires a lot more maintenance, but the DIY pack has taught me a lot more.\n- Integrate a Raspberry Pi Zero W and a camera, so I can put in computer vision, data logging, FPV (first person view), aerial photography, and much more.\n- Upgrade the motors and propellers\n- Add GPS and position hold features (perhaps even autonomous flight)\n- Add a camera gimbal\nSome use cases for my quadcopter:\n- Seek out my school bus when it comes so I can make it to my stop on time (really useful to have on cold days, where I can limit the amount of time I spend outside)\n- Take cool pictures\n- Drop water balloons on people during hot summer days :D\n- The possibilities are limitless!\nUnfortunately the failed flight damaged my last stock of propellers, and I will need to order more. If I manage to do any of the above and find some time within my busy high school life, I will post an updated instructable with a successful flight (hopefully) as well as highlight more things that I have done with this project.\nSo in the end, thank you all for taking the time to read my instructable, and now I'd better catch up on my homework....", "step_imgs": [], "step_title": "Step 35: Final Remarks"}], "channel": ""}, {"category": "", "description": "Materials:\ntriplex, thickness: 3mm\nHow many wooden plates depends on how big your lasercutter is... adjust the file on your maximum size wood plate... maybe you need more than 1 plate (keep that in mind).\n6 x flash leds (i used 7 color flash leds)\navailable here: https://bit.ly/2VXQj7g\n6 x 100ohm resistors\navailable here: https://bit.ly/2RNmBCU\n1 x toggle switch\navailable here: https://bit.ly/2TTv5WC\nblack&red electrical wire\navailable here: https://bit.ly/2DbkVes\nheat shrink tube (red)\navailable here: https://bit.ly/2Tz85vp\n2 x AA battery pack\navailable here: https://bit.ly/2CnIO0y\n2 x AA battery\nTools:\nwood glue\nwooden hammer\nsoldering tools", "title": "Disco Desktop Organiser", "url": "https://www.instructables.com/id/Disco-Desktop-Organiser/", "section": "technology", "steps": [{"step": 1, "steps_text": "Download the file for lasercutting (.ai .eps)\nLasercut all the parts.\nEngravings: 1. A position of the name on the front (just outline) so that you can place the separate letters correctly. 2. The text around the toggle switch \"switch to party\". If you prefer using the same font as in the file, it's a free downloadable font: Andora at https://www.dafont.com/andora.font", "step_imgs": ["https://cdn.instructables.com/FC3/OXN7/JQWSX3NO/FC3OXN7JQWSX3NO.LARGE.jpg"], "step_title": "Step 1: Lasercut File"}, {"step": 2, "steps_text": "Gather all parts as seen in picture1.\nTools: wood glue, glue clamp, wooden hammer.\nFollow steps in order of pictures.", "step_imgs": ["https://cdn.instructables.com/FBG/ORM7/JQWSX3P6/FBGORM7JQWSX3P6.LARGE.jpg", "https://cdn.instructables.com/FE3/RKL9/JQWSX3QJ/FE3RKL9JQWSX3QJ.LARGE.jpg", "https://cdn.instructables.com/FFC/S88N/JQWSX3QK/FFCS88NJQWSX3QK.LARGE.jpg", "https://cdn.instructables.com/FWF/1NWO/JQWSX3QL/FWF1NWOJQWSX3QL.LARGE.jpg", "https://cdn.instructables.com/FPE/MO07/JQWSX3QM/FPEMO07JQWSX3QM.LARGE.jpg", "https://cdn.instructables.com/FQ1/MXP0/JQWSX3O6/FQ1MXP0JQWSX3O6.LARGE.jpg"], "step_title": "Step 2: Assembly of 'post-it' Holder"}, {"step": 3, "steps_text": "follow examples in picture 1 to 5.\nthese assembly steps are done with the object turned upside down.\nextra instruction for picture 5: after adding wood glue > flip the object 180 degrees so that the object is not upside down anymore.", "step_imgs": ["https://cdn.instructables.com/F9U/M3EW/JQWSX3P9/F9UM3EWJQWSX3P9.LARGE.jpg", "https://cdn.instructables.com/F2Y/WKTK/JQWSX3PA/F2YWKTKJQWSX3PA.LARGE.jpg", "https://cdn.instructables.com/FME/PLBQ/JQWSX3PI/FMEPLBQJQWSX3PI.LARGE.jpg", "https://cdn.instructables.com/FNI/IGVR/JQWSX3PJ/FNIIGVRJQWSX3PJ.LARGE.jpg", "https://cdn.instructables.com/FP7/HJ2G/JQWSX3QA/FP7HJ2GJQWSX3QA.LARGE.jpg", "https://cdn.instructables.com/F79/STCD/JQWSX3QB/F79STCDJQWSX3QB.LARGE.jpg"], "step_title": "Step 3: Assembly of 'pencil' Holder"}, {"step": 4, "steps_text": "assemble the pencil holder on the baseplate.\n(baseplate is best seen in picture 2 > underneath the pencil holder)", "step_imgs": ["https://cdn.instructables.com/FZF/9H2P/JQWSX3QD/FZF9H2PJQWSX3QD.LARGE.jpg", "https://cdn.instructables.com/F1E/CZNK/JQWSX3QC/F1ECZNKJQWSX3QC.LARGE.jpg", "https://cdn.instructables.com/F33/FOJT/JQWSX3QF/F33FOJTJQWSX3QF.LARGE.jpg", "https://cdn.instructables.com/F52/F2UG/JQWSX3QE/F52F2UGJQWSX3QE.LARGE.jpg"], "step_title": "Step 4: Assembly of Pencil Holder to Baseplate"}, {"step": 5, "steps_text": "follow examples in picture 1 to 6.", "step_imgs": ["https://cdn.instructables.com/F9C/59UU/JQWSX3QP/F9C59UUJQWSX3QP.LARGE.jpg", "https://cdn.instructables.com/F9V/YVP5/JQWSX3QW/F9VYVP5JQWSX3QW.LARGE.jpg", "https://cdn.instructables.com/FXC/8J2T/JQWSX3S5/FXC8J2TJQWSX3S5.LARGE.jpg", "https://cdn.instructables.com/FNA/4COR/JQWSX3P4/FNA4CORJQWSX3P4.LARGE.jpg", "https://cdn.instructables.com/FVP/A4FJ/JQWSX3O7/FVPA4FJJQWSX3O7.LARGE.jpg", "https://cdn.instructables.com/FN1/U6D6/JQWSX3OZ/FN1U6D6JQWSX3OZ.LARGE.jpg"], "step_title": "Step 5: Assembly of Post-it Holder to Baseplate"}, {"step": 6, "steps_text": "First: solder de 100 ohm resistors to the positive leg of the flash leds.\nPut all leds in the front plate.\nUse the little 'handles' to fix the leds in position > use wood glue\nSolder all negative legs (parallel circuit)\nSolder all positive legs (parallel circuit)\nSolder positive wires to the toggle switch (use 2 connectors next to each other)\nSolder batterypack to positive wire of the switch\nSolder batterypack to negative wire of the switch\nFINAL CHECK: insert 2 x AA batteries to check your circuit.", "step_imgs": ["https://cdn.instructables.com/F83/SVYY/JTON14UF/F83SVYYJTON14UF.LARGE.jpg", "https://cdn.instructables.com/FAI/N92A/JTON14KN/FAIN92AJTON14KN.LARGE.jpg", "https://cdn.instructables.com/FGL/7HVY/JTON14LY/FGL7HVYJTON14LY.LARGE.jpg", "https://cdn.instructables.com/F8H/FGA1/JTON14TE/F8HFGA1JTON14TE.LARGE.jpg", "https://cdn.instructables.com/F5Z/E4L2/JTON14RA/F5ZE4L2JTON14RA.LARGE.jpg", "https://cdn.instructables.com/FMN/6FEO/JTON14SS/FMN6FEOJTON14SS.LARGE.jpg", "https://cdn.instructables.com/FL9/7JM8/JTON1A2G/FL97JM8JTON1A2G.LARGE.jpg"], "step_title": "Step 6: Building Front Plate With Leds and Wiring"}, {"step": 7, "steps_text": "Tools needed: wooden hamer & wood glue.\nConnect toggle switch to the casing\nUse the hammer gently to connect front plate to base plate (in photo the order is different but nonetheless very helpfull)\nNow connect the casing all around the front plate and baseplate.\nFinally connect the back plate\nWhile using the wooden hammer > watch out for the leds! > don't crush them... ;)", "step_imgs": ["https://cdn.instructables.com/FGT/4QMH/JTON1IY7/FGT4QMHJTON1IY7.LARGE.jpg", "https://cdn.instructables.com/FQW/V1O1/JTON1I8S/FQWV1O1JTON1I8S.LARGE.jpg", "https://cdn.instructables.com/FP1/5ZP7/JQWSX4TS/FP15ZP7JQWSX4TS.LARGE.jpg", "https://cdn.instructables.com/F0X/FZ99/JTON1JDN/F0XFZ99JTON1JDN.LARGE.jpg", "https://cdn.instructables.com/FI6/TSUS/JTON1JDO/FI6TSUSJTON1JDO.LARGE.jpg", "https://cdn.instructables.com/FDW/L4LS/JTON1JC8/FDWL4LSJTON1JC8.LARGE.jpg", "https://cdn.instructables.com/FLT/WPKG/JTON1JCX/FLTWPKGJTON1JCX.LARGE.jpg"], "step_title": "Step 7: Final Assembly"}, {"step": 8, "steps_text": "Colour the preferred name with 'ecoline'.\n...or keep it blank... whatever you prefer!\nGlue it to the box ... and VOILA!\nYou're done!", "step_imgs": ["https://cdn.instructables.com/FSX/DFOM/JQWSX42P/FSXDFOMJQWSX42P.LARGE.jpg"], "step_title": "Step 8: Finishing Touch: Personalize!"}], "channel": ""}, {"category": "", "description": "We are a family of four and so have four bicycles. Every time we want to use them, there are surely some tyres to top up. My compressor is in the garage /workshop and not easily accessible from where we store the bicycles. Hence, we have to use a hand pump and by the time I have finished pumping all the tyres I have lost the enthusiasm to go out with the bikes. Hence I needed a portable and quick to set up compressor.\nWell I had some 5 litre containers lying around, an old computer power supply and a mini compressor that someone had given me a few years ago. Hence I decided to put them together, make a lazy mans portable compressor and recycle some waste!\nI am sure the electronics experts are going to crucify me but I can take it!\nI am not inventing anything but hope someone finds this instructable useful.", "title": "Lazy Man's Portable Bicycle Pump", "url": "https://www.instructables.com/id/Lazy-Mans-Portable-Bicycle-Pump/", "section": "technology", "steps": [{"step": 1, "steps_text": "Here we will be using a knife to cut holes and a drill, Always use protective gear and take all necessary precautions when using power tools. Read the instruction manual for your power tool carefully and pay particular attention to safety\nATTENTION: I am using an ATX power supply. Do not open the ATX power supply unless you know what you are doing. There are large capacitors inside and there is risk of electric shock from high voltage. It should not be necessary to open it.\nClean your container well before using.\nDo not use containers that contained dangerous, toxic or inflammable substances. Instead, dispose of them properly according to your local laws. Do not disperse toxic or dangerous substances into the atmosphere.\nThe object in this instructable is only meant for filling bicycle tyre with air. Hence it should only be used for 5-10 minutes maximum. My particular compressor cuts out automatically after 10 minutes of use. Even though I use a cigar lighter type socket, it is not meant as cigar lighter or phone charger or any other function. If you use for any other function then do so at your own risk.\nThe device uses 12V and could cause fires in case of short circuit or over heating. If you do not know what you are doing then seek expert advice or do not do this instructable.\nThis device is only to be used out of doors on a dry day. Do not use in damp or humid conditions or near water.\nThis device should only be used by adults.\nDisconnect the device from the power supply when not in use.\nDo not leave unattended while in use.\nFollow this instructable at your own risk. I will not accept responsibility for any damage or harm caused.", "step_imgs": ["https://cdn.instructables.com/F6F/BSA3/JQWSYGGH/F6FBSA3JQWSYGGH.LARGE.jpg"], "step_title": "Step 1: Safety First"}, {"step": 2, "steps_text": "You will need:\n1. A cigar /cigarette lighter socket.\n2. Mini compressor (mine is 60W 5A)\n3. Small switch (I used a toggle type)\n4 Some LED lights and a couple of approx. 220 ohm resistors and heat shrink tube\n5. Fuse holder\n6. Old power supply (mine is a small 12V 10Amp)\nDrawings are at the end of the instructable.", "step_imgs": ["https://cdn.instructables.com/FDI/K8KB/JQWSWR08/FDIK8KBJQWSWR08.LARGE.jpg", "https://cdn.instructables.com/F4T/SGMF/JSL3CIPB/F4TSGMFJSL3CIPB.LARGE.jpg", "https://cdn.instructables.com/FN3/MZQH/JQWSWR3I/FN3MZQHJQWSWR3I.LARGE.jpg", "https://cdn.instructables.com/FKX/MD9H/JSL3CNPE/FKXMD9HJSL3CNPE.LARGE.jpg", "https://cdn.instructables.com/FND/7Z1M/JQWSWR07/FND7Z1MJQWSWR07.LARGE.jpg", "https://cdn.instructables.com/F22/C1TS/JSL3CNEM/F22C1TSJSL3CNEM.LARGE.jpg", "https://cdn.instructables.com/FNN/VUI1/JSL3CPRI/FNNVUI1JSL3CPRI.LARGE.jpg"], "step_title": "Step 2: What You Will Need"}, {"step": 3, "steps_text": "As I mentioned, I used a 5 litre container that is normally used for liquids.\nclean it out and make sure it is dried well. Do not use a container that contained harmful or inflammable liquids.\nWe will need to make some holes in the container (see drawings in PDF at the end) and will start with a window on the side that is big enough to allow the power supply to pass through.\n1. On one of the larger sides, draw a square, 110mm from the base, 140mm x 140mm.\n2. make a hole in each corner, using a drill, so that you can start the cut. I used a small drill bit first (5mm) and then a larger one (8 or 9mm).\n3. cut the square out using scissors or knife. Take care because it is easy for the knife to slip and cut yourself.", "step_imgs": ["https://cdn.instructables.com/FM1/WFU0/JQWSWR3G/FM1WFU0JQWSWR3G.LARGE.jpg", "https://cdn.instructables.com/FLE/W7NT/JQWSWRJ8/FLEW7NTJQWSWRJ8.LARGE.jpg", "https://cdn.instructables.com/FS8/VVY2/JQWSWRJO/FS8VVY2JQWSWRJO.LARGE.jpg", "https://cdn.instructables.com/F6Q/KYWZ/JQWSWRK4/F6QKYWZJQWSWRK4.LARGE.jpg"], "step_title": "Step 3: Prepare the Container"}, {"step": 4, "steps_text": "I have loads of old ATX power supplies so I decided to use one of those for the power. I guess the electronics experts won't be happy to use a plastic container for such an application but, as you will see later, I put sheets of cork around the power supply to protect the container from heat. However, I should point out that the ATX is an old low power one. I guess another type of power supply could also be used.\nATTENTION: Do not open the ATX power supply unless you know what you are doing. There are large capacitors inside and there is risk of electric shock from high voltage. It should not be necessary to open it. If you want to clean dust from it, use a compressor and blow the dust out from the outside, there are plenty of ventilation holes. Wear a mask and do the job in a well ventilated area (outside for example).\nInstallation:\n1. If necessary, allow for the concave base of the container (some are concave).\n2 There is a drawing at the end of the instructable that you can use as a template.\n3. position the template approx 25mm from the base so that, if the base is concave, the weight of the ATX rests on the base.(see drawings at end)\n3. Mark the fixing holes and then a square just inside (approx 5mm) the position of the holes.\n4. Make 4 holes in each corner of the square and cut it out.\n5. Check the ATX fits and that the fixing holes, in the container, line up with the holes in the ATX", "step_imgs": ["https://cdn.instructables.com/FA4/5Q8B/JQWSWRCF/FA45Q8BJQWSWRCF.LARGE.jpg", "https://cdn.instructables.com/F0D/ACLS/JQWSWRG1/F0DACLSJQWSWRG1.LARGE.jpg", "https://cdn.instructables.com/FTZ/ZBDM/JQWSWRY2/FTZZBDMJQWSWRY2.LARGE.jpg"], "step_title": "Step 4: Cut Out for ATX Power Supply"}, {"step": 5, "steps_text": "I decided to fit a fan for cooling the mini compressor and also the ATX power supply\nI used a big 80mm fan and positioned it just above the ATX power supply (approx. 114mm from the base).\nSeeing as the container is not closed, I used the fan to blow over everything and then out the other side. However, I am not an expert and it may be better to draw the heat out. Perhaps someone could suggest the best way.\n1. position the fan where you want it and use it to draw the inner circle. Measure and draw the hole positions.\n2. cut the inner circle. I used a sharp knife but scissors are probably better.\n3. drill the fixing holes.", "step_imgs": ["https://cdn.instructables.com/FYH/WDMT/JQWSWRYJ/FYHWDMTJQWSWRYJ.LARGE.jpg", "https://cdn.instructables.com/FCV/5RXF/JSL3CJWD/FCV5RXFJSL3CJWD.LARGE.jpg", "https://cdn.instructables.com/F3A/RB6S/JSL3CJYN/F3ARB6SJSL3CJYN.LARGE.jpg"], "step_title": "Step 5: Cut Out for Fan"}, {"step": 6, "steps_text": "To protect the container from heat, I lined the inside of the container, with thin sheets of cork, where the power supply will be positioned. Then I fitted the pwer supply using the same special screws that were used to fit it to computer.\nI next fitted the fan. It is possible put some thin aluminium grill over the top or, if you have a 3D printer, print a fan cover. You can find plenty on Thingiverse: https://www.thingiverse.com/", "step_imgs": ["https://cdn.instructables.com/F9L/KB1K/JSL3CK34/F9LKB1KJSL3CK34.LARGE.jpg", "https://cdn.instructables.com/FT6/N0QM/JSL33Z6E/FT6N0QMJSL33Z6E.LARGE.jpg", "https://cdn.instructables.com/FJR/91K3/JT4TXT9T/FJR91K3JT4TXT9T.LARGE.jpg"], "step_title": "Step 6: Fitting the Power Supply and Fan"}, {"step": 7, "steps_text": "The compressor needs to be fixed well and I thought the sides of the container were too thin and flexible for good support. There are also no suitable fixing holes on my compressor.\nHowever, I noticed that the compressor does has 4 lateral supports for resting it on the ground and giving it a bit of stability. Hence I decided to make use of these and 4 cable ties to tie the compressor to the side of the container. For extra strength and support, I also used a piece of 5mm plastic sheet between the compressor and the wall of the container.\n1. Cut a piece of plastic sheet large enough so that the compressor sits on it and with approx 5mm extra border all round.\n2. Rest the compressor on the piece of plastic sheet and Mark the position of the supports\n3. drill a hole on outside position of the supports, next to each line. The holes should be big enough for the cable ties to pass through.", "step_imgs": ["https://cdn.instructables.com/FT8/0KDK/JSL3CKD1/FT80KDKJSL3CKD1.LARGE.jpg", "https://cdn.instructables.com/FBT/9JB3/JSL3CKFQ/FBT9JB3JSL3CKFQ.LARGE.jpg", "https://cdn.instructables.com/FOZ/6PKZ/JSL3CKN5/FOZ6PKZJSL3CKN5.LARGE.jpg"], "step_title": "Step 7: Fixing Holes for Compressor."}, {"step": 8, "steps_text": "For this step, you can take measurements or, if you have used a similar compressor, use the dimensions from my drawing. We will use the piece of plastic as a jig for drilling the holes.\n1. Measure the distance from the end of the compressor to the rear supports.\n2. Mark the centre of the narrow side of the piece plastic sheet and place it on the outside of one of the narrow sides of the container.\n3. line the centre line of the piece of plastic with the join line of the container and above the position of the ATX power supply. Allow enough space so the end of the compressor will not touch the power supply. (use the measurement taken in step 1 above)\n4. drill through the holes (previously made) in the piece of plastic so as to make corresponding holes in the plastic container.", "step_imgs": ["https://cdn.instructables.com/FL8/6HLL/JSL3CKH7/FL86HLLJSL3CKH7.LARGE.jpg", "https://cdn.instructables.com/FMJ/VKJI/JSL3CKSA/FMJVKJIJSL3CKSA.LARGE.jpg", "https://cdn.instructables.com/F0R/WA2M/JSL3CKTU/F0RWA2MJSL3CKTU.LARGE.jpg"], "step_title": "Step 8: Fitting the Compressor - Preparations"}, {"step": 9, "steps_text": "1. Place a sheet of cork on top of the ATX power supply.\n2. Place the piece of plastic, on the inside of the container, on the side where the holes were drilled previously.\n3. Place the compressor inside the container and on top of the piece of plastic.\n4. Line up the holes, in the plastic sheet, with those in the container.\n5. Fasten the compressor to the side of the container with cable ties. The cable ties need to pass through the holes ( in the plastic sheet and container next to the supports of the compressor) and then loop them back so they go back inside the container again.\n6. fasten/ pull tightly around the supports of the compressor.", "step_imgs": ["https://cdn.instructables.com/F9Y/IHCR/JQWSWRUC/F9YIHCRJQWSWRUC.LARGE.jpg", "https://cdn.instructables.com/FJ7/CNLC/JSL3CKVB/FJ7CNLCJSL3CKVB.LARGE.jpg", "https://cdn.instructables.com/FB8/6I8K/JSL3CKYB/FB86I8KJSL3CKYB.LARGE.jpg", "https://cdn.instructables.com/FA9/LD3U/JSL3CKWU/FA9LD3UJSL3CKWU.LARGE.jpg"], "step_title": "Step 9: Fitting the Mini Compressor."}, {"step": 10, "steps_text": "I wanted to be able to see the pressure gauge so added a window above it.\n1. Draw a rectangle over the area where the pressure gauge is fitted.\n2. Drill holes in each corner and cut out the rectangle.", "step_imgs": ["https://cdn.instructables.com/F8L/ZGPU/JSL33Z6C/F8LZGPUJSL33Z6C.LARGE.jpg", "https://cdn.instructables.com/FWY/NWEC/JQWSWRMW/FWYNWECJQWSWRMW.LARGE.jpg", "https://cdn.instructables.com/FFP/KCTA/JQWSWRXL/FFPKCTAJQWSWRXL.LARGE.jpg"], "step_title": "Step 10: Adding a Window"}, {"step": 11, "steps_text": "I used a piece of 3mm plexiglass that I had lying around. The container is not very good for gluing things too and is too thin to screw things onto. Hence I decided to use small self tapping screws into the plexiglass.\n1. I cut it just larger than the hole (approx 10mm is OK).\n2. Drill a small hole in each corner of the plexiglass to suit the screws you will use. I drilled 2mm holes. I used the screws from old toys that I had dismantled.\n3. Use the plexiglass as a jig and drill corresponding holes in the container.\n4. Make a hole for the cigarette lighter. Mine is 22mm diam. I only had the cutting bit like in the photo. However, I thing is is better and safer to use a hole saw perhaps.\n5. I also wanted ti fit some LED llights to show power ON and pump ON. Hence drill 2 holes for those too. The sizes depends on the LEDS you use and the LED holder. Mine are 6mm.\n7. Finally I made a 6mm hole for the on off switch.\n8. I tried to heat the plexiglass to make it slightly curved but it did not work very well. Perhaps better to use a thinner piece that bends but then there is not enough material for the screws.\n9. Fit the plexiglass to the container.", "step_imgs": ["https://cdn.instructables.com/FXC/5STY/JSL3CLDG/FXC5STYJSL3CLDG.LARGE.jpg", "https://cdn.instructables.com/FVN/KB70/JSL3CL60/FVNKB70JSL3CL60.LARGE.jpg", "https://cdn.instructables.com/FDZ/8MQ5/JSL3CL92/FDZ8MQ5JSL3CL92.LARGE.jpg", "https://cdn.instructables.com/FYG/ELLU/JSL3CLGJ/FYGELLUJSL3CLGJ.LARGE.jpg", "https://cdn.instructables.com/FVL/I2NU/JSL3CLEZ/FVLI2NUJSL3CLEZ.LARGE.jpg", "https://cdn.instructables.com/FZH/YNKY/JSL3CLN6/FZHYNKYJSL3CLN6.LARGE.jpg", "https://cdn.instructables.com/FHP/PDO3/JSL3CLI2/FHPPDO3JSL3CLI2.LARGE.jpg"], "step_title": "Step 11: Fitting Plexiglass to the Window"}, {"step": 12, "steps_text": "Here I am going into deep water and must make reference to my favourite instructable on ATX power supplies:\nhttps://www.instructables.com/id/Lab-ATX-Powersupp... Please read this before going any further. Be very careful with low voltage because, if connected badly/wrongly the high Amps can generate heat and cause fires.\nI am not an expert on electronics so please forgive and correct me if I write something wrong.\nMy small compressor is 5W and 5A so I figured my 10A power supply should be more than enough.\nI used a cigarette lighter socket that I bought at a local electronics fair for 2,00 Euro. I chose one with a cover/cap for extra protection when not in use.\nI only used the wires going to the long 24 pin connector. So cut the 24 pin connector off. and leave the others.\n1. for the cigarette lighter socket, I used 3 (yellow) wires from the 12V power supply so as to help avoid them getting hot. I then soldered them to a piece of 1.5mm mains wire and fitted a Faston which in turn I connected to one side of an automotive type fuse holder. I fitted a 8Amp fuse. I would have preferred to avoid the piece of 1.5mm wire but (apart from soldering the three wires directly) could see no other way because I could not fit the faston to the three wires.\n2. connect a faston on each end of another piece of 1.5mm wire. Fit one end to the to the other side of the fuse holder and the other end to the positive connection on the cigarette lighter.\n3. Take 3 ground wires and connect them to the centre (ground) connection of the cigarette lighter. I used an eye type terminal.\nMake sure all connections are tight, keep wires as short as possible and use plenty of shrink tube to avoid short circuits.", "step_imgs": ["https://cdn.instructables.com/F2S/7Z7E/JSL3CK87/F2S7Z7EJSL3CK87.LARGE.jpg", "https://cdn.instructables.com/FX6/EYXY/JSL3CLOQ/FX6EYXYJSL3CLOQ.LARGE.jpg", "https://cdn.instructables.com/FHJ/K4YC/JSL3CLQ7/FHJK4YCJSL3CLQ7.LARGE.jpg"], "step_title": "Step 12: Wiring Cigarette Lighter Socket"}, {"step": 13, "steps_text": "The LEDS are optional but look nice.\nPlease check again this great instructable for details on ATX power supplies for further information:\nhttps://www.instructables.com/id/Lab-ATX-Powersupp...\nI used the purple wire (standby) on the red LED\nI used the grey wire (power good) green LED\nI used the green wire for the switch.\nFor the RED LED:\nsolder a resistor to the longer (+) side of the LED. The resistor depends on the colour and voltage:\nhttp://www.resistorguide.com/resistor-for-led/\nHowever, I used a 220 Ohm resistor for each because I had them lying around.\nSolder the purple wire to the other end of the resistor\nSolder the short leg (-ve) of the LED to the black negative wire. Use plenty of heat shrink tube over the bare wires to avoid short circuits.\nI put heat shrink tube over the resistor too.\nFor the GREEN LED:\nsolder a resistor to the longer (+) side of the LED.\nSolder the grey wire to the other end of the resistor\nSolder the short leg (-ve) of the LED to the black negative wire. Use plenty of heat shrink tube over the bare wires to avoid short circuits. Again I put heat shrink tube over the resistor too.\nFor the switch:\nI used a toggle switch but perhaps better to use a slider to avoid switching on by accident.\nSolder the green wire to one pole and a black to the other. Again use plenty of heat shrink over the bare wires.\nDouble check all connections are correct, soldered well and insulated well\nfix all the lose wires and make them as tidy as possible.\nPut heat shrink on the ends of all the other wires that were cut previously but not used.", "step_imgs": ["https://cdn.instructables.com/FW4/A5BO/JSL3CNFB/FW4A5BOJSL3CNFB.LARGE.jpg", "https://cdn.instructables.com/FCJ/VO9O/JTEN8LNW/FCJVO9OJTEN8LNW.LARGE.jpg", "https://cdn.instructables.com/FU2/RMWU/JTEN8LNY/FU2RMWUJTEN8LNY.LARGE.jpg", "https://cdn.instructables.com/F23/C94E/JTEN8LNQ/F23C94EJTEN8LNQ.LARGE.jpg"], "step_title": "Step 13: Adding Some LEDS and a Switch"}, {"step": 14, "steps_text": "Now you can test it!\nConnect to the power supply, connect the compressor to the cigarette lighter and switch ON!\nPlease note that this is device is mainly for topping up the tires and not meant for prolonged use.\nEnjoy your day out!!", "step_imgs": ["https://cdn.instructables.com/FY4/CMDM/JT4TXT9Q/FY4CMDMJT4TXT9Q.LARGE.jpg", "https://cdn.instructables.com/FSS/OQUY/JTEN8LO4/FSSOQUYJTEN8LO4.LARGE.jpg", "https://cdn.instructables.com/F35/HYBW/JSL33Z6G/F35HYBWJSL33Z6G.LARGE.jpg", "https://cdn.instructables.com/FF2/4VDG/JT4TXT9U/FF24VDGJT4TXT9U.LARGE.jpg", "https://cdn.instructables.com/FL0/C1W2/JTEN8LO9/FL0C1W2JTEN8LO9.LARGE.jpg", "https://cdn.instructables.com/FYY/EN6X/JT4TXTAJ/FYYEN6XJT4TXTAJ.LARGE.jpg"], "step_title": "Step 14: Testing"}, {"step": 15, "steps_text": "I have included some drawings but the dimensions are approximate and depend on the container used.\nThe drawings for the connections are quite basic. Let me know if there are mistakes or improvements to make.\nThanks!!", "step_imgs": [], "step_title": "Step 15: Here Are the Various Drawings"}], "channel": ""}, {"category": "", "description": "In the \"Olden Days\" professional science was still in its infancy. People who trained in science and practiced science were using every ounce of creativity and imagination at their disposal to discover the nature of the world. They were scrappy and inventive, not unlike the modern day hobbyists and makers you see here on Instructables.\nFor this \"remix\" instructable I will outline a modern replication of the experiment that produced the first color photograph ever made. As you will see, the method for making the original color photograph was itself a remix! It was made in 1861 by Scottish physicist, James Clerk Maxwell working with the photographer Thomas Sutton (see a nice historical blog post here). The image was of a tartan ribbon and based on ideas he had worked out and described in a scientific paper six years earlier, in 1855 (you can get Maxwell's original paper here).\nIn a world driven by multi-media and digital imagery, it is easy to forget that not so long ago, photography was a brand new technology. As of right now, it is less than 200 years old! The first photograph known to be taken that is still surviving today was by Joseph Nic\u00e9phore Ni\u00e9pce in 1826 or 1827. It is a photograph taken through an upstairs window, looking out over the rooftops of his estate in Le Grase, Burgundy, France. The earliest photograph known to include people was by Louis Daguerre in 1838, showing the Boulevard du Temple in Paris.\nThese early photographs were all monochromatic -- \"black and white.\" They were largely based on chemical reactions of silver nitrate, which darkens when exposed to sunlight. Such reactions are called \"photochemical.\" While the novelty of capturing life exactly as it appeared at a given moment was enchanting, there was always something missing: color.\nThis Instructable will guide you through a modern implementation of the Maxwell-Sutton method. It is not necessary by any means, but it is enjoyable process and has its own charming elements that can be launching points into your own personal explorations of the artistry and science of photography.", "title": "The First Color Photograph", "url": "https://www.instructables.com/id/The-First-Color-Photograph/", "section": "technology", "steps": [{"step": 1, "steps_text": "Maxwell's method is to exploit monochromatic photography in a subtle and clever way. The basic idea is this:\nTake a black and white photograph of a scene through a colored filter. The image will be black and white, but the only things in the image are the things that can be seen through the filter.\nTake a multitude of black and white images through different filters. The classic choices are RED, GREEN, and BLUE.\nTo reconstruct the color image, shine a RED light through the \"red\" black and white image; shine a GREEN light through the \"green\" image, and a BLUE light through the \"blue\" image.\nAlign the three projected images together on the screen or wall, and the correct color image will appear!\nIn images where the colors are well defined and separated, it is easy to imagine how this might work. Above, I show a Hubble Space Telescope image of the Helix Nebula (NGC 7293). Hubble takes images using exactly the Maxwell method, through separate color filters, with the final image being a combination of the separate images. The three black and white images are the RED, GREEN, and BLUE breakdown of the Helix Nebula. You can compare them to the color image to see how different parts of the full color image are created.", "step_imgs": ["https://cdn.instructables.com/FNV/DZKP/JTT5LGHI/FNVDZKPJTT5LGHI.LARGE.jpg", "https://cdn.instructables.com/FJW/LQQN/JTT5LGII/FJWLQQNJTT5LGII.LARGE.jpg", "https://cdn.instructables.com/F7D/FDG4/JTT5LGI6/F7DFDG4JTT5LGI6.LARGE.jpg", "https://cdn.instructables.com/FF6/4HEF/JTT5LGHU/FF64HEFJTT5LGHU.LARGE.jpg"], "step_title": "Step 1: Maxwell Color Separation Method"}, {"step": 2, "steps_text": "To complete this Instructable, you'll need:\nsome cardstock\ntape\nRed, Green, Blue transparent plastic (see below)\nSmartphone (or other camera)\nTripod\nPrintable transparency sheets\nA bright light\nThe keys to the method are the colored filters. You can try just about anything, but the overall color balance you end up with depends on the color of the filters and how dark one filter is compared to another. For accurate color representation (as opposed to artistic -- see the last step!) you want the three filters to be roughly the same in terms of how dark the world looks through them, and slightly darker is better than slightly lighter.\nGood sources of filter material might be clear gel filters used in theatre lighting, or colored PVC sheets at your local art supply store. I've used clear cellophane for gift wrapping for this Instructable.", "step_imgs": [], "step_title": "Step 2: Materials"}, {"step": 3, "steps_text": "To make photographing simpler, we'll build a \"filter slide\" that holds a colored bit of filter in front of the lens on your camera. For this step I'll assume you are using a smartphone.\nBegin by cutting a 1-1/2\" wide strip of cardstock from the long dimension of your sheet.\nFold the strip around your smart phone so it overlaps itself making a loop sleeve.\nNote where the camera is; unfold the strip and using an excacto knife cut an opening over the location of the camera.\nTape the sleeve shut into a loop, and confirm your hole sits over the camera.", "step_imgs": ["https://cdn.instructables.com/FKX/5LUN/JTT5LHY1/FKX5LUNJTT5LHY1.LARGE.jpg", "https://cdn.instructables.com/FUW/Y4Y9/JTT5LHXZ/FUWY4Y9JTT5LHXZ.LARGE.jpg", "https://cdn.instructables.com/FGG/T5W5/JTT5LHZK/FGGT5W5JTT5LHZK.LARGE.jpg", "https://cdn.instructables.com/F1J/IV7D/JTT5LHWZ/F1JIV7DJTT5LHWZ.LARGE.jpg"], "step_title": "Step 3: Color Filter Mount"}, {"step": 4, "steps_text": "To make the filter slide, take another 1-1/2\" wide strip of cardstock about 8 inches long, and fold it in half. Cut three large windows through both sides using your exacto knife.\nIn each window, pick one of your three color filters and tape a bit into the window. Be careful to not get any tape in the window, otherwise it will show up in your photographs!\nIf you need the filter material to be a bit darker, you can fold it over on itself (I had to do this with my blue cellophane). If you do this, make sure it is as flat as possible, or your photographs will not come out crisp and in focus.\nWhen the filter windows are covered, tape the edges of the cardstock together so you can slide it into the filter mount as one piece without it flopping open.\nBe careful to place the windows so you can cover the camera with the film, not the cardstock. I had to trim my first filter slide a bit because the cardstock boundary was a bit too thick the first time I cut it, and it blocked about half of the camera view!", "step_imgs": ["https://cdn.instructables.com/FCW/H8A6/JTT5LITX/FCWH8A6JTT5LITX.LARGE.jpg", "https://cdn.instructables.com/FX5/DR2K/JTT5LIST/FX5DR2KJTT5LIST.LARGE.jpg", "https://cdn.instructables.com/FLB/358Z/JTT5LISS/FLB358ZJTT5LISS.LARGE.jpg", "https://cdn.instructables.com/F6L/CKGO/JTT5LISR/F6LCKGOJTT5LISR.LARGE.jpg", "https://cdn.instructables.com/FZ5/ZDUD/JTT5LIS4/FZ5ZDUDJTT5LIS4.LARGE.jpg"], "step_title": "Step 4: Color Filter Slide"}, {"step": 5, "steps_text": "Insert the slide with the filters underneath the filter mount against the body of your smartphone. Carefully slide the filter back and forth until one of the colors shows through the window.\nIf you look at the camera view, you will see a color filtered image of the world!\nWhen you are ready for the next filter, push the slide along underneath the mount until you reach the next filter window.", "step_imgs": ["https://cdn.instructables.com/FAY/FY4K/JTT5LJ4X/FAYFY4KJTT5LJ4X.LARGE.jpg", "https://cdn.instructables.com/F2A/WILT/JTT5LJ1X/F2AWILTJTT5LJ1X.LARGE.jpg"], "step_title": "Step 5: Using the Filter Slide"}, {"step": 6, "steps_text": "The key to successful Maxwell-Sutton image composition is insuring that each of the images is taken from exactly the same vantage point and orientation. For the method to work, you are taking three identical photographs through each of the different filters, so you don't want the camera to move between shots. Since I'm doing this with my smartphone, I use a small table-top \"Gorillapod\" tripod from Joby.\nSet-up your camera with your still life well lit up -- the camera flash will be behind your colored filters and will not illuminate the scene; I recommend turning the flash OFF so it doesn't fire and glare off the inside of the filter.\nSlide your filter into the sleeve to the first color (red for me) and take the first shot -- make sure you tap to focus! Carefully slide to the next color (green for me) and take a photo, then slide to the last color (blue for me) and take a photo.\nYou may experiment with different exposure settings in your camera, to see how the resulting filtered images look.", "step_imgs": ["https://cdn.instructables.com/FB6/NVVD/JTT5LKJF/FB6NVVDJTT5LKJF.LARGE.jpg", "https://cdn.instructables.com/FBN/0DZS/JTT5LKIN/FBN0DZSJTT5LKIN.LARGE.jpg", "https://cdn.instructables.com/FJO/MYEO/JTT5LKI2/FJOMYEOJTT5LKI2.LARGE.jpg", "https://cdn.instructables.com/F9G/9VAA/JTT5LJMW/F9G9VAAJTT5LJMW.LARGE.jpg"], "step_title": "Step 6: Photography Setup"}, {"step": 7, "steps_text": "One difference between what we are doing and what Maxwell did is we are taking COLOR photographs through filters, then recombining them directly. Maxwell took BLACK AND WHITE photos through filters, then shined the pictures through the correct color filters to recombine them.\nEach of your filtered images will look somewhat like the still-life, but not exactly. In the first image above I show a colored ribbon I used (I did not have a Maxwell family tartan ribbon!), and the three printed images taken through each of my filters.\nOn a piece of transparency, print out each of the red, green, and blue images separately.\nAs noted above, it is not perfect as the filters themselves are not perfectly balanced against one another; experimenting with different filters can make the color return more true to the original. As we will see below, all of the color information is in the filtered images, and software processing can make up for color imbalances.", "step_imgs": ["https://cdn.instructables.com/FBX/KPFW/JTT5LKQB/FBXKPFWJTT5LKQB.LARGE.jpg", "https://cdn.instructables.com/FCK/TEZL/JTT5LKU3/FCKTEZLJTT5LKU3.LARGE.jpg", "https://cdn.instructables.com/FAA/X1L4/JTT5LKTK/FAAX1L4JTT5LKTK.LARGE.jpg", "https://cdn.instructables.com/F7J/742D/JTT5LKTL/F7J742DJTT5LKTL.LARGE.jpg", "https://cdn.instructables.com/FL2/Q147/JTT5LKUL/FL2Q147JTT5LKUL.LARGE.jpg"], "step_title": "Step 7: Printing the Modern Maxwell Ribbon"}, {"step": 8, "steps_text": "Stack the three images on top of each other, and carefully align them. You'll notice in my ribbon, I had a small paper clip holding the ribbon in its shape, which was very useful for alignments!\nHold the stack up to a bright light and you will see the recombined color image!\nUsing random color filter material, it is hard to get a perfectly accurate color image out. It is complex combination of the color filters you use, your printer's interpretation of those colors, and the quality of the print. But you can clearly see the color pattern and the trends in the colors. In this particular case, I think the blue needed to be even darker.\nThe quality of your lightsource also matters. A light-table would be ideal, as would sunlight. The day I was doing this project was cloudy, but if I get a sunny day someday soon, I'll add a picture viewing with bright sunlight.", "step_imgs": ["https://cdn.instructables.com/F8D/GQM0/JTT5MABV/F8DGQM0JTT5MABV.LARGE.jpg", "https://cdn.instructables.com/FSM/K9MB/JTT5LLF7/FSMK9MBJTT5LLF7.LARGE.jpg"], "step_title": "Step 8: Viewing the Modern Maxwell Ribbon"}, {"step": 9, "steps_text": "Modern printing methods use a variant of the Maxwell technique to generate color on the printed page or screen, breaking images up into color channels (like RGB or CMYK) that when mixed give the full color images you are used to seeing; this is why your color printer has different color ink cartridges. In the first image above, I've put a 20x magnifying loupe up against a white space on my monitor, and you can see the individual pixels are lit up in combination of Red, Blue, and Green!\nIn software like Photoshop, the color separation information is stored in \"channels.\" We can have the software combine our color filter images into a full color image using the channels.\nWhich color channels you have in Photoshop depends on the image Mode you are using. In my version of Photoshop (CS6) you can find this under the menu Image > Mode, as shown in the second image above (we're using RGB for this Instructable).\nSelecting under the menu Windows > Channels will bring up the separated channels. In the third image above you can see I've opened a full color RGB image. The channels shows the combined RGB result, and then separate R layer, G layer, and B layer. They act just like layers do in any document -- you can turn individual ones on and off, or change them. This is what we will exploit in the following steps.\nIf you don't have access to Photoshop, there are also good openSource image manipulation software packages, such as GIMP (Gnu Image Manipulation Program) for all platforms.", "step_imgs": ["https://cdn.instructables.com/FJB/9TRY/JTT5MDO8/FJB9TRYJTT5MDO8.LARGE.jpg", "https://cdn.instructables.com/FEX/X8N0/JTT5LM32/FEXX8N0JTT5LM32.LARGE.jpg", "https://cdn.instructables.com/FAD/0KRF/JTT5LM2K/FAD0KRFJTT5LM2K.LARGE.jpg"], "step_title": "Step 9: Using Software for Recombination"}, {"step": 10, "steps_text": "Open up all three of your filtered images in Photoshop, and note down the dimensions. Open up a new document with the same dimensions as each of the filtered images.\nGo to the red image. Select the entire image (\"Select All\"), and copy it. Switch to the new image file, and view the channels described in the last step.\nNow we're going to copy the individual color filtered images into the correct color channel:\nSelect the RED channel, and paste. You'll see a greyscale version of the red image in the red channel layer.\nRepeat the process by copying the blue image file, and pasting it into the blue channel of the new image.\nLastly, copy the green image file and paste it into the green channel of the new image.\nYou can see the result in the last image above -- nothing has been done to rebalance this, but it looks very good! There is an excess of green, which you can see in the white background -- this is because the green of my clear cellophane is not what Photoshop thinks the basic green filter should be. Never-the-less, the color response you see is excellent -- your screen display, on a pixel by pixel basis, is much better and showing good combined color response than overlaying the fine grains of ink or laser toner on printed sheets!", "step_imgs": ["https://cdn.instructables.com/FH2/KRFI/JTT5LKQO/FH2KRFIJTT5LKQO.LARGE.jpg", "https://cdn.instructables.com/FXQ/FP1Z/JTT5LKQZ/FXQFP1ZJTT5LKQZ.LARGE.jpg", "https://cdn.instructables.com/FLV/FWLA/JTT5LKRR/FLVFWLAJTT5LKRR.LARGE.jpg", "https://cdn.instructables.com/FR7/0IFC/JTT5LMO1/FR70IFCJTT5LMO1.LARGE.jpg"], "step_title": "Step 10: Software and the Modern Maxwell Ribbon"}, {"step": 11, "steps_text": "As we noted above, software is good at rebalancing color, and can make up for the relative strength in the color of our individual filters. Photoshop has an auto-balancing feature that does its best to rebalance how much each of the color channels influences the overall image combination. Above, I've shown a rebalanced color combination, and the original full color ribbon for comparison. With the balancing, you can see the green background is closer to the truer white it is in real life.", "step_imgs": ["https://cdn.instructables.com/FE1/DLEH/JTT5LMYM/FE1DLEHJTT5LMYM.LARGE.jpg", "https://cdn.instructables.com/FGJ/BHKK/JTT5LMYY/FGJBHKKJTT5LMYY.LARGE.jpg"], "step_title": "Step 11: Software Color Balancing"}, {"step": 12, "steps_text": "I'm experimenting with this technique, but would like to settle on a good set of filters and good printing process so I can print a piece to hang in my house as art. The need for illumination is making me think about a shadow box with LED strips and a light diffuser behind the printed transparency stack. It will make for good conversation!\nBeyond that, there is a well developed science around color which you can learn about and exploit, but the ability to play around creatively can lead to unexpected and interesting artistic results. For instance, consider the color balanced collection of Rubik's style puzzles in the first image above, created using the process outlined in this Instructable. In the second and third images I took the red, green, and blue images and pasted them in different channels -- this makes strikingly different, and clearly not correctly colored images! In the last image, I took the red and blue channel and left them alone. For the green channel, I did a \"color inversion,\" replacing the green with it's color \"opposite\" (a kind of pink palette; Photoshop can do this automatically). The result is a very alien glowy green image! Awesome!\nI hope you enjoyed this remix of a photographic history, and experiment some on your own with creating your own images of the world!", "step_imgs": ["https://cdn.instructables.com/FJP/7RJM/JTT5M368/FJP7RJMJTT5M368.LARGE.jpg", "https://cdn.instructables.com/FF3/2IX1/JTT5M369/FF32IX1JTT5M369.LARGE.jpg", "https://cdn.instructables.com/FOV/4LHA/JTT5M36A/FOV4LHAJTT5M36A.LARGE.jpg", "https://cdn.instructables.com/F63/2CG6/JTT5M36H/F632CG6JTT5M36H.LARGE.jpg"], "step_title": "Step 12: Last Thoughts & Artistic Games"}], "channel": ""}, {"category": "", "description": "This dancing ballerina was created for my granddaughter.\nThe idea was so create a ballerina that rotated slowly while an RGB LED ring flashed and a waltz was played.\nI wish to thank Maitan for his Ballet Dancer which I modified ever so slightly for this project.\nThe video animation attached gives an idea (less the LEDs) for what I was trying to achieve.\nParts\nATtiny85 (initially I wanted to use a ATtiny13 but it could not handle the music)\nATtiny socket adaptor\nPiezo Passive Buzzer\nTurbine Worm Gear Motor (5-12V, 5-12rpm)\nRGB LED Ring (12bit WS2812)\nDC Socket\nRDP30N06LE Mosfet\n1N4001 Diode\nSelf-locking/latching push button\nPCB Stripboard\nTwo self-tapping screws\nResistor: 300-500\u03a9 & 10k\u03a9\nCapacitor: 1000 \u00b5F, 6.3V or higher\nWire\nHeat shrink tubing\nEpoxy Glue\nSuper Glue\n5V power supply\nSoftware\nBlender\nFreeCAD\nFrtizing\nMusescore\nArduino IDE\nTools\n3D Printer\nSoldering Iron & Solder\nWire strippers\nATtiny shield for Arduino\nDrill\nMultimeter\nHacksaw\nThis project cost me under $10 (USD) to build.", "title": "Dancing Ballerina - Light, Music, Action", "url": "https://www.instructables.com/id/Dancing-Ballerina-Light-Music-Action/", "section": "technology", "steps": [{"step": 1, "steps_text": "I include this merely to detail some of my learning. The original design was as shown in the photos i.e. the motor was to be mounted from below with the LED holder being glued into position. This however did not give a good finish with respect to how the LED holder lay and also did not allow enough space for me to secure the circuitry.\nAlso initially the part for securing the ballerina to the turning shaft was all one piece but unfortunately the structure was not strong enough and the model broke at the ankle as well as the point of the attaching section. I was able to glue the foot back on but try as I may I could not reattach the bottom part.\nI could have redesigned and reprinted the entire ballerina but in the end decided on different approach which I feel worked out even better in the end.", "step_imgs": ["https://cdn.instructables.com/FZ4/G9WY/JPX4C7BQ/FZ4G9WYJPX4C7BQ.LARGE.jpg", "https://cdn.instructables.com/F27/RTL3/JPX4C7BM/F27RTL3JPX4C7BM.LARGE.jpg", "https://cdn.instructables.com/FCO/O8HG/JPX4C7BJ/FCOO8HGJPX4C7BJ.LARGE.jpg"], "step_title": "Step 1: Original Concept"}, {"step": 2, "steps_text": "Using Blender I edited Maitan's dancer, removing the base and adding the small pedestal that would be used to attach the motor. Here I found a design flaw (or maybe it was as a result of my limited knowledge in the area of 3D printing). As you will see from my photos, while cleaning up the printed dancer both the foot and pedestal broke off. Using epoxy I managed to successfully stick the foot back but I could not re-secure the pedestal part. I therefore printed a separate cylinder that would attach tightly to the motor's shaft and into which the ballerinas foot could be glued. Before fixing the cylinder to the shaft, a dome was printed and placed over and around the shaft to finish it all off.\nThe Base, Ballerina and connecting dome parts where done in contrasting colours which helped add to the overall effect.\nInitially the motor mount was round but I then discovered that once the switches where attached to the main cone that this design did not give me enough room to insert the motor mount into position. I therefore made it square by slicing the round edges off (see comments on the pictures to get a better idea as to what I mean).\nExcept for the ballerina, FreeCAD was used to create the 3D printed parts (the FreeCAD files, together with the exported SLT file, are attached).\nNote: The Ballerina is not the correct size therefore it needs to be scaled in the 3D printing software so that the span between the tips of her hands is approximately 140mm wide.", "step_imgs": ["https://cdn.instructables.com/F9U/44EX/JTWS5H0U/F9U44EXJTWS5H0U.LARGE.jpg", "https://cdn.instructables.com/F18/MIYU/JTWS5H5F/F18MIYUJTWS5H5F.LARGE.jpg", "https://cdn.instructables.com/FOL/D3OY/JTWS5H75/FOLD3OYJTWS5H75.LARGE.jpg", "https://cdn.instructables.com/FUL/SMRT/JTWS5H5Z/FULSMRTJTWS5H5Z.LARGE.jpg"], "step_title": "Step 2: Printing the Parts"}, {"step": 3, "steps_text": "Disclaimer: I am no musician and so do not know the names of the notes or part of music scores hence please bear with my poor description below.\nLoad the MIDI file into MuseScore (or a program that will allow you to edit MIDI files) and then edit the music as follows:\nWhenever there are notes in the same column, keep only the top note, remove all notes beneath it.\nRemove the bottom set of notes. In this way you would have reduced the music to single notes.\nExport the new music score to a new MIDI file.\nThis file will now needed to be converted to the appropriate Arduino code. This can be achieved using: https://extramaster.net/tools/midiToArduino/\nThe resulting code can then incorporated into your final code.\nNOTE\nI have attached both audio files so that you can compare them (in MuseScore). This will hopefully help explain my above steps better.\nWaltz_No._2_by_Shostakovich.mid (original file)\nWaltz_No._2_by_Shostakovich-editted.mid\nBecause the ATtiny85 has only limitted memory, I had to also truncate the music so that all my desired code would fit on the chip.", "step_imgs": [], "step_title": "Step 3: Preparing the Music"}, {"step": 4, "steps_text": "Using an Arduino Uno and a ATtiny shield, upload the attached code to your ATtiny13.\nThe library that I used for the ATtiny85 was http://drazzy.com/package_drazzy.com_index.json. Add this to you additional boards (under file, preferences) and then install ATTinyCore by Spence Konde.\nThe basic points are as follows:\nThe LEDs were driven from pin 3.\nThe piezo speaker was driven from pin 1.\nThe motor was driven from pin 0 and set up this way so that I could slow it down to the desired speed. I used the following tutorial to learn how to use a mosfet to achieve this.\nOnce done the chip can be inserted into the ATtiny socket on the stripboard.\nThe ATtiny85 pinout can be found here.", "step_imgs": [], "step_title": "Step 4: Uploading the Code"}, {"step": 5, "steps_text": "Solder your wires into the LED ring. I used black wire so that they would not be noticeable (make sure the wires are long enough to run under the LED holder, down the inside of the Cone and then around the inside of the bottom of the base). Because they were all the same colour, I wrapped the ends with different coloured insulation tape so that I would know which points they connected to. Thread the wires through this hole and then glue the LED ring in place using epoxy.\nTo date this is the most complex circuit that I have put together and so I am sure that there is probably a much better and tidier way to have done this. I cut two pieces of stripboard as per the diagram. One to hold the ATtiny85 and one the mosfet and associated components.\nThe steps that I followed were as below:\nAttach the wires to the LED ring\nUsing epoxy glue, glue the LED wring into the LED holder.\nSecure the motor by screwing it into the holder\nGlue the piezo speaker to the base-plate (this, including all other glued fixtures where done using superglue)\nInsert the switches and power socket into the main cone and solder connecting wires to them. The contact on the switches need to be bent in order to make room for the motor mount to be inserted (take care when doing this as I landed up breaking a number of switches when doing this). It is very important to check that you have wired up your power socket correctly. It is therefore worth plugging your power supply into the plug and then using a multimeter to check that you have the polarity correct before connecting this to your circuit board.\nAssemble the ATtiny85 board\nAssemble the Mosfet board\nGlue the two stripboards to the baseplate\nBefore the motor and baseplate can be inserted into position, the ATtiny85 needs to be programmed (see the previous step). Once done the following steps can be completed:\nInsert the programmed ATtiny85\nInsert the motor and baseplate. This is a very tight fit but can be achieved without breaking anything if one takes care.\nUsing super glue, the base is then glued in place\nBefore attaching the finishing dome on top of the LED holder, us a hacksaw to cut the motor's shaft down to the right size so that the cylinder used to attach the ballerina will be sitting at the correct height i.e. more or less level with the top of the finishing dome.\nGlue the the dome in place\nGlue the ballerinas foot into the connecting cylinder\nPush the connecting cylinder into place on the motor's shaft.\nLast pointers:\nWhen needed, a small drill bit can be used to break the required sections on the stripboards. Simply hold the bit between your figures, rotating it so that the copper is removed from the board\nWhenever necessary, heat shrink tubing was used to protect connections from accidental shorting", "step_imgs": ["https://cdn.instructables.com/FWC/SP9F/JTWS5H2D/FWCSP9FJTWS5H2D.LARGE.jpg", "https://cdn.instructables.com/FN3/5SRS/JTWS5H3E/FN35SRSJTWS5H3E.LARGE.jpg", "https://cdn.instructables.com/FWY/CD5I/JTWS5H2R/FWYCD5IJTWS5H2R.LARGE.jpg", "https://cdn.instructables.com/FYV/CET8/JTWS5H6J/FYVCET8JTWS5H6J.LARGE.jpg", "https://cdn.instructables.com/FUO/OHGU/JTWS5H16/FUOOHGUJTWS5H16.LARGE.jpg", "https://cdn.instructables.com/FT6/VHAM/JTWS5H1I/FT6VHAMJTWS5H1I.LARGE.jpg", "https://cdn.instructables.com/F65/LH7I/JTWS5H49/F65LH7IJTWS5H49.LARGE.jpg", "https://cdn.instructables.com/F29/7M76/JTWS5H4T/F297M76JTWS5H4T.LARGE.jpg"], "step_title": "Step 5: Assembling the Project"}, {"step": 6, "steps_text": "As a prototype, I am very happy with the final product. This said, if I were to do this again, I would make the following changes:\nDo better FreeCAD drawings (for me, CAD is still a very real work in progress and I still have much to learn).\nLook at a way to better hide the wiring and components. While not obvious it is possible to look into the top of the cone and see some of the wires, switches and motor screws (which detracts from the overall effect). A quick fix would have been to spray-paint the internal parts black before final assembly. A better solution would have been to spend more time on the internal layout.\nI used the FastLED library together with part of the DemoReel example to achieve the LED effect. I am sure that there are more efficient ways to have achieved my final result but in this instance this worked for me. If I were to do this again I would probably spend more time trying to improve this section.\nI can't decide if the ballerina is still moving too fast. I am inclined to want to slow it down still a little further but alas it is too hard to get to the ATtiny85 to reprogram it.\nThe switch used to turn the sound off is very close to the power socket. Its position makes it hard to turn it on again while the power is plugged in. This switch should probably be changed to one that is similar to the on/off button used in this project.\nI should have changed the startup sequence so that the lights start-up, then the music and then the ballerina starts moving. Right now the the movement starts first.\nLast but not least I wish to thank the Unleash Space (and their amazing team) for opening the world of 3D printers, laser cutters, electronics etc to me and setting my creative juices abuzz with endless possibilities (to date virtually all of my projects are as a result of me being able to work in this space). I also wish to thank Instructables for making it possible for me to share my journey into the amazing Makerspace world.", "step_imgs": [], "step_title": "Step 6: Final Notes"}], "channel": ""}, {"category": "", "description": "What is a picoballoon and why would I want to build it?! I hear you ask. Let me explain. You all probably know what a HAB (High Altitude Balloon) is. It's a bunch of weird electronics stuff connected to a balloon. There are soooo many tutorials regarding HABs here on Instructables.\nBUT, and that's a very big BUT what they don't tell you most times in the tutorial is the cost of the filling gas. Now, you can build a decent HAB tracker under 50\u20ac, but if it weighs 200g (which is a pretty optimistic guess with the batteries, cameras, etc.) the helium to fill the balloon can cost you 200\u20ac or more, which is just too much for many makers like me.\nSo, as you can guess, picoballoons solve this problem by just not being bulky and heavy. Picoballoon is just a word for a light HAB. Light, what do I mean by light? In general, picoballoons are lighter than 20g. Now, just imagine that a processor, transmitter, a PCB, GPS, antennas, a solar panel and also a battery with a mass same as a disposable coffee cup or a spoon. Isn't that just insane?\nAnother reason (apart from the cost) why you would want to build this is its range and endurance. Classic HAB can fly for up to 4 hours and travel for up to 200km. A Picoballoon on the other hand, can fly for up to a couple of months and travel for up to tens of thousands of kilometres. One Polish guy got his picoballoon to fly around the globe multiple times. This of course also means that you will never see your Picoballoon again after launching it. That's why you want to transmitt all the data needed and of course keep the costs as low as possible.\nNote: This project is a collaboration with MatejHantabal. Be sure to check out his profile too.\nWARNING: This is a hard-to-do advanced level but also very fun project. Everything from PCB design to SMD to soldering will be explained here. That said, let's get to work.\nUPDATE: We had to remove the GPS module last minute because of its big power consumption. It probably can be fixed but we didn't have the time for that. I'll leave it in the instructable but beware that it's untested. You can still get location from TTN metadata so you shouldn't worry about that.", "title": "How to Make a Picoballoon", "url": "https://www.instructables.com/id/How-to-Make-a-Picoballoon/", "section": "technology", "steps": [{"step": 1, "steps_text": "So, when building a device like this, there are many variations and choices but every tracker needs a transmitter and a power supply. Most of the trackers will likely include these components:\n- a solar panel\n- a battery (lipo or supercapacitor)\n- a processor/microcontroller\n- a GPS module\n- a sensor/s (temperature, humidity, pressure, UV, solar radiation...)\n- a transmitter (433MHz, LoRa, WSPR, APRS, LoRaWAN, Iridium)\nAs you can see, there are many sensors and transmitters that you can use. What sensors you use is up to you. It doesn't really matter but most common are the sensors of temperature and pressure. Selecting a transmitter is much more difficult though. Every technology has some pros and cons. I won't break it down here because that'd be a very long discussion. What's important is that I chose LoRaWAN and I think that it's the best (because I didn't have a chance to test the others yet). I know that LoRaWAN has probably the best coverage though. You're welcome to correct me in the comments.", "step_imgs": ["https://cdn.instructables.com/FLQ/FH79/JSUOVQT0/FLQFH79JSUOVQT0.LARGE.jpg", "https://cdn.instructables.com/F3U/5TGP/JSUOVQTA/F3U5TGPJSUOVQTA.LARGE.jpg"], "step_title": "Step 1: The Principle"}, {"step": 2, "steps_text": "So, you'll need these things for this project:\nAdafruit Feather 32u4 RFM95\nUblox MAX M8Q (We didn't use this at the end)\nBME280 temperature/humidity/pressure sensor\n2xSupercapacitor 4.7F 2.7V\nSolar panel with output 5V\nCustom PCBs\nIf are launching by yourself, you also need this:\nAt least 0.1m3 of helium (search: \"helium tank for 15 balloons\") buyed locally\nQualatex 36\" self-sealing foil balloon\nEstimated project cost: 80\u20ac (only the tracker) / 100\u20ac (including balloon and helium)", "step_imgs": ["https://cdn.instructables.com/FH6/GNDL/JSUP0EYH/FH6GNDLJSUP0EYH.LARGE.jpg"], "step_title": "Step 2: Needed Parts"}, {"step": 3, "steps_text": "These tools could come in handy:\nwire stripper\nsoldering iron\nSMD soldering iron\npliers\nscrewdrivers\nglue gun\nmultimeter\nmicroscope\nhot air gun\nYou'll also need soldering paste.", "step_imgs": ["https://cdn.instructables.com/FUV/HT8F/J2UPFUP5/FUVHT8FJ2UPFUP5.LARGE.jpg"], "step_title": "Step 3: Recommended Tools"}, {"step": 4, "steps_text": "We had a hard time selecting the right microcontroller for the balloon. The Adafruit Feather turned out the best for the job. It fits all the required criteria:\n1) It has all the necessary pins: SDA/SCL, RX/TX, digital, analog\n2) It has the RFM95 LoRa transmitter.\n3) It's lightweight. It's mass is only 5.5g.\n4) It has very low power consumption while in sleep mode (only 30uA).\nBecause of this, we think that the Adafruit Feather is the best microcontroller for the job.", "step_imgs": ["https://cdn.instructables.com/FAB/MHLX/JTENA9C4/FABMHLXJTENA9C4.LARGE.jpg"], "step_title": "Step 4: Adafruit Feather 32U4"}, {"step": 5, "steps_text": "I'm truly sorry for what I'm going to tell you. We're going to need to make a custom PCB. It's going to be hard and frustrating, but it's necessary, so let's get started. Also, to understand the following text properly, you should read this awesome PCB design class by Instructables.\nSo, at first you will need to make a schematic. I made both the schematic and the board in EAGLE PCB design software by Autodesk. It's free, so download it!\nIt was my first time designing a PCB and I can tell you that it's all about getting hang of the Eagle interface. I designed my first board in 6 hours, but my second board took me less than an hour. Here is the result. A pretty nice schematic and a board I would say.\nWhen you have the board file ready, you need to create the gerber files and send them to the manufacturer. I ordered my boards from jlcpcb.com but you can choose any other manufacturer you like. I set the PCB thickness to 0.8mm instead of the standard 1.6mm because the board needs to be light. You can see my settings for JLC PCB in the screenshot.\nIf you don't want to download Eagle, you can just download \"Ferdinand 1.0.zip\" and upload it to JLC PCB.\nWhen you order the PCBs, just sit down comfortably in your chair and wait two weeks for them to arrive. Then we can continue.\nNote: You can notice that the schematic is a bit different from the actual board. That's because I noticed that the bare BME280 IC is too hard to solder so I changed the schematic for a breakout.", "step_imgs": ["https://cdn.instructables.com/F97/E3QJ/JTENA7DN/F97E3QJJTENA7DN.LARGE.jpg", "https://cdn.instructables.com/FF3/MQUB/JTENA7A0/FF3MQUBJTENA7A0.LARGE.jpg", "https://cdn.instructables.com/FM6/QAUN/JSUP0FN0/FM6QAUNJSUP0FN0.LARGE.jpg", "https://cdn.instructables.com/FHY/BY5N/JSUP0FN1/FHYBY5NJSUP0FN1.LARGE.jpg", "https://cdn.instructables.com/F8D/2XGP/JTON2U0M/F8D2XGPJTON2U0M.LARGE.jpg"], "step_title": "Step 5: PCB Design and Manufacturing"}, {"step": 6, "steps_text": "Another sad announcment: SMD soldering is not easy. Now really, it's fricking hard. May the lord be with you. But this tutorial should help. You can solder either using a soldering iron and a solder wick, or a soldering paste and a hot air gun. Neither of these methods was convenient enough for me. But you should get it done within an hour.\nPlace the components either according to the silkscreen on the PCB or according to the schematic.", "step_imgs": ["https://cdn.instructables.com/F64/CTUL/JTEN9RIV/F64CTULJTEN9RIV.LARGE.jpg", "https://cdn.instructables.com/FYT/MV5H/JTEN9RHM/FYTMV5HJTEN9RHM.LARGE.jpg", "https://cdn.instructables.com/F4M/KJS9/JTEN9RNW/F4MKJS9JTEN9RNW.LARGE.jpg", "https://cdn.instructables.com/FNN/K3TJ/JTENANMZ/FNNK3TJJTENANMZ.LARGE.jpg"], "step_title": "Step 6: SMD Soldering"}, {"step": 7, "steps_text": "After the SMD soldering is done, the rest of the solder job is basically a piece of cake. Almost. You've probably soldered before and I hope you'll want to solder again. You just need to solder the Adafruit Feather, antenas, the solar panel and the supercapacitors. Pretty straightforward I would say.\nPlace the components either according to the silkscreen on the PCB or according to the schematic.", "step_imgs": ["https://cdn.instructables.com/FQ8/1JCR/JTEN9WLH/FQ81JCRJTEN9WLH.LARGE.jpg", "https://cdn.instructables.com/F6Y/CUBN/JTEN9WRI/F6YCUBNJTEN9WRI.LARGE.jpg", "https://cdn.instructables.com/F0W/1GZG/JTEN9WPH/F0W1GZGJTEN9WPH.LARGE.jpg"], "step_title": "Step 7: Soldering"}, {"step": 8, "steps_text": "This is how the complete tracker should look. Weird. Nice. Interesting. Those are the words that come to my mind right away. Now you just need to flash the code and test if it's working.", "step_imgs": ["https://cdn.instructables.com/FEN/GJNB/JTENA1I7/FENGJNBJTENA1I7.LARGE.jpg", "https://cdn.instructables.com/FUJ/7S0A/JTENA0PA/FUJ7S0AJTENA0PA.LARGE.jpg", "https://cdn.instructables.com/F1O/DQCM/JTENA0VI/F1ODQCMJTENA0VI.LARGE.jpg", "https://cdn.instructables.com/FID/R2OT/JTENA0I2/FIDR2OTJTENA0I2.LARGE.jpg"], "step_title": "Step 8: Complete Tracker"}, {"step": 9, "steps_text": "The Things Network is a global city centered community LoRaWAN network. With more than 6887 gateways (receivers) up and running it's the biggest global IoT network in the world. It uses the LoRa (Long Range) communication protocol which is generaly at frequencies 868 (Europe, Russia) or at 915MHz (USA, India). It's most widely used by IoT devices sending short messages in cities. You can only send up to 51 bytes, but you can easily get a range from 2km to 15km. That is ideal for simple sensors or another IoT devices. And best of all, it's free.\nNow, 2-15 certainly isn't enough, but if you get to higher ground, you should have a better connection. And our balloon will be very high. At 10km above sealevel, we should get a connection from 100km. A friend launched a HAB with LoRa 31km up in the air and he got a ping 450km away. So, that's pretty reasonable.\nSetting up the TTN should be easy. You just need to create an account with your email and then you need to register the device. At first, you have to create an application. An application is the whole project homepage. From here you can change the decoder code, view the incoming data and add/remove devices. Just pick a name and you're ready to go. After that is done, you'll have to register a device in the application. You need to input the MAC adress of the Adafruit Feather (with the Feather in the packaging). Then you should set the activation method to ABP and you should disable frame counter checks. Your device should now be registered in the application. Copy the Device Adress, the Network Session Key and the App Session key. You'll need them in the next step.\nFor a more wholesome explanation, visit this tutorial.", "step_imgs": ["https://cdn.instructables.com/FGC/JOHE/JTON2Z2N/FGCJOHEJTON2Z2N.LARGE.jpg"], "step_title": "Step 9: TTN Setup"}, {"step": 10, "steps_text": "The Adafruit Feather 32U4 has an ATmega32U4 AVR processor. That means that it doesn't have a separate chip for USB communication (as Arduino UNO), the chip is included in the processor. That means that uploading to Adafruit Feather can be a bit harder compared to a typical Arduino board, but it works with Arduino IDE so if you follow this tutorial it should be fine.\nAfter you have setup the Arduino IDE and sucessfully uploaded the \"blink\" sketch you can move onto the actual code. Download \"LoRa_Test.ino\". Change the Device Adress, the Network Session Key and the App Session key accordingly. Upload the sketch. Go outside. Point the antenna to the city centre or in the direction of the nearest gateway. You should now see data popping up on the TTN console. If not, comment below. I don't want to put everything that could've happened here, I don't know if the Instructables server could handle such ammount of text.\nMoving on. If the previous sketch works, you can download \"Ferdinand_1.0.ino\" and change the things you were supposed to change in the previous sketch. Now test it again.\nIf you're getting some random HEX data on the TTN console, don't worry, it's supposed to do that. All the values are encoded in HEX. You're going to need a different decoder code. Download \"decoder.txt\". Copy it's contents. Now go to TTN console. Go to your application/payload formats/decoder. Now remove the original decoder code and paste in yours. You should now see all the readings there.", "step_imgs": ["https://cdn.instructables.com/FAT/7JRB/JTENACJZ/FAT7JRBJTENACJZ.LARGE.jpg"], "step_title": "Step 10: Coding"}, {"step": 11, "steps_text": "Now this should be the longest part of the project. Testing. Testing in all kinds of conditions. In extreme heat, stress and with a strong light (or outside on the sun) to mimick the conditions up there. This should take at least a week so there will be no surprises in terms of the tracker behavior. But that is an ideal world and we didn't have that time because the tracker was built for a competition. We did some last minute changes (literally like 40 minutes before launch) so we didn't know what to expect. That is noot good. But you know, we still won the competition.\nYou'll probably need to do this part outside because the sun isn't shining inside and because the LoRa won't have the best reception in your office.", "step_imgs": ["https://cdn.instructables.com/F06/PSER/JTENANSM/F06PSERJTENANSM.LARGE.jpg", "https://cdn.instructables.com/FOJ/MAQB/JTENANSP/FOJMAQBJTENANSP.LARGE.jpg", "https://cdn.instructables.com/FII/NCDK/JTENANTQ/FIINCDKJTENANTQ.LARGE.jpg", "https://cdn.instructables.com/F0X/ERTJ/JTENANTR/F0XERTJJTENANTR.LARGE.jpg"], "step_title": "Step 11: Testing"}, {"step": 12, "steps_text": "Picoballoons are very sensitive. You can't just fill them with helium and launch them. They really don't like that. Let me explain. If the buoyant force is too low the balloon will not rise up (obviously). BUT, and this is the catch, if the buoyant force is too high, the balloon will fly too high, the forces on the balloon will be too big and it will pop and fall on the ground. That is the main reason why you really want to do these calculations.\nIf you know physics a bit, you shouldn't have a problem understanding the formulas above. There are some variables that you need to input into the formula. This includes: filling gas constant, thermodynamic temperature, pressure, mass of the probe and mass of the balloon. If you follow this tutorial and use the same balloon (Qualatex microfoil 36\") and the same filling gas (helium) the only thing that will actually differ is the mass of the probe.\nThese formulas should then give you: the volume of helium needed to fill up the balloon, the speed at which the balloon rises, the altitude at which the balloon flies and also the free lift weight. These are all very useful values. The rising speed is important so the balloon doesn't hit obstacles because it's too slow and it's really nice to know how high will the balloon fly. But the most important of them is probably the free lift. The free lift is required when you will be filling the balloon in step 14.\nThanks to TomasTT7 for help with the formulas. Check out his blog here.", "step_imgs": ["https://cdn.instructables.com/F1K/0H9X/JTIYHXPP/F1K0H9XJTIYHXPP.LARGE.jpg", "https://cdn.instructables.com/FKB/N0MS/JTON2YWB/FKBN0MSJTON2YWB.LARGE.jpg"], "step_title": "Step 12: Some Funky Formulas"}, {"step": 13, "steps_text": "So, your tracker works. That piece of shit you've worked on for two months actually works! Congratulations.\nSo let's review what risks your probe child can encounter up in the air:\n1) There will not be enough sunlight hitting the solar panel. The supercapacitors will drain. The probe will stop working.\n2) The probe will get out of range and no data will be received.\n3) Strong wind gusts will destroy the probe.\n4) The probe will pass through a storm during ascent and rain will short the circuit.\n5) An ice coating will form on the solar panel. The supercapacitors will drain. The probe will stop working.\n6) Part of the probe will break under mechanical stress.\n7) Part of the probe will break under extreme heat and pressure conditions.\n8) An electrostatic charge will form between the balloon and air forming a spark, which will damage the probe.\n9) The probe will get hit by lightning.\n10) The probe will get hit by a plane.\n11) The probe will be get hit by a bird.\n12) Aliens will hijack your probe. Can happen especially if the balloon will be above area 51.", "step_imgs": [], "step_title": "Step 13: Risks"}, {"step": 14, "steps_text": "So, that's it. It's the D-day and you're gonna launch your beloved picoballoon. It's always good to know the terrain and all possible obstacles. Also you must monitor the weather (mainly the wind speed and direction) constantly. That way, you minimize the chances of your 100\u20ac worth of equipment and 2 months of your time hitting into a tree or into a wall. That'd be sad.\nInsert a pipe in the balloon. Tie the balloon to something heavy with nylon. Put the heavy thing on a scale. Reset the scale. Secure the other end of the pipe on your helium tank. Start slowly opening the valve. You should now see negative numbers on the scale. Now is the time to use the free lift value you calculated in step 12. Shut off the valve when the negative number reaches the mass of the balloon + free lift. In my case it was 15g + 2.4g so I shut off the valve at exactly -17.4g on the scale. Remove the pipe. The balloon is self-sealing, it should seal automatically. Untie the heavy object and replace it with the probe. You're now ready to launch.\nJust watch the video for all the details.", "step_imgs": [], "step_title": "Step 14: Launch!"}, {"step": 15, "steps_text": "Ohh, I remember the feeling we had after the launch. The stress, the frustration, a lot of hormones. Will it work? Will our work be worthless? Did we just spend so much money on something that doesn't work? These are the kind of questions we were asking ourselves after the launch.\nLuckily, the probe responded about 20 minutes after the launch. And then we received a packet every 10 minutes. We lost contact with the probe at 17:51:09 GMT. It could have been better, but it's still fine.", "step_imgs": ["https://cdn.instructables.com/FC3/N1TO/JTENACE7/FC3N1TOJTENACE7.LARGE.jpg"], "step_title": "Step 15: Receiving the Data"}, {"step": 16, "steps_text": "This was one of our most difficult projects up to date. Not everything was perfect but that's OK, it's always like that. It was still very successful. The tracker worked flawlessly. It could've done that for a lot longer but that doesn't matter. And, we ended up second in the Picoballoon competition. Now you might say that being second in a contest with 17 people is not such a success BUT keep in mind that this an adult engineering/construction contest. We're 14 years old. The ones we were competing with were adults with engineering and possibly even aerospace background and with much more experience. So yeah, overall, I would say that it was a big success. We got 200\u20ac, which was approximately double of our expenses.\nI'm certainly going to build a version 2.0. It's going to be much better, with smaller components (barebone processor, RFM95) and it's going to be more reliable so stay tuned for the next instructable.\nOur main goal now is to win the Epilog X contest. Fellow makers, if you liked this instructable, please consider voting for it. It would really help us. Thank you soooooo much!", "step_imgs": [], "step_title": "Step 16: Further Plans"}], "channel": ""}, {"category": "", "description": "Introduction\nDid you run out of input pins? Don't worry, here is a solution without any shift registers. In this video, we are going to learn about connecting more than 100 switches to a single pin of Arduino.", "title": "100+ Switches in a Single Pin of Arduino", "url": "https://www.instructables.com/id/100-Switches-in-a-Single-Pin-of-Arduino/", "section": "technology", "steps": [{"step": 1, "steps_text": "Take a look at the circuit diagram first, otherwise, you won't be able to understand what I'm saying. Whenever I press a switch the circuit will be completed through a different number of resistors,\nIn the circuit, if we press the 5th switch then the circuit is completing through all the 4 resistors,\nIf we press the 4th switch the circuit is completing through 3 resistors,\nIf we press the 3rd switch the circuit is completing through 2 resistors,\nIf we press the 2nd switch the circuit is completing through 1 resistor,\nAnd if we press the 1st switch the circuit is completing without any resistors.\nThat means the voltage reaching the analog pin A1 will be different for each switch, so we will use analogRead() function to read the values from the pin A1 and then we use an if else if condition to perform different operations for each switch.", "step_imgs": [], "step_title": "Step 1: Working Theory"}, {"step": 2, "steps_text": "First connect five push switches to a breadboard.\nOf course, you can connect maximum of 1023 switches theoretically to a 8-bit microcontroller like Arduino.\nThen interconnect resistors in between the push switches as shown in the diagram.\nConnect the other end of all the switches to 5v of Arduino, as you can see here I have connected the in such a way that one end is connected to the blue line of the beard board which is connected to the 5v.\nThen from the end of the final switch connect a wire to analog pin A1 of Arduino.\nThen connect a resistor across A1 and GND of Arduino, which is for pull down, That is to keep the value to zero when no switch is pressed.", "step_imgs": ["https://cdn.instructables.com/FF8/61FH/JTT5QCPC/FF861FHJTT5QCPC.LARGE.jpg"], "step_title": "Step 2: Let's Build"}, {"step": 3, "steps_text": "Let's connect some LEDs to check the functioning of our circuit.\nConnect the LEDs as shown in the circuit,\nConnect all the positive terminal all LEDs to the 5v.\nConnect the negative terminal of each LEDs to the digital pin D12 to D8 of Arduino, respectively.\nPractically we have to connect the LEDs through resistors for good life time.", "step_imgs": ["https://cdn.instructables.com/F5U/8GGC/JTT5QCQK/F5U8GGCJTT5QCQK.LARGE.jpg"], "step_title": "Step 3: Connect Some LEDs"}, {"step": 4, "steps_text": "Take a look at the program. All the lines are commented properly.\nNow let's upload the code and see it in action.", "step_imgs": [], "step_title": "Step 4: Coding"}, {"step": 5, "steps_text": "Keypad\nFull-sized keyboard for Arduino.\nCustom mini keyboard for your Raspberry Pi tablet, etc..", "step_imgs": [], "step_title": "Step 5: Applications"}, {"step": 6, "steps_text": "Multiple switches won't work in a single instant. If you can think of another application post it in the comments.\nThanks.", "step_imgs": [], "step_title": "Step 6: Drawbacks"}], "channel": ""}, {"category": "", "description": "If you are a Maker like me, and there is a good chance you are since you are here on Instructables reading this project, you may have the following problem. If you are working in your office/workshop/garage or elsewhere in your home, and someone rings your doorbell, it can be difficult to hear the doorbell ring. You might be using power tools or have other machines that make a lot of noise. You might be listening to headphones or a Bluetooth speaker. You might just be far away from your doorbell chime.\nSo, in this Instructable, we will build an small IoT device that connects to your doorbell and delivers a notification to your phone when someone rings your doorbell. The project, called Wello 3, connects to your home WiFi network and is powered by your doorbell transformer. When someone rings your doorbell, the chime inside your house will still ring, but the Wello 3 will also send a notification to an app on your phone so that you don\u2019t miss the doorbell ringing.\nThe project is made from a Particle Photon microcontroller/WiFi module, a power conversion and regulation system, a doorbell detection system, an Android application, and firmware running on the Photon. The project will also involve building a custom PCB and using reflow soldering to assemble the board.", "title": "Build a Cloud-Connected WiFi Doorbell", "url": "https://www.instructables.com/id/Build-a-Cloud-Connected-WiFi-Doorbell/", "section": "technology", "steps": [{"step": 1, "steps_text": "Building your own cloud-connected doorbell is a moderately complex project involving several different skills, techniques, and technologies. Therefore, before we get started with the build, it will be useful to have an overview of the steps involved that will act as a roadmap for the rest of this Instructable:\nOrder your PCB\nThe hardware for this project will be built on a custom PCB. We will start by ordering the PCB because it will take a little while to get delivered. We will also discuss the PCB design in much greater detail in a later step.\n\nOrder your Solder Paste Stencil\nWe will be using solder paste and a reflow skillet to build the PCB for this project. While it is possible to apply solder paste to the PCB manually using a syringe, the PCB is small and the parts are spaced close together. Therefore, it will make the process much, much easier to use a stencil for applying solder paste. In this step we will get the stencil ordered.\nGo Shopping for Parts\nOnce we have the PCB ordered, we will also need to order all the remaining electrical components and hardware needed to build the project.\n3D Print or Order the Base\nWe will use a 3D printed base for this project to hold the electronics. If you own a 3D printer, the design files needed to print the enclosure are provided in this step. Otherwise, if you don\u2019t have access to a 3D printer, this step also discusses ordering your enclosure from a 3D printing service.\nPopulate and Reflow the PCB\nThe PCB is designed using a number of surface mount components. We will need to apply solder paste to the PCB, populate it with components, and reflow the board using a \u201creflow skillet.\u201d\nAssemble the Enclosure\nOnce we\u2019re done assembling the PCB, we will put it into the enclosure to complete the physical build portion of this project.\nInstall the Device\nThe device receives power from the transformer that runs your doorbell. This step discusses how to find your doorbell transformer and safely install your cloud-connected dongle.\nProgram the Controller\nWith the PCB assembled and the device powered by the doorbell transformer, the onboard controller, a Particle Photon, will need to be flashed with the firmware that will make the device operate.\nDownload the App\nThis step is an easy one to complete. The Wello 3 app can be downloaded from the Play Store. In this section of the Instructable though, we will also discuss how the app functions.\nReceive Notifications\nWhen your Doorbell Rings With the build complete, controller flashed, and the app download, you can finally use your Wello 3 to receive notifications on your phone when somebody rings your doorbell. Furthermore, you can use services like IFTTT to extend your cloud-connected doorbell to controlling other devices in your home.", "step_imgs": ["https://cdn.instructables.com/F7P/JPVB/JTMSWPHB/F7PJPVBJTMSWPHB.LARGE.jpg", "https://cdn.instructables.com/FX8/YDZN/JTMSWPIP/FX8YDZNJTMSWPIP.LARGE.jpg", "https://cdn.instructables.com/FAI/7OMA/JTON4BNJ/FAI7OMAJTON4BNJ.LARGE.jpg", "https://cdn.instructables.com/FBG/RQVN/JTT5OIMB/FBGRQVNJTT5OIMB.LARGE.jpg", "https://cdn.instructables.com/F0B/ECMP/JTT5OKSN/F0BECMPJTT5OKSN.LARGE.jpg", "https://cdn.instructables.com/FGF/VME8/JTT5JQ8I/FGFVME8JTT5JQ8I.LARGE.jpg"], "step_title": "Step 1: Project Overview"}, {"step": 2, "steps_text": "Ordering your PCB\nThere are a number of parts we will need to order for this project. First is the PCB that will form the main part of the Wello 3 cloud-connected doorbell. You can download the PCB design files for this project from the website I created to host all the various design assets needed to complete this Instructable, toglefritz.com/wello.\nThe PCB design is available as SCH/BRD files for use in Autodesk Eagle. We will only need the BRD file to order the PCB, but the schematic will be useful in case you wish to modify the design or in case we need to troubleshoot the PCB after assembling it. As for ordering the PCB, there are a number of PCB fabhouses with the capabilities necessary to make the board; I highly recommend OSH Park. I\u2019ve used OSH Park for dozens of projects and I\u2019ve always been satisfied. The service offers high-quality boards, great customer service, and quick turnaround times.\n[PCB images]\nTo get your order placed, head over to the OSH Park website. At the very top of the page, there is a button allowing you to upload your BRD file. It will take just a moment for OSH Park to upload and process the file.\nAfter uploading the PCB design file, OSH Park will present a series of views for previewing the PCB before placing your order. If you were designing your own PCB from scratch, this is an extremely useful page for ensuring the PCB will turn out the way you want.\nThe next and final page of the ordering process will give you a few options for your order. The only option you might optionally select for this project is the Super Swift Service which will get your PCBs delivered more quickly for a higher per inch price.\nIt will take around two weeks for the PCB to come in (unless you upgrade to the Super Swift Service) but in the meantime, we can order the other parts for this project.\nUnderstanding the PCB Design\nYou can certainly just order your PCBs, wait for them to arrive, and move on with the rest of this project. But if you\u2019d like to learn a little more about the electronics\u2019 design, this section goes over many of the details. The PCB holds a couple subsystems: the power system, a Particle Photon microcontroller and WiFi chip, user-interface components, and a circuit used to detect when the doorbell is pressed.\nThe Power System\nOne of the biggest challenges for this project is powering the Particle Photon (more on that later) off the doorbell transformer. The transformer provides between 16V and 21V AC. The Particle Photon requires 5V DC. Therefore, it will take a couple different components to run the Photon off the transformer. First we will convert the alternating current from the doorbell transformer into direct current using a bridge rectifier. A bridge rectifier made from a set of diodes that basically allow current to flow through the device in only one direction. The bridge rectifier connects to the transformer output and delivers DC voltage to the rest of the Wello 3 system.\nSo now we have direct current voltage from the bridge rectifier, but this conversion actually causes two more challenges. First, the way a bridge rectifier transforms AC voltage into DC voltage is as if you applied an absolute value to the AC voltage. If you graph AC voltage, it looks like a sine wave, alternating between positive and negative current. The bridge rectifier makes all the current positive.\nThis results in a \u201cchoppy\u201d DC voltage, called ripple. This will cause the Particle Photon not to operate correctly. Therefore, a smoothing capacitor is used to even out the peaks and valleys in the voltage. You can see the smoothing capacitor in the schematic above.\n\nThe second issue, which is a little more complex to explain, so I will leave the explanation to Wikipedia, is that the voltage conversion from AC to DC will result in a higher voltage on the DC side. In fact, the DC voltage will be about 1.414 times greater than the AC voltage. So, converting and smoothing our 21V AC input from the doorbell transformer to DC will give us about 30V DC. This is obviously much too high for the Particle Photon and it would let all the magic smoke out of the chip if we connected the microcontroller directly to the bridge rectifier output.\nSo that brings us to the next component in the Wello 3 power system, a voltage rectifier. We can\u2019t just use a simple linear voltage regulator though. The Particle Photon operates (estimating on the high side for safety) at 100mA. We need to step down the voltage from 30V to 5V. Therefore, a linear voltage regulator would dissipate (25V \u00d7 0.1A =) 2.5W of power. This would just overheat a linear regulator.\nSo, we will use a switching voltage regulator, also called a DC/DC converter, which provides a way of stepping down the voltage much, much more efficiently than a linear voltage regulator. This means that the DC/DC converter can deliver 5V without producing dangerous heat. For this project we will use a switching regulator module from RECOM Power.\nSo now, from the bridge rectifier, to a smoothing capacitor, to a switching voltage regulator, we get a clean 5V source to run the Photon from a doorbell transformer.\nThe Particle Photon\nWe mentioned the Particle Photon several times in the last section, but what is it? The Particle Photon is one of my favorite development platforms. The board integrates a powerful microcontroller along with WiFi functionality and an amazing cloud platform to allow communication between the controller and a smartphone app. Programming the Particle Photon is done via an online IDE but if you\u2019ve ever used an Arduino, the code will look extremely familiar. Furthermore, the Particle Photon can be programmed over the air, meaning we do not need it plugged into a computer to upload code (although we can flash firmware that was too).\nThe User Interface\nThe user-interface physically on the board is part of the Particle Photon. First we have a button that will again be familiar if you\u2019ve worked with Arduino boards. The Reset button allows the Photon to be rebooted in the event that an error of some kind causes the system to become unresponsive.\nThere is a second button on the Particle Photon, the setup button. This button is used to place the Photon into a couple different modes including Listening mode in which the Photon can be connected to a WiFi network or the network connection can be changed. Plus, the setup and reset buttons can be used together to put the Photon into some more advanced modes used for troubleshooting.\nWe should not need those modes for this project though, but just in case you want to explore, the PCB includes a set of header pins that can be used to interface the controller to a computer via USB.\nThe board also has an RGB LED used to indicate the status of the Photon. The LED will illuminate with different colors and different animation patterns to indicate the device mode and any errors. Particle has a guide explaining all the LED codes for the Particle P1.\n\nDoorbell Detection\nIf running the Particle Photon off a doorbell transformer is the most difficult part of the electrical design for the Wello 3, allowing the controller to detect when the doorbell is pressed is the second biggest challenge. The Wello 3 doesn't connect to the doorbell button on the outside of the house. Rather, it connects directly to the transformer output. Therefore, we cannot detect when the button is pressed like we would a normal button in a basic Arduino tutorial.\nWe will need to get a bit clever to allow the Photon to detect a button press indirectly and without getting fried by the AC current. The circuit to make this happen takes advantage of the way the doorbell transformer delivers power. This type of transformer is designed to deliver a constant current to the system, not a constant voltage. When somebody presses your doorbell, the transformer energizes a solenoid that makes the doorbell ring. When this happens, the voltage delivered by the transformer drops from 21V AC to about 16V AC. It is this voltage drop that the Particle Photon will detect and interpret as the doorbell button being pressed.\nThe doorbell detection circuit has two main parts. First, as discussed in the power system above, the DC voltage off the bridge rectifier is high, about 30V. So the first part of the design uses a classic voltage divider to drop the voltage down to a safe level. SparkFun has a great article if you want to learn more about voltage dividers. When the doorbell button is not pressed, the output from the voltage divider will be about 1.59V. When somebody presses the doorbell button, this voltage drops to 0.84V.\nThis setup (with a little bit of modification) could be connected directly to a GPIO pin on the Particle Photon and detected as HIGH or LOW states. However, the transformer output is a little \u201cdirty\u201d and prone to high voltage transients. So, to protect the Particle Photon we will use an optoisolator (also called a phototransistor) between the controller and the voltage divider. An optoisolator allows the Particle Photon to detect the state of the transformer through the voltage divider without being connected directly to the power source.\nThe voltage divider is designed such that, when the doorbell button is not closed, and the transformer is at 21V, the power off the voltage divider is sufficient to activate the optoisolator. However, when the doorbell is pressed, and the voltage drops, it is no longer enough to power the optoisolator, so it turns off. The optoisolator will be connected to GPIO pin D4 on the Particle Photon.", "step_imgs": ["https://cdn.instructables.com/FT5/N4O8/JTMSX2ZZ/FT5N4O8JTMSX2ZZ.LARGE.jpg", "https://cdn.instructables.com/FZ6/9R6G/JTMSJQ72/FZ69R6GJTMSJQ72.LARGE.jpg", "https://cdn.instructables.com/FQS/95QR/JTMSJQ2X/FQS95QRJTMSJQ2X.LARGE.jpg", "https://cdn.instructables.com/F1L/H6N0/JTMSJPZC/F1LH6N0JTMSJPZC.LARGE.jpg", "https://cdn.instructables.com/FNY/X6IF/JTMSWSV1/FNYX6IFJTMSWSV1.LARGE.jpg", "https://cdn.instructables.com/FVT/ATRW/JTMSWRY5/FVTATRWJTMSWRY5.LARGE.jpg", "https://cdn.instructables.com/FDQ/5DIJ/JTMSWSOS/FDQ5DIJJTMSWSOS.LARGE.jpg", "https://cdn.instructables.com/FS8/OIT6/JTMSWSOU/FS8OIT6JTMSWSOU.LARGE.jpg", "https://cdn.instructables.com/FV9/PBJ4/JTMSWSF1/FV9PBJ4JTMSWSF1.LARGE.jpg", "https://cdn.instructables.com/FJI/9JYD/JTMSWUNY/FJI9JYDJTMSWUNY.LARGE.jpg", "https://cdn.instructables.com/FFN/NP44/JTMSWUYN/FFNNP44JTMSWUYN.LARGE.jpg", "https://cdn.instructables.com/F5A/HOLU/JTMSWWD2/F5AHOLUJTMSWWD2.LARGE.jpg", "https://cdn.instructables.com/FVM/QIZR/JTMSWWHS/FVMQIZRJTMSWWHS.LARGE.jpg", "https://cdn.instructables.com/F4Y/CZ9F/JTMSWX9G/F4YCZ9FJTMSWX9G.LARGE.jpg", "https://cdn.instructables.com/FFK/SK85/JTMSX1EL/FFKSK85JTMSX1EL.LARGE.jpg", "https://cdn.instructables.com/FBV/ZK2U/JTMSX1HI/FBVZK2UJTMSX1HI.LARGE.jpg", "https://cdn.instructables.com/FI8/BEUK/JTMSX25H/FI8BEUKJTMSX25H.LARGE.jpg"], "step_title": "Step 2: Order Your PCB"}, {"step": 3, "steps_text": "Now that we\u2019ve ordered the PCB, we will move on to the next item on our shopping list, a tool that will be basically essential for assembling the PCB later on. The PCB design uses several SMD components. Therefore, the easiest way to assemble the board will be with reflow soldering. The process will be covered in much greater detail once we get to assembling the PCB.\nFor now, we need to order a solder paste stencil that will be used to accurately, quickly, and easily apply solder paste to the blank PCB. If you\u2019ve never worked with solder paste in the past, don\u2019t worry. It is not a difficult technique to master, but knowing how to reflow PCBs with solder paste will pay dividends in later projects as the skill can be used to prototype professional-looking PCBs that can be transitioned directly to manufacturing. Solder paste is a thick slurry made from soldering flux mixed with extremely tiny particles of solder.\nSolder paste typically comes in syringes when ordered in small quantities. It is certainly possible to apply solder paste manually by carefully using the syringe to apply a small dollop of solder paste onto each SMD pad on the PCB. However, having done this on quite a few prototype PCBs in the past, I highly, highly recommend, just spending a bit of extra cash to get a solder paste stencil. It will save you a bunch of time, frustration, eye strain, and it will produce much better results.\nA solder paste stencil is a thin sheet of metal (typically stainless steel) or plastic polyamide film, with little holes cut out for each SMD pad in your PCB design.\nTo get your stencil ordered, I recommend OSH Stencils. Like OSH Park, OSH Stencils provides a painless ordering process that does not require you to work with confusing sets of Gerber files. The service also offers fair prices, and, in my experience, OSH Stencils makes and ships stencils remarkably quickly. The process for ordering your solder paste stencil is similar to the process used to order the PCB in the previous step.\nFirst, head over to the OSH Stencils website. There is a button at the top of the page that will allow you to upload the SCH schematic file just like we did on OSH Park.\nNext, OSH Stencils will process the file. The next page you will be presented with allows you to verify that OSH Stencils has correctly assigned each layer in your design. I\u2019ve never had an issue with the service misidentifying any layers, but it could happen if you use custom layers in any PCB designs you might make in the future. As long as the layers have the correct file type, you can click the Generate Stencils button in the upper-right corner of the page.\nThe next screen allows you to customize how your stencil will be made. First of all, you will need to select the type of material that will be used for the stencil. There are two material types: stainless steel and polyamide film. Even though it costs more, I prefer using stainless steel stencils because they are stiffer and easier to use without a frame. However, if you\u2019d like to save a bit of money on your stencil, polyamide will work just fine as well. As for the thickness of the material, the recommended 4 mil thickness will work just fine for this project. Once you select a material, you will get a preview of what your stencil will look like.\nThen, with your stencil generated and material selected, you only need to fill in your shipping information and submit payment to complete your order. OSH Stencils makes and ships stencils in a remarkably short time so you should have your stencil within a week or so.", "step_imgs": ["https://cdn.instructables.com/FPG/PIZ5/JTMSX34H/FPGPIZ5JTMSX34H.LARGE.jpg", "https://cdn.instructables.com/FXP/0ZR3/JTMSX34I/FXP0ZR3JTMSX34I.LARGE.jpg", "https://cdn.instructables.com/FRR/GQPL/JTMSX35I/FRRGQPLJTMSX35I.LARGE.jpg", "https://cdn.instructables.com/FQY/FQWB/JTMSX3DI/FQYFQWBJTMSX3DI.LARGE.jpg", "https://cdn.instructables.com/FEZ/5INM/JTMSX474/FEZ5INMJTMSX474.LARGE.jpg", "https://cdn.instructables.com/FC4/GT70/JTMSX8DW/FC4GT70JTMSX8DW.LARGE.jpg", "https://cdn.instructables.com/FTR/4R7G/JTMSX81U/FTR4R7GJTMSX81U.LARGE.jpg", "https://cdn.instructables.com/F9W/51V4/JTMSX86M/F9W51V4JTMSX86M.LARGE.jpg", "https://cdn.instructables.com/F79/PIJ1/JTMSX88A/F79PIJ1JTMSX88A.LARGE.jpg", "https://cdn.instructables.com/FH0/O66T/JTT5MRTX/FH0O66TJTT5MRTX.LARGE.jpg"], "step_title": "Step 3: Order Your Solder Paste Stencil"}, {"step": 4, "steps_text": "We\u2019ve ordered the two most complex parts of this project, the PCB and the solder paste stencil, but there is still a whole list of other components and parts we will need to order, and also we will be 3D printing some parts. There are two tables below. The table below lists all of the electronic components and mechanical parts needed to complete the build. I also included links for each of the parts to Mouser for the electronic components, and McMaster Carr for the mechanical parts. You can feel free to get your parts from other vendors if you like others better.\nIn the case of the passive electronic components, you can substitute the parts linked in the table with any other generic part of the same specifications.\nElectrical Components\nPart Quantity Approx. Cost Link\nParticle P1 1 $18 Mouser\nBridge Rectifier 1 $0.66 Mouser\nDC/DC Converter 1 $4.91 Mouser\nOptoisolator 1 $1.35 Mouser\n10k Resistor 0805 1 $0.57 Mouser\n10k Resistor 1W 2512 1 $0.28 Mouser\n560 Resistor 6332 1 $0.67 Mouser\n1.3 Resistor 1W 2512 1 $0.47 Mouser\nScrew terminal 1 $0.75 SparkFun\n$27.66\nMaterials and Tools\nIn addition to the list of components and parts in the table above, you will need some materials and tools to complete this project. I am leaving out common tools like a screwdriver and masking tape.\nSolder paste The PCB is designed with all SMD components and we will assemble the board using reflow soldering. Therefore, we will need solder paste. For this project, we will only need a small amount of solder paste, which can be purchased in syringes. I prefer using lead-free solder even though it is slightly more difficult to work with.\nESD Safe Tweezers Another essential tool for working with SMD components is a good set of tweezers. Tweezers make it much easier to pick up, manipulate, and accurately place components on a board. Tweezers built for this purpose are built with a coating that prevents static buildup in order to protect sensitive electronic components.\nMagnifier There are a couple parts that need to be oriented in specific ways, that are also very small parts. A magnifying glass or loupe makes it much easier to identify the correct orientation for small SMD parts.\nElectric hotplate There are a number of different tools we could use to reflow the PCB, which means melting the solder paste in order to connect all the components electrically to the board. There are professional reflow ovens, some Makers use modified toaster ovens, but in this Instructable we will use an electric hotplate/skillet. Using a \u201creflow skillet\u201d is a common technique used for one-off PCB assembly. Compared with the other reflow tools, using a skillet has the advantage of being extremely cheap, and leaving the PCB visible for inspection during the reflow process. I use a cheap hotplate from Amazon, but you can really use just about any electric hotplate as long as you never plan on using it for food ever again.\nFume extractor As the solder paste melts on the reflow skillet, the flux it contains will boil off. While the fumes this produces are not extremely hazardous, they are still not the best thing to breathe or get into your eyes. Therefore, as an extra safety precaution, it is recommended to use a fume extractor during the reflow process. A fume extractor is simply a fan that sucks air through a filter. There are several different designs; I use a simple model available from Amazon. Just a quick note to address a common misconception about soldering fumes, there is absolutely no risk of inhaling lead while soldering. First of all, in this Instructable, we are using lead-free solder. But even if you are using solder than contains lead, the boiling temperature of lead is 3180oF, which is way, way, way hotter than anything we will be doing in this project. The fumes produced by soldering are just flux and rosin boiling out of the solder.", "step_imgs": ["https://cdn.instructables.com/FSD/XEMQ/JTMSY4Z4/FSDXEMQJTMSY4Z4.LARGE.jpg", "https://cdn.instructables.com/FGM/C3PZ/JTMSY56C/FGMC3PZJTMSY56C.LARGE.jpg", "https://cdn.instructables.com/FT2/D7JF/JTMSY571/FT2D7JFJTMSY571.LARGE.jpg", "https://cdn.instructables.com/FTF/0YWO/JTMSY574/FTF0YWOJTMSY574.LARGE.jpg", "https://cdn.instructables.com/FD7/W63X/JTMSY577/FD7W63XJTMSY577.LARGE.jpg", "https://cdn.instructables.com/FOP/XN6F/JTMSY57C/FOPXN6FJTMSY57C.LARGE.jpg", "https://cdn.instructables.com/FXN/EXD8/JTMSY57F/FXNEXD8JTMSY57F.LARGE.jpg", "https://cdn.instructables.com/FS4/L263/JTMSY58T/FS4L263JTMSY58T.LARGE.jpg"], "step_title": "Step 4: Gather Your Parts"}, {"step": 5, "steps_text": "The Wello 3 PCB will be mounted on a plastic base we will 3D print in this step. The base is a simple design consisting of a plate with a hole on either end, along with two upright tabs. The Wello 3 PCB will mount into the base by snapping into the tabs. The base can be mounted to a wall or other surface using small screws or nails.\nThe design files for the part are available on the Wello 3 website just like the PCB design files. The files are available in STL format so that you can simply download the parts and get printing straight away. Otherwise, if you want to make any modifications to the design, you can also download the design files as Fusion 360 archive files (.f3d) or in STEP file format.\nIf you own a 3D printer, the Wello 3 base is not a demanding part to print. I used a Monoprice MP Select Mini V2 (which costs under $200) to print the enclosure pictured in this step. Just about any material will work fine for this project. I used black PLA, but ABS or even nylon would work perfectly well. As for print settings, I recommend a layer height of 0.1mm so that your printer will capture the small ridges on the tabs.\nIf you don\u2019t have a 3D printer, there are several 3D printing services from which you can order your parts, have them professionally 3D printed, and delivered right to your door. I recommend 3D Hubs because the service has affordable pricing and is extremely easy to use.", "step_imgs": ["https://cdn.instructables.com/F8N/VV0F/JTOMZHJU/F8NVV0FJTOMZHJU.LARGE.jpg", "https://cdn.instructables.com/FZF/1PK0/JTOMZHJW/FZF1PK0JTOMZHJW.LARGE.jpg", "https://cdn.instructables.com/FZK/S4LH/JTOMZHJX/FZKS4LHJTOMZHJX.LARGE.jpg", "https://cdn.instructables.com/FS2/VZB8/JTON4BEM/FS2VZB8JTON4BEM.LARGE.jpg", "https://cdn.instructables.com/FV9/53QN/JTON4BEQ/FV953QNJTON4BEQ.LARGE.jpg", "https://cdn.instructables.com/FJ1/JZD2/JTON4BNC/FJ1JZD2JTON4BNC.LARGE.jpg", "https://cdn.instructables.com/FGK/2CK2/JTON4BND/FGK2CK2JTON4BND.LARGE.jpg", "https://cdn.instructables.com/FAI/7OMA/JTON4BNJ/FAI7OMAJTON4BNJ.LARGE.jpg"], "step_title": "Step 5: 3D Print the Base"}, {"step": 6, "steps_text": "Alright, now that we\u2019ve spent quite a bit of time getting all the parts ordered and the enclosure 3D printed, it is finally time to begin building. In this step, we will begin the process of assembling the Wello 3 PCB. The first phase of this process is to apply solder paste onto the board using the solder paste stencil.\nWe will begin by securing the blank PCB to the table. One of the issues we will need to address as we set up our work environment is that, because the Wello 3 PCB is so small, it can be difficult to get the solder paste stencil to sit completely flat on top of the PCB. It will have a tendency to bend over the PCB. In the image below, you can see that the solder paste stencil bows up slightly in the middle because the stencil is wider than the PCB.\nTo correct this issue, I like to arrange a couple PCBs around the one we will be working on to create a larger flat plane of PCBs. If you ordered your PCB from OSH Park, you should have at least three copies of the PCB. You can place the extras on either side of the PCB you will be using. I simply used a couple other PCBs from a past project. By arranging PCBs like this, it will be much easier to keep the solder paste stencil flat on top of the PCB, which is important for applying an even, accurate layer of solder paste.\nThen, to keep your platform of PCBs in place, use masking tape to tape the PCBs onto the table. Of course, you will need to leave your main PCB open so we can apply solder paste.\nNext, carefully position the solder paste stencil on top of the PCB. You will need to make certain that all the gold pads on the PCB line up perfectly with the holes in the stencil. Once you have the stencil in exactly the right place, apply a strip of tape onto one side of the stencil. This tape will serve two purposes. First, it will keep the solder paste in place. Second, after we apply the solder paste, we will be able to use this strip of tape like a hinge. This will make it easier to remove the stencil from the PCB without smearing any of the solder paste.\nNow it\u2019s time to apply the solder paste. Now, solder paste is a fairly expensive material. So, in order to minimize waste, I like to use the solder paste syringe to apply a small drop of solder paste next to each of the holes in the PCB. I find that this technique works better than loading up a solder paste squeegee with paste and running it across the PCB because we will not be able to get the solder paste back into the syringe. You should dispense the solder paste on the same side of each hole because we will be using the squeegee in one direction on the first pass.\nThe final step is to use a solder paste squeegee to wipe the solder paste across the stencil, which will deposit solder paste onto each pad on the PCB. If you ordered your stencil from OSH Stencils, it should have come with a solder paste spreader that looks like a credit card. Starting from the side of the stencil closest to the tape holding it down, hold the solder paste spreader at a 45 degree angle and slowly move it across the stencil. Ideally you will be able to get the solder paste into each hole in one pass. However, with the DIY setup we are using, I find that it almost always takes two or three passes with the solder paste spreader before each hole in the stencil will be perfectly filled.\nOnce you get the solder paste evenly applied to the PCB through the stencil, carefully remove the stencil from the board. You will want to make certain not to move the stencil laterally or it will smear the solder paste. Fortunately, if you do make a mistake, you can just clean the solder paste off the board with rubbing alcohol and start again.\nIn the video below, you can see one pad in the middle with a bit too much solder paste, but the rest of the board turned out well. Once it melts during the reflow process, the surface tension of the molten solder is very high. So if you have little mistakes like the one in the video, don\u2019t worry about it too much. Solder paste has a way of self-correcting small issues with amount and alignment.\nSo now you should have a PCB with a perfect rectangle of solder paste applied to each pad.", "step_imgs": ["https://cdn.instructables.com/F5W/7M9I/JTMSXPJL/F5W7M9IJTMSXPJL.LARGE.jpg", "https://cdn.instructables.com/FL4/B039/JTMSXPIG/FL4B039JTMSXPIG.LARGE.jpg", "https://cdn.instructables.com/FJW/VJ16/JTMSXPLY/FJWVJ16JTMSXPLY.LARGE.jpg", "https://cdn.instructables.com/FJ8/SLZ6/JTMSXSI6/FJ8SLZ6JTMSXSI6.LARGE.jpg", "https://cdn.instructables.com/F3U/XD4V/JTMSXSIH/F3UXD4VJTMSXSIH.LARGE.jpg", "https://cdn.instructables.com/FUS/QVJO/JTMSXSK5/FUSQVJOJTMSXSK5.LARGE.jpg", "https://cdn.instructables.com/FBU/XH0F/JTMSXU2M/FBUXH0FJTMSXU2M.LARGE.jpg", "https://cdn.instructables.com/FFG/MMXH/JTMSXW6E/FFGMMXHJTMSXW6E.LARGE.jpg", "https://cdn.instructables.com/FHO/6R89/JTMSXWMU/FHO6R89JTMSXWMU.LARGE.jpg"], "step_title": "Step 6: Apply Solder Paste to Your PCB"}, {"step": 7, "steps_text": "The next step in assembling the PCB is to place all the electronic components onto the board in the correct places. This process can be a little bit tedious, but if you just put on some good music, it can be fun too. To help you put the parts in the right places, especially all the passive components, I created a visual guide. The guide has all the passive components on it so you know which resistor and capacitor values go where on the PCB.\nThere is a strategy to populating a PCB. First of all, since I am right handed, I like to populate the board from left to right. This way, I can avoid reaching over existing parts and risking accidentally bumping them. I started on the side of the board opposite the place for the Particle Photon by placing the three large resistors used as part of the voltage divider circuit. These resistors are not polarized, so their orientation does not matter. In fact, none of the resistors or capacitors in this design are polarized.\nNext, again working from left to right, I placed the two smaller passive components. Next up are the two larger components, the optoisolator and the bridge rectifier. We will start with the optoisolator. This component is asymmetrical so it must be oriented in the correct way. If you take a look at the PCB where the optoisolator goes, you will notice a small line next to one of the pins on the outside edge of the board. Then, if you look at the optoisolator, it has a round dot in one corner. That round dot should be positioned closest to the line on the PCB. Finally, we have the bridge rectifier. This part also needs to be oriented correctly. Fortunately, the way the bridge rectifier should be oriented is quite obvious. On the PCB, there are two pins with ~ marks next to them, one with a + symbol and one with a - symbol. On the top of the bridge rectifier, you will find the same symbols. Simply orient the part so that the symbols match up.", "step_imgs": ["https://cdn.instructables.com/F4U/1MPI/JTMSY0RW/F4U1MPIJTMSY0RW.LARGE.jpg", "https://cdn.instructables.com/FGH/V7N2/JTMSY1Q6/FGHV7N2JTMSY1Q6.LARGE.jpg", "https://cdn.instructables.com/FYH/LH89/JTMSY1AX/FYHLH89JTMSY1AX.LARGE.jpg", "https://cdn.instructables.com/FR7/WRZ8/JTMSY17K/FR7WRZ8JTMSY17K.LARGE.jpg", "https://cdn.instructables.com/FEM/TW5G/JTMSY18Y/FEMTW5GJTMSY18Y.LARGE.jpg", "https://cdn.instructables.com/F9Z/XL7H/JTT5OW7I/F9ZXL7HJTT5OW7I.LARGE.jpg"], "step_title": "Step 7: Populate the PCB"}, {"step": 8, "steps_text": "Now it\u2019s time to don your chef\u2019s hat because it is time to cook a PCB. Right now, we have the board populated with components and covered in solder paste. To melt the solder paste and complete the PCB assembly process, we will use a reflow skillet. A reflow skillet is simply an electric hotplate onto which we will place the PCB to heat it up to the point that the solder paste melts. The Chip Quik solder paste I am using in this Instructable has a relatively low melting temperature around 300oF.\nThe setup for reflow soldering is simple. Just plug in your hotplate with the fume extractor positioned just behind the hotplate. I also like to get a small cardboard box about the same height as the hotplate onto which we will be able to slide the PCB after all the solder reflows to let the PCB cool.\nThe actual process of reflowing the PCB is simple as well. First, being careful not to bump any of the components, place the PCB onto the cold hotplate and turn on the solder fume extractor. Then, turn the hotplate to a medium setting (also, if you have a space heater and a bunch of powerful photography lighting, you might want to turn those off to avoid tripping a breaker like I did). As the PCB heats, you will see the solder paste go through a couple phases. First, the paste will liquify and flow outward from the pads a little bit. Then you will start to see fumes come off the board as the flux inside the solder paste beings to boil. Next, you will see the paste turn more silver like liquid metal (which is what it is) and it will begin to contract onto the pads again. As the solder melts, I like to move the PCB around slightly just to help with even heating. The smaller pads on the PCB will reflow more quickly than the largest ones. The pads on the bridge rectifier will likely be the last to reflow so keep an eye on those pads. Once you see that all the pads on the PCB are covered by a shiny layer of liquid solder, gently slide the PCB off the hotplate onto a cardboard box or other surface that will not be damaged by the heat. Let the PCB cool completely before touching it again.\nIn the video below, you can see the process of reflowing the Wello 3 PCB. The video starts with a cold hotplate and ends with the finished PCB being removed from the hotplate and placed on a cardboard box to cool.", "step_imgs": ["https://cdn.instructables.com/F20/QETR/JTMSY4LU/F20QETRJTMSY4LU.LARGE.jpg", "https://cdn.instructables.com/FKC/PFV9/JTT5OXYS/FKCPFV9JTT5OXYS.LARGE.jpg"], "step_title": "Step 8: Reflow Your Board"}, {"step": 9, "steps_text": "We have all the SMD parts added to the PCB now. Next we will solder on the through-hole components in order to complete the PCB assembly. There are three different PTH parts we need to add: the DC/DC converter module, the screw terminal, and the Particle Photon.\nWe will begin with the screw terminal. This part should be placed on the end of the board opposite the \u201cWello 3\u201d label. The openings of the screw terminal should face the outside of the board so that the wires we will connect to the terminal in a later step will not go over the rest of the PCB.\nNext we will add the DC/DC converter. This part needs to be oriented in the correct direction. If you take a look at the PCB, you will find a dot next to one of the pins for the DC/DC converter. The converter itself also has a dot above one of the pins. The converter should be oriented with the dots matching up. Finally, we can add the Particle Photon.There are two sets of pads for the Photon. The inner set of pads will be used to connect the Photon. The outer set breaks out all of the Photon pins in case you want to add to the design or incorporate other components. The Photon board should be oriented with the USB port opposite the power circuitry we just added. To connect the Particle Photon, just solder on each of the pins.", "step_imgs": ["https://cdn.instructables.com/FDY/A80N/JTMSKCPJ/FDYA80NJTMSKCPJ.LARGE.jpg", "https://cdn.instructables.com/FAZ/ZDLD/JTMSKCNO/FAZZDLDJTMSKCNO.LARGE.jpg", "https://cdn.instructables.com/FS6/LT28/JTMSKCMU/FS6LT28JTMSKCMU.LARGE.jpg", "https://cdn.instructables.com/FES/J9B2/JTMSKCNS/FESJ9B2JTMSKCNS.LARGE.jpg", "https://cdn.instructables.com/F3O/O3F1/JTMSKCLZ/F3OO3F1JTMSKCLZ.LARGE.jpg", "https://cdn.instructables.com/FJ9/6AHF/JTMSKCBC/FJ96AHFJTMSKCBC.LARGE.jpg", "https://cdn.instructables.com/FN9/42AL/JTMSKCEO/FN942ALJTMSKCEO.LARGE.jpg", "https://cdn.instructables.com/FO4/WHRT/JTMSKCJF/FO4WHRTJTMSKCJF.LARGE.jpg", "https://cdn.instructables.com/FKV/8BNC/JTMSKC7Z/FKV8BNCJTMSKC7Z.LARGE.jpg", "https://cdn.instructables.com/FQW/W0ON/JTMSKC1P/FQWW0ONJTMSKC1P.LARGE.jpg", "https://cdn.instructables.com/FM9/B0KR/JTMSKBZM/FM9B0KRJTMSKBZM.LARGE.jpg", "https://cdn.instructables.com/FGZ/5F9S/JTMSKC5I/FGZ5F9SJTMSKC5I.LARGE.jpg", "https://cdn.instructables.com/FUQ/ZU0L/JTMSKCB4/FUQZU0LJTMSKCB4.LARGE.jpg", "https://cdn.instructables.com/FNS/VWKD/JTMSKBLI/FNSVWKDJTMSKBLI.LARGE.jpg", "https://cdn.instructables.com/FC8/1QS1/JTMSKBNE/FC81QS1JTMSKBNE.LARGE.jpg", "https://cdn.instructables.com/FA0/I4SW/JTMSKBPB/FA0I4SWJTMSKBPB.LARGE.jpg", "https://cdn.instructables.com/F67/5P6A/JTMSKBT8/F675P6AJTMSKBT8.LARGE.jpg", "https://cdn.instructables.com/FO6/0E82/JTMSKBXP/FO60E82JTMSKBXP.LARGE.jpg"], "step_title": "Step 9: Add Through-Hole Components"}, {"step": 10, "steps_text": "The only parts missing from the PCB at this point are the wires that will connect the system to the doorbell transformer. In this step we will add those wires. The wires connect to the screw terminal. Installing the wires is nothing special. Simply loosen both pins on the screw terminal, install the wires, and tighten the screw terminal again.\nOn the opposite ends of the wires, strip off about one inch of insulation so that enough wire is exposed to wrap around the screws on the doorbell transformer. Then, twist the wires together so that they do not fray too much when we install the device.", "step_imgs": ["https://cdn.instructables.com/F1F/PF2E/JTMSKF0H/F1FPF2EJTMSKF0H.LARGE.jpg", "https://cdn.instructables.com/F9E/SC35/JTMSKEYJ/F9ESC35JTMSKEYJ.LARGE.jpg", "https://cdn.instructables.com/FLW/Y74Q/JTMSKEPM/FLWY74QJTMSKEPM.LARGE.jpg", "https://cdn.instructables.com/FGD/0AXK/JTMSKENN/FGD0AXKJTMSKENN.LARGE.jpg", "https://cdn.instructables.com/FCX/BFTV/JTMSKEE6/FCXBFTVJTMSKEE6.LARGE.jpg", "https://cdn.instructables.com/F4H/UO9L/JTMSKEI0/F4HUO9LJTMSKEI0.LARGE.jpg"], "step_title": "Step 10: Add Transformer Connection Wires"}, {"step": 11, "steps_text": "At this point, we are done assembling the PCB. Yay! The next step is to mount the Wello 3 PCB assembly into the base before installing it onto the doorbell transformer. Mounting the PCB into the 3D printed base is an easy step. Start by placing the end of the PCBs with the wires into the mounting base. Then, using moderate pressure, snap the other end of the PCB into the other tab on the base.", "step_imgs": ["https://cdn.instructables.com/F4H/M560/JTON4EKT/F4HM560JTON4EKT.LARGE.jpg", "https://cdn.instructables.com/FA6/DX9I/JTON4EKU/FA6DX9IJTON4EKU.LARGE.jpg", "https://cdn.instructables.com/FA3/5QX8/JTON4ELC/FA35QX8JTON4ELC.LARGE.jpg", "https://cdn.instructables.com/FHT/W9UC/JTON4EMS/FHTW9UCJTON4EMS.LARGE.jpg", "https://cdn.instructables.com/F4G/PU35/JTON4ENT/F4GPU35JTON4ENT.LARGE.jpg", "https://cdn.instructables.com/FTO/MGN4/JTON4EOU/FTOMGN4JTON4EOU.LARGE.jpg"], "step_title": "Step 11: Assemble the Base"}, {"step": 12, "steps_text": "We are completely finished now with the physical build portion of this Instructable. The next phase of the project is to flash firmware to the Particle Photon on board the Wello 3, download the app on your phone, and enjoy our cloud-connected doorbell. Before any of this can happen, however, we will need to connect the Wello 3 to power.\nCutting Power to and Locating your Transformer\nThe Wello 3 runs directly off your doorbell system\u2019s transformer, which was discussed in great detail previously. Before we start working with any electrical systems though, we make safety our top priority by turning off the power to your doorbell. Even though the voltage output of the transformer is not high enough to hurt you, the transformer does still connect to mains voltage so we can\u2019t be too careful. So, locate and turn off the circuit breaker to your doorbell. Your doorbell may have its own breaker or it could piggyback off another system. For example, my doorbell is tied to the circuit for my AC. You can test to make sure the power has been cut to the doorbell by pressing the button outside and seeing if the doorbell rings.\nWith the power turned off, the next challenge is to locate your doorbell transformer. Yours is likely somewhere in the vicinity of your electrical panel. The transformer in my house is connected to one of the lights on the ceiling. Another common spot is mounted directly to the side of the electrical panel. Your doorbell transformer may also be mounted to the furnace or AC system. Take a look at the doorbell transformer below to get an idea about how the transformer looks.\nTo make it easier to understand this Instructable, I made a small bench with a doorbell transformer, button, and chime. It is difficult to take photos of the basement rafters looking straight into a light bulb so this platform will make the photos much more clear.\nConnecting the Wello 3 to the Transformer\nYou should find two wires coming from the doorbell transformer on two screws. The Wello 3 will connect to these two screw terminals. Because the output of the transformer is AC current, there is no polarity to worry about when connecting the Wello 3\u2019s wires to the transformer. The wires can connect in either order.\nConnect the Wello 3 to the transformer by loosening each screw and adding the wires from the Wello 3.\nOnce you get the Wello 3 connected to the transformer, turn back on the circuit breaker to power the doorbell and the Wello 3.", "step_imgs": ["https://cdn.instructables.com/FKY/D9DN/JTON77G6/FKYD9DNJTON77G6.LARGE.jpg", "https://cdn.instructables.com/FYS/11H4/JTON795B/FYS11H4JTON795B.LARGE.jpg", "https://cdn.instructables.com/FKL/9BMC/JTON78ZQ/FKL9BMCJTON78ZQ.LARGE.jpg", "https://cdn.instructables.com/F6E/RRHZ/JTON78X9/F6ERRHZJTON78X9.LARGE.jpg", "https://cdn.instructables.com/F98/RBEI/JTON77R4/F98RBEIJTON77R4.LARGE.jpg", "https://cdn.instructables.com/FHY/9ZHN/JTON780H/FHY9ZHNJTON780H.LARGE.jpg", "https://cdn.instructables.com/FHF/0Q5A/JTON7864/FHF0Q5AJTON7864.LARGE.jpg", "https://cdn.instructables.com/FVS/CJJ3/JTON77LD/FVSCJJ3JTON77LD.LARGE.jpg", "https://cdn.instructables.com/FBI/5C31/JTON78EN/FBI5C31JTON78EN.LARGE.jpg", "https://cdn.instructables.com/FT2/16EO/JTON78K2/FT216EOJTON78K2.LARGE.jpg", "https://cdn.instructables.com/FJR/6DX5/JTON78Q7/FJR6DX5JTON78Q7.LARGE.jpg"], "step_title": "Step 12: Connect Wello 3 to Your Doorbell System"}, {"step": 13, "steps_text": "Before we can flash firmware to the Particle Photon on the Wello 3, first we need to \u201cclaim\u201d the board. Claiming a Particle board is the terminology the Particle platform uses for managing device ownership. Only devices you claim can interact directly with your Particle Cloud account. Also, as the owner of the board, only you can flash firmware onto the Photon.\nThere are a few different ways to claim the Particle Photon. The easiest is the use the Particle app.\n1) Log into the Particle app\nWith the app downloaded and open on your phone, we will get started by logging into your Particle account. If you don\u2019t have a particle account, you can create one.\n2) Add a new Particle Photon\nNext we need to add the Photon to the Particle account. To do this, tap the + button in the lower-right corner of the screen. You will be presented with a small menu with different types of Particle devices. Select the option to Set up a Photon.\n\n3) Choose the Photon\nOn the next screen, click the Ready button and the app with begin searching for your Particle Photon. After a short moment, you should see the default name of your device appear in the list. It will be formatted like \u201cPhoton-xxxx\u201d. Tap the name of the device to start the pairing process.\n4) Connect the Photon to WiFi\nThe Photon communicates with the outside world over WiFi. The next step in setting up the Photon is to connect it to your WiFi network. The Particle app will search for nearby WiFi networks. Once your home network appears, select it and enter your WiFi password to allow the Photon to connect.\n5) Name your Photon\nWith the Photon connected to WiFi, the final step in the setup process is to name the device. You can choose any name you\u2019d like but the only important step is that the name of your Particle Photon must contain the string \u201cWello.\u201d The Wello app will search for devices on your Particle account the name of which contains the string \u201cWello\u201d in order to identify which devices are the connected doorbell ones versus any other Particle devices you might have on your account.", "step_imgs": ["https://cdn.instructables.com/FTR/C1ZE/JTON7RRX/FTRC1ZEJTON7RRX.LARGE.jpg", "https://cdn.instructables.com/FHK/5TGT/JTON7RRS/FHK5TGTJTON7RRS.LARGE.jpg", "https://cdn.instructables.com/FWO/ZTA6/JTON7RRV/FWOZTA6JTON7RRV.LARGE.jpg", "https://cdn.instructables.com/F0L/KBYL/JTON7RRQ/F0LKBYLJTON7RRQ.LARGE.jpg", "https://cdn.instructables.com/F88/T9B0/JTON7RRC/F88T9B0JTON7RRC.LARGE.jpg", "https://cdn.instructables.com/FC7/DVO0/JTON7RPV/FC7DVO0JTON7RPV.LARGE.jpg", "https://cdn.instructables.com/FMC/CE2A/JTON7RQZ/FMCCE2AJTON7RQZ.LARGE.jpg", "https://cdn.instructables.com/FUD/S1G1/JTON7RPD/FUDS1G1JTON7RPD.LARGE.jpg", "https://cdn.instructables.com/F7N/V6W6/JTON7RPY/F7NV6W6JTON7RPY.LARGE.jpg", "https://cdn.instructables.com/FIN/T1VS/JTON7RPF/FINT1VSJTON7RPF.LARGE.jpg"], "step_title": "Step 13: Claim the Wello 3 Particle Photon"}, {"step": 14, "steps_text": "With the Wello 3 fully assembled and the Particle Photon claimed, we will move on to flashing the firmware that will make the system run. One of the most powerful features offered by the Particle platform is the ability to flash firmware to the boards over WiFi rather than requiring the board to be plugged into your computer via USB like most other microcontrollers (although the Photon can be programmed this way if you want).\nParticle has an online IDE for writing the code that will run on the Photon: https://build.particle.io. If you\u2019ve ever worked with Arduino boards, the code will look extremely familiar, in fact it is almost the same. There are just a few functions and features unique to the Particle platform that are discussed in more detail below.\nSo, begin by opening the Particle IDE and logging into it with your Particle account. Then we will need to copy/paste the code into the IDE. You can download the firmware from the Wello 3 website either as a .ino file, the same type used in the Arduino IDE, or in a text file. Once you download the code, copy/paste it into the Particle IDE.\n/*\n   Project: Wello 3, IoT Doorbell Button\n   Author: Toglefritz\n*/\n/*  //////////////////\n    ///    INFO    ///\n    //////////////////\n*/\n/*\n  DESCRIPTION: \n    This code, written for the Particle Photon, controls an Internet-connected doorbell. The hardware consists\n    of a Particle Photon module, a power delivery system, and an optoisolator used to detect when the doorbell\n    circuit is closed (when the doorbell gets pressed). The Particle Photon connects to the \n    Internet and pushes a notification when the button is triggered. Other devices listen for the notification that the button\n    was pressed and respond in different ways depending upon the device.\n*/\n\n/*  \n   /////////////////////////\n   ///    CONNECTIONS    ///\n   /////////////////////////\n\n   This section defines to which pins various components are connected.\n*/\n\nconst int buttonPin = 4;       // The optoisolator is connected to digital pin 4\n\n/*  \n   /////////////////////\n   ///    GLOBALS    ///\n   /////////////////////\n\n   This section contains global variables used throughout the sketch, including those\n   used for configuration options from the Wello app.\n*/\n\nbool cloudRing;     // This variable is ued to check that the ring notification was published to the cloud successfully\n\n/*  \n   ////////////////////\n   ///    SKETCH    ///\n   ////////////////////\n*/\n\nunsigned long previousRing = 0;     // This variable is used to track when the doorbell was last rung. The code compares this time\n                                // to the current time to make sure somebody does not ring the doorbell repeatedly. \n\nvoid setup() {\n    // Define pin modes\n    pinMode(buttonPin, INPUT);\n}\n\nvoid loop() {\n    // Disable the doorbell until the Particle Photon is fully booted\n    if(millis() > 5000) {\n        // If the button is pressed, and it has been more than ten seconds since the last time it was pressed,\n        // send a notification to the Particle Cloud\n        if(digitalRead(buttonPin) == LOW && millis() - previousRing > 10000) {\n            // Send a notification to the cloud\n            cloudRing = Particle.publish(\"WelloConnectedDoorbellRing\");\n            if (!cloudRing) {\n                // get here if event publish did not work\n                Particle.publish(\"Error: failed to ring\");\n            }\n            \n            // Get the time of the current ring event\n            previousRing = millis();\n        }\n        \n        // The millis() function resets to zero after it hits a maximum value of 4,294,967,295. So, if the \n        // current value of millis() is within 10000 ms of this value, we need to set the previousRing variable\n        // back to zero, otherwise, the millis() - previousRing will never be greater than 5000 and the doorbell\n        // will stop working.\n        if(4294962295 - millis() <= 10000) {\n            previousRing = 0;\n        }\n    }\n}\nWith the code copied into the Particle IDE, we first need to make sure the Photon has an Internet connection before moving on. The status LED on the Particle Photon should be breathing a cyan color to indicate it is connected to the Internet.\nOnce you verify that a connection has been established, the first step in flashing code to the board is to \u201ctarget\u201d the Particle Photon. Targeting a board is how the Particle IDE knows to which board you want to upload firmware. In the menu on the left side of the screen, click the Devices tab near the bottom corner of the window. The icon looks like crosshair. In the list of devices, find the name you gave your Particle Photon earlier, the one containing the string \u201cWello\u201d. To target that device, click the star icon next to the name of the Photon. Finally, to flash the firmware to the board, click the lightning bolt icon in the upper-left corner of the screen. When you do this, you will see the status LED on the Photon flash a few different colors while the firmware upload progresses. After the upload is complete, the status LED on the Photon will return to breathing cyan and you will be presented with a confirmation message in the Particle IDE.\nUnderstanding the Firmware\nThe firmware running on the Particle Photon to make the Wello 3 connected doorbell work is not too complex. Most of the code will be familiar if you have any experience working with Arduino boards or other Arduino-compatible microcotrollers. There are only a few parts that are specific to the Particle platform.\nFirst we have the pin definition for the GPIO pin on the Photon to which the optoisolator is connected. This line is exactly the same as you would use for Arduino.\nconst int buttonPin = 4;       // The optoisolator is connected to digital pin 4\nThen, skipping down a little in the firmware, inside the setup function, the D4 pin is designated as an input.\nvoid setup() {\n    // Define pin modes\n    pinMode(buttonPin, INPUT);\n[...]\nNext up, inside the body of the firmware, the loop function, is the code that responds to the doorbell button being pressed. This section of code begins with a if statement that checks to make certain the Wello 3 does not send you too many notifications in a short time, because that would be annoying. Each time the doorbell button is pressed, the firmware records when that took place in terms of the length of time the program has been running. This is stored in a variable that is defined at the beginning of the code.\nunsigned long previousRing = 0;     \n/* This variable is used to track when the doorbell was last rung. The code compares this time\nto the current time to make sure somebody does not ring the doorbell repeatedly. */\nThe firmware will only send a notification once every ten seconds. In other words, if it has been less than ten seconds since that last time the Photon pushed an event that the button was pressed, the firmware does nothing. Assuming that more than ten seconds has elapsed since the previous doorbell ring, the firmware then uses one of the unique features of the Particle Cloud platform. The Photon will publish an event to the Particle Cloud indicating that the doorbell has been pressed. That event can be received by other devices. In this case, it will be received by your smartphone running the Wello app.\n// If the button is pressed, and it has been more than ten seconds //since the last time it was pressed, send a notification to the //Particle Cloud\n        if(digitalRead(buttonPin) == LOW && millis() - previousRing > 10000) {\n            // Send a notification to the cloud\n            cloudRing = Particle.publish(\"WelloConnectedDoorbellRing\");\n            if (!cloudRing) {\n                // get here if event publish did not work\n                Particle.publish(\"Error: failed to ring\");\n            }\n            \n            // Get the time of the current ring event\n            previousRing = millis();\n        }\nYou can also see at the end of that if statement that the firmware updates the timestamp of the most recent ring each time it sends a notification. The last bit of code inside the loop function is a bit of a safeguard to prevent a potential bug. The firmware tracks each doorbell press by recording the time according to millis() when the doorbell was pressed. However, the value of millis can only get so large. Its maximum value is 4,294,967,295. So, when the millis gets close to that value, the timestamp on the doorbell ring will be set closer to that value than 10000. When this happens, it will effectively prevent the system from ever sending another notification. It would break your doorbell because, as far as the program logic is concerned, it will never be over ten seconds since the last ring.\n// The millis() function resets to zero after it hits a maximum value of 4,294,967,295. So, if the \n// current value of millis() is within 10000 ms of this value, we need to set the previousRing          // variable back to zero, otherwise, the millis() - previousRing will never be greater than 5000     // and the doorbell will stop working.\n        if(4294962295 - millis() <= 5000) {\n            previousRing = 0;\n        }", "step_imgs": ["https://cdn.instructables.com/FQU/0TGK/JTT5JQ9A/FQU0TGKJTT5JQ9A.LARGE.jpg", "https://cdn.instructables.com/FI3/PTQT/JTT5JQ8J/FI3PTQTJTT5JQ8J.LARGE.jpg", "https://cdn.instructables.com/FGF/VME8/JTT5JQ8I/FGFVME8JTT5JQ8I.LARGE.jpg", "https://cdn.instructables.com/FD6/ROC8/JTT5JQ9B/FD6ROC8JTT5JQ9B.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FNF/0FCV/JTT5JQA0/FNF0FCVJTT5JQA0.LARGE.jpg"], "step_title": "Step 14: Flash the Firmware"}, {"step": 15, "steps_text": "The very last step before this project is complete is installing the app that allows your phone to receive notifications from the Wello 3 and give you the heads up when somebody rings your doorbell. The app is available for Android and can be downloaded from the Google Play Store. The app is currently in beta (I only have two phones to test it on so it may have some issues depending upon what phone you use - if you run into any errors, let me know).\nWith the app installed on your phone, when someone rings your doorbell, you will receive a high-priority notification so that you will not miss that visitor.\nUnderstanding the App\nThe Wello 3 Android application is a bit more complex than the firmware in the previous step, but it is still not too complex to understand. There are two main parts of the application: the login activity, and the main activity. The login activity is fairly simple. Before the app will be able to receive notifications published by your Wello 3, you will need to log into your Particle account inside the app so that it can subscribe to notifications from your Particle Cloud account. The login functionality is provided by the Particle Android SDK, the same with the majority of the functions in the app. Before we can do anything with the Particle SDK, we must first initialize it.\n// Initialize the Particle Cloud SDK\nParticleCloudSDK.init(LoginActivity.this.getApplicationContext());\nThen, with the SDK initialized, we can log into the Particle account.\n// Log in to Particle Cloud using username and password\nParticleCloudSDK.getCloud().logIn(username, password);\nreturn true;\nSo, logging into the Particle account requires only one method from the SDK. Here, the username and password information is provided from a pair of EditText elements on the page.\n// Get the username and password from the editTexts\nfinal EditText usernameField = findViewById(R.id.username);\nfinal String username = usernameField.getText().toString();\n\nfinal EditText passwordField = findViewById(R.id.password);\nfinal String password = passwordField.getText().toString();\nOnce you click the Login button at the bottom of the activity, the app will switch to the main activity. The login activity will pass the login credentials to the main activity.\n// Go to the WelloMainActivity activity\nIntent intent = new Intent(LoginActivity.this, WelloMainActivity.class);\nintent.putExtra(\"username\", username);\nintent.putExtra(\"password\", password);\nstartActivity(intent);\nSo, then we arrive at the main activity which is where the majority of the hard work in getting the app to receive notifications from the Particle Cloud takes place. The first thing the activity does, after some basic setup, is to use the Particle Android SDK to retrieve a list of all the Particle devices on your account. Note that these might be devices other than the Particle Photon used in the Wello 3 - that will be addressed in a moment.\ndevices = ParticleCloudSDK.getCloud().getDevices();\nNext, the app will look through the list of devices and grab those whose name contains the substring \u201cWello\u201d. This is why it was so important to name the Photon something containing the string \u201cWello\u201d earlier when we were claiming the board. This method also allows you to have multiple Wello 3 devices in case your house has more than one doorbell, like one on the front door and one on the side door.\nfor (int ct = 0; ct < devices.size(); ct++) {\n   // If the device is a doorbell (product id=####)\n   //if (devices.get(ct).getProductID() == ####) {\n   if (devices.get(ct).getName().contains(\"Wello\")) {\n       welloDevices.add(devices.get(ct));\n   }\n}\nWith the list of Wello 3 devices, the app then subscribes to events published by those devices. This way, the app can react when the Wello 3 publishes an event to say the doorbell rang. This function is fairly large. These first few lines simply subscribe the app to events.\n// Subscribe to an event\nlong subscriptionId = ParticleCloudSDK.getCloud().subscribeToDeviceEvents(\n       null, \"\",\n       new ParticleEventHandler() {\n           // Trigger this function when the doorbell event happens\n           public void onEvent(String eventName, ParticleEvent event) {\nFinally, the app sets up a notification channel on your phone. This allows the app to deliver notifications to the system that will show up regardless of whether or not you have the Wello app open on your phone.\nNotificationCompat.Builder mBuilder =\n       new NotificationCompat.Builder(WelloMainActivity.this);\nNotificationManager mBuilder_O = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\nString channelId = \"Wello_Doorbell_Notifications\";  // The id of the channel\n\nif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n   CharSequence channelName = \"Wello Doorbell Notifications\";  // The user-visible name of the channel\n   String description = \"An alert when your Wello doorbell rings.\";\n   int importance = NotificationManager.IMPORTANCE_HIGH;\n   NotificationChannel mChannel = new NotificationChannel(channelId, channelName, importance);\n   mChannel.setDescription(description);\n   mChannel.enableVibration(true); //TODO change from settings\n   mChannel.setVibrationPattern(new long[]{100, 200, 300, 400, 500, 400, 300, 200, 400});\n   mBuilder_O.createNotificationChannel(mChannel);\n}", "step_imgs": ["https://cdn.instructables.com/FMB/8WGH/JTT5JXG2/FMB8WGHJTT5JXG2.LARGE.jpg", "https://cdn.instructables.com/FRT/WHDW/JTT5JXGY/FRTWHDWJTT5JXGY.LARGE.jpg", "https://cdn.instructables.com/F18/K9A2/JTT5JXG6/F18K9A2JTT5JXG6.LARGE.jpg", "https://cdn.instructables.com/FVC/FKV4/JTT5JXED/FVCFKV4JTT5JXED.LARGE.jpg", "https://cdn.instructables.com/F2E/3Y3Z/JTT5JWNZ/F2E3Y3ZJTT5JWNZ.LARGE.jpg", "https://cdn.instructables.com/FW7/8SBX/JTT5JWO0/FW78SBXJTT5JWO0.LARGE.jpg", "https://cdn.instructables.com/FFO/H2ZL/JTT5JWO1/FFOH2ZLJTT5JWO1.LARGE.jpg", "https://cdn.instructables.com/FP7/QVUK/JTT5JWO3/FP7QVUKJTT5JWO3.LARGE.jpg", "https://cdn.instructables.com/FNT/MCCN/JTT5JWOB/FNTMCCNJTT5JWOB.LARGE.jpg", "https://cdn.instructables.com/F3G/8Q2P/JTT5JWOD/F3G8Q2PJTT5JWOD.LARGE.jpg"], "step_title": "Step 15: Install the App"}], "channel": ""}, {"category": "", "description": "After seeing Wei Chieh Shi's laser jacket design, I wanted to create my own. These instructions show how to modify a jacket to add laser diodes and control them electronically to produce different laser light patterns. The laser diodes give the jacket an appearance of being \"spiky\", like having metal spikes but with red laser light. The effect is especially striking in environments with fog or smoke as the laser light path shows a trail from where it originates.\nThe concept and execution is relatively simple but care has to be taken to make sure that the electronics, wiring and other aspects of the jacket don't fail when in use. Much of the subtlety and complexity of the project is providing proper wire routing and making sure that strain relief for the electronics and connections is provided so that it's resilient under normal wear.\nAssuming the basic parts are available (soldering iron, multimeter, wire strippers, laser cutter, etc.) I would estimate that this project is about $300 in raw materials and about 20 hours worth of labor. What follows is the way I created the jacket you see here and the design, sourcing and implementation is open for improvement.\nDepending on the battery used, the jacket can operate for about an hour or two continuously. Spare batteries can be carried around and used to replace the depleted batteries if need be.", "title": "Laser Spiked Jacket", "url": "https://www.instructables.com/id/Laser-Spiked-Jacket/", "section": "technology", "steps": [{"step": 1, "steps_text": "Jacket (Amazon)\nSoldering Iron (Amazon)\nMultimeter (Amazon)\nSolder (Amazon)\nWire Cutter (Amazon)\nWire Strippers (Amazon)\nFlux (Amazon)\nHelping Hands (optional) (Amazon)\nSoldering Braid (optional) (Amazon)\nNitrile Gloves (optional) (Amazon)\nArduino Nano (Amazon, EBay)\nJoystick Module (Amazon, EBay)\nMicrophone (Amazon)\n128x Laser Diode Module (Amazon, EBay)\n2x PCA9685 16 channel PWM drivers (EBay)\n5V Buck Converter (Amazon)\n5V 3A BEC (Amazon, EBay)\n7.4V 850mAh LiPo battery (Amazon)\nXT30 Connectors (Amazon)\n20 gauge in line fuse holder (Amazon)\nRocker switch (Amazon)\n2s LiPo charger (Amazon)\n2x Gikfun Proto-Boards (Amazon)\n1x protoboard (Amazon)\n1x small protoboard (Amazon)\n50x 2pin male/female JST 2.5mm connectors (Amazon, EBay)\n5x 6pin male/female JST connectors (Amazon)\n150x JST 1.25mm male/female pair (Amazon, EBay)\n6 colors of 24 AWG wire, stranded 300V (10ft) (Amazon)\n2 colors of 24 AWG wire, stranded 300V (200ft) (Amazon, Amazon)\n2 colors of 24 AWG wire, solid core (10ft) (Amazon)\nEngineer PA-21 Universal Crimping Pliers (Amazon)\n1/4\" braided cable sleeve (Amazon)\nHeat Shrink Tubing (Amazon)\nHeat Gun (Amazon)\n12x 30mm M3 bolt & 20x 6mm M3 bolt (Amazon)\n100x M3 nut (Amazon)\n400x 25mm M2 black hex cap bolt (Amazon)\n1000x M2 nut (Amazon)\nTubing (Amazon)\n24\"x36\"x1/16\" Black Acrylic Sheet (Amazon)\n3x 12\"x12\"x1/8\" Wood Sheet (Amazon)\nLaser Cutter (Amazon)\nVelcro tie (Amazon)\nSnaps (optional) (Amazon)\nScissors (Amazon)\nCable ties (Amazon)\nCable clamp (Amazon)\nA quick note: Amazon generally offers quicker shipping than the EBay alternative but often at 2-10 times the cost.\nI've found there's often minimal difference in quality between the items I order on Amazon and EBay.\nI prefer to crimp my own connectors but if you don't mind paying a bit extra, you can buy pre-crimped connectors. I also have a preference for angled female connectors though having a good mix of straight and angled provides more options.", "step_imgs": ["https://cdn.instructables.com/F80/DXUP/JTT5LQW5/F80DXUPJTT5LQW5.LARGE.jpg", "https://cdn.instructables.com/F6B/JIVB/JTT5LQW1/F6BJIVBJTT5LQW1.LARGE.jpg", "https://cdn.instructables.com/F1C/ZHUW/JTT5LQU4/F1CZHUWJTT5LQU4.LARGE.jpg", "https://cdn.instructables.com/F02/16DI/JTT5LQZ3/F0216DIJTT5LQZ3.LARGE.jpg", "https://cdn.instructables.com/FWN/VKL4/JTT5LQY1/FWNVKL4JTT5LQY1.LARGE.jpg", "https://cdn.instructables.com/FEV/8FMA/JTT5LQY5/FEV8FMAJTT5LQY5.LARGE.jpg", "https://cdn.instructables.com/FVM/JQS3/JTT5LQW6/FVMJQS3JTT5LQW6.LARGE.jpg", "https://cdn.instructables.com/FAR/X924/JTT5LQX3/FARX924JTT5LQX3.LARGE.jpg", "https://cdn.instructables.com/F7I/HBPY/JTT5LQY0/F7IHBPYJTT5LQY0.LARGE.jpg", "https://cdn.instructables.com/FNS/LUN1/JTT5LQY4/FNSLUN1JTT5LQY4.LARGE.jpg", "https://cdn.instructables.com/F1Q/RB0E/JTT5LQV2/F1QRB0EJTT5LQV2.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "The basic design is to attach 128 laser diodes to the arms, shoulders and upper back of a 'moto' jacket and provide power and control to the laser diodes with electronics. The electronics are put into a housing and all wires, electronics and their housing are hidden in the interface between the outer jacket shell and the inner lining.\nA joystick and microphone are used for input. Power is provided by a LiPo rechargeable battery.\nIn the above schematic, LEDs are used in place of the laser diodes. The laser diode modules have their own internal circuitry so don't need current limiting resistors like an LED normally would.\nThe basic components are:\nLaser diode housing and attachment\nElectronics\nElectronics Housing\nWiring and connection\nThe basic workflow is roughly as follows:\nAssemble the laser diodes with their connectors and housing\nAttach the laser diodes to the jacket Solder the electronics and assemble them in their housing\nCreate the cabling and connect the laser diodes to the electronics\nWear it", "step_imgs": ["https://cdn.instructables.com/F0S/51A1/JTT5LQ3R/F0S51A1JTT5LQ3R.LARGE.jpg", "https://cdn.instructables.com/FI4/GRWF/JTT5MM0R/FI4GRWFJTT5MM0R.LARGE.jpg"], "step_title": "Step 2: Design Overview"}, {"step": 3, "steps_text": "The laser diodes are attached to the outside of the jacket by a laser cut 'housing'. Each laser diode housing is a stack of laser cut acrylic, fit together with M2 screws. The base of the housing is put under the outer jacket shell to provide support for the laser diode and relief for the laser diode wires.", "step_imgs": ["https://cdn.instructables.com/FX1/25KR/JTT5LQ0X/FX125KRJTT5LQ0X.LARGE.jpg"], "step_title": "Step 3: Laser Diode Assembly"}, {"step": 4, "steps_text": "After testing each laser diode to make sure they work, solder a male JST 1.25mm 2pin header to each of the ends of the laser diode. I've found best results by cutting the edge of the wires off, stripping them and then wrapping and soldering them.\nAs much as possible, I try to make a 'lineman splice' when connecting wires to make sure there's a good connection. Make sure to put the heat shrink tubing on before soldering.\nBefore soldering, apply a healthy drop of flux to make sure the solder will flow well. Once the wires are soldered together, put the heat shrink tube on and heat with the heat gun to give a good fit.\nUse caution when using the heat gun to shield the laser diode and the end of the JST connector. I've had trouble with the connectors not fitting properly and I believe I was sloppy in not protecting the laser diode JST connector from the heat. The laser diode also is sensitive to extreme temperature and could fail from excess heat applied to it.\nIf there's any exposed wires, cover with electrical tape. If for some reason the heat shrink tube is loose, you can always put another, larger, heat shrink tube around both and shrink to fit.\nBe gentle when handling the laser diodes as the wires connected to the laser come off easily.\nDo this for each of the 128 laser diodes. As much as possible, test the laser diodes after attaching the cabling. This might mean making a 'test cable' to test each of the laser diodes.", "step_imgs": ["https://cdn.instructables.com/F8I/JD8W/JTT5LQQB/F8IJD8WJTT5LQQB.LARGE.jpg", "https://cdn.instructables.com/F5W/8PDM/JTT5LQR8/F5W8PDMJTT5LQR8.LARGE.jpg", "https://cdn.instructables.com/FCW/T1JF/JTT5LQR9/FCWT1JFJTT5LQR9.LARGE.jpg", "https://cdn.instructables.com/F8H/FL1P/JTT5LQRA/F8HFL1PJTT5LQRA.LARGE.jpg", "https://cdn.instructables.com/F8U/6MHF/JTT5LQRB/F8U6MHFJTT5LQRB.LARGE.jpg", "https://cdn.instructables.com/FSJ/7XBE/JTT5LQS8/FSJ7XBEJTT5LQS8.LARGE.jpg"], "step_title": "Step 4: Attach Laser Diode Cabling"}, {"step": 5, "steps_text": "Use your laser cutter to cut the laser diode housing. I used 1/16\" black acrylic. My laser cutter has an effective work area of 8\"x12\" which allows a sheet of black acrylic to cut out approximately 20 laser diode housings per run.\nThough probably obvious to people who use laser cutters more than I do, make sure to take off the paper protection for the acrylic sheets. The acrylic cut is clean and often doesn't produce a flame, so any paper protection isn't necessary. Leaving the paper on also tends to cause the work to catch fire.\nI've found that my laser cutter only has about 30 minutes of operation before the water cooling becomes too hot for the laser cutter to keep functioning properly. This is highly dependent on the type of laser cutter and cooling system that's installed but it's something to keep an eye on.\nAfter the housing has been cut, I've found that it's necessary to remove smaller interior pieces with a small pick. I like to prepare the acrylic pieces by putting them into groups depending on whether it's and outer, inner or backing piece, for ease of assembly later.", "step_imgs": ["https://cdn.instructables.com/F8G/LMJQ/JTT5LPO3/F8GLMJQJTT5LPO3.LARGE.jpg"], "step_title": "Step 5: Laser Cut Laser Diode Housing Module"}, {"step": 6, "steps_text": "After the laser diodes have been cabled and the laser diode housings have all been laser cut, it's time to assemble the laser diode in it's housing. This won't be the complete housing as there's a final backing piece that won't be put on until the laser diode is attached to the jacket but most of the laser diode assembly is done in this step.\nPrepare the 128 cabled laser diodes along with the pile of acrylic housing pieces and the M2 25mm screws and nuts. One by one, put each of the laser diodes into the assembled laser housing.\nI've found the best way to proceed is to put two M2 screws through the top housing plate then progressively add the six middle plates. I try and put the two M2 screws in a position that is perpendicular to the rectangular slot in the middle stacked plates. When stacking the middle plates, make sure that the rectangular slots line up.\nI loop each laser diode through a bottom plate. This loop is done to provide strain relief for the wire so that moderate force won't disconnect the soldered wires from the laser diode. Once the laser diode is looped through the bottom plate, I then position the laser diode onto the stack.\nOnce the laser diode is seated in the laser diode housing stack, I then insert the third M2 screw and put a nut on each of the three M2 screws. The idea is to screw the bottom plate on tight enough to keep the laser diode cables in place and relieve any forces that would yank on the wires coming out.\nUsing acrylic for the housing and strain relief is less than ideal as the acrylic is very brittle and cracks easily. I've found that the bottom plate often cracks when screwing the nuts in place. As long as the acrylic bottom plate provides strain relief, even if it's cracked, the housing is still doing it's job. While the brittle acrylic and potential cracking is not ideal, I've found that it works well enough.\nAny future iteration of this project should provide a better solution to housing the laser diodes.", "step_imgs": ["https://cdn.instructables.com/FL9/X4VM/JTT5LQ4O/FL9X4VMJTT5LQ4O.LARGE.jpg", "https://cdn.instructables.com/FTD/NJ4N/JTT5LQ6S/FTDNJ4NJTT5LQ6S.LARGE.jpg", "https://cdn.instructables.com/FT5/SXD3/JTT5LQ8W/FT5SXD3JTT5LQ8W.LARGE.jpg", "https://cdn.instructables.com/FIG/O7KZ/JTT5LQB0/FIGO7KZJTT5LQB0.LARGE.jpg", "https://cdn.instructables.com/FNB/UT1B/JTT5LQBX/FNBUT1BJTT5LQBX.LARGE.jpg", "https://cdn.instructables.com/FIW/NGVY/JTT5LQBY/FIWNGVYJTT5LQBY.LARGE.jpg", "https://cdn.instructables.com/F8D/7UCM/JTT5LQEZ/F8D7UCMJTT5LQEZ.LARGE.jpg", "https://cdn.instructables.com/FBZ/QWUA/JTT5LQFW/FBZQWUAJTT5LQFW.LARGE.jpg"], "step_title": "Step 6: Assemble Laser Diode Housing"}, {"step": 7, "steps_text": "Once the 128 laser diodes have been put in their housing, it's time to attach them to the jacket. First, open up the jacket lining to get access to the inner jacket shell. It's best to keep as much of the lining intact as possible as the lining provides shielding from the cabling to your skin when wearing the jacket and also provides a convenient place to put the electronics out of sight.\nI've found that taking the stitches out of the middle back is best. The opening can be closed off later with snaps or Velcro.\nA pattern is first marked on the outside of the jacket to decide where to place each of the laser diodes. I initially did this with tape. After the first few rows had been placed, I found the tape was mostly not necessary as it's easy to judge where the to place the laser diodes by eye.\nUse a middle plate of the laser housing as a guide to poke four holes per laser diode in the jacket. The outer three holes are for the M2 screws to hold the housing in place and the center hole is for the laser diode wiring to go through. I use an antique walnut cracker but any sharp pointed object will do to create the holes in the jacket.\nThe center hole for the cable needs to be bigger than the rest as the JST 1.25mm male header is bigger than the M2 screws. I've found that enlarging the hole with a pair of needle nose pliers works well.\nOnce the laser diode housing's cable and three M2 screws have been fed through the holes, the inside of the jacket shell needs to be accessed to attach a middle housing plate to the M2 screws that are now poking through. For the fist few rows of the laser diodes, the jacket arm might need to be turned inside out but as the laser diodes are attached further up the arm, it's possible to get access to them without completely turning the arm inside out.\nWhen turning the arm inside out, take care to try not to damage the laser diodes. The laser diodes in their housings should be moderately resilient (after all, that's one of the reasons they were designed) but it's best to still be as careful as possible.\nWhen the underside has been accessed, place a center laser housing plate on the bottom, feeding the M2 screws through the three holes and the laser diode cable through the center. Screw the plate on with three M2 screws.\nOnce all the laser diodes have been attached, if possible, test each laser diode to make sure they still function.\nTesting earlier in the process helps weed out potential problems down the line. Engineering and electronics are hard to do in general and when there's the added element of electronics attached to clothing that's bending, bumping, moving and flexing, it makes it all that much more probable that failure occurs.\nConsidering the quantity of elements involved in the project, failure can be expected, so make sure to have a few extra laser diodes on hand so that when failures are detected, the laser diodes can be replaced.\nUnderstand that component failure is part of the process and don't get demotivated when things break or don't initially work. Failure is to be expected, planned and compensated for by testing and making sure there are replacement parts handy.\nOnce all the laser diodes are attached and we have some reasonable expectation that they function, it's time to move on to creating the electronics that will drive the laser diodes.", "step_imgs": ["https://cdn.instructables.com/FMC/J1D1/JTT5LQGU/FMCJ1D1JTT5LQGU.LARGE.jpg", "https://cdn.instructables.com/F5F/O1UI/JTT5LQHV/F5FO1UIJTT5LQHV.LARGE.jpg", "https://cdn.instructables.com/FL0/VYLV/JTT5LQJG/FL0VYLVJTT5LQJG.LARGE.jpg", "https://cdn.instructables.com/FS1/7AD4/JTT5LQJJ/FS17AD4JTT5LQJJ.LARGE.jpg", "https://cdn.instructables.com/FWK/LPO8/JTT5LQMK/FWKLPO8JTT5LQMK.LARGE.jpg", "https://cdn.instructables.com/F84/5UPK/JTT5LQNI/F845UPKJTT5LQNI.LARGE.jpg", "https://cdn.instructables.com/FN0/0Z7Z/JTT5LQOF/FN00Z7ZJTT5LQOF.LARGE.jpg", "https://cdn.instructables.com/FDL/HLRQ/JTT5LQOG/FDLHLRQJTT5LQOG.LARGE.jpg", "https://cdn.instructables.com/FY9/C71L/JTT5LQPD/FY9C71LJTT5LQPD.LARGE.jpg", "https://cdn.instructables.com/FQW/DIXL/JTT5LPVS/FQWDIXLJTT5LPVS.LARGE.jpg", "https://cdn.instructables.com/F01/AOXC/JTT5LPX7/F01AOXCJTT5LPX7.LARGE.jpg", "https://cdn.instructables.com/F2F/R7BN/JTT5LPX9/F2FR7BNJTT5LPX9.LARGE.jpg"], "step_title": "Step 7: Attach Laser Diodes to Jacket"}, {"step": 8, "steps_text": "The electronics are a pair of PCA9685 PWM controllers which are themselves controlled by an Arduino Nano. A microphone is hooked up to the Nano to allow for ambient sound input, music for example, and a joystick with a button is provided for some control.\nThe joystick button is used to control which 'mode' the jacket display is in. Currently, there are three modes:\nTwinkle - loops the laser diodes in a 'twinkle' pattern\nGraphic Equalizer - use the microphone input to get graphic equalizer data to control the laser diode project pattern\nJoystick Controlled - use the joystick to control the laser diodes directly Each output line of the PWM driver is fed into four laser diodes.\nThe laser diodes are powered by a 5V 3A \"battery elimination circuit\" (BEC). The Arduino Nano and all of the logic on the peripherals are powered by a 5V buck converter. The BEC and buck converter are powered by a LiPo 2s battery. The battery has an attachment of a 3A fuse and power toggle.\nAs stated above, the fuse is a safety precaution to make sure that any accidental short circuit doesn't result in a catastrophic and potentially hazardous failure. The power toggle is provided for ease of use.", "step_imgs": ["https://cdn.instructables.com/FKS/C10F/JTT5LPIV/FKSC10FJTT5LPIV.LARGE.jpg"], "step_title": "Step 8: Electronics Assembly"}, {"step": 9, "steps_text": "For safety and convenience reasons, a cable for the 2s LiPo battery is created and connected. It's sometimes easy to accidentally create a short when soldering or prototyping. Should a short happen without a fuse in line with the LiPo battery, the battery often has the potentially to push upwards of 25A through the connection.\nWhen prototyping, I've accidentally created a short and had one of the wires heat up and explode, causing the wire shielding to catch fire. With the fuse in place, I've had no fires or explosions, so I would highly recommend putting this safety feature in.\nI've found the 20 AWG fuse holder to be a good wire size. Larger gauges become unwieldy to attach to other cables.\nSolder one end of the 20 AWG fuse holder into the positive lead of a female XT30 connector. In line with the fuse holder, on the end that isn't connected to the battery, solder a power toggle switch wire. For both, make sure to feed the heat shrink on before soldering.\nFor all attached wiring, I think the Lineman splice is a good technique to strive towards. When the wires are wrapped together well, add drop of flux and solder them together. Once soldered, give the wires a decent yank to make sure they're attached well.\nOnce the wires are attached firmly, feed the heat shrink tubing onto them and use the heat gun to shrink the tubing over the soldered joint. If you don't have any heat shrink tubing or forgot to put it on, wrap the exposed solder joint in electrical tape to make sure it's isolated.\nI put electrical tape around the bottom of the toggle switch to make sure any exposed leads are covered.\nAttach another lead to the negative end of the XT30 connector, making sure to match the length of the fuse, toggle and end connector.\nCreate a 2 wire end connector with a JST 2.5mm male end. I've found a 24 AWG stranded wire to be a good option for this.\nAs before, I believe attaching the JST 2.5mm male 2 wire connector to the battery wiring with a Lineman splice is best. Once the wires have been spliced together, add a drop of flux and solder them together, making sure to put the heat tube on before soldering. Give the connection a yank to make sure the joint is good, re-soldering if necessary.\nOnce the connector is soldered on, move the heat tubing over the exposed joint and use the heat gun to shrink the heat tubing in place.\nI've found the cabling to be a bit loose, so I put a few cable ties to keep it as clean and self contained as possible.\nMake sure to put a 3A fuse into the fuse holder.\nAttach the battery to the power cable.", "step_imgs": ["https://cdn.instructables.com/FZ5/9UZD/JTT5LR0H/FZ59UZDJTT5LR0H.LARGE.jpg", "https://cdn.instructables.com/FL1/533L/JTT5LR0I/FL1533LJTT5LR0I.LARGE.jpg", "https://cdn.instructables.com/FVW/73FM/JTT5LR0J/FVW73FMJTT5LR0J.LARGE.jpg", "https://cdn.instructables.com/F8J/W109/JTT5LR0K/F8JW109JTT5LR0K.LARGE.jpg", "https://cdn.instructables.com/FU6/7DWY/JTT5LR0P/FU67DWYJTT5LR0P.LARGE.jpg", "https://cdn.instructables.com/FJU/XSLC/JTT5LR1K/FJUXSLCJTT5LR1K.LARGE.jpg", "https://cdn.instructables.com/FPZ/QMQ2/JTT5LR1L/FPZQMQ2JTT5LR1L.LARGE.jpg", "https://cdn.instructables.com/FIQ/2Y20/JTT5LR1P/FIQ2Y20JTT5LR1P.LARGE.jpg", "https://cdn.instructables.com/FN9/GN2X/JTT5LR1S/FN9GN2XJTT5LR1S.LARGE.jpg", "https://cdn.instructables.com/FD8/4CDW/JTT5LR1O/FD84CDWJTT5LR1O.LARGE.jpg", "https://cdn.instructables.com/FIH/AXIJ/JTT5LR1W/FIHAXIJJTT5LR1W.LARGE.jpg", "https://cdn.instructables.com/FSS/1OXS/JTT5LR1Z/FSS1OXSJTT5LR1Z.LARGE.jpg", "https://cdn.instructables.com/FF7/NDDB/JTT5LR20/FF7NDDBJTT5LR20.LARGE.jpg", "https://cdn.instructables.com/FGE/AC3V/JTT5LR21/FGEAC3VJTT5LR21.LARGE.jpg"], "step_title": "Step 9: Power Cable"}, {"step": 10, "steps_text": "We'll now build the breakout board for the power regulators. I haven't measured but I suspect the laser diodes can draw up to 5mA each (which is their rating), making the whole system draw around ~.75A as an upper bound.\nSince the power draw is significant and highly variable for the laser diodes compared to the power draw of the rest of the electronics, separate regulators have been used to make sure the laser diode power and the electronics power are as isolated as possible. Without this isolation, the Arduino might star to act weird and other input devices might function incorrectly due to to the noisiness of the circuit.\nThe breakout board diverts power from the batter to a 5V buck converter and to the 5V 3A BEC. The 5V buck converter powers the Arduino Nano and other logic circuits. The 5V 3A BEC powers the laser diodes.\nSometimes regulators fail so it's nice to have them be swappable as much as possible.\nFor the 5V buck converter, solder four 2-pin headers at the appropriate positions. For the BEC, cut off the ends and re-attach two 2-pin JST 2.5mm male headers, making sure the positive lead is on the left side of the header if looking at the header with the notch side visible.\nSolder two 6x1 row female headers onto the protoboard. Make the vertical spacing of the headers a matching distance to the height of the buck converter. The headers will provide the seating for the buck converter.\nSolder five 2-pin female headers to the protoboard, one at the top for the battery power in, three on the right for the battery power out to the BEC and one last one on the left for the output of the 5V regulator.\nTwo of the three 2-pin female headers on the right are for the input and output of the BEC. The last 2-pin female header is for the output of the BEC that goes to power the laser diodes.\nUse connecting wires to make sure all power is routed to the appropriate places.", "step_imgs": ["https://cdn.instructables.com/FP0/QRTF/JTT5LR08/FP0QRTFJTT5LR08.LARGE.jpg", "https://cdn.instructables.com/FL6/SB47/JTT5LR09/FL6SB47JTT5LR09.LARGE.jpg", "https://cdn.instructables.com/FM4/K46Y/JTT5LR0A/FM4K46YJTT5LR0A.LARGE.jpg", "https://cdn.instructables.com/F7Q/VNGU/JTT5LR0B/F7QVNGUJTT5LR0B.LARGE.jpg", "https://cdn.instructables.com/F0I/E40Z/JTT5LR0C/F0IE40ZJTT5LR0C.LARGE.jpg", "https://cdn.instructables.com/F3V/CS34/JTT5LR0D/F3VCS34JTT5LR0D.LARGE.jpg", "https://cdn.instructables.com/FKO/6MUJ/JTT5LR0E/FKO6MUJJTT5LR0E.LARGE.jpg", "https://cdn.instructables.com/FMK/Z925/JTT5LR0F/FMKZ925JTT5LR0F.LARGE.jpg", "https://cdn.instructables.com/FQO/LYKK/JTT5LR0G/FQOLYKKJTT5LR0G.LARGE.jpg"], "step_title": "Step 10: Power Regulators"}, {"step": 11, "steps_text": "An Arduino Nano provides the main processing intelligence that takes input from the microphone and joystick and communicates with the PWM drivers.\nThe basic layout of the circuit is to breakout the appropriate pins to route to the I2C lines for the PWM controllers, input lines to read the joystick and button, an input line for the microphone and power routing to the various portions of the breakout that need it.\nThe only extra component is the 10k resistor to make sure the button line on the joystick floats high.\nWhen soldering, make sure to use flux as it helps solder flow and prevent cold joints. As a general rule, testing continuity with the multimeter is a good idea. As a basic precaution, make sure that power and ground are isolated by confirming there is no continuity between them.\nAfter soldering is completed, clean up the bottom by removing any excess wiring.\nOnce the breakout is ready, put two 1x15 header rows into the female headers. Put the Arduino Nano through the short end of the 1x15 headers, apply flux and solder the headers to the Arduino Nano. Seating the male header in the female header makes sure it's aligned properly.\nOnce the headers for the Arduino Nano are soldered on and placed in the breakout board, we can program it.", "step_imgs": ["https://cdn.instructables.com/FPS/FPNF/JTT5LPAO/FPSFPNFJTT5LPAO.LARGE.jpg", "https://cdn.instructables.com/FVE/1VU4/JTT5LPAP/FVE1VU4JTT5LPAP.LARGE.jpg", "https://cdn.instructables.com/F2I/L8ZS/JTT5LPAQ/F2IL8ZSJTT5LPAQ.LARGE.jpg", "https://cdn.instructables.com/FZ2/D8WB/JTT5LPCU/FZ2D8WBJTT5LPCU.LARGE.jpg"], "step_title": "Step 11: Arduino and Input Breakout"}, {"step": 12, "steps_text": "Connect the Arduino Nano to the computer with a USB cable and start the Arduino IDE. If not already installed, install the Adafruit PWM library and the Fourier transform, ffft, library. If the libraries aren't available through the IDE, download a zip of each of the libraries and place them in the Arduino library directory. See the Arduino reference on libraries for more information.\nThe Adafruit PWM servo driver is used to communicate to the PCA9685 PWM drivers. The ffft library is used in Adafruit's Piccolo music visualizer project to provide a graphic equalizer. The Piccolo project has a lot of pre-set values to make sure the graphic equalizer is visually interesting so it's a good starting point to analyze microphone data and do visualization.\nThe laser-spike program has a DEBUG flag that can be created to see serial output for debugging purposes. Later, when the breakout board for the laser diodes is created, we'll test to make sure things look good. If for some reason things aren't working down the road, uncommenting the DEBUG keyword can help track down where the error is occurring.", "step_imgs": ["https://cdn.instructables.com/FZW/45KM/JTT5LR2W/FZW45KMJTT5LR2W.LARGE.jpg", "https://cdn.instructables.com/F0C/MX6X/JTT5LR3L/F0CMX6XJTT5LR3L.LARGE.jpg", "https://cdn.instructables.com/FJK/3EGF/JTT5LR4K/FJK3EGFJTT5LR4K.LARGE.jpg"], "step_title": "Step 12: Programming the Arduino Nano"}, {"step": 13, "steps_text": "The PCA9685 PWM controllers are not directly soldered on to the protoboard, instead they are seated on headers. The laser diodes aren't directly driven by the PWM controller and are powered by 2n2222 transistors whose gate is connected to the PWM controller output.\nEach PCA9685 PWM controller sits in it's own proto-board. Each line out of the PCA9685 PWM controller feeds into the gate of a 2n2222 transistor. The transistor then provides power to the laser diode. There are 16 lines out of each PCA9685 PWM controller so 16 2n2222 transistors are needed.\nThe line coming out of the 2n2222 transistor is used to power the laser diode through a female JST 2.5mm connector. The board's laser diode power is fed by the 5V 3A BEC output. The PWM controller's logic circuitry is powered by the 5V buck converter but is provided by the 6-pin connector that's used for it's I2C connection.\nThere are two PWM controllers, each with their own proto-board. One PWM controller will be housed with the Arduino Nano breakout and the power regulator breakout. The other PWM controller will be on it's own housing and eventually placed on the other side of the jacket.\nEach PWM controller is located on either side of the jacket to provide better access to the laser diodes they will drive.\nEach of the PWM controller is in charge of controlling 64 laser diodes. Since each output line of the PCA9685 PWM controller only has 16 lines, each output line provides power to a group of 4 laser diodes (16 * 4 = 64). The two PCA9685 PWM controllers control 64 laser diodes each which drives the total 128 laser diodes.\nAs a note, even with the large proto-board the PWM controller is housed in, space is still a concern for the wiring. I've found that using the top and bottom of the proto-board helps keep wire management under control. The way I've wired the control lines from the PWM controller output to the transistors means that the solder points of the wires will fall in the middle of other lines above it. To make sure that soldering doesn't damage the wires, I've found staggering the soldering, first doing only one side of the top and bottom wires, then progressing further down, is a better method than soldering a complete top or bottom at once.", "step_imgs": ["https://cdn.instructables.com/F0H/CTBS/JTT5LPAN/F0HCTBSJTT5LPAN.LARGE.jpg", "https://cdn.instructables.com/FAD/3YOJ/JTT5LRFM/FAD3YOJJTT5LRFM.LARGE.jpg"], "step_title": "Step 13: PWM Breakout"}, {"step": 14, "steps_text": "Since there are two PCA9685 PWM controllers which are in communication with the Arduino Nano, they need to have separate addresses since they share the communication lines (also known as a 'bus'). On only one of the PCA9685 PWM controller, connect the low bit on the 'address' breakout pad. For the single PCA9685 PWM controller, this will change it's address to 0X41 (from the default 0x40) so the Arduino Nano can address it independently.\nSolder headers onto each of the two PCA9685 PWM controllers. Since we're only interested in the PWM output, only solder a single row of 1x4 headers for each of the four PWM output groupings on each of the PWM controllers. This will be the way the PCA9685 PWM controllers are seated on the breakout board. I find that using the same trick of seating the headers in the female headers where they'll eventually reside helps keep them straight when soldering.\nI use a JST 2.5mm, oriented and locking 6 pin female connector on either side of the PCA9685 module. In order to keep cable ordering the same, one female header is soldered to the top on the other to the bottom of the PCA9685 module.", "step_imgs": ["https://cdn.instructables.com/F2Q/02VX/JTT5LR5H/F2Q02VXJTT5LR5H.LARGE.jpg", "https://cdn.instructables.com/F67/SOHP/JTT5LR5L/F67SOHPJTT5LR5L.LARGE.jpg", "https://cdn.instructables.com/FSM/KKEN/JTT5LR6J/FSMKKENJTT5LR6J.LARGE.jpg", "https://cdn.instructables.com/FFX/I1ZR/JTT5LP8K/FFXI1ZRJTT5LP8K.LARGE.jpg", "https://cdn.instructables.com/F0X/EUAY/JTT5LR8E/F0XEUAYJTT5LR8E.LARGE.jpg", "https://cdn.instructables.com/FXH/LQF5/JTT5LR9B/FXHLQF5JTT5LR9B.LARGE.jpg", "https://cdn.instructables.com/FJE/H6SU/JTT5LRA8/FJEH6SUJTT5LRA8.LARGE.jpg", "https://cdn.instructables.com/F7W/MLNL/JTT5LRAA/F7WMLNLJTT5LRAA.LARGE.jpg", "https://cdn.instructables.com/F2Y/44QV/JTT5LRBA/F2Y44QVJTT5LRBA.LARGE.jpg", "https://cdn.instructables.com/F9S/VF2T/JTT5LRC7/F9SVF2TJTT5LRC7.LARGE.jpg", "https://cdn.instructables.com/FY6/T6XF/JTT5LRD4/FY6T6XFJTT5LRD4.LARGE.jpg", "https://cdn.instructables.com/F36/1WLS/JTT5LREX/F361WLSJTT5LREX.LARGE.jpg", "https://cdn.instructables.com/FKF/PQ59/JTT5LREY/FKFPQ59JTT5LREY.LARGE.jpg", "https://cdn.instructables.com/FAG/A0EE/JTT5LRF0/FAGA0EEJTT5LRF0.LARGE.jpg", "https://cdn.instructables.com/F0V/259U/JTT5LRF8/F0V259UJTT5LRF8.LARGE.jpg"], "step_title": "Step 14: PCA9685 Module Soldering and Addressing"}, {"step": 15, "steps_text": "Once the headers have been attached, create two 6 wire cables, one about 20cm in length and the other about 75cm. I used an oriented, locking JST 2.5mm 6 pin connector. Make sure the wire ordering from the breakout of the Arduino Nano cable onto the PCA9685 module lines up correctly. If for some reason the orientation was reversed or jumbled, re-order the cable wiring to accommodate.\nI like to use a cable shroud for long cables to keep them from tangling. I also try and use different colored cables to differentiate what their function is and to make it easier to determine if there was a cable ordering mismatch.", "step_imgs": ["https://cdn.instructables.com/F6X/83KS/JTT5LPYO/F6X83KSJTT5LPYO.LARGE.jpg", "https://cdn.instructables.com/F55/CO06/JTT5LPZD/F55CO06JTT5LPZD.LARGE.jpg", "https://cdn.instructables.com/F71/J5TT/JTT5LPEB/F71J5TTJTT5LPEB.LARGE.jpg"], "step_title": "Step 15: PCA9685 Module Cabling"}, {"step": 16, "steps_text": "The laser diodes are grouped into four that are powered and controlled from a single PWM driver line. The cables for this are a JST 2.5mm male header on one end that break out into 4 JST 1.25mm female headers. As much as possible, I try to use a Lineman splice and cover each connection with heat shrink tubing. Electrical tape can be used if heat shrink tubing is not available or wasn't put on before soldering.\nEach length of wire should be measured to be the approximate length of the grouping of four laser diodes to the electronics housing. This means the wires for the laser diodes at the end of the arm should be longer than the shoulders or back.\nEach of the wires is put in a cable sleeve to prevent tangling. I've found 1/4\" braided sleeving works well.\nTo help route the sleeved wires through the arm and middle interface between the outer shell jacket and inner lining, I attached cable clamps, closed off with a cable-tie, that attach to some floating excess fabric on the inside of the arm of the jacket.\nCare has to be taken to make sure the wiring is fed out of the arm properly. If the wiring loops around the lining, this will pinch the opening where an arm would go through making the jacket hard to put on and use.\nI tried labeling the wires so that I could trace back which group belonged to which wire but I didn't have much success.\nI would suggest testing the laser diodes with a CR2032 battery to make sure the laser diodes still work after installation and hookup.\nOnce all the laser diodes are connected to their respective wires, it's time to start the final assembly.", "step_imgs": ["https://cdn.instructables.com/FIB/O9PO/JTT5LRGK/FIBO9POJTT5LRGK.LARGE.jpg", "https://cdn.instructables.com/F60/UFDP/JTT5LPEC/F60UFDPJTT5LPEC.LARGE.jpg", "https://cdn.instructables.com/FEF/TN6Q/JTT5LPFT/FEFTN6QJTT5LPFT.LARGE.jpg"], "step_title": "Step 16: Wiring and Routing for the Laser Diodes"}, {"step": 17, "steps_text": "Before going further we need to pause and make sure things are working properly. Before now, we could only really get a sense for whether things had worked by doing continuity or testing individual components. This will be a full 'integration test' that will test nearly the whole system before a full installation.\nThe test is imperfect but helps track down some common errors early on. The final test is, of course, whether it works after full assembly. The tests here are designed to make sure we're confident that the system is behaving well enough to proceed to the next step.", "step_imgs": [], "step_title": "Step 17: Testing"}, {"step": 18, "steps_text": "Pick a spare laser diode out of the pile that's handy. Take a CR2032 battery and use it to make sure the laser diode is functional by pressing the exposed leads of the laser diode to the top and bottom of the battery. The red wire should be on the 'top' of the CR2032 (the positive lead) and the black or blue wire should be on the bottom (negative) end of the battery. The laser diode should dimly light up.\nMake a temporary test cable that consists of a JST 2.5 2pin male header with two disconnected wires coming out on the end. Strip the ends of these two wires and take a spare laser diode.\nThe exposed leads of the stripped ends of the header cabling will be used to test the laser diode on each of the connections out of the PCA9685 breakout boards.", "step_imgs": [], "step_title": "Step 18: Testing Prep"}, {"step": 19, "steps_text": "Make sure the Arduino Nano and other electronics are powered. After the power is turned on, an LED on the Arduino Nano should show as well as various LEDs on the BEC and the PCA9685 modules to indicate they are working.\nConnect the JST 2.5 2pin header and wires created above to an output header on the PWM driver breakout board. Connect the laser diode to the exposed wires and confirm that it's being powered.\nThe default mode of the Arduino Nano should be the 'twinkle', so the laser diode should run through a cycle of ramping up power then going dim. Wiggle the laser diode connection gently to make sure there are no loose connections that would cause a power outage.\nGo through each connection to make sure they all work.\nIntermittent failures here will most likely crop up into outright failures down the road. Putting electronics into clothing and jostling them around provide ample opportunity for intermittent failures in a stable testing and development environment to become permanent failures in a real world environment.\nFixing issues at this stage, even if intermittent or hard to reproduce, will save heartache down the line when disassembly and debugging will be even more difficult.\nSee the \"Common Errors\" section on help tracking down problems should any occur.", "step_imgs": ["https://cdn.instructables.com/F85/Q564/JTT5LRF9/F85Q564JTT5LRF9.LARGE.jpg", "https://cdn.instructables.com/FKK/MMF9/JTT5LRFF/FKKMMF9JTT5LRFF.LARGE.jpg"], "step_title": "Step 19: Laser Diode Connector Testing"}, {"step": 20, "steps_text": "Routing and giving structural support for cables in the jacket helps with wear and wearability.\nAll wires that aren't soldered directly to proto-boards are stranded. With the exception of some of the battery wiring, all wire is 25 AWG. Where possible wires are put into a wire shroud to make sure they don't get tangled.\nExcept for the direct connections to the lasers, all headers are JST 2.5mm, locking and oriented. As previously stated, the locking is necessary to prevent disconnection from strain or movement. The orientation provides a safety check to make sure shorts or improper connections don't occur.\nMultiple layers of strain relief are provided to try and minimize the possibility of wire fraying or solder joint breakage. The electronics housing have strain relief supports to route cables through to provide strain relief from the soldered connectors. The jacket have cable clamps to guide the cables and provide support. The laser diode housing provides strain relief for the laser diodes.\nEven with all the strain relief and cable routing, it's possible to tear wires or break connections. Some care has to be taken when putting on the jacket to not catch fingers on wires through the lining. The jacket is resilient enough to wear and dance around in but motions that are too jarring or impact that is too high will cause damage.", "step_imgs": ["https://cdn.instructables.com/FM9/ZVX8/JTT5M88H/FM9ZVX8JTT5M88H.LARGE.jpg", "https://cdn.instructables.com/FJX/47DW/JTT5M88C/FJX47DWJTT5M88C.LARGE.jpg"], "step_title": "Step 20: Cabling and Connections"}, {"step": 21, "steps_text": "Power from the regulators needs to get to the Arduino and PWM controllers. The Arduino Nano also needs to communicate to the PWM drivers. The joystick and microphone need extension cables.\nThe laser diode power cabling is a group of four 2-pin JST 2.5mm male connectors. At least one length should be 75cm with the rest being in the range of 20cm. The Arduino Nano power cable is a short 20cm cable of 2-pin JST 2.5mm male connectors. The right PWM controller also needs a short 20cm 2-pin JST 2.5mm male connector cable.\nThe joystick connector is a length of about 50cm of a five wire JST 2.5mm pair of male headers.\nThe microphone connector is a length of about 50cm of a 3pin JST 2.5mm pair of male headers.\nThe PWM controllers need two cables of 6 wires, one of length about 20cm and the other of length about 75cm. They each have ends that are 6 pin male JST 2.5mm headers.\nAll headers are oriented and locking.\nAll cables should be made out of 25 AWG stranded wire. Solid core wire is too stiff and not only restricts movement but has the potential to fray and break. The stranded wire is much more moveable and is better suited to providing power and communication between elements that don't reside on the same proto-board.", "step_imgs": ["https://cdn.instructables.com/FOL/FO6Y/JTT5LQZ4/FOLFO6YJTT5LQZ4.LARGE.jpg", "https://cdn.instructables.com/F6X/7PS2/JTT5LR03/F6X7PS2JTT5LR03.LARGE.jpg", "https://cdn.instructables.com/FMA/PI8L/JTT5LR07/FMAPI8LJTT5LR07.LARGE.jpg"], "step_title": "Step 21: Power, I2C, Joystick and Microphone Connections"}, {"step": 22, "steps_text": "The PWM driver, along with other electronic components, such as the power converters and Arduino Nano, are seated in a laser cut electronic housing, consisting of two laser cut wood panels that have plastic tubing in the middle for spacing. The electronic housing is joined with various M3 screws. The M3 screws provide double duty, acting as spacers for the two housing panels and also provide support for the proto-board.\nThe other PWM driver will be located closer to the other arm and has it's own housing.\nBefore closing the electronics housing make sure all wires are attached. This means the microphone, joystick, power cable, I2C cable and all the laser diode connections for the left arm are attached.\nIt's a good idea to do a test run of the all the electronics connected to the laser diode to make sure things are working properly before the electronics housing is closed off and installed in the jacket.", "step_imgs": ["https://cdn.instructables.com/FJG/BVTU/JTT5LPKD/FJGBVTUJTT5LPKD.LARGE.jpg", "https://cdn.instructables.com/FBL/SYMU/JTT5LPLV/FBLSYMUJTT5LPLV.LARGE.jpg", "https://cdn.instructables.com/FW2/630N/JTT5LPMM/FW2630NJTT5LPMM.LARGE.jpg", "https://cdn.instructables.com/F2Y/W09K/JTT5LPQW/F2YW09KJTT5LPQW.LARGE.jpg", "https://cdn.instructables.com/FTF/NE84/JTT5LPIS/FTFNE84JTT5LPIS.LARGE.jpg", "https://cdn.instructables.com/FYN/3ZDM/JTT5M95P/FYN3ZDMJTT5M95P.LARGE.jpg"], "step_title": "Step 22: Electronics Housing"}, {"step": 23, "steps_text": "Once the electronic housing enclosures are bolted together, the wires should be wrapped around the strain relief gadgets on the top of the housing. This is necessary because stresses from normal movement will wear the connectors on the protoboard and could cause loose connections, breaks in power and other failures.\nThe clamp should be screwed down so that it can withstand a decent yank from the wires.\nEventually, blue loctite should be put on all the bolts that need to be kept in place. This shouldn't be done until there's enough confidence that the jacket is ready to wear as the nuts are hard to get off after the loctite is applied.", "step_imgs": ["https://cdn.instructables.com/F1A/626B/JTT5LPIT/F1A626BJTT5LPIT.LARGE.jpg"], "step_title": "Step 23: Strain Relief"}, {"step": 24, "steps_text": "Place the electronics enclosures in the middle between the jacket outer shell and the inner jacket lining. Use Velcro ties to make sure the electronics enclosures are securely in place.\nFeed the microphone out to a place that can be exposed to sound, puncturing a hole if need be. The joystick can be fed through the arm or be kept on the inside of the jacket, depending on preference.\nUse either Velcro or snaps to close the lining that was cut open.\nOnce all the components are in place, try wearing the jacket to make sure things are working properly. The connections should be resilient to moderate use but a little care should be taken to make sure no excessive wear or strain is put on the components.\nIf there are any failures, either in the whole system or individual laser diodes, work through each until everything is working as expected. See the section \"Common Errors\" to work through some problems I tend to encounter.", "step_imgs": ["https://cdn.instructables.com/FG9/LRWS/JTT5LPSH/FG9LRWSJTT5LPSH.LARGE.jpg", "https://cdn.instructables.com/FV9/F873/JTT5LPTF/FV9F873JTT5LPTF.LARGE.jpg", "https://cdn.instructables.com/F7D/VJMX/JTT5LPTG/F7DVJMXJTT5LPTG.LARGE.jpg", "https://cdn.instructables.com/FO4/G9YB/JTT5LPTI/FO4G9YBJTT5LPTI.LARGE.jpg", "https://cdn.instructables.com/FMC/NURR/JTT5LPUA/FMCNURRJTT5LPUA.LARGE.jpg", "https://cdn.instructables.com/FUN/1JDZ/JTT5LPUB/FUN1JDZJTT5LPUB.LARGE.jpg", "https://cdn.instructables.com/FML/V1VY/JTT5LPUC/FMLV1VYJTT5LPUC.LARGE.jpg", "https://cdn.instructables.com/FX8/WBLD/JTT5LPV1/FX8WBLDJTT5LPV1.LARGE.jpg"], "step_title": "Step 24: Final Placement and Installation"}, {"step": 25, "steps_text": "Once all the issues are worked out, wear it!", "step_imgs": [], "step_title": "Step 25: Wear It"}, {"step": 26, "steps_text": "There are some major points of interest that I believe are worth mentioning. Here is a list, in no particular order:\nThe laser diodes are 5mW and don't pose a significant risk to people's eyesight. Though people shouldn't stare directly into the laser diode, it's akin to staring straight into a flashlight...bad if done without looking away but no real danger of being blinded by accident.\nStrain relief is a must for all components involved. Without it, wires coming out of the laser diodes would be pulled off and connections on the protoboard would weaken.\nMaking sure the proto-board is backed onto a more stable substrate, like the laser cut wood housing, prevents flexing from the proto-board, which helps mitigate breaks, weak joints and other failures from occurring.\nThe LiPo battery has a fuse in line with it preventing more than 3A to be produced. A friend suggested I do this after setting many of my projects on fire. Since I've been using the fuse in line with the LiPo, I'm happy to report that I haven't had one wire explode or any of my jackets catch on fire.\nWithout putting the main driving electronics on a separate regulator from the main power draw I've had the noise cause major problems, especially when there's communication or audio sensing involved. In this project and others, I make sure to power the electronics components (the Nano, PWM controllers, etc.) from a 5V regulated buck converter and the main power components, in this case the laser diodes, from another regulator, in this case the 5V 3A BEC.\nIn general, I like oriented and locking headers, especially for power connections. The orientation prevents accidentally inverting the ground and power. The locking mechanism prevents connections from coming loose. Since the electronics are to be worn, the locking mechanism prevents the headers from coming out if the assembly is jostled. If it's necessary to make connections in the field, the orientation helps prevent mis-wiring.\nFor anyone attempting this project, understand what you're getting into. I have enough of a risk affinity to not mind the dangers but for others who might be more risk averse, understand that the LiPo batteries involved in this project could cause severe bodily damage.\nThe LiPo battery has enough power to catch fire, explode and otherwise cause potentially sever bodily damage.\nI personally believe the technology is safe enough to use (I am happy to wear the jackets I make) but shorts can cause fires, water exposures can cause shorts or other potentially hazardous situations and battery puncture or rupture could cause severe bodily damage.\nBefore I started using fuses as a safety measure, I've had wires explode and jackets catch fire because of shorts in my wiring (only in development, never while actually wearing them out to events).\nDo your research to make sure you understand the risks involved and what level of risk you are comfortable with.\nHere's a short list of what I think were the major drawbacks that I ran into with my approach and what I would do differently:\nThe housing for the laser diodes is laser cut out of black 1/16\" acrylic sheets. The acrylic is brittle and breaks easily. The strain relief plate often cracks when screwing the housing in place. In any potential future iteration, I would try to use either 3d printing a housing or laser cut wood which then could be spray painted for color and wear resistance.\nThe protoboards are large and clunky. I would try to fabricate a custom PCB to reduce size, cost and time.\nOn one arm, I put each PWM line into it's own sheathing and for the other I put two PWM lines through a single sheath. Doubling up the PWM lines per housing sheath uses a lot less space and the right arm is significantly easier to move and put my arm into.\nThe Arduino has intermittent crashes which are hard to replicate and debug. In the future, I would try to put in a watchdog timer to make sure it doesn't get into a bad state as well as put ferrite cores onto critical lines to try to help reduce noise introduced by other components.\nFastening the electronics housing to the jacket is done in a haphazard way. In the future I would try and come up with a solution that more securely fastens each housing onto the jacket.\nThe laser diode wires were loose, to a certain degree, in the jacket lining interface. It might be better to staple these to the jacket to make sure they're more secure and won't interfere with hands or arms.\nThe screws that poke through the jacket aren't comfortable and take up unnecessary space. Either choosing an appropriate length for the screw or cutting them to size as well as providing a blunt end to make sure they aren't poking into the wearer might be worthwhile.", "step_imgs": [], "step_title": "Step 26: Final Design Notes"}, {"step": 27, "steps_text": "Things catch fire:\nA potential cause could be a short causing wires to heat up and catch their insulation or surrounding flammable material on fire.\nMake sure to install a fuse on the battery so that the fuse will blow on a short condition instead of wires or other electronics.\nTest continuity to track down the short. Make sure all the solder joints and area are clean of wire trimmings.\nThings don't power on:\nThis could be caused by a short or break in the power lines. Another possible source is a bad regulator or low battery. It's good practice to also make sure the battery is fully charged and seeing if a fully charged battery fixes the problem before trouble-shooting further.\nTo track down where the error is, consider the following steps:\nTest the batter is producing the voltage you expect (in this case the 2-3s battery output voltage should be in the 7.4V to 11.1V range). If not, charge the battery or use another that is fully charged.\nTest to make sure the fuse hasn't blown. If it has this could indicate a short in the power line so test for continuity to track down if there is a short in the power line. If not, replace the fuse and try again.\nMake sure the breakout board for power has the proper voltages at points you expect. This means testing with the multi-meter that the voltage on the board before the regulator is what's expected to come out of the battery. Test the output of each of the regulators to make sure the voltage is the expected 5V. Often regulators die or are bad so they might need to be replaced. Also make sure the regulators orientation is correct (there should be an 'input' side that connects to the battery side and an 'output' side that connects to the rest of the electronics).\nTest for continuity for the ground and power rails. That means every point on the other breakout boards that is power and ground should have continuity to the appropriate points on the source power output breakout board. If not, this could mean a bad connection on the breakout board in question or a wire that connects the power output.\nMost of the soldering is essentially power management and making sure the proper power and ground rails get to where they need to go. This means that the most common error is a short or break in the power lines (at least that's what I've found in my experience).\nIf power outages are still causing confusion, try disconnecting everything and then progressively connecting components until the failure occurs. For example, disconnect the power breakout board from the other electronics and make sure the regulators in isolation are being powered correctly. Once that's confirmed as working, add only the Arduino Nano breakout, then a single PCA9685 PWM module breakout, etc.\nThings power on intermittently:\nTo rule out the obvious, make sure the battery is fully charged to rule out an empty battery as a possibility. If the intermittent failures disappear with a full battery, this could mean the electronics is 'browning' and is easily fixed with replenishing the battery.\nIf recharging the battery does not solve the problem, this can be one of the more frustrating problems and is hard to track down and debug because the problem is often hard to reproduce. The most likely cause, in my experience, is a bad solder connection. A deformation of the proto-board or too much strain on the connectors causes the solder joint to weaken or crack. In certain orientations, there is physical contact creating the illusion of a proper functioning circuit, but if stresses are applied, the joint falls out of contact and components stop working or power as a whole is broken.\nIf this can be reproduced 'on the bench' then this can give a clue as to where the bad joint is. In general, it's good practice to go over the solder connections to make sure they look good. This means making sure there is plenty of solder on the joints and that through holes are filled with solder.\nI've also found light wiggling to help track down weak connections. In the end, the electronics need to be housed and strain relief needs to be provided or these types of failures will almost surely occur but even with minimal stress on the circuit, sometimes loose connections cause intermittent failures and should be tracked down as soon as possible to prevent headaches later on.\nThe Arduino keeps resetting:\nIn my experience, this is most likely to intermittent power and so the above strategy of looking for loose or bad connections should be used. In rarer occasions, electrical noise sometimes causes the Arduino and other problems in the peripheral electronics. Making sure the power is isolated by their own regulators is a good start but in the worst case, ferrite beads can be attached at choice locations to try and mitigate the noise.\nIf the failure can be reproduced consistently, this can give a good indication of what the underlying cause is.\nAlso, make sure the battery is fully charged to rule out an empty battery as a possibility.\nThe microphone/joystick isn't working:\nThe symptoms are that the joystick won't do anything (for example, not being able to change 'modes') and/or the graphic equalizer mode doesn't display anything. The first thing to check is that the microphone or joystick is connected on both ends. That is, check the cable is connected to the input device and the other end of the cable is connected to the Arduino breakout. If they are connected, make sure the wiring has been done correctly to ensure the wires on one end of the cable match to the wires being fed into the Arduino.\nIf the obvious troubleshooting techniques don't work, further investigation is needed.\nFor the joystick, connect the Arduino to your computer and turn on debugging. There should be output of what the joystick state is and make sure it's reading from the joystick.\nIf it looks like the Arduino still isn't seeing the joystick, make sure the cable and connections have continuity. Sometimes joysticks fail or are bad to begin with so in the worst case, use an Arduino in isolation to try and read from the analog pin that's connected to one of the joystick's axies to determine if it's the connection or the joystick that's failing.\nFor the microphone, do similar as above. Check the cabling for continuity and make sure to test continuity to test that the input pin is being fed to the proper Arduino pin and that power is being provided to the microphone module. The debug output for the Arduino Nano should also have microphone output so you can get a sense of whether there is something being read.\nThe graphic equalizer has a dynamic volume in software to make sure it's trying to be insensitive to volume differences and still produce output but it's limited in what it can do. Sometimes fiddling with the microphone volume meter will work better to create a more satisfying light show.\nMicrophone's fail or are sometimes bad, so a simple test is to try replacement to see if that fixes the issue. If things still aren't working, test the microphone in isolation with an Arduino that's hooked up to read from it.\nSome laser diodes don't work:\nThe scale of the project is such that failures will occur. Individual components could fail either because of loose connections, broken connections, burnt out electronics or other issues.\nFor the case of laser diodes, it's good practice to keep a few spare on hand so that if they do fail for whatever reason, they can be replaced easily. I've found it easier to remove non-working laser diodes and replace them outright than to fix broken laser diodes.\nWhen tracking down individual laser diode failures, make sure to test the laser diode to confirm it's not working, or working intermittently. If the replacement laser diode is still not functioning, this could point to a bad cable connection and so testing continuity on the cable is a good next step.\nIf the cable is the issue, replace that portion of it.\nSometimes the cabling is tight in the arms and through use the stresses of normal movement cause connections to break. Since the laser diodes are connected by a small JST 1.25mm connector, the connector should disengage rather than wire snapping or housing cracking. In this case, the connection can be re-established by re-connecting the laser diode to it's cable.\nIf the laser diode connection keeps getting disconnected, it might be good to choose a different connection, either positioning the cable differently, soldering an extension cable onto it or swapping connections with a neighboring laser diode, so that normal movement won't put as much strain on the connection.", "step_imgs": [], "step_title": "Step 27: Troubleshooting and Common Errors"}, {"step": 28, "steps_text": "This idea has been around for upwards of ten years (as of this writing). From what I can understand, the artist Wei Chieh Shih was the original artist that came up with the idea. It's been used by other celebrities like Bono and Rihanna. I decided to build my own since I thought the idea was interesting and I hadn't seen a 'DIY' version around, nor any source, schematics or building instructions.\nAll source code is available under a free/libre license (either AGPL, GPL, MIT or CC0). All design files, where appropriate, are available under a free/libre license (CC-BY, CC-BY-SA or CC0). These instructions themselves are available under a CC0 license.\nWhere appropriate, please feel free to modify, improve or use any of the assets described here. No credit is necessary.\nHappy Hacking!", "step_imgs": [], "step_title": "Step 28: Conclusion"}, {"step": 29, "steps_text": "Arduino Sketch\nFritizing Schematic\nLaser Housing OpenSCAD Design File\nElectronics Housing OpenSCAD Design File", "step_imgs": [], "step_title": "Step 29: Digital Artifacts"}, {"step": 30, "steps_text": "adafruit_products_MultiBoard_bb-1024.jpg by Bill Earl (CC-BY-SA) (src)\nadafruit_products_2012_10_13_IMG_0692-1024.jpg by Bill Earl (CC-BY-SA) (src)\nlaser-club-stage.png by Taimur Gibson (CC-BY-SA)", "step_imgs": [], "step_title": "Step 30: Credits"}, {"step": 31, "steps_text": "Make\n200 Laser Diode Stage Suite (behance)\nKazuya Yoshii\nWei Chieh Shih\nU2 - 360 at the rose bowl\nAdafruit PCA9685 PWM module (GitHub)\nAdafruit Piccolo Music Visualizer (GitHub)\nWestern Union Splice\nLeigh Buckley", "step_imgs": [], "step_title": "Step 31: References"}], "channel": ""}, {"category": "", "description": "What has 114 LEDs and is always running? As you may know the answer is a word clock. What has 114 LEDs + 114 servos and is always moving? The answer is this servo controlled word clock.\nFor this project I teamed up with a friend of mine which turned out to be a must because of the large effort of this build. In addition, my electronic and his mechanical skillset complemented each other quite well. The idea for this adaptation of the popular word clock came to us while we were making a regular one as christmas gift. There, we noticed that it is also possible to project the letters from the back onto a white sheet of paper. At the time this was only a workaround solution to hide our crappy craftsmanship since we ended up with a lof of bubbles while attaching a vinyl sticker with the letters to the back of a glass plate. We then noticed that one can achieve interesting effects when bending the sheet of paper since the letters change size and become blurred. This made us come up with the idea to make a word clock where the letters are projected from the back onto a screen and can be moved back and forth to change the size of the projected image. At first we were a bit reluctant to build this project because of the costs and effort it takes when you want to move each of the 114 letters individually. So we tossed with the idea to make a version where just every word that is used to display the time can be moved back and forth. However, after seeing that the Epilog contest was coming up on Instructables asking for epic projects, and also after finding relatively cheap servo motors, we decided to go all the way and make a proper version where each letter is individually controlled by a servo.\nATTENTION: This is not a one-day build!\nTo give you an idea about the effort that was involved in this project consider the following numbers. The finished clock contains\n798 individual 3D printed models (total printing time ~ 200 hours)\n~600 screws + ~250 nuts and washers\n~500 wires (total length ~ 50 m). Not counting the wires which were already attached to the servos.", "title": "Word Clock Controlled by 114 Servos", "url": "https://www.instructables.com/id/Word-Clock-Controlled-by-114-Servos/", "section": "technology", "steps": [{"step": 1, "steps_text": "The clock was designed with Autodesk Fusion 360 and Inventor. As you can see the clock consists of 114 letterboxes which are moved by linear actuators that are in turn driven by servo motors. Each letterbox contains an LED that projects the letter onto the back of a screen made of white PVC foil. All components are housed in a wooden frame.", "step_imgs": ["https://cdn.instructables.com/FED/3ESE/JTT5KFM6/FED3ESEJTT5KFM6.LARGE.jpg", "https://cdn.instructables.com/F9X/QFI7/JTT5KFLW/F9XQFI7JTT5KFLW.LARGE.jpg", "https://cdn.instructables.com/FT3/ULZC/JTT5KFLM/FT3ULZCJTT5KFLM.LARGE.jpg", "https://cdn.instructables.com/F3I/RUXO/JTT5KFLC/F3IRUXOJTT5KFLC.LARGE.jpg", "https://cdn.instructables.com/F8N/YW21/JTT5JSR4/F8NYW21JTT5JSR4.LARGE.jpg"], "step_title": "Step 1: Design"}, {"step": 2, "steps_text": "Electronic components\n114x SG90 micro servo motors (ebay.de)\nAlthough the servos were labeled with the name of the popular brand \"Tower Pro\" they are most certainly cheaper knockoffs. However, as the price of the knockoff is about 1 EUR compared to 3 EUR for the original this makes the whole project way more affordable. Apparently, the knockoffs also draw less current (of course this also implies less torque) which made it more easy to find a suitable power supply for the whole project.\n5 m WS2812B LED strip, 60 LEDs/m (ebay.de)\n8x 16 Ch PWM servo driver PCA9685 (ebay.de)\nDS3231 RTC module (ebay.de)\nArduino nano (ebay.de)\nVS1838B IR receiver + remote (ebay.de)\n5 V, 10 A power supply (ebay.de)\n20x 15 cm servo extension cable (ebay.de)\ncable DC socket to bare wire (conrad.de)\n300-500 Ohm resistor\n1000 \u00b5F capacitor (> 5 V)\nMaterials for frame\nwooden slats\n2 pcs 40 x 10 x 497 mm\n2 pcs 12 x 12 x 461 mm\n2 pcs 12 x 12 x 20 mm\nmultiplex\n2 pcs 12 x 77 x 481 mm\n2 pcs 12 x 84 x 489 mm\nwhite PVC foil (700 x 1000 x 0.3 mm) (modulor.de)\n500 x 500 mm HDF plate, 3mm thick\nScrews, cables, etc.\n228x M2 screws, 8 mm long + washers + hex nuts\n228x self tapping screws M2.2, 6.5 mm long\nvarious wood screws\n50 m, 0.22 mm2 (24 AWG) wire\nIn addition, this project required an extensive amount of 3D printing and soldering. The back plate was produced via laser cutting. The frame was build with a circular saw, jigsaw and drill. As for every decent project we also used a lot of hot glue, also some epoxy and plastic glue.\nThe total costs for this project came to about 350 EUR.", "step_imgs": ["https://cdn.instructables.com/FPC/XV7K/JTIYLSFC/FPCXV7KJTIYLSFC.LARGE.jpg", "https://cdn.instructables.com/FXX/UWQC/JTIYLS2G/FXXUWQCJTIYLS2G.LARGE.jpg"], "step_title": "Step 2: Gathering Materials"}, {"step": 3, "steps_text": "Letter Boxes\nEach letter box consists of a 3D printed cover that acts as shadow mask and a base plate onto which an LED will be attached. The base plate includes four dowel pins to help alignment onto the actuator and six holes for feeding through the LED cables. In total this makes 228 models which were all printed from black PLA (Formfutura EasyFill PLA) with 0.4 mm layer height. Total printing time on my Anycubic Kossel Linear Plus was about 23 hours for the letter covers and 10 hours for the base plates. All stl files can be found in the attached zip file.\nActuators\nThe actuator design was adapted from the Linear Servo Extender by Roger Rabbit which came in very helpful. Since the parts fit tightly together they should be printed on a decent 3D printer. Small layer height is not as important (0.2 mm is fine) as a small nozzle diameter (we recommend 0.4 mm). The parts should be printed in the shown orientation. Each actuator consists of 5 individual parts, since we needed 114 actuators this means 570 parts (!) in total. To print these we used the combined power of several professional 3D printers (Ultimaker S2+, Ultimaker S5, Lulzbot TAZ6, Sindoh 3D Wox DP200). Still we had a lot of failed prints on the parts and I included some pictures for your amusement. The total printing time was about 150 hours (!). Again the stl files can be found in the attached zip file.", "step_imgs": ["https://cdn.instructables.com/FWY/LTJO/JTIYLS52/FWYLTJOJTIYLS52.LARGE.jpg", "https://cdn.instructables.com/FTU/TTXR/JTIYLSLK/FTUTTXRJTIYLSLK.LARGE.jpg", "https://cdn.instructables.com/FAS/W7FS/JTIYLTEP/FASW7FSJTIYLTEP.LARGE.jpg", "https://cdn.instructables.com/FDS/AKNN/JTIYLU01/FDSAKNNJTIYLU01.LARGE.jpg", "https://cdn.instructables.com/FI1/XMKK/JTIYLU05/FI1XMKKJTIYLU05.LARGE.jpg", "https://cdn.instructables.com/FLW/SPIH/JTT5KIS7/FLWSPIHJTT5KIS7.LARGE.jpg", "https://cdn.instructables.com/FJZ/IRXF/JTT5KI3Q/FJZIRXFJTT5KI3Q.LARGE.jpg", "https://cdn.instructables.com/FRC/D9Z1/JTT5KFMM/FRCD9Z1JTT5KFMM.LARGE.jpg", "https://cdn.instructables.com/FSE/QTA9/JTT5KFNN/FSEQTA9JTT5KFNN.LARGE.jpg", "https://cdn.instructables.com/F88/ST8D/JTT5KFNS/F88ST8DJTT5KFNS.LARGE.jpg", "https://cdn.instructables.com/F52/MYBT/JTT5KFOU/F52MYBTJTT5KFOU.LARGE.jpg", "https://cdn.instructables.com/FHS/M9WW/JTT5KFQJ/FHSM9WWJTT5KFQJ.LARGE.jpg"], "step_title": "Step 3: 3D Printed Components"}, {"step": 4, "steps_text": "The frame was contructed from wooden slats and multiplex board. The parts were cut using a circular saw and a jigsaw and then fixed together using wood glue and wood screws. The top and bottom cover was also stained to give it a nicer look. A detailed description of the parts including all the dimensions can be found in the attached drawings.", "step_imgs": ["https://cdn.instructables.com/FQM/8H4U/JTT5JJTM/FQM8H4UJTT5JJTM.LARGE.jpg", "https://cdn.instructables.com/F9U/VYBX/JTT5JJTS/F9UVYBXJTT5JJTS.LARGE.jpg", "https://cdn.instructables.com/F6J/N1VC/JTIYLTU1/F6JN1VCJTIYLTU1.LARGE.jpg", "https://cdn.instructables.com/FKL/H4UU/JTT5KIVS/FKLH4UUJTT5KIVS.LARGE.jpg"], "step_title": "Step 4: Constructing the Frame"}, {"step": 5, "steps_text": "Assembling the letterboxes was a lot of work and took a very long time, especially the soldering. This is because every step you make has to be repeated 114 times.\nCut 114 individual pieces from the LED strip\nTin all LED pads\nAttach each LED to the 3D printed backplate of a letterbox. The LED should be centered. We also secured it with hot glue.\nNext we prepared 3x114 = 442 wires, i.e. cutting to length, stripping the ends and tinning them. The length of each wire was 10 cm each except for the wires connecting the last letter to the dots which has to be longer (~25 cm). Also the wires connected to the first letter that will be connected to the arduino and power supply should be longer.\nDiasy chain LEDs using wires. The wires are fed through the holes in the 3D printed backplate of each letterbox.\nThe front cover of the letter box was attached with glue\nParts of the linear rack for the actuator need to be glued together\nLinear rack gets attached to the back of the letterbox using glue", "step_imgs": ["https://cdn.instructables.com/F0D/XJZW/JTIYLSLP/F0DXJZWJTIYLSLP.LARGE.jpg", "https://cdn.instructables.com/FE1/9LIU/JTIYLSLM/FE19LIUJTIYLSLM.LARGE.jpg", "https://cdn.instructables.com/FWI/QZQE/JTIYLSLN/FWIQZQEJTIYLSLN.LARGE.jpg", "https://cdn.instructables.com/FHP/VL17/JTIYLSLQ/FHPVL17JTIYLSLQ.LARGE.jpg", "https://cdn.instructables.com/F0Q/ZAIC/JTIYLSTC/F0QZAICJTIYLSTC.LARGE.jpg", "https://cdn.instructables.com/FQC/AQO8/JTIYLT6Z/FQCAQO8JTIYLT6Z.LARGE.jpg", "https://cdn.instructables.com/FO4/Y0HU/JTIYLTWR/FO4Y0HUJTIYLTWR.LARGE.jpg"], "step_title": "Step 5: Assembling the Letter Boxes"}, {"step": 6, "steps_text": "Again assembling the actuators was a very tedious procedure that took a long long time.\nAttach servo to 3D printed housing using the included screws\nThe round gear is attached to the servo using the included plastic cross but first the cross needs to be cut to shape and attached to the gear using epoxy.\nAttach gear to servo using the included screw\nBefore inserting the linear rack each servo was zeroed to the same position\nInserting the linear rack with the letterbox\nInserting two M2 hexnuts in the 3D printed housing which will be used to attach it to the backplate later\nClose housing with 3D printed cover using the M2.2 self tapping screws\nIn the end we ended up with a big chunky mess of diasy chained actuators as shown in the picture above", "step_imgs": ["https://cdn.instructables.com/F9C/L9VY/JTIYLU0A/F9CL9VYJTIYLU0A.LARGE.jpg", "https://cdn.instructables.com/FBM/ZVWR/JTIYLU12/FBMZVWRJTIYLU12.LARGE.jpg", "https://cdn.instructables.com/FO1/OGKY/JTIYLU2X/FO1OGKYJTIYLU2X.LARGE.jpg"], "step_title": "Step 6: Assembling the Actuators"}, {"step": 7, "steps_text": "The back plate was laser cut from 3 mm thick HDF wood using a CO2 laser cutter from our local maker space. At first we tried plywood but it turned out to be much too flimsy to support the weigth of all the components. It would have been even better to use aluminum in this case but it is of course more expensive and cannot be cut with a CO2 laser. The dxf file for the backplate is attached.", "step_imgs": ["https://cdn.instructables.com/F4Z/WDBM/JTT5JKEL/F4ZWDBMJTT5JKEL.LARGE.jpg", "https://cdn.instructables.com/FSZ/V6R5/JTIYLU3M/FSZV6R5JTIYLU3M.LARGE.jpg"], "step_title": "Step 7: Making the Backplate"}, {"step": 8, "steps_text": "At first the PCA9685 boards should be attached to the backplate using PCB standoffs. Then the Arduino nano and RTC module can be placed as shown in the picture above. For the latter two we used 3D printed holders that were attached with hot glue. Components were connected as shown in the wiring diagram. Note that it is best to power every PCA9685 separately via the terminal block. At first we daisy chained also the V+ and GND connectors and connected only the terminal block of the first board (as suggested on the adafruit page), however, in this case all current is going through the first board and we ended up burning the MOSFET of the reverse protection circuit. There is also a spreadheet attached showing the cabling of the servos. Extension cables for the servos where used whenever needed. Note that you have to assign different I2C addresses to each PCA9685 as explained on the adafruit page.\nThe actuators were then attached to the backplate using 228x M2 screws. The work was again very monotonous but after it was finished the clock was already starting to take shape. We also tried to organize the servo cables as good as possible but in the end the cabling was still very messy.\nPower was supplied by feeding the DC cable through the backplate and connecting it to a terminal block.", "step_imgs": ["https://cdn.instructables.com/FJ3/JGU4/JTIYLU3N/FJ3JGU4JTIYLU3N.LARGE.jpg", "https://cdn.instructables.com/F5Y/DKZZ/JTT5KQ1I/F5YDKZZJTT5KQ1I.LARGE.jpg", "https://cdn.instructables.com/FTF/PUXD/JTT5KQ2X/FTFPUXDJTT5KQ2X.LARGE.jpg", "https://cdn.instructables.com/F7U/GXII/JTT5KQ3D/F7UGXIIJTT5KQ3D.LARGE.jpg", "https://cdn.instructables.com/FJH/CNT8/JTT5JFNH/FJHCNT8JTT5JFNH.LARGE.jpg"], "step_title": "Step 8: Attach Components to Backplate and Wiring"}, {"step": 9, "steps_text": "After all components were mounted and the cables organized, we attached the backplate to the frame using 6x M4 screws. Unfortunately, we left very little space for all the cables to fit so they had to be squeezed in a little.", "step_imgs": ["https://cdn.instructables.com/FEU/L449/JTIYLU3U/FEUL449JTIYLU3U.LARGE.jpg", "https://cdn.instructables.com/F15/3H16/JTT5JHLZ/F153H16JTT5JHLZ.LARGE.jpg"], "step_title": "Step 9: Attaching Backplate to Frame"}, {"step": 10, "steps_text": "Since the height of all letterboxes was slightly different after mounting we used the attached code to calibrate all servos so that the letterboxes have the same minimum and maximum positions. For the maximum position we tried to place the letterbox as close as possible to the screen. The calibrated min/max positions for every servo are then later entered into the main code.", "step_imgs": ["https://cdn.instructables.com/FH5/IH4B/JTT5JHTD/FH5IH4BJTT5JHTD.LARGE.jpg"], "step_title": "Step 10: Calibrating the Servos"}, {"step": 11, "steps_text": "Attached is the main code for the word clock. There are three type of effects for showing the time.\nQuickly move all letters to back (one after another) and light LEDs with equal random color. Then quickly move letters that display the time to the front one after another and light each word in a random color.\nQuickly move all letters to back (one after another) and light LEDs with equal random color. Slowly move each word that displays the time to the front (all letters simultaneuosly) and fade color from background color to a random value.\nQuickly move all letters to a random position (one after another) and light LEDs with different random color. Then slowly move all letters to back and fade the color. Continue with 1. or 2.\nI also wanted to implement an effect where the dot that is showing the current minute is gradually moving forward and fading color so that it is at the front positon with the correct color when the minute is finished. Unfortunately, I did not get it working yet because it seems to make the IR receiver unresponsive.", "step_imgs": [], "step_title": "Step 11: Uploading the Code"}, {"step": 12, "steps_text": "At first we wanted to use white fabric as screen. The problem was that after attaching it to the frame the fabric bent down in the center and we ended up with a pincushion distortion. We then decided to instead use a thin white PVC foil for the screen. The foil is also advertised for making lamp shades so it has a reasonable transmission but it is not seethrough so the black letterboxes stay hidden. In our first trial we attached the foil using epoxy but it did not stick too well so we switched to hot glue. Be careful though that if the glue is too hot it can actually melt the foil. Excess foil was removed with an exacto knife.", "step_imgs": ["https://cdn.instructables.com/FX1/6RQ0/JTT5JN30/FX16RQ0JTT5JN30.LARGE.jpg", "https://cdn.instructables.com/F9V/4NOE/JTT5KGP8/F9V4NOEJTT5KGP8.LARGE.jpg"], "step_title": "Step 12: Attaching the Screen"}, {"step": 13, "steps_text": "Finally the stained wood covers were attached to the top and bottom. The dark colour makes a nice contrast to the white screen. The IR receiver was fed through the hole in the backplate and fixed to the top cover with hot glue.", "step_imgs": ["https://cdn.instructables.com/F7L/PPEC/JTT5JOHO/F7LPPECJTT5JOHO.LARGE.jpg", "https://cdn.instructables.com/FML/3M6K/JTT5JOIH/FML3M6KJTT5JOIH.LARGE.jpg", "https://cdn.instructables.com/FJV/4819/JTT5JTKV/FJV4819JTT5JTKV.LARGE.jpg", "https://cdn.instructables.com/F31/BFS0/JTT5JTI3/F31BFS0JTT5JTI3.LARGE.jpg"], "step_title": "Step 13: Attaching the Top and Bottom Cover"}, {"step": 14, "steps_text": "After two months of intensive the work the clock was finally finished and working. Overall we are very happy with the result. Moving the letters behind the screen paired with changing the colors of the LEDs produces very cool looking effects. In the end the letters did not line up perfectly and the screen was not 100% flat but this almost makes it look even nicer. There are certainly things which can be improved but I do not think that there will be a version 2.0 because of the monumental effort of this build, unless next time we outsource the production to China.\nIf you like this build and managed to scroll down all the way to the bottom please vote for us in the Epilog Contest.", "step_imgs": ["https://cdn.instructables.com/F9R/PPUJ/JTT5KEWE/F9RPPUJJTT5KEWE.LARGE.jpg", "https://cdn.instructables.com/FTY/3BVP/JTT5KEXD/FTY3BVPJTT5KEXD.LARGE.jpg", "https://cdn.instructables.com/FDH/LG6D/JTT5KEVN/FDHLG6DJTT5KEVN.LARGE.jpg", "https://cdn.instructables.com/F37/DRGN/JTT5KEWV/F37DRGNJTT5KEWV.LARGE.jpg"], "step_title": "Step 14: Finished Clock and Summary"}], "channel": ""}, {"category": "", "description": "This is my 3rd Fizzle Loop Synth circuit and it builds on the previous 2 which can be found here and here.\nThe heart of the synth is 3, 555 Timer IC's which are used to make some really interesting beeps and boops. The difference between this version and the others is; I have reduced the number of IC's down to 3 (version 2 have 4!), the rhythms and sounds you can make from this version are in my opinion are better and lastly, there is a drum sound option which gives some really cool beats.\nI also have shrunk this synth into a pocket sized one. By placing some of the capacitors directly onto switches and shrinking the prototype board down, I managed to stuff all of the pots, switches and components into a small flashlight case.\nYou could probably use something like an altoids tin as a substitute case.\nI have also been playing around with designing schematics and have included a circuit diagram which (I hope!) is easy to understand. I've also decided not to do a step by step guide to making the circuit as I don't really think it helps too much. However, if I'm wrong let me know and I'll do it in the future. What I have done instead is described some of the trickier sections and have added explanations where necessary. Such as what a Vactrol is and how to make one.\nFinally - I've made a video of the synth in action so check that out to hear how it sounds.", "title": "Fizzle Loop Synth V3 (555 Timer)", "url": "https://www.instructables.com/id/Fizzle-Loop-Synth-V3/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts:\n1. Resistors.\nUse metal film ones \u2013 they are better quality and cost about the same as other ones. Also, buy them in assorted lots on eBay\n- 4.7K X 2\n- 3.3K X 2\n- 7.5K\n- 3.6K\n- 1.5K\n2. Capacitors\nYou can also buy these in assorted lots on eBay, which I suggest you do\n- 100uf X 2\n- 220uf\n- 22uf\n- 47uf\n- 2.2uf\n3. Making a vactrol\n- 5mm white LED X 2 \u2013 eBay\n- LDR (Light Dependent Resistor) X 2 - eBay\n- Heat shrink (needs to be able to fit over the LED so 5 mm should be fine.\n4. 10K Potentiometers X 6 \u2013 eBay\n5. Potentiometer knobs X 6 - eBay\n6. 555 Timer X 3 \u2013 eBay\n7. 3mm LED X 2 \u2013 eBay\n8. SPDT Switches X 2 \u2013 eBay.\n9. 0.5W 8ohm speaker \u2013 eBay. You can use a larger one if you want to I used a small one as my case was small.\n10. 3.5mm output jack socket \u2013 eBay\n11. 9v Battery\n12. 9V battery holder \u2013 eBay\n13. Prototype Board \u2013 eBay\n14. Momentary Switches X 2 \u2013 eBay\nIf you also want to add a amp to increase the volume \u2013 then you will also need the following parts\n14. Small amp module \u2013 eBay\n15. 10K pot (This is one of the 6 that I have included above)\n16. Some type of case to add everything into. I used an old torch I had lying around.", "step_imgs": ["https://cdn.instructables.com/FXP/QHX1/JSUOV6ID/FXPQHX1JSUOV6ID.LARGE.jpg", "https://cdn.instructables.com/FJH/KC9G/JSUOV6IM/FJHKC9GJSUOV6IM.LARGE.jpg", "https://cdn.instructables.com/FVQ/H2RB/JSUOV6KH/FVQH2RBJSUOV6KH.LARGE.jpg", "https://cdn.instructables.com/FMG/LY69/JSUOV6KQ/FMGLY69JSUOV6KQ.LARGE.jpg", "https://cdn.instructables.com/FNH/HYBK/JSUOV6KR/FNHHYBKJSUOV6KR.LARGE.jpg", "https://cdn.instructables.com/FF1/36NC/JSPAEPF2/FF136NCJSPAEPF2.LARGE.jpg", "https://cdn.instructables.com/FDL/1U0Z/JSPAEK6X/FDL1U0ZJSPAEK6X.LARGE.jpg", "https://cdn.instructables.com/FE6/DQS0/JSPAEISE/FE6DQS0JSPAEISE.LARGE.jpg"], "step_title": "Step 1: Parts"}, {"step": 2, "steps_text": "At first glance, the circuit might look a little complicated but it's really pretty simple. The best way to make this synth is in stages which is how I will explain each step in making the circuit. You'll also notice that I have included 2 schmatics, the 2nd one includes a amp module and volume pot. It's not necessary to add this but it will dramatically increase the volume. However, I did add an output socket so you can just plug it into a portable speaker to increase the colume. If you also download Fritzing you can play around with the schematics yourself.\nI'll go through what each 555 timer does and will try to explain some of the features and how the synth works.\n555 Timer 1 & 2\n1. Both 1 & 2 timers are basically a flashing LED circuits. To be able to control the speed of the LED on each 555 IC, there are 2 different capacitor values. These are connected to a SPDT switch which allows you to change the speed of the LED's\n2. Also connected to each IC is a 10K pot. This also allows you to control the speed of the LED's.\nVacrol\n1. IC timers 1 & 2 are also connected to a vacrol. Inside the vactrol is an LED and a Light dependant resistor (LDR). There is a pot connected to each which controls the brightness of the LED's which changes the pitch and tone\n2. Check out the next step on what a vacrol is.\n555 Timer 3\n1. Lastly, IC 3 generates different sounds depending on the brightness of light. There is also a pot that controls pitch.\n2. IC 3 is connected to IC's 1 and 2 via 2 vactrols. When you connect the LED's to the LDR's (which is what a vacrol is) you have a fizzle loop synth!\nSo to summarise - LED's blink at different rates and brightness's which create rhythms and beats controlled by various pots and switches.", "step_imgs": ["https://cdn.instructables.com/FFZ/UYTA/JT91SGJM/FFZUYTAJT91SGJM.LARGE.jpg", "https://cdn.instructables.com/FFU/XQ2V/JT91SGLL/FFUXQ2VJT91SGLL.LARGE.jpg", "https://cdn.instructables.com/F4T/A9SA/JTYNFA0C/F4TA9SAJTYNFA0C.LARGE.jpg"], "step_title": "Step 2: About the Circuit"}, {"step": 3, "steps_text": "A vacrtol is made from 2 common component, an LED and a Light Dependant Resistor (LDR). The parts are incorporated into one package and face each other. I use heat shrink which seems to work well as a casing.\nIt\u2019s important that the only light that the photo cell can detect is from the LED. If outside light is able to reach the photo cell, then it will interfere with the performance and sound, that\u2019s why you need to add something like heat shrink to protect them.\nWhen wired-up, the Vactrol acts like a potentiometer - applying a voltage to the Vactrol's LED has the same effect as turning up the knob on the potentiometer. Now if you dim the LED or flash it (like in the Fizzle Loop Synth) and hook it up to a 555 timer, then you can generate different tones and rhythms.\nNext I'll go through how to easily make your own vacrol. You will need 2 for this project", "step_imgs": ["https://cdn.instructables.com/FHH/38C9/JSL397O9/FHH38C9JSL397O9.LARGE.jpg", "https://cdn.instructables.com/FYG/L923/JSPAF5DV/FYGL923JSPAF5DV.LARGE.gif"], "step_title": "Step 3: What's a Vacrol?"}, {"step": 4, "steps_text": "Steps:\n1. Cut a small length of heat shrink tube. The LED and photo cell need to be able to fit inside snuggly. You also want to have a little excess heat shrink so you can pinch it together once heated and ensure no light can enter the vacrol.\n2. Place the LED into the heat shrink with the legs facing out and also do the same for the photo cell. Make sure that they are touching inside the heat shrink. Also mark the ground leg on the LED so you know which one is which\n3. Heat the heat shrink and start to shrink it. Start with the LED end first and when it has shrink enough, grab some pliers and flatten the end of the heat shrink so it is sealed shut.\n4. Do the same for the LDR\n5. Make 2 of these\n6. That\u2019s it! You have made an important component to the fizzle loop synth", "step_imgs": ["https://cdn.instructables.com/FIY/E3V7/JSUOV4W3/FIYE3V7JSUOV4W3.LARGE.jpg", "https://cdn.instructables.com/FP6/RM3I/JSUOV4W4/FP6RM3IJSUOV4W4.LARGE.jpg", "https://cdn.instructables.com/F2O/PNK0/JSUOV4W6/F2OPNK0JSUOV4W6.LARGE.jpg", "https://cdn.instructables.com/FMD/XBWM/JSUOV4W8/FMDXBWMJSUOV4W8.LARGE.jpg", "https://cdn.instructables.com/FXW/SVG0/JSUOV4W9/FXWSVG0JSUOV4W9.LARGE.jpg", "https://cdn.instructables.com/F0O/ABL1/JSUOV4WA/F0OABL1JSUOV4WA.LARGE.jpg", "https://cdn.instructables.com/FMY/ACLV/JSUOV4WB/FMYACLVJSUOV4WB.LARGE.jpg"], "step_title": "Step 4: Making a Vactrol"}, {"step": 5, "steps_text": "As mentioned earlier, I'm not going to go through a step by step process on how to add each component to the circuit. I'm going to assume you have put circuits together and my schematic makes some sense. I will go through a few interesting parts of building this section of the circuit. The first 2 timers are pretty much identical in how they are connected to the board. The only difference is a switch connected to the 2nd IC.\nThe LED\nYou may have noticed that there is an LED by itself, connected to pin 3, along with the vactol. This LED acts as a visual when creating tunes and flashes at the same time as the LED inside the vacrol\nWires\nYou'll need to add wires to the circuit board which will be connected to the pots and switches later on. I use computer ribbon cable wire for this as it's strong, thin and you can pick it up for free at most ewaste recycle places. Add all of the wires to the circuit board first and make sure you give yourself enough length on each as they will need to be connected later on once the circuit is completed.\nAdding the Vactrol\n1. Solder the legs of the LED's and LDR directly to the prototype board\n2. Ensure that the LED legs are facing down and the positive leg is closest to the timer\n3. Connect the positive LED leg to pin 3 and the ground to ground on the prototype board\n4. Connect one of the legs of the LDR to positive, the other will be connected to pin 6 on 555 timer 3\nCheck out the next step on how the caps are attached to the SPDT switches", "step_imgs": ["https://cdn.instructables.com/F7Q/0CH2/JSPABZ4M/F7Q0CH2JSPABZ4M.LARGE.jpg", "https://cdn.instructables.com/F59/BT9I/JSPAEIZF/F59BT9IJSPAEIZF.LARGE.jpg", "https://cdn.instructables.com/FFS/ZMID/JSPAEIZJ/FFSZMIDJSPAEIZJ.LARGE.jpg", "https://cdn.instructables.com/F0H/AHUK/JSPAEIZL/F0HAHUKJSPAEIZL.LARGE.jpg", "https://cdn.instructables.com/F2I/VEY0/JSPAEJ2Z/F2IVEY0JSPAEJ2Z.LARGE.jpg", "https://cdn.instructables.com/FHO/VG1R/JSPAEJ4O/FHOVG1RJSPAEJ4O.LARGE.jpg"], "step_title": "Step 5: Making the Circuit - IC Timer 1 and 2"}, {"step": 6, "steps_text": "555 IC 3 is the timer that gives you your tunes. It's actually a basic light thermin based on the slidersynth by Deno which I have also built here. I've taken it a few steps further with the fizzle loop synth but basically it uses the same concepts. I'll go through a few highlights of this section of the build\nSteps:\n1. There's a 10K pot that is connected to pin 6 and ground. This is used to control the overall pitch of the synth. You could use a 5K pot as well for this section. Just experiment and work out what works best for you.\n2. You will also notice that there is a momentary switch connected to the vactol on the 2nd IC and also connected to pin 7 on IC 3. This momentary switch should always be on and is only off when you push it down. It changes the tone when pushed down\n3. After experimenting a little I worked out that connecting pins 3 on both both IC 2 and 3 you can get an interesting drum type sound. Adding a switch to this section allows you to change between rythum and drums.\n4. Lastly I included a 3.5mm jack socket. This allows you to plug it into an amp for a louder sound. I definitly suggest you add an output socket so you can really pump up the volumne.", "step_imgs": ["https://cdn.instructables.com/FIM/SYPJ/JSPAEJ4R/FIMSYPJJSPAEJ4R.LARGE.jpg", "https://cdn.instructables.com/F25/CV3V/JSPAEJ4X/F25CV3VJSPAEJ4X.LARGE.jpg", "https://cdn.instructables.com/FH6/4YG2/JSPAEJ6P/FH64YG2JSPAEJ6P.LARGE.jpg", "https://cdn.instructables.com/FNL/MK5Q/JSPAEJA3/FNLMK5QJSPAEJA3.LARGE.jpg"], "step_title": "Step 6: Making the Circuit - IC Timer 3"}, {"step": 7, "steps_text": "One of the aims in making the circuit was to try and reduce the size as most as possible. I had to if I wanted it to fit inside a small case such as the flashlight case that I used in this project. Because of this I decided not to solder the capacitors connected to pin 2 to the prototype board but directly to the SPDT switch.\nSteps:\n1. Solder the positive legs of the 100uf cap to the first pin on the switch, the 220uf to the middle pin and the 330uf cap to the last pin\n2. Do the same again for the other caps for 555 timer 2. There are different cap values for this timer - you just need to make sure that they are connected in descending order, 10k 22k and 47k\n2. For each switch, connect all of the ground legs of the caps together. These will be connected to pin 2 on 555 timers later on\n3. The other pins on each of the switches can also be connected together. These will be connected to ground on the prototype board later.", "step_imgs": ["https://cdn.instructables.com/FF1/36NC/JSPAEPF2/FF136NCJSPAEPF2.LARGE.jpg", "https://cdn.instructables.com/F54/ZI4K/JSPAEPIE/F54ZI4KJSPAEPIE.LARGE.jpg", "https://cdn.instructables.com/F16/5AMO/JSPAEPJK/F165AMOJSPAEPJK.LARGE.jpg", "https://cdn.instructables.com/FBX/CMYC/JSPAEPLD/FBXCMYCJSPAEPLD.LARGE.jpg", "https://cdn.instructables.com/F2H/5R2A/JSPAEPO6/F2H5R2AJSPAEPO6.LARGE.jpg", "https://cdn.instructables.com/FV4/MPVU/JSPAEPUG/FV4MPVUJSPAEPUG.LARGE.jpg"], "step_title": "Step 7: Adding Capacitors Directly to the Switches"}, {"step": 8, "steps_text": "The case I used is an old flashlight that I had lying around. The lens section was a perfect spot to add a small speaker. The case is a tight fit for all of the electronics but I wanted tpo make a pocket sized flzzle loop synth this time.\nSteps:\n1. First you need to design the layout of the pots and switches. This is an important part, especially if you are using a small case like I did in thsis build.\n2. You'll also need to take into consideration how everything will fit inside the case. Wires, battery and the circuit board will need to be cramed inside so make sure you plan this out too.\n3. Once you have planned out the build it's then time to start to add the components. Drill the holes in the case and attach all of the pots, switches and LED's needed for the build.", "step_imgs": ["https://cdn.instructables.com/FE6/DQS0/JSPAEISE/FE6DQS0JSPAEISE.LARGE.jpg", "https://cdn.instructables.com/F4L/LZJM/JSPAEISF/F4LLZJMJSPAEISF.LARGE.jpg", "https://cdn.instructables.com/F29/Q2W1/JSPAEIS9/F29Q2W1JSPAEIS9.LARGE.jpg", "https://cdn.instructables.com/F7Y/U27K/JSPAEISG/F7YU27KJSPAEISG.LARGE.jpg", "https://cdn.instructables.com/F0C/KR4H/JSPAEISH/F0CKR4HJSPAEISH.LARGE.jpg", "https://cdn.instructables.com/FO9/KW61/JSPAEISI/FO9KW61JSPAEISI.LARGE.jpg", "https://cdn.instructables.com/FMO/KDO7/JSPAEISK/FMOKDO7JSPAEISK.LARGE.jpg", "https://cdn.instructables.com/FJG/6WQJ/JSPAEISL/FJG6WQJJSPAEISL.LARGE.jpg", "https://cdn.instructables.com/F8J/NW2L/JSPAEISM/F8JNW2LJSPAEISM.LARGE.jpg", "https://cdn.instructables.com/FBY/6VUC/JSPAEISN/FBY6VUCJSPAEISN.LARGE.jpg", "https://cdn.instructables.com/F7C/8AH4/JSPAEK6T/F7C8AH4JSPAEK6T.LARGE.jpg"], "step_title": "Step 8: Making the Case - Adding the Components"}, {"step": 9, "steps_text": "The case should now have all of the components added to it ready for wiring. Wire for some odd reason takes up a fair amount of space inside a case so you should try to make the wires a short as possible. Also, it's good practice to be able to remove the circuit board out of the case so you can fix any issues with the connections if necessary.\nSteps:\n1. Place the circuit board inside the case. Also place the battery in the case to make sure you have enough room for everything.\n2. Start to connect each of the compents to the wires on the circuit board. Take your time and make sure that each wire is connected correctly.\n3. Trim the excess wire before soldering onto each component.\n4. If you want to add an audio amp and volume pot - check out the next step.\n4. Once all the wires are connected add the battery and test. If nothing happens, you'll have to check over your connections and see if any are incorrect. If it works then congrats, you have made your very own fizzle loop synth. Now to add the knobs and work out how this thing works", "step_imgs": ["https://cdn.instructables.com/FCF/TC3M/JSPAEIZK/FCFTC3MJSPAEIZK.LARGE.jpg", "https://cdn.instructables.com/FWV/810K/JSPAEIXQ/FWV810KJSPAEIXQ.LARGE.jpg", "https://cdn.instructables.com/F8V/QAA9/JSPAEIUC/F8VQAA9JSPAEIUC.LARGE.jpg", "https://cdn.instructables.com/FVM/QPWN/JSPAEIW1/FVMQPWNJSPAEIW1.LARGE.jpg", "https://cdn.instructables.com/F1B/LAU6/JSPAEJBV/F1BLAU6JSPAEJBV.LARGE.jpg", "https://cdn.instructables.com/FPX/7SQ4/JSPAEJDK/FPX7SQ4JSPAEJDK.LARGE.jpg", "https://cdn.instructables.com/FOO/NK6L/JSPAEJGY/FOONK6LJSPAEJGY.LARGE.jpg", "https://cdn.instructables.com/FYG/CNCO/JSPAEJKB/FYGCNCOJSPAEJKB.LARGE.jpg", "https://cdn.instructables.com/FFI/4DW1/JSPAEK3E/FFI4DW1JSPAEK3E.LARGE.jpg"], "step_title": "Step 9: Wiring-up the Circuit"}, {"step": 10, "steps_text": "Once I had built the synth I decided that adding a small amp and volume pot would allow me to really annoy everyone in the house. It's a easy add-on and definitely worth including in the build. The amp I used can be picked-up on eBay for cheap and I have included a link in the parts section.\nSteps:\n1. Check out the schematic. I have highlighted the added amp and pot and also where they are connected. In the schematic the symbol for the amp is missing the ground wires for input and output. Check out the other schematic which I did which will also help work out hownto wire this up\n2. Connect the ground and positive on the amp to the 9v battery.\n3. The input section on the amp should be connected as follows: positive to pin 3 on the 3rd 555 IC and ground to the ground section on the circuit board\n4. The output should be connected as follows: positive to the positive solder point on the speaker and the ground to the ground solder point on the speaker\n5. To add a volume pot I found that the best place to connect it is to the output socket. If you add it directly to the speaker I found that it caused some interference to the synth and changed the sound. Adding it to the socket isolates it from the speaker and stops the interference.", "step_imgs": ["https://cdn.instructables.com/FTF/GZ8I/JSPAELAH/FTFGZ8IJSPAELAH.LARGE.jpg", "https://cdn.instructables.com/FDL/1U0Z/JSPAEK6X/FDL1U0ZJSPAEK6X.LARGE.jpg", "https://cdn.instructables.com/F8U/YHH6/JSPAEK71/F8UYHH6JSPAEK71.LARGE.jpg", "https://cdn.instructables.com/F7Q/YC4N/JSPAEK72/F7QYC4NJSPAEK72.LARGE.jpg", "https://cdn.instructables.com/FOL/PYP5/JSPAEK7R/FOLPYP5JSPAEK7R.LARGE.jpg"], "step_title": "Step 10: Adding an Audio Amp and Volume Pot"}, {"step": 11, "steps_text": "The final part of the build is to add some knobs to the build. You are now ready to start experimenting and making some awesome sounds.\nCheck out the image attached which shows what each knob and switch does.\nDon\u2019t be afraid to experiment with different capacitor values on the switches or different resistor values on the LED\u2019s. These are a tonne of different options on these parts and you can get many different sounds by changing them. You could also look at changing the potentiometer values as well, which would give you a different range of sounds.\nYou could even add another flashing LED 555 timer and tie this into the light Theremin 555 timer (timer 3 on the schematic). Maybe add a switch to each 555 timer so you can turn it off or no.\nThere are a tonne of mods you could do, so make sure you try some different set-ups before you build your own", "step_imgs": ["https://cdn.instructables.com/F4T/A9SA/JTYNFA0C/F4TA9SAJTYNFA0C.LARGE.jpg", "https://cdn.instructables.com/F24/8W5J/JSPAEK8I/F248W5JJSPAEK8I.LARGE.jpg", "https://cdn.instructables.com/F91/X29L/JTEN8MRD/F91X29LJTEN8MRD.LARGE.jpg", "https://cdn.instructables.com/FKO/22Z5/JTEN8MRO/FKO22Z5JTEN8MRO.LARGE.jpg", "https://cdn.instructables.com/FD3/45K2/JTEN8MR9/FD345K2JTEN8MR9.LARGE.jpg"], "step_title": "Step 11: Adding the Knobs and How to Play the Synth"}], "channel": ""}, {"category": "", "description": "I've been using laser printers for decades now and am always shocked at how much printer companies charge for new toner cartridges. Fortunately there is a quick and inexpensive way to refill your cartridges. I bought a new Brother HL-L2300D laser printer online for $80 (March 2019), but the replacement toner cartridge was over $50! I'll show you how to refill your cartridge for more like $5. This is the 'starter' cartridge that comes with the printer by the way. Cartridges are supposed to be able to be refilled at least twice before replacement. With my old HP printer cartridge I must have refilled it closer to 6 to 10 times for 4-6 years before the optical drum finally just wore out and I couldn't find a new replacement cartridge.", "title": "Refill Your Laser Printer Toner Cartridge the Easy Way", "url": "https://www.instructables.com/id/How-to-Refill-Your-Printer-Toner-Cartridge-the-Eas/", "section": "technology", "steps": [{"step": 1, "steps_text": "Most laser printer cartridges contain a big hollow space called the 'hopper' filled with a very fine dry powder that we call toner. The hopper transfers the toner to other components that ultimately wind up fusing the toner to the printer paper. Printers have various ways of determining when the toner has been used up. Some Brother printers pass a light through the cartridge to detect low toner and can be fooled by placing a piece of black tape over a 'window' in the side of the cartridge. In my case though the cartridge uses a different method that is more complicated and just stopped printing when the toner got low. I was able to keep it printing for awhile longer by using a procedure suggested online though.", "step_imgs": ["https://cdn.instructables.com/FHI/5R60/JTT5GV14/FHI5R60JTT5GV14.LARGE.jpg"], "step_title": "Step 1: Anatomy of a Toner Cartridge"}, {"step": 2, "steps_text": "Toner is sold in bottles that you can use to refill your cartridge yourself. Be certain that you get the correct toner made for your printer. One way of replacing the toner in some Brother cartridges involves removing the gears on the end, pulling out a plug and then replacing everything and resetting the gears so the printer thinks it is a new cartridge. Sometimes you even have to buy new parts to use when you refill the cartridge this way. But there is an even easier and faster way to replace the toner. You simply melt a hole in the top of the hopper, pour the new toner in and tape over the hole.", "step_imgs": ["https://cdn.instructables.com/F7T/HV0R/JTT5GWD8/F7THV0RJTT5GWD8.LARGE.jpg"], "step_title": "Step 2: Get Some Toner"}, {"step": 3, "steps_text": "Using a 'toner refill kit tool' found online with replacement toner you can melt a hole in a few seconds directly into the hopper without having to disassemble and reassemble any gears. The tool is basically a soldering iron that heats up a round tip that melts through the top of the hopper. Why not just drill a hole? Because then plastic bits would contaminate the hopper ruining your cartridge. You could also use a soldering iron or a heated nail to make an opening if you had to. Make sure that none of the melted plastic falls into the hopper though. I used a tooth pick to remove the plastic disc from the hot tool tip. Make sure the hole is as far to the side of the hopper as you can so that you can stand it on its edge when you are refilling it. If you make the hole in the middle you will have to keep shaking the toner sideways to fill the hopper evenly.", "step_imgs": ["https://cdn.instructables.com/FDF/LJ1W/JTT5GVD1/FDFLJ1WJTT5GVD1.LARGE.jpg", "https://cdn.instructables.com/FAQ/3N7N/JTT5GVOJ/FAQ3N7NJTT5GVOJ.LARGE.jpg", "https://cdn.instructables.com/FJE/04XU/JTT5GVW4/FJE04XUJTT5GVW4.LARGE.jpg"], "step_title": "Step 3: Make a Hole.."}, {"step": 4, "steps_text": "Even though the printer says you are out of toner there will still be some left in the hopper. Gently shake it out of the hole you just made so the new toner does not mix with the old. The photo shows how much toner was left even after my printer told me to replace the cartridge. Use a flashlight to look inside. I bought a half gallon jug of toner for $30 which I estimate contains 6-8 complete fills for my cartridge. That's about $5 or less to refill my cartridge vs. the $50 the printer manufacturer wanted for a brand new cartridge. It is possible to find third party cartridge makers for much less but still a lot more than refilling it yourself. Also I was able to completely fill my hopper to the very top, which probably isn't the case with manufacturer cartridges.", "step_imgs": ["https://cdn.instructables.com/FFV/RTJ3/JTT5GVW9/FFVRTJ3JTT5GVW9.LARGE.jpg", "https://cdn.instructables.com/FOB/U5J2/JTT5GVX3/FOBU5J2JTT5GVX3.LARGE.jpg"], "step_title": "Step 4: Empty the Hopper"}, {"step": 5, "steps_text": "If you've never worked with toner a few words of caution. Make sure you shake the old toner out and add the new toner outside. Toner easily gets all over everything so change into some old clothes. When toner spills you can usually just blow it off with your breath. Don't clean it up with a really wet cloth because you do not want water\ngetting into the hopper. When the toner comes out of the bottle it can be a little unpredictable. Pour the toner for a few seconds, then allow some air into the container. Don't be tempted to squeeze the bottle like ketchup or it will wind up blowing all over everything. One thought is to make a small hole in the empty space on top of the container to let air in (easier to do when the bottle isn't full). That should allow a smoother continuous pour. Just put a piece of tape over the hole in the bottle when you are finished.\nFor this step I've stood the cartridge securely on its side with the hole up. That way I can fill the hopper from the top. Using a flashlight you will be able to see the toner filling up the hopper and you can tap the cartridge to settle the toner more evenly. Once the toner level is up to the hole then gently lay it down, put a piece of duct tape over it and write the date on the tape so you know when it was last filled. Don't use masking tape because it won't seal around the edges of the hole like duct tape. Use your finger to press the duct tape down around the hole to get a good seal.", "step_imgs": ["https://cdn.instructables.com/FO5/HII1/JTT5K3U5/FO5HII1JTT5K3U5.LARGE.jpg", "https://cdn.instructables.com/FJP/DTVQ/JTT5GW8X/FJPDTVQJTT5GW8X.LARGE.jpg"], "step_title": "Step 5: Pour in the Toner."}, {"step": 6, "steps_text": "Once you've taped over the hole and gently cleaned the outside of the cartridge with a slightly moist paper towel you can insert it back into the printer. However sometimes you may have to trick the printer into thinking that the refilled cartridge is a brand new one. Searching the internet for your model of printer or looking through online reviews should tell you how. In my case I had to turn the printer off and press the power button several times to get it to start working again. Good luck and together we can stick it to the Big Toner lobby!", "step_imgs": ["https://cdn.instructables.com/F0Y/NZ39/JTT5GWCL/F0YNZ39JTT5GWCL.LARGE.jpg"], "step_title": "Step 6: Reinserting the Cartridge Back in the Printer"}], "channel": ""}, {"category": "", "description": "If you follow my Instructables projects you know that I am a big fan of the JAL programming language in combination with the PIC Microcontroller. JAL is a Pascal like programming language developed for the 8-bit PIC microcontrollers of Microchip. Most people know the Arduino using the ATMEL microcontroller. One of the nice things of an Arduino board is that you can program the microcontroller without the need of a separate programmer.\nThis absence of the need for a programmer brought me to this project. I wanted to make an Arduino Uno like board for the PIC microcontroller developing the software for that board with in the JAL programming language. The board did not need to have the exact size of the Arduino Uno board but the connectors on the board should have \u2013 where possible \u2013 the same connections as the connections of an Arduino Uno. And so the JALPIC One development board was born.", "title": "JALPIC One Development Board", "url": "https://www.instructables.com/id/JALPIC-One-Development-Board/", "section": "technology", "steps": [{"step": 1, "steps_text": "Before I started the design, I had a good look at the Arduino design and decided the following:\nI wanted the board to be built with standard components so no Surface Mount Design (SMD). Reason for this is that it would be easier for hobbyists to assemble the board.\nThe connectors should carry as much as possible the same functionality as the Arduino Uno. In the front-picture I did not yet assemble the connectors.\nThe control of the board had to be done by a PIC and this PIC should be programmed using the JAL programming language.\nFor testing purposes the board should have a LED that you can control from the PIC that runs the application. This feature is also present on the Arduino Uno.\nThe PIC that runs the application should have sufficient memory and RAM for easy application development.\nIn the attached schematic diagram you find the design of the JALPIC One development board. I also included a screenshot of the PCB. Just like the Arduino the board can be powered by the USB port of by an external DC power supply when used stand alone.\nI added a picture that shows the Arduino and the JALPIC One development board.\nThe application PIC on the board is programmed using the hex file that is created by the JAL compiler.", "step_imgs": ["https://cdn.instructables.com/FZX/1SQ1/JU31TLJI/FZX1SQ1JU31TLJI.LARGE.jpg", "https://cdn.instructables.com/F4N/G2LK/JTT5L9M0/F4NG2LKJTT5L9M0.LARGE.jpg"], "step_title": "Step 1: Designing the Board"}, {"step": 2, "steps_text": "You need to have the following components for this project next the board itself:\nIC\n1 * LM2940CT-5.0: IC1\n1 * LM3940IT-3.3: IC2\n1 * PIC16F18557P: IC3 (application PIC)\n1 * PIC16F1455P: IC4 (control PIC)\nCrystal\n1 * 20 MHz: Q1\n1 * 12 MHz: Q2\nDiode\n1 * 1N4004: D1\n1 * 1N4148: D2\nLED\n1 * Yellow LED: LED1\n1 * Amber LED: LED2\n1 * Red LED: LED3\nConnector\n1 * Power Jack: J1\n1 * USB Connector: X1\n2 * 6-pin header: SV2, SV5\n2 * 8-pin header: SV1, SV4\n1 * 10-pin header: SV3\n1 * 3-pin jumper: JP1\n1 * 2-pin jumper: JP2\nCapacitor\n4 * 22 pF: C1, C3, C11, C13\n5 * 100 nF: C2, C6, C7, C8, C 9\n1 * 470 nF/Ceramic: C10\nElectrolytic Capacitor\n3 * 10 uF/25V: C4, C5, C12\nResistor\n2 * 22 Ohm: R10, R11\n2 * 330 Ohm: R1, R8\n6 * 1 kOhm: R2, R3, R4, R5, R6, R7\n1 * 33 kOhm: R9\nSwitch\n1 * Omron Pushbutton: S1\nIn the attached layout of the board you can see where each component should go.", "step_imgs": ["https://cdn.instructables.com/FFT/TJQF/JTT5L9PC/FFTTJQFJTT5L9PC.LARGE.jpg"], "step_title": "Step 2: Required Components"}, {"step": 3, "steps_text": "Most of the work was the development of the control software for the control PIC on the board. The board has a simple command set to erase the application PIC, program the application PIC and some more commands. As mentioned it was written in JAL. There are 3 main components in the software:\nThe main program that provides the interface with the USB, interprets the commands and sends the responses.\nThe hex file parser which checks the contents of the hex file, extracts the address and data to be programmed.\nThe programmer that erases the memory of the application PIC and programs the application PIC with the data coming from the parser.\nSince the control PIC does not have a large internal memory, parsing of the hex file is done real-time and on a line by line basis after which the data is passed on to the programming software who then also programs the application PIC on a line by line basis.\nThe attached hex file can be used to program the controller PIC.", "step_imgs": [], "step_title": "Step 3: The Board Software"}, {"step": 4, "steps_text": "Since the hardware of the application PIC is known, a simple include file can be used to define all kind of settings needed for the application PIC to operate. The person writing the program can then focus on the program itself. A simple blink-a-led program in JAL then looks as follows:\ninclude jalpic_one -- include the board definition file\nenable_digital_io() -- make all pins digital I/O\nalias led is pin_a0 -- alias for pin with LED\npin_a0_direction = OUTPUT\nforever loop\nled = ON\n_usec_delay(100_000)\nled = OFF\n_usec_delay(400_000)\nend loop\nThis program uses the LED which is present on the JALPIC One development board. When the program is done, only 1 click on a button in an editor called JalEdit is sufficient to compile the program and download it to the board. The short video shows how this works.", "step_imgs": [], "step_title": "Step 4: What an Application Program Looks Like"}, {"step": 5, "steps_text": "I could not describe everything in this Instructable but the whole board design, software and documentation can be downloaded from one of the Jallib releases under the folder \u2018project\\jalpic_one\u2019.\nSince this new development is not yet officially released in a new version Jallib, it has to be downloaded using the latest \u2018bee-package\u2019 from the JAL download site.\nThe download site can be found at: Just Another JAL Website\nHave fun building your own project and looking forward to your reactions.", "step_imgs": [], "step_title": "Step 5: Building the Board Yourself"}], "channel": ""}, {"category": "", "description": "CREATOR(S): Leilani Roser,Diane Brancazio,Josh Verdejo, MIT Edgerton Center\nMath, Social Studies, English, Science, Grades 3 - 12\nLesson Overview\nIn this activity, students will learn the manufacturing process of casting and molding as well as 3D design. Students use Tinkercad to design and create molds for pourable candies and figurines. The molds are typically quick to print, minimizing 3D printer time. The casting process has multiple hands-on steps extending the activity beyond 3D printing.\nGiving students the chance to design their own mold is a perfect opportunity for students to practice process engineering by spotting steps in the candy making process that need improvement. And, working with the positive and negative versions of a molded 3D object help people to develop spatial and geometric awareness.\nSimple prompts for 2-3 hour projects can focus strictly on making functional molds, allowing first-time Tinkercad users to focus on learning and using Tinkercad. High school students and/or students who are already skilled with Tinkercad can be assigned complex, higher-order-thinking prompts that require additional time for intense research, collaboration, design, and sharing. Consider the example of these two math prompts and one science/engineering prompt:\nSimple: use simple geometric solids to recreate the school logo as a printable, moldable design\nComplex: design a process for making 100 candies per class per day, with budget constraints\nComplex: (extension of above) identify stages in the process where bacteria could enter the candies - design solutions to prevent contamination\nThis project is structured to follow the Engineering Design Process (EDP), a process that helps designers in any discipline create solutions to problems. While there are many ways that people solve problems, designers often use the EDP because it offers a clear roadmap for them to follow as they work towards a solution.\nFirst, designers Define the challenge they are facing, then Learn more about the problem and Explore existing solutions. It\u2019s tempting to skip these first few steps and head straight into brainstorming, but don\u2019t! When designers take the time to understand the problem clearly, they come up with much better solutions.\nThe Design phase is where brainstorming happens. Designers brainstorm multiple possible solutions, then develop a few of them into more detailed plans. Encourage your students to plan at least 3 of their potential ideas before choosing a design direction and starting to Create a product based on their design. If they hit any roadblocks trying to create their first design choice, they\u2019ll be able to revisit their alternate design plans and choose a new direction - without starting from scratch.\nDesigners then take time to Observe their design and see how they can Improve it. We strongly recommend that students have an opportunity for at least 2 Create-Observe-Improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. By repeating the cycle, they have a chance to fix flaws and adopt successful ideas from classmates, and in fact, they\u2019re practicing what professional designers really do.\nA good design cycle builds in time for the designer to Reflect on their product and the process of making it, looking for learning habits and insights that will help in future challenges.\nWhen the work is complete, designers are ready to Share. They bring their work into the real world, by posting, publishing, presenting, or exhibiting what they\u2019ve made- even giving or selling if appropriate! For students working through a design process, a real audience helps students connect their learning and work experiences to the world outside the classroom. For Makerspaces and Maker projects, in particular, this is hugely important for building confidence in every student and a sense of community among Makers.\nTo help students work through this process, be sure to build in planned \u201cstops\u201d at each step for students to record their thoughts and progress as they work through product iteration cycles.\nEssential Question(s)\nHow is the molding/casting process used Making products we use in our lives? How is it possible for factories to make so many of the same thing?\nHow can the design process and 3D modeling tools be useful tools in learning manufacturing?\nTime Required:\n1-2 Hours design time + 1- 3 hours class time for melting, pouring, unmolding\nSkills Practiced:\nThe Design Process\n3D modeling in Tinkercad\nSymbolic Communication\nMold-making process\nCasting/molding and releasing process\nMaterials Needed:\nSketch paper and pencils\nTinkercad\n3D Printer and filament\nFood-safe, fast set, Silicone molding compound (e.g. \u201cEasy Mold\u201d by Castin\u2019 Craft. A one pound kit costs ~$30 and can be used to make about 12 - 16 molds for 1.5\u201d square candy)\nFor candy: Colored candy melts or chocolate suitable for melting\nLollipop sticks or popsicle sticks\nFor non-edible figurines: hi-temp hot glue, candle wax pellets, crayons, or plaster\nElectric skillet and/or pot, slow cooker, or chocolate melter", "title": "Candy Casts", "url": "https://www.instructables.com/id/Candy-Casts/", "section": "technology", "steps": [{"step": 1, "steps_text": "Context\nDesigning molded candies or figurines is an engaging way for students to learn a manufacturing process while practicing 3D modeling. The activity can be done in an assembly-line fashion or with individuals carrying out each step of the process.\nMolded candies or figurines are easily made with pre-made candy or wax chips, removing the need to follow a multi-ingredient recipe. That way, kids can focus on creating unique molds and troubleshooting their design, instead of worrying about troubleshooting a given recipe. (That said, silicone molds are also suitable for molding hard candies like lollipops, which can be a worthwhile challenge for high school chemistry students.)\nChallenge:\nStudents create a mold for creating reproducible candies or figurines, following a theme that the teacher assigns. (E.g., school logo, personal symbol, etc.) Students will fabricate their work using Tinkercad, 3D printers, and silicone molding materials.\nCriteria:\nThe designed item meets the theme and design requirements set by the teacher\nThe designed item has at least 2 of the following features:\nLegible text\n1 or more pictures\nMeaningful shape (other than circular, square or other)\nConstraints:\nThe molded item can be unmolded without breaking\nThe molded item shows all desired details from the mold\nThe designed item follows size constraints:\nArea of design must fit within a 1.5\u201d x1.5\u201d (4cm x 4 cm) square\nMaximum height/depth of design must be < \u00bc\u201d (7 mm)\nPrint time < 25 minutes\nStudent Product / Technical Learning Goals\nA custom-designed, fillable mold of a 3D printed item.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "Depending on your choice of topic, this phase can be very brief.\n1. Research: Students examine and analyze a few real-life examples of the product they want to create (chocolate, lollipops etc.). Give students examples, and prompt them to observe, document, and discuss:\nDescribe what you see - what are the designs like? Why do you think they were made to be this way? How do you think they might have been made?\n2. Collect: Have students document their research on mold-making and casting - it might be a simple matter of having them take notes on a brief video or teacher presentation, or they might be given more time to do independent research. Students can keep an inspiration page such as a blog, Google Docs, a notebook, poster, etc to save notes or images.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "1. Design: Students use their inspiration page from step 2 as a reference and use one of the following methods to create at least 3 different ideas that meet the criteria defined above.\nOption A: draw designs showing how this coin will look, naming each design element\nOption B: sculpt design drafts using clay.\nOption C: let the students try drafting directly in Tinkercad to get familiar with the program and make practice models.\n2. Choose a Direction: Have the students choose a design to model and print.\nExamples:\nRaised features offer a fun way to experiment with multicolored projects - just use one color at a time, with a pause in between to let the first colors cool slightly.\nIf you are casting a non-edible object, you might need to experiment with temperature and time. The translucent cast showed above (hot glue) hardened too quickly to take the shape of the mold as it poured, resulting in pooled edges and pits where air bubbles formed (above eyes). The brown cast (photo at right) was made from hot glue and microwave-heated for additional time before being removed from the mold.\nRecycled crayons are robust and easy to unmold from silicone, but melting them requires more heat than chocolate. Molds full of crushed crayon pieces can be placed directly in the microwave or filled from standing hotpots of melted crayon.", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "REMEMBER: Be sure to provide stopping points for the class where students can observe, evaluate, and document their designs.\nCreating an original item to replicate with casts\nRemember that the final product will be a replica of the original.\n1 - Create a base to decorate\n2 - Add raised or engraved shapes, graphics, and text to the base. (See details below.)\n3 - If making lollipops, add a cylinder to your design to allow room for the stick to extend past the edge of the mold.\n4 - Group all items together\n5 - Check design against size constraints\n6 - Export design\n7 - Use the 3D printer \u201cslicer\u201d program to check against print time and volume constraints - if you meet the constraints, you\u2019re ready to print.\n8 - If your design doesn\u2019t meet the print requirements, go back to Tinkercad and refine the design until you meet the design criteria and constraints.\nAdding embossed or engraved images\nMake or choose a high-contrast image. If it is not in STL format, search online for \u201cconvert the image to STL\u201d, and follow instructions(\nImport the SVG file into Tinkercad workplane\nAdd height to your shape 1 mm or .05\u201d works well) and drop it on top of the base\nDrag to the base, adjust position, and group with all other parts of the item.\nFor an embossed feature keep your shape solid\nFor an engraved feature change the shape into a hole and lower it onto the base. Group the base and the cutout shape to see the engraved part.\nNeed a jumpstart? Students can go to the project at https://www.tinkercad.com/things/hG8H4S4ojGv-edge... and start by following these steps:\n1. Create a copy of the file for personal use by clicking \u201cTinker this\u201d\u2013 give it a new name.\n2. Ungroup the elements and move the pieces apart to see how each is incorporated into the object.\n3. Use the design drafts from Step 3 above, and begin to replace parts of the model with original graphics.\nMolding replicas of the model\nPrepare molding compound according to manufacturer\u2019s directions\nSquish your printed model, face down, into the molding compound - press the molding compound up to the model around all edges, making sure that all edges of your printed model are touching molding compound. (If you have a stick-holder for lollipops, leave the end of the stick-holder open.) For younger grades, this may take a few tries.\nLet molding compound cure according to manufacturer\u2019s directions, then remove the printed model. Some compounds set in just 20 minutes, others may need to set overnight. Check your directions!\nRinse and dry molds\nMelt and pour chocolate or wax pieces according to manufacturer\u2019s directions or trusted tutorial - there are many great tutorials on Instructables on melting and molding chocolate, wax, and/or plastic - happy searching!\nLet chocolate cool and harden before unmolding - again, refer to chocolate manufacturer\u2019s tips.\nTake a moment to document cast work before eating or gifting!", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "Be sure to provide stopping points for the class where students can observe, evaluate, and document their designs.\n1. Observe and document: Students print their designs, share, observe, and document what they notice. Some possible note-taking prompts they might respond to:\nWhat do the designs look like now that they\u2019ve been printed and cast?\nWhat parts of the design are unclear? Is anything too big? Too small? Blurry? How could the design be changed to make them clearer?\nWhen others look at the cast, do they see the ideas that the designers wanted them to? If not, what changes can designers make?\n2. Improve: Students use their observation notes to return to Tinkercad and make slight alterations to their design. If any students are feeling particularly discouraged by their first round of creating, redirect them to their alternative designs\n4. Create documentation guidelines for students to record their thoughts and progress as they work through product iteration cycles. This can serve as a formative assessment.\nA description/sketch of the original design\nHow well the design met the project definition, criteria, and constraints\nWhat students liked about their design\nWhat students want to improve on the design\nSuggestions for improvement\nDownload pdf at bottom of this step with possible discussion/documentation prompts for Steps 5 and Step 6.\n3. Iterate: Follow instructions in the Create Step as needed for the next iteration - we strongly recommend that students have an opportunity for at least 2 design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through, they can fix flaws and adopt successful ideas from classmates.", "step_imgs": [], "step_title": "Step 5: Observe, Improve, Iterate"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well. At this point, students have learned about 3D modeling, mold-making, and the casting process, and have lots of new skills and experiences.\nDownload pdf at the bottom with possible discussion/documentation prompts for Steps 5 and Step 6.", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "Give the students an opportunity to share their molds with the class or some other community. Options for sharing include presentation, demonstration, blog or online post, video clip, physical display, family events, and maker fairs - or in the use for which it was intended.", "step_imgs": [], "step_title": "Step 7: Share"}, {"step": 8, "steps_text": "First time making molds? Get some general information and tips right here on Instructables: https://www.instructables.com/class/Mold-Making-C...\nEdible working materials:\nThe most inexpensive edible chocolate material is commonly called compound chocolate, in particular, the kind labeled \u201ccandy melts.\u201d Compound chocolates contain vegetable oils as a substitute for more-expensive cocoa butter, usually contain dairy, and may contain soy. The flavors are often mild but they are the most user-friendly option for beginners. For a lesson that centers on designing the molds, this is probably your best option.\nCouverture chocolate contains cocoa solids and cocoa butter, and may contain dairy - as you might guess from the name, it\u2019s used for covering the outsides of truffles, pastries, and other chocolate-coated confections. Due to the presence of cocoa butter, couverture is preferred by serious chocolate makers and costs more than compound chocolate. Expensive higher cocoa butter content allows properly tempered couverture to harden into chocolates with an attractive sheen and a hard \u201csnap\u201d when bitten or broken. And because it needs careful attention to melting temperature to produce a good cast, it\u2019s probably best reserved for older students and longer class blocks. For a chemistry lab or a culinary class, you may want to make a mini-unit out of exploring how to temper chocolate.\nNot recommended: chocolate chips or pre-made chocolate bars. They typically have a much lower cocoa butter content than couverture and are difficult to temper. Casts made from these may get stuck in fine-detailed areas of the mold, and the final product will be soft, mushy, and vulnerable to fingerprints.\nHard candy requires high temperatures to transform the sugar solution into something that will harden properly, and is probably best left to older kids, working in rooms outfitted with gas or electric burners.", "step_imgs": [], "step_title": "Step 8: Resources"}, {"step": 9, "steps_text": "ELA + STEM:\nDevelop a promotional candy or item with artwork that students can use to market a work of literature, complete with narrative packaging.\nStudents could also research or read about real-life examples of the convergence of 3D design and cooking. For example:\nArchitect turned cake-maker serves up mouth-watering geometric 3D-printed cakes - https://newatlas.com/dinara-kasko-3d-printed-cake...\n3D-printed surfaces influence taste intensity, study finds - https://newatlas.com/dinara-kasko-3d-printed-cake...\nMath\nStudents practice measurement and quality assurance by designing items with stringent specifications:\nMinimum/maximum volume\nSpecific mass (e.g. every piece must be within .8-1.2 oz and show predictive calculations based on design)\nMath + Social studies:\nStudents work in groups to design fundraising items and sell competitively Requirements may include but are not limited to:\nMinimum number of geometric solids used\nMinimum/maximum volume\nSpecific mass (e.g. every piece must be within .8-1.2 oz with predictive calculations shown)\nMaximum time/ease of production per unit\nMethod of mass production\nStudent teams compete to design fundraising or commemorative items for a school group, with only a limited selection being produced after judging\nSTEM (Biology, Math) + Social Studies (Economics, Industrial Revolution)\nDesign equipment and process for making 100-1000 candies in a given timeframe (class period? day? week?), with budget constraints.\nIdentify stages in the process where bacteria could enter the candies - design preventive solutions to contamination.\nDefine costs of labor, materials, set price accordingly - or set price first and design manufacture process to reach the goal.\nSTEM (Chemistry)\nPractice tempering chocolate* or making hard candy (e.g. lollipops) as an introduction to practical chemistry lab skills (reading directions, using heat, closely observing and appropriately reacting to changing materials) or to demonstrate concepts of molecular arrangement in solid structures (chocolate crystals, amorphous sugars) - use with molds. Be sure to use food-only pots, stirrers, and materials containers! *better for 60+ minute class periods, older kids, and small groups - may be best offered as an extra-credit project that only a handful of students work on at a time.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nLists of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects.", "step_imgs": [], "step_title": "Step 9: Project Extensions"}], "channel": ""}, {"category": "", "description": "The world today is highly dependent on technology. People are so much engrossed into it that they perhaps forget to take some time to appreciate that ONE thing that makes all of this possible: electricity. Today we\u2019re going to give it the respect it deserves by understanding the principle behind it, known as the electromagnetic induction, and a few concepts and laws pertaining to it with the help of some small yet interesting activities.\nLet\u2019s jump right into it without wasting any time!", "title": "Visualizing Electromagnetic Induction Using Solenoid, Magnets and Evive", "url": "https://www.instructables.com/id/Understanding-the-Concept-of-Electromagnetic-Induc/", "section": "technology", "steps": [{"step": 1, "steps_text": "Hardware:\nevive\nCopper Coil\nPVC Pipe\nCrocodile Pin\nMagnet\nJumper Cable\nSoftware:\nevive Firmware", "step_imgs": [], "step_title": "Step 1: Components Required:"}, {"step": 2, "steps_text": "A magnetic field is an area around a magnet in which there is a magnetic force, a force that attracts or repels magnetic objects. An electric field is generated by the stationary object and magnetic field is generated by moving object.\nThe Fields are generated by the magnet as shown in the below figure: The direction of the Magnetic Field lines is always from North to South. Also, the region, where there are plenty of magnetic lines indicated that there is a strong magnetic force in that region. Whereas, the area with spread out magnetic lines indicated a weaker magnetic force.", "step_imgs": ["https://cdn.instructables.com/F7M/I4XB/JTT5JW6Q/F7MI4XBJTT5JW6Q.LARGE.jpg"], "step_title": "Step 2: What Is Magnetic Field?"}, {"step": 3, "steps_text": "Magnetic flux is a measurement of the total magnetic field which passes through a given area such as a closed loop of wire. The SI unit of flux is Weber (Wb). Every magnetic line adds to some magnetic flux.\nOne can find the flux as:\n\u03a6=BAcos\u03b8\nwhere,\nA is our test area.\nB is the magnetic field vector.\n\u03b8 is the angel which normal to the surface area and the magnetic field vector.", "step_imgs": [], "step_title": "Step 3: What Is Magnetic Flux?"}, {"step": 4, "steps_text": "It is an electromechanical device. In simple terms, a solenoid is a cylindrical coil that acts as a magnet when current passes through it.\nIn this project, we are going to make our own solenoid out of the Copper coil and the PVC Pipe.\nWrap the PVC pipe into any color paper and fix it using glue.\nOnce done, wrap the copper wire around it. You can vary the number of turns of the copper wire. Firstly, we have used the solenoid of 100 turns.", "step_imgs": ["https://cdn.instructables.com/FEH/IB48/JTT5JVZ4/FEHIB48JTT5JVZ4.LARGE.jpg", "https://cdn.instructables.com/FUM/M4J7/JTONB4MA/FUMM4J7JTONB4MA.LARGE.jpg", "https://cdn.instructables.com/F1Y/7XDT/JTONB4N1/F1Y7XDTJTONB4N1.LARGE.jpg"], "step_title": "Step 4: What Is Solenoid?"}, {"step": 5, "steps_text": "According to Faraday\u2019s observation, the relative motion between the solenoid and the magnet generates the Electromotive Force (emf). The reason behind this is the change in the magnetic flux of the coil.\nThis emf then generates the current into the conductor know as the Induced Current. The process of inducing an emf in a closed circuit is called Electromagnetic Induction. Let\u2019s understand the observation by performing an experiment.", "step_imgs": ["https://cdn.instructables.com/FSS/FHT6/JTT5JVZ5/FSSFHT6JTT5JVZ5.LARGE.jpg"], "step_title": "Step 5: Magnetic Induction"}, {"step": 6, "steps_text": "Make the connection as given:\nConnect coil\u2019s one end to evive\u2019s graph (prob V) pin and a second end to graph (ground) pin.Make the following changes in the setting of the Oscilloscope:Volt/Division: 0.1/sTime/Division: 20mv/sNow take a bar magnet and drop it into the solenoid such that the North Pole enter the solenoid first. As soon as the magnet goes near to the coil, you may observe that a peak is generated in a positive direction.\nNow, take the same magnet again and drop it again, but this time change the direction of the magnet.\nYou may notice the same graph onto the oscilloscope but in reverse direction.\nNow, keep the magnet stationary, you may notice that the graph is flat.\nThis experiment shows the Faraday\u2019s First Law of Electromagnetic Induction stated in the previous step.\nThe observations are as follows: Magnet at rest in or near the coil: No voltage observed.\nThe magnet moving toward the coil: Some voltage measured, rising to a peak as the magnet nears the center of the coil.\nMagnet passes through the middle of the coil: Measured voltage rapidly changes sign.\nMagnet passes out and away from the coil: Voltage measured in the opposite direction to the earlier case of the magnet moving into the coil.", "step_imgs": ["https://cdn.instructables.com/F5B/MIXS/JTONB4S7/F5BMIXSJTONB4S7.ANIMATED.LARGE.gif", "https://cdn.instructables.com/FUI/RK0Z/JTONB4S9/FUIRK0ZJTONB4S9.ANIMATED.LARGE.gif"], "step_title": "Step 6: Faraday's Law Experiment"}, {"step": 7, "steps_text": "Now, let\u2019s understand Faraday\u2019s Second Law.\nAccording to it, the electromotive force generated in the circuit changes with a change in flux linkage. Which can be written as: e= -N(d\u0553/dt).\nwhere,\nN\u0553: change in flux linkage.\nN(d\u0553/dt): Rate of change of flux linkage.\nNegative sign shows the direction of the induced current in the conductor.", "step_imgs": [], "step_title": "Step 7: Faraday's Second Law"}, {"step": 8, "steps_text": "There are a number of factors that affect the change in the flux.\nStrength of Magnetic\nRelative Speed\nChange in Area or the number of turns.", "step_imgs": [], "step_title": "Step 8: Factor Affecting the Change in Flux Linkage"}, {"step": 9, "steps_text": "T o make the comparison, we have placed the coil in the center of the pipe, thus, increasing its distance from the top.\nIn this case, the speed of the magnet is more when it reaches the coil as compared to when the coil is at the top.\nThus, you may notice the following changes in the graph.\nThe change in the graph is due to the change in the emf.\nAs the speed increases the emf of the coil increases and vice-versa.", "step_imgs": ["https://cdn.instructables.com/F3F/G0EY/JTONB563/F3FG0EYJTONB563.LARGE.jpg", "https://cdn.instructables.com/FHE/WRQG/JTONB564/FHEWRQGJTONB564.LARGE.jpg"], "step_title": "Step 9: Change in the Speed of the Magnet"}, {"step": 10, "steps_text": "On changing the number of Turns the graph changes significantly too.\nIn this experiment, we have solenoids of 100 turns, 400 turns, and 800 turns respectively.\nTry comparing the graphs. You notice the following changes:\nYou might notice that for the set-up having 100 turns, a small peak is established whereas for the set-up having 400 turns, a relatively larger the peak is seen. This is because induced emf is directly proportional to the number of turns.", "step_imgs": ["https://cdn.instructables.com/FG4/08I4/JTONB56I/FG408I4JTONB56I.LARGE.jpg", "https://cdn.instructables.com/FNO/D07K/JTONB56J/FNOD07KJTONB56J.LARGE.jpg"], "step_title": "Step 10: Change in Number of Turns"}, {"step": 11, "steps_text": "With this, you now know the basics of electromagnetic induction and one of the two most important laws related to it! If you\u2019d like to, you can look up the internet for more fun activities on electromagnetic induction. Have fun!", "step_imgs": [], "step_title": "Step 11: Conclusion"}], "channel": ""}, {"category": "", "description": "Hello everyone and welcome to my fifth instructable!\nA correctly leveled 3D printer bed is essential to ensure successful and accurate prints.\nThere are two main ways to get a well calibrated print plate: auto-level systems or manual leveling.\nMy printer does not have an implemented auto-level and, for various reasons, I do not feel the need to have it. So I always go for manual bed leveling.\nThe most common way to do it is to move a piece of paper under the nozzle and adjust bed height until you \"feel\" the correct amount of friction. As you can imagine, the results are quite imprecise, especially if you are a new user. The use of a feeler gauge blade certainly makes it more precise but there is always the \"touch sensitivity\" variable.\nThat is why I thought to build a tool to assist me in this important operation. The concept is very simple: a LED circuit that uses, as a switch, the touch of the nozzle on a known thickness element (a feeler gauge blade).\nThis simple tool will give you exact and repeatable results.", "title": "3D Printer Bed Leveling Assistance Tool", "url": "https://www.instructables.com/id/3D-Printer-Bed-Leveling-Assistance-Tool/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials:\n3V coin cell battery\nLED\nVery thin and flexible wire\nCrocodile clip\nFlat magnet\nPlastic bottle cap\nCigarette filter\nDouble sided adhesive tape\nGlue\nHeat shrinking tube or electrical tape\nTools:\nFeeler gauge with removable blades\nCutter knife\nScissors\nSoldering iron\nSoldering tin", "step_imgs": ["https://cdn.instructables.com/FL4/5RSR/JTT5JIE8/FL45RSRJTT5JIE8.LARGE.jpg"], "step_title": "Step 1: Materials and Tools"}, {"step": 2, "steps_text": "Usually plastic bottle caps have a raised inner edge in which your coin cell battery (20mm diameter) should fit perfectly.\nWith a cutter knife, remove the outer part of the cap and keep only this inner ring\nAdjust the edges with scissors or a file\nCut a circle of double sided adhesive tape which fits inside the cap\nPunch a hole in the cap with the safety pin, right next to the center", "step_imgs": ["https://cdn.instructables.com/FLV/47SC/JTT5JIF2/FLV47SCJTT5JIF2.LARGE.jpg", "https://cdn.instructables.com/F8O/81KE/JTT5JIEW/F8O81KEJTT5JIEW.LARGE.jpg", "https://cdn.instructables.com/FKK/D9GC/JTT5JIF3/FKKD9GCJTT5JIF3.LARGE.jpg", "https://cdn.instructables.com/FOV/U1ZA/JTT5JIFA/FOVU1ZAJTT5JIFA.LARGE.jpg", "https://cdn.instructables.com/FJK/V9H3/JTT5JIF6/FJKV9H3JTT5JIF6.LARGE.jpg", "https://cdn.instructables.com/FKQ/T5AR/JTT5JIEN/FKQT5ARJTT5JIEN.LARGE.jpg"], "step_title": "Step 2: Prepare the Coin Cell Holder"}, {"step": 3, "steps_text": "\"Pierce\" the LED legs through the cigarette filter\nMake a cut in the filter for about a third of its lenght, aligned to the shorter leg (negative) of the LED\nBend negative leg 90 degrees through this cut\nOptional step: wrap the filter with electrical tape to make it more durable (make a cut to bypass the leg)", "step_imgs": ["https://cdn.instructables.com/FO5/ASAV/JTT5JJD7/FO5ASAVJTT5JJD7.LARGE.jpg", "https://cdn.instructables.com/FOF/AW7W/JTT5JJ3U/FOFAW7WJTT5JJ3U.LARGE.jpg", "https://cdn.instructables.com/FIQ/1UAT/JTT5JIRO/FIQ1UATJTT5JIRO.LARGE.jpg"], "step_title": "Step 3: Prepare the LED Holder"}, {"step": 4, "steps_text": "If there is, remove the protective film from the adhesive tape\nInsert the longer leg (positive) into the cap hole\nGlue the filter to the top of the cap\nBend positive leg 90 degrees under it (if necessary, adjust its lenght)\nInsert the coin cell battery in the cap, positive side up and press to stick it", "step_imgs": ["https://cdn.instructables.com/FPL/TV6V/JTT5JKCK/FPLTV6VJTT5JKCK.LARGE.jpg", "https://cdn.instructables.com/F8I/1FIW/JTT5JKCN/F8I1FIWJTT5JKCN.LARGE.jpg", "https://cdn.instructables.com/F4D/4BW4/JTT5JKCO/F4D4BW4JTT5JKCO.LARGE.jpg", "https://cdn.instructables.com/F3P/TVNO/JTT5JKCP/F3PTVNOJTT5JKCP.LARGE.jpg"], "step_title": "Step 4: Assemble the \"Main Body\""}, {"step": 5, "steps_text": "Cut a piece of wire and strip its end. The wire should be very thin and flexible not to lift the feeler gauge blade\nSolder one end to the bended negative leg of the LED\nInsulate soldered wire with a piece of heat shrinking tube\nRemove insulation cover from crocodile clip and slide it on the wire\nSolder the other end of the wire to the crocodile clip\nPlace the insulation again", "step_imgs": ["https://cdn.instructables.com/FSG/MUSP/JTT5JKF1/FSGMUSPJTT5JKF1.LARGE.jpg", "https://cdn.instructables.com/FUH/PL84/JTT5JKF5/FUHPL84JTT5JKF5.LARGE.jpg", "https://cdn.instructables.com/FLX/O24X/JTT5JKG5/FLXO24XJTT5JKG5.LARGE.jpg", "https://cdn.instructables.com/FUB/S4EZ/JTT5JKHG/FUBS4EZJTT5JKHG.LARGE.jpg", "https://cdn.instructables.com/FY9/QJEI/JTT5JKGA/FY9QJEIJTT5JKGA.LARGE.jpg"], "step_title": "Step 5: Solder the Wire"}, {"step": 6, "steps_text": "Remove the blade of the thickness you want to use from the feeler gauge (I use a 0,05mm blade)\nPostion the flat magnet on its end (the magnet allows you to change different thickness blades)\nPlace the \"main body\" on it\nClose the circuit to try it", "step_imgs": ["https://cdn.instructables.com/FTK/TJKE/JTT5JKK8/FTKTJKEJTT5JKK8.LARGE.jpg", "https://cdn.instructables.com/FGS/YFIL/JTT5JKKG/FGSYFILJTT5JKKG.LARGE.jpg", "https://cdn.instructables.com/FUI/WVB3/JTT5JKKW/FUIWVB3JTT5JKKW.LARGE.jpg"], "step_title": "Step 6: Assemble the Tool"}, {"step": 7, "steps_text": "Your tool is ready!\nI suggest you to wipe the nozzle with a brass brush to be sure you have no plastic insulating the tip.\nConnect the crocodile clip to a metal part of the printer next to the nozzle (could be the base of the extruder, the barrel, a screw, etc.)\nNow, level the print bed the same way you do with paper:\nMove your extruder to a corner and position the blade under the nozzle\nAdjust the screw until the LED will light up indicating that the tip of the nozzle is touching the feeler gauge blade\nRepeat the process in the other corners until you find the perfect calibration", "step_imgs": ["https://cdn.instructables.com/FEC/0DB6/JTT5JKN7/FEC0DB6JTT5JKN7.LARGE.jpg", "https://cdn.instructables.com/FY9/VZ5I/JTT5JKOT/FY9VZ5IJTT5JKOT.LARGE.jpg", "https://cdn.instructables.com/FGW/R4FI/JTT5JKO2/FGWR4FIJTT5JKO2.LARGE.jpg"], "step_title": "Step 7: How to Use It"}], "channel": ""}, {"category": "", "description": "I've designed, 3D printed, assembled, tested and published quite a few PLA spring motor floating pinion cars and demonstrators over the last few years, so why would I design, print, assemble, test and publish yet another one?\nWell, \"How I Designed a 3D Printed Windup Car Using Autodesk Fusion 360\" includes a four part video series detailing how I designed this 3D printed windup car (with floating pinion drive) using Autodesk Fusion 360. And I've also included the Autodesk Fusion 360 cad file \"Windup Floating Pinion Car.f3d\" containing the completed design (familiarity with the Autodesk Fusion 360 environment is highly recommended, and if a discrepancy is found between the videos and the cad file, use the cad file).\nSo if you're interested in my design process for a PLA spring motor powered windup car with floating pinion drive, and / or wish to modify the design to create your own custom version, then this Instructable may indeed be of interest to you.\nAnd if you're simply interested in 3D printing and assembling the car, I've included all STL files required to print the car, along with preparation and assembly instructions.\nAnd finally, what's a floating pinion? In this design a floating pinion is a pinion gear that traverses a guide slot, engaging the PLA spring motor with the drive axle when spring energy is present, and disengaging the PLA spring motor from the drive axle when spring energy is depleted. By disengaging the PLA spring motor from the drive axle, the car is allowed to coast, as opposed to abruptly stopping, when spring energy is depleted providing a significant increase in travel distance.\nAnd as usual, I probably forgot a file or two or who knows what else, so if you have any questions, please do not hesitate to ask as I do make plenty of mistakes.\nDesigned using Autodesk Fusion 360, sliced using Cura 4.0, and printed in PLA and Tough PLA on an Ultimaker 2+ Extended and an Ultimaker 3 Extended.", "title": "How I Designed a 3D Printed Windup Car Using Autodesk Fusion 360.", "url": "https://www.instructables.com/id/How-I-Designed-a-3D-Printed-Windup-Car-Using-Autod/", "section": "technology", "steps": [{"step": 1, "steps_text": "The spring motor consists of the \"Knob.stl\", \"Spring.stl\", \"Pawl.stl\" and \"Gear, Pawl (24, 2.2).stl\". The knob is used to wind the spring, and the pawl and pawl gear provide the ratchet mechanism for winding.\nAs with all components of this model, I design using what I call \"sketch in place\" which keeps the sketch in position with the extruded component for easier editing.\nThe pawl gear, as with all gears used in this model, was designed using a module of 2.2. There are only two gear sizes used in this model; twenty four and eight tooth. For a twenty four tooth gear, the pitch radius is ((24 * 2.2) / 2) or 26.4mm. For an eight tooth gear, the pitch radius is ((8 * 2.2) / 2) or 8.8mm. These dimensions will be used in the next step.", "step_imgs": [], "step_title": "Step 1: Designing the Spring Motor."}, {"step": 2, "steps_text": "Math, math and more math...\nThe gear train consists of the three gears \"Gear, Compound ((24, 2.2), (8, 2.2)).stl\", \"Gear, Floating Pinion (8, 2.2).stl\" and \"Gear, Axle (8, 2.2).stl\", that transfer the PLA spring motor energy to the drive axle.\nAs mentioned in the previous step, I used a module value of 2.2 for both the twenty four and eight tooth gears (in practice, when designing a gear train, it is best to use the same module for all gears in the gear train). To determine the spacing between a twenty four and eight tooth gear, the equation I use is:\n((24 * 2.2) / 2) + ((8 * 2.2) / 2) + .4mm = 35.6mm.\nThis simple equation adds the pitch radius of the twenty four tooth gear to the pitch radius of the eight tooth gear, then adds .4mm for slight additional clearance between the gears to account for 3D printing variances (make sure your 3D printer is not over extruding, and don't forget to carefully remove the build plate side \"ooze\" from the gears using jewelers files or equivalent).\nSimilarly, the spacing between two eight tooth gears with a module of 2.2 is:\n((8 * 2.2) / 2) + ((8 * 2.2) / 2) + .4mm = 18mm.\nThese two dimensions, 35.6mm and 18mm, are used in this video to space the gears in the gear train.\nThe total gear ratio from the PLA spring motor to the drive axle is 1:9 (drive to driven), using two gear stages of 1:3 each (e.g. (24 teeth / 8 teeth) = 3, and (3 * 3) = 9). This results in for each rotation of the spring motor, the drive axle will rotate nine times (which is an increase in rotational rate from the PLA spring motor to the drive axle, at the expense of a loss in torque). Thus with a wheel diameter of 47.5mm (as measured using a digital caliper with the O-Rings I used), the distance the car will travel under spring power is approximately (assuming zero traction and friction losses):\n(pi * wheel diameter) * 1.25 * 9 = 1678.788574262046mm = 5.5 feet,\nwhere:\n(pi * wheel diameter) = wheel circumference = 149.2256510455152mm,\n1.25 is the number of winds of the PLA spring motor knob, hence the number of times the PLA spring motor will rotate (discounting friction loss and failure to remove the build plate \"ooze\"),\n9 is the total gear ratio from the PLA spring motor to the drive axle (again, drive to driven).\nTo test the math, I fully wound the PLA spring motor, held the car firmly on a smooth surface along side an extended tape measure, then moved the car forward by hand noting that the floating pinion gear indeed disengaged the PLA spring motor from the drive axle at exactly 5'6\" (ok, math isn't that bad after all).\nFinally, remember after the PLA spring motor energy is depleted, the floating pinion disengages the PLA spring motor from the drive axle allowing the car to coast. During testing, my cars coasted an additional 15 feet and more after the PLA spring motor energy was depleted.", "step_imgs": [], "step_title": "Step 2: Designing the Gear Train."}, {"step": 3, "steps_text": "Whew, glad that math is over...\nThe chassis consists of the two frames, \"Frame, Right.stl\" and \"Frame, Left.stl\".\nTo gain additional ground clearance, in this video the gear train layout is modified, then the PLA spring motor and gear train components are used to assist with laying out the right frame.\nWith the right frame complete, the left frame is created by \"projecting\" the right frame profile, then modifying the various socket and crossmember profiles to allow mating of the two frame sides.", "step_imgs": [], "step_title": "Step 3: Designing the Chassis."}, {"step": 4, "steps_text": "There are two unique axles \"Axle, Gear, Floating.stl\" and \"Axle.stl\", and one unique \"Wheel.stl\" designed in this step.\nAfter centering the car assembly, the rear axle is designed and then copied and pasted to create the front axle.\nNext the floating pinion axle is designed and positioned\nWith the axle designs completed, the wheel is designed, then copied and pasted to create the remaining wheels.", "step_imgs": [], "step_title": "Step 4: Designing the Axles and Wheels."}, {"step": 5, "steps_text": "I purchased eight \"R-28\" O-Rings (38mm ID, 3.5mm Section) for the \"tires\". These O-Rings fit tight on the wheels, but slightly larger O-Rings may be used.\nAs mentioned, I've included all STL files with the components properly oriented for no support 3D printing. If you wish to create your own STL files from the included Autodesk Fusion 360 file \"Windup Floating Pinion Car.f3d\", remember to properly orient them on the build plate using your slicer prior to printing, and make sure to \"hide\" (e.g. \"light bulb\" off) both the O-Ring 1 and O-Ring 2 bodies of the Wheel component prior to creating the STL file for the Wheel component.\nI printed the following quantities and parts at .15mm layer height with the infill percentage and materials as specified:\nOne \"Axle, Gear, Floating Pinion (8, 2.2).stl\", 50% infill, PLA.\nTwo \"Axle.stl\", 50% infill, PLA.\nOne \"Frame, Left.stl\", 100% infill, PLA.\nOne \"Frame, Right.stl\", 100% infill, PLA.\nOne \"Gear, Axle (8, 2.2).stl\", 50% infill, PLA.\nOne \"Gear, Compound ((24, 2.2), (8, 2.2))\", 50% infill, PLA.\nOne \"Gear, Floating Pinion (8, 2.2).stl\", 50% infill, PLA.\nOne \"Gear, Pawl (24, 2.2).stl\", 50% infill, PLA.\nOne \"Knob.stl\", 100% infill, PLA.\nOne \"Pawl.stl, 100% infill, Tough PLA (PLA may be used but will provide less torque and longevity).\nOne \"Spring.stl\", 100% infill, Tough PLA (PLA may be used but will provide less torque and longevity).\nFour \"Wheel.stl\", 50% infill, PLA.\nPrior to assembly, I test fit and trimmed, filed, sanded, etc. all parts as necessary for smooth movement of moving surfaces, and tight fit for non moving surfaces. If you decide to make your own Windup Car, depending on the colors you chose, your printer model and your printer settings, more or less trimming, filing and/or sanding may be required. I carefully filed all edges that contacted the build plate to make absolutely certain that all build plate \"ooze\" was removed and that all edges were smooth. I used small jewelers files and plenty of patience to perform this step.", "step_imgs": ["https://cdn.instructables.com/FBN/IAD4/JTSXA0G1/FBNIAD4JTSXA0G1.LARGE.jpg"], "step_title": "Step 5: Purchase, Print and Prepare the Parts."}, {"step": 6, "steps_text": "I assembled the car as follows (refer to the photographs for proper location and orientation of the various components):\nSlid \"Knob.stl\" into \"Frame, Right.stl\", making sure the knob rotated freely in the right frame.\nPressed \"Spring.stl\" onto \"Knob.stl\" while positioning the spring end over the crossmember on the right frame.\nPressed \"Pawl.stl\" onto \"Knob.stl\". This must be a tight fit for the Knob to remain in place.\nPlaced \"Gear, Pawl (24, 2.2).stl\" onto \"Pawl.stl\".\nPlaced \"Gear, Compound ((24, 2.2), (8, 2.2)).stl\" onto the crossmember on frame, right, making sure the gear rotated freely on the crossmember.\nPressed \"Axle, Gear, Floating Pinion.stl\" into \"Gear, Floating Pinion (8, 2.2).stl\" making sure the gear was centered on the axle. This must be a tight fit.\nPlaced the floating pinion gear assembly into the guide slot on frame, right, making sure the floating pinion gear assembly rotated and slid freely in the guide slot.\nPressed one \"Axle.stl\" into \"Gear, Axle (8, 2.2).stl\" such that the gear was 16.5mm from one end of the axle. This is the rear axle assembly and the gear must be a tight fit on the axle.\nPlaced the longer end of the rear axle assembly into the rear axle hole of frame, right making sure the axle assembly rotated freely in the frame.\nPressed \"Frame, Left.stl\" onto the frame, right assembly. This must be a tight fit.\nPlaced the eight O-Rings onto the four \"Wheel.stl\" (two per wheel). This must be a tight fit to avoid slippage and thus energy loss.\nPressed two wheels onto the rear axle assembly such that the outer wheel surfaces were flush with the axle ends. This must be a tight fit, and must rotate freely.\nPressed the remaining \"Axle.stl\" into one of the remaining wheels such that the outer wheel surface was flush with the axle end. This must be a tight fit.\nSlid this wheel assembly into the front axle hole in the frame assembly, making sure the wheel assembly rotated freely in the frame assembly.\nPressed the remaining wheel assembly onto the remaining axle end such that the outer wheel surface was flush with the axle end, and making sure the wheels and axle rotated freely in the frame assembly.\nTo test the car, hold \"Gear, Compound ((24, 2.2), (8, 2.2))\" with one hand, wind the spring motor using the Knob with the other hand, set the car on a smooth surface (e.g. gymnasium floor, granite countertop, conference table, etc.) and if all assembly steps were successful, off it goes!\nAnd that's how I designed, printed and assembled Windup Car.\nHope you enjoyed it!", "step_imgs": ["https://cdn.instructables.com/F3O/I0Z0/JTSXA0HX/F3OI0Z0JTSXA0HX.LARGE.jpg", "https://cdn.instructables.com/FPJ/2E6D/JTSXA0JT/FPJ2E6DJTSXA0JT.LARGE.jpg", "https://cdn.instructables.com/FC1/AWPY/JTSXA0LR/FC1AWPYJTSXA0LR.LARGE.jpg", "https://cdn.instructables.com/FDC/RDU0/JTSXA0OB/FDCRDU0JTSXA0OB.LARGE.jpg", "https://cdn.instructables.com/F4S/JXVV/JTSXA0Q7/F4SJXVVJTSXA0Q7.LARGE.jpg", "https://cdn.instructables.com/F0F/L0OJ/JTSXA0S4/F0FL0OJJTSXA0S4.LARGE.jpg", "https://cdn.instructables.com/F4W/68KN/JTSXA0S5/F4W68KNJTSXA0S5.LARGE.jpg", "https://cdn.instructables.com/FKL/5UNS/JTSXA0S6/FKL5UNSJTSXA0S6.LARGE.jpg", "https://cdn.instructables.com/FLL/XZ91/JTSXA0U2/FLLXZ91JTSXA0U2.LARGE.jpg", "https://cdn.instructables.com/FT7/F7RG/JTSXA0U4/FT7F7RGJTSXA0U4.LARGE.jpg", "https://cdn.instructables.com/FIS/QQWR/JTSXA0W2/FISQQWRJTSXA0W2.LARGE.jpg", "https://cdn.instructables.com/F2T/OA7R/JTSXA0W4/F2TOA7RJTSXA0W4.LARGE.jpg", "https://cdn.instructables.com/FPR/3Q5O/JTSXA0W6/FPR3Q5OJTSXA0W6.LARGE.jpg", "https://cdn.instructables.com/F0A/5FDL/JTT5GVH9/F0A5FDLJTT5GVH9.LARGE.jpg"], "step_title": "Step 6: Assembly and Test."}], "channel": ""}, {"category": "", "description": "Hello Friends ! We've all heard of Holographic Heads-Up Displays (HUDs) for cars and they cost around 30-50 bucks. Well today I've got an idea and we will make our own Heads-Up Display for about 5 bucks !! Yes, you read correct 5 BUCKS only.\nSo, Let's make it", "title": "Holographic Car Heads-Up Display (HUD)", "url": "https://www.instructables.com/id/DIY-Holographic-Car-Heads-Up-Display-HUD/", "section": "technology", "steps": [{"step": 1, "steps_text": "We need very simple materials for this Project. I've provided a list below for the materials required -\nTransparent CD case .........(X1)\nSome basic tools are also required for this Project. The list is given below -\nHot Glue Gun\nSuper Glue\nProtractor", "step_imgs": ["https://cdn.instructables.com/FRK/ZIAT/JNCCWRW8/FRKZIATJNCCWRW8.LARGE.jpg"], "step_title": "Step 1: Gather the Materials"}, {"step": 2, "steps_text": "First we are going to take the CD case, unbox it and keep the CD, paperwork and wrappers away. NOTE : Throw the wrappers in the dustbin or your mom is not gonna leave you !!\nThen we will have a case as shown above in the picture. A transparent piece of plastic with a base cover. Try to Avoid any Scratches on the Transparent Plastic Cover\nTurn the cover upside down and on the back of the plastic, have some markings for your phone as shown above\nUse cardboard to make a case like structure for the phone but keep in mind to leave some space below the Hinge (which will fold towards the phone) of the CD case (Use Pictures for help and do accordingly)\nSo the Place for our phone is ready and now we will do the final assembly", "step_imgs": ["https://cdn.instructables.com/F13/4X9D/JNCCXTKI/F134X9DJNCCXTKI.LARGE.jpg", "https://cdn.instructables.com/F0J/AJS8/JNCCWN43/F0JAJS8JNCCWN43.LARGE.jpg", "https://cdn.instructables.com/FUS/C97I/JNCCXPG4/FUSC97IJNCCXPG4.LARGE.jpg"], "step_title": "Step 2: Getting the Place for the Phone"}, {"step": 3, "steps_text": "Now we will do the final assembly of our HUD.\nTurn the Transparent Plastic Cover from it original position to the top of our phone space such that taking the phone case as an angle of 0\u00b0 the Transparent Plastic Cover will be at an angle of 45\u00b0- 50\u00b0\nGlue four dots on the Edges (or you can make borders too) of the Opposite side of the CD Case [Opposite of where we made the Phone Case]. Glue will help the Setup make a grip on the Car's Dashboard", "step_imgs": ["https://cdn.instructables.com/FF2/0CX0/JNCCXVJB/FF20CX0JNCCXVJB.LARGE.jpg", "https://cdn.instructables.com/FTH/GO2T/JNCCXV6G/FTHGO2TJNCCXV6G.LARGE.jpg"], "step_title": "Step 3: Final Assembly"}, {"step": 4, "steps_text": "Now we have to get the angle for our HUD's Holographic Projection\nInstall the Head-Up Nav App from the Appstore or Google Play Store on your Phone from the links - App Store Link & Google Play Store Link\nPlace your Phone in the Case and Open the application\nTouch one time anywhere on the screen and the app will switch to HUD mode\nPlace this Setup on the top of your Car's Dashboard from where it is easy for the Driver to see the Navigation\nSee the Holographic Picture of the HUD from the phone through the Transparent Plastic of the CD case while sitting on the Driver's seat and set and measure an angle for which the view suits the best [Generally if we take our phone as an angle of 0\u00b0 the Transparent Cover gives the best view at 45\u00b0- 50\u00b0]\nFinalize your Viewing angle of the Transparent Plastic and Measure it\nGlue the Hinge with respect to the decided viewing angle", "step_imgs": ["https://cdn.instructables.com/FPK/FAU5/JNCCXHM2/FPKFAU5JNCCXHM2.LARGE.jpg", "https://cdn.instructables.com/FFA/67I6/JNCCXHNY/FFA67I6JNCCXHNY.LARGE.jpg"], "step_title": "Step 4: Adjusting According to You"}, {"step": 5, "steps_text": "We've made a Holographic Head-Up Display for our car and now I am going to tell you how to use it\nOpen the Head-Up Nav App and touch the White Navigation Arrow Symbol enclosed in a Green Square box\nThis will lead you to the Google Maps App\nEnter the Details for your navigation and click on Start\nAfter this the Head-Up NavApp will open again automatically\nPlace your Phone with the Head-Up Nav app open in HUD mode in the case and your Navigation will Start\nAbove you can see a Video too of how it's functioning.Very cool right !\nHope you Liked the Project and wish you a very Happy and Safe Driving\nStay tuned for some More Interesting and Crazy Projects thanks", "step_imgs": ["https://cdn.instructables.com/FNL/D6XF/JQQYO3FR/FNLD6XFJQQYO3FR.LARGE.jpg"], "step_title": "Step 5: Testing"}], "channel": ""}, {"category": "", "description": "Most socks can't talk. Without your help that is.", "title": "SockBot Sidekick", "url": "https://www.instructables.com/id/SockBot-Sidekick/", "section": "technology", "steps": [{"step": 1, "steps_text": "Take your sock and flip it inside out. Lay it down so the heel is facing up. Take a marker and draw a curve just above the heel towards the opening", "step_imgs": ["https://cdn.instructables.com/FS5/LYJY/JTON8XS9/FS5LYJYJTON8XS9.LARGE.jpg"], "step_title": "Step 1: Prep Your Sock"}, {"step": 2, "steps_text": "If your needle is not threaded, then we will need to do that now. Cut about an arm\u2019s length of the thread. Thread it through the eye of the needle and pull it so there\u2019s an even length on both sides. Take both sides of thread and knot them together at the ends. You can double or triple knot for a bigger knot if you wish. Now you can thread a needle!", "step_imgs": ["https://cdn.instructables.com/FO2/54R4/JTON8XSA/FO254R4JTON8XSA.LARGE.jpg"], "step_title": "Step 2: Thread the Needle"}, {"step": 3, "steps_text": "Now you will back stitch along the line you drew on the sock. Start off by pushing the needle through the start of the line pulling it through almost until the end, then slip the needle through the two threads just inside the knot at the end.", "step_imgs": ["https://cdn.instructables.com/FPU/9N9E/JTON8XW1/FPU9N9EJTON8XW1.LARGE.jpg"], "step_title": "Step 3: Start Backstitching"}, {"step": 4, "steps_text": "Start off with a single stitch. Push the needle through the sock from the back side to the front along the start of the line you drew. Now push it through the sock continuing on the line about a quarter of an inch forward. Then come back up through the sock the same distance along the line. Now from the topside, push the needle back through at the end of the last stitch. Continue this process until the end of the line. Consider using a metaphor like a dolphin jumping in and out of water. Also try holding one arm horizontal and your other hand to trace the path of the needle going below and above your arm.", "step_imgs": ["https://cdn.instructables.com/FTI/Z9S1/JTON8XZ5/FTIZ9S1JTON8XZ5.LARGE.jpg"], "step_title": "Step 4: How to Back Stitch"}, {"step": 5, "steps_text": "Knot the sting a few times just like you did at the start . Push the Needle through but not all the way so that you can bring the needle around the edge of the sock and between the two threads just inside the knot at the end. Cut the excess string off from the needle.", "step_imgs": ["https://cdn.instructables.com/F5S/T9XS/JTON8Y0U/F5ST9XSJTON8Y0U.LARGE.jpg"], "step_title": "Step 5: Finish Your Stitch"}, {"step": 6, "steps_text": "Cut off the sock just outside the line on the open side. This is going to be the body of your sockbot!", "step_imgs": ["https://cdn.instructables.com/FY5/QRIU/JTON8Y1J/FY5QRIUJTON8Y1J.LARGE.jpg"], "step_title": "Step 6: Create Your Sockbot Body"}, {"step": 7, "steps_text": "Now cut an opening somewhere on the body so you can flip it outside back out.", "step_imgs": ["https://cdn.instructables.com/FCU/YWZ7/JTON8Y29/FCUYWZ7JTON8Y29.LARGE.jpg"], "step_title": "Step 7: Flip Your Sock Inside Out"}, {"step": 8, "steps_text": "Come up with a message for your sock pal to say. You can always change it later. Push the button to record and the other button to play back.\nPlace the recording unit on the foam pad and secure it down with tape. Cut the foam to be about the size of the recording unit. Retape if necessary.", "step_imgs": ["https://cdn.instructables.com/FGW/F6TL/JTON8Y6K/FGWF6TLJTON8Y6K.LARGE.jpg"], "step_title": "Step 8: Prepare Your Talkbox"}, {"step": 9, "steps_text": "Now place your recording unit on the foam pad over the sock body. Determine where you want to place these three parts; the record button, the microphone, and the playback button. In this example, we've placed the microphone near the ear, and the record and playback buttons in the hands. Retape anything that needs to be fixed and cut to shape the foam better to fit inside the sock body. Then slip the recording unit inside the sock body. Make slits for the microphone and buttons to access outside of the body.", "step_imgs": ["https://cdn.instructables.com/FMJ/QI4T/JTON8Y4Q/FMJQI4TJTON8Y4Q.LARGE.jpg"], "step_title": "Step 9: Place Your Talkbox"}, {"step": 10, "steps_text": "Pick out a new foam pad to use for ears and hands. We will hide the microphone with the ears and the play and record buttons with the hands. When you design the ears and hands, make sure to mark off a tab where they can be sewn into the sock bot. You can make them any shape they want so feel free to get creative!", "step_imgs": ["https://cdn.instructables.com/FRP/UX2J/JTON8Y6L/FRPUX2JJTON8Y6L.LARGE.jpg"], "step_title": "Step 10: Design Your Sockbot's Ears and Hands"}, {"step": 11, "steps_text": "After drawing the designs onto the foam pad. Cut them out. Remove the recording unit from the sock body, and flip it inside out. Adjust the slits for the ears and hands to be the size you designed them. Then insert the ears and hands and sew the tabs in between both sides of the sock body with a back stitch.", "step_imgs": ["https://cdn.instructables.com/F4Z/OSKP/JTON8Y8U/F4ZOSKPJTON8Y8U.LARGE.jpg"], "step_title": "Step 11: Attach Your Ears and Hands"}, {"step": 12, "steps_text": "Make sure to leave enough room in the middle for the buttons or microphone to come out. Repeat this process for each ear and hand. When you\u2019re done, flip the body right side out.", "step_imgs": ["https://cdn.instructables.com/FDO/S8YK/JTON8YB9/FDOS8YKJTON8YB9.LARGE.jpg"], "step_title": "Step 12: Flip the Body Inside Out"}, {"step": 13, "steps_text": "Decide what you want for the face of the sockbot. Typically eyes and a mouth will do. You can use remaining foam pad or sew a design for each. This Sockbot has circles of foam for the eyes sewed with an \u201cx\u201d to secure them on. The mouth was created using a back stitch. You can use markers, pipe cleaners, feathers -- whatever you want!", "step_imgs": ["https://cdn.instructables.com/FWE/026D/JTON8YCT/FWE026DJTON8YCT.LARGE.jpg"], "step_title": "Step 13: Make a Face!"}, {"step": 14, "steps_text": "Once you have the ears, hands and face on the sockbot, you can now reinsert the recording unit and put the stuffing inside. Put stuffing in front of and behind the recording unit so it is soft all around.", "step_imgs": ["https://cdn.instructables.com/F6J/U3PX/JTON8YDI/F6JU3PXJTON8YDI.LARGE.jpg"], "step_title": "Step 14: Stuff It"}, {"step": 15, "steps_text": "Now we need to close up the hole in our sockbot\u2019s body with a different type of stitch, the running stitch which will allow us to pull the opening closed like a drawstring on a bag.", "step_imgs": ["https://cdn.instructables.com/F2Y/U4PU/JTON8YEA/F2YU4PUJTON8YEA.LARGE.jpg"], "step_title": "Step 15: Finishing Up"}, {"step": 16, "steps_text": "To make a running stitch, start off by knotting your thread somewhere on the edge of the opening. Now push the needle through the sock near the edge of the opening and come back up the other side an equal distance away from the first stitch. Continue this pattern along the edge of the hole until you get back to the initial knot.", "step_imgs": ["https://cdn.instructables.com/FZS/KBI6/JTON8YEB/FZSKBI6JTON8YEB.LARGE.jpg"], "step_title": "Step 16: Learn the Running Stitch"}, {"step": 17, "steps_text": "Push any remaining sock material inside and pull the stitch tight to close off the hole. Add a few more stitches to seal and knot it off. Cut the string when you're done.", "step_imgs": ["https://cdn.instructables.com/F0G/7TF3/JTON8YFQ/F0G7TF3JTON8YFQ.LARGE.jpg"], "step_title": "Step 17: Sew Up the Bottom"}, {"step": 18, "steps_text": "Now you are equipped to fight for liberty and justice with your loyal Sockbot by your side.", "step_imgs": ["https://cdn.instructables.com/FCG/77CO/JTON8YGG/FCG77COJTON8YGG.LARGE.jpg"], "step_title": "Step 18: The End"}], "channel": ""}, {"category": "", "description": "I have previously built a TARDIS model. One of the defining characteristics of the TARDIS is that it's bigger on the inside than it is on the outside. Obviously I can't do that, but in this Instructable I adapt the model to try and make it look bigger on the inside. I'm going to do this by adding some mirrors and LEDs on the inside. This same idea should also work with other TARDIS models.\nIf you would like to see the Instructable for the TARDIS Model that I'm using, here is the link to that Instructable: https://www.instructables.com/id/Make-a-TARDIS-Model/\nIf you would like to see a video version of this Instructable, you can view that here: https://youtu.be/0v8eq0jQdS0\nHere is what I used in this Instructable:\nTools:\nRuler\nFile\nSand Paper\nSanding Block\nDrill\n1/16\" Drill Bit\n3/16\" Drill Bit\nUtility Knife\nHot Glue Gun\nHot Glue Sticks\nMarking Pen\nParts:\nA TARDIS Model\nAluminum Sheet Metal\nPlexiglass\nOne Way Mirror Window Tint, Silver\nThumb Tacks\nAddressable RGB Led Strip\nConnector Plugs\nAddressable RGB LED Controller #1\nAddressable RGB LED Controller #2\n5vdc Power Supply\nPlastic Tubing", "title": "Make a TARDIS Infinity Box", "url": "https://www.instructables.com/id/Make-a-TARDIS-Infinity-Box/", "section": "technology", "steps": [{"step": 1, "steps_text": "For the mirrors on the inside there are several options, I'll be showing 2 of them starting with a piece of polished aluminum. I measure the place on the panel where I want the mirror. I want to be able to still see through the windows so I measure below those. Then I mark and cut 4 pieces out of the aluminum. After cutting, I file down the edges so they aren't as sharp. This can also be done with sand paper and a sanding block.", "step_imgs": ["https://cdn.instructables.com/FLX/0XED/JTON5KUN/FLX0XEDJTON5KUN.LARGE.jpg", "https://cdn.instructables.com/FKW/77GH/JTON5KYR/FKW77GHJTON5KYR.LARGE.jpg", "https://cdn.instructables.com/FTG/KDPI/JTON5KZX/FTGKDPIJTON5KZX.LARGE.jpg", "https://cdn.instructables.com/F7M/CWPT/JTON5L2W/F7MCWPTJTON5L2W.LARGE.jpg", "https://cdn.instructables.com/FY0/OM7M/JTON5L8U/FY0OM7MJTON5L8U.LARGE.jpg"], "step_title": "Step 1: Cutting the Aluminum Mirrors"}, {"step": 2, "steps_text": "I remove the window I added previously, I'll show my replacement later. I turn the side over so that I can use the front for reference. I'll be using thumb tacks to hold the mirrors in place and I want them to be lined up with the thicker parts of the side. I mark out where my options are on the mirror. I decide to try using 2 thumbtacks so I drill a couple 1/16\" holes in the mirror. For the next mirror I use the first mirror as a template for drilling the holes. Then using a larger, sharp drill bit I ream out the holes by hand. Now I can mount the mirror onto the inside of the panel.", "step_imgs": ["https://cdn.instructables.com/FSJ/BU4W/JTON5LOG/FSJBU4WJTON5LOG.LARGE.jpg", "https://cdn.instructables.com/FOA/PCTU/JTON5LPM/FOAPCTUJTON5LPM.LARGE.jpg", "https://cdn.instructables.com/FOY/MKRM/JTON5LPO/FOYMKRMJTON5LPO.LARGE.jpg", "https://cdn.instructables.com/FBC/72WC/JTON5LPP/FBC72WCJTON5LPP.LARGE.jpg", "https://cdn.instructables.com/FFP/H8HL/JTON5LQV/FFPH8HLJTON5LQV.LARGE.jpg", "https://cdn.instructables.com/F0A/FEBZ/JTON5LX6/F0AFEBZJTON5LX6.LARGE.jpg", "https://cdn.instructables.com/F8Z/QC1U/JTON5LZY/F8ZQC1UJTON5LZY.LARGE.jpg", "https://cdn.instructables.com/FDD/W1R9/JTON5M0G/FDDW1R9JTON5M0G.LARGE.jpg", "https://cdn.instructables.com/FP5/KZN3/JTON5M1D/FP5KZN3JTON5M1D.LARGE.jpg"], "step_title": "Step 2: Mounting the Mirrors to the Sides"}, {"step": 3, "steps_text": "Doing this with the door will be similar, the main difference will be splitting the mirror into 2 pieces. To help prevent light from leaking out I overlap the mirror for the inner door with the outer door. Once I put the mirrors in place I test the doors to make sure they still open.", "step_imgs": ["https://cdn.instructables.com/F86/YLRM/JTON5M3U/F86YLRMJTON5M3U.LARGE.jpg", "https://cdn.instructables.com/FR2/B68M/JTON5M5B/FR2B68MJTON5M5B.LARGE.jpg", "https://cdn.instructables.com/FYI/D762/JTON5M5C/FYID762JTON5M5C.LARGE.jpg"], "step_title": "Step 3: Mounting the Mirrors to the Doors"}, {"step": 4, "steps_text": "I put these polished aluminum mirrors on all of the sides. I'm going to put my LEDs only on the left and right sides, not the doors or the back. I figure out how many LEDs I need and cut my LED strip at the proper length. My camera wouldn't focus well enough to see, but since I'm using addressable LEDs there is an arrow showing me the direction of orientation. At each end of the strip I'm soldering on 3 pin connectors, making sure the first LED is getting the connector that will connect to my LED controller. I do this with 4 strips of LEDs, then after I decide how I want the directions to flow I attach them to the sides.", "step_imgs": ["https://cdn.instructables.com/F1N/CAEH/JTON5RFA/F1NCAEHJTON5RFA.LARGE.jpg", "https://cdn.instructables.com/FQC/08EO/JTON5RHG/FQC08EOJTON5RHG.LARGE.jpg", "https://cdn.instructables.com/F3E/JC75/JTON5RHX/F3EJC75JTON5RHX.LARGE.jpg", "https://cdn.instructables.com/FQ7/Z9AY/JTON5RIH/FQ7Z9AYJTON5RIH.LARGE.jpg", "https://cdn.instructables.com/FQU/789D/JTON5RJR/FQU789DJTON5RJR.LARGE.jpg"], "step_title": "Step 4: Adding the LEDs"}, {"step": 5, "steps_text": "Next I test fit the 4 sides onto the base, but as you can see the wires are all over the place inside. I want the bottom wires to go under the base, so I hold each side in place and mark where I need to make a gap in the base for the wires to pass through. After trimming out a groove for the wires, I pass them through the base and make sure everything lines up.", "step_imgs": ["https://cdn.instructables.com/F3S/RNAG/JTON5RRS/F3SRNAGJTON5RRS.LARGE.jpg", "https://cdn.instructables.com/FZO/83KX/JTON5RSX/FZO83KXJTON5RSX.LARGE.jpg", "https://cdn.instructables.com/FDV/QIMA/JTON5RU0/FDVQIMAJTON5RU0.LARGE.jpg", "https://cdn.instructables.com/FKA/X1N1/JTON5RUL/FKAX1N1JTON5RUL.LARGE.jpg", "https://cdn.instructables.com/F08/RNNZ/JTON5RX9/F08RNNZJTON5RX9.LARGE.jpg", "https://cdn.instructables.com/FES/HOP5/JTON5RZT/FESHOP5JTON5RZT.LARGE.jpg", "https://cdn.instructables.com/FOA/5VTR/JTON5RZU/FOA5VTRJTON5RZU.LARGE.jpg"], "step_title": "Step 5: Wire Management"}, {"step": 6, "steps_text": "Next I'm going to show another option for the mirrors. Using a piece of plastic, I attach some partially transparent mirror film. I remove the piece of polished aluminum and put this other mirror in it's place. Since this is a bit transparent, I made it tall enough to goto the top of the side, even though it covers the windows. As you can see, I've already pre-drilled the holes for the thumb tacks. I also did the same for the doors, but not the sides with the LEDs.", "step_imgs": ["https://cdn.instructables.com/F2A/ZL0H/JTON5STZ/F2AZL0HJTON5STZ.LARGE.jpg", "https://cdn.instructables.com/FMJ/9JCM/JTON5SVM/FMJ9JCMJTON5SVM.LARGE.jpg", "https://cdn.instructables.com/F6Q/8TR7/JTON5SXI/F6Q8TR7JTON5SXI.LARGE.jpg", "https://cdn.instructables.com/F4C/ORW0/JTON5SY3/F4CORW0JTON5SY3.LARGE.jpg", "https://cdn.instructables.com/FVL/2J9O/JTON5SYK/FVL2J9OJTON5SYK.LARGE.jpg", "https://cdn.instructables.com/F1Y/QGHT/JTON5SZL/F1YQGHTJTON5SZL.LARGE.jpg", "https://cdn.instructables.com/F4B/AKML/JTON5T0A/F4BAKMLJTON5T0A.LARGE.jpg"], "step_title": "Step 6: Using Plastic Mirrors W/Film"}, {"step": 7, "steps_text": "For these other 2 sides I'm going to cut out a piece of packaging plastic to go over the windows, and attach some of that same partially transparent mirror film to it. Here you can see the difference between the mirror film and the polished aluminum. The aluminum bent a bit when cutting it and the plastic I used for those windows is very thin, so there is some warping where the thumb tacks are. For the other sides with full length plastic, the plastic itself is much thicker and more solid, so there is not much warping at all.", "step_imgs": ["https://cdn.instructables.com/FHM/LAYX/JTON5TH2/FHMLAYXJTON5TH2.LARGE.jpg", "https://cdn.instructables.com/FYA/3C9N/JTON5TH9/FYA3C9NJTON5TH9.LARGE.jpg", "https://cdn.instructables.com/FRU/DO6Q/JTON5TIF/FRUDO6QJTON5TIF.LARGE.jpg", "https://cdn.instructables.com/FKA/40S6/JTON5TJE/FKA40S6JTON5TJE.LARGE.jpg", "https://cdn.instructables.com/F9J/K4JS/JTON5TJV/F9JK4JSJTON5TJV.LARGE.jpg"], "step_title": "Step 7: Window Alternative"}, {"step": 8, "steps_text": "I also made a change to the light. Originally I used clear tubing, but white tubing works better with LEDs. I also used a much shorter piece of tubing with a piece of reflective tape on the top. This seems to work a bit better with the LED that I used. I used a bit of hot glue to hold this LED in place under the light. Now all of the parts are ready to be reassembled.", "step_imgs": ["https://cdn.instructables.com/F2X/U9U1/JTON5U5F/F2XU9U1JTON5U5F.LARGE.jpg", "https://cdn.instructables.com/FB3/6XSW/JTON5U5U/FB36XSWJTON5U5U.LARGE.jpg", "https://cdn.instructables.com/FIR/2L93/JTON5U5Z/FIR2L93JTON5U5Z.LARGE.jpg", "https://cdn.instructables.com/FX5/NEKV/JTON5U64/FX5NEKVJTON5U64.LARGE.jpg", "https://cdn.instructables.com/FGK/FJBM/JTON5U6B/FGKFJBMJTON5U6B.LARGE.jpg", "https://cdn.instructables.com/FRQ/N6KX/JTON5U6G/FRQN6KXJTON5U6G.LARGE.jpg", "https://cdn.instructables.com/FNE/5I4M/JTON5U79/FNE5I4MJTON5U79.LARGE.jpg"], "step_title": "Step 8: Changes to the Light on the Roof"}, {"step": 9, "steps_text": "And here it is! Looking through the windows you can see the infinity box effect that I was trying for. Opening the door the effect goes even deeper since it doesn't have to go through the tinted windows. And the light on the top looks awesome! I was thinking that if I had a strip of LEDs go along the floor, that would help the effect. I tried that out and it does look better, but also gets in the was when trying to open the doors. More adjustment may be needed, but it's good for now.\nFor this size of TARDIS it worked pretty good. I think it would work even better with a full sized TARDIS. And like always, any advice or comments are more than welcome!", "step_imgs": ["https://cdn.instructables.com/FN9/7DZA/JTON5VAJ/FN97DZAJTON5VAJ.LARGE.jpg", "https://cdn.instructables.com/F76/J5UE/JTON5VAS/F76J5UEJTON5VAS.LARGE.jpg", "https://cdn.instructables.com/FOT/I28F/JTON5VAT/FOTI28FJTON5VAT.LARGE.jpg", "https://cdn.instructables.com/FEB/OWN3/JTON5VAY/FEBOWN3JTON5VAY.LARGE.jpg", "https://cdn.instructables.com/FLP/O7X6/JTON5VB9/FLPO7X6JTON5VB9.LARGE.jpg", "https://cdn.instructables.com/FKT/I2LL/JTON5VB3/FKTI2LLJTON5VB3.LARGE.jpg"], "step_title": "Step 9: And That's It!"}], "channel": ""}, {"category": "", "description": "This is for everyone that has a K40 or K50 and higher quality laser cutter and is tired of losing money on Tubes that seem to die faster than they should. This is also for the winner of the Epilog Laser Contest I hope this helps you out on your journey with laser cutting!\nFor those that don't know, adding a Analog Milliamp Meter to your laser cutting system helps you keep an eye on how much power is running through your CO2 tube. If you run too much power, it deteriorates the lifespan of the Tube. It also can help you diagnose potential problems in your system, like a dying Tube, or a faulty Power Supply.\nThis presentation will show how I installed my own Analog Milliamp Meter into my Orion Motor Tech 50W Laser and will cover proper Wiring Techniques, Hole Cutting and Proper Laser Testing.\nPlease be safe if you choose to do this yourself.", "title": "Adding a Analog Milliamp for Your Laser Cutter", "url": "https://www.instructables.com/id/Adding-a-Analog-Milliamp-for-Your-Laser-Cutter/", "section": "technology", "steps": [{"step": 1, "steps_text": "LASER CUTTERS USE HIGH LEVELS OF ELECTRICITY!!!\nThere is always a risk of shock or electrocution when dealing with any electronic device. When dealing with a class IV laser that risk becomes higher.\nMake sure to wear well insulated clothing/safety items. (Gloves)\nKeep the machine turned off and unplugged. (leave unplugged for 12 hours to be safe)\nDouble check connections to make sure they are secure to reduce risk of arcing.\nNot all laser cutters are the same. Different makers use different color wires, different power supplies so connections may not be the same.\nAttempt at your own risk, please only attempt with proper electronics training and knowledge of your laser cutter.!!!!", "step_imgs": ["https://cdn.instructables.com/FVG/F74E/JTON9EA4/FVGF74EJTON9EA4.LARGE.jpg"], "step_title": "Step 1: SAFETY"}, {"step": 2, "steps_text": "3\" twelve gauge wire (black or black and another color)\n1 Wire cutter\n1 Wire stripper (or knife)\n4 Ways to connect wire (Electrical tape, 4 pieces of heat shrink, 2 ring connectors, liquid electrical tape)\n1 DC Analog Milliamp Meter (MAKE SURE YOU GET DC!)\n1 Two inch BiMetal Hole Saw + Drill\n1 Roll Painters Tape (or a Magnet)\n1 Plastic Bag\n1 Pencil\n2 Sheets Sand Paper\nI already had most the supplies like the electrical tape and the tools. All I needed to purchase was the Analog Milliamp Meter and I got it from Amazon for under 10$. Try to look for one that doesn't go any higher than 30 milliamp cause you will get a more accurate read on your power and you should never go over 20 milliamps power.", "step_imgs": [], "step_title": "Step 2: Materials"}, {"step": 3, "steps_text": "For safety concerns wait 12 hours after you have turned off and unplugged your laser before touching wires\nFirst you must locate the ending terminal wire of your laser tube. Depending on your laser this could be different color wires but for the majority they are going to be BLACK PURPLE or YELLOW wires. Orion Motor Techs \"50W Laser Cutter\" is going to be BLACK\nIf there is conduit covering all the wires go ahead and take it off, it will make much much easier.\nFor other laser cutters you can figure out which wire it is by looking at the power supply. It will be plugged into the L terminal. If you will look at the power supply it will be the leftmost wire on the power supply wire panel. Trace it from the power supply to the negative end of the tube for confirmation if needed.\nThere are very heavy gauge wires in your laser cutter case. DO NOT TOUCH THESE! They most likely lead to the positive end of your laser cutter, and can KILL YOU!", "step_imgs": ["https://cdn.instructables.com/FFN/ZZRU/JTON9XKN/FFNZZRUJTON9XKN.LARGE.jpg", "https://cdn.instructables.com/F1O/I5H7/JTON9YFO/F1OI5H7JTON9YFO.LARGE.jpg", "https://cdn.instructables.com/FR4/X7UM/JTON991L/FR4X7UMJTON991L.LARGE.jpg", "https://cdn.instructables.com/F40/YRU3/JTON9955/F40YRU3JTON9955.LARGE.jpg", "https://cdn.instructables.com/F0Q/885G/JTON996I/F0Q885GJTON996I.LARGE.jpg", "https://cdn.instructables.com/FQI/0JC8/JTON99AX/FQI0JC8JTON99AX.LARGE.jpg"], "step_title": "Step 3: Finding the Right Wire"}, {"step": 4, "steps_text": "Go about halfway along the BLACK Wire and make a precise cut. Make sure both (now cut) wires have lots of flexibility to move.\nLook at where you want the analog meter to sit and measure out how much NEW Wire you will need to reach that, then add an extra foot.\nMake sure the NEW Wire you are using is the size of, or larger wire than what is provided by the laser, 12 gauge should do.\nFor the wire the is still attached into the L Terminal, strip about 1/2 inch - 1 inch of insulation of the free end of the wire.\nRepeat step 4 for the wire that leads FROM the Negative End of Laser Tube.\nFor both the New Wires that you have measured out and cut, strip both ends about 1/2 inch - 1 Inch.\nYou should now have six wire ends that have all been stripped of insulation. One leading FROM the Negative End of Laser Tube. One leading TO the L Terminal. Four from the NEW Wire extenders.", "step_imgs": ["https://cdn.instructables.com/FNC/ZVKE/JTON99CA/FNCZVKEJTON99CA.LARGE.jpg", "https://cdn.instructables.com/FW9/2FQ2/JTON99LU/FW92FQ2JTON99LU.LARGE.jpg", "https://cdn.instructables.com/FJO/53QG/JTON99NF/FJO53QGJTON99NF.LARGE.jpg", "https://cdn.instructables.com/F0R/N262/JTON99P1/F0RN262JTON99P1.LARGE.jpg"], "step_title": "Step 4: Cutting the Wires and Prepping"}, {"step": 5, "steps_text": "Figure out where you want your Analog Milliamp Meter.\nMark the Top and Bottom of space to be cut.\nPlace a Plastic Bag on the INSIDE of laser to protect circuits from metal dust\nPut painters tape on the BOTTOM of where you will cut (makes it easy to see where you have cut all the way through and will stop some metal bits from falling down)\nUse Two Inch Bi-Metal Hole Saw to punch through metal.\nUse high speed for drill but push down slowly and firmly to cut hole. Stay level.\nDon't overwork drill, stop periodically and use painters tape/magnet to clear away debris.\nOnce the hole has been cut, use sandpaper or other deburring tool to dull the edges of cut.\nCheck to see if meter fits.\nMark and drill holes necessary for securing Analog Milliamp Meter.\nThe hole you cut is based off the back end of the Meter. Make the smallest hole you can so it fits nice and snug and doesn't move around or allow you to see into the machine.", "step_imgs": ["https://cdn.instructables.com/FJV/SCL7/JTON99S9/FJVSCL7JTON99S9.LARGE.jpg", "https://cdn.instructables.com/F61/1WHB/JTON99TU/F611WHBJTON99TU.LARGE.jpg", "https://cdn.instructables.com/F51/75V1/JTON99WR/F5175V1JTON99WR.LARGE.jpg", "https://cdn.instructables.com/FX8/98QH/JTON9A0B/FX898QHJTON9A0B.LARGE.jpg", "https://cdn.instructables.com/FQ3/V1M9/JTON9A3A/FQ3V1M9JTON9A3A.LARGE.jpg", "https://cdn.instructables.com/FEO/BHJR/JTON9A6R/FEOBHJRJTON9A6R.LARGE.jpg", "https://cdn.instructables.com/FVA/B3G2/JTON9A8L/FVAB3G2JTON9A8L.LARGE.jpg", "https://cdn.instructables.com/F7N/89UF/JTON9AB3/F7N89UFJTON9AB3.LARGE.jpg", "https://cdn.instructables.com/FOW/PJXI/JTON9ACO/FOWPJXIJTON9ACO.LARGE.jpg"], "step_title": "Step 5: Cutting the Holes"}, {"step": 6, "steps_text": "There are a few ways to connect wires. I will first say how I did it. Then I will tell the proper electricians way.\nMy Way To Wire\nTake the wire from the L terminal and weave the wire strands together with one of the NEW Wire extensions.\nTwist the two wire ends together.\nCut one piece of electrical wire a little longer then the length of exposed wire and wrap it LENGTHWISE.\nNow wrap over that electrical tape at a diagonal angle and make sure that it is tight and well insulated and covers both edges of bottom layer of tape.\nRepeat steps 1 - 4 except with with the wire from the Negative End of Laser Tube and the second NEW Wire extension.\nWeave the wires back into the conduit and up towards the hole to keep things neat.\nPush both wires through the hole.\nAttach the wire from the L Terminal to the POSITIVE Terminal of the Analog Meter by wrapping it around the screw and tighten the nut.\nAttach the wire from the Negative End of Laser Tube to the NEGATIVE Terminal of the Analog Meter by wrapping it around the screw and tighten the nut.\nThe \"Correct\" Way To Wire\nPut a piece of Heat Shrink around one end of wire.\nFollow steps 1 and 2 and 4 from above.\nUse a flame or heat gun to shrink the Heat Shrink around the electrical tape and wire ends.\nRepeat steps 1 - 3 for other wire.\nFollow steps 6 - 9 from above.\nInstead of wrapping the wire around the screw use a piece of heat shrink to attach a ring connector to the ends of both NEW Wire Extensions.\nPut the screw from the Analog Meter through the ring connector and screw it down securely.\nLather over every connection with liquid electrical tape.\nUsing heat shrink is usually more secure and \"airtight\" of a connection. Using the ring connectors also keep the circuit more enclosed and makes a easier and safer attachment to the Analog Meter.", "step_imgs": ["https://cdn.instructables.com/FO4/3PFM/JTON9AE9/FO43PFMJTON9AE9.LARGE.jpg", "https://cdn.instructables.com/FOZ/QWN3/JTON9AH6/FOZQWN3JTON9AH6.LARGE.jpg", "https://cdn.instructables.com/FOC/EIHN/JTON9AJF/FOCEIHNJTON9AJF.LARGE.jpg", "https://cdn.instructables.com/FLM/BE0Y/JTON9AOJ/FLMBE0YJTON9AOJ.LARGE.jpg", "https://cdn.instructables.com/F7C/GKPP/JTON9ARP/F7CGKPPJTON9ARP.LARGE.jpg", "https://cdn.instructables.com/FT1/T9PQ/JTONADD8/FT1T9PQJTONADD8.LARGE.jpg", "https://cdn.instructables.com/FBG/4JWH/JTON9ARR/FBG4JWHJTON9ARR.LARGE.jpg", "https://cdn.instructables.com/F0C/ZQKO/JTONADD3/F0CZQKOJTONADD3.LARGE.jpg", "https://cdn.instructables.com/F2R/VRMP/JTONADD5/F2RVRMPJTONADD5.LARGE.jpg", "https://cdn.instructables.com/FG7/SKAO/JTON9ATL/FG7SKAOJTON9ATL.LARGE.jpg", "https://cdn.instructables.com/FWN/PSWP/JTON9ATX/FWNPSWPJTON9ATX.LARGE.jpg", "https://cdn.instructables.com/F6C/P6R2/JTON9AU9/F6CP6R2JTON9AU9.LARGE.jpg"], "step_title": "Step 6: Wiring the Meter Up"}, {"step": 7, "steps_text": "Checklist Before Test\nWe are all wired up.\nThe Wire is well insulated\nWire has been pushed into the conduit neatly\nWe have secured the Analog Meter to the machine.\nThe correct wires are attached to the right terminals.\nMake sure your machine is properly grounded.\nMake sure you are still wearing protective equipment.\nCarefully plug in your machine.\nCarefully turn on your machine. (I used a piece of wood from a distance (I'm cautious))\nDon't use the pulse button.\nStart up a simple test file and do it at LOW power.\nIf the meter dial goes LEFT instead of RIGHT the wires are backwards. (if it goes Right skip to step 8)\nIf it goes LEFT, turn machine off, unplug, wait for capacitors to discharge and switch wires on the back of the Analog Meter.\nRepeat steps 1 and 2.\nIf problem persists (or any other problem occurs) then check to see that you have a DC Analog Meter.\nIf problem persists (or any other problem occurs) then check to see the wires from the Tube and Power Supply are correct.\nIf problem persists (or any other problem occurs) then check to see that the wires are well insulated and connected properly.\nIf problem persists (or any other problem occurs) then test the Analog Meter with another DC circuit (like a computer fan)\nDo multiple tests, slowly raise the power until you reach about 18 milliamps.\nNever go higher than 18 Milliamps for \"50W or 40W Chinese Lasers\"\nCOMMON PROBLEMS\nProblem Group One\nWires are not connected properly and circuit is not complete.\nWires are not connected properly and causes a short or creates arc.\nWrong wires from power supply were cut.\nNEW Wire extensions are too small a gauge for circuit.\nWires are backwards on the AC Analog Meter\nSolution\nConnect Wires Properly\nProblem Group Two\nYou have a AC Analog Meter instead of a DC analog Meter.\nYou have a faulty Analog Meter\nYou have a Faulty Power Supply\nYou have a Faulty Co2 Tube\nSolutions\nReplace Hardware (start from cheapest to most expensive)\nTest without new hardware or separate from laser i.e. Test DC Analog Meter with another circuit", "step_imgs": ["https://cdn.instructables.com/FTG/5QPH/JTON9AWH/FTG5QPHJTON9AWH.LARGE.jpg"], "step_title": "Step 7: Securing and Testing"}, {"step": 8, "steps_text": "When it comes to Laser Cutters, especially Chinese Laser Cutters you have to monitor how much power you are pushing through your tube and system.\nMost Chinese Laser Cutters exaggerate the wattage of their tubes.\nA \"40W\" tube is most likely a 35W tube.\nA \"50W\" tube is most likely a 40W tube.\nA \"60W\" tube is most likely a 45W-50W tube\nReal tube lengths-ish\n55 x 800mm = 40\n55 x 1000mm = 50\n55 x 1200mm = 60\n80 x 1200mm = 80\n80 x 1400mm = 100\nThe exaggeration comes from the \"Max Power\" not \"Rated Power\" and running at the Max power will kill the tube a lot faster than if you run at the Rated Power.\nEven knowing the Rated Power you still need to make sure you don't push too much power through your tube so you need to monitor the Current. For some 60W tubes you want around 22 mA or less and you want less and less mA for lower wattage tubes. Most people have around a 45W tube so try and keep the Current around 18 mA or around what the manufacture has suggested or even go by your own tests if you have the time. Just keep in mind lower Current = Long Lifespan", "step_imgs": [], "step_title": "Step 8: Extra Info"}], "channel": ""}, {"category": "", "description": "This post about convert famous headphone Sony MDR-7506 and its fake copies to DIY Bluetooth modification.\nI had headphone Sony MDR with very great sound and comfortable design. And also quite thick cable is with it. That was well when I used one on my office. Use it during walk to home or job difficult, because cable dangle, pulled down, tangled in clothing. That actually annoyed me. Therefore, I decided to detach cable and convert headphone to Bluetooth version.\nCurrently there are many BT modules fit for sound DIY project. Some of ones support APT-X. I chose stereo CSR8645 module with amplifier board. Module also support microphone and I add this feature to MDR BT mod.", "title": "DIY Bluetooth Modification Sony MDR-7506 Headphone", "url": "https://www.instructables.com/id/DIY-Bluetooth-Modification-Sony-MDR-7506-Headphone/", "section": "technology", "steps": [{"step": 1, "steps_text": "Here is part list:\n- Bluetooth 4.0 CSR8645 module with amplifier board\n- Charge LiPo battery module TP4056\n- LiPo battery LP602030 overall dimensions 6\u044520\u044530 mm\n- microphone ECM-10C diameter 6 mm\n- tact push button high 9.5 mm (KLS7-TS6601-9.5-180) \u2013 5 pieces\n- mini slide switch appropriated size\n- some tools and materials\u2026", "step_imgs": [], "step_title": "Step 1: Parts"}, {"step": 2, "steps_text": "First I disassembled left and right ear cups and measure inside dimensions, then each of ones was created 3d models. Also I did it for other parts of set. Then I spent some time try to assemble and after few attempts I had acceptable result. All models you can find here \u2013 https://grabcad.com/delirium-1/models\nI developed two kind of circuit board for right and left ear cup to place parts. Bluetooth module with buttons are soldered on custom circuit board and putting in left ear cup. Before it i drill holes for buttons and extended former hole for cable until diameter 6.5 mm then inserted microphone in it then soldered to circuit board too.\nCharge module TP4056 and slide switch are placed on circuit board inside right ear cup. There is LiPo battery there too. Also i must cut two slot on a side ear cup. One for switch and another for micro usb charged cable. Dimensions right circuit board is on picture (previous design board with sensor switch, but it has same size as new).", "step_imgs": ["https://cdn.instructables.com/F6P/VUJ3/JTON85IO/F6PVUJ3JTON85IO.LARGE.jpg", "https://cdn.instructables.com/F2C/UNFL/JTON85LK/F2CUNFLJTON85LK.LARGE.jpg", "https://cdn.instructables.com/FQP/K3SG/JTON85MD/FQPK3SGJTON85MD.LARGE.jpg", "https://cdn.instructables.com/FY9/FN95/JTON85LN/FY9FN95JTON85LN.LARGE.jpg"], "step_title": "Step 2: Modelling"}, {"step": 3, "steps_text": "Then I made circuit boards.I used male pin header to solder parts on boards and\nthen cropped they a little to make \"sandwich\" less thick.\nHere is ready Bluetooth board assembly.", "step_imgs": ["https://cdn.instructables.com/F10/K280/JTON85WZ/F10K280JTON85WZ.LARGE.jpg", "https://cdn.instructables.com/FP1/U4AG/JTON85VW/FP1U4AGJTON85VW.LARGE.jpg", "https://cdn.instructables.com/FSZ/IFTB/JTON85W6/FSZIFTBJTON85W6.LARGE.jpg", "https://cdn.instructables.com/FUT/IDWV/JTON85WG/FUTIDWVJTON85WG.LARGE.jpg"], "step_title": "Step 3: Make Circuit Boards"}, {"step": 4, "steps_text": "First time test.. great, it\u2019s working! Module pair to phone easily and sounds well. Assembly boards is ready to placed into ear cups. I used melt plastic gun to fix they.", "step_imgs": ["https://cdn.instructables.com/FFQ/86EV/JTON85WD/FFQ86EVJTON85WD.LARGE.jpg"], "step_title": "Step 4: Test and Mount"}, {"step": 5, "steps_text": "At the end, I replaced original cable (two wires) between earpiece by usb cable (four wires) to connect sound and power line. I obtained quite similar on previous result. DIY BT mod MDR-7506 headset done.\nLeft ear cup. I drilled hole diameter 1.5 mm for amplifier red led that indicate work headset, and dripped a little melt plastic.\nRight ear cup. Red led is bright if charge on. When charge full blue led is bright.", "step_imgs": ["https://cdn.instructables.com/FCC/SI1L/JTON85UV/FCCSI1LJTON85UV.LARGE.jpg", "https://cdn.instructables.com/F8P/YPPA/JTON85UY/F8PYPPAJTON85UY.LARGE.jpg", "https://cdn.instructables.com/FRD/2TY6/JTON85V5/FRD2TY6JTON85V5.LARGE.jpg", "https://cdn.instructables.com/FFG/50P2/JTON85WI/FFG50P2JTON85WI.LARGE.jpg"], "step_title": "Step 5: Finish"}, {"step": 6, "steps_text": "Here is view on microphone and buttons. Unfortunately,\nI worked dremel carelessly\u2026 However, that doesn't matter, because ultimate result is pretty well.", "step_imgs": ["https://cdn.instructables.com/FYI/WAT1/JTON85VU/FYIWAT1JTON85VU.LARGE.jpg"], "step_title": "Step 6: Result"}, {"step": 7, "steps_text": "Thanks for your attention!\nAnd warning! If you want to make same with you Sony MDR-7506 you will most definitely void any warranty you might have for your headphones. You might also damage your headphones if you are not careful, so please do not accuse me!\nIf you need more information such as electrical schemes, print circuit boards, some explanations, etc, contact me.", "step_imgs": [], "step_title": "Step 7: The End"}], "channel": ""}, {"category": "", "description": "I am currently working on a replica of the Minivac 601, an electro-mechanical computer from 1961 (see the Wikipedia entry for details). For this project I require a rotary switch with the following characteristics:\n1P16T\nContinuous Rotation\nNon-Shorting\nPanel Mount\nMotorized\nThis last requirement is the kicker. Without having to drive the switch via a motor, a fair number of parts meet the remaining criteria. However I was unable to see how any of them could be easily motorized. Some are physically too small, and most require a fair amount of torque to switch between positions.\nSo I came up with the following 3D printable design that uses reed switches and magnets.", "title": "Mostly 3D Printed Rotary Switch", "url": "https://www.instructables.com/id/Mostly-3D-Printed-Rotary-Switch/", "section": "technology", "steps": [{"step": 1, "steps_text": "I printed the parts with the following settings:\nPrint Resolution: .2 mm\nInfill: 20%\nFilament: AMZ3D PLA\nNotes: No supports\nTo make the basic rotary switch you need the following parts:\nRS Body\nRS Knob (optional)\nRS Magnet Mount\nRS Rotor Gasket (optional)\nRS Rotor", "step_imgs": [], "step_title": "Step 1: Print the Parts"}, {"step": 2, "steps_text": "In addition to the printed parts you will need the following:\n16 Reed Switches - Digi-Key part number 2010-1087-ND\n18 Disk Magnets - 6 mm (diameter) x 3 mm (height)", "step_imgs": ["https://cdn.instructables.com/FQL/B1F4/JTON9XBY/FQLB1F4JTON9XBY.LARGE.jpg"], "step_title": "Step 2: Obtain the Other Hardware"}, {"step": 3, "steps_text": "Start by inserting the reed switches into the slots around the RS Body. The pins for the switches should pass easily through the holes from the inside to the outside of the body, and can be carefully bent from the outside to keep the switch in place. I tried cheaper glass encased reed switches for my first prototype and found them to be inconsistent when operating the switch", "step_imgs": ["https://cdn.instructables.com/FEX/VPI0/JTON9QYM/FEXVPI0JTON9QYM.LARGE.jpg"], "step_title": "Step 3: Add the Reed Switches to the Body"}, {"step": 4, "steps_text": "Insert 16 disk magnets into the RS Magnet Mount. Be sure that the polarity of all 16 magnets is the same. You can use a bit of glue to hold them in if they don't grab sufficiently on their own. They should be flush with the top of the RS Magnet Mount when inserted.", "step_imgs": ["https://cdn.instructables.com/FUK/DYGP/JTON9QYN/FUKDYGPJTON9QYN.LARGE.jpg"], "step_title": "Step 4: Populate the Magnet Mount"}, {"step": 5, "steps_text": "Insert the 2 remaining disk magnets into the RS Rotor. It's very important that the polarity of the magnet that will be on the bottom of the RS Rotor disk is the opposite of the polarity of the magnets secured in the RS Magnet Mount. In other words they should attract! Note that in the picture above the RS Rotor is upside down to show both the reed actuator magnet on the side of the disk and the one that will \"lock\" the rotor into one of sixteen positions.", "step_imgs": ["https://cdn.instructables.com/FOZ/D445/JTON9R0L/FOZD445JTON9R0L.LARGE.jpg"], "step_title": "Step 5: Add the Rotor Magnets"}, {"step": 6, "steps_text": "Carefully slide the RS Magnet Mount to the bottom of the RS Body making sure that the small tab on the edge of the RS Magnet Mount is inserted into a grove on the inside bottom of the RS Body (below a reed switch) first and that the magnets are facing up. This will ensure the the magnets are lined up properly with the switches.", "step_imgs": ["https://cdn.instructables.com/FCP/OB20/JTON9R1Y/FCPOB20JTON9R1Y.LARGE.jpg"], "step_title": "Step 6: Install the Magnet Mount in the Body"}, {"step": 7, "steps_text": "Add the RS Rotor Gasket into the RS Body now. I think that it helps the switch rotate more easily.", "step_imgs": ["https://cdn.instructables.com/FLM/ZSD1/JTON9R4P/FLMZSD1JTON9R4P.LARGE.jpg"], "step_title": "Step 7: Add the Rotor Gasket"}, {"step": 8, "steps_text": "For testing purposes you can temporarily attach the RS Knob centered onto the RS Rotor with two sided tape. Note that the point on the knob should align with the magnet on the side of the RS Rotor.", "step_imgs": ["https://cdn.instructables.com/F9B/HMBC/JTON9R80/F9BHMBCJTON9R80.LARGE.jpg"], "step_title": "Step 8: Add the Knob"}, {"step": 9, "steps_text": "Carefully slide the RS Rotor into the RS Body. The magnet on the RS Rotor disk should be facing down. As you slowly turn the knob you should be able to feel the switch snap to the 16 magnetic \"detents\". There is even a satisfying click as the magnets come together.", "step_imgs": ["https://cdn.instructables.com/FWH/J93A/JTON9XBX/FWHJ93AJTON9XBX.LARGE.jpg"], "step_title": "Step 9: Insert the Rotor Into the Body"}, {"step": 10, "steps_text": "Connect a multimeter to the leads of each reed switch. When the arrow is pointing at the connected reed switch the multimeter should indicate that the circuit is closed. Conversely if not pointed at the connected reed switch it should show an open circuit.", "step_imgs": ["https://cdn.instructables.com/FAW/VCFR/JTON9RBM/FAWVCFRJTON9RBM.LARGE.jpg", "https://cdn.instructables.com/FYS/NY63/JTON9RBP/FYSNY63JTON9RBP.LARGE.jpg"], "step_title": "Step 10: Testing"}, {"step": 11, "steps_text": "So the switch is now ready for the next part of my Minivac 601 project. I'll be running a 4 mm shaft through the RS Rotor. One end of the shaft will come up from the bottom of the Decimal Input-Output panel seen above and be attached to the RS Knob for manual input. The other end will be attached to a low speed high torque motor via a couple of gears for automatic manipulation.\nI'd be very surprised if anyone actually needed a rotary switch exactly like the one I have described here (unless of course they end up building a Minivac 601). I do hope however that the ideas outlined here will be generally useful for anyone with a similar need.", "step_imgs": ["https://cdn.instructables.com/FY4/H8PC/JTON9YJO/FY4H8PCJTON9YJO.LARGE.jpg"], "step_title": "Step 11: Final Thoughts"}], "channel": ""}, {"category": "", "description": "As a teacher, I have always had a passion for creating and sharing maker projects and techy resources that help make the day to day classroom stuff better. I also really love using Google Education tools!\nGoogle does an amazing job of creating tools that simplify our lives in and out of the classroom and Google Forms is a perfect example.\nIf you haven't used Forms in the classroom, no worries! Forms is a tool that allows you to digitally collect and store all sorts of classroom data and it's really user-friendly.\nI made this Instructable to share a few of my favorite ways to use Google Forms in the classroom and provide you with some resources that I created to help jumpstart your creation and use of Forms in the classroom.\nFeel free to make a copy and then edit all of the templates I've included to fit your classroom needs and if you have any fun or unique ways that you use Google Forms please share them in the comments so we can keep the ideas flowing. :)", "title": "Google Forms in the Classroom", "url": "https://www.instructables.com/id/Google-Forms-in-the-Classroom/", "section": "technology", "steps": [{"step": 1, "steps_text": "Teach, Assess, Repeat\u2026 It\u2019s the classroom loop we often find ourselves in as we navigate this world of data-driven instruction. So let\u2019s get this one out of the way!\nGoogle Forms is a great tool for assessing students. It\u2019s easy to create Forms to assess the standards in almost every subject and the quizzes feature with auto-grading is a teacher time saver.\nI like to create quick checks and exit tickets for math that provide formative data to help me scaffold and support students through the concepts we cover.\nHere\u2019s an example Math Exit Ticket.", "step_imgs": ["https://cdn.instructables.com/F62/60AO/JTON0ZG3/F6260AOJTON0ZG3.LARGE.jpg"], "step_title": "Step 1: Assessments"}, {"step": 2, "steps_text": "Back to School Registration and Open House events are when we collect all that important parent/student information and a perfect opportunity to use Google Forms to simplify the process and save time.\nCreating a Back to School Form is easy and the same form can be used year after year with minimal tweaks as different information is needed.\nOnce you create your Parent/Student Information form, you can set up a computer station for parents to fill it out as they stop by your room during your registration or open house meet the teacher events. You can also share it with parents via email or a class newsletter.\nBonus: By having parents fill out the form digitally, all the important information you collect can populate into a Google Sheet that is stored and accessible through Google Drive from anywhere you are. It also saves you time by not having to copy the paper information into a digital document.\nHere\u2019s a great example you can use or modify to fit your needs: Back to School Form", "step_imgs": ["https://cdn.instructables.com/FFQ/PWSS/JTON11JX/FFQPWSSJTON11JX.LARGE.jpg"], "step_title": "Step 2: Collecting Parent/Student Information"}, {"step": 3, "steps_text": "When I started teaching, I created a Word Doc for parent conferences and I would print copies of it for every parent meeting so I could keep a record of the parent info, date/time of the meeting, conference notes, and any action plan or goals we set.\nAfter the parent conference, I would add the form to the \u201cParent Conferences\u201d tabbed section of my nifty teacher binder for quick reference when needed.\nIf any of that sounds familiar, you need Google Forms in your life!\nSave some trees and use this Parent Conference Notes Log! Feel free to copy and make it your own. :)", "step_imgs": ["https://cdn.instructables.com/FGB/O3SV/JTON11KS/FGBO3SVJTON11KS.LARGE.jpg"], "step_title": "Step 3: Organized Parent Conference Data Collection"}, {"step": 4, "steps_text": "Student Surveys will vary greatly depending on the grade level(s) and subjects you teach, but they can be created and given to students in just about every grade level.\nIf you have never given a survey to your students, now is a great time to start and Google Forms is a perfect survey creation tool to use.\nNeed student survey ideas? Here\u2019s an example Student Interest Survey and here's a few classroom ideas for inspiration:\nMath Data- Collect student data for use in math charts/graphs. For example, survey your students to find out their favorite breakfast cereals or candy and then use that data for students to graph.\n\nStudent Interest Surveys - At the beginning of the year, I like to give interest surveys to help me learn more about my new group of students. When I taught upper elementary students, I asked general questions (i.e. How many brothers and/or sisters do you have?, What hobbies do you have?) and a lot of \u201cfavorite\u201d questions (i.e. What\u2019s your favorite book?, movie?, video game?, Sport/Sports Team?, Ice Cream flavor? etc.).\nWhen I taught 6th grade STEM, I asked students questions that were more geared to their interests in different STEM subjects and how comfortable they were with different tools. I also asked them what they were most excited to learn in STEM that year which really helped inform some of my lesson planning. Then, at the end of the year, I gave a STEM exit survey with some of the same questions so I could compare the data and see how their ideas and opinions changed during the year.", "step_imgs": ["https://cdn.instructables.com/FIV/EE5T/JTON0ZFN/FIVEE5TJTON0ZFN.LARGE.jpg"], "step_title": "Step 4: Student Surveys"}, {"step": 5, "steps_text": "If you plan to use a lot of rubrics with your students, then peer reviews/rating activities are a terrific way to teach students how rubrics function and why they are important.\nAfter group projects and/or student presentations you can have students use a Google Form that you create using the scaled rating question options in Forms.\nThen, students can record their scale responses based on a peer review rubric or the rubric you plan to use to grade their assignment/presentation. I prefer the later so the students really understand what they will be graded on.\nHere's a Sample Peer Review Rating Form template.", "step_imgs": ["https://cdn.instructables.com/FN5/JT52/JTON0ZCH/FN5JT52JTON0ZCH.LARGE.jpg"], "step_title": "Step 5: Peer Review/Rating Activities"}, {"step": 6, "steps_text": "This is for all my elementary teacher friends! :)\nTypically, reading logs are sent home as part of the \"Read 20+ Minutes a Day\" type of homework, but digital reading logs can also become part of your 90 minute ELA Block and/or Reading Centers/Stations.\nUsing Google Forms, you can create reading logs that students complete after reading independently or after reading with you during small group.\nReading Logs can provide a quick check-in point for students to log where they are in the book or passages and they can also be a wonderful way for students to monitor their own understanding of the content.\nHere\u2019s a sample log I created: Digital Reading Log This Form is broken into sections that allow students to choose whether they are reading fiction or nonfiction and answer questions about their book based specifically on that factor. I seriously love the tools and features in Google Forms! :D", "step_imgs": ["https://cdn.instructables.com/FWM/0RI1/JTON0ZDN/FWM0RI1JTON0ZDN.LARGE.jpg"], "step_title": "Step 6: Digital Reading Logs"}, {"step": 7, "steps_text": "Whether you\u2019re trying to keep track of parent donated snack sign-ups or students leaving the classroom, Google Forms makes it easy. With just a few clicks of your mouse and strokes on the keyboard, you can have a quick Form that will log the needed information into a spreadsheet for all your data tracking needs.\nHere\u2019s an example for each of these situations:\nSnack Sign-Up Form\nClass Sign-Out Form\nDon't forget to share the ways you use Google Forms in the classroom in the comments below and if you use any of the examples in this instructable to make your own classroom Form please take a picture and post it as an \u201cI Made It\u201d. :)", "step_imgs": ["https://cdn.instructables.com/FF8/DPII/JTON0Z6J/FF8DPIIJTON0Z6J.LARGE.jpg", "https://cdn.instructables.com/F73/QW3Z/JTON0Z99/F73QW3ZJTON0Z99.LARGE.jpg"], "step_title": "Step 7: Sign Up or Sign Out Sheets"}], "channel": ""}, {"category": "", "description": "When I got my first 3D printer I was extremely happy with all the new possibilities to create things but after some time I noticed the limitations of 3D printing. Plastic is easy to melt, sometimes it's not mechanically resistant enough and most importantly sometimes doesn't look good. Don't take me wrong here, I love 3D printing and I like plastic (except plastic waste) but there are things that look, work or feel way better when made out of nonplastic material. Imagine all your furniture made out of plastic. Sometimes I prefer wood, when I need strength, metal (mostly aluminum) is a way to go. That's where CNC milling machines are used. Usually, the cost of such machine is really high, most of the hobbyist, small makers can't afford such expensive equipment. That's why the idea of building my own CNC machine sparked in my head. Of course building with bare hands wasn't an option for me, that's hard not only to make but also to document. I wanted to create an easy to replicate machine that anyone can make. I spent a lot of time on the design of it to make assembly simple and keep the price low. Then there was a lot of testing, redesigning and modifying to make it the best I could. I used as popular and easy to buy components as I could: Dremel, LMU12 bearings, Nema17 motors, Arduino, aluminum profiles and only free software. That's how I managed to keep the price of my machine under $300. I already published 6 youtube videos about this project and it is quite popular on Thingiverse so you may ask why I am posting instructable that late? That's because I wanted to finish my machine completely and make the most detailed instructable I have ever done. This project is the biggest one for me for a lot of reasons, I will talk about them through this instructable. Enjoy :)\nFollow me to don't miss my new projects:\nYouTube: https://goo.gl/x6Y32E\nFacebook: https://goo.gl/ZAQJXJ\nInstagram: https://goo.gl/JLFLtf", "title": "DIY 3D Printed Dremel CNC", "url": "https://www.instructables.com/id/DIY-3D-Printed-Dremel-CNC/", "section": "technology", "steps": [{"step": 1, "steps_text": "This instructable is as detailed as it could be but it's always good to see a video of how to make something or how stuff works. Above you can find my 6 videos about DIY Dremel CNC, maybe I will make some more in the future, I will also add them here, but you can subscribe to my channel to don't miss any of this videos and my fututre projects.", "step_imgs": [], "step_title": "Step 1: Watch All of the Videos!"}, {"step": 2, "steps_text": "Here you can find an Excel sheet with all of the parts, quantities, various links and comments. Below you can find a complete list of everything we need\nMechanical components:\nAluminum profiles 20x20mm 600mm long (X2)\nAluminum profiles 20x20mm 300mm long (X5)\n12mm rod 310mm (X2)\n12mm rod 530mm (X2)\n12mm rod 140mm (X2)\nLead screw 500mm (X2)\nLead screw 280mm (X1)\nLead screw 120mm (X1)\n12mm linear bearing (X12)\n608zz bearing (X4)\nT nut M5 (X36)\nM6 x 25mm screws (X4)\nM5 x 10mm screws (X34)\nM5 x 16mm screws (X10)\nM3 x 20mm screws (X8)\nM3 x 12mm screws (X32)\nElectronics components:\nStepper motors (X4)\nCNC shield (X1)\nStepper drivers (X4)\nArduino (X1)\nPower supply (X1)\nDC connector (X1)\nJumpers (X14)\nDremel 3000 (X1)", "step_imgs": ["https://cdn.instructables.com/F07/VOEO/JTOMZNDP/F07VOEOJTOMZNDP.LARGE.jpg", "https://cdn.instructables.com/FG4/COR1/JTOMZNE8/FG4COR1JTOMZNE8.LARGE.jpg", "https://cdn.instructables.com/FNK/6MAK/JTOMZNEU/FNK6MAKJTOMZNEU.LARGE.jpg", "https://cdn.instructables.com/F4H/Y8YR/JTOMZNGX/F4HY8YRJTOMZNGX.LARGE.jpg", "https://cdn.instructables.com/FCK/2JIS/JTOMZNHT/FCK2JISJTOMZNHT.LARGE.jpg"], "step_title": "Step 2: Parts"}, {"step": 3, "steps_text": "3D printed parts are very important in this project so I would like to talk more about how to print and post-process them.\nA lot of people may say that it's extremely important to keep infill super high but from what I noticed using very high infill doesn't help a lot, of course, there's nothing wrong with using high infill but in my opinion infill of about 20-40% is fine.\nI printed all of my parts with PLA but it's better to print them with PETG cost of PETG is almost the same and both of them are easy to print but PETG is a little bit more flexible so it's harder to break it.\nFor some of the files, you need to use supports, make sure to put them in the proper orientation so that there is not a lot of support material to remove and that you are able to remove it.\nYou don't have to print parts labeled as OLD, those are old versions of some files that I shared in case someone wants to use them.\nYou can also find .f3d, .iges and .step files so you can easily edit my project.\nBe careful while post-processing those parts, it's easy to break them. Also, make sure that you are able to fit all of the bearings inside, you should use a vise to put them in place so it should be tight. You may also need to sand slightly those pins that go into aluminum profiles it depends on the accuracy of your 3D printer.\nThere are also two \"tools\" those are not part of the CNC but are very useful to drill holes in aluminium profiles and wooden bed.", "step_imgs": ["https://cdn.instructables.com/F6I/BKNO/JTON3DTO/F6IBKNOJTON3DTO.LARGE.jpg"], "step_title": "Step 3: 3D Printing"}, {"step": 4, "steps_text": "Before assembling all of the components you may need to cut them to the proper length. Thanks to modular design it's up to you how long you want those components to be. I used 60cm and 30cm long aluminum profiles and 12mm rods. If you want to make a bigger machine you just have to use longer aluminum profiles, rods and lead screws, 3D printed parts stay the same. If you bought all of the parts cut to the length you wanted just skip this step.\nIf you have access to a miter saw use it to cut aluminum profiles that way you will have a perfectly straight edge of cut. I found those rods and lead screws impossible to cut with a hand saw so you need to use an angle grinder to do that.\nAt this point, it's also a good idea to put in place all of the bearings. I did it using a small vise, as I said depends on the quality of your 3D prints you may need to sand those slightly be careful because you don't want to break any part :)", "step_imgs": ["https://cdn.instructables.com/FW5/0RO6/JT4TTBME/FW50RO6JT4TTBME.LARGE.jpg", "https://cdn.instructables.com/FQR/UJX2/JT4TTCIB/FQRUJX2JT4TTCIB.LARGE.jpg", "https://cdn.instructables.com/FN4/R8MG/JT4TTCNN/FN4R8MGJT4TTCNN.LARGE.jpg", "https://cdn.instructables.com/F6A/HQJF/JT4TTCMH/F6AHQJFJT4TTCMH.LARGE.jpg", "https://cdn.instructables.com/FBS/73IY/JT4TTCLC/FBS73IYJT4TTCLC.LARGE.jpg", "https://cdn.instructables.com/FRV/UPUJ/JT4TTCJI/FRVUPUJJT4TTCJI.LARGE.jpg", "https://cdn.instructables.com/FPK/NOD1/JT4TTBUU/FPKNOD1JT4TTBUU.LARGE.jpg", "https://cdn.instructables.com/FV2/KI60/JTOMZNN6/FV2KI60JTOMZNN6.LARGE.jpg", "https://cdn.instructables.com/FQH/9L4H/JTOMZNP4/FQH9L4HJTOMZNP4.LARGE.jpg", "https://cdn.instructables.com/FL0/0WBA/JTOMZNR1/FL00WBAJTOMZNR1.LARGE.jpg", "https://cdn.instructables.com/F5I/JQBS/JTOMZNNH/F5IJQBSJTOMZNNH.LARGE.jpg"], "step_title": "Step 4: Prepare for Assembly"}, {"step": 5, "steps_text": "To make things easier we will start with the assembly of the Z axis. Put two rods in Z-axis carriage but not all the way through we have to put there Dremel holder too. Dremel holder should move freely on the linear bearings. 608zz beating should be already in place in the hole on the bottom of Z-axis carriage. Now we can install a stepper motor with a lead screw and 3D printed coupler. Fix the motor with M3 screws and make sure that both rods are secured with a screw at the bottom. To make it easier for further use point the stepper motor connector backward because that's where we will install electronics.", "step_imgs": ["https://cdn.instructables.com/FAA/U7ET/JTOMZNRR/FAAU7ETJTOMZNRR.LARGE.jpg", "https://cdn.instructables.com/FXG/7CFF/JTOMZNKM/FXG7CFFJTOMZNKM.LARGE.jpg", "https://cdn.instructables.com/FIX/CC31/JTOMZNS7/FIXCC31JTOMZNS7.LARGE.jpg", "https://cdn.instructables.com/FWZ/T5Y9/JTOMZNSN/FWZT5Y9JTOMZNSN.LARGE.jpg", "https://cdn.instructables.com/FFB/DX2R/JTOMZNSW/FFBDX2RJTOMZNSW.LARGE.jpg", "https://cdn.instructables.com/FO2/HLVC/JTOMZNTC/FO2HLVCJTOMZNTC.LARGE.jpg", "https://cdn.instructables.com/FU9/CTJT/JTOMZNTR/FU9CTJTJTOMZNTR.LARGE.jpg", "https://cdn.instructables.com/FPC/AKAW/JTOMZNU4/FPCAKAWJTOMZNU4.LARGE.jpg"], "step_title": "Step 5: Z Axis"}, {"step": 6, "steps_text": "Tighten brass nuts to both 3D printed parts. Grab one of the X-axis carriages and join two rods to it. Then put a Z-axis carriage on those rods and close with the other X-axis carriage on the opposite side. Attach a motor with a lead screw to 3D printed part with M3 screws.", "step_imgs": ["https://cdn.instructables.com/F9R/MD4Y/JTOMZNIJ/F9RMD4YJTOMZNIJ.LARGE.jpg", "https://cdn.instructables.com/FFM/W75W/JTOMZNJ8/FFMW75WJTOMZNJ8.LARGE.jpg", "https://cdn.instructables.com/FOZ/0BLZ/JTOMZNUT/FOZ0BLZJTOMZNUT.LARGE.jpg", "https://cdn.instructables.com/F3M/VXKV/JTOMZNV8/F3MVXKVJTOMZNV8.LARGE.jpg", "https://cdn.instructables.com/F8Y/JAO8/JTOMZNVS/F8YJAO8JTOMZNVS.LARGE.jpg", "https://cdn.instructables.com/F95/I3XA/JTOMZNW0/F95I3XAJTOMZNW0.LARGE.jpg", "https://cdn.instructables.com/F6G/NYZ8/JTOMZNW5/F6GNYZ8JTOMZNW5.LARGE.jpg", "https://cdn.instructables.com/FRE/4TI6/JTOMZNWY/FRE4TI6JTOMZNWY.LARGE.jpg", "https://cdn.instructables.com/FPT/ZIJ2/JTOMZNXC/FPTZIJ2JTOMZNXC.LARGE.jpg"], "step_title": "Step 6: X Axis"}, {"step": 7, "steps_text": "Y-axis is directly connected to the main frame of this machine. It's made out of 20x20mm aluminum extrusion profiles connected together with screws to ensure rigidity. I choose 20x20mm profiles because those are easy to get (at least here in Poland), not that expensive and fit the size of this machine. Bigger profiles could be used but for such a small machine it wouldn't make a lot of difference. Because this machine is modular you don't have to use specific lengths of the profiles. Do you want to make a big machine? -> use longer profiles. Do you want to make a smaller machine? -> use shorter profiles. I cut my profiles to 60cm (we need two of them) and 30cm (we need 4). Once you have profiles cut to a length that you want we can start drilling holes. We need to drill holes on the ends of longer profiles, to make that easier I designed 3D printable tool that you can put on the profile and then drill a hole with 6.5mm drill bit. It's 3D printable so made out of plastic, it's easy to drill it out but we only need to make 4 holes with this tool so that shouldn't be a big problem. On both ends of 2 shorter profiles, we have to make a thread with a tap. It's a good idea to pre-drill a hole for the tap with 5.2mm drill bit and then create an M6 thread.\nLet's start by attaching stepper motors to 3D printed parts with M3 screws. We can also fix couplers to the motors. Put in place M5 screws with hammer nut to make it easier to assemble. You can slide 3D printed part with a motor on to the longer aluminum profile. On the other side, you can fix a shorter profile as shown on the pictures. Tighten the screws with hammer nuts. Also, don't forget to tighten an M6 screw on the side of the longer aluminum profile. Do the same on the other side. Attach middle brackets (you can install as many as you want (2 or 3) with corner connectors, M5 screws and hammer nuts.\nWe already installed Y-axis motor supports and lead screw support, right now we have to attach lead screws and Y-axis rods. Again thanks to the modularity of this machine it's up to you how long rods and lead screws will be (You have to figure out good length so that it will work with the length of your aluminum profiles).\nIt's time to connect X axis with the Y-axis, grab the X-axis (with Z-axis already installed) and put it on the rods and lead screws, you will have to rotate lead screws with your fingers to push the X-axis back a little bit", "step_imgs": ["https://cdn.instructables.com/FWZ/DE20/JTOMZNXK/FWZDE20JTOMZNXK.LARGE.jpg", "https://cdn.instructables.com/FLL/JY63/JTOMZNXL/FLLJY63JTOMZNXL.LARGE.jpg", "https://cdn.instructables.com/FYB/6PB3/JTOMZNXO/FYB6PB3JTOMZNXO.LARGE.jpg", "https://cdn.instructables.com/FFB/8WUU/JTOMZNXV/FFB8WUUJTOMZNXV.LARGE.jpg", "https://cdn.instructables.com/FPG/IBJR/JTOMZNYX/FPGIBJRJTOMZNYX.LARGE.jpg", "https://cdn.instructables.com/FF3/8EK6/JTOMZNZG/FF38EK6JTOMZNZG.LARGE.jpg", "https://cdn.instructables.com/FMY/I7NV/JTOMZO3M/FMYI7NVJTOMZO3M.LARGE.jpg", "https://cdn.instructables.com/FVM/VC9X/JTOMZO1K/FVMVC9XJTOMZO1K.LARGE.jpg", "https://cdn.instructables.com/F4Z/O5V6/JTOMZO6X/F4ZO5V6JTOMZO6X.LARGE.jpg", "https://cdn.instructables.com/FTP/SWKW/JTOMZO74/FTPSWKWJTOMZO74.LARGE.jpg", "https://cdn.instructables.com/FC3/5TRE/JTOMZO7G/FC35TREJTOMZO7G.LARGE.jpg", "https://cdn.instructables.com/FZQ/HOZ9/JTOMZO7U/FZQHOZ9JTOMZO7U.LARGE.jpg", "https://cdn.instructables.com/FIB/VVZU/JTOMZO90/FIBVVZUJTOMZO90.LARGE.jpg", "https://cdn.instructables.com/FXQ/U24O/JTON4846/FXQU24OJTON4846.LARGE.jpg", "https://cdn.instructables.com/F5U/IAR7/JTOMZO97/F5UIAR7JTOMZO97.LARGE.jpg", "https://cdn.instructables.com/FG0/YVZV/JTOMZO9E/FG0YVZVJTOMZO9E.LARGE.jpg", "https://cdn.instructables.com/F5K/6QDO/JTOMZO9P/F5K6QDOJTOMZO9P.LARGE.jpg", "https://cdn.instructables.com/F43/A8AF/JTOMZOA2/F43A8AFJTOMZOA2.LARGE.jpg", "https://cdn.instructables.com/FLU/P2Z6/JTOMZOAW/FLUP2Z6JTOMZOAW.LARGE.jpg", "https://cdn.instructables.com/FIP/V92S/JTOMZOB0/FIPV92SJTOMZOB0.LARGE.jpg", "https://cdn.instructables.com/F46/1OVB/JTOMZOB9/F461OVBJTOMZOB9.LARGE.jpg", "https://cdn.instructables.com/F4B/XPQK/JTOMZOBJ/F4BXPQKJTOMZOBJ.LARGE.jpg", "https://cdn.instructables.com/FRF/0VOJ/JTOMZOC4/FRF0VOJJTOMZOC4.LARGE.jpg", "https://cdn.instructables.com/FZ9/FF21/JTOMZOC9/FZ9FF21JTOMZOC9.LARGE.jpg", "https://cdn.instructables.com/FH3/PP6P/JTOMZOCH/FH3PP6PJTOMZOCH.LARGE.jpg"], "step_title": "Step 7: Y Axis and Aluminium Frame"}, {"step": 8, "steps_text": "I had to find something that would be good for a table of the CNC. Table with slots would be great but it is expensive. I could make it out of aluminum plate or even steel but that's hard to cut (especially to cut it straight with an angle grinder). As most of us (makers) I don't have a huge CNC plasma, waterjet or laser that can cut such materials but I have a jigsaw so I can make it out of plywood. I finally used table saw to cut it straight but corners should be cut with jigsaw or handsaw. Plywood is strong enough, it's easy to cut and you can easily buy it anywhere so it seems to be a perfect choice.\nWith another 3D printed tool, I drilled holes on the edge of this plywood to attach it to an aluminum frame with M5x10mm screws and hammer nuts.\nBecause I don't want to destroy this plywood I added a wasteboard (MDF) on the top so that I can cut all the way through the material.\nI also added threaded inserts to the table so that I can use M5 screws to attach material to the table of CNC. You can buy something like this online, you need to drill a hole and put it in place with a hammer, simple and cheap upgrade that is really useful.\nWasteboard - a piece of material that you can mill in when you mill all the way through the material and you don't want to destroy table of your CNC. It should be replaced after some time.", "step_imgs": ["https://cdn.instructables.com/FL7/J87C/JTOMZNH5/FL7J87CJTOMZNH5.LARGE.jpg", "https://cdn.instructables.com/FO0/WR4L/JT4TTB6V/FO0WR4LJT4TTB6V.LARGE.jpg", "https://cdn.instructables.com/FCI/UKD5/JT4TTB6W/FCIUKD5JT4TTB6W.LARGE.jpg", "https://cdn.instructables.com/FMD/GSVP/JT4TTCH5/FMDGSVPJT4TTCH5.LARGE.jpg", "https://cdn.instructables.com/F3M/WDR5/JT4TTCH4/F3MWDR5JT4TTCH4.LARGE.jpg", "https://cdn.instructables.com/FOV/OTZP/JTOMZOCN/FOVOTZPJTOMZOCN.LARGE.jpg", "https://cdn.instructables.com/FTN/QDUZ/JTOMZOCT/FTNQDUZJTOMZOCT.LARGE.jpg", "https://cdn.instructables.com/FEU/352P/JTOMZOEQ/FEU352PJTOMZOEQ.LARGE.jpg", "https://cdn.instructables.com/FIB/COR9/JTOMZOEZ/FIBCOR9JTOMZOEZ.LARGE.jpg", "https://cdn.instructables.com/FYG/LSGQ/JTOMZOFJ/FYGLSGQJTOMZOFJ.LARGE.jpg", "https://cdn.instructables.com/FBT/4SGV/JTOMZOFN/FBT4SGVJTOMZOFN.LARGE.jpg", "https://cdn.instructables.com/FUJ/V81A/JTOMZOGW/FUJV81AJTOMZOGW.LARGE.jpg", "https://cdn.instructables.com/FTZ/XEDU/JTOMZOH6/FTZXEDUJTOMZOH6.LARGE.jpg"], "step_title": "Step 8: Table"}, {"step": 9, "steps_text": "As the name of this project insists as a spindle I use a Dremel tool model 3000, there are already some people that successfully use a different model like 4000 or even completely different spindles. At the end of this instructable, I also write a little bit about the different spindle that I want to use with this machine. That's because Dremel limit's you only to 1/8 inch bits and also because of high rpm and low torque it's not ideal for machining for example aluminum (but it's possible). As long as you only want to machine wood, MDF, acrylic and even for delicate aluminum job Dremel works fine but there is no way to use bigger bit's for faster machining, there are not as many bits with a 1/8 inch shank as others and Dremel is relatively hard to mount.\nBut still, this is a super cheap entry-level solution for your first CNC with speed control and it's really good quality. You can always upgrade it later.\nAt the beginning of this project I wanted to add a relay to turn on and off the Dremel with a G-code command but because of some problems (I would have to add a socket to plug in a Dremel and then connect that to a wall outlet and protect all of that so that it would be safe, it's not worth it and it's hard to fit all of that on such small machine) I decided not to use it.\nI was thinking a lot about the way of how Dremel should be attached to the spindle holder. Here is how I did it. There is a nut on the bottom of the Dremel, I thought that I can use it to fix it to the 3D printed part. That didn't work as good as I wanted to. So I added a support structure in the middle of the Dremel with a clamp so that you can squeeze it with M3 screws and nuts.\nSo every time I am machining something I have to remember to turn on the Dremel, I can also easily control the RPM of the Dremel with the slider on the top of it.", "step_imgs": ["https://cdn.instructables.com/FCI/26AF/JTON47LA/FCI26AFJTON47LA.LARGE.jpg", "https://cdn.instructables.com/F0Z/CATH/JTON47LB/F0ZCATHJTON47LB.LARGE.jpg", "https://cdn.instructables.com/F96/XV47/JTON47LC/F96XV47JTON47LC.LARGE.jpg", "https://cdn.instructables.com/FTU/RM9C/JTON47LD/FTURM9CJTON47LD.LARGE.jpg", "https://cdn.instructables.com/FHH/F8J7/JTON47MW/FHHF8J7JTON47MW.LARGE.jpg", "https://cdn.instructables.com/FME/4OTG/JTON47MX/FME4OTGJTON47MX.LARGE.jpg"], "step_title": "Step 9: Spindle"}, {"step": 10, "steps_text": "I got a lot of questions about how to install GRBL on Arduino. Don't worry that's very simple. We will need an Arduino with a USB cable and software that you can download here: https://github.com/grbl/grbl\nOnce you have a .ZIP file downloaded from a link above you can add to Arduino IDE as a library. Go to file examples and open an example from GRBL tab. You should see just one line of code, nothing more, that's ok. Connect Arduino to the computer and upload a program just like any normal program. And that's it GRBL is installed on Arduino, you don't have to modify any code. If you have problems with this step try to google \"how to install GRBL on Arduino\" you will find tons of tutorials on how to do that and how to troubleshoot your problems.\nThere is also one thing to change, you can do this through the serial monitor in Arduino IDE or console in CNCjs. All we have to do is send 3 simple commands:\n$100 = 400\n$101 = 400\n$102 = 400\nSend those commands separately. Depends on the resolution of your stepper motors and microstepping that you used you may need to use a different value than 400.", "step_imgs": ["https://cdn.instructables.com/FOU/SS5T/JTON3FE0/FOUSS5TJTON3FE0.LARGE.jpg", "https://cdn.instructables.com/FHN/U474/JTON4JDA/FHNU474JTON4JDA.LARGE.jpg", "https://cdn.instructables.com/FLH/2RS4/JTON4JDB/FLH2RS4JTON4JDB.LARGE.jpg", "https://cdn.instructables.com/F8B/959D/JTON4JE4/F8B959DJTON4JE4.LARGE.jpg"], "step_title": "Step 10: Install GRBL"}, {"step": 11, "steps_text": "That was a really hard part for a lot of people, it's hard to make a schematic of connection between a CNC shield and stepper motors because there is no such part as CNC shield in almost any software. Almost any. I found a CNC shield part for fritzing! Isn't that great, fritzing is the easiest schematic software out there so anyone can understand it :) I found the CNC shield right here.\nBefore we will plug 4 stepper drivers to the CNC shield (there are only three on the schematic but we need 4), we need to connect jumpers because connectors for those are under stepper drivers. Those jumpers enable micro stepping we need to have all 3 connectors connected so that's the total of 12 jumpers but we also need 2 of them to mirror the movement of Y axis motor to the A motor and we can do so by putting two jumpers on the left side of the shield. Now you can plug stepper drivers and then stepper motors. How to plug stepper motors? It depends on the motors that you have there is no easy answer. If you notice that your motor is going in the oposite direction than it should you need to plug the motor the other way around (disconnect it, rotate 180 degrees around Z axis and plug back in place). Some people also use endstops in their Dremel CNC but I don't, if you want you can connect endstops to the right side of the CNC shield. And in the end, we can connect the power supply or the connector to the shiled to the screw terminal labeled as 12-36V. And that's all for the connection, really not that hard :)", "step_imgs": ["https://cdn.instructables.com/FL8/JSKJ/JSYZE0HO/FL8JSKJJSYZE0HO.LARGE.jpg", "https://cdn.instructables.com/FXU/7SU1/JTON47MZ/FXU7SU1JTON47MZ.LARGE.jpg", "https://cdn.instructables.com/FOK/A82U/JTON47N2/FOKA82UJTON47N2.LARGE.jpg", "https://cdn.instructables.com/FJQ/RIDD/JTON47N3/FJQRIDDJTON47N3.LARGE.jpg", "https://cdn.instructables.com/FT2/DEWD/JTON47N5/FT2DEWDJTON47N5.LARGE.jpg", "https://cdn.instructables.com/FM1/2TGC/JTON47N6/FM12TGCJTON47N6.LARGE.jpg", "https://cdn.instructables.com/FJY/YB13/JTON47O4/FJYYB13JTON47O4.LARGE.jpg", "https://cdn.instructables.com/FEG/9YX1/JTON47O7/FEG9YX1JTON47O7.LARGE.jpg", "https://cdn.instructables.com/F08/C7MK/JTON47XC/F08C7MKJTON47XC.LARGE.jpg", "https://cdn.instructables.com/FEH/HIGD/JTON47YR/FEHHIGDJTON47YR.LARGE.jpg", "https://cdn.instructables.com/FPL/6J98/JTON47ZE/FPL6J98JTON47ZE.LARGE.jpg"], "step_title": "Step 11: Electronics"}, {"step": 12, "steps_text": "Initially, I used a 12V 30A power supply, but that was overkill for this project. I swap this power supply with my lab bench power supply to see how much current is needed to run it. I found out that max current consumption is smaller than 2A so I bought a 12V 3A power supply. Generally, there is nothing wrong with having too powerful power supply but there is no need to spend the extra money and this huge, bulky, 30A beast is just ugly. Right now I have a simple power supply with DC plug so I can easily connect it to the machine. Keep in mind that depends on the motors and other electronics that you use you may need a stronger power supply than 3A.", "step_imgs": ["https://cdn.instructables.com/F62/71D1/JTOMZNF8/F6271D1JTOMZNF8.LARGE.jpg"], "step_title": "Step 12: Power Supply"}, {"step": 13, "steps_text": "It's always good to keep your cables tidy. You can find a lot of different ways to do the cable management, I prefer to use this cable wrap thing it's inexpensive and works well for various cables. You may also use cable drag chain but then you have to figure out how to mount it to the machine, it's more professional but harder to use. Keep in mind that cable management is very important in CNC machine because you don't want to cut cables while milling and you also don't want those cables to jam your machine and destroy your material while milling.", "step_imgs": ["https://cdn.instructables.com/FIM/N7C5/JTON47VE/FIMN7C5JTON47VE.LARGE.jpg", "https://cdn.instructables.com/FDU/49F5/JTON47WD/FDU49F5JTON47WD.LARGE.jpg", "https://cdn.instructables.com/FRO/XTXE/JTON47WR/FROXTXEJTON47WR.LARGE.jpg"], "step_title": "Step 13: Cable Management"}, {"step": 14, "steps_text": "That's the software for the computer, through it we will control our machine, send gcode and change some parameters through its console in GRBL. There is a lot of different gcode sender options like GRBL controller, mach3 and path pilot but I chose CNCjs because it's free and unlike every other software it looks incredibly good and is easy to control! You can install it on mac, windows and Linux another great advantage! You can even install it on a raspberry pi and control through browser away from the machine! All of that for free in an open source software! Sound's like a perfect solution and it really is so far for me. You can download it here:\nhttps://cnc.js.org\nIf you have problems with connecting to the machine: most likely that's because wrong baud rate try to change the baud rate in CNCjs to 11520.", "step_imgs": ["https://cdn.instructables.com/FO3/V5J6/JTON3F1R/FO3V5J6JTON3F1R.LARGE.jpg", "https://cdn.instructables.com/FAE/Z97S/JTON480Z/FAEZ97SJTON480Z.LARGE.jpg"], "step_title": "Step 14: CNCjs"}, {"step": 15, "steps_text": "Fusion 360 do I have to explain what is it? If you have ever designed anything with CAD software you probably heard about Fusion 360. And to keep it short that's the best software ever! You can do anything with this (CAD, CAM, render, animations, simulations, collaborative design and even more) and it works both on mac and windows. I used Fusion to design Dremel CNC and right now I use Fusion to create Gcode and mill things with this machine. Above you can find my video about how to use Fusion360 and CNCjs with Dremel CNC. If you need some more info on that check out NYC CNC, great YouTube channel about CNC machining.", "step_imgs": ["https://cdn.instructables.com/FND/A7CP/JTON3EM3/FNDA7CPJTON3EM3.LARGE.jpg"], "step_title": "Step 15: Fusion 360"}, {"step": 16, "steps_text": "Safety is a very important aspect of CNC machining, there is a lot of dangerous things that can damage you, you don't want to be damaged so here are my tips on how to stay safe with such machine. Fortunately, NEMA 17 motors aren't crazy fast and torque is as great as with some servo motors used in industrial CNC machines. But there is still a fast spinning spindle and danger of crushing your fingers. While machining there are chips flying all over the place so we need to have a safety glasses (because safety is number one priority) and depends on the material that we are machining (wood, MDF) we may need a mask. It's also a good idea to build an enclosure for DIY Dremel CNC and some people already build one, I am also planning to do this in the near future. Another safety improvement would be to add a big red safety switch so that in case something bad happens you can easily stop the machine (we can also do that in CNCjs but it takes more time and isn't that reliable). Keep in mind that material and bit may be hot after machining and make sure that machine finished its operation before putting your hands in the working area. Machining for a longer period of time is very uncomfortable for ears so some kind of hearing protection is recommended. I also thought about using active noise canceling headphones, should be perfect for a CNC machine because noise is very consistent but I don't have any headphones like this and those are quite expensive. Keep in mind that those are just some tips from me about safety while dealing with a CNC machine, there is a lot of things that can go wrong and you always have to be careful and think in order to be safe.", "step_imgs": [], "step_title": "Step 16: Safety"}, {"step": 17, "steps_text": "The result of this project just blows my mind! When I started it I just wanted to see if it is possible to create a 3D printed CNC machine, I wanted to build a tool that I will be able to use in my further projects. Right from the beginning of it, I knew that I will publish online all of the files and the instruction but I had never thought that this project will be so popular and that so many people will build it (check out next step). That's the biggest project of mine so far! Because of some problems and a lot of upgrades and tweaks that I did to the machine, it took me a long time before finishing this instructable, but I wanted it to be perfect and as detailed as possible so that everyone will be able to easily build an inexpensive CNC machine. Above you can see the newest images of the Dremel CNC with nice cable management and some small upgrades. There are also images of stuff that I milled on my machine. If you want to see what others made on Dremel CNC joint the Facebook group!", "step_imgs": ["https://cdn.instructables.com/F1T/8QHN/JTON48JA/F1T8QHNJTON48JA.LARGE.jpg", "https://cdn.instructables.com/FB1/P1K7/JTON48JC/FB1P1K7JTON48JC.LARGE.jpg", "https://cdn.instructables.com/FIM/BIQ1/JTON4A8B/FIMBIQ1JTON4A8B.LARGE.jpg", "https://cdn.instructables.com/FWB/WEH0/JT4TTBY4/FWBWEH0JT4TTBY4.LARGE.jpg", "https://cdn.instructables.com/FQ3/45YF/JT4TTBW6/FQ345YFJT4TTBW6.LARGE.jpg"], "step_title": "Step 17: Result"}, {"step": 18, "steps_text": "Choosing proper feeds and depth of cut is really just about experimenting. Start slow and shallow, slowly increase the speed and see what happen. Be careful, it's easy to break a milling bit. Keep in mind that going slow is as bad as going too fast, you need to be in between for best results. Here are the settings that I use:\nWood, MDF:\nFeed: 800mm/min\nDepth of cut: 3mm\nUsually, I use adaptive clearing for everything and 2d contour for contour cut\nDremel switch 8/10\nAcrylic:\nFeed: 500mm/min\nDepth of cut: 1mm\nDremel switch 6/10\nAluminum:\nFeedrate: 800mm/min\nDepth of cut: 0.2mm\nDremel at full speed\nKeep in mind that depends on your setup those values may not work at all!!!\nAnd here are milling bits that I am using:\nFor wood\nFor aluminum/acrylic", "step_imgs": ["https://cdn.instructables.com/FGG/GF74/JTON7D38/FGGGF74JTON7D38.LARGE.jpg", "https://cdn.instructables.com/FE5/66UU/JTON7D5W/FE566UUJTON7D5W.LARGE.jpg"], "step_title": "Step 18: How to Mill?"}, {"step": 19, "steps_text": "When I noticed that there is quite a lot of people on YouTube and Facebook asking for help regards to this project I decided to start a Facebook group so that everyone can help each other and share experiences. Starting a Facebook group was a great decision. Right now (March 2019) there are over 1200 people in the group, a lot of questions asked every week and even more great answers. There were also some good ideas about the project so according to the people from the group I did some changes to this machine. It's really amazing to see that many people from all over the world hyped about my project that started just as a small idea in my head. I even asked people in the group, where they are from and created a map with all of those places (see it above) AMAZING! All of the continents except Antarctica and I don't expect Dremel CNC to show up right there soon :)\nThe community behind this project is incredible! If you have some problems and want to ask a question - ask on the Facebook group.\nHuge thanks to everyone in the group for helping each other!", "step_imgs": ["https://cdn.instructables.com/FPC/7D3X/JTON3FTE/FPC7D3XJTON3FTE.LARGE.jpg", "https://cdn.instructables.com/FXA/Y0R8/JTON6U1B/FXAY0R8JTON6U1B.LARGE.jpg", "https://cdn.instructables.com/F7B/SXKW/JTON6YJ1/F7BSXKWJTON6YJ1.LARGE.jpg", "https://cdn.instructables.com/FHY/1WWV/JTON6YKJ/FHY1WWVJTON6YKJ.LARGE.jpg", "https://cdn.instructables.com/FJM/15GH/JTON6YM0/FJM15GHJTON6YM0.LARGE.jpg", "https://cdn.instructables.com/F35/Q9AL/JTON6YNH/F35Q9ALJTON6YNH.LARGE.jpg", "https://cdn.instructables.com/FEK/I6LP/JTON6YS3/FEKI6LPJTON6YS3.LARGE.jpg", "https://cdn.instructables.com/FSZ/X9GB/JTON6YOZ/FSZX9GBJTON6YOZ.LARGE.jpg", "https://cdn.instructables.com/FQ7/NYU0/JTON6YQH/FQ7NYU0JTON6YQH.LARGE.jpg", "https://cdn.instructables.com/FNP/H2MC/JTON6YTS/FNPH2MCJTON6YTS.LARGE.jpg", "https://cdn.instructables.com/F23/W7KX/JTON6YVI/F23W7KXJTON6YVI.LARGE.jpg", "https://cdn.instructables.com/FFH/S33M/JTON6YX1/FFHS33MJTON6YX1.LARGE.jpg"], "step_title": "Step 19: Community"}, {"step": 20, "steps_text": "This project grew so much that you can find a lot of different versions of my design online, there are holders for different tools like a laser or vinyl cutter. I also redesigned some of the files so those are a little bit different from the original version that I still use. I will try to put all of the links below to the remixes and everything that is relevant:\nRemix by FrancescoF\nTighter Tolerances and easier assembly by David Dienhart\nGeneric mount by Sletan\n52mm Spindle Mount\nVinyl cutter mount by MAILLERE Brigitte\nX axis holder with an additional aluminum profile.\nDremel 395 Mount by Chrome98\nDremel 395 Z Axis Carriage by cadbury204\nDIY Dremel CNC - X Axis remix by Bob123bob\nDIY Dremel CNC_Tool_Holder by MarkBinary\nI also upgraded the CNC with threaded inserts embedded in the table of the CNC and covers for lead screw to protect it from dust and chips.", "step_imgs": ["https://cdn.instructables.com/FFA/JINV/JTON47L2/FFAJINVJTON47L2.LARGE.jpg", "https://cdn.instructables.com/FPJ/DB7D/JTON47L6/FPJDB7DJTON47L6.LARGE.jpg"], "step_title": "Step 20: Updates & Upgrades"}, {"step": 21, "steps_text": "That's it for this project! I hope you enjoyed this instructable :) If you have any question ask them in the Facebook group or in the comments below! I would also love to hear what you think about the project :D\nHappy making!", "step_imgs": ["https://cdn.instructables.com/FEZ/YR5E/JTON48JK/FEZYR5EJTON48JK.LARGE.jpg"], "step_title": "Step 21: Conclusion"}], "channel": ""}, {"category": "", "description": "https://youtu.be/Ma4QnfQ7Dxo\nWell... I'm pretty sure that you don't want a phone that just plays hold music...\nBut there are countless other exciting projects you can make with this very basic hack of these readily available \"desk\" phones.\nExcited to see what other projects come out of this Instructable : )\nHave fun!", "title": "Greatest Holdies: I Hacked an Old Phone to Play the Greatest Hold Music.", "url": "https://www.instructables.com/id/Greatest-Holdies-I-Hacked-an-Old-Phone-to-Play-the/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts:\nArduino Mega\nAdafruit Music Maker Shield w/ 3W Amp\nUltrasonic Rangefinder\n3W Speaker\nPotentiometers\nPower Supply\nMicro SD\nAnd of course, an old phone! For reasons I can't quite understand there are many cheap options for phones like this on Amazon. Who is buying them, and why? Here are some Amazon options:\nOld phone A (used in this hack)\nOld phone B\nTotal cost for this project will be ~130$", "step_imgs": ["https://cdn.instructables.com/FYB/STFD/JTON44OH/FYBSTFDJTON44OH.LARGE.jpg"], "step_title": "Step 1: Parts Parts Parts"}, {"step": 2, "steps_text": "Open it up.\nWe can throw out the bell.\nSee that little white plastic lever on the circuitboard? That is what detects if the phone is hung up. We are going to use that because it is quite annoying to build our own switch for this.\nAlso note the color of the wires which connect to the handset speaker: red and green. (yellow and black are for the mic).", "step_imgs": ["https://cdn.instructables.com/F05/PX0Q/JTON44OP/F05PX0QJTON44OP.LARGE.jpg", "https://cdn.instructables.com/F6Y/XZ0B/JTON44OS/F6YXZ0BJTON44OS.LARGE.jpg", "https://cdn.instructables.com/F5S/PPRH/JTON44OQ/F5SPPRHJTON44OQ.LARGE.jpg", "https://cdn.instructables.com/FLG/N7H5/JTON44P2/FLGN7H5JTON44P2.LARGE.jpg"], "step_title": "Step 2: Check It Out"}, {"step": 3, "steps_text": "In replace of the bell, glue in your 3W speaker.\nI cut away the supports that were in the way.", "step_imgs": ["https://cdn.instructables.com/FC8/FVL9/JTON44OX/FC8FVL9JTON44OX.LARGE.jpg"], "step_title": "Step 3: Install Our 3W Speaker"}, {"step": 4, "steps_text": "These are the points that we need to solder on the existing PCB to intercept the hangup switch. I connected my two green wires to them.\nDon't worry if you have a slightly different phone. All phones will have a switch similar to this and you can use a multimeter tool to detect which pins go HIGH/LOW when the switch is pressed.", "step_imgs": ["https://cdn.instructables.com/F3E/DD0X/JTON44P1/F3EDD0XJTON44P1.LARGE.jpg"], "step_title": "Step 4: Intercept the Hangup Trigger"}, {"step": 5, "steps_text": "Great instructions on the Adafruit page for building your MP3 Shield: https://learn.adafruit.com/adafruit-music-maker-shield-vs1053-mp3-wav-wave-ogg-vorbis-player\nRemember to close the 3pins that enable it to be used on an Arduino Mega.\nAnd I also closed the pins that give it a +12db sound boost. It sounds like hell once these are closed, but whatever, this is hold music, right?", "step_imgs": ["https://cdn.instructables.com/F4B/7FKD/JTON44OI/F4B7FKDJTON44OI.LARGE.jpg", "https://cdn.instructables.com/FAN/PEIU/JTON44OK/FANPEIUJTON44OK.LARGE.jpg"], "step_title": "Step 5: Build the MP3 Shield"}, {"step": 6, "steps_text": "Thankfully on my keypad the rows and columns were numbered on the circuitboard.\nSometimes keypads have 8 wires. Sometimes they have 7.\nMake note of these numbers and what Arduino pins they are plugged into. You will need to enter this into the code later.", "step_imgs": ["https://cdn.instructables.com/FK6/QZ0I/JTON44P8/FK6QZ0IJTON44P8.LARGE.jpg"], "step_title": "Step 6: Intercept the Keypad"}, {"step": 7, "steps_text": "Well, sadly, the LED on my phone was bust. But I am sure it works on other phones. Why not put it to use? You may want to add a resistor because I didn't see one on the tiny circuitboard the LED is mounted on.", "step_imgs": ["https://cdn.instructables.com/FQV/ZVFP/JTON44PA/FQVZVFPJTON44PA.LARGE.jpg"], "step_title": "Step 7: Intercept the LED"}, {"step": 8, "steps_text": "We use the proximity sensor to detect if someone is standing in front of the phone, and if so, it starts ringing. This is a great way to get people interacting with your phone without you being there. Who can resist an ambiguous bright red ringing phone? The answer is, no one.\nDrill a hole carefully (start with a small bit and increase size). You can mount these ultrasonic rangefinders on the back side and even cover them up a bit and they will work just fine. I added a small acrylic piece for cosmetic purposes but if your drilling is good you shouldn't need it.", "step_imgs": ["https://cdn.instructables.com/F7H/C0GD/JTON44PN/F7HC0GDJTON44PN.LARGE.jpg", "https://cdn.instructables.com/F16/EW6X/JTON44PF/F16EW6XJTON44PF.LARGE.jpg", "https://cdn.instructables.com/FHN/O3OZ/JTON44PX/FHNO3OZJTON44PX.LARGE.jpg"], "step_title": "Step 8: Install Our Proximity (Motion) Sensor"}, {"step": 9, "steps_text": "Left goes to the handset. Right goes to the speaker. Don't mix them up!", "step_imgs": ["https://cdn.instructables.com/F6A/IC9P/JTON44PB/F6AIC9PJTON44PB.LARGE.jpg"], "step_title": "Step 9: Connect the Audio: Speaker and Handset"}, {"step": 10, "steps_text": "These are not essential but nice to have in case you want to tune some variables without having to re-upload the code every time.\nI added two tuning dials. One for the distance (proximity) at which the phone is triggered.\nThe second is the duration before it starting ringing again after hung up.", "step_imgs": ["https://cdn.instructables.com/FT1/5BY5/JTON44PD/FT15BY5JTON44PD.LARGE.jpg", "https://cdn.instructables.com/FJY/WJYD/JTON44PU/FJYWJYDJTON44PU.LARGE.jpg", "https://cdn.instructables.com/FHZ/M4Y8/JTON44PJ/FHZM4Y8JTON44PJ.LARGE.jpg", "https://cdn.instructables.com/F6V/QWC3/JTON44Q1/F6VQWC3JTON44Q1.LARGE.jpg"], "step_title": "Step 10: Add the Tuning Dials"}, {"step": 11, "steps_text": "There is a very convenient screw hole that allows you to screw in the Arduino Mega right in between the speaker and the existing circuit board. It's like this phone wants to be hacked, right?\nAlso I spliced the power supply and soldered it directly to the Vin on the board. This saves space a bit.\nEverything fits in there nicely.", "step_imgs": ["https://cdn.instructables.com/FIH/YCZ6/JTON44RD/FIHYCZ6JTON44RD.LARGE.jpg", "https://cdn.instructables.com/FAN/MOC4/JTON44P4/FANMOC4JTON44P4.LARGE.jpg", "https://cdn.instructables.com/FYJ/KSTS/JTON44RB/FYJKSTSJTON44RB.LARGE.jpg"], "step_title": "Step 11: Get 'Em All in There"}, {"step": 12, "steps_text": "The Arduino Code and MP3 files are attached.\nPlease read the Arduino code for instructions and comments.", "step_imgs": ["https://cdn.instructables.com/F6P/F6QF/JTON8XCF/F6PF6QFJTON8XCF.LARGE.jpg"], "step_title": "Step 12: Upload the Code & Audio"}, {"step": 13, "steps_text": "Yay. You a Wizard Harry. Sail away sail away sail away...", "step_imgs": ["https://cdn.instructables.com/FCB/TLD6/JTON44SJ/FCBTLD6JTON44SJ.LARGE.jpg", "https://cdn.instructables.com/FAI/12CZ/JTON44SL/FAI12CZJTON44SL.LARGE.jpg", "https://cdn.instructables.com/FZB/ZDK5/JTON44TR/FZBZDK5JTON44TR.LARGE.jpg"], "step_title": "Step 13: Finished!"}], "channel": ""}, {"category": "", "description": "This is a 3d printed NES portable built using an NES on a chip retrobit NES. It is 129*40*200mm. it has 8 hours battery life, digital volume control and stylish(maybe) green case. It is not emulated, it is hardware run off an original cartridge so you can still play your original cartridges or test cartridges at games fairs. It was printed in green PLA at 0.2mm layer height. At 129x40x200mm it is as far as I know the thinnest and narrowest NES ever made.", "title": "The Thinnest & Narrowest Portable Nes?", "url": "https://www.instructables.com/id/The-Thinnest-Narrowest-Portable-Nes/", "section": "technology", "steps": [{"step": 1, "steps_text": "I wanted to play NES games, but I didn't want it to be tv connected. The original NES takes up so much space in your living room that by the time you have routed the cables and the controllers you have aged significantly assuming you don't have a permanent setup. This is the desire to build a portable NES, playing the games available but in a portable form so you don\u2019t trip over trailing cables every time you want to play Tetris or Super Mario. The NES is old and simple, this means that there are many games that are available and homebrew games that have been recently released, this console without the flawed connector and lockout chip means that dirty cartridges are more likely to play. The instructable is not entirely chronological and the pictures are not as detailed as I would like, if you would like pictures of specific parts that I haven't shown then please tell me.", "step_imgs": [], "step_title": "Step 1: Why Did I Build It?"}, {"step": 2, "steps_text": "Because cartridges are cool, you cannot argue with that and I don\u2019t have a smartphone. looking on instructables the amount of NES cartridge projects is amazing, this shows that the NES cartridge is still popular. Nintendo still uses cartridges now for the switch, although they taste worse than the NES cartridges not that I have tried though.\nRoms are illegal, virtually everywhere in the world it is illegal to download roms.\nSmartphone touchscreen controls are useless and are impossible to use because you can\u2019t feel them (unless you can see through your skin, I lack this ability though.)\nIt is true that Nintendo did make the NES classic edition and this is licensed but this uses emulation and does not have all the games I would want to play. The NES classic also has HDMI video which makes it a bit harder to use and a more complex controller. A raspberry pi portable could be constructed like this one but again that requires roms and has been done so many times", "step_imgs": ["https://cdn.instructables.com/F82/G8NQ/JTOMYTZC/F82G8NQJTOMYTZC.LARGE.jpg"], "step_title": "Step 2: Why Not Emulate It Using a Raspberry Pi or Smartphone?"}, {"step": 3, "steps_text": "I chose the retrobit NES for the console, this is much smaller than the original huge NES and most of the circuitry is contained in a tiny ASIC (Application Specific Integrated Circuit). The console uses very little power, I haven\u2019t measured it but it is far less than an original NES would use (the whole portable uses 380ma at 5v probably the same as an original but that had no screen). The console can also be modified to run at 5v which is useful as this is what USB uses and is far better than the 9v that it originally used.\nThe screen chosen is a 4.3\u201d screen that is used for car backup cameras, if they made cars that weren't the size of the death star then that wouldn't be necessary. This is also modifiable to 5v so the entire console can run on 5v which means that I can use the Adafruit Powerboost 1000c to power the unit. I have previously used powerbank circuits for similar purposes though\nLooking at the retrobit it is clear that it can be made smaller, once opened there are three circuit boards in the console and only one of them is actually necessary. The first board just contains the controller ports and the power and reset switch, no actual circuitry. The reset switch was not used although I think that it may be necessary to use the reset button for some Zelda games, please correct me if this is wrong. The second board contains circuitry to step the 9v from the power supply down to 5v, I am not quite sure how this circuit works at a guess it uses a zener diode to provide a reference 5.1v and then a transistor as a voltage follower.\nThe other things on the board are some audio and video ports which are unnecessary also, so this board, like the other one can be removed. This is an iterative process remove one board and rewire then test, always test everything because then you know what it is that doesn\u2019t work if you have only changed one thing.", "step_imgs": ["https://cdn.instructables.com/FQU/7C5B/JTOMYTVD/FQU7C5BJTOMYTVD.LARGE.jpg", "https://cdn.instructables.com/FW3/ZFED/JTOMYUBY/FW3ZFEDJTOMYUBY.LARGE.jpg"], "step_title": "Step 3: The Console/NES Clone"}, {"step": 4, "steps_text": "The screen uses an xl1509 (click to see datasheet) switching regulator to step the 9-36v stated voltage down to the 5v used internally, this regulator is 83% efficient according to the datasheet so removal or bypass is beneficial to the battery life of the unit. Connecting the 5v in to either pin 2 or the capacitor that is fed by it allows the screen to work of 5v and reduces the power consumption. Double win, a more useful voltage and better battery life.\nSo both units are now more efficient and use 5v. I also made the screen thinner by rewiring the surface mount capacitors sideways, this wasn\u2019t necessary but I wanted to practice how to do it and to see if it would still work. This made the screen 2mm thinner, a lot of work for 2mm but it was an experiment and a learning experience so it was okay. This involves lots of testing, change one bit and then test and change another.\nThinner is usually better with handheld and portable devices but I think that thinness is optimal at about 19mm, the thickness of my phone (old Nokia), any thinner and it gets so thin that it bends, iPhone 6, or gets dropped. Although making things textured instead of the slick back that they put on phones now may help, I cannot tell you how many times I dropped my PSP because it was so slick.", "step_imgs": ["https://cdn.instructables.com/FQX/TQV3/JTOMZA8D/FQXTQV3JTOMZA8D.LARGE.jpg", "https://cdn.instructables.com/F3C/9185/JTOMYVJ2/F3C9185JTOMYVJ2.LARGE.jpg", "https://cdn.instructables.com/FZB/BE2Y/JTOMYUIB/FZBBE2YJTOMYUIB.LARGE.jpg", "https://cdn.instructables.com/FPB/3IVE/JTOMYUL3/FPB3IVEJTOMYUL3.LARGE.jpg", "https://cdn.instructables.com/FGK/1TR4/JTOMYVJ6/FGK1TR4JTOMYVJ6.LARGE.jpg"], "step_title": "Step 4: Modification of the Screen (screen If You Want to Go Flatter)"}, {"step": 5, "steps_text": "Now we have the screen running of 5v and the NES running of 5v we can start building the controller. The controller is relatively simple by modern standards, not like the PS4 which has more controls than the Buran, although it still requires a lot of wiring, each button needs 5v, ground, and a signal wire.\nWith 8 buttons that is 24 separate solder connections and that isn\u2019t including the connections to the 4021 shift register or the NES. I used perfboard for this with copper pads on one side, this is easier than cutting or drilling stripboard and is quicker and makes my solder joints look better.\nThe tact switches used were soldered in place and then the various wires were connected. The solder joints should be conical and slightly concave like the image. I can\u2019t stress enough that the choice of solder and iron is important here, I built two controllers before this one that didn\u2019t work, partly because I was not as good at soldering but partly because I was using plumbing solder and a large chisel tip iron. So choose the correct tools, that doesn\u2019t mean you need a really expensive solder station but don\u2019t use bad tools or solder.", "step_imgs": ["https://cdn.instructables.com/FXT/VTFY/JTOMZIUM/FXTVTFYJTOMZIUM.LARGE.jpg", "https://cdn.instructables.com/FTM/PP8M/JTOMYTLI/FTMPP8MJTOMYTLI.LARGE.jpg", "https://cdn.instructables.com/FBE/7M00/JTOMZIE2/FBE7M00JTOMZIE2.LARGE.jpg", "https://cdn.instructables.com/FO3/H01I/JTOMZA8A/FO3H01IJTOMZA8A.LARGE.jpg"], "step_title": "Step 5: Building the Controller"}, {"step": 6, "steps_text": "After wiring the controller and double checking the connections it can be test wired to the unit, as this instructable is not entirely chronological, and I actually have a spare screen and NES, the image of me testing it is with those unmodified. If you decide to build one I would suggest you build the controller first as this gives some non-heat critical practice on soldering. I could end this step here and claim it all worked first time but read on and hear my errors.\nWhen I first attempted to solder to the PCB with my plumbing solder and awful iron I lifted traces and broke the console so learn from my mistakes and use a fine point iron and electrical solder, also try not to overheat the parts. It worked, sort of anyway, the down and left buttons didn\u2019t function, after checking the 5v and ground connections and pressing them a few times I realised that I had connected them to the wrong pins on the shift register, after connecting this properly it worked. This is my fourth NES controller that I have hand wired and only the second to work so be patient, practice and try again", "step_imgs": ["https://cdn.instructables.com/FB1/ROC1/JTOMYUBX/FB1ROC1JTOMYUBX.LARGE.jpg", "https://cdn.instructables.com/F35/S2Z6/JTOMYU63/F35S2Z6JTOMYU63.LARGE.jpg", "https://cdn.instructables.com/FLA/INCW/JTOMYTRE/FLAINCWJTOMYTRE.LARGE.jpg", "https://cdn.instructables.com/F9H/10K5/JTOMYTK5/F9H10K5JTOMYTK5.LARGE.jpg", "https://cdn.instructables.com/F3O/7395/JTOMYVG5/F3O7395JTOMYVG5.LARGE.jpg", "https://cdn.instructables.com/FZV/Y855/JTOMYTK2/FZVY855JTOMYTK2.LARGE.jpg", "https://cdn.instructables.com/F0T/R22B/JTOMYT6P/F0TR22BJTOMYT6P.LARGE.jpg"], "step_title": "Step 6: Test Again and Again"}, {"step": 7, "steps_text": "So we now have everything we need for a compact nes, the screen, controller, cartridge and nes. But we want a portable nes and so we need batteries. The unit uses 380ma when operational but this is after my power modifications and with the screen at 4:3 and 30% brightness. Originally I didn\u2019t measure this and I thought it would come out at around 700ma. But that turned out to be wrong and I could have probably used the cheaper powerboost 500c but we learn as we go so if I make another I may use the 500c or even a powerbank circuit. The batteries are two 18650 lithium cells in parallel to give a 3.7v 5200mah nominal output. Using the 1000c board to boost that to 5v should give a runtime of about 9 hours although I am yet to test this. The wires were extended using thick cable because these need to be able to carry a lot of current, around 1A so the ribbon cable would not be able to cope with that. As a general rule use the same wire or thicker keep the cables short and as neat as possible for troubleshooting because you will definitely need to do that. Be very careful when soldering live battery wires, and make sure you don\u2019t short circuit the battery with your iron tip. This is why I said to use a fine tipped iron, wide irons increase the possibility of shorts. I actually broke a powerboost in the process of doing this procedure by shorting the output with my iron.", "step_imgs": ["https://cdn.instructables.com/FGO/65KY/JTOMYVD9/FGO65KYJTOMYVD9.LARGE.jpg", "https://cdn.instructables.com/FVW/9E62/JTOMYV7C/FVW9E62JTOMYV7C.LARGE.jpg", "https://cdn.instructables.com/FWR/RL8Q/JTOMYV7B/FWRRL8QJTOMYV7B.LARGE.jpg", "https://cdn.instructables.com/FR6/UD3I/JTOMYVG1/FR6UD3IJTOMYVG1.LARGE.jpg", "https://cdn.instructables.com/FG8/ZECS/JTOMYV7E/FG8ZECSJTOMYV7E.LARGE.jpg", "https://cdn.instructables.com/F4J/CS3J/JTOMYVAC/F4JCS3JJTOMYVAC.LARGE.jpg", "https://cdn.instructables.com/FKR/LOOJ/JTOMYV7D/FKRLOOJJTOMYV7D.LARGE.jpg"], "step_title": "Step 7: Small NES, But No Power and Case"}, {"step": 8, "steps_text": "The powerboost, unlike most powerbanks, seems to have no load sensing circuitry and so needs a switch to turn it off, this connects the en pin to the gnd pin and the unit shuts off. While you could use a switch after the 5v output, the powerboost would still have its blinding blue led on wasting all your power which we want for gaming. I wired a temporary switch because I didn\u2019t have the correct slide switch to fit. This was temporary but incorporated into the actual design, it doesn't work properly sometimes but I wanted to finish the unit.", "step_imgs": ["https://cdn.instructables.com/FCT/TCWZ/JTOMZGHF/FCTTCWZJTOMZGHF.LARGE.jpg", "https://cdn.instructables.com/F99/NYBB/JTOMYV7A/F99NYBBJTOMYV7A.LARGE.jpg"], "step_title": "Step 8: Oh No, It Won\u2019t Turn Off"}, {"step": 9, "steps_text": "The amplifier is a simple lm386 based amplifier, this runs off 5v like the rest of the unit. But be careful, not all lm386 amplifiers can run off 5v. I used the version ending n-3, and an 8 ohm speaker. The unit was wired like in the diagram above, however I added a power line capacitor for noise reduction and the sound quality improved from shockingly bad to just bad. After a lot of time listening to the menu music of super Mario 3 and getting more annoyed I had an idea.\nI suspected that audio clipping (when an waveform has the top clipped because the maximum voltage that the amplifier can output has been reached) was the issue here and so I wired a potentiometer to test my theory, it may have not been clipping but the potentiometer solved the sound quality issue and now it just sounds poor. I think this is bad sound generation by the asic in the unit rather than my design but I can tell you this and you will probably believe it. I wired three 3.3kohm resistors to form a potential divider to reduce the volume to tolerable levels. This reduced the maximum volume of the unit to 1/3 of the original but because of the weird way that humans perceive sound it was not that much quieter but far less annoyingly distorted.", "step_imgs": ["https://cdn.instructables.com/FF6/QOOU/JTOMZ2PS/FF6QOOUJTOMZ2PS.LARGE.jpg", "https://cdn.instructables.com/FMO/TRUE/JTOMZ9WO/FMOTRUEJTOMZ9WO.LARGE.jpg"], "step_title": "Step 9: Amplifier"}, {"step": 10, "steps_text": "The sound was then wired to an x9511 digital 32 step potentiometer, this turns the volume down and allows me to use buttons to reduce the volume from maximum to minimum. This is not logarithmic as would be ideal but it works to reduce the volume using buttons. There is a ground connection and a signal wire for the volume buttons, no pull ups necessary. Because the digital volume control was an afterthought the wiring was very tight near the shift register. I put the wires over the top of the circuit board because there was nowhere else.\nThe digital volume was an afterthought, therefore I didn\u2019t have the buttons printed and I didn\u2019t want to pay the huge price of postage for such a tiny part. If I make another I will get the volume buttons printed at the same time. I made the volume button out of some plywood, filler, card and paint. It is not perfect but time and money restrictions meant I just stuck with the non-optimal for now.", "step_imgs": ["https://cdn.instructables.com/FO3/H01I/JTOMZA8A/FO3H01IJTOMZA8A.LARGE.jpg", "https://cdn.instructables.com/FUB/SZSH/JTOMYT4A/FUBSZSHJTOMYT4A.LARGE.jpg", "https://cdn.instructables.com/F17/PJR3/JTOMX7B3/F17PJR3JTOMX7B3.LARGE.jpg", "https://cdn.instructables.com/FLT/AHJW/JTOMYVKO/FLTAHJWJTOMYVKO.LARGE.jpg"], "step_title": "Step 10: Turn It Down"}, {"step": 11, "steps_text": "I have no images of the designing of the case as this was designed in March, April and May 2018. This was assembled in march 2019. However I can give you some details into how it was designed, I used paper to draw a rough outline, laying the various components on top of each other to get the rough layout. Add space for wires, they can be the reason the unit doesn't close\nI wanted a portrait console for two reasons, size, the nes cartridge is huge, making a landscape console makes the height have to be at least 145mm and because I wanted the console to conform to the golden ratio of 1.618 that makes it about 230mm for the correct ratio. As the console pcb is the thickest part it would have interfered with the screen and the unit would be even thicker.\nPortrait is better unless you need shoulder buttons, I think it looks better, and it means I can keep the same control spacing as an original NES controller. The case is 129mm wide because that is the thickness of the cartridge port mount plus the case thickness and 200mm because that is a convenient number that is close enough to the golden ratio to look good. Studies have shown that the golden ratio is not actually preferred but it is in the range of preferred rectangles, about square root 2 to about square root 3 (if anyone can point me to the study that found this I will be grateful). The speaker has holes arranged in a pattern and my initials in the middle. Those clever screw holes keep the unit as thin as possible. The case was assembled using m2 screws because I wanted small screws. Americans reading may think \u201cwhy didn\u2019t you just use screws in inches\u201d, well because I am not American and inches are generally fractional and that is difficult to input in a decimal environment like cad.\nI used calipers a lot to measure things repeatedly, and remember that 3d printers are not accurate, so leave tolerances. The prints you see here are the fifth try and the second unit, I have built another one before but without sound or such a nice design. When designing cases, use paper templates to check fit. Paper is cheaper and quicker than a 3d printer. It sometimes takes 20 attempts to get the measurement right. At least it did when I was making the controller mounts, but that was because I had to guess how many tenths of an inch the spacing should be (the holes on perfboard are 0.1\u201d or 2.54mm apart) and multiplying it, rounding it and then checking it lined up. I refused to use inches in my design because it would mess up all my measurements done in millimetres.", "step_imgs": ["https://cdn.instructables.com/FT6/6MR3/JTOMZ6GW/FT66MR3JTOMZ6GW.LARGE.jpg", "https://cdn.instructables.com/FCY/U6R3/JTOMZGH0/FCYU6R3JTOMZGH0.LARGE.jpg", "https://cdn.instructables.com/FL9/FZ7V/JTOMZ6GX/FL9FZ7VJTOMZ6GX.LARGE.jpg", "https://cdn.instructables.com/F66/G0QE/JTOMZ6ZK/F66G0QEJTOMZ6ZK.LARGE.jpg", "https://cdn.instructables.com/FUU/7QEO/JTOMZ6GZ/FUU7QEOJTOMZ6GZ.LARGE.jpg", "https://cdn.instructables.com/F1I/7DGM/JTOMZ6H1/F1I7DGMJTOMZ6H1.LARGE.jpg"], "step_title": "Step 11: The Case"}, {"step": 12, "steps_text": "The holes in the perfboard needed to accept a 2mm screw so I used a 2mm drill to enlarge the holes to mount the controller amplifier board. The screen was hot glued in, and hot glue was used to secure the wires to the prints to keep them neat. The cartridge port was friction fitted and holds itself in place. Hot glue is very useful in situations like this, no-one will see the inside so use the glue gun to hold things in. the case was printed in pla at 200mm layer height. Because I didn\u2019t have a 3d printer I sent them to a company who printed them, I specified the same colour but as you can see the colours don\u2019t match. The screws thread into undersized holes in the plastic but the holes I used were a bit big so the screws had little hold. The battery was glued in with, can you guess, hot glue.", "step_imgs": ["https://cdn.instructables.com/FTK/1ZR9/JTOMYT94/FTK1ZR9JTOMYT94.LARGE.jpg", "https://cdn.instructables.com/FO3/H01I/JTOMZA8A/FO3H01IJTOMZA8A.LARGE.jpg"], "step_title": "Step 12: Mounting It All"}, {"step": 13, "steps_text": "The final unit I am very happy with and it plays the games I want it to. There are some games that the clone console can\u2019t play but I don\u2019t know where the list of them is. the screen is in 4:3 to reduce the lag on the unit to an acceptable amount and with an 8 hour battery life, you can complete most games without recharging. The unit is and I will claim it now, the thinnest (40mm) and narrowest (129mm) nes portable ever (that takes an entire nes cartridge). Unless anyone can prove otherwise.\nIt is far from perfect obviously, the case could have been finished better, such as painting. the controls are not as I wanted either, I wanted them in different colours to what they are in now with the A and B inlayed.\nI have definitely learnt a lot during this project but I have a portable nes, something I can show to many people and amaze them with the 8-bit graphics and the 3d printed case. If you would like the stl files or a step by step guide then say in the comments and I may do a step by step guide, but at a cost because I already have one so I would have to make another specifically to take many photos that takes time and requires a new set of components, I would need enough people willing to pay for it to be worth my time and investment. Also if more pictures or clarification is needed, or any other editing of the instructable, then let me know in the comments.", "step_imgs": ["https://cdn.instructables.com/F5W/M4JY/JTOMZDC9/F5WM4JYJTOMZDC9.LARGE.jpg", "https://cdn.instructables.com/FFI/SVED/JTOMZDEM/FFISVEDJTOMZDEM.LARGE.jpg"], "step_title": "Step 13: Conclusion"}, {"step": 14, "steps_text": "Will you make me one\nNo, if i make one for the plans then maybe that one I will sell\nWhat are the dimensions\n129mm x 200mm x 40mm or in imperial 6x10^-3 ch x 9.9x10^-3ch x 1.99x10^-3ch\nBut those aren\u2019t the imperial dimensions I wanted\n5.079x7.87x1.57\" happy now?\nI could do better\nPlease show me, I would like to see it. Or to use the modern parlance \u201cpics or it didn\u2019t happen\u201d\nWhat is the hole for at the bottom of the unit\nThe top square one is for an expansion port and the bottom round one is for headphones, I didn\u2019t have a jack with a disconnect in so I left it.\nWhy did you make the screen smaller\nTo reduce the lag, it was unplayable\nWhy didn\u2019t you use a 3.5\u201d screen like this\nThe image scrolled vertically constantly, I think it was some v-sync issue. it wasn\u2019t n-sync\nCan you add\u2026\nThat is probably what the exp port is for, second controller, av out etc, charge port\nUse a raspberry pi\nRead the instructable\nUse a real nes\nNo, it is huge\nPlans please\nLet me know in the comments, there may be a cost\nWill you build a portable n64\nNo, see Ben Heck's videos on that. Ben is more skilled than me and hugely struggled with it.\nHow long did it take to build it?\nAbout 20 hours to assemble, about 300 hours designing and redesigning the case. That was due to inexperience though so I could do it much quicker now. Probably about 50 hours to design a new portable of similar complexity.", "step_imgs": [], "step_title": "Step 14: Questions I May Get"}], "channel": ""}, {"category": "", "description": "Animatronic dragon created in order to have a first approach to animatronics. This dragon is going to be taking care of its treasure and whenever it feels someone approaching, it will want to protect it, so that it won\u2019t be stolen. For doing so it will open its wings, its mouth and it will change the color of its eyes to scare the possible thief.\nWITH THIS INSTRUCTABLE YOU WILL LEARN ABOUT:\n- Making a two-piece plaster mold\n- Creating figures with latex\n- Some electronics with Arduino\n- Creating a mechanism to make the dragon\u2019s wings and mouth open a close\nYou don\u2019t really need to make a dragon, you can apply these instructions to any kind of creature you want to create, your imagination is the limit!\n\nYOU WILL NEED:\nFOR THE MOLD AND THE LATEX DRAGON:\n- Stick (20 cm)\n- wood for the base (30 x 20 cm)\n- Screw (to attach the stick to the board)\n- Polystyrene balls\n- Plaster type 3 (it provides excellent detail)\n- Water\n- Bowl (To mix the plaster with water)\n- Acetate\n- Tape\n- Liquid Latex\n- *Calcium chloride (Not mandatory)\n- Wire\n- Polymer clay\n- 2 small glass balls (for the eyes)\n- Paint for latex (I found it in Colombia as paint for balloons)\n- Fabric Clothes\n- Rubber glue (you can use contact cement)\n- Vaseline\n- Rope\nFOR THE MECHANISM:\n- Two folding umbrella arms\n- A piece of acrylic (10 x 10 cm)\n- Wire\n- 2 small metal sheets (like 1,5 x 5 cm, for making the jaws)\n- A plastic tube (similar to a Straw, but stronger)\nFOR THE ELECTRONICS:\n- Arduino UNO\n- Servomotor SG-5010\n- Red LED\n- Resistor 220 \u03a9\n- Motion detector hc-sr501\n- Cables\nFOR THE BASE AND TREASURE:\n- Old coins\n- Beads\n- Small Trunk (Approx. 12 x 9 x 11 cm)\n- Wood sheet (For using as a base of our animatronic)\n- Terracotta color paints", "title": "DIY Animatronic Dragon!", "url": "https://www.instructables.com/id/DIY-Animatronic-Dragon/", "section": "technology", "steps": [{"step": 1, "steps_text": "1. We join with a screw the stick to the board (this will help us as a base to model the clay)\n2. With polystyrene balls and wire, create the basic shape of the dragon, attached to the stick attached to the board.\n3. Take your polystyrene-wire figure and build up layers of clay, making it at least 1.5 cm thick.\n4. Now, start sculpting the dragon (or creature) the way you want it.\n5. Create the scales.\n6. Add all the missing details. (Such as the eyes and nose)", "step_imgs": ["https://cdn.instructables.com/FI8/U9BA/JTON2UWA/FI8U9BAJTON2UWA.LARGE.jpg"], "step_title": "Step 1: SCULPTING THE BODY"}, {"step": 2, "steps_text": "It would be really difficult to make just one mold for the whole dragon, so if your creature has complex parts on the design it is better you create it separated and mold them on their own, as I did with the legs and tail.\n1. Follow the same instructions from \u201cStep 1\u201d, but this time creating 2 legs and a tail. This time the wood for the base and the stick are not needed.\nYou only need to sculpt 2 legs and after creating the molds you can use them twice for creating the 4 latex-legs.", "step_imgs": ["https://cdn.instructables.com/FY3/BVD6/JTON2UYI/FY3BVD6JTON2UYI.LARGE.jpg"], "step_title": "Step 2: SCULPTING LEGS AND TAIL"}, {"step": 3, "steps_text": "1. Carefully add pieces of acetate through the center of the dragon, joining these together with tape. (This will help us to divide the mold into two parts)\n2. Mix the plaster with water and began to apply it to one side of the dragon. (Several layers must be applied)\n3. Everything is covered in plaster except (in the lower part) a hole that is left, through which we will pour the latex.\n4. The plaster should cover part of the acetate.\n5. Let it dry very well.\n6. The pieces of acetate are removed.\n7. Apply Vaseline on the plaster so that half of the mold is not stuck to the other half.\n8. Start to apply plaster as we did with the first half part.\n9. Let it dry.\n10. Open the mold and clean the clay.", "step_imgs": ["https://cdn.instructables.com/F4E/4W9C/JTON2V0L/F4E4W9CJTON2V0L.LARGE.jpg"], "step_title": "Step 3: TWO PIECE PLASTER MOLD"}, {"step": 4, "steps_text": "1. The same way we learned to make molds in plaster, molds are made for the legs and tail.", "step_imgs": ["https://cdn.instructables.com/FXI/Q6DR/JTON2V4B/FXIQ6DRJTON2V4B.LARGE.jpg"], "step_title": "Step 4: MOLD OF LEGS AND TAIL"}, {"step": 5, "steps_text": "1. Strap both parts of the mold together with the lace.\n2. Pour a little unthickened liquid latex into the mold then swish it all around the mold and leave it until set, then repeat for at least 5 times if not more.\n3. * You can add some calcium chloride diluted in water (16 oz water \u2013 1 spoon calcium chloride) After the 5 previous layers, pour some of it in to the mold and swish it all around, then you can alternate 2 o 3 layers more \u2013 1 made of latex \u2013 1 made of calcium chloride.\n* (This is not a needed step, you can use just latex, but if you use calcium chloride it will help you to obtain thicker latex layers, therefore making faster the process.)\n4. Let it dry for at least 48 hours and then open the mold.\n5. Cut off excess material.\n6. Repeat the same process with the legs and the tail (Remember to make 4 legs).", "step_imgs": ["https://cdn.instructables.com/FAX/A146/JTON2V5U/FAXA146JTON2V5U.LARGE.jpg"], "step_title": "Step 5: LATEX"}, {"step": 6, "steps_text": "1. To add details to the dragon such as some horns and nails, create basic shapes with wire and attach them to the dragon\u2019s body.\n2. Cover them with polymer clay and create the shapes you want.\n3. To join the legs and the tail, holes are made in the body of the dragon in which the legs and tail enter (This can be done with scissors). Also, open the holes for its mouth and eyes.\n4. Insert the legs and the tail into the corresponding holes. Apply glue from the inside (Could be Contact Cement. I used one called \u201cBoxer\u201d, I bought it in Colombia).", "step_imgs": ["https://cdn.instructables.com/F77/Y91J/JTON2VE8/F77Y91JJTON2VE8.LARGE.jpg"], "step_title": "Step 6: ADDING SOME DETAILS, AND THE LEGS AND TAIL TO THE BODY"}, {"step": 7, "steps_text": "(Don\u2019t worry too much, Read the steps and then watch the video in the next step, it will help you understand it all better)\n1. Laser cut the base for the mechanism. (pdf attached)\n2. Connect the servomotor to the base with screws.\n3. Attach the plastic tube to the base (possibly with wire).\n4. MANDIBLE MECHANISM the jaws are created giving a U shape to the metal sheets.\nThe upper jaw is fixed to the tube so that it doesn\u2019t move. (It is not necessary to add the teeth in this step; I took the photo when I had already added them, but we will see this step later.)\n5. The lower jaw joins the upper jaw with shafts that allow it to move.\n6. The lower jaw is attached to the servo motor with a wire to control its movement.\n7. Two umbrella arms are attached to the base of the mechanism (possibly with wire).\n8. They are tied with wire on the back in the points that make them open and close and are joined to another wire in the vertical perforation that has the base.\n9. This last wire is attached to the servo to control the movement of the wings.", "step_imgs": ["https://cdn.instructables.com/FW2/U5ZZ/JTON2VHE/FW2U5ZZJTON2VHE.LARGE.jpg"], "step_title": "Step 7: MECHANISM"}, {"step": 8, "steps_text": "Don\u00b4t worry about the electronics, we will see that later.", "step_imgs": [], "step_title": "Step 8: VIDEO - HOW THE MECHANISM SHOULD WORK"}, {"step": 9, "steps_text": "1. Place the mechanism of the wings on fabric.\n2. Draw the outline.\n3. Leave a larger space marked in those parts where the mechanism bents.\n4. Draw the desired shapes of the wings from the basic lines.\n5. It is necessary to create a bag with the shape of the mechanism of the wings that covers the mechanism when they are covered with latex, otherwise, the mechanism will be latex covered and will not be able to move.\n6. For this, I cut two plastic bags with the form marked in red and I joined them with tape where the yellow dotted line is seen in the image, creating a bag for the mechanism.\n7. The bag created to cover the mechanism is covered with cloth and the wing is sewn.\n8. The mechanism is inserted into the bag/wing.\n9. The sticks that I put to create the wing divisions are not necessary. I noticed that when the dragon was finished, and I took them off.\nThe same steps are repeated with the other wing.\n10. The mechanism of the wings should already be attached to the base of mechanisms as we saw in previous steps.\n11. We prove that the wings can be closed.\n12. And open again.\nIf necessary, we make adjustments.", "step_imgs": ["https://cdn.instructables.com/FST/LG2E/JTON2WL8/FSTLG2EJTON2WL8.LARGE.jpg"], "step_title": "Step 9: WINGS (FIRST PART)"}, {"step": 10, "steps_text": "1. Open holes in the body of the dragon to join the wings. (Prove that the mechanism enters there)\n2. Glue the wings to the dragon\u2019s body. (Do so from the inside, you may use Contact cement)\n3. Cover the wings with latex and let them dry. (You can use the latex as if it was paint and apply it with a brush)", "step_imgs": ["https://cdn.instructables.com/FMV/QXGU/JTON2WZ3/FMVQXGUJTON2WZ3.LARGE.jpg"], "step_title": "Step 10: WINGS (SECOND PART)"}, {"step": 11, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FP3/OL43/JTON2XAL/FP3OL43JTON2XAL.LARGE.jpg"], "step_title": "Step 11: HOW THE MECHANISM SHOULD GO INSIDE OUR DRAGON"}, {"step": 12, "steps_text": "Connect the elements to the arduino as shown in the image. And see how it all should go inside our Dragon so you leave long enough the cables for them to work.", "step_imgs": ["https://cdn.instructables.com/FIX/D2RJ/JTON2XHW/FIXD2RJJTON2XHW.LARGE.jpg", "https://cdn.instructables.com/FAA/EGIP/JTON2XHP/FAAEGIPJTON2XHP.LARGE.jpg"], "step_title": "Step 12: ELECTRONICS"}, {"step": 13, "steps_text": "(Don\u2019t worry about the text after the two slashes // it won\u2019t affect the code, it is there just to explain you what are we doing in every line of the code, if you prefer, you can delete that part and just leave the code in bold)\nUpload the code:\n#include //we declare the pins we are going to use\nServo myservo; // create servo object to control a servo\nint analogPin = A5; //Analogic A5 for the sensor\nint ledPin = 10; //Digital 10 for the LED\nint val = 0; // variable to store the servo position\nvoid setup()\n{\nSerial.begin(9600); // initialize serial communication at 9600 bits per second\npinMode(ledPin, OUTPUT); //declare pin 10 to be an output\npinMode(analogPin, INPUT); //declare pin A5 to be an input\nmyservo.attach(9); // attaches the servo on pin 9 to the servo object\n}\nvoid loop()\n{\nval = analogRead(analogPin); // read the input on analog pin\nif(val > 100) // if the value is more than 100 then:\n{\nSerial.println(val);\ndigitalWrite(ledPin,HIGH); // Turns on the LED\nmyservo.write(5); // sets the servo position according to the number in the brackets, you should change the number inside the brackets according to the mechanism\u2019s movement. Try this number first and then try changing it to other numbers, you will find the best for your dragon.\ndelay(15); // delay in between reads for stability\n}\nelse //if the value is less than 100 then:\n{\nSerial.println(val);\ndigitalWrite(ledPin,LOW); // Turns off the LED\nmyservo.write(175); // sets the servo position according to the number in the brackets, you should change the number inside the brackets according to the mechanism\u2019s movement. Try this number first and then try changing it to other numbers, you will find the best for your dragon.\n}\n}", "step_imgs": ["https://cdn.instructables.com/FK2/DFY4/JTON2XRV/FK2DFY4JTON2XRV.LARGE.jpg", "https://cdn.instructables.com/F3Z/XRXV/JTON2XSD/F3ZXRXVJTON2XSD.LARGE.jpg"], "step_title": "Step 13: PROGRAMMING"}, {"step": 14, "steps_text": "The red led should get turned on and the servo's axis should rotate when the sensor feels someone approaching.", "step_imgs": [], "step_title": "Step 14: TESTING THE ELECTRONICS"}, {"step": 15, "steps_text": "", "step_imgs": [], "step_title": "Step 15: JOIN THE MECHANISM WITH THE ELECTRONICS"}, {"step": 16, "steps_text": "Don\u2019t cut the dragon this way! I had to open it and now the pictures work for explaining how it works from the inside.\n1. Create the teeth with polymer clay, you can add them to the mouth\u2019s mechanism as shown in the picture.\n2. If you want you can add a tongue too.\n3. Add the glass balls, gluing them to the edges of the eyes.\n4. Put the red LED between the two glass balls (the two eyes).", "step_imgs": ["https://cdn.instructables.com/F9Y/JP14/JTON2ZJA/F9YJP14JTON2ZJA.LARGE.jpg"], "step_title": "Step 16: EYES AND MOUTH"}, {"step": 17, "steps_text": "Paint it the way you want it.", "step_imgs": ["https://cdn.instructables.com/FEU/BOTV/JTON3280/FEUBOTVJTON3280.LARGE.jpg"], "step_title": "Step 17: PAINT THE DRAGON"}, {"step": 18, "steps_text": "1. Open a hole in one of the legs, through which the wires will be passed to the dragon.\n2. Open a hole in the trunk, which will be attached to the leg of the dragon, through which the cables will also pass.\n3. Stick old coins and beads to the lid of the trunk, so that it seems full of treasures and jewels, among these is the motion sensor, to make it look like another jewel.\n4. Put the arduino inside the trunk.\n5. It can be placed on a previously painted table if desired.", "step_imgs": ["https://cdn.instructables.com/FBB/5W90/JTON32LZ/FBB5W90JTON32LZ.LARGE.jpg"], "step_title": "Step 18: LAST DETAILS"}, {"step": 19, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FXY/8ZTG/JTON32X2/FXY8ZTGJTON32X2.LARGE.jpg", "https://cdn.instructables.com/F9L/JT3O/JTON32ZC/F9LJT3OJTON32ZC.LARGE.jpg", "https://cdn.instructables.com/FNZ/XFG5/JTON32X3/FNZXFG5JTON32X3.LARGE.jpg", "https://cdn.instructables.com/FE6/YXYX/JTON330N/FE6YXYXJTON330N.LARGE.jpg", "https://cdn.instructables.com/FSE/F8Y8/JTON3318/FSEF8Y8JTON3318.LARGE.jpg", "https://cdn.instructables.com/FT2/ELUX/JTON32YR/FT2ELUXJTON32YR.LARGE.jpg", "https://cdn.instructables.com/FPF/LVRA/JTON32XY/FPFLVRAJTON32XY.LARGE.jpg", "https://cdn.instructables.com/FCG/XJDD/JTON32XX/FCGXJDDJTON32XX.LARGE.jpg", "https://cdn.instructables.com/FVU/BV90/JTON32XI/FVUBV90JTON32XI.LARGE.jpg", "https://cdn.instructables.com/FFH/HI28/JTON32X6/FFHHI28JTON32X6.LARGE.jpg", "https://cdn.instructables.com/F4T/D93K/JTON32ZP/F4TD93KJTON32ZP.LARGE.jpg", "https://cdn.instructables.com/FGJ/X026/JTON3302/FGJX026JTON3302.LARGE.jpg"], "step_title": "Step 19: SOME PICTURES"}, {"step": 20, "steps_text": "", "step_imgs": [], "step_title": "Step 20: SEE IT WORKING"}], "channel": ""}, {"category": "", "description": "This instructables show how to use micro:bit to make a simple digital compass.", "title": "Micro:bit Compass", "url": "https://www.instructables.com/id/Microbit-Compass/", "section": "technology", "steps": [{"step": 1, "steps_text": "If you not yet have a micro:bit, you may get a micro:bit here: https://microbit.org/resellers/", "step_imgs": ["https://cdn.instructables.com/FCB/F407/JTON2WYK/FCBF407JTON2WYK.LARGE.jpg"], "step_title": "Step 1: Get a Micro:bit"}, {"step": 2, "steps_text": "If you want to make the digital compass portable, you may consider get a battery holder.\nAny 3V battery holder with JST connector should be ok. The battery can be CR2032, 2 x AAA batteries, 2 x AA batteries, etc.", "step_imgs": ["https://cdn.instructables.com/FV1/87NT/JTON2WZ0/FV187NTJTON2WZ0.LARGE.jpg"], "step_title": "Step 2: Optional: Battery Holder"}, {"step": 3, "steps_text": "I feel direct view the SMD LED light is not so comfort, so I have made a 3D printed cover diffuse the light and make every LED like a perfect square pixel :>\nIf you also like the pixels, you can download and print the cover here:\nhttps://www.thingiverse.com/thing:3511591", "step_imgs": ["https://cdn.instructables.com/FAN/6JKM/JTON2WZ1/FAN6JKMJTON2WZ1.LARGE.jpg", "https://cdn.instructables.com/FM7/2H59/JTON2WZ2/FM72H59JTON2WZ2.LARGE.jpg"], "step_title": "Step 3: Optional: 3D Printed Cover"}, {"step": 4, "steps_text": "Input\nmicro:bit have a magnetic field sensor, just like a normal compass needle, it can sense the magnetic field produced inside Earth. micro:bit library translate the field value into 360 degrees relative to north.\nOutput\nmicro:bit have 5 x 5 LED matrix, it is good enough to show an arrow in 8 directions. (North, NE, East, SE, South, SW, West, NW)\nRef.: https://tech.microbit.org/hardware/", "step_imgs": ["https://cdn.instructables.com/FBA/15WW/JTON32ZD/FBA15WWJTON32ZD.LARGE.jpg"], "step_title": "Step 4: How Does Digital Compass Work?"}, {"step": 5, "steps_text": "Please reminded that the magnetic field sensor and the LED are placed on different side of the PCB. So when you look at the LED side the magnetic field reading is flipped. Or you can treat the reading is counter-clockwise start from North.", "step_imgs": ["https://cdn.instructables.com/FN3/4DMB/JTON32VA/FN34DMBJTON32VA.LARGE.jpg"], "step_title": "Step 5: Note on the Magnetic Field Direction"}, {"step": 6, "steps_text": "The input is a 360 degrees value and the output is 8 directions arrow, here is the angle mapping:\n 23 -  68 NW\n 68 - 113 West\n113 - 158 SW\n158 - 203 South\n203 - 248 SE\n248 - 293 East\n293 - 338 NE\nOthers    North", "step_imgs": ["https://cdn.instructables.com/FER/3QWJ/JTON2X3O/FER3QWJJTON2X3O.LARGE.jpg"], "step_title": "Step 6: Angle Mapping"}, {"step": 7, "steps_text": "Here is my sample block code:\nhttps://makecode.microbit.org/_RfA4jH2Rae78\nSimply download and copy to micro:bit drive to run.\nIf you are not yet familiar with using micro:bit please read the official quick start guide first:\nhttps://microbit.org/guide/quick/", "step_imgs": ["https://cdn.instructables.com/F2Y/XKOP/JTENEL3R/F2YXKOPJTENEL3R.LARGE.jpg"], "step_title": "Step 7: MakeCode"}, {"step": 8, "steps_text": "If you are first time using the micro:bit magnetic field sensor, the LED matrix will scroll the words TILT TO FILL SCREEN.\nPlease follow the support page video to calibrating the micro:bit compass:\nhttps://support.microbit.org/support/solutions/art...", "step_imgs": ["https://cdn.instructables.com/FSJ/D4TQ/JTON36WI/FSJD4TQJTON36WI.LARGE.jpg"], "step_title": "Step 8: Calibrating the Micro:bit Compass"}, {"step": 9, "steps_text": "micro:bit compass is just a very simple example, micro:bit have much more can be done.\nLet's explore more ideas here:\nhttps://microbit.org/ideas/", "step_imgs": ["https://cdn.instructables.com/FJF/YANX/JTON2X46/FJFYANXJTON2X46.LARGE.jpg"], "step_title": "Step 9: Happing Coding!"}], "channel": ""}, {"category": "", "description": "This is an Instructables on how I Remixed my old CNC Laser engraver and made a Stable version of an Arduino based Laser CNC engraver and thin paper cutter using old DVD drives and using 250mW laser.\nOld Version of My CNC :https://www.instructables.com/id/Mini-CNC-Laser-Wood-Engraver-and-Paper-Cutter/\nOld version was not much stable and had some wobble due to uneven parts, so I decided to make a stable version of it using 3D printed parts. Which gave me excellent results in laser engraving even in very tiny details, this machine is cable of doing the work well. You can see the details in the eye of the engraved picture.\nPlaying area is 40mm x 40mm max.", "title": "DIY Mini CNC Laser Engraver.", "url": "https://www.instructables.com/id/DIY-Mini-CNC-Laser-Engraver/", "section": "technology", "steps": [{"step": 1, "steps_text": "Arduino Nano (with USB cable)\n2x DVD drive stepper mechanism\n2x A4988 stepper motor driver modules (or GRBL shield)\n250mW Laser with adjustable lens (or above)\n12v 2Amps power supply minimum\n1x IRFZ44N N-CHANNEL Mosfet\n1x 10k resistor\n1x 47ohm resistor\n1x LM7805 voltage regulator (with heatsink)\nBlank PCB Board\nMale and Female Headers\n2.5mm JST XH-Style\n2pin male connector\n1x 1000uf 16v capacitor Jumper cables\n8x small neodymium magnets ( which I have salvaged from DVD lens mechanism)\n1x 2pin plug in screw terminal block connector\nZip ties (100mm)\nSuper Glue\n6x M3x12 screws\n8x M2x5 screws\nLaser Safety Glasses\n\"LASER SAFETY GLASSES are must needed in this project\".", "step_imgs": [], "step_title": "Step 1: Parts and Materials Required"}, {"step": 2, "steps_text": "STL files, see the attached file or go to : https://www.thingiverse.com/thing:3521286\nAll Parts are printed in ABS material.\nPrint Settings:\nLayer height: 0.2mm\nInfill: < 25%\nSupports: No", "step_imgs": ["https://cdn.instructables.com/FWE/X7OM/JSYZ92NT/FWEX7OMJSYZ92NT.LARGE.jpg"], "step_title": "Step 2: Printed Parts"}, {"step": 3, "steps_text": "Two DVD driver mechanism are required, one for the X-Axis and the second for the Y-axis.\nUsing a small Phillips head screw driver I removed all the screws and detached stepper motor, the sliding rails and the follower.\nThe stepper motors are 4-pin Bipolar Stepper Motor.\nThe small size and low cost of a DVD motor mean that you can't expect\nhigh resolution from the motor. That is provided by the lead screw. Also, not all such motors do 20 steps/rev. 24 is also a common spec. You'll just have to test your motor to see what it does.\nProcedure for calculating the resolution of the CD Drive Stepper motor:\nIn order to measure the resolution of the CD/DVD drive stepper motor,\na digital micrometer was used. The distance along the screw was measured. The total length of the screw using a micrometer, which turned out to be 51.56 mm. To determine the lead value which is the distance between two adjacent threads on the screw. The threads were counted to be 12 threads within this distance. Lead = distance between adjacent threads = ( total length / number of threads = 51.56 mm) / 12 = 4.29mm/rev. The step angle is 18 degrees which corresponds to 20 steps/revolution. Now that all the information needed is available, the resolution of the stepper motor could be calculated as shown below: Resolution = (Distance between adjacent threads) / (N Steps/rev) = (4.29mm/rev) / (20 steps/rev) = 0.214 mm/step. Which is 3 times better the resolution required which is 0.68mm/step.", "step_imgs": ["https://cdn.instructables.com/FW2/79K6/JSYZ7D9J/FW279K6JSYZ7D9J.LARGE.jpg", "https://cdn.instructables.com/FEL/TG5H/JSYZ7D9S/FELTG5HJSYZ7D9S.LARGE.jpg"], "step_title": "Step 3: Taking Apart the DVD Drive Stepper Mechnaism"}, {"step": 4, "steps_text": "Using Super Glue I've glued the slider and the guide into one part. Spring is attached to maintain the tension between the guide and the lead screw to avoid black-lash.", "step_imgs": ["https://cdn.instructables.com/FOD/T1H2/JSYZ92P1/FODT1H2JSYZ92P1.LARGE.jpg", "https://cdn.instructables.com/FDQ/8EFH/JSYZ92P7/FDQ8EFHJSYZ92P7.LARGE.jpg", "https://cdn.instructables.com/F7L/IV2I/JSYZ92PD/F7LIV2IJSYZ92PD.LARGE.jpg", "https://cdn.instructables.com/FBL/IGTG/JSYZ92PO/FBLIGTGJSYZ92PO.LARGE.jpg", "https://cdn.instructables.com/FJ3/8XCZ/JSYZ92PP/FJ38XCZJSYZ92PP.LARGE.jpg"], "step_title": "Step 4: Preparing the Slider."}, {"step": 5, "steps_text": "Before assembling the slider into the base I've glued 4x small neodymium magnets ( which I have salvaged from DVD lens mechanism) into the X-plate. This magnets will helps in holding the work piece to the working area.\nThe smooth rod will keep the sliding mechanism intact to the base.", "step_imgs": ["https://cdn.instructables.com/FJ9/1NPF/JSYZ92QT/FJ91NPFJSYZ92QT.LARGE.jpg", "https://cdn.instructables.com/FNA/7C55/JTWS7F6X/FNA7C55JTWS7F6X.LARGE.jpg", "https://cdn.instructables.com/FOW/3MG1/JSYZ92RV/FOW3MG1JSYZ92RV.LARGE.jpg", "https://cdn.instructables.com/FHD/GZLB/JSYZ92RY/FHDGZLBJSYZ92RY.LARGE.jpg", "https://cdn.instructables.com/FVU/HVP1/JSYZ92SD/FVUHVP1JSYZ92SD.LARGE.jpg", "https://cdn.instructables.com/F8T/4BCM/JSYZ92T1/F8T4BCMJSYZ92T1.LARGE.jpg", "https://cdn.instructables.com/FEB/TTGI/JTWS7F06/FEBTTGIJTWS7F06.LARGE.jpg", "https://cdn.instructables.com/FVB/KGBG/JSYZ92QX/FVBKGBGJSYZ92QX.LARGE.jpg", "https://cdn.instructables.com/FL5/NTV1/JSYZ92TI/FL5NTV1JSYZ92TI.LARGE.jpg"], "step_title": "Step 5: Assembling the Slider Rails for the Y-Axis"}, {"step": 6, "steps_text": "Here, using super glue and screw I've attached the guiding mechanism to the laser housing.\nAttached the stepper motor onto the place using the screws and afterwards inserted the smooth rods and guiding part into the holes given by keeping in mind that slider is moving freely not too hard. And attached the side frame pillars to it.", "step_imgs": ["https://cdn.instructables.com/FV7/URE0/JSYZ92NN/FV7URE0JSYZ92NN.LARGE.jpg", "https://cdn.instructables.com/F94/UVRY/JSYZ92OT/F94UVRYJSYZ92OT.LARGE.jpg", "https://cdn.instructables.com/FOK/UDEO/JSYZ92TU/FOKUDEOJSYZ92TU.LARGE.jpg", "https://cdn.instructables.com/FVN/5CEX/JTWS7F39/FVN5CEXJTWS7F39.LARGE.jpg", "https://cdn.instructables.com/FBE/2GSP/JSYZ92UY/FBE2GSPJSYZ92UY.LARGE.jpg", "https://cdn.instructables.com/FV3/BAMD/JSYZ92U2/FV3BAMDJSYZ92U2.LARGE.jpg", "https://cdn.instructables.com/F1X/7EOH/JSYZ92UZ/F1X7EOHJSYZ92UZ.LARGE.jpg", "https://cdn.instructables.com/F6R/ZN2Y/JSYZ92V0/F6RZN2YJSYZ92V0.LARGE.jpg"], "step_title": "Step 6: Assembling the Slider Rails for the X-Axis"}, {"step": 7, "steps_text": "For the stepper motors I've used old usb cable, because it has 4 wire inside and have a cover on it, and it is more flexible and easy to work with.\nUsing continuity mode in Multimeter determine determine 2 Coil, Coil A and Coil B.\nI made 2pairs of wire by selecting colours, one pair for the Coil A and second for the Coil B.\nSoldered them and used heat shrink tube on it.", "step_imgs": ["https://cdn.instructables.com/FE9/1XUP/JSYZ92PZ/FE91XUPJSYZ92PZ.LARGE.jpg", "https://cdn.instructables.com/F0G/N1CE/JSYZ92Q8/F0GN1CEJSYZ92Q8.LARGE.jpg", "https://cdn.instructables.com/F18/A2GE/JSYZ92XM/F18A2GEJSYZ92XM.LARGE.jpg"], "step_title": "Step 7: Wiring of Stepper Motors"}, {"step": 8, "steps_text": "Using 4x M3x12 screws, combined the base and two side frame into one assembly.", "step_imgs": ["https://cdn.instructables.com/FLM/FT3H/JSYZ92V8/FLMFT3HJSYZ92V8.LARGE.jpg", "https://cdn.instructables.com/F9D/8YUR/JSYZ92VI/F9D8YURJSYZ92VI.LARGE.jpg"], "step_title": "Step 8: Combing the X and Y Axis"}, {"step": 9, "steps_text": "PARTS USED FOR THE DRIVER ARE:\nArduino Nano.\n2x A4988 Stepper motor drivers.\n1x IRFZ44N N-CHANNEL MOSFET.\n1x LM7805 Voltage regulator with Heatsink.\n1x 47ohm and 1x 10k resistor.\n1x 1000uf 16V capacitor.\n1x 2.5mm JST XH-Style 2pin male connector.\nMALE and FEMALE Header Pins.\n1x (20mm x 80mm blank PCB).\nIn GRBL the digital and analog Pins of Arduino are reserved. The\n'Step' pin for the X and Y axes is attached to digital pins 2,and 3 respectively. The 'Dir' pin for the X and Y axes is attached to digital pins 5 and 6 respectively. D11 is for laser Enable. The Arduino gets power through the USB Cable. The A4988 Drivers through external power source. All ground share common connections. VDD of A4988 are connected to 5V of Arduino. The laser I've used runs on 5V and has built in constant current circuit. For the constant 5V source from the external power supply LM7805 voltage regulator is used. Heatsink is compulsory. The IRFZ44N N-CHANNEL MOSFET works as an elelctronic switch when receives digital high signal from pin D11 of Arduino. NOTE: 5V from Arduino nano can't be used beause the laser draws more than 250mA and the Arduino Nano is not capable of delivering that much of current.\nConfiguring Micro Stepping for Each Axis.\nMS0 MS1 MS2 Microstep Resolution.\nLow Low Low Full step.\nHigh Low Low Half step.\nLow High Low Quarter step.\nHigh High Low Eighth step.\nHigh High High Sixteenth step .\nThe 3 pins (MS1, MS2 and MS3) are for selecting one of the five step\nresolutions according to the above truth table. These pins have internal pull-down resistors so if we leave them disconnected, the board will operate in full step mode. I've used the 16th step configuration for smooth and noise free. Most (but certainly not all) stepper motors do 200 full steps per revolution. By appropriately managing the current in the coils it is possible to make the motor move in smaller steps. The Pololu A4988 can make the motor move in 1/16th steps - or 3,200 steps per revolution.The main advantage of microstepping is to reduce the roughness of the motion. The only fully accurate positions are the full-step positions. The motor will not be able to hold a stationary position at one of the intermediate positions with the same position accuracy or with the same holding torque as at the full step positions.Generally speaking when high speeds are required full steps should be used.", "step_imgs": ["https://cdn.instructables.com/FYE/53Q7/JSYZ7DB1/FYE53Q7JSYZ7DB1.LARGE.jpg", "https://cdn.instructables.com/FKQ/CSBX/JSYZ7DA1/FKQCSBXJSYZ7DA1.LARGE.jpg", "https://cdn.instructables.com/FU2/VH1I/JTWS72O2/FU2VH1IJTWS72O2.LARGE.jpg", "https://cdn.instructables.com/FSM/Z8YV/JTWS72KR/FSMZ8YVJTWS72KR.LARGE.jpg", "https://cdn.instructables.com/FIQ/2SKI/JSYZ7DAA/FIQ2SKIJSYZ7DAA.LARGE.jpg", "https://cdn.instructables.com/FMG/9D3I/JSYZ7DB3/FMG9D3IJSYZ7DB3.LARGE.jpg", "https://cdn.instructables.com/F19/4M7Q/JSYZ7DB4/F194M7QJSYZ7DB4.LARGE.jpg", "https://cdn.instructables.com/F38/RR3I/JSYZ7DB0/F38RR3IJSYZ7DB0.LARGE.jpg", "https://cdn.instructables.com/F4N/0URU/JSYZ7DAZ/F4N0URUJSYZ7DAZ.LARGE.jpg", "https://cdn.instructables.com/FTD/IQ0X/JSYZ7DB2/FTDIQ0XJSYZ7DB2.LARGE.jpg", "https://cdn.instructables.com/FMF/DQ1K/JSYZ7DB8/FMFDQ1KJSYZ7DB8.LARGE.jpg"], "step_title": "Step 9: The Electronics"}, {"step": 10, "steps_text": "Assembled the driver board on the back plate using 2x M2 screws and to the frame of the machine using 2x M3x12 Screws. Plugged in the connections for the Stepper motors X ,Y and the Laser.", "step_imgs": ["https://cdn.instructables.com/F16/OK0K/JT91MTXG/F16OK0KJT91MTXG.LARGE.jpg", "https://cdn.instructables.com/FRX/8FD5/JSYZ92X9/FRX8FD5JSYZ92X9.LARGE.jpg"], "step_title": "Step 10: Assembling the Electronics to Frame."}, {"step": 11, "steps_text": "To achieve high step rates, the motor supply is typically much higher than would be permissible without active current limiting. For instance, a typical stepper motor might have a maximum current rating of 1A with a 5\u03a9 coil resistance, which would indicate a maximum motor supply of 5 V. Using such a motor with 12 V would allow higher step rates, but the current must actively be limited to under 1A to prevent damage to the motor. The A4988 supports such active current limiting, and the trimmer potentiometer on the board can be used to set the current limit. One way to set the current limit is to put the driver into full-step mode and to measure the current running through a single motor coil without clocking the STEP input. The measured current will be 0.7 times the current limit (since both coils are always on and limited to 70% of the current limit setting in full-step mode). Please note that changing the logic voltage, Vdd, to a different value will change the current limit setting since the voltage on the \u201cref\u201d pin is a function of Vdd. Another way to set the current limit is to measure the voltage directly on top of the potentiometer and to calculate the resulting current limit (the current sense resistors are 0.1\u03a9). The current limit relates to the reference voltage as follows: Current Limit = VREF \u00d7 1.25 So, for example, if the reference voltage is 0.6 V, the current limit is 0.75A. As mentioned above, in full step mode, the current through the coils is limited to 70% of the current limit, so to get a full-step coil current of 1A, the current limit should be 1A/0.7=1.4A, which corresponds to a VREF of 1.4A/1.25=1.12 V. See the A4988 datasheet for more information. Note: The coil current can be very different from the power supply current, so you should not use the current measured at the power supply to set the current limit. The appropriate place to put your current meter is in series with one of your stepper motor coils.", "step_imgs": ["https://cdn.instructables.com/F35/T7OB/JT91MVGT/F35T7OBJT91MVGT.LARGE.jpg", "https://cdn.instructables.com/FL0/0FHI/JT91MVGY/FL00FHIJT91MVGY.LARGE.jpg"], "step_title": "Step 11: Adjusting the Stepper Driver Current"}, {"step": 12, "steps_text": "The laser I've used is Focusable Laser Module 200-250mW 650nm. The outer metal housing work as a Heatsink for the laser diode. It has focusable lens for the adjustment of laser dot. Connect the laser wire terminal to the laser socket on the driver board.\nYou can get one Here.", "step_imgs": ["https://cdn.instructables.com/FOE/Y8LU/JSYZ7DB6/FOEY8LUJSYZ7DB6.LARGE.jpg", "https://cdn.instructables.com/FET/2YLY/JSYZ92VX/FET2YLYJSYZ92VX.LARGE.jpg", "https://cdn.instructables.com/FKX/LDZG/JSYZ92WT/FKXLDZGJSYZ92WT.LARGE.jpg"], "step_title": "Step 12: Laser Assembly"}, {"step": 13, "steps_text": "Using four small Neodymium magnets lock the working piece on the working bed and set the X and Y-axis to initial position (home). Power up the driver board through External power source, and Arduino Nano to Computer through a USB A to USB Mini B Cable.\nAlso power the board through a external power source.\nSAFETY FIRST.\nLASER SAFETY GLASSES ARE MUST NEEDED", "step_imgs": ["https://cdn.instructables.com/F3C/7DTQ/JSYZ92YI/F3C7DTQJSYZ92YI.LARGE.jpg", "https://cdn.instructables.com/F35/XJ7P/JTON79D7/F35XJ7PJTON79D7.LARGE.jpg"], "step_title": "Step 13: Getting Ready!"}, {"step": 14, "steps_text": "Download the GRBL , Here\nExtract on the desktop the grbl-master folder, you find it in the file master.zip\nRun the Arduino IDE\nFrom the application bar menu, choose: Sketch -> #include Library -> Add Library from file.ZIP\nSelect the folder grbl that you can find inside the grlb-master folder and click on Open\nThe library now is installed and the IDE software will show you this message: The library is added to your library. Check the \u201clibraries Inclusion\u201d menu.\nThen open an example called \"grbl upload\" and upload it to your arduino board.", "step_imgs": ["https://cdn.instructables.com/FTA/AMBP/JT91LIW2/FTAAMBPJT91LIW2.LARGE.jpg", "https://cdn.instructables.com/FK3/6T2R/JT91LIW4/FK36T2RJT91LIW4.LARGE.jpg", "https://cdn.instructables.com/F78/Z97O/JT91LIW3/F78Z97OJT91LIW3.LARGE.jpg", "https://cdn.instructables.com/FS4/35NP/JT91LJHP/FS435NPJT91LJHP.LARGE.jpg", "https://cdn.instructables.com/F2S/BXTC/JT91LIW6/F2SBXTCJT91LIW6.LARGE.jpg", "https://cdn.instructables.com/FQ5/OZ2E/JT91LIW5/FQ5OZ2EJT91LIW5.LARGE.jpg"], "step_title": "Step 14: GRBL Firmware"}, {"step": 15, "steps_text": "Also we need a software to send G-Code to CNC for that I've used the LASER GRBL\nLaserGRBL is one of the best Windows GCode streamer for DIY Laser\nEngraver. LaserGRBL is able to load and stream GCode path to arduino, as well engrave images, pictures and logo with internal conversion tool.\nLASER GRBL Download.\nLaserGRBL constantly checks for COM ports available on the machine. The list of ports allows you to select the COM port which your control board is connected on.\nPlease select the proper baud rate for the connection according to your machine firmware configuration (default 115200).\nGrbl Settings:\n$$ - View Grbl settings\nTo view the settings,type $$ and press enter after connecting to Grbl. Grbl should respond with a list of the current system settings, as shown in the example below. All of these settings are persistent and kept in EEPROM, so if you power down, these will be loaded back up the next time you power up your Arduino.\n$0=10 (step pulse, usec)\n$1=25 (step idle delay, msec)\n$2=0 (step port invert mask:00000000)\n$3=6 (dir port invert mask:00000110)\n$4=0 (step enable invert, bool)\n$5=0 (limit pins invert, bool)\n$6=0 (probe pin invert, bool)\n$10=3 (status report mask:00000011)\n$11=0.020 (junction deviation, mm)\n$12=0.002 (arc tolerance, mm)\n$13=0 (report inches, bool)\n$20=0 (soft limits, bool)\n$21=0 (hard limits, bool)\n$22=0 (homing cycle, bool)\n$23=1 (homing dir invert mask:00000001)\n$24=50.000 (homing feed, mm/min)\n$25=635.000 (homing seek, mm/min)\n$26=250 (homing debounce, msec)\n$27=1.000 (homing pull-off, mm)\n$100=314.961 (x, step/mm)\n$101=314.961 (y, step/mm)\n$102=314.961 (z, step/mm)\n$110=635.000 (x max rate, mm/min)\n$111=635.000 (y max rate, mm/min)\n$112=635.000 (z max rate, mm/min)\n$120=50.000 (x accel, mm/sec^2)\n121=50.000 (y accel, mm/sec^2)\n$122=50.000 (z accel, mm/sec^2)\n$130=225.000 (x max travel, mm)\n$131=125.000 (y max travel, mm)\n$132=170.000 (z max travel, mm)", "step_imgs": ["https://cdn.instructables.com/FU7/5WXY/JT91LJVX/FU75WXYJT91LJVX.LARGE.jpg", "https://cdn.instructables.com/FAW/GT9V/JT91LJVW/FAWGT9VJT91LJVW.LARGE.jpg", "https://cdn.instructables.com/F3C/SYQS/JT91LJVT/F3CSYQSJT91LJVT.LARGE.jpg", "https://cdn.instructables.com/FUO/Q9BH/JT91LJVV/FUOQ9BHJT91LJVV.LARGE.jpg", "https://cdn.instructables.com/F5B/TLXN/JT91LJVU/F5BTLXNJT91LJVU.LARGE.jpg", "https://cdn.instructables.com/F5O/9VEZ/JT91LJW0/F5O9VEZJT91LJW0.LARGE.jpg"], "step_title": "Step 15: Software to Send G-CODE"}, {"step": 16, "steps_text": "Here comes the Most Difficult part of the Project.\n-Adjusting the laser beam into the smallest dot possible on the work piece. This is the Trickiest part which require time and patience using trail and error method.\n-Tweaking the GRBL settings for $100, $101, $130 and $131\nMy setting for the GRBL is,\n$100=110.000\n$101=110.000\n$130=40.000\n$131=40.000\nI tried engraving a square of 40mm sides and after so many error and tweaking the setting of grbl, I get the proper 40mm line engraved from the both X and Y-axis. If the resolution of X and Y-Axis are not same the image will scale in either direction.\nKeep in mind not all Stepper motor From DVD Drives are the same.\nIt is lengthy and time consuming process but the results are so satisfying when tweaked.\nLaserGRBL user interface.\nConnection control: here you can select serial port and properbaud rate for connection, according to grbl firmware configuration.\nFile control: this show loaded filename and engraving process progress. The green \u201cPlay\u201d button will start program execution.\nManual commands: you can type any G-Code line here and press \u201center\u201d. Commands will be enqueued to command queue.\nCommand log and command return codes: show enqueued commands and their execution status and errors.\nJogging control: allow manual positioning of the laser. The left vertical slider control movement speed, right slider control step size.\nEngraving preview: this area show final work preview. During engraving a small blue cross will show current laser position at runtime.\nGrbl reset/homing/unlock: this buttons submit soft-reset, homing and unlock command to grbl board. On the right of unlock button you can add some user defined buttons.\nFeed hold and resume: this buttons can suspend and resume program execution sending Feed Hold or Resume command to grbl board.\nLine count and time projection: LaserGRBL could estimate program execution time based on actual speed and job progress.\nOverrides status an control: show and change actual speed and power override. Overrides is a new feature of grbl v1.1 and is not supported in older version.", "step_imgs": ["https://cdn.instructables.com/F1J/SNYJ/JT91MVK2/F1JSNYJJT91MVK2.LARGE.jpg", "https://cdn.instructables.com/FYJ/YTSI/JT91MVKB/FYJYTSIJT91MVKB.LARGE.jpg", "https://cdn.instructables.com/FRV/BQAC/JSYZ7DB7/FRVBQACJSYZ7DB7.LARGE.jpg"], "step_title": "Step 16: Tweaking the System"}, {"step": 17, "steps_text": "Raster import allows you to load an image of any kind in LaserGRBL and turn it GCode instructions without the need of other software. LaserGRBL supports photos, clip art, pencil drawings, logos, icons and try to do the best with any kind of image.\nIt can be recalled from \u201cFile, Open File\u201d menu by selecting an image of type jpg, png or bmp\nThe setting for engraving is different for all materials.\nDefine the engraving speed per mm and Quality- lines per mm Video Attached is the time-lapse of the whole process.", "step_imgs": ["https://cdn.instructables.com/FIL/ZAZC/JTON6MMA/FILZAZCJTON6MMA.LARGE.jpg", "https://cdn.instructables.com/F21/MV5A/JTON6N73/F21MV5AJTON6N73.LARGE.jpg", "https://cdn.instructables.com/F1O/0YS0/JTON6NWY/F1O0YS0JTON6NWY.LARGE.jpg", "https://cdn.instructables.com/FEH/79P0/JTON6O1K/FEH79P0JTON6O1K.LARGE.jpg"], "step_title": "Step 17: Wood Engraving"}, {"step": 18, "steps_text": "This 250mW Laser is Also capable of cutting thin papers, but the speed should be very low i.e. not more than 15mm/min and laser beam should be properly adjusted.\nVideo Attached is the time-lapse of the whole process.", "step_imgs": ["https://cdn.instructables.com/FJ4/C84O/JTON6NZ8/FJ4C84OJTON6NZ8.LARGE.jpg"], "step_title": "Step 18: Thin Paper Cutting"}, {"step": 19, "steps_text": "I have made some Custom vinyl sticker. Boarder speed changes with respect to the colour of the vinyl used.\nDark colours are the easy to work with while the Lighter colours are some tricky.\nThe above Images demonstrate how to use vinyl sticker which are made using the CNC.\nBut keep in mind that burning vinyl releases carcinogenic fumes. They smell really bad.\n\u2665 Special thanks to the GRBL Developers :)\nI hope you liked this project, let me know in the comments if any queries, I would like to see photos of your CNC machines too!\nThanks!! for Your support.", "step_imgs": ["https://cdn.instructables.com/FYW/AEOA/JTON6NWJ/FYWAEOAJTON6NWJ.LARGE.jpg", "https://cdn.instructables.com/FNP/U6ZM/JTON6NU9/FNPU6ZMJTON6NU9.LARGE.jpg"], "step_title": "Step 19: Vinyl Cutting and Making Custom Stickers"}], "channel": ""}, {"category": "", "description": "At the end of last year I saw a Thor Mjolnir Rattle popup by IJustLikeMakingThings. Having just had a baby boy I knew I wanted to make one of these on my 3D printer. To design this I used Solidworks and built it full scale using reference material from the internet. I plan on printing a full scale version of this later but as a fun test print I built one scale down to be a baby rattle. The .STL files I included will be at full scale. I scaled them down to 30% for the baby rattle.", "title": "Mjolnir Baby Rattle", "url": "https://www.instructables.com/id/Mjolnir-Baby-Rattle/", "section": "technology", "steps": [{"step": 1, "steps_text": "The printer I used is a Creality CR-10 and I used Cura to slice each part.\nI used the following settings for each part:\nLayer Height: 0.1mm\nInfill: 25%\nExtruder Temp: 200 degrees celsius\nBuild Plate Temp: 65 degrees celsius\nFlow: 100%\nBuild Plate Adhesion: Brim (I used a raft for the handle to give it a more stable base)\nSupports: Triangles\nRemoving supports is fairly straight forward. Use cation removing the supports from the handle because they surround most of the handle.", "step_imgs": ["https://cdn.instructables.com/FXU/Z6X4/JTON11T0/FXUZ6X4JTON11T0.LARGE.jpg", "https://cdn.instructables.com/FMH/2F43/JTON11V2/FMH2F43JTON11V2.LARGE.jpg", "https://cdn.instructables.com/FSW/JLVW/JTON11VV/FSWJLVWJTON11VV.LARGE.jpg", "https://cdn.instructables.com/FDA/4G5H/JTON11WO/FDA4G5HJTON11WO.LARGE.jpg", "https://cdn.instructables.com/FD8/MWDP/JTON121K/FD8MWDPJTON121K.LARGE.jpg", "https://cdn.instructables.com/F31/N3BX/JTON125P/F31N3BXJTON125P.LARGE.jpg"], "step_title": "Step 1: Printing"}, {"step": 2, "steps_text": "Before glue any of the parts together, be sure to do a dry fit. You might need to shave off of little bit a the portion that fits into the body of the hammer. Use a x-acto knife or a file to knock down those small edges. If need be, use a file to open up the hole in the body. Take care not to remove to much on the handle or the hole for the handle. That needs to be nice and tight.\nI used a Locite epoxy plastic bonder. This was my first time using it and it bonded everything real nice. Use small amounts evenly applied to the contacting surfaces.\nThe first glue up will be the cap and two hammer heads to the body. Painters tape does great holding it together.\nLet that glue set up, my epoxy takes 20 minutes. Before gluing the handle on, pour in a tablespoon of rice through the hole for the handle. You could use anything one want for the rattle noise.\nFinally glue on the handle and secure it with tape making sure that it sits square to the hammer.", "step_imgs": ["https://cdn.instructables.com/F6A/0ZX3/JTON12T5/F6A0ZX3JTON12T5.LARGE.jpg", "https://cdn.instructables.com/FAW/3TLD/JTON126L/FAW3TLDJTON126L.LARGE.jpg", "https://cdn.instructables.com/F4H/6YE6/JTON12BL/F4H6YE6JTON12BL.LARGE.jpg", "https://cdn.instructables.com/F7N/92XS/JTON12D2/F7N92XSJTON12D2.LARGE.jpg", "https://cdn.instructables.com/F8S/MEJE/JTON12ES/F8SMEJEJTON12ES.LARGE.jpg", "https://cdn.instructables.com/F7T/1EJU/JTON12GE/F7T1EJUJTON12GE.LARGE.jpg", "https://cdn.instructables.com/F84/D2CC/JTON12I5/F84D2CCJTON12I5.LARGE.jpg", "https://cdn.instructables.com/F08/2D9M/JTON12I1/F082D9MJTON12I1.LARGE.jpg", "https://cdn.instructables.com/FHP/P4A1/JTON12MM/FHPP4A1JTON12MM.LARGE.jpg", "https://cdn.instructables.com/FWD/PEPW/JTON12PA/FWDPEPWJTON12PA.LARGE.jpg", "https://cdn.instructables.com/F2Q/85UK/JTON13GS/F2Q85UKJTON13GS.LARGE.jpg"], "step_title": "Step 2: Assembly"}, {"step": 3, "steps_text": "At this point I was done and my son loves it. I wanted to give it a nice paint job to give it that authentic Mjolnir look but I figured my son would be putting this in his mouth and I didn't want paint coming off.\nLike I said I plan to make a full scale version of this design and I will painting that one.\nThank you for your interest in my little project for my son and thanks to IJustLikeMakingThings for giving me the inspiration.\nIf you feel that it is worthy, I would be grateful for your vote in the Remix Contest", "step_imgs": ["https://cdn.instructables.com/FGL/S98H/JTON17JW/FGLS98HJTON17JW.LARGE.jpg", "https://cdn.instructables.com/F5H/ZO9S/JTON13F8/F5HZO9SJTON13F8.LARGE.jpg", "https://cdn.instructables.com/FMP/WU7E/JTON13FF/FMPWU7EJTON13FF.LARGE.jpg"], "step_title": "Step 3: Finished-Final Thoughts"}], "channel": ""}, {"category": "", "description": "There are few things that are more frustrating than spending an evening taking photos of the heavens with your telescope, only to find that all of your photos are slightly out of focus...\nFocussing a telescope for astrophotography is very difficult, the diffraction patterns around stars mean that they never really focus to a point; it is difficult to say when they are smallest, and difficult to keep track of which way the focus needs adjusting.\nFortunately Pavel Bahtinov invented a great solution back in 2005. The best way to achieve a sharp focus is to use a diffractive mask (a Bahtinov mask) to give great visibility of both how well focussed the telescope is and the direction with which it is out of focus.\nYou can buy these or make them yourself (I will write an instructable on laser cutting one as soon as I get around to lasering one myself!), but in this instructable I will show you how to use the principle to focus your telescope quickly, simply and almost for free... using only electrical tape.\nFor the avoidance of doubt, once the telescope is focussed, the tape is removed to give a sharp image.\nFor this you will require:\nSome electrical tape. Any opaque tape that doesn't leave a gluey mess behind will work, but PVC electrical tape is what I use.\nA reflector telescope. I used an 8 inch Schmidt Cassegrain (Nexstar 8SE), but it should work equally well with most Newtonians or Maks. You might be able to do this with a refractor but it is less easy and risks getting the tape on the lens.\nA camera with suitable adapter. Not strictly necessary, as you can focus for direct viewing with this technique. I used a Sony Alpha a6000 on a 1.25\" eyepiece adapter.\nNote: Telescopes are fragile, so don't go putting big forces on things or you'll de-collimate (or worse) your telescope!\nAll photos are from my telescope, focussed using this method, and not photoshopped beyond brightness/contrast adjustment (not even photo stacking)", "title": "Focus a Telescope Using Tape", "url": "https://www.instructables.com/id/Focus-a-Telescope-With-Tape/", "section": "technology", "steps": [{"step": 1, "steps_text": "Tear a strip of tape slightly longer than the radius of your telescope. Very gently stick one end of this to the centre secondary support with the tape held taut horizontally coming out to the rim at the 9 o'clock position. At all times make sure the tape is held away from the corrector plate lens to avoid getting any residue on the lens. Stick the far end carefully on the rim with the tape taut enough to bridge without touching the corrector, while being careful not to pull hard enough to either unstick the tape or affect collimation of the secondary.\nIn the same way, carefully add two pieces of tape to the other side, angled around 20\u00b0 either side of horizontal (i.e. below 2 o'clock and above 4 o'clock). See the pictures for details.\nIf attempted on a refractor, this Y would need adding in one go!", "step_imgs": ["https://cdn.instructables.com/FMV/1YGY/JTON1PP4/FMV1YGYJTON1PP4.LARGE.jpg", "https://cdn.instructables.com/F7U/SFRU/JTON1PP5/F7USFRUJTON1PP5.LARGE.jpg"], "step_title": "Step 1: Carefully Add Strips of Tape to Form a 'Y'"}, {"step": 2, "steps_text": "Now add 4 more strips, two each side, parallel with the previous strips.\nThe aim here is to form two horizontal slots approximately 5m wide one side, and two angled slots (again 5mm wide) the other side. It is important to get the tape as parallel as possible such that the slot is constant width all the way along. The exact width of the slot is less critical. Again see the image for details.\nIf attempted on a refractor a small vertical length of tape would be needed to tie all the tape together in the middle so it is held taut. I haven't tried this, and expect this would be tricky but not impossible!", "step_imgs": ["https://cdn.instructables.com/FMJ/XXUO/JTON1PON/FMJXXUOJTON1PON.LARGE.jpg"], "step_title": "Step 2: Add Further Strips to Create Narrow Slots"}, {"step": 3, "steps_text": "Point the telescope at a bright star. Polaris may be a good choice if you don't have a tracking mount. Centre the star in the camera's view and focus the telescope until the star looks like a spiky white dot. If you have a focus-assist magnifier view, use it now to make things easier to see.\nThe spikes are caused by the narrow slots diffracting the star light. The side with the horizontal slots makes a vertical 'I' spike, while the two angled slots make two angled spikes forming an 'X'. As the focus is changed near the optimal focus, the I and X slide sideways relative to each other.\nAdjust the focus until they overlap, noting which way the I moves when the focuser is turned clockwise.", "step_imgs": ["https://cdn.instructables.com/FAA/4YZX/JTON1POM/FAA4YZXJTON1POM.LARGE.jpg", "https://cdn.instructables.com/F0X/0WBZ/JTON1TIF/F0X0WBZJTON1TIF.LARGE.jpg"], "step_title": "Step 3: Point the Telescope at a Bright Star and Coarsely Focus"}, {"step": 4, "steps_text": "As you get closer to centralised, you will have to visualise the crossing point of the two spikes that form the X, and try to get the I as well centred as possible. This will require minute changes, and you'll need to wait for the vibrations to settle after each adjustment.\nFortunately, with this method you have a good read out which way the focuser needs turning, and how far from perfection you are. You will notice that the adjustments become far finer than you'd be making focussing by eye as this method gets a very accurate focus.\nOnce you cannot centre things any better you have achieved a really good focus! Carefully remove the tape so you no longer get the diffraction spikes.", "step_imgs": ["https://cdn.instructables.com/F1N/PBLC/JTON1VCH/F1NPBLCJTON1VCH.LARGE.jpg", "https://cdn.instructables.com/F65/BS5W/JTON1PJK/F65BS5WJTON1PJK.LARGE.jpg"], "step_title": "Step 4: Make Fine Adjustments to Centre the I Within the X"}, {"step": 5, "steps_text": "Here's the pay off... you get to take awesome photos of whatever you fancy!\nI'm pleased with these photos.\nThey are of:\nM65, M66 from the Leo Triplet\nM51 Whirlpool Galaxy in Canes Venatici\nM42 Orion Nebula\nThe Moon\nAll four are in perfect focus. Any apparent blur will be down to at least one of: atmospheric distortion (poor seeing), tracking error (over 10-30s exposures on an Alt-Az mount), overexposure of stars, or the diffraction limit of resolution of my telescope.\nStill they aren't bad for single photos taken in my back garden with a telescope I can easily lift! If you want to eliminate tracking error and some atmospheric distortion, stacking multiple short exposures can improve quality significantly.\nI hope you have found this instructable interesting/useful. If so please vote for me in the Tape Contest!", "step_imgs": ["https://cdn.instructables.com/F6V/FBP9/JTON257Q/F6VFBP9JTON257Q.LARGE.jpg", "https://cdn.instructables.com/FK4/SEVJ/JTON252J/FK4SEVJJTON252J.LARGE.jpg", "https://cdn.instructables.com/FT5/N7OJ/JTON2555/FT5N7OJJTON2555.LARGE.jpg", "https://cdn.instructables.com/FS0/TOL6/JTON25A5/FS0TOL6JTON25A5.LARGE.jpg"], "step_title": "Step 5: Take Some Awesome, in Focus Photos!"}], "channel": ""}, {"category": "", "description": "If you've seen the videos of amazing robot dogs and wanted one for your home--maybe this (for less than $600. in parts and material) is a place to start.", "title": "Mike's Robot Dog", "url": "https://www.instructables.com/id/Mikes-Robot-Dog/", "section": "technology", "steps": [{"step": 1, "steps_text": "Let's start with a list of materials needed. First, there are the 3d printed parts (files available on this site).\nBill of Materials\n(4) Super Servo Holder\n(4) Axle Shorter Thread\n(8) Back Bearinga\n(4) Fat Pieceb\n(4) Bearing Linear\n(4) Axle Nut\n(4) Upper LegA\n(4) Super Servo Combo\n(36) Axle Bolt\n(4) Ankle Servo Conn\n(4) Lower Leg\n(4) Foot Holdera\n(4) Axle\n(4) Foot\n(4) Wire Guide\nOther Parts:\n(32) m3 x 16mm bolts\n(32) flat washers for m3 bolts\n(48) m3 nuts\n(8) FT 5335M servo motors (Pololu.com)\n(8) aluminum horn for FT 5335M servo (pololu.com)\n(20) 2-56 x 7/16\" bolts\n(28) 2-56 nuts\n(24) m3 x 8mm bolts\n(4) 20 kg-cm servo motor (amazon.com)\n(1) Arduino Uno\n(1) 8 volt 3.2 amp hr. sealed lead acid battery (amazon.com)\n(1) digital voltmeter (amazon.com)\n(2) heavy duty toggle switch (amazon.com)\n(16) m3 x 12 mm bolts\n(8) 2-56 x 3/4\" bolts\n(8) lockwashers for 2-56 bolts\n(1) plywood body 1/2\" plywood 28\" x 10\"\n(1) paint for plywood body\n(16) #6 x 1 1/4\" wood screws\n(24) #6 x 3/4\" wood screws\n(4) 5 position terminal blocks\n(4) number 4 x 1/2\" wood screw\n(4) servo extension cable\n(1) aluminum duct tape (or any other tape)\n(4) small tie wrap\n(1) 8\" diameter styrofoam ball\noval styrofoam, glue, paint, google eyes, brown faux fur fabric, brown giant chenille stem For the body, I examined several materials and decided to go with 1/2\" plywood.\nThe body requires about 200 square inches of material.\nBelow are some of the materials considered:\n1/4\" plywood 2.15 grams per square inch\n1/2\" plywood 4.3 grams per square inch\n1/4\" acrylic 4 grams per square inch\n5 mm foam board .59 grams per square inch\n1/4\" plywood is too flexible--I had bending problems requiring support on the early dog versions. 5 mm foam board looks great in theory, but I had doubts about the stiffness and my ability to connect things securely. 1/4\" acrylic would look \"cool,\" but it's not so easy for me to work with. I examined carbon fiber sheets, but that looked like a project unto itself. I cut the plywood in a shape to reduce the weight.", "step_imgs": ["https://cdn.instructables.com/F6M/NS1I/JTON1UGN/F6MNS1IJTON1UGN.LARGE.jpg"], "step_title": "Step 1: Materials Needed"}, {"step": 2, "steps_text": "I painted the plywood.", "step_imgs": ["https://cdn.instructables.com/FY5/JV2M/JTON1TAE/FY5JV2MJTON1TAE.LARGE.jpg"], "step_title": "Step 2:"}, {"step": 3, "steps_text": "Here's the pieces for a leg.", "step_imgs": ["https://cdn.instructables.com/FKA/DH38/JTON1TAG/FKADH38JTON1TAG.LARGE.jpg"], "step_title": "Step 3:"}, {"step": 4, "steps_text": "Attach a servo motor to \"Super Servo Holder\" using (4) m3 x 16 mm bolts, nuts and flat washers. Set the left front shoulder servo to the ccw rotation maximum, 150 degrees.", "step_imgs": ["https://cdn.instructables.com/FMI/6KE5/JTON1TAI/FMI6KE5JTON1TAI.LARGE.jpg"], "step_title": "Step 4:"}, {"step": 5, "steps_text": "To the four axles, attach the servo horns.", "step_imgs": ["https://cdn.instructables.com/FPE/B2KQ/JTON1TAK/FPEB2KQJTON1TAK.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "I slide this piece through the linear bearing.", "step_imgs": ["https://cdn.instructables.com/FR1/2Z2P/JTON1TBE/FR12Z2PJTON1TBE.LARGE.jpg"], "step_title": "Step 6:"}, {"step": 7, "steps_text": "Thread \"fat pieceb\" onto this.", "step_imgs": ["https://cdn.instructables.com/FIX/GVIN/JTON1TC8/FIXGVINJTON1TC8.LARGE.jpg"], "step_title": "Step 7:"}, {"step": 8, "steps_text": "Drill holes 25 mm deep using a 7/64 inch drill bit. Install (4) 20 mm M3 machine screws.", "step_imgs": ["https://cdn.instructables.com/F6N/KB8M/JTON1TF8/F6NKB8MJTON1TF8.LARGE.jpg"], "step_title": "Step 8:"}, {"step": 9, "steps_text": "Set Servo Twist Motor to 90 degrees. Attach \"Servo Twist Holder\" to \"Upper Lega\" using (4) m3 x 12 mm bolts and nuts.", "step_imgs": ["https://cdn.instructables.com/FCC/05VT/JTON1TG1/FCC05VTJTON1TG1.LARGE.jpg"], "step_title": "Step 9:"}, {"step": 10, "steps_text": "Install motor in \"Super Servo Combo\" using (4) m3 x 16 mm bolts, nuts and flat washers.", "step_imgs": ["https://cdn.instructables.com/FL7/Z485/JTON1TG6/FL7Z485JTON1TG6.LARGE.jpg"], "step_title": "Step 10:"}, {"step": 11, "steps_text": "Attach \"Super Servo Combo\" to \"Upper Lega\" using (4) 3d printed \"axle bolts.\"\nSet \"Super Servo Combo\" motor to cw max--30 degrees.", "step_imgs": ["https://cdn.instructables.com/F9T/J0W8/JTON1TGX/F9TJ0W8JTON1TGX.LARGE.jpg"], "step_title": "Step 11:"}, {"step": 12, "steps_text": "Attach \"back bearinga\" to \"Ankle Servo Conn\" using (3) m3 x 8 mm bolts.", "step_imgs": ["https://cdn.instructables.com/FR4/V83E/JTON1THO/FR4V83EJTON1THO.LARGE.jpg"], "step_title": "Step 12:"}, {"step": 13, "steps_text": "Attach aluminum servo horn to \"Ankle Servo Conn\" using (2) 2-56 x 3/4\" bolts, nuts and lockwashers.", "step_imgs": ["https://cdn.instructables.com/FI1/R68I/JTON1TIW/FI1R68IJTON1TIW.LARGE.jpg"], "step_title": "Step 13:"}, {"step": 14, "steps_text": "Connect \"Ankle Servo Conn\" to \"Lower Leg\" using (1) \"Axle Bolt.\"", "step_imgs": ["https://cdn.instructables.com/FPC/GMA6/JTON1TKJ/FPCGMA6JTON1TKJ.LARGE.jpg"], "step_title": "Step 14:"}, {"step": 15, "steps_text": "Connect \"Foot Holdera\" to \"Lower Leg\" using (2) \"Axle Bolts.\"", "step_imgs": ["https://cdn.instructables.com/FAX/CBS5/JTON1TLK/FAXCBS5JTON1TLK.LARGE.jpg"], "step_title": "Step 15:"}, {"step": 16, "steps_text": "Place \"Axle\" in \"Foot.\" It's a loose fit.", "step_imgs": ["https://cdn.instructables.com/F3A/8L7U/JTON1TMJ/F3A8L7UJTON1TMJ.LARGE.jpg"], "step_title": "Step 16:"}, {"step": 17, "steps_text": "Insert foot/axle into \"Foot Holdera.\"", "step_imgs": ["https://cdn.instructables.com/FCP/7YIT/JTON1TMY/FCP7YITJTON1TMY.LARGE.jpg"], "step_title": "Step 17:"}, {"step": 18, "steps_text": "Secure foot using (2) \"Axle Bolts.\"", "step_imgs": ["https://cdn.instructables.com/FGP/0WO5/JTON1TN7/FGP0WO5JTON1TN7.LARGE.jpg"], "step_title": "Step 18:"}, {"step": 19, "steps_text": "Connect lower leg assembly to upper leg assembly by attaching \"Ankle Servo Conn\" to servo motor. Leg should be in sitting position. Insert servo horn screw and tighten.", "step_imgs": ["https://cdn.instructables.com/FKO/FXXX/JTON1TNI/FKOFXXXJTON1TNI.LARGE.jpg"], "step_title": "Step 19:"}, {"step": 20, "steps_text": "Adjust \"fat pieceb\" so that leg will be in sitting position. Insert servo horn screw and tighten.\nPlace \"Servo shoulder holder\" and \"Bearing Linearb\" on plywood body. Assume sitting position for dog. Secure using (4) number 6 x 1 1/4\" screws and (4) number 6 x 3/4\" screws.", "step_imgs": ["https://cdn.instructables.com/F57/MX6F/JTON1TOH/F57MX6FJTON1TOH.LARGE.jpg"], "step_title": "Step 20:"}, {"step": 21, "steps_text": "Insert servo twist motor into \"fat pieceb.\" Install and tighten servo horn screw.", "step_imgs": ["https://cdn.instructables.com/F30/LKBP/JTON1TR4/F30LKBPJTON1TR4.LARGE.jpg"], "step_title": "Step 21:"}, {"step": 22, "steps_text": "Install 5 position terminal block using (2) number 6 x 3/4\" wood screws.", "step_imgs": ["https://cdn.instructables.com/F2T/VREC/JTON1TRV/F2TVRECJTON1TRV.LARGE.jpg"], "step_title": "Step 22:"}, {"step": 23, "steps_text": "Install wire guide. Use (1) number 4 x 1/2\" wood screw.", "step_imgs": ["https://cdn.instructables.com/FCQ/1YI1/JTON1TTD/FCQ1YI1JTON1TTD.LARGE.jpg"], "step_title": "Step 23:"}, {"step": 24, "steps_text": "Connect servo extender cable to \"Super Servo Combo\" servo motor.", "step_imgs": ["https://cdn.instructables.com/FU0/4X6R/JTON1TUT/FU04X6RJTON1TUT.LARGE.jpg"], "step_title": "Step 24:"}, {"step": 25, "steps_text": "Route cable and secure using duct tape. Secure servo wire to \"Servo Twist Holder\" using a tie wrap.", "step_imgs": ["https://cdn.instructables.com/FN6/S0I2/JTON1TWA/FN6S0I2JTON1TWA.LARGE.jpg"], "step_title": "Step 25:"}, {"step": 26, "steps_text": "Secure wires in terminal blocks. From outside looking in, position number 1 (left most) is upper servo control wire. Position 2 is \"servo twist\" control wire. Position 3 is lower (\"super servo combo\") control wire. Position 4 is positive. Position 5 is negative.", "step_imgs": ["https://cdn.instructables.com/F6G/0NM3/JTON1TZW/F6G0NM3JTON1TZW.LARGE.jpg"], "step_title": "Step 26:"}, {"step": 27, "steps_text": "Do this three more times. Left front and right rear legs are the same.\n\nRight front and Left rear legs are set up with the \"Servo shoulder motor\" set to the maximum cw limit (30 degrees) instead of 150 degrees.", "step_imgs": ["https://cdn.instructables.com/FQ5/IVHM/JTON1TZX/FQ5IVHMJTON1TZX.LARGE.jpg"], "step_title": "Step 27:"}, {"step": 28, "steps_text": "To make the dog move, power and control must be provided. The legs are attached to an Arduino and battery as shown in the schematic diagram.\nConnect the motor power terminal blocks using #18 AWG wire.", "step_imgs": ["https://cdn.instructables.com/F9Z/1FE2/JTON1UMU/F9Z1FE2JTON1UMU.LARGE.jpg", "https://cdn.instructables.com/F7S/Z7QI/JTON1U45/F7SZ7QIJTON1U45.LARGE.jpg"], "step_title": "Step 28:"}, {"step": 29, "steps_text": "Add the Arduino.", "step_imgs": ["https://cdn.instructables.com/FNI/DPXE/JTON1U6A/FNIDPXEJTON1U6A.LARGE.jpg"], "step_title": "Step 29:"}, {"step": 30, "steps_text": "Connect the left front leg to the Arduino.", "step_imgs": ["https://cdn.instructables.com/FMG/U7X5/JTON1U71/FMGU7X5JTON1U71.LARGE.jpg"], "step_title": "Step 30:"}, {"step": 31, "steps_text": "Add control to the right front leg from the Arduino.", "step_imgs": ["https://cdn.instructables.com/FHZ/O0MW/JTON1UAM/FHZO0MWJTON1UAM.LARGE.jpg"], "step_title": "Step 31:"}, {"step": 32, "steps_text": "Add control to the right rear leg.", "step_imgs": ["https://cdn.instructables.com/F4M/2D4F/JTON1UBG/F4M2D4FJTON1UBG.LARGE.jpg"], "step_title": "Step 32:"}, {"step": 33, "steps_text": "Finally, connect the left rear leg.", "step_imgs": ["https://cdn.instructables.com/F7S/W5PX/JTON1UCB/F7SW5PXJTON1UCB.LARGE.jpg"], "step_title": "Step 33:"}, {"step": 34, "steps_text": "The power supply is a combination of an 8 volt lead acid battery (sealed), a voltmeter and two switches. Lugs slide onto the battery--they can be removed for recharging. The power supply is mounted on 1/4 inch plywood and the plywood is attached to the body using Velcro. A disconnect plug from the power supply enables the entire supply to be quickly removed or swapped.", "step_imgs": ["https://cdn.instructables.com/FVU/9G9M/JTON1UEG/FVU9G9MJTON1UEG.LARGE.jpg"], "step_title": "Step 34:"}, {"step": 35, "steps_text": "Walking requires a sketch--here's my approach.\nMove RR leg toward body\nMove LF leg forward\nReturn RR leg to stand position\nMove LF leg toward body\nMove RR leg forward\nReturn LF leg to stand position\nMove LR leg toward body\nMove RF leg forward\nReturn LR leg to stand position\nMove RF leg toward body\nMove LR leg forward\nReturn RF leg to stand\nReturn all legs to start position (this moves the body forward)\nRepeat.", "step_imgs": ["https://cdn.instructables.com/FVC/XPQR/JTON1UHE/FVCXPQRJTON1UHE.LARGE.jpg"], "step_title": "Step 35:"}, {"step": 36, "steps_text": "The head and tail reduce the \"uncanny valley\" effect and increase the \"doglike\" look. The head was formed using an 8 inch diameter foam ball (carved for shape). The muzzle is a styrofoam oval--the nose a small circle. The neck was carved from a styrofoam oval. The ears are brown faux fur fabric (craft store) and the tongue is pink foam. Add google eyes, paint and glue for the head. A 1\" x 2\" rectangle of wood was inserted into the neck (square hole cut out first) and that is used to mount the head to the dog. The tail is a \"brown giant chenille stem\" (doubled).", "step_imgs": ["https://cdn.instructables.com/FN7/SMII/JTON1UI6/FN7SMIIJTON1UI6.LARGE.jpg"], "step_title": "Step 36: Head and Tail"}], "channel": ""}, {"category": "", "description": "This project is an remix of my Coke Machine Can Level detector, (https://www.instructables.com/id/Coke-Machine-Can-Level-Detector/) with new sensors, and the addition of spoken sound!\n\nAfter I made my first level detector, I added a piezo buzzer to give audible feedback for the visually impaired. It worked, but was kind of, meh\u2026 What did each particular sound mean? It needed explaining so wasn\u2019t too practical as a solution. I left it and went off to do other things.\nRecently, I made some Portal Turrets that used the DFPlayer Mini MP3 player (or MP3-TF-16P). That project worked out pretty well, and when getting a beverage out of my Coke machine one day, it dawned on me: I could use the DFPlayer chip with a speaker and finally get the solution I originally wanted to help the visually impaired! It would do what it originally did, but would now SPEAK the level in the machine as well!\nI also wanted to use the VL53LOX sensors to change things up. I knew that they used the I2C bus, and they all used the same address, so it was an additional challenge to use 2 of them, along with the LCD screen on the same bus.\nSo now, this version provides the same graphical display when approaching the machine, but when you get a little closer, it will also tell you how many cans are left! I set it up this way with a relatively short speaking distance to avoid nuisance trips when I\u2019m working around the machine.\nIn my mind, this is a cheap platform to provide audible information from various sensors. There is lots more room in the box and on the Nano for other sensory inputs. Now it\u2019s just a matter of coming up with other applications!", "title": "Coke Machine Level Detector - Now With Speech!", "url": "https://www.instructables.com/id/Coke-Machine-Level-Detector-Now-With-Speech/", "section": "technology", "steps": [{"step": 1, "steps_text": "The physical design of the box is pretty much the same as the previous design, but I had to move things around to include the DFPlayer chip and the 4cm speaker as used in the Turret project.\nThe components are printed in the same way as my previous build, with the red/white faceplate printed using the Prusa multi colour print website: (https://www.prusaprinters.org/color-print/). I still don't know if this gcode inclusion will work on other printers without the multi-colour add-ons, but I like the result!\nThe dimensions are the same as the previous build, which means that you could interchange the printed parts (faceplate and sensor holder) and use whatever sensor combinations you like: HC-SR04 or VL53LOX. The difference will come down to code!\nThe top and bottom shown here work together, so they are not interchangeable with the old design.", "step_imgs": ["https://cdn.instructables.com/FDX/3C3F/JTON0O87/FDX3C3FJTON0O87.LARGE.jpg"], "step_title": "Step 1: Printed Parts"}, {"step": 2, "steps_text": "Here is a list of the inner parts on this build:\nArduino Nano\nKuman 0.96 Inch 4-pin Yellow Blue IIC OLED (SSD 1306 or similar).\nVL53LOX (qty: 2 for this version)\ngeneric 5.5mm x 2.1mm DC Socket Panel Mounting connector (see image)\n4cm speaker, 4Ohm, 3Watt (part # CLT1026 or EK1794 on Amazon)\nDFPlayer Mini MP3 player (or MP3-TF-16P)\nA little bit of wiring\nThe 2.1 plug connector is optional, as the unit is wired such that it can be powered through the Nano.\nGiven the power draw for the speaker and other components, a good power supply is needed now as compared to the previous design.", "step_imgs": ["https://cdn.instructables.com/F7W/JGB1/JTON0NSO/F7WJGB1JTON0NSO.LARGE.jpg"], "step_title": "Step 2: Electronics"}, {"step": 3, "steps_text": "Most connections are soldered together directly with wire. The areas that require multiple connections are the 5V power feeds and GND connections to sensors and devices from the Nano. The same applies for the I2C bus to the sensors and LCD screen. I soldered them together and used shrink-wrap to keep it somewhat tidy and to prevent shorts.\n\nI like to pre-wire the individual components, then make the connections between them and to the Nano. In the end, I made some of the connections using plug in connectors, like to the LCD screen. It means I can replace them easily if they burn out, but since the display only comes on when someone is in front, it should be a long while.", "step_imgs": ["https://cdn.instructables.com/FJK/WLGH/JTON0O86/FJKWLGHJTON0O86.LARGE.jpg", "https://cdn.instructables.com/FMZ/H3U9/JTON0O8T/FMZH3U9JTON0O8T.LARGE.jpg", "https://cdn.instructables.com/FCT/S8ER/JTON0O83/FCTS8ERJTON0O83.LARGE.jpg", "https://cdn.instructables.com/FLU/RS2L/JTON0O82/FLURS2LJTON0O82.LARGE.jpg", "https://cdn.instructables.com/F37/ZYUR/JTON0O81/F37ZYURJTON0O81.LARGE.jpg", "https://cdn.instructables.com/F38/QAUP/JTON0O80/F38QAUPJTON0O80.LARGE.jpg", "https://cdn.instructables.com/F16/AYW8/JTON0O5S/F16AYW8JTON0O5S.LARGE.jpg"], "step_title": "Step 3: Wiring"}, {"step": 4, "steps_text": "This device is designed to be assembled with no fasteners. The little nibs or pins on the top cover are delicate and may break off. I designed it this way so that you could drill them out and use 2mm or similar screws if desired. I only add the cover once I\u2019m finally done and haven\u2019t had to resort to screws (even though I\u2019ve broken a few locating pins) as the locking hooks do their job.\nThe top cover with hooks is designed such that you squeeze the bottom sides where the hooks engage the bottom plate a little bit to disengage them and remove the cover. To make this easier, you could drill out the holes a little bit where the pins go in. That would make assembly/disassembly easier.\nThe nano and the DFPlayer will snap into location pretty easily. The power connector is pushed through and the nut locks it into place. The speaker just slips into the printed cradle. The VL53LOX is press fit into the cover and the separate sensor holder. Once they\u2019re pressed in, they don\u2019t move. (don't forget which way the sensor has to point, and don't forget to remove the little plastic film on the sensor before installing!) The same is true for the LCD screen, but it may need some finagling if the PCB dimensions from the supplier are a little different than the ones I use. (I\u2019ve tried some which have slightly different dimensions.) I might add a version that will use 2 screws and a strap as I\u2019ve done with my Master Turret Controller.", "step_imgs": ["https://cdn.instructables.com/FXA/LRMK/JTON0NSQ/FXALRMKJTON0NSQ.LARGE.jpg", "https://cdn.instructables.com/F7P/4U0M/JTON0O85/F7P4U0MJTON0O85.LARGE.jpg", "https://cdn.instructables.com/FZE/2HXB/JTON0O3K/FZE2HXBJTON0O3K.LARGE.jpg", "https://cdn.instructables.com/FIT/WWKT/JTON0O3J/FITWWKTJTON0O3J.LARGE.jpg", "https://cdn.instructables.com/F4W/8LN1/JTON0O84/F4W8LN1JTON0O84.LARGE.jpg"], "step_title": "Step 4: Mechanical Assembly"}, {"step": 5, "steps_text": "The code started out as from my first build, but then got changed around. I use the same libraries for the LCD screen, but needed to incorporate the VL53LOX and the DFPlayer libraries. I originally tried the Adafruit library for the VL53LOX sensors, but they consumed ALL of the memory on the Nano before I could finish my code! I had to abandon that library and go with something that consumed less memory. The resulting libraries used are much leaner and leave room for more sensors! A much better outcome.\nI tried to break up and comment the code where it makes sense, so hopefully it should be pretty apparent as to what\u2019s going on in there. As usual, this project took a bit of research to figure out how to make the libraries do what I wanted. When searching for answers, I find the search results are mostly the problems people are having and not examples of solutions to their problems. Hopefully you will find these examples useful. I've included some as comments in the code.\nThe sounds I use are attached as a zip file. They are just recordings of me saying \"You have...\" [number of cans] \"remaining.\" The files are used the same way as my previous projects, with the files saved as 0001.mp3, 0002.mp3, etc. In this case 0001 is just a reading of the number \"one\" to correspond to the number read aloud.\nI started looking for good quality sound files of someone reading from 1 through 30, but the goods ones I found were behind paywalls and such, so I just grabbed an old Mic, plugged it in and recorded myself counting. Then I cut up and saved them as mp3's using Audacity. Pretty straightforward to make a simple solution. The fun is in incorporating other recordings or sounds! Have fun here!", "step_imgs": [], "step_title": "Step 5: Code"}, {"step": 6, "steps_text": "This was a pretty quick redesign, since it came off the back of the Portal Turret project, and I kept much from the original design. While originally made to keep tabs on my beverage supply, I hope that this simple box can be used for other purposes where sensory information is needed, either displayed or spoken.\nLet me know if you come up with other uses for this simple platform!", "step_imgs": [], "step_title": "Step 6: Final Thoughts"}], "channel": ""}, {"category": "", "description": "Ever tried to get out of bed quietly at night only to trip over something and wake up the whole house?\nMotion sensing night lights installed discreetly under your bed provide low-level light bright enough to guide you around those stray LEGO bricks but dim enough so you're not woken up fully. As well as sensing motion, it's also possible to programme the lights to a colour of your choice for a fixed (or indefinite) length of time. They add a cool glow and ambiance to any bedroom.\nWith some basic kit, a couple of extra bits and our T3ch Flicks tutorial and video, you can install these lights with relative ease in a couple of hours.\nMaterials:\nPower supply (5V 6A) Amazon\nAddressable LED strip Amazon\nArduino Nano Amazon\nWire clips Amazon\nMotion Sensors Amazon\nRocker switch Amazon\nAC Plug\nWire\nFiles (https://gitlab.com/t3chflicks/night-light-leds):", "title": "Motion Sensing Under Bed Lighting", "url": "https://www.instructables.com/id/Motion-Sensing-Under-Bed-Lighting/", "section": "technology", "steps": [{"step": 1, "steps_text": "", "step_imgs": [], "step_title": "Step 1: Watch This!"}, {"step": 2, "steps_text": "Turn the bed onto its side so the base is readily accessible. Find an appropriate location for the control box, we chose the slightly higher area near the head of the bed (see diagram). Measure the perimeter of your bed and its length and width (see diagram). Note down your measurements.\nDetermine a location for the three sensors. You want one facing each of the three sides of the bed which are not against the wall. We chose locations which were close to the edge of the bed, but not visible. Measure the distance from the sensor location to the control box.", "step_imgs": ["https://cdn.instructables.com/F7G/INKA/JTOMWVW0/F7GINKAJTOMWVW0.LARGE.jpg"], "step_title": "Step 2: Measure the Bed"}, {"step": 3, "steps_text": "Cut the LED stip to the length of the bed perimeter.\nNext, cut the wires: you will need three for each sensor and three for the LED strip, each leading back to the control box - 12 in total. Taking three lengths of differently coloured wire, cut to size. We used yellow, green and orange - the accepted convention is red for power, black for ground and another (bold) colour for signal. It doesn\u2019t really matter which colours you use as long as you know which is which.", "step_imgs": [], "step_title": "Step 3: Cut the Wires and LED Strip"}, {"step": 4, "steps_text": "We housed our motion sensors in 3D-printed cases (you can find the file link below). It\u2019s not completely necessary to have these, but they make the sensors tidier and easier to put on the bottom of your bed.\nIf you are using the 3D-printed case, start by threading the three differently coloured wires through the lid. The motion sensors have three different pins: ground (GND), power (VCC), and signal (S) (shown above). When holding the sensor as shown in the diagram above (i.e. with the pins on the bottom edge of the module), attach the three different coloured wires their respective pins and solder them into place. Then, cover the wires using heat shrink. Repeat this for the wires cut for each of the three sensors.\nPush the dome of the motion sensor through the hole in the main case. It should click into place. Close the case, leaving the three coloured wires trailing through the rear hole.", "step_imgs": ["https://cdn.instructables.com/FUF/99U5/JTOMWVXK/FUF99U5JTOMWVXK.LARGE.jpg", "https://cdn.instructables.com/FIN/GG99/JTOMWVUF/FINGG99JTOMWVUF.LARGE.jpg", "https://cdn.instructables.com/F61/F5C2/JTOMWVNU/F61F5C2JTOMWVNU.LARGE.jpg"], "step_title": "Step 4: Solder Cables to Motion Sensor"}, {"step": 5, "steps_text": "The LED strip has the three same connections: power, signal and ground - except the signal pin is an input.\nThese LEDs take instructions from the Arduino, each one of them addressable. We can change colour (RGB) and brightness. Solder three coloured wires to the LED strip, these will be used to connect to the Arduino later.", "step_imgs": ["https://cdn.instructables.com/FI0/ILPV/JTOMWVSW/FI0ILPVJTOMWVSW.LARGE.jpg"], "step_title": "Step 5: Wire the LED Strip"}, {"step": 6, "steps_text": "If you are using the 3D-printed control box, you will need to install the power switch and connect it up to the wires.\nFirst, ensure there\u2019s nothing on the end of your plug, if there is, cut it off. Thread the wire through the hole in the front of the box and out again through the hole for the switch immediately next to it. Strip the outer covering of the AC wire so that 10cm of the three inner wires (Live, Neutral and Earth) can be seen.\nThen, cut and remove 8cm of the live (red) and neutral (blue) wires and set aside for later. Using the remaining 2cm of the end of the AC plug wire, solder the live (red) and neutral (blue) wires to the switch on the bottom two prongs (as shown in the diagram).\nNext, take the 8cm pieces of live (red) and neutral (blue) wires you cut earlier and solder them onto the two prongs on the top of the switch (as shown in the diagram) - these wires will attach to the power box within the control box. Pulling the wires through first, push the switch into its hole in the box.", "step_imgs": ["https://cdn.instructables.com/FAS/47KK/JTOMWVM8/FAS47KKJTOMWVM8.LARGE.jpg", "https://cdn.instructables.com/FFZ/XAXF/JTOMWVKO/FFZXAXFJTOMWVKO.LARGE.jpg"], "step_title": "Step 6: Power Switch"}, {"step": 7, "steps_text": "Put the power supply in the box so the wire connection points face the switch.\nConnect the live (red) and neutral (blue) wires from the switch to the live and neutral connection point (marked l and n respectively) on the power supply. The connection points on the power supply are screws, ensure these are done up tightly once the wires are in place.", "step_imgs": ["https://cdn.instructables.com/FKE/PW9J/JTOMWVJ4/FKEPW9JJTOMWVJ4.LARGE.jpg"], "step_title": "Step 7: Connect Power Supply"}, {"step": 8, "steps_text": "The power supply has output connections for 5V and ground (see diagram). Take the Arduino and cut a power wire (conventionally red, but whatever colour you are using) approximately 8cm long.\nConnect the Arduino to the power supply by screwing one end of the power wire into the \u20185V\u2019 connection point and soldering the other end to the \u2018VIn\u2019 on the Arduino.\nRepeat the process with a ground (black, or whatever colour you have chosen) wire, connecting \u2018GND\u2019 on the power supply and Arduino.", "step_imgs": ["https://cdn.instructables.com/FMN/L3MS/JTOMWVRQ/FMNL3MSJTOMWVRQ.LARGE.jpg", "https://cdn.instructables.com/FZQ/SSE6/JTOMWVSB/FZQSSE6JTOMWVSB.LARGE.jpg"], "step_title": "Step 8: Connect the Arduino"}, {"step": 9, "steps_text": "Thread the LED strip\u2019s wires through the remaining empty hole in the box.\nStrip the LED strip\u2019s power and ground wires. Connect the power (red) wire to the power supply\u2019s \u20185V\u2019 connection point (the Arduino is already attached to this) and the ground (black) wire to the power supply \u2018GND\u2019 connection point (the Arduino is already attached to this, too).\nSolder the LED strip\u2019s signal wire to the digital pin 9 of the Arduino.", "step_imgs": [], "step_title": "Step 9: Connect LED Strip to Power Supply and Arduino"}, {"step": 10, "steps_text": "Thread the motion sensors\u2019 wires (9 in total) through the hole where the LED strip\u2019s wires are.\nSolder the three power wires to the +5V of the Arduino, the ground wires to the gnd of the Arduino and solder the individual signal wires to Arduino pins 10, 11 and 12.", "step_imgs": [], "step_title": "Step 10: Connect Motion Sensors to Arduino"}, {"step": 11, "steps_text": "Download the code below called \u2018motion_sensing_lights.ino\u2019. Then, using the Arduino software downloadable form here, upload the code to your Arduino module. If you are unsure about how to do this, check out here. You will also need to download the FastLED library from here.\nThe code is pretty simple: it continuously checks if the motion sensors have outputted a signal and if so, starts a timer and turns on the led strip to glow up, stay on a minute and then glow down.", "step_imgs": [], "step_title": "Step 11: Programme the Arduino"}, {"step": 12, "steps_text": "Shut the control box - the only things outside it should be the LED strip and the AC plug.\nStick the box to the bottom of the bed in your chosen location - we did this using strong double sided tape.\nThen, attach the motion sensors to the bottom of the bed using double sided tape. The motion sensors should face outwards along the three sides of the bed which are not along the wall. Next, mount the LED strip around the perimeter of the bed.\nAlthough the LED strip has a sticky back, this is not strong enough to hold its weight. Therefore, we held it in place using plastic wire clips which we hammered into the bottom of the bed. Plug in and turn on the control box and turn the bed the right way up.", "step_imgs": ["https://cdn.instructables.com/FTX/TGM0/JTOMWZGD/FTXTGM0JTOMWZGD.LARGE.jpg", "https://cdn.instructables.com/FZV/3R0H/JTOMWZH2/FZV3R0HJTOMWZH2.LARGE.jpg"], "step_title": "Step 12: Put on Bed"}, {"step": 13, "steps_text": "Test out your motion-sensing underbed lighting. You can adjust the motion sensor sensitivity by putting a screwdriver through the top hole of the case and twisting the sensitivity resistor.", "step_imgs": ["https://cdn.instructables.com/F9I/FYAW/JTOMXO9V/F9IFYAWJTOMXO9V.LARGE.jpg"], "step_title": "Step 13: Adjust, Test and Admire"}, {"step": 14, "steps_text": "Using an ESP8266 module (Amazon) instead of the Arduino, it is possible to control the LED strip with your phone or with Alexa by linking it to the open source home automation platform Home Assistant. There\u2019s already been a great tutorial on how to do this, and you can find it here.", "step_imgs": ["https://cdn.instructables.com/FFY/0RMK/JTOMWZGC/FFY0RMKJTOMWZGC.LARGE.jpg"], "step_title": "Step 14: Taking It Further"}, {"step": 15, "steps_text": "This product already exists, and you can buy from amazon here. But where's the fun in that?!", "step_imgs": [], "step_title": "Step 15: If You Can't Be Bothered"}], "channel": ""}, {"category": "", "description": "Everyone knows that time is both fleeting and limited. And yet we still forget this simple truth and continue to waste time on unimportant things.\nI created a watch that would vibrate every 5 minutes to constantly remind me to not waste precious time procrastinating. This watch is different from a traditional watch as it only informs the wearer on the passage of time instead of the current exact time.\nI now wear this watch all the time and it has improved my daily productivity. I hope that this instructable would also help you in making better use of your time.\nNote:\nThis instructable was inspired by the Vibrating Timekeeper instructable. I have improved upon the design to meet my specific needs for this project.", "title": "Vibrating Watch to Remind Wearer Not to Waste Time", "url": "https://www.instructables.com/id/Vibrating-Watch-to-Remind-Wearer-Not-to-Waste-Time/", "section": "technology", "steps": [{"step": 1, "steps_text": "Here are the parts and tools that you'll be needing for this project. Some are optional and their use will be explained throughout this instructable.\nElectronic parts:\nATTiny85\nDisc vibrating motor (Or any kind of vibrating motor, look for low powered ones)\nCR2032 Battery (Or any kind of coin cell battery)\n1N4001 Diode (Or any other general purpose diode)\nPN2222A Transistor (Or any kind of general purpose NPN transistor)\n47 Ohm Resistor (1/4 watts)\n100 Ohm Resistor (Optional)\nMisc parts:\nCoin cell battery holder\nBreadboard\nPerfboard\nConnecting Wires\nSlide switch\nCrimp wire terminal (Optional but recommended)\n8 pin chip socket (Optional but recommended)\nTools:\nATTiny85 Programmer using Arduino (Or other programmers if you have them)\nMultitester\nWire stripper\nSoldering iron\nSoldering wire\nDouble sided tape", "step_imgs": ["https://cdn.instructables.com/FBQ/15WY/JTMSIV1O/FBQ15WYJTMSIV1O.LARGE.jpg"], "step_title": "Step 1: Prepare Parts and Tools"}, {"step": 2, "steps_text": "Build the circuit by following the diagrams and the images above. Take special note of the orientations otherwise the circuit might not work correctly. Be sure to check out the annotations on the image above for more information about specific details.\nOnce you finish building it, you would notice that nothing would happen. This is because the ATTiny85 has not been programmed yet. We will be dong this on the next step.\nExplanation of the circuit:\nThe ATTiny85 sends out a signal on Pin 5 to the NPN transistor (Q1) which acts as a switch that makes the current flow through the motor.\nResistor (R1) lowers the voltage for the motor so that the strength of the vibrations is lower.\nResistor (R2) lowers down the voltage a bit for the transistor's base.\nThe diode (D1) acts a flyback diode that protects the circuit from a voltage spike as a result of power being cut from the motor.\nTips for this step:\nI personally prefer cutting down wires so that they are flat on a breadboard. This makes the board look cleaner and easier to visually debug if there are any problems.\nNote:\nNote that on the picture of the breadboard I've built you may notice that the slide switch is missing. I forgot to add it when I took the picture. This is okay though as the circuit would still work without it.", "step_imgs": ["https://cdn.instructables.com/FC9/7006/JTENIBNN/FC97006JTENIBNN.LARGE.jpg", "https://cdn.instructables.com/FV5/M97C/JTMSIWE0/FV5M97CJTMSIWE0.LARGE.jpg", "https://cdn.instructables.com/FR5/XR2Z/JTIYFILQ/FR5XR2ZJTIYFILQ.LARGE.jpg"], "step_title": "Step 2: Build the Circuit on a Breadboard"}, {"step": 3, "steps_text": "Before the circuit could work we need to program the ATTIny85 using a programmer.\nIf you don't have a programmer yet you can easily make one by following one of these instructables: one is a breadboard version if you want to have a programmer quickly. The other one is in the form of an arduino shield which is more permanent for future use. Any of the two will work.\nCopy the code below and upload it using your programmer:\n#include \n#include \n#include \n#include \n\nconst byte motorPin = 0;\n\nvolatile unsigned long wdCounter = 0; // Volatile tells compiler to reload each time instead of optimizing\n\nunsigned long motorDuration = 500000;\nunsigned long waitDuration = 0;\nunsigned long wdCounterTarget = 75;\nunsigned long timeDelayStarted = 0;\n\nbool isInDelay = false;\n\nvoid setup () {\n pinMode ( motorPin, OUTPUT );\n\n ADCSRA = 0; // Turn off the ADC\n\n startMotorSequence(); // Run the motor once on startup\n sleepNow();\n}\n\nvoid loop () {\n if ( wdCounter == wdCounterTarget ) { // Check if counter has reached target.\n  wdCounter = 0;\n  timeDelayStarted = micros();\n  isInDelay = true; // Now in delay mode\n }\n\n // Continue to loop until enough time has passed to reach waitDuration\n if ( isInDelay\n    && micros() - timeDelayStarted >= waitDuration) {\n  startMotorSequence(); // Run the motor sequence\n  wdCounter = 0;\n  isInDelay = false; // End delay mode\n }\n\n if ( !isInDelay ) {\n  sleepNow();\n }\n}\n\nvoid startMotorSequence() {\n digitalWrite( motorPin, HIGH );\n _delay_us(motorDuration); // Blocking function delay\n digitalWrite ( motorPin, LOW );\n}\n\nvoid sleepNow () {\n set_sleep_mode ( SLEEP_MODE_PWR_DOWN ); // set sleep mode to Power Down. The most energy efficient setting.\n\n power_all_disable (); // Turn power off to TIMER 1, TIMER 2, and Serial Interface\n\n noInterrupts (); // Turn off interrupts as a precaution. Timed sequence follows\n resetWatchDog (); // Reset watchdog, making sure every flag is properly set\n sleep_enable (); // Allows the system to be commanded to sleep\n\n interrupts (); // Turn on interrupts. Guarantees next instruction is executed\n sleep_cpu (); // Goodnight, ATTiny85\n\n sleep_disable (); // Returns here after Watchdog ISR fires.\n power_all_enable (); // Turn on power to TIMER1, TIMER 2, and Serial Interface\n}\n\nvoid resetWatchDog () {\n MCUSR = 0; // Clear various \"reset\" flags\n WDTCR = bit ( WDCE ) | bit ( WDE ) | bit ( WDIF ); // Allow changes, disable reset, clear existing interrupt\n WDTCR = bit ( WDIE ) | 1 << WDP3 | 0 << WDP2 | 0 << WDP1 | 0 << WDP0; // 4s timeout\n\n wdt_reset (); // Reset the watchdog using the parameters\n}\n\nISR ( WDT_vect ) {\n wdt_disable(); // Disable the watchdog timer\n wdCounter++; // Increase the watchdog firing counter.\n}\nOnce the code is successfully upgraded, plug the ATTiny85 chip back on the breadboard. The vibration motor should start to vibrate for around 0.5 seconds. It would then count down for roughly 5 minutes and then vibrate again.\nExplanation of the code:\nTo lower power consumption, the code makes use of the ATTiny85's watchdog timer to do a countdown until the next time it needs to vibrate. Note that this is not what the watchdog timer is intended to be used for, but it has been used by many to have low powered (yet inaccurate) delays. More info here if you don't know what it is.\nThe circuit needs to vibrate every 5 minutes or 300 seconds. So the watchdog uses 4 second intervals and triggers 75 times (4*75=300). Note that if the delay is to be changed then the computations need to be changed as well.\nOther parts of the code is straightforward, when the countdown is finished. The motor is triggered for 0.5 seconds and then the countdown is restarted by triggering the watchdog.\nTips for this step:\nIf there are uploading errors make sure to double check the connections of your programmer. To help with troubleshooting, just copy the error code from Arduino and search for the answers.\nIf there are any unexpected behaviors make sure that there were no changes to the code you downloaded.\nIf there are still problems, consider uploading a simple blink circuit just to test if your programmer is working as intended.\nIf the motor is not vibrating or it is vibrating continuously, make sure to double check your connections from the previous step. You can also try to cut off the power and turn it on back again using the slide switch to restart the program.", "step_imgs": ["https://cdn.instructables.com/FJ6/46G1/JTMSIXIC/FJ646G1JTMSIXIC.LARGE.jpg", "https://cdn.instructables.com/FZ0/T0YS/JTON1185/FZ0T0YSJTON1185.LARGE.jpg"], "step_title": "Step 3: Program the ATTiny85 With an Arduino"}, {"step": 4, "steps_text": "Find a watch case that will house your circuit. You need a lot of room as you'll be fitting all of the components in the breadboard in it except the wires. You can also 3D print your own case, if you prefer.\nOn my end, I used a broken kids watch that has a lot of room inside. I removed all the existing components, hollowed it out, and tried to estimate if the space is enough for everything to fit in it.\nTips for this step:\nTo help approximate if your circuit will fit the case, try and build the circuit found on the next step without soldering the components and then fitting the circuit inside.\nAt the very least, you'll need a size that would not be smaller than your CR2032 battery.", "step_imgs": ["https://cdn.instructables.com/FFP/6MD4/JTIYFMQO/FFP6MD4JTIYFMQO.LARGE.jpg"], "step_title": "Step 4: Get a Watch Case"}, {"step": 5, "steps_text": "Use a ruler to measure the dimensions of the available space inside your chosen case. Cut off a piece of perfboard based on these measurements.\nThe diagram/layout from the images above is the same circuit from that we did using the breadboard only made more compact. It has 10 holes horizontally and 6 holes vertically. This is the smallest version of this circuit that I can come up with. If this layout does not fit your chosen case then you may need to change the layout on your own, or find a bigger case.\nTips for this step:\nBend the legs of the components as seen in the images to keep them in place before you start soldering.\nIf the board is a tight fit sanding down the sides of the board with sandpaper is also an option.", "step_imgs": ["https://cdn.instructables.com/FGW/LUW5/JTMSJ0SQ/FGWLUW5JTMSJ0SQ.LARGE.jpg", "https://cdn.instructables.com/FHO/U8G1/JTMSJ0UO/FHOU8G1JTMSJ0UO.LARGE.jpg"], "step_title": "Step 5: Prepare the Perfboard Layout"}, {"step": 6, "steps_text": "Now it's time to start soldering. This should be straightforward provided that you follow the circuit diagram.\nHere's an instructable in case you don't know how to solder yet.\nNote:\nThe first image showing the circuit diagram above is using a top down view. Which means, if you'll be soldering the components from below, the orientation would be flipped as seen on the second image. It's easy to get confused!\nTips for this step:\nSolder the component in place first before cutting the legs off. This helps in keeping them in place while soldering\nMake sure to check the continuity of the connections with a multimeter as you go along.\nIf you don't want to use too much solder, you could use the legs of the components you recently cut off for straight lines as seen in the image above.", "step_imgs": ["https://cdn.instructables.com/F8F/3ZI6/JTMSJ1M5/F8F3ZI6JTMSJ1M5.LARGE.jpg", "https://cdn.instructables.com/FL7/810L/JTMSJ0UP/FL7810LJTMSJ0UP.LARGE.jpg", "https://cdn.instructables.com/FD0/RGEE/JTMSJ0UT/FD0RGEEJTMSJ0UT.LARGE.jpg"], "step_title": "Step 6: Solder the Components in Place"}, {"step": 7, "steps_text": "To be able to connect the battery with our circuit we first need to use a battery holder. We could use the battery holder we had when we did the circuit on a breadboard but that might not fit in your chosen case.\nOne solution is to attach the end of a wire to a crimp wire terminal as seen in the first image above. Make two of them and then have them in contact with the positive and negative sides of the battery and wrap them using an electrical tape.\nSolder the wires to the circuit and to the slide switch. Be sure to test out the circuit by triggering the slide switch. Just like last time, the vibrating motor should run for 0.5 seconds signifying that your connections are correct and working.\nTips for this step:\nUse a multimeter to check if the end of your wires is getting a voltage reading out of the battery.\nMake sure to double check that your contacts are firmly in place.\nNote:\nThe crimp wire terminals help in making the contact points larger and are easier to secure in place.\nIf you don't have crimp wire terminals, just stripping off the end of the wire and using that as contact would still work.\nYou may have noticed that the slide switch is on the negative wire of the battery. This would still work no matter if it is on the positive side or the negative side. I did the latter because it makes sense when placed inside my own watch case.", "step_imgs": ["https://cdn.instructables.com/FSP/G2E6/JTMSJ1O1/FSPG2E6JTMSJ1O1.LARGE.jpg", "https://cdn.instructables.com/F0M/ULCP/JTMSJ1OF/F0MULCPJTMSJ1OF.LARGE.jpg", "https://cdn.instructables.com/FKZ/0BHT/JTMSJ1OX/FKZ0BHTJTMSJ1OX.LARGE.jpg"], "step_title": "Step 7: Connect the Battery and the Switch"}, {"step": 8, "steps_text": "Test the circuit that you built to see if everything is working fine. Then carefully place your circuit to your chosen watch case, secure the components in place with double sided tape.\nCover it up, add a watch strap, put it on, and you are done!\nTips for this step:\nDon't forget to paint your watch case before you add your circuit. I chose color black because pink is not really my style.\nUse the thick and soft kind of sticky tape, especially for securing the sticky motor in place. I find that it's more able to withstand the vibrations and keep the motor in place.", "step_imgs": ["https://cdn.instructables.com/F9S/8ABE/JTMSJ1WG/F9S8ABEJTMSJ1WG.LARGE.jpg"], "step_title": "Step 8: Place the Circuit in the Case and Cover It Up"}, {"step": 9, "steps_text": "Here are some final notes about the project. It's quite a lot but are important if you want to know why I made certain decisions in this project. It also includes notes on how to modify and improve the circuit to your own preferences:\nThe code is optimized to use as little power as possible. More info on how I did it here.\nThe watch I'm currently wearing right now has been running for 2 weeks already (At 2019-03-26, I'll update this statement whenever I can). I am hoping that the watch will last for a minimum of 3 months.\nThe R1 100 ohm resistor is used to lower down the current passing through the vibrating motor. This makes the motor weaker but saves battery life. If you feel that the vibration is too weak while inside your chosen case, you can remove this resistor and replace it with a wire.\nI have mentioned in one of the steps that the delay between vibrations is \"roughly\" 5 minutes. This project relies on the ATTiny85's internal clock for timing which is not very accurate (Believe me, I tested it). Expect an offset of 100ms to 1s every 5 minutes but this will depend on the current temperature of the room and current voltage of the battery. Don't be bothered by this though. I found that accuracy does not matter too much. Remember, that this project tells us the passage of time, and not the current exact time. If it still bothers you, consider adding an external crystal to the circuit.\nThe 5 minute wait time can be changed by modifying the code. Only do this if you understand the code and you know what you are doing. To those confident enough, check out the variables waitDuration and wdCounterTarget, and also line 71 where the watchdog timeout is set.\nBe sure to check out the Github repository for the latest version of this code just in case there are updates or improvements.\nFinally, check out and follow the project page. I have a lot of improvements planned for this project like making the watch smaller using SMD components and adding an external crystal for more accurate timings. So keep an eye out for that.\nIf you have questions and comments feel free to leave a comment below!\nEnjoy your new watch and savor every precious second!", "step_imgs": ["https://cdn.instructables.com/FXK/AYEH/JTMSJ1VD/FXKAYEHJTMSJ1VD.LARGE.jpg", "https://cdn.instructables.com/F47/IMZF/JTON012H/F47IMZFJTON012H.LARGE.jpg"], "step_title": "Step 9: Final Notes"}], "channel": ""}, {"category": "", "description": "It is always convenient to have a bright light while riding bicycle at night for clear vision and safety. It also caution others in dark places and avoid accidents. So in this instructable I will demonstrate how to build and install a 100 watt LED projector Headlight similar to ones that you find in Modern Motor cycles. I have installed this in my bicycle and have been using this for a couple of months now. And the best part is it is very easy to make and does not include any fancy tools.\nPlease watch the following video for easy understanding.", "title": "How to Make High Power LED Headlight for Bicycle", "url": "https://www.instructables.com/id/How-to-Make-High-Power-LED-Headlight-for-Bicycle/", "section": "technology", "steps": [{"step": 1, "steps_text": "20 to 100 Watt LED Chip 12V\n60 degree LENS + Reflector\nHeat Sink 100x100mm\nLi-po battery 3s (drone Battery)\nSwitch\nXT 60 Connector\n2-Part Epoxy Glue (Araldite)\nWires- 1.5 sq.mm\nZip-Ties\nSoldering Kit(Iron,Flux,Solder,etc)\nBasic Tools (Drill,Nut-bolt,Screwdriver,Clamps,pliers, etc)\nHeat Sink Paste", "step_imgs": ["https://cdn.instructables.com/F42/6T1S/JTMSVJ5D/F426T1SJTMSVJ5D.LARGE.jpg", "https://cdn.instructables.com/FU8/BFC5/JTMSVJ64/FU8BFC5JTMSVJ64.LARGE.jpg", "https://cdn.instructables.com/FF5/EAY4/JTMSVJ50/FF5EAY4JTMSVJ50.LARGE.jpg", "https://cdn.instructables.com/FA3/Q8A3/JTMSVJ3J/FA3Q8A3JTMSVJ3J.LARGE.jpg", "https://cdn.instructables.com/FEZ/1MZV/JTMSVJ13/FEZ1MZVJTMSVJ13.LARGE.jpg", "https://cdn.instructables.com/F1F/K4J3/JTMSVJ1I/F1FK4J3JTMSVJ1I.LARGE.jpg", "https://cdn.instructables.com/FA4/Y2II/JTMSVJ3D/FA4Y2IIJTMSVJ3D.LARGE.jpg", "https://cdn.instructables.com/FT1/6EJS/JTMSVJ1X/FT16EJSJTMSVJ1X.LARGE.jpg", "https://cdn.instructables.com/F50/0OB8/JTMSVIZX/F500OB8JTMSVIZX.LARGE.jpg"], "step_title": "Step 1: List of Materials"}, {"step": 2, "steps_text": "Mark the appropriate place for the holes on the heat-sink and using a hand drill make holes. Apply heat sink paste and place the LED chip on the heat-sink.\nPrepare the Epoxy glue by mixing the 2 parts in 1:1 ratio. Using a tooth pick apply the glue mixture on the reflector, LED and LENS.\nPlace the Reflector and LENS on the LED carefully and let it dry overnight.(Cure time depends on type of epoxy)\nThen cut holes to fit the switch. The position of the switch depends on your preference.", "step_imgs": ["https://cdn.instructables.com/F84/9DVS/JTMSVFMG/F849DVSJTMSVFMG.LARGE.jpg", "https://cdn.instructables.com/FQK/NADI/JTMSVFLC/FQKNADIJTMSVFLC.LARGE.jpg", "https://cdn.instructables.com/FAN/PF0K/JTMSVC7R/FANPF0KJTMSVC7R.LARGE.jpg", "https://cdn.instructables.com/FV5/LCUX/JTMSVC4A/FV5LCUXJTMSVC4A.LARGE.jpg", "https://cdn.instructables.com/FVD/WP3N/JTMSVC7Q/FVDWP3NJTMSVC7Q.LARGE.jpg", "https://cdn.instructables.com/FJS/J97R/JTMSVC7T/FJSJ97RJTMSVC7T.LARGE.jpg", "https://cdn.instructables.com/F00/CK86/JTMSVC7S/F00CK86JTMSVC7S.LARGE.jpg", "https://cdn.instructables.com/FBI/3EOP/JTMSVFQ3/FBI3EOPJTMSVFQ3.LARGE.jpg", "https://cdn.instructables.com/FV7/69P8/JTMSVFNP/FV769P8JTMSVFNP.LARGE.jpg", "https://cdn.instructables.com/F5L/RNXL/JTMSVK2S/F5LRNXLJTMSVK2S.LARGE.jpg", "https://cdn.instructables.com/FYL/GQ3F/JTMSVK2T/FYLGQ3FJTMSVK2T.LARGE.jpg"], "step_title": "Step 2: Heat-sink and Fitting the LENS"}, {"step": 3, "steps_text": "Apply Flux to ends of the wires and tin the ends using the soldering iron. Follow the circuit diagram for connections. The polarity of the LED is important.\nMake sure to insulate all the connections using insulation tape or heat-shrink tube.\nNote: Do not short circuit the Battery which is very Dangerous\nConnect the Bullet connectors or XT60 connectors to the LED terminals and connect the Battery.\nSafety Equipment: Connect a 10A fuse in Series with the battery and connect the Ground of battery to the Body of bicycle to avoid any electrostatic shock. Also a Battery Management System(BMS) can be used with the Battery for protection.", "step_imgs": ["https://cdn.instructables.com/FC1/V5VY/JTMSVGMR/FC1V5VYJTMSVGMR.LARGE.jpg", "https://cdn.instructables.com/FFV/SHRO/JTMSVHHM/FFVSHROJTMSVHHM.LARGE.jpg", "https://cdn.instructables.com/FCC/1QFW/JTMSVHHY/FCC1QFWJTMSVHHY.LARGE.jpg", "https://cdn.instructables.com/FJG/CEZE/JTMSVHHX/FJGCEZEJTMSVHHX.LARGE.jpg", "https://cdn.instructables.com/F2C/083O/JTMSVHHS/F2C083OJTMSVHHS.LARGE.jpg", "https://cdn.instructables.com/FW7/QBS8/JTMSVHHO/FW7QBS8JTMSVHHO.LARGE.jpg", "https://cdn.instructables.com/FJL/8YQE/JTMSVHHP/FJL8YQEJTMSVHHP.LARGE.jpg", "https://cdn.instructables.com/FOL/PEGA/JTMSVGJG/FOLPEGAJTMSVGJG.LARGE.jpg", "https://cdn.instructables.com/FDP/3RVB/JTMSVHHN/FDP3RVBJTMSVHHN.LARGE.jpg", "https://cdn.instructables.com/FW9/AH5M/JTMSVI01/FW9AH5MJTMSVI01.LARGE.jpg", "https://cdn.instructables.com/F4N/3OOZ/JTMSVGKK/F4N3OOZJTMSVGKK.LARGE.jpg", "https://cdn.instructables.com/FOL/Z1FG/JTMSVGNX/FOLZ1FGJTMSVGNX.LARGE.jpg"], "step_title": "Step 3: Electrical Connections"}, {"step": 4, "steps_text": "Use a small clamp and nut-bolt to fit the LED-Assembly on the Bicycle. The battery can be placed under the seat but i chose to place it on the frame. Use Zip-ties to hold all the wires and batteries in place. You might want to place the switch on the handle for easy access.\nIt is important to have sufficient size heat-sink for cooling the LED.A fan can also be installed for better performance. Also since the LED is high power the battery didn't last long, so it is better to have 2 batteries or use a smaller wattage LED as i did later on. So I later installed a 50 watt led.\nTherefore this was a easy build and took me about 2 hours to complete. Please feel free to leave a comment below if you have any suggestions or queries.\nThank you\nHS Sandesh", "step_imgs": ["https://cdn.instructables.com/FI2/GHPD/JTMSWMF6/FI2GHPDJTMSWMF6.LARGE.jpg", "https://cdn.instructables.com/F8N/15X7/JTOMWNY7/F8N15X7JTOMWNY7.LARGE.jpg", "https://cdn.instructables.com/FIR/MTHK/JTMSVJWC/FIRMTHKJTMSVJWC.LARGE.jpg", "https://cdn.instructables.com/FST/7C8A/JTMSVJV8/FST7C8AJTMSVJV8.LARGE.jpg", "https://cdn.instructables.com/F8T/N6EG/JTMSVJVZ/F8TN6EGJTMSVJVZ.LARGE.jpg", "https://cdn.instructables.com/F2H/NW5Z/JTMSWMFY/F2HNW5ZJTMSWMFY.LARGE.jpg", "https://cdn.instructables.com/FBO/X5XO/JTMSVJX3/FBOX5XOJTMSVJX3.LARGE.jpg", "https://cdn.instructables.com/FV8/5JKL/JTMSWMF9/FV85JKLJTMSWMF9.LARGE.jpg"], "step_title": "Step 4: Install on the Bicycle and Testing"}], "channel": ""}, {"category": "", "description": "I used to have these kind of four round pipe metal speaker stands and i really loved the design. But when i was moving to different place they got \"magically\" lost. I recently got repaired my old hifi and wanted same speaker stands but couldn't get them. So i decided to make some, hoping to be as similar as i remember the original.\nNo welding, just ordered pipes and metal plates. There is metal screw inside, attaching top plate to bottom and that's it. I used CNC to help myself with the shape but, paper print would do similar job, maybe even better.\nSo lets start", "title": "Metal Speakes Stands, No Welding", "url": "https://www.instructables.com/id/Metal-Speakes-Stands-No-Welding/", "section": "technology", "steps": [{"step": 1, "steps_text": "8x Pipes\nI ordered 750mm long 60mm wide.\n2xPlates\ntop plate is 140x140x4mm\n2xPlates\nbottom 250x250x4mm\n16x coupling nuts M8\n16x flat head screws M8\n16x normal M8 nut\n8x screw rod 8mm\nYou might need some other screws and nuts if u want them to be used instead of speaker spikes or you can buy them. If you want similar setup as mine you will be able to see what i used there easily from images.\nThe plate design with hole positions atc. are in dxf file attached.\nYou will also need to make little wooden circles like u see on the image with hole in the middle. These will hold pipes centered. I used cnc to make them but it is doable using saw or circular cutter for your drill. Be CAREFUL diameter of these disks should be little less as inside diameter of your pipe which may vary depending on pipe wall thickness so it might be different as in plans.\nNote: Mine are not circles they have little four cuts from sides, that is only that there are holding tabs when i was making them on cnc and if the tabs are not on outside diameter then i dont need to cut them carefully as outside diameter is clean.", "step_imgs": ["https://cdn.instructables.com/F8Z/NTU5/JTMSK337/F8ZNTU5JTMSK337.LARGE.jpg"], "step_title": "Step 1: Material"}, {"step": 2, "steps_text": "For marking the shape i used my cnc and cut wooden parts but printout redrawn to the metal plates would do same job.\nSo cutting the shape is done on grinder. Rounding corners is the main job.\nIn My case i attached the metal plate to the wooden piece, drilled holes and attached them together temporarily with screws so i can grind the edges to same shape as wood.\nThen i made all holes bigger, exactly 8mm, that was my plan for the pipe holding screws and the speaker spike holes (on outside of the plates) the speaker spike holes... you might want them smaller if u going to buy spikes, possibly M6.\nI used sand paper to finish the details on rounded corners and then tapered the edges of holes.", "step_imgs": ["https://cdn.instructables.com/FM2/9G7E/JTMSK54V/FM29G7EJTMSK54V.LARGE.jpg", "https://cdn.instructables.com/F58/08WC/JTMSK56I/F5808WCJTMSK56I.LARGE.jpg", "https://cdn.instructables.com/FKI/MQUX/JTMSK59M/FKIMQUXJTMSK59M.LARGE.jpg", "https://cdn.instructables.com/F6N/SI5O/JTMSK5BC/F6NSI5OJTMSK5BC.LARGE.jpg", "https://cdn.instructables.com/FF9/FH4J/JTMSK6CQ/FF9FH4JJTMSK6CQ.LARGE.jpg", "https://cdn.instructables.com/FE7/TA02/JTMSK5BN/FE7TA02JTMSK5BN.LARGE.jpg", "https://cdn.instructables.com/F9G/X7GD/JTMSK5ER/F9GX7GDJTMSK5ER.LARGE.jpg"], "step_title": "Step 2: Making Top and Bottom Plates1"}, {"step": 3, "steps_text": "The top and bottom center screws are the flat head so we need to flush them with the metal surface. So we need countersink bit and make holes like on images. On all plates 4 center holes.", "step_imgs": ["https://cdn.instructables.com/F5E/9IG1/JTMSK9KO/F5E9IG1JTMSK9KO.LARGE.jpg", "https://cdn.instructables.com/F62/E9WD/JTMSK9LT/F62E9WDJTMSK9LT.LARGE.jpg", "https://cdn.instructables.com/FCW/QBUG/JTMSK9MH/FCWQBUGJTMSK9MH.LARGE.jpg"], "step_title": "Step 3: Making Top and Bottom Plates2"}, {"step": 4, "steps_text": "So this is where the magic happens.\nFirst image shows the finished screws\nSecond how the flat head screws will be attached to this center threaded rod and\nthe last image shows how they will hold the metal pipes in place.\nnice, isn't it?\nso how do we do this, in next steps", "step_imgs": ["https://cdn.instructables.com/F1R/6GHG/JTMSK9SE/F1R6GHGJTMSK9SE.LARGE.jpg", "https://cdn.instructables.com/FYF/JZTH/JTMSK9T0/FYFJZTHJTMSK9T0.LARGE.jpg", "https://cdn.instructables.com/FNS/SAUD/JTMSK9WG/FNSSAUDJTMSK9WG.LARGE.jpg"], "step_title": "Step 4: Center Rods 1"}, {"step": 5, "steps_text": "First we make little setup like on image.\nThe wooden circle is held from one side by normal screw and we keep maybe 5mm of thread on the other side so we can attach the coupling nut. 5mm because we want as much space for the flat head nut so we do not run out of thread when we will be tightening them up.\nlast image just shows where the flat head screw will go", "step_imgs": ["https://cdn.instructables.com/F0M/LQMU/JTMSKAWX/F0MLQMUJTMSKAWX.LARGE.jpg", "https://cdn.instructables.com/FXY/OS9I/JTMSKAZV/FXYOS9IJTMSKAZV.LARGE.jpg", "https://cdn.instructables.com/FK9/EQJM/JTMSKB0H/FK9EQJMJTMSKB0H.LARGE.jpg"], "step_title": "Step 5: Center Rods 2"}, {"step": 6, "steps_text": "The bottom plate is put on flat surface and the center road is fully screwed down to one of the bottom screws.\nThen i just place two pipes and the top plate near to this rod, let one screw hanging trough hole from top plate and positioned the wooden disk to place, so i could see the flat head screw will have space to go in to the nut.\nthen i cut the threaded rod 5mm from the wooden disk.\nSo this should give you the correct length.", "step_imgs": ["https://cdn.instructables.com/FID/HSX3/JTMSKBP9/FIDHSX3JTMSKBP9.LARGE.jpg", "https://cdn.instructables.com/F8I/6ES7/JTMSKBPC/F8I6ES7JTMSKBPC.LARGE.jpg", "https://cdn.instructables.com/FIM/1TAY/JTMSKCBA/FIM1TAYJTMSKCBA.LARGE.jpg", "https://cdn.instructables.com/FVK/MDJN/JTMSKCDB/FVKMDJNJTMSKCDB.LARGE.jpg"], "step_title": "Step 6: Center Rods 3"}, {"step": 7, "steps_text": "Now we cut all the rods to same length and attach the wooden disks.\nThen we screw fully just by hand the rods to the bottom plate and slide the pipes on.", "step_imgs": ["https://cdn.instructables.com/F5B/6FIE/JTMSKCMT/F5B6FIEJTMSKCMT.LARGE.jpg", "https://cdn.instructables.com/F6E/LOXX/JTMSKCNR/F6ELOXXJTMSKCNR.LARGE.jpg", "https://cdn.instructables.com/FOC/SELP/JTMSKCMV/FOCSELPJTMSKCMV.LARGE.jpg", "https://cdn.instructables.com/FUS/VWL6/JTMSKCNL/FUSVWL6JTMSKCNL.LARGE.jpg", "https://cdn.instructables.com/FYE/0PN7/JTMSKCNQ/FYE0PN7JTMSKCNQ.LARGE.jpg"], "step_title": "Step 7: Center Rods 4"}, {"step": 8, "steps_text": "Now we put the top plate on the top of the pipes and add all four screws, tighten them up and also check if top and bottom plates are aligned as my pipes weren't cut exactly and there was bit of angle on some cuts but when during tightening you keep top and bottom plate aligned it will stay like that.\ni turned them up side down and tighten the bottom screws too.\nAnd that's it! now buy or make some speaker spikes.", "step_imgs": ["https://cdn.instructables.com/FQ2/U5OA/JTMSKDUW/FQ2U5OAJTMSKDUW.LARGE.jpg", "https://cdn.instructables.com/FWJ/436V/JTMSKDUZ/FWJ436VJTMSKDUZ.LARGE.jpg", "https://cdn.instructables.com/F4V/AJKS/JTMSKDV7/F4VAJKSJTMSKDV7.LARGE.jpg", "https://cdn.instructables.com/F6Q/VPEU/JTMSKDV5/F6QVPEUJTMSKDV5.LARGE.jpg"], "step_title": "Step 8: Center Rods 4"}, {"step": 9, "steps_text": "I didnt buy the spikes.... yet... maybe i will not, we will see how i will feel.\nSo this is what i use now, i bought some thin nuts, M8 screws, coupling nuts and the whatever it is called the thing you attach on bottom of chairs so you don't scratch the floor.\nAnd the rest is pretty much self explanatory from images. I just stacked them in whatever manner i thought will look nice.\nHope you enjoyed this instructable", "step_imgs": ["https://cdn.instructables.com/FKS/V442/JTMSKH8I/FKSV442JTMSKH8I.LARGE.jpg", "https://cdn.instructables.com/FCE/LUMU/JTMSKFKQ/FCELUMUJTMSKFKQ.LARGE.jpg", "https://cdn.instructables.com/FKK/2I1K/JTMSKFGZ/FKK2I1KJTMSKFGZ.LARGE.jpg", "https://cdn.instructables.com/FEX/ETFP/JTMSKF0I/FEXETFPJTMSKF0I.LARGE.jpg", "https://cdn.instructables.com/F20/G6UM/JTMSKF6M/F20G6UMJTMSKF6M.LARGE.jpg", "https://cdn.instructables.com/F6M/L3TQ/JTMSKFAW/F6ML3TQJTMSKFAW.LARGE.jpg", "https://cdn.instructables.com/F7Q/T7IJ/JTMSKFKO/F7QT7IJJTMSKFKO.LARGE.jpg", "https://cdn.instructables.com/FBV/MBJ7/JTMSKH8O/FBVMBJ7JTMSKH8O.LARGE.jpg"], "step_title": "Step 9: Speaker Spikes"}], "channel": ""}, {"category": "", "description": "One of my friends came to me with his DJI a spark drone and said it was not working as it was supposed to be so after powering it on one of the motors started to heat up an LED won't blink and after connecting the drone to DJI app it says cannot take off and when I tried to take off it says ESC status error which means ESC is broken so in this video tutorial I will show you how you can fix this ESC status error only for 14 US dollars so let's fix it this!\nHuge Thanks to JLCPCB.com for Sponsoring this project, You can order 2 layer PCB (10cm*10cm) only for $2 from their website. Built time for 2 layers PCB is only 24Hr with any color solder mask. Check them out and once again Thanks JLCPCB.com for Sponsoring this project.", "title": "How to Fix DJI Spark ESC Status Error! | Replacement", "url": "https://www.instructables.com/id/How-to-Fix-DJI-Spark-ESC-Status-Error-Replacement/", "section": "technology", "steps": [{"step": 1, "steps_text": "You can watch the Video Tutorial if you don't want to read all the stuff", "step_imgs": [], "step_title": "Step 1: Watch the Video!"}, {"step": 2, "steps_text": "The first step before performing any kind of repair is powering off the drone and for that click and hold the power button of DJI spark and then we need to disconnect the battery which is very straight forward.", "step_imgs": ["https://cdn.instructables.com/F4S/IJBJ/JTMSZWP1/F4SIJBJJTMSZWP1.LARGE.jpg", "https://cdn.instructables.com/F7G/Q75Y/JTMSZWLN/F7GQ75YJTMSZWLN.LARGE.jpg"], "step_title": "Step 2: Disconnect the Battery!"}, {"step": 3, "steps_text": "Since we only have a problem with our ESC we don't need to open the entire drone to reveal the ESC inside take a flat head screwdriver and open this lid be careful and don't use much pressure.\nESC is held in its place with two screws which are normal Phillips head while removing the screws make sure not to use an oversized screwdriver else it will damage the screw head after removing the bracket which held the ESC I reconnected the battery and power the drone an entire ESC started to heat up now instead of wasting time trying to find which component of ESC was broken I went on ebay and found this replacement ESC which was only 14 US dollars", "step_imgs": ["https://cdn.instructables.com/FL0/KGT1/JTMSZXJK/FL0KGT1JTMSZXJK.LARGE.jpg", "https://cdn.instructables.com/FF0/J13C/JTMSZX71/FF0J13CJTMSZX71.LARGE.jpg", "https://cdn.instructables.com/F5M/460G/JTMSZX91/F5M460GJTMSZX91.LARGE.jpg", "https://cdn.instructables.com/FDV/968C/JTMSZXB1/FDV968CJTMSZXB1.LARGE.jpg", "https://cdn.instructables.com/FLQ/G0AR/JTMSZXEP/FLQG0ARJTMSZXEP.LARGE.jpg", "https://cdn.instructables.com/FHF/PLQN/JTMSZXH4/FHFPLQNJTMSZXH4.LARGE.jpg"], "step_title": "Step 3: Get to the ESC!"}, {"step": 4, "steps_text": "First I used my soldering iron to heat up the solder and then used a soldering wick to remove all the excess\nsolder and disconnected the wires from the ESC\nOnce old ESC was removed I soldered the new one for that I highly recommend using a helping hand and a tweezer as it is not possible for one person to do this job", "step_imgs": ["https://cdn.instructables.com/FAI/K482/JTMSZYCJ/FAIK482JTMSZYCJ.LARGE.jpg", "https://cdn.instructables.com/FFE/JFHK/JTMSZYGL/FFEJFHKJTMSZYGL.LARGE.jpg", "https://cdn.instructables.com/F9E/PASN/JTMSZYJN/F9EPASNJTMSZYJN.LARGE.jpg", "https://cdn.instructables.com/F14/RI34/JTMSZY9P/F14RI34JTMSZY9P.LARGE.jpg", "https://cdn.instructables.com/FRG/3YQ5/JTMSZYAK/FRG3YQ5JTMSZYAK.LARGE.jpg", "https://cdn.instructables.com/FN1/IWM2/JTMSZYAL/FN1IWM2JTMSZYAL.LARGE.jpg", "https://cdn.instructables.com/FUY/IKZ6/JTMSZYER/FUYIKZ6JTMSZYER.LARGE.jpg"], "step_title": "Step 4: Desoldering and Replacing the ESC!"}, {"step": 5, "steps_text": "Once ESC was replaced before putting everything back together I tested the drone by powering it on and all the LEDs this time turned on as it was supposed to be just to make sure I tried to fly this drone inside and it worked flawlessly but I don't recommend flying a drone inside the house as it can be dangerous and you can easily crash it after the test I powered of the drone remove the battery put everything back together and this drone was fixed so why not let's take it outside and test it", "step_imgs": ["https://cdn.instructables.com/F99/1VHO/JTMSZZ82/F991VHOJTMSZZ82.LARGE.jpg", "https://cdn.instructables.com/F7E/9B4H/JTMSZZ3D/F7E9B4HJTMSZZ3D.LARGE.jpg", "https://cdn.instructables.com/F4D/5ISM/JTMSZZ6E/F4D5ISMJTMSZZ6E.LARGE.jpg", "https://cdn.instructables.com/FAN/7ME8/JTMSZZAF/FAN7ME8JTMSZZAF.LARGE.jpg"], "step_title": "Step 5: Testing!"}, {"step": 6, "steps_text": "So that's How you can fix and DJI Spark ESC status error!\nIf you like my work\nFeel free to check out my YouTube channel for more awesome stuff: https://www.youtube.com/c/Nematics_lab\nYou can also follow me on Facebook, Twitter etc for upcoming projects\nhttps://www.facebook.com/NematicsLab/\nhttps://www.instagram.com/nematic_yt/\nhttps://twitter.com/Nematic_YT", "step_imgs": ["https://cdn.instructables.com/FGU/KYLY/JTMT00D7/FGUKYLYJTMT00D7.LARGE.jpg"], "step_title": "Step 6: Done!"}], "channel": ""}, {"category": "", "description": "I've never had a dedicated shop space.\nAlso, my projects are rarely on a very large scale.\n\nThat's why I love small and compact things: they don't take much space and can be stowed away when not in use. The same goes for my tools.\nI've wanted a circular saw for a while. But all the standard offerings are large and frankly they are overkill for my purposes.\n\nSmall (cordless) saws are perfect for hobby grade use and occasional projects, and they are really cute.\nThey were popular like 10-20 years ago, but today not as much (certainly not on a budget).\nThe latter gives us an opportunity to make a modern version with a tiny investment.\nMaking it Lithium powered and charged via USB makes it the perfect choice for a small scale DIYer like myself.\n\nDo you want one? Follow along!\nAnd if you liked this instructable, consider voting for it in the Build a Tool Contest. Thank you!", "title": "Perfect Compact Circular Saw From a Dinosaur", "url": "https://www.instructables.com/id/Perfect-Compact-Circular-Saw-From-a-Dinosaur/", "section": "technology", "steps": [{"step": 1, "steps_text": "This particular tool comes in two flavors:\n1. Craftsman model 900.112650\n2. Black&Decker VP600\n\nIt's the same saw just different colors, you can get either.\nIt uses a 3 3/8\" blade and supposed to be powered with 7.2V (2x3.6V VersaPaks) - an ancient NiCd batteries.\n\nYou can find tons of listings on ebay, here are several examples:\nBlack&Decker\nCraftsman\n\nMine was 6$ w/o shipping, so it's very cost effective.\nMine came in descent shape, but there may be variations.\nAlso, you might have one laying around and collecting dust, in this case it's free.\n**Note: There are other tools which use 2 VersaPak sticks, this instructable will also apply there.", "step_imgs": ["https://cdn.instructables.com/F5R/LYI5/JTENJV37/F5RLYI5JTENJV37.LARGE.jpg", "https://cdn.instructables.com/FYF/MSM6/JTENJV4O/FYFMSM6JTENJV4O.LARGE.jpg", "https://cdn.instructables.com/FLZ/3UBC/JTENJVC1/FLZ3UBCJTENJVC1.LARGE.jpg", "https://cdn.instructables.com/FC9/DTJL/JTENJVLQ/FC9DTJLJTENJVLQ.LARGE.jpg", "https://cdn.instructables.com/F19/7YSM/JTENJVZ9/F197YSMJTENJVZ9.LARGE.jpg", "https://cdn.instructables.com/FCI/HWH2/JTENJW1J/FCIHWH2JTENJW1J.LARGE.jpg", "https://cdn.instructables.com/F2Z/CWO5/JTENJW5T/F2ZCWO5JTENJW5T.LARGE.jpg"], "step_title": "Step 1: Getting Your Saw"}, {"step": 2, "steps_text": "1. The saw :)\n2. Two 18650 Lithium Ion cells. Something like this, or this.\n3. 2s USB charger, like this one. I used it in this build, and it works surprisingly well.\n4. 2s bms (optional). I used this one, but it's not recommended (more on this later)\n5. Female charging jack, here or here.\nSome loose wiring.\nAccess to 3d printer.\nT10 screwdriver (for disassembly)\nHot glue gun.\nSoldering iron.\nHand tools.", "step_imgs": [], "step_title": "Step 2: What You'll Need"}, {"step": 3, "steps_text": "First thing first: Take the blade off! (seriously do it) it will be much safer this way.\n\nKeep the two washers and the blade retainer bolt somewhere safe. The bolt is left threaded and can't be replaced easily once lost.\n\n1. Push out the two c-pins that hold the base plate to the body (one is longer). Wide enough screwdriver and light hammer taps will do the trick.\n2. Unscrew 8 T10 bolts that hold two case pieces together.\n\nThere isn't much to do inside, just clean the dust/dirt from years of storage.\nMake sure the on/off unit is functional.", "step_imgs": ["https://cdn.instructables.com/FW9/SL75/JTENJWAS/FW9SL75JTENJWAS.LARGE.jpg", "https://cdn.instructables.com/FF2/MLVT/JTENJWCY/FF2MLVTJTENJWCY.LARGE.jpg", "https://cdn.instructables.com/FDZ/VTX3/JTENJWF7/FDZVTX3JTENJWF7.LARGE.jpg", "https://cdn.instructables.com/FG8/WM00/JTENJWGO/FG8WM00JTENJWGO.LARGE.jpg", "https://cdn.instructables.com/FAE/W1G5/JTENJWIU/FAEW1G5JTENJWIU.LARGE.jpg", "https://cdn.instructables.com/FGG/5GQC/JTENJWO2/FGG5GQCJTENJWO2.LARGE.jpg", "https://cdn.instructables.com/F24/P8HC/JTENJX0R/F24P8HCJTENJX0R.LARGE.jpg"], "step_title": "Step 3: Open It"}, {"step": 4, "steps_text": "You can find the .stl files here - Thing: 3512505\ncap1.stl is required\ncap2.stl gives it a little more bling :) and it's optional.\n\nThe lithium batteries will be placed in the same compartment as the old ones.\nBut they are smaller in diameter, so an adapter is needed.\nThe locations for lithium cells are not centered, this is done on purpose.", "step_imgs": ["https://cdn.instructables.com/FDV/XFG1/JTENJX1K/FDVXFG1JTENJX1K.LARGE.jpg", "https://cdn.instructables.com/FY5/13HO/JTENJX32/FY513HOJTENJX32.LARGE.jpg", "https://cdn.instructables.com/F9J/3FFE/JTENJX5S/F9J3FFEJTENJX5S.LARGE.jpg", "https://cdn.instructables.com/FLH/NXMM/JTENJX88/FLHNXMMJTENJX88.LARGE.jpg"], "step_title": "Step 4: Print the Cap(s)"}, {"step": 5, "steps_text": "It's time to make the juice unit that will drive the saw into the future.\nTake your female charging port, solder wires and secure it in place, see pic. Route the wires out.The nut is a bit challenging to operate, but it's manageable and you can add hot glue for final fix.\nSolder pieces of wire to the batteries. One cell to the positive side, one cell to the negative side.\nPush these in the 3d printed adapter with the wired ends in. There is a channel to route the wires in between the cells.Secure with hot glue.\nThese two leads come together to the BM pad on the BMS unit.\nSecure the BMS unit to one of the cells with hot glue.\nRun the other ends of the batteries to the B+/- pads.\n\n**Side note about this BMS unit: Ideally charging leads and those that go to the motor should be connected to +/-P pads on the unit. However, this one is probably faulty (for me or the basic model). So I ended up connecting everything to +/-B pads. Effectively this cancels the functionality of the BMS - so it's entirely optional.\n\n***Please let me know if there is a 2s BMS unit that worked for you. Thanks!", "step_imgs": ["https://cdn.instructables.com/FBB/D2YU/JTENJX9W/FBBD2YUJTENJX9W.LARGE.jpg", "https://cdn.instructables.com/F2M/ZFHK/JTENJXCV/F2MZFHKJTENJXCV.LARGE.jpg", "https://cdn.instructables.com/FDB/OQUE/JTENJXVD/FDBOQUEJTENJXVD.LARGE.jpg", "https://cdn.instructables.com/FAA/K46F/JTENJXQL/FAAK46FJTENJXQL.LARGE.jpg", "https://cdn.instructables.com/FTK/GC0S/JTENJY1J/FTKGC0SJTENJY1J.LARGE.jpg", "https://cdn.instructables.com/FYP/K6CM/JTENJXLT/FYPK6CMJTENJXLT.LARGE.jpg"], "step_title": "Step 5: Make the Power Unit"}, {"step": 6, "steps_text": "Take the charger unit and snip off the black connectors.\n\nI've found a piece of power cord with correct plug, you'll probably have something like this laying around.\nIf not, get something like this.\n\nSolder the leads to appropriate pads.\nThen put some hot glue on the interface between the cord and the charger.\n\nHeat shrink it all, you're done.\n\nFor heat shrinks, various sizes, just get this. You'll thank me later.\nIt's a good idea to charge your newly assembled unit and check that everything works.", "step_imgs": ["https://cdn.instructables.com/FEK/PONR/JTENJY7P/FEKPONRJTENJY7P.LARGE.jpg", "https://cdn.instructables.com/FNH/ZYHW/JTENJYKN/FNHZYHWJTENJYKN.LARGE.jpg", "https://cdn.instructables.com/FUM/13J4/JTENJYIH/FUM13J4JTENJYIH.LARGE.jpg", "https://cdn.instructables.com/FO4/KT32/JTENJYMC/FO4KT32JTENJYMC.LARGE.jpg", "https://cdn.instructables.com/FYN/F0BJ/JTENJYRO/FYNF0BJJTENJYRO.LARGE.jpg", "https://cdn.instructables.com/FD5/9QJF/JTENJYXZ/FD59QJFJTENJYXZ.LARGE.jpg"], "step_title": "Step 6: Make the Charger"}, {"step": 7, "steps_text": "As long as the unit is open, we might just go ahead and give the gears a treat.\n\nThere are two stages to the gearbox. Each one is enclosed in separate compartment and held by it's own bolts.\nOpen them up and grease the gears with generous amount.", "step_imgs": ["https://cdn.instructables.com/FVI/T9SZ/JTENJZ0E/FVIT9SZJTENJZ0E.LARGE.jpg", "https://cdn.instructables.com/FF9/XO40/JTENJZ1E/FF9XO40JTENJZ1E.LARGE.jpg", "https://cdn.instructables.com/F77/SV2T/JTENJZ2E/F77SV2TJTENJZ2E.LARGE.jpg", "https://cdn.instructables.com/F2B/8GUB/JTENJZ7W/F2B8GUBJTENJZ7W.LARGE.jpg"], "step_title": "Step 7: Grease It (if You Are Already Here)"}, {"step": 8, "steps_text": "Take your power assembly and put it in the case where it should be.\nThen take the output wires and solder them to the contact leafs inside the saw\n\nPositive goes to white and negative to the black.\nPut several blubs of hot glue to secure it in place\nClose it and you are done with the hard stuff.\n\nNow, you can add the \"vanity plate\" to the end. Just for fun.\nAfter all, it's not an ordinary saw now.", "step_imgs": ["https://cdn.instructables.com/FMR/B84H/JTENJZLX/FMRB84HJTENJZLX.LARGE.jpg", "https://cdn.instructables.com/FT6/0BSC/JTENJZOD/FT60BSCJTENJZOD.LARGE.jpg", "https://cdn.instructables.com/F5W/BSZW/JTENJZZO/F5WBSZWJTENJZZO.LARGE.jpg", "https://cdn.instructables.com/FH3/ZFY9/JTENK04R/FH3ZFY9JTENK04R.LARGE.jpg"], "step_title": "Step 8: Wire It Up"}, {"step": 9, "steps_text": "Depending on the condition of your plate, you might want to get it clean.\nI cleaned the rust with dremel tool and these wire heads.\nThen cleaned it with alcohol and sprayed with black paint.\n\nTo place it back, push it in and re-insert the c-pins\nYou are done.\n\nNow you can use your saw with the original blade.\nHowever, to get better results and cleaner cuts you can get much better one.\nI've got this one, and it's definitely worth the 6$.\n\nEnjoy,\nDani\n\nIf you liked this instructable, consider voting for it in the Build a Tool Contest. Thank you!", "step_imgs": ["https://cdn.instructables.com/F8N/VAQH/JTENK09C/F8NVAQHJTENK09C.LARGE.jpg", "https://cdn.instructables.com/FBS/VBXZ/JTENK0FO/FBSVBXZJTENK0FO.LARGE.jpg", "https://cdn.instructables.com/FGG/0JBC/JTENK0GQ/FGG0JBCJTENK0GQ.LARGE.jpg", "https://cdn.instructables.com/F9Y/63QQ/JTENK0LI/F9Y63QQJTENK0LI.LARGE.jpg", "https://cdn.instructables.com/F0G/V87J/JTENK0QY/F0GV87JJTENK0QY.LARGE.jpg", "https://cdn.instructables.com/FTB/49Y0/JTENK0VQ/FTB49Y0JTENK0VQ.LARGE.jpg", "https://cdn.instructables.com/FK6/3MSU/JTENK162/FK63MSUJTENK162.LARGE.jpg", "https://cdn.instructables.com/FVU/PJ4S/JTENK10K/FVUPJ4SJTENK10K.LARGE.jpg", "https://cdn.instructables.com/FWS/QOEF/JTENK1AN/FWSQOEFJTENK1AN.LARGE.jpg"], "step_title": "Step 9: Put the Plate Back & Optional New Blade"}], "channel": ""}, {"category": "", "description": "This is not your another Nixie clock, it is quite different from all that being posted on instructables, both visually \u2013 no steampunk, please, electronically \u2013 no dreaded SN74141, shift registers or other ancient ICs. And even more, full source code is provided and it is based on BASIC programming language!\nBelow you can read a little intro about this clock, how I came to this idea, how parts were sourced and so on. If you just want to build it, you can safely skip this and go to next step.\nA friend of mine asked for a Nixie clock for his birthday. I checked instructables and internet in general, and as some author says, Nixie clocks are \u00abplagued\u00bb with steampunk style \u2013 all these dangling wires, exposed boards and other oddities are maybe cool, but friend just wants to have a Nixie clock which will just look like a clock, no strings attached. I've checked internet, to find out, how \u00abreal\u00bb, factory made Nixie clocks do look, but I was not able to find any. I was only able to find this clock by Longines: https://www.pinterest.com/pin/594897432006033516/ It definitely looked cool, but my friend was already poisoned by instructables, he liked design from these two instructables: https://www.instructables.com/id/Huge-wood-nixie-clock/ and https://www.instructables.com/id/simple-user-adjustable-DIY-Nixie-Clock/ , but asked me to \u00abrewind a bit\u00bb and make it more in 50s style, without falling into dreaded steampunk design. So here it is, and as you can see, my design is loosely based on them. However, I decided to do everything from the scratch \u2013 including design, circuit schematics and even software. Furthermore, I'm making source code available for free, so anyone can modify it and expand or change functionality according to his needs. Software is written in PicBasic Pro, and you can download free trial of compiler from melabs.com, in case you want to tinker with code by yourself, or just flash included HEX files \u2013 no programming skills are required.\nAnd in addition, a bit about \"Instructables\" logo. Initially, my idea was to put my friend's name on it, but after seeing draft, he refused, saying \" - I'm too young to be embellished into metal and stone yet\" :D So his idea was to put \"Instructables\" logo instead, to show our appreciation to this amazing website. :)\nP.S. This particular clock is not for sale, it was birthday gift, and no way I can sell it. However, due to popular demand, I've asked a friend to host it on his Etsy homepage (Just search for \"mid century modern nixie clock\") - I have some extra nixie tubes available, so can make 3 more of such clocks. Please note, I'm not an established manufacturer, so it may take up to 1 month for me to make them. Thanks for understanding.", "title": "Mid Century Modern Nixie Clock", "url": "https://www.instructables.com/id/Mid-Century-Modern-Nixie-Clock/", "section": "technology", "steps": [{"step": 1, "steps_text": "OK, so now I have plans and idea how to do things, but what about parts? I needed Nixie tubes and some high quality wood for casing. So I went to local flea market, sometimes, very weird and strange things do pop up there. There were some offers for used Russian IN-4, IN-14, IN-16 and even IN-18 tubes, but my eye caught this beauty \u2013 Czech Tesla made impulse counter (integrator IT2), which used East Germany made ZM-560 Nixie tubes. The seller was asking only $30 for whole impulse counter, which was absurdly cheap, but there was a good reason behind it, as it turned out, counter was already salvaged, so no electronics left inside, besides Nixie tubes and power transformer. Since I don't needed counter cabinet and transformer, we settled down on $20 for 9 Nixie tubes with sockets. Alternatively, you can use Tesla ZM-1020 tubes or Soviet IN-4 tubes \u2013 clock design allows this, and separate drawings for front panel and chassis for each tube type are included.\nNext, I needed some fine wood, and here we have issues with that \u2013 common hardware stores only have pine, oak and other, less luxurious woods, and fine woods, properly aged and dried are rarity (and expensive!). But I was lucky again, I've spotted this beautiful microscope on flea market too \u2013 it has beautiful mahogany wood case, and badge said that it was manufactured in 1936, so wood should become very dry and machining-friendly. Since microscope also was salvaged for parts and thus, not working properly, seller agreed to sell it, including it's box, for another $20. I really liked it, because it is made of solid brass and has some mechanical parts which I might re-use in another projects. So I bought it to my workshop, along with Nixie tubes and started working. Box was carefully taken apart, to recover as much usable wood as possible, and I've cut apart, using lathe, microscope tube, to make brass inserts for clock's face. I even took red plexiglass insert from frequency counter, and re-used it for clock front panel insert. (as it turned out, one box wood was not enough, because I've built 4 different prototypes, before settling on the final design, so I had to go and buy another microscope box - you might notice that feet and front panel are made from different piece of wood, they slightly differ in color).\nList of materials I've used:\n1. 18mm plywood sheet (can use any other thickness or other wood material)\n2. Some nice wood for front and back panel (I've used mahogany)\n3. Dark red plexiglass sheet, 3mm thickness (smoked glass color will also work fine)\n4. M3 screws and rods\n5. M3 brass standoffs (I've used 20mm long ones, you can use different ones, it depends of material thickness you've used for clock cabinet).\n6. Plexiglass, fiberglass or any other rigid material sheet, which will serve as clock's \"mainframe'\n7. Retro style speaker cloth \u2013 I've used beige, but you can choose any color you found pleasing and matching your wood color too.\n8. Wood glue\n9. Epoxy glue\n10. Wood wax, Danish oil, lacquer or any other wood coating (depending on your taste)\n11. Brass tubing with 1mm wall thickness and 35mm diameter. Or just round brass earrings\n12. Clear silicone glue\nOptional materials, in case if you decide to replicate \"Instructables\" logo and badge:\n1. 0.8mm thick brass sheet, approximately 80x20 mm for logo and 75x45mm for the badge.\n2. FolkArt Copper acrylic paint\n3. Rotary tool with felt tip and polishing compound (I've used ABRO wheel polishing mix)\nAs you can see, above list does not shows quantities or dimensions. This is because there is not much of materials needed. I've used some scrap materials remaining from previous projects, and speaking about dimensions again, You won't need any material in size bigger than 20x30cm (A4 sheet size).\nElectronics components:\nRFT ZM560 or Tesla ZM1020 or IN-4 Nixie tubes \u2013 4 pcs\nMatching sockets for these Nixie tubes \u2013 4 pcs\nPIC16F1519 microcontroller \u2013 1 pcs\nDIP-40 socket \u2013 1 pcs\nDS1302 clock module \u2013 1 pcs\nMPSA42 transistors - 30 pcs (MJE13001 will also work fine)\n10K 1/8W resistors \u2013 32 pcs\n4.7K 1/8W resistor - 1 pc\n1K 1/8W resistor - 2 pcs\nPanel mounted push button \u2013 1 pcs\n100x70mm PCB \u2013 1 pcs (you can even use proto board)\nNixie high voltage power supply - 1 pcs\n12V 0.5A power supply \u2013 1 pcs\nAC cord with plug \u2013 1 pcs\nOptional electronics components:\nDS18B20 temperature sensor \u2013 1 pcs\nBuzzer \u2013 1 pcs\n1N4002 diode \u2013 1 pcs\nXS8 Aviation plug and socket \u2013 1 set\nTools:\nOf course you will need screwdriver, soldering iron, saw, pliers, wire cutters and other tools, typical workshop should have. So below I will list only this task specific tools, which you might not have readily available at hands.\n1. Programmer for PIC microcontrollers. Almost any will work, PicKit 2, PicKit 3, MicroBrn \u2013 any of them supporting PIC16F1519 microcontroller, will work. They are cheap, and can be bought off ebay for less than $10.\n2. Although all wooden parts can be manufactured using band saw and handheld router, usage of CNC is highly recommended. Sure, it won't be wise to buy or make it for just this purpose, but if you can, I suggest you to outsource front and rear panel manufacturing to properly equipped facility.\n3. You will also need lathe, if you decide to make brass inserts by yourself, but you can simply buy brass earrings of needed diameter.", "step_imgs": ["https://cdn.instructables.com/FTV/EJRY/JTIYO5JN/FTVEJRYJTIYO5JN.LARGE.jpg", "https://cdn.instructables.com/FDM/1ZFJ/JTIYO5KU/FDM1ZFJJTIYO5KU.LARGE.jpg", "https://cdn.instructables.com/FLW/PIYH/JTIYPBGH/FLWPIYHJTIYPBGH.LARGE.jpg", "https://cdn.instructables.com/FZ1/LRBS/JTOMXQKY/FZ1LRBSJTOMXQKY.LARGE.jpg", "https://cdn.instructables.com/F1L/46Q7/JTOMXQLC/F1L46Q7JTOMXQLC.LARGE.jpg", "https://cdn.instructables.com/FXP/WJ08/JTIYO5CA/FXPWJ08JTIYO5CA.LARGE.jpg", "https://cdn.instructables.com/F5Z/4CH1/JTIYO4YP/F5Z4CH1JTIYO4YP.LARGE.jpg"], "step_title": "Step 1: Bill of Materials and Tools Used"}, {"step": 2, "steps_text": "The firmware for clock works in the following way:\nDuring startup, it checks whenever button is pressed. If button is pressed, then clock enters into \u00abdebug & refresh\u00bb mode, where it enables each segment of each digit sequentially, so you can test your Nixie tube wiring and also use this code to \u00abrefresh\u00bb tubes, if not all segments lit up properly. Leave this code for couple of hours and tubes should recover. To exit this code, cycle the clock power.\nIf no button was pressed during startup, the clock displays alternating \u00ab1\u00bb and \u00ab2\u00bb in all digits 5 times. During this time, you can press button to enter adjustment menu. If you don't, clock will go into standard, time display mode.\nIf you entered the config menu, it works in the following way \u2013 press button to set the year, to advance, you have to release and press it again, keeping it pressed won't help. After you've set the proper year, just release button and leave it for about 2 seconds \u2013 dots will blink, showing that now clock is in month setting mode. Again, set the month by pressing the button, release it and keep released until dots flash and you enter date set mode. Repeat it for hours and minutes, too.\nAfter set-up is finished, clock enters standard time display mode. During that time, if you press button, clock will first show year, then month and date and then return to time display. I have not implemented any further functionality yet, but of course, more features will be added, like setting 12/24 hour mode, screen dimming during night time, alarm and temperature measurement functions, fine RTC calibration and so on. Since some folks prefer 12 hour display, instead of 24 hour display, I've compiled two versions of firmware, so you can directly flash one you need.\nIf you want to make your own modifications to clock's firmware, I'm including fully commented source code as well, so you can tweak it as much as you need it.", "step_imgs": [], "step_title": "Step 2: Clock Firmware and Source Code"}, {"step": 3, "steps_text": "Clock circuit is quite simple and is based on PIC16F1519 micro-controller. Technically, it can be compiled for any other Microchip PIC16 controller in DIP40 package, which has same pinout and also uses internal oscillator. For example, PIC16F887. For timekeeping, DS1302 module is being used. You can upgrade to DS3231 module if desired, but of course, you'll need to modify the source code for that. I've also included DS18B20 sensor for temperature measurement and buzzer for alarm function, but these functions currently are not implemented in software, I'm working on code right now.\nNixie cathodes are direct driven, using MPSA42 transistors (30 cascades total). Each transistor drives own cathode, no multiplexing, shift registers, special IC and so on. While this might appear a bit complex, it has two features which gives this clock major edge over competitors. 1. Since direct drive is used, there are no zener diodes for clamping cathodes, as in SN74141 chip, so there are no blue dots, which means more worn and used nixies still can be used. 2. Using direct drive allows for some unique display effects, which simply are not possible using another driving methods.\nThere are two orange LED's used as time separator. If you want, you can replace them with neon bulbs (Just will need to wire them to high voltage rail and increase resistor from 1K to 1M), and I initially was planning to use them, but all Russian neon tubes which I bought off ebay for that purpose, were too dim when powered from 170V, so I used LED's instead.\nPCB is approximately 100x70mm in size and uses all thru-hole components, no SMD or other, tiny or fragile parts. As you can see, all tube connections are routed to PCB sides and PCB has clear marking, showing which group of cathodes where to be connected (A - tens of hours, B - ones of hours, C - tens of minutes, D - ones of minutes). This was done in such way, because in initial design, I had another PCB on top of main PCB, which housed IN-14 Nixies, so clock would have typical nixie clock design. But since that design was abandoned, new Nixie tubes were directly connected to main PCB. Please note: You might have to mirror PCB image, depending on the method of PCB manufacturing.\nI decided to use factory made high voltage converter for nixie anode power supply \u2013 this is much simpler and safer way to get desired voltages. You can use any available, or make your own \u2013 that is not critical. Just search ebay for \"Nixie tube power supply\". I've used UC3845 based one, but you can pick up another, say MC34063A based.\nTo power things up, I'm using some cheap 12V 0.5A power supply. Of course, you can use one with higher output current and voltage, but I suggest not to use weaker one. Any DC power supply, capable of delivering 12-15 volts with at least 0.5A of output current will be just fine.\nAssembly\nFirst, I started with tube socket wiring. To make things easier, I decided to use same color wire for same digit on each tube \u2013 red wires for anode, blue wires for digit \"3\" and so on. This will make things lot more easier later. After that, I've started building the main PCB. As you can see, on that build I have not installed thermometer and buzzer, since my friend don't needed it, but my debug prototype do has them, so code support should be available shortly. If you don't need alarm or temperature meter functions, simply don't install these parts. Also, pay attention to your DS1302 module, some come with male plug, some come with female socket, you will need to solder the appropriate side on your PCB. From the picture of assembled PCB you can see that ICSP connector is missing a central, 5V pin. This is done to purpose \u2013 it serves as a key, so connector will be inserted in proper way. If you don't plan to use ICSP, or plan to program micro-controller in another programmer, you can skip installing this header too. In that case, you can also skip diode installation and solder a jumper instead of it.\nFor the DS1302 modules, they usually come in two variations, one with rechargeable battery and one without. I suggest to use one with rechargeable battery, so you won't have to take clock apart and replace the battery.\nAnode resistors are installed on separate PCB, I used piece of protoboard there. Resistance of these resistors adjusts brightness of Nixie, but don't install too low value resistors (below 10k), brightness only will increase slightly, but tube life will be considerably reduced. As from my personal experience, 33k is good for RFT tubes. For Tesla and Soviet tubes you will need lower resistance resistors, in 10-22k range.\nHigh voltage supply.\nYou have to adjust it to deliver at least 150 volts. Please note, high voltage can be lethal, so observe all precautions when working with high voltage. You might need to increase voltage to 170 or even 180 volt in case if your tubes are old or worn out. For example, my RFT and Soviet tubes were fine with 150 volts, but Tesla's required at least 170 volts, to light up all segments properly.\nInstalling power supply and HV converter.\nI've used some brackets and protoboard pieces, along with nylon standoffs, to mount things together. If you have no experience with AC wiring, I strongly suggest you to use external 12VDC power supply, so you won't have to deal with AC circuitry, which can be very dangerous and lethal, if not handled properly.\nFirst run.\nAfter all parts are soldered, wires connected and MCU programmed, there's time for first run. Either press and hold button on startup, or solder a jumper instead of it and start looking at display. The clock will enter into segment test mode, so all digits will show all possible numbers in the sequence. If wiring is correct, then this sequence will look like this:\n0 1 2 \u2013 first digit (tens of hours)\n0 1 2 3 4 5 6 7 8 9 \u2013 2nd digit (ones of hours)\n0 1 2 3 4 5 \u2013 3rd digit (tens of minutes)\n0 1 2 3 4 5 6 7 8 9 \u2013 4th digit (ones of minutes)\nDot - two middle dots\nIf it is not following this sequence or some digits are not showing up, re-check your wiring, most likely you're having some issues with it. In case if some digits light up only half, or are very dim, don't worry \u2013 just allow this code to run for hour or so \u2013 many old tubes need \"refresh\" after long time of no use. If that does not helps, try to increase anode voltage a bit, maybe in 10 volt steps, not more.\nAs you can see, some parts on finished PCB are not installed, this is because my friend did not wanted alarm or temperature sensor functionality, so these parts were not installed. Also, if you plan to not update your clock firmware, you can also skip installation of ICSP header. Note it has Vdd pin removed \u2013 because clock is being powered from mains, so we don't need it, and also it serves as key for inserting connector in correct direction. 7805 IC can be replaced with 78L05 or 78M05 if desired \u2013 current consumption is really low.", "step_imgs": ["https://cdn.instructables.com/FF7/DIBZ/JTIYPDZA/FF7DIBZJTIYPDZA.LARGE.jpg", "https://cdn.instructables.com/FND/G96O/JTYN6LYP/FNDG96OJTYN6LYP.LARGE.jpg", "https://cdn.instructables.com/FB7/PRLL/JTT5KIOX/FB7PRLLJTT5KIOX.LARGE.jpg", "https://cdn.instructables.com/FP1/QUYI/JTIYO5M4/FP1QUYIJTIYO5M4.LARGE.jpg", "https://cdn.instructables.com/F0U/2NPC/JTIYO5LB/F0U2NPCJTIYO5LB.LARGE.jpg", "https://cdn.instructables.com/FTN/POVE/JTIYO5M3/FTNPOVEJTIYO5M3.LARGE.jpg", "https://cdn.instructables.com/F01/9V5P/JTON5YQO/F019V5PJTON5YQO.LARGE.jpg", "https://cdn.instructables.com/FN8/4ZB9/JTIYO5U5/FN84ZB9JTIYO5U5.LARGE.jpg", "https://cdn.instructables.com/FRK/2L3P/JTIYO5U9/FRK2L3PJTIYO5U9.LARGE.jpg", "https://cdn.instructables.com/F2P/CYYD/JTIYO5RO/F2PCYYDJTIYO5RO.LARGE.jpg", "https://cdn.instructables.com/F2K/21MD/JTIYO4VV/F2K21MDJTIYO4VV.LARGE.jpg", "https://cdn.instructables.com/F8U/RMAO/JTIYO5MV/F8URMAOJTIYO5MV.LARGE.jpg"], "step_title": "Step 3: Electronics"}, {"step": 4, "steps_text": "Clock case is made from pre-cut and glued plywood sheets, which are covered with retro style speaker cloth. Front and rear panels are cut out from wood and plexiglass sheet. Another plexiglass sheet serves as \"chassis\" for nixie tube sockets and PCBs. Location and alignment of internal components are not critical, you can re-arrange them whatever way you like.\nI've cut out clock body parts from plywood sheet, and glued them together with wooden glue. After it all dried, case was sanded from outside, using 600 grit sandpaper, to smooth surfaces and remove glue residue. As I said above, in parts description, you can use plywood or wood material of any thickness, but total thickness of assembled frame should be about 80mm, to fully accommodate both PCB, mounting frame and have adequate space for Nixie tube installation. Also please note, one plywood panel, one that goes to front side, is different from others \u2013 it has cutouts in shape of mainframe, so it can be installed from the front.\nAfter body assembly was completed, cloth was glued around it, but used epoxy to fix it on clock body. The reason is that I wanted cloth to be stretched finely, so it won't move. To achieve this, I did the gluing process in the following way: Glued one edge of cloth to body from below side, let it dry for 24 hours. Stretched it around, and while holding it stretched, glued with 5 minute quick dry epoxy glue. After it dried, I've glued front and rear sides with wooden glue, as I did in my previous instructable about DIY Bluetooth speaker.\nFront and rear panel are CNC cut from the mahogany wood, but you can use any hardwood you like \u2013 walnut, sapele, beech, all will look just great. As description says, you can use different types of Nixie tubes within this design, but since all of them have different outer side, you will need to expand holes in front panel, to fit Tesla or Soviet Nixies. You will also need different \"chassis\" to mount tube sockets on it, but since Tesla and RFT nixie tubes use same sockets, included chassis design can be used for both, but you will need to modify it for IN-4.\nWhen assembling the clock, you will need to glue hex standoffs with epoxy at the areas marked on the picture. If you don't do so, once clock is assembled and you need to take it apart for whatever reason it is, you won't be able to do so \u2013 standoff will unscrew, and you won't be able to separate panels apart.\nStand.\nIt is cut from the same wood as clock front and rear inserts. Small piece of wood has one plane sanded at about 30 degrees, so it gives clock main body tilted look.\nFront panel insert.\nThe front panel insert was CNC cut from the red plexiglass sheet I've got from that impulse counter. The brass inserts for it were cut using lathe, from microscope lens tube. After cutting, I've slightly polished them and coated with nitrocellulose lacquer before gluing to insert. I did this to avoid oxidation, since after time, brass will darken and won't look so cool, and it will be impossible to polish it, when glued. Actually, this microscope looks so cool, because brass parts are already covered by lacquer, which protects them from dark spots and oxidation. I've used transparent silicone glue to glue the insert to front panel.\nRear side.\nAs you can see, rear insert is made from acrylic sheets of different colors. I just don't had enough red acrylic, so cut it from material I had at hands. You can go with any kind of acrylic for it, or just make it plain wood \u2013 it is on rear, so no one will see. For the same purpose, you can use cheaper M3 screws, ones I've used are gold plated and are remnants from previous, \"audiophile-grade\" project.\nI've placed a 4 pin mini socket on rear side for software update needs. In most cases, you won't need it, so there's no need to install it. This means, you now can have button on top, and use existing hole to wire AC cord.", "step_imgs": ["https://cdn.instructables.com/FW8/LKB1/JTIYO5U6/FW8LKB1JTIYO5U6.LARGE.jpg", "https://cdn.instructables.com/FX5/D9GO/JTIYO5I2/FX5D9GOJTIYO5I2.LARGE.jpg", "https://cdn.instructables.com/FZ0/MEU6/JTIYO4YQ/FZ0MEU6JTIYO4YQ.LARGE.jpg", "https://cdn.instructables.com/FME/VUOL/JTIYO51R/FMEVUOLJTIYO51R.LARGE.jpg", "https://cdn.instructables.com/FBX/8HH9/JTIYO5SG/FBX8HH9JTIYO5SG.LARGE.jpg", "https://cdn.instructables.com/FGK/9K5I/JTIYO5SH/FGK9K5IJTIYO5SH.LARGE.jpg", "https://cdn.instructables.com/FIH/K25S/JTIYO5SK/FIHK25SJTIYO5SK.LARGE.jpg", "https://cdn.instructables.com/FWA/FP82/JTIYO59I/FWAFP82JTIYO59I.LARGE.jpg", "https://cdn.instructables.com/FZ6/QXP1/JTIYO54E/FZ6QXP1JTIYO54E.LARGE.jpg", "https://cdn.instructables.com/FMN/GLN8/JTIYO5OP/FMNGLN8JTIYO5OP.LARGE.jpg", "https://cdn.instructables.com/F84/HIXN/JTIYO572/F84HIXNJTIYO572.LARGE.jpg", "https://cdn.instructables.com/F4K/D06S/JTIYPF2G/F4KD06SJTIYPF2G.LARGE.jpg"], "step_title": "Step 4: Woodworking and Inserts"}, {"step": 5, "steps_text": "Instructables logo was CNC manufactured from 0.8mm thick brass sheet. I've designed it based on 60's design ideas, based on so called \"refrigerator fonts\", and one of my main source of inspiration was this \"Starlite JETRA TRN-60C\" radio, which I've found on Pinterest. The logo is made in the following way: I draw design in Corel Draw, exported as PDF, imported to Roland Engrave Studio (software for my CNC) and machined it. After, I polished it using Dremel with felt wheel and polishing compound. After that, I've cleaned it with alcohol, and covered with FolkArt copper acrylic paint. Let it dry for a day, and then, scrape paint over letters gently with fingernail, so it remains only in cutouts. After finishing, I've baked it in hot air oven at 250C for 1 hour. Paint fuses to brass and becomes solid \u2013 logo is ready. Initially, I wanted to use fusible glass paint on it, but it did not went in the proper way - no matter how hard I try, after drying it will become brittle and chip off, as you can see on 3rd photo. Nameplate is made from similar brass sheet, but no painting jobs this time \u2013 just engraving. Both were glued to their locations using epoxy glue.", "step_imgs": ["https://cdn.instructables.com/F90/H2X3/JTIYO5H8/F90H2X3JTIYO5H8.LARGE.jpg", "https://cdn.instructables.com/F75/497G/JTIYO4XY/F75497GJTIYO4XY.LARGE.jpg", "https://cdn.instructables.com/FM4/0ZQ0/JTIYO5ER/FM40ZQ0JTIYO5ER.LARGE.jpg", "https://cdn.instructables.com/FLD/IJ0V/JTMSSJLH/FLDIJ0VJTMSSJLH.LARGE.jpg"], "step_title": "Step 5: Instructables Logo and Nameplate"}, {"step": 6, "steps_text": "This instructable comes with additional files, which you will need to download and use, to assemble this clock. These files are:\nparts.pdf - contains all mechanical outline and drawings in vector format, 1:1 scale, with additional text notes regarding machining and finishing.\npcb.jpg - PCB picture, in case you will make it using laser transfer method.\ncircuit.jpg - Circuit schematics, to assist you during assembly.\npcb.lay6 - PCB design source file in Sprint Layout format.\ncircuit.spl7 - Circuit schematics in Splan7 format.\n12hr.hex - firmware for 12 hour time display\n24hr.hex - firmware for 24 hour time display\npcb.gbr - PCB drawing in gerber format\nsourcecode.pbp - Source code in PicBasic Pro 3.0 format\npcb.drl - PCB hole drilling map\nstencil.bmp - PCB image, mirrored and rotated, with no extra traces, so you can print and transfer it using laser transfer technology.", "step_imgs": [], "step_title": "Step 6: List of Included Files With Drawings and Circuitry"}, {"step": 7, "steps_text": "We hope you will like our nixie clock, it took us more than 4 months to design, program and build it. Also, we'd like to thank community at www.picbasic.co.uk - without your help guys, this project would not be possible!\nPlease let us know your opinion and suggestions, this is very important for us. Have fun and be active!\n29.03.2019 - PCB design had been updated, removed unnecessary holes and adjusted distances for more engraver-friendly design. New layout PCB manufactured and tested.\n04.0.4.2019 - Minor bug in firmware fixed, causing sometimes clock to not \"tick\" after you set time (it will \"tick\" if you set time again, but this update fixes that bug).\nI'm adding more pictures here, showing some odds, intermediate design ideas and prototypes - maybe you will get some inspiration from them also.", "step_imgs": ["https://cdn.instructables.com/FG5/MKRO/JTYNI54U/FG5MKROJTYNI54U.LARGE.jpg", "https://cdn.instructables.com/FG3/JT3S/JTYNI54T/FG3JT3SJTYNI54T.LARGE.jpg", "https://cdn.instructables.com/F8V/5LZ0/JTYNI540/F8V5LZ0JTYNI540.LARGE.jpg", "https://cdn.instructables.com/FI6/0WV2/JTYNI541/FI60WV2JTYNI541.LARGE.jpg", "https://cdn.instructables.com/F5M/LTRM/JTYNI544/F5MLTRMJTYNI544.LARGE.jpg", "https://cdn.instructables.com/FPQ/8HXY/JTYNI54V/FPQ8HXYJTYNI54V.LARGE.jpg", "https://cdn.instructables.com/FZK/DH4H/JTYNI555/FZKDH4HJTYNI555.LARGE.jpg", "https://cdn.instructables.com/FAN/373R/JTYNI556/FAN373RJTYNI556.LARGE.jpg", "https://cdn.instructables.com/FGN/XU52/JTYNI557/FGNXU52JTYNI557.LARGE.jpg"], "step_title": "Step 7: Final Words, Changelog, Odds and Outtakes."}], "channel": ""}, {"category": "", "description": "After being accidentally locked out of my house on more than one occasion, I decided that there had to be better way to entering my home that did not involve breaking and entering (and without hiding a key outside somewhere).\nOn taking a look at my garage door set-up I noticed that the motor to open the garage door could be activated by simply short-circuiting two contacts. On seeing this I realised that a very simply solution would be to connect an esp8266 to a relay that I could then trigger (to open or close the door) by connecting to the esp8266 controller using my mobile phone.", "title": "Simple Garage Door Hack", "url": "https://www.instructables.com/id/Simple-Garage-Door-Hack/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials\nNodeMCU\n1 Channel 5V relay module\nUSB outlet/charging device\nScrews(M2*8)\nmin USB cable\nTools\nSoldering Iron\nSolder\nHeat-shrink tubing\nWire-strippers\nConnecting wire\n3D Printer\nStar screwdriver\nPliers\nSoftware\nArduino IDE\nFritzing\nFreeCAD", "step_imgs": [], "step_title": "Step 1: Materials, Tools & Software"}, {"step": 2, "steps_text": "The following library was added to the Arduino IDE: https://github.com/Links2004/arduinoWebSockets.git. Also if you have not already added the esp8266 library then this needs to be done as follows:\nGo to File > Preferences. In the \"Additional Boards Manager URLs\" field, type (or copy-paste) http://arduino.esp8266.com/stable/package_esp8266... and click ok.\nThen go to Tools > Board > Board Manager. Type \"esp8266\"\nin the search field. The entry \"esp8266 by ESP8266 Community\" should appear. Click that entry and look for the install button on the lower right.\nNot much more needs to be added here other than the code I used (GarageDoorHack-Final attached) was taken from https://gist.github.com/bbx10/667e3d4f5f2c0831d00b and modified slightly to accommodate what I needed to do i.e. to briefly trigger a relay when a button was click.\nWith reference to the code, make sure that you update the following lines to reflect your wireless SSID and PASSWORD:\nstatic const char ssid[] = \"SSID\";\nstatic const char password[] = \"PASSWORD\";\nusing the serial monitor (once you have uploaded the code) you will be able to see what IP is allocated to the NodeMCU.\nOne last point that is worth noting is that my NodeMCU board appeared to have the pins assigned differently to what is mentioned online i.e. my GPIO05 was pin 5 where as the the online reference that I was using said that it was 1 (or maybe my GPIO pins where assembled in a different order). Whatever the case, I had to use some trial and error before a could determine which pin was actually GPIO5.", "step_imgs": [], "step_title": "Step 2: Coding"}, {"step": 3, "steps_text": "Steps followed:\nI clipped off all the NodeMCU pins that I was not using (yes I could have unsoldered them but I found this easier).\nSoldered connecting wires onto the relevant pins (as be diagrams and photos above), using heat-shrink tubing to insulate the connections.\n3D Printed the case (STL files attached; the FCSTD file is the FreeCAD file).\nScrewed the NodeMCU board down. The screws that I had were too long and so a used pliers to snip them shorter.\nPushed the top of the relay into the square holder in the lid which held it firmly in place. The orientation was such that the relay contacts faced the wire exit hole in the lid.\nAttached the lid and screwed it closed.\nConnected the relay wires to the garage door motor terminals.\nPlugged the project into the USB power source.\nWaited for the NodeMCU to authenticate with the wireless.\nBrowsed to the IP address from my phone.\nTested by pressing the button.\nThe threaded screws that I had worked well but self-tapping ones would have been easier to work with.", "step_imgs": ["https://cdn.instructables.com/FS1/CMTL/JTENHT61/FS1CMTLJTENHT61.LARGE.jpg", "https://cdn.instructables.com/F5D/EXYW/JTMSVHT4/F5DEXYWJTMSVHT4.LARGE.jpg", "https://cdn.instructables.com/F08/XOOL/JTMSVHUF/F08XOOLJTMSVHUF.LARGE.jpg", "https://cdn.instructables.com/FVL/WOTU/JTMSVHTQ/FVLWOTUJTMSVHTQ.LARGE.jpg", "https://cdn.instructables.com/FQM/T65A/JTMSVHWB/FQMT65AJTMSVHWB.LARGE.jpg", "https://cdn.instructables.com/FKW/D0T4/JTMSVHVP/FKWD0T4JTMSVHVP.LARGE.jpg"], "step_title": "Step 3: Putting It All Together"}, {"step": 4, "steps_text": "The following falls outside the scope of this Instructable but are worth discussing:\nIP Address\nBy default your router will issue random IP Addresses meaning that your device might not always have the same IP which would then make it very difficult to find and access from your phone. It is therefore important that you assign it a fixed IP. There are two main ways to do this, each with their own pros and cons. My preference is to allow the router's DHCP server to do this. The general steps to follow when using this method are:\nLog onto your router as an admin.\nLook at the DHCP logs and record the MAC address associated with the IP address that was issued to your NodeMCU.\nFind the menu option that allows you to set IP reservations. Here you will be able to specify a MAC address and the IP that you wish this MAC address to always to get.\nI usually do the above as early as possible in my projects.\nCreating a shortcut on your phone\nMake sure that you are connected to the same wireless network as your device.\nWith the IP address now fixed you should be able to browse to it on your phone.\nSave the IP as a bookmark.\nSave the bookmark to your phone's home page.\nSecurity\nAnyone connected to your wireless network will be able to browse to this IP and trigger the relay. To do this they will then have to know your Wireless SSID and password. For the average user this is probably enough security. If you wanted a higher level of security you could implement some sort of MAC filtering on your router or a standalone server or you could try a two-factor authentication approach. This said, if someone knows how to hack your network then they probably know how to hack all of the above solutions too. Further if they are really that keen to get in they will probably simply break in.\nIn short if you live in a low risk environment then you probably have nothing to fear. On the other hand if you live in a high risk environment then you probably have more important things to worry about and a garage door hack.\nHaving said all of this, the following project is more of a proof-of-concept project and not meant as a full-scale production implementation. Anyone implementing this project does so at their own risk.\nClosing comments\nSometimes the connection to the NodeMCU appears to get lost. When this happens you just need to refresh the webpage and it should reconnect successfully.\nAnd lastly, instead of connecting the controller directly onto the door motor, I could have wired it in parallel with the manual switch in the garage. While this would have enabled me to hide the circuitry in the wall, I would have then had to make another plan with respect to powering the device. The power issue would have been relatively easy to solve but for the time being I did not feel that the effort would be worthwhile.\nAll in all this is a simple and cheap project that I enjoyed completing.", "step_imgs": [], "step_title": "Step 4: Final Comments"}], "channel": ""}, {"category": "", "description": "The following describes the process by which I create PC circuit boards for one-offs and prototype use. It is written for a person who has created their own boards in the past and is familiar with the general process.\nAll of my steps may not be optimal for your situation. I have developed this process by trial and error incorporating techniques from various sources. Please take whatever works for you and discard that which does not.\nA production note: I am old school and learn best from written instruction and pictures, they form the bulk of this instructable, I have included a couple of videos for some of the more complex steps.", "title": "Printed Circut Boards - Complete Process", "url": "https://www.instructables.com/id/Circuit-Boards-My-Way/", "section": "technology", "steps": [{"step": 1, "steps_text": "The following list is lengthy but, if you are already making your own PC boards, you may have some of these items. Most of the rest, with the exception of the UV exposure Box, can be purchased on-line.\n\nYou will need:\nCopper clad PCB material\nCircuit board design software (I use Eagle freeware).\nGerber file translator - convert Gerber files to graphic format Gerber2PDF\nGraphics editing software (PhotoShop)\nLaser Printer w toner suitable for toner transfer technique.\nGlossy laser printer paper (Staples #633215).\nTransparency film for Laser Printers (C-Line no60837).\nWater soluble glue stick, cyanoacrylate glue, painters tape.\nThin floral wire (~ 26 gage) and straight pins.\nHand tools to cut, shape and drill PC boards.\nA standard clothes Iron.\nCircuit board cleaning materials ( paper towels, sponges, detergent, Bar Keepers Friend, solvents).\nFerric Chloride liquid (40%).\nCitric Acid, powdered (nuts.com).\nOld CrockPot w/ ceramic or glass liner (not metal).\nQt. size plastic Freezer bag with zip closure.\nUV curable solder mask paint (ebay or amazon).\nUV exposure Box (Home-Made?).", "step_imgs": [], "step_title": "Step 1: Materials Needed"}, {"step": 2, "steps_text": "I use the Eagle free ware version since board sizes are fairly modest and limited to 2 sides. I am generous with the sizes of my traces and the distances between them ( 24 mil min trace size and 15 mil between).\nMost of my components are through the hole but I do use SMD or a combination occasionally. I try to route traces to any pin headers on the bottom of the board. I do not use plated through holes so I add additional vias connecting the top traces to the bottom where component cannot be soldered on both sides. These will be filled with short pieces of thin wire soldered in place.\nWhen I am finished with the layout and routing, I add several large vias near the corners of the board to serve as mounting holes and registration indicators for 2 sided boards.\nWhen you are done I suggest you print out a large copy of the board for reference in placing components and marking holes.\nI use Eagles' CAM Processor to create the board images that will be printing on paper for the copper and on laser transparency film for the solder masks.", "step_imgs": ["https://cdn.instructables.com/FL0/CP0B/JTMSW1ZY/FL0CP0BJTMSW1ZY.LARGE.jpg"], "step_title": "Step 2: Design Your Circuit Board"}, {"step": 3, "steps_text": "I like to use fill polygons to create a Ground plane on bottom and V+ on the top, thus I do not print the board image(s) directly but use Eagle's CAM output. I have not been using solder paste stencils since I hand-solder the few SMD components I use to my boards.\nTo facilitate the creation of the CAM images I created a custom template for single and dual sided CAM output containing the output files I need . I always add the board shape to the copper Gerbers but not to the masks.\nI usually put the Gerber files into the Project folder when processing the job so they may be accessed if needed at a later date.", "step_imgs": ["https://cdn.instructables.com/FO8/KUOY/JTMSW775/FO8KUOYJTMSW775.LARGE.jpg"], "step_title": "Step 3: Output Gerbers"}, {"step": 4, "steps_text": "Creating the output using Eagle's CAM processor introduces several impediments to creation of the copper and solder masks.\nYou need to convert the Gerber files into printable images.\nThe Cam processor removes the component and via hole indicators.\nThe first step is to convert the Gerber files into some sort of image file which I can then edit and print. I use a utility named Gerber2PDF Gerber2PDF link.\nThe downloaded .exe is placed in the Eagle CAM directory. I then transfer the Gerber files I wish to convert from the Project directory to the CAM directory before running Gerber2PDF from the Windows command line.\nSee the Gerber2pdf documentation for the syntax to select and convert specific files.\n\nI have included the text file I use to run the gerber2pdf process that you should download.\nFeel free to edit this file to suit your needs. Cut the commands and paste them into the DOS command line utility to convert the Gerbers.\nOnce I have individual PDFs one for each copper and solder mask I need, I address the issue of the missing holes in board's components, vias and registration holes. I use PhotoShop to import the PDFs and edit the copper files to add the needed holes as small filled white circles.", "step_imgs": ["https://cdn.instructables.com/FW0/B4H1/JTMSW22Q/FW0B4H1JTMSW22Q.LARGE.jpg"], "step_title": "Step 4: Converting CAM Images"}, {"step": 5, "steps_text": "I use PhotoShop to import the PDFs and edit the copper files to add the needed holes as small filled white circles. You can use your own graphic conversion and editing software following the directions below.\nEdit the PDFs to add registration hole marks (see Arrows) to both sides of 2- sided boards. Keep the registration holes extra small to make registration more exact but large enough to see when you print the copper images. I only add the component holes to the top since I will be drilling mainly from this side. Note the top copper image must be flipped horizontal (mirror) at this point so the pads will match after it is etched. You may also add printed text at this point. Be sure that any text you add appeared mirroredon both top and bottom copper so they will transfer to your board correctly(see above examples).\nCopy and paste each copper and mask image into a blank, full page master sheet (at the same resolution as the PDFs) this will be printed on a your laser printer. You may also wish to add board identification text to the master sheet.\nPutting multiple copies of the copper images on the master sheet will conserve paper and allow for mistakes in the toner transfer process. Do the same for the solder mask files adding at least 2 copies of each mask, they will be combined later.", "step_imgs": ["https://cdn.instructables.com/FB7/927P/JTMSW94G/FB7927PJTMSW94G.LARGE.jpg", "https://cdn.instructables.com/FFW/OGRK/JTMSW22H/FFWOGRKJTMSW22H.LARGE.jpg", "https://cdn.instructables.com/FXN/FNSV/JTMSW21V/FXNFNSVJTMSW21V.LARGE.jpg"], "step_title": "Step 5: Editing Images"}, {"step": 6, "steps_text": "The printed Master Sheet copper images will be transferred to the prepared PCBs using toner heat transfer. I use Premium Color Laser Gloss Paper from Staples (#633215) for the transfer process. It is reliable, low cost and clearly visible (not like magazine pages). It accepts the Laser toner with little or no errors, transfers the toner to the copper quickly and releases cleanly with just a few minutes of soaking in warm water. If solder masks are to be generated at least two copies of each masks are printed on Laser Printer Transparency Film (C-Line no60837) .\nBefore you print on the gloss paper or transparencies print a copy of the images on plain paper. This copy will be used for board sizing and 2 sided copper alignment. It is a good idea to check for correct distances between pads for SMD and other components (see above photo). Do this for both the copper and mask images. I have made mistakes in the copy and paste process more than once and, after etching, masking and drilling the PCB, could not populate the finished boards", "step_imgs": ["https://cdn.instructables.com/FNI/IPHI/JTMSW242/FNIIPHIJTMSW242.LARGE.jpg", "https://cdn.instructables.com/FU0/83U4/JTMSWD1S/FU083U4JTMSWD1S.LARGE.jpg"], "step_title": "Step 6: Print the Master Sheet"}, {"step": 7, "steps_text": "The copper boards (single or dual sided) are cut to rough shape (~ half inch all arround) using an image from the plain paper printout as a guide (I use a Dremel tool with a cut-off wheel).\nThe edges are filed smooth to flatten them and the corners rounded. I then file the top and bottom edges at a 45 degree angle to remove any burrs or sharpness (check with your finger after filing).\nThe next step is to clean the boards to remove any oils or grease. Detergent and warm water will do the trick. Finally to remove oxidation and create a surface that will accept the transfer and be easy to solder, I sprinkle the copper with a little \"Bar Keepers Friend\" compound and scrub gently with a damp sponge, then rinse before drying with a paper towel.\nIf the boards are 2-sided, the images will need to be registered exactly. I found the best way for me is to temperarely glue a plain paper copy of the bottom copper image to one side of the board (paradoxically this will be the top) and carefully drill the centers of the registration vias with a #70 drill. A drill press with a drill vice to hold the bit works well.", "step_imgs": ["https://cdn.instructables.com/F4R/HZ5G/JTMSWF9Z/F4RHZ5GJTMSWF9Z.LARGE.jpg", "https://cdn.instructables.com/FCH/0PCZ/JTMSWFBA/FCH0PCZJTMSWFBA.LARGE.jpg", "https://cdn.instructables.com/FQN/BQVB/JTMSWFHM/FQNBQVBJTMSWFHM.LARGE.jpg", "https://cdn.instructables.com/FI4/4YXO/JTMSWFL7/FI44YXOJTMSWFL7.LARGE.jpg", "https://cdn.instructables.com/FDV/5BP4/JTMSWFNQ/FDV5BP4JTMSWFNQ.LARGE.jpg", "https://cdn.instructables.com/F96/N8EF/JTMSWFWG/F96N8EFJTMSWFWG.LARGE.jpg", "https://cdn.instructables.com/FVP/RREV/JTMSWERS/FVPRREVJTMSWERS.LARGE.jpg", "https://cdn.instructables.com/FU8/KXOL/JTMSWFWY/FU8KXOLJTMSWFWY.LARGE.jpg", "https://cdn.instructables.com/FCN/DFRI/JTMSHJ6Z/FCNDFRIJTMSHJ6Z.LARGE.jpg", "https://cdn.instructables.com/FOJ/XZPU/JTMSHIXW/FOJXZPUJTMSHIXW.LARGE.jpg", "https://cdn.instructables.com/F45/3HLD/JTMSHJS4/F453HLDJTMSHJS4.LARGE.jpg", "https://cdn.instructables.com/F2A/56M3/JTMSHK19/F2A56M3JTMSHK19.LARGE.jpg"], "step_title": "Step 7: Prepare Copper Coated Board"}, {"step": 8, "steps_text": "For single sided boards the process is fairly simple. Just cut out a copy of the copper image from the glossy paper and gently tape it to the board image side down using painters tape (blue tape). I then place the board on a piece of plywood covered with 2 layers of paper toweling and cover the board with another two layers.\n\nFor two sided boards the process is more complicated. I first clear the registration holes in the board with a straight pin. The next step is to cut out one copper top and one bottom image from the glossy paper and exactly pierce the center of all the registration holes with a straight pin.\nNext I cut pieces of thin ( ~ 26 gage) florist or craft wire small enough to pass through the registration holes (about 3/4 inch in length). I pass this wire first through the back of one of the registration holes in the top paper, then through the board. At this point I bend the wire and use a small piece of painters tape to prevent the wire from dropping through when I flip the board over. Finally push it through the front of the bottom paper holes so that the images are facing the copper.\nEach wire is then bent to hold the papers and board together. When all the holes are completed, follow the procedure for the single sided board above.", "step_imgs": ["https://cdn.instructables.com/FAY/R6FE/JTMSHN8V/FAYR6FEJTMSHN8V.LARGE.jpg", "https://cdn.instructables.com/FD2/V8VD/JTMSHN52/FD2V8VDJTMSHN52.LARGE.jpg", "https://cdn.instructables.com/FIL/P38R/JTMSHNC0/FILP38RJTMSHNC0.LARGE.jpg", "https://cdn.instructables.com/F1S/J9A8/JTMSHNG5/F1SJ9A8JTMSHNG5.LARGE.jpg", "https://cdn.instructables.com/FA4/87N0/JTMSHNL7/FA487N0JTMSHNL7.LARGE.jpg"], "step_title": "Step 8: Register Copper Images"}, {"step": 9, "steps_text": "Now that the board is ready for the toner transfer. This video of the transfer process may make the following instructions clearer.\nI apply a dry clothes Iron set to just under the highest temperature to tack down the paper to the board using the pointed tip of the iron. Be careful to place the tip between the wires on two-sided boards and tack down both sides so that the paper does not separate from the board when handled. Warning the board gets burning hot. On two sided boards I snip the wires flush on one side then pull the other ends through the paper and board before the next step.\nRemove any tape before applying the iron with pressure on each side for about 1 minute no movement unless the board is to big for full iron coverage. This will heat soak the board and tack on the toner. To assure toner transfer I remove the paper towel on the top side and hold the edge of the iron at a 45 degree angle to the board then apply pressure while moving across the board . I do this on each side at least several times. At this point you should see a slight image of the toner on the back of the paper.\nThe next step is to soak the board and paper in water till the paper floats off. I usually gently rub the back of the paper to remove the clay coating to facilitate the process and gently peel the paper off after a few minutes, A light brushing under water with a soft bristle brush or your fingers will insure the clay coating of the glossy paper is removed from the copper before etching. The water will cloud-up with microscopic clay particles.\nDry, inspect and touch-up with a Sharpee Marker and knife if needed. If extensive repair is needed at this stage you might want to remove the toner and reapply before etching (be sure to clean the board again).", "step_imgs": [], "step_title": "Step 9: Toner Transfer"}, {"step": 10, "steps_text": "My etching process is perhaps the most unconventional. It requires a crock pot filled 1/2 way with water set on the high setting and heated( at least 1 Hr) until hot. The next unusual step is to etch the board inside a good quality freezer bag with a zip lock. Finally I use a Ferric Chloride based Edinburgh Etch which is prepared as follows: Obtain some dry Citric Acid (also know as Sour Salt often used as a food preservative} from an on-line (NUTS.com) or local source. Prepare a solution of Citric acid by dissolving 1/4 cup the powder in 3/4 cup of warm water,set aside to cool. To make the etchant add 1/2 cup of this solution to 2 cups of 40% ferric chloride solution. Add the acid to the chloride. This is the Edinburgh etch. The etching solution is twice as fast as plain Ferric Chloride etch and will not self clog or form the sludge.\n\nWARNING: Do NOT use a Hydrogen Peroxide based etchant with this method. It generates Hydrogen gas that is explosively flammable and will burst the bag open.\nBe sure to use gloves and clothing protection (a waterproof apron) before mixing or using the etchant. It will still stain and eat cloth and skin! Open the bag with the circuit board, I usually add water to the bag first to test for leaks then dump that water out. Add etchant sufficient to etch your circuit, do not overfill, you can always add more later but, it can be messy. You will find that you will use less etchant than with other methods and since it is discarded after use, the etchant is always fresh. Squeeze as much air as possible out of the bag without spillage then the securely seal it closed so it is air tight.\nTurn off the crock pot. Now place the bag in the hot water till the board is submerged and flat. Check on the progress of the etching at least every 5 minutes till all the exposed copper is completely cleared (the clear bag allows inspection). There is no need for constant agitation since the Edinburgh Etch does not clog. When complete (no copper visible), remove the bag and carefully open it, discard the etchant in a waste container, do not pour it down the drain! I use a large plastic container with a wide mouth that I take to my community hazardous waste collection to discard.\nRinse the bag out with water, also discard into your waste container and remove the board before discarding the bag. Rinse the board under running water to clean before removing your protective gear.\nRemoving the toner as usual by wiping with a paper towel dipped in acetone or lacquer thinner.", "step_imgs": ["https://cdn.instructables.com/F15/AP1V/JTMSIED2/F15AP1VJTMSIED2.LARGE.jpg", "https://cdn.instructables.com/F5D/RWT2/JTMSIEFA/F5DRWT2JTMSIEFA.LARGE.jpg", "https://cdn.instructables.com/FGI/XX22/JTMSIEJN/FGIXX22JTMSIEJN.LARGE.jpg", "https://cdn.instructables.com/F0V/0P12/JTMSIEJQ/F0V0P12JTMSIEJQ.LARGE.jpg", "https://cdn.instructables.com/FT0/C26V/JTMSIEQB/FT0C26VJTMSIEQB.LARGE.jpg", "https://cdn.instructables.com/FBR/5VST/JTMSIET8/FBR5VSTJTMSIET8.LARGE.jpg", "https://cdn.instructables.com/FPQ/M5S5/JTMSIEZR/FPQM5S5JTMSIEZR.LARGE.jpg", "https://cdn.instructables.com/FDE/GM1R/JTMSIF47/FDEGM1RJTMSIF47.LARGE.jpg", "https://cdn.instructables.com/FQF/6AGD/JTMSIFFS/FQF6AGDJTMSIFFS.LARGE.jpg", "https://cdn.instructables.com/FIX/TN0C/JTMSIFK7/FIXTN0CJTMSIFK7.LARGE.jpg", "https://cdn.instructables.com/F8L/7JS6/JTMSIFK8/F8L7JS6JTMSIFK8.LARGE.jpg", "https://cdn.instructables.com/FUK/KG9Q/JTMSIFLU/FUKKG9QJTMSIFLU.LARGE.jpg", "https://cdn.instructables.com/FBS/WU0A/JTMSIFO9/FBSWU0AJTMSIFO9.LARGE.jpg", "https://cdn.instructables.com/FH4/8UVX/JTMSIEAT/FH48UVXJTMSIEAT.LARGE.jpg", "https://cdn.instructables.com/F25/42FY/JTMSIEAU/F2542FYJTMSIEAU.LARGE.jpg"], "step_title": "Step 10: Etch Your Board"}, {"step": 11, "steps_text": "Once the board is dry, it is time to apply a Solder mask. This is an optional step but it will help to protect the copper from oxidation , looks more professional and improves the SMD component placement.\nAgain since the description of this process does not convey all the nuances necessary for success I have included a video.\nFilm mask is hard to find and very expensive so I use the tubes of UV curable solder mask obtained from various sources on the internet. No matter if you use film or paint you will need a source of UV light. I built a UV Exposure Unit using a roll of Purple/UV LED strips.:\nIt is important for protection of your eyesight that the UV source be enclosed inside a light tight box. There are many directions for the construction of other UV exposure devices on instructables.com, build one suitable for you. I use an electronic timer capable of seconds measurement and activating a relay to turn on and off the DC current to the UV source.\nSince Laser printers do not print an image of sufficient density, you'll need to combine 2 images. Cut out two copies of each solder mask from the film and carefully align them to form the mask for each side. I permanently glue them together with a small dot of \"Super Glue\" on opposite corners away from the printed image.\nThe next step is most heuristic and will require testing your exposure setup (see instructions below) as well as some experimentation with your paint application.\nTesting your UV exposure device - I do not know what sort of UV levels your device will output or your paint thickness, there are just too many variables. You need to establish the exposure timing suitable to your particular setup and paint density. To do this prepare a sample exposure guide and cover a blank PCB board with paint following the below instructions ( I have attached a striped exposure image which you can print on acetate and use as your test mask don't forget to double up and glue it).\nStart out with a time of 10 minutes total, divide it into four 2 1/2 minutes periods and expose a sample board moving a piece of carboard each 2 1/2 minutes so that one segment is exposed for 2 1/2 minutes next for 5 minutes, then 7 1/2 and finally the full 10 minutes. Remove and clean the board using paper towels and paint thinner to see which areas became hard and which have not. If it is almost all hard or all removed, double or half the times and try again with a clean piece of PC board. Use these timings to determine a suggested exposure time for your first board.\n\nWarning! Once the mask has hardened it is almost impossible to remove, determine your exposure times carefully before committing your circuit board to this process. Warning! Once the mask has hardened it is almost impossible to remove, determine your exposure times carefully before committing your circuit board to this process. If you are consistent in preparing your boards you should not have to change the exposure times.\nUsing the timings you derived from the test, expose your mask. After exposure of your finished board remove it from the UV box, remove the solder mask and peel back the acetate cover sheet. You should see the paint sticking to this sheet where the pads appear on your mask but not elsewhere on the board . Now using paper toweling and remove the unexposed paint with paint thinner. All the paint should be removed from the copper pads and vias but not the traces, clean the board back and front and dry with paper toweling. To finish hardening your mask first inspect the unexposed areas and using sharp tool remove any paint from unwanted areas. Then place the board in your UV exposure box and expose for at least twice to 3 times the original exposure time. Process the second side, if needed, in the same manner.", "step_imgs": ["https://cdn.instructables.com/FLC/PG3U/JTMSIREY/FLCPG3UJTMSIREY.LARGE.jpg", "https://cdn.instructables.com/FOE/V3AW/JTMSIRHY/FOEV3AWJTMSIRHY.LARGE.jpg", "https://cdn.instructables.com/FSN/9JAG/JTMSIRD2/FSN9JAGJTMSIRD2.LARGE.jpg", "https://cdn.instructables.com/F6J/E6P2/JTMSIR9P/F6JE6P2JTMSIR9P.LARGE.jpg", "https://cdn.instructables.com/FUO/QQJQ/JTMSIRHZ/FUOQQJQJTMSIRHZ.LARGE.jpg", "https://cdn.instructables.com/FPG/A5LS/JTMSW219/FPGA5LSJTMSW219.LARGE.jpg"], "step_title": "Step 11: Apply Solder Mask"}, {"step": 12, "steps_text": "Drill out the holes for vias, through-the-hole components and mounting holes. I use a drill press with a drill vice for the wire size bits. I find that the board is easier to handle if it is drilled before cutting to final size.", "step_imgs": ["https://cdn.instructables.com/FGN/S419/JTMSIVPA/FGNS419JTMSIVPA.LARGE.jpg", "https://cdn.instructables.com/FTG/S18B/JTMSIVP9/FTGS18BJTMSIVP9.LARGE.jpg"], "step_title": "Step 12: Drill Your Board"}, {"step": 13, "steps_text": "Using the board profile lines as a guide, trim the board using a rotary tool and cutoff wheel, File edges and round corners", "step_imgs": ["https://cdn.instructables.com/FSI/EKFN/JTMSIVPC/FSIEKFNJTMSIVPC.LARGE.jpg", "https://cdn.instructables.com/F7Q/33L5/JTMSIVPB/F7Q33L5JTMSIVPB.LARGE.jpg", "https://cdn.instructables.com/FTA/Q4G8/JTMSIVPF/FTAQ4G8JTMSIVPF.LARGE.jpg"], "step_title": "Step 13: Cut to Final Size"}, {"step": 14, "steps_text": "I usually hand solder the SMD parts first, then the vias and finally through-the-hole components.\nI made this device to hold down SMD components when soldering from couple of dowels some washers boles and nuts. I apply a little liquid flux to the SMD pads hold the component down then solder in place.\nA trick for the vias is to flatten a bit of the wire end with a pair of plyers so they do not drop through the via hole. Solder on the front side then bend the wire over and solder on the back.\nYour board is complete and ready to test.\nI hope this instructable though long was helpful. Please feel free to provide constructive comments or ideas.\nThanks for taking the time to look at my process and have fun building your electronic projects.", "step_imgs": ["https://cdn.instructables.com/FS2/SEQH/JTMSIXKT/FS2SEQHJTMSIXKT.LARGE.jpg", "https://cdn.instructables.com/FWS/2CME/JTMSIXKZ/FWS2CMEJTMSIXKZ.LARGE.jpg", "https://cdn.instructables.com/FA2/67ZF/JTMSIXKW/FA267ZFJTMSIXKW.LARGE.jpg", "https://cdn.instructables.com/FZH/CLUH/JTMSIXLT/FZHCLUHJTMSIXLT.LARGE.jpg", "https://cdn.instructables.com/FU6/0GOW/JTMSIXLX/FU60GOWJTMSIXLX.LARGE.jpg", "https://cdn.instructables.com/FWB/EXMJ/JTMSIXM0/FWBEXMJJTMSIXM0.LARGE.jpg", "https://cdn.instructables.com/FMK/XW85/JTMSIXNU/FMKXW85JTMSIXNU.LARGE.jpg"], "step_title": "Step 14: Populate Your Board"}], "channel": ""}, {"category": "", "description": "For hiking, I wanted a small lightweight raft for crossing\nrivers and creeks, that I can easily toss into my backpack and carry with me. The design should be very basic, just two layers of fabric welded together to from the tube and floor, with a valve added, like the Klymit design or the Halkett boat (https://en.wikipedia.org/wiki/Halkett_boat).", "title": "Laserweld Your Own Inflatables", "url": "https://www.instructables.com/id/Laserweld-Your-Own-Inflatables/", "section": "technology", "steps": [{"step": 1, "steps_text": "Nowadays you don`t have to sacrifice your rain cloak, as\nthere is TPU coated fabric available that can easily be welded together using a heat sealing iron.\nBut before building the actual raft based on my design, I\nwanted to make some prototypes (inflatables sometimes behave strange I had to find out).", "step_imgs": [], "step_title": "Step 1: Introduction"}, {"step": 2, "steps_text": "I didn`t want to use the expensive TPU material, so I\nstarted using LDPE film (100 my thickness) I had lying around. But heat sealing iron didn`t work as expected, gluing doesn`t work with LDPE, so what could I do?", "step_imgs": ["https://cdn.instructables.com/FH3/209R/JTMSJ83D/FH3209RJTMSJ83D.LARGE.jpg"], "step_title": "Step 2: LDPE"}, {"step": 3, "steps_text": "Having access to a CO2 laser cutter, I thought that it might\nbe possible to reduce the cutting power to near zero and increase the speed to weld two sheets of LDPE together- but it either had no effect on the material at all or the laser beam cut right through it.", "step_imgs": [], "step_title": "Step 3: The Problem.."}, {"step": 4, "steps_text": "Then it dawned on me: if I set the laser beam to be out of focus, it\nautomatically widens the beam, thus affecting a larger area and also reducing the amount of energy applied per mm\u00b2. In my first try, the two sheets of LDPE film were welded nicely together.\nAll I had to do was move the lens holder to the top position and play around with the power and speed settings. And make sure the material lied really flat, as wrinkles affect the quality of the seam.\nIt is also possible to weld and cut with the same file, no\nneed to stop and refocus for cutting- just use more power to cut through the material, the cutting edge won`t be perfect as the beam is out of focus, but in my case it didn`t matter.", "step_imgs": ["https://cdn.instructables.com/FFH/0LQQ/JTMSJ83Y/FFH0LQQJTMSJ83Y.LARGE.jpg", "https://cdn.instructables.com/FXP/OHB2/JTMSJ85D/FXPOHB2JTMSJ85D.LARGE.jpg", "https://cdn.instructables.com/FXE/P0CC/JTMSJ85G/FXEP0CCJTMSJ85G.LARGE.jpg", "https://cdn.instructables.com/F5J/7CSY/JTMSJ886/F5J7CSYJTMSJ886.LARGE.jpg"], "step_title": "Step 4: Solution"}, {"step": 5, "steps_text": "I didn`t stop with making prototypes for my\nraft, but made all kind of oddly shaped inflatables, as you can see. You can also fill them with water, make lamp shades,wearables or ice\u201dcubes\u201d... there is no limits.\nI use an old 60 watt CO2 laser, so the settings provided in the file attached might not work with your machine, but it is a good starting point.\nHope, you enjoyed my instructable. And packraft is next.", "step_imgs": ["https://cdn.instructables.com/F8H/9XKW/JTMSJ88I/F8H9XKWJTMSJ88I.LARGE.jpg", "https://cdn.instructables.com/F9Z/0EBC/JTMSJ865/F9Z0EBCJTMSJ865.LARGE.jpg", "https://cdn.instructables.com/FE7/RANL/JTMSJ86L/FE7RANLJTMSJ86L.LARGE.jpg", "https://cdn.instructables.com/FIN/CCWC/JTMSJ87U/FINCCWCJTMSJ87U.LARGE.jpg", "https://cdn.instructables.com/FUK/TCI0/JTMSJ87V/FUKTCI0JTMSJ87V.LARGE.jpg"], "step_title": "Step 5:"}], "channel": ""}, {"category": "", "description": "A 3D printed electric motor with a built in AA battery holder. The last step has the necessary .STL files.\nMaterials needed:\n14 gauge wire (or large paper clip)\n3x12mm neoydynium magnet\n2-3 feet of enameled magnet wire\nAA Battery\nM3 Bolts", "title": "3D Printed Electric Motor", "url": "https://www.instructables.com/id/3D-Printed-Electric-Motor/", "section": "technology", "steps": [{"step": 1, "steps_text": "An electric motor has two primary parts: A permanent magnet and a coil loop of some kind. When an electric current passes through the coil, the coil produces a magnetic field which interacts with the permanent magnet.\nThe coil ring experiences a torque causing it to rotate. The coil ring's magnetic field wants to line up with the permanent magnet's magnetic field. If the current stayed on, the coil ring would just find that position and stay there. The trick is turning off the current at just the right time and having momentum carry the ring until the current switches on again, torque is applied to the ring, and it does it over and over.", "step_imgs": [], "step_title": "Step 1: Introduction \u2014 How It Works"}, {"step": 2, "steps_text": "One of the hardest parts of making a homemade electric motor is making a symmetric loop so it doesn't wobble. A 3D printed ring makes it much easier.\nYou will need maybe two feet of enameled magnet wire\nFirst thread about two inches through the center hole and wrap the ring, fish about 3 inches back through the top or bottom hole on the other side, and fish through the center hole\nCompletely sand one shaft end, but only sand the bottom of the other. See illustration above for clearer instructions.", "step_imgs": ["https://cdn.instructables.com/FT6/YHSV/JTIYMNDG/FT6YHSVJTIYMNDG.LARGE.jpg", "https://cdn.instructables.com/FBP/TICP/JTIYMOH8/FBPTICPJTIYMOH8.LARGE.jpg"], "step_title": "Step 2: The Coil Ring"}, {"step": 3, "steps_text": "Please note: The version shown is without a switch holder.\nThe blue rods is where the 14 gauge wire is inserted. The metal rod of a large paper clip would likely work as well.\nThe shafts of the coil ring (shown in green) rotated very well in the cavity.\nThe battery is held in place with two M3 bolts gently applying pressure. The battery could also be held in place with some aluminum foil making electrical contact with both ends of the battery.\nElectrically it is very simple: The circuit simple connects the positive and negative ends of the battery to the 14 gauge wire ends (the blue rods in the diagram)", "step_imgs": ["https://cdn.instructables.com/FVK/SMAG/JTIYMQ55/FVKSMAGJTIYMQ55.LARGE.jpg"], "step_title": "Step 3: The Base"}, {"step": 4, "steps_text": "The STL file contains a model without the holder for the switch.", "step_imgs": [], "step_title": "Step 4: The Files"}], "channel": ""}, {"category": "", "description": "I have made a survival, emergency pocket power bank. As we are now so much surrounded by our gadgets especially cell phones all requiring power on the go. Often we land up into the situation wherein we need to make that one call or reach out to someone or in a situation of panic or distress this pocketable power bank comes in handy. It is made just to charge your dead mobile phone to about 7 to 8 % so that you can make that urgent emergency contact or a call in such kind of situation. This power bank then discharges after that life saving 7 to 8% of charge to your cell phone. It can then be recharged once again for that kind of situations or emergency situation. There are just a handful of components required to make one on your own.", "title": "DIY Emergency Pocket Power Bank", "url": "https://www.instructables.com/id/DIY-Emergency-Pocket-Power-Bank/", "section": "technology", "steps": [{"step": 1, "steps_text": "I made a body of this power bank form pieces of acrylic. Sadly though I do not have access to the 3d printer yet else I could have printed the enclosure. I measured the components and cut a few pieces of acrylic form an old registration plate of a car. Then I superglued all together making sure that the sides are perfect right angles else it won't hold together for long and would look ugly too.", "step_imgs": ["https://cdn.instructables.com/FMW/7KCI/JTMSW0VW/FMW7KCIJTMSW0VW.LARGE.jpg", "https://cdn.instructables.com/FU7/WJ2Z/JTMSW0VV/FU7WJ2ZJTMSW0VV.LARGE.jpg"], "step_title": "Step 1: Making a Enclosure of Power Bank Form Acrylic Pieces"}, {"step": 2, "steps_text": "We will need just three main components. 1S lipo battery that is typical of RC hobby drone. You can easily get hold of one of them to form an RC hobby store. One I am using here is of capacity 400 mA. A most important component that you will need is a 1S power bank module that supports charging of connected 1S battery via micro USB port on board and it has full-fledged USB port wherein we will connect our dead mobile phone to charge it with any available USB cable. I am going to keep one short length USB cable always connected as in panic or emergency situation it should be handy and one should not feel helpless, that though having a power bank in your pocket you couldn't make that call as there was no USB cable to charge your phone. We will also require some miscellaneous wire to wire it up and a slider switch to power on and off our power bank.", "step_imgs": ["https://cdn.instructables.com/FTV/41RM/JTMSW0VX/FTV41RMJTMSW0VX.LARGE.jpg", "https://cdn.instructables.com/FTH/GMXG/JTMSW0VY/FTHGMXGJTMSW0VY.LARGE.jpg", "https://cdn.instructables.com/F0A/0AT5/JTMSW0WG/F0A0AT5JTMSW0WG.LARGE.jpg"], "step_title": "Step 2: Electronics Required and Battery"}, {"step": 3, "steps_text": "Soldering electronics in this project was like a child's play. I have connected switch a battery and power bank module as shown in the picture, that completes this step.", "step_imgs": ["https://cdn.instructables.com/FMX/WTNY/JTMSW0WH/FMXWTNYJTMSW0WH.LARGE.jpg"], "step_title": "Step 3: Soldering Electronics"}, {"step": 4, "steps_text": "I made a slot for the charge in-out ports as shown in the picture above in one of the side plates of acrylic and hot glued power bank module in place. In the other plate, I made a slot for sliding switch and hot glued it in place. Then I placed the battery and arranged the wires and super glued all together. You can see the completed unit in one of the pictures.", "step_imgs": ["https://cdn.instructables.com/FRM/D8MC/JTMSW0WI/FRMD8MCJTMSW0WI.LARGE.jpg", "https://cdn.instructables.com/FML/CKXB/JTMSW0WJ/FMLCKXBJTMSW0WJ.LARGE.jpg", "https://cdn.instructables.com/F1B/I3MX/JTMSW0WK/F1BI3MXJTMSW0WK.LARGE.jpg", "https://cdn.instructables.com/FLB/MREA/JTMSW0W3/FLBMREAJTMSW0W3.LARGE.jpg", "https://cdn.instructables.com/FBW/H8QQ/JTMSW0WL/FBWH8QQJTMSW0WL.LARGE.jpg", "https://cdn.instructables.com/FGW/ELOT/JTMSW0W1/FGWELOTJTMSW0W1.LARGE.jpg", "https://cdn.instructables.com/FSR/4JVY/JTMSW3JR/FSR4JVYJTMSW3JR.LARGE.jpg"], "step_title": "Step 4: Assembling and Putting All Together"}, {"step": 5, "steps_text": "I got my hands on to the leopard skin pattern self-adhesive wrap. This is just not by coincidence it's symbolic. Just like panther runs so fast for a short distance and then gets exhausted in the same way this power bank will just boost your phone for that life-saving call and it will then get exhausted ha ha ha I think my analogy was a bit too weird. But I wrapped so that it looks good and then I carefully cut out the openings for the ports and switch in the wrapped power bank. Now it's time to test.", "step_imgs": ["https://cdn.instructables.com/FVF/5WGX/JTMSW0VN/FVF5WGXJTMSW0VN.LARGE.jpg", "https://cdn.instructables.com/FX2/DXDW/JTMSW0VO/FX2DXDWJTMSW0VO.LARGE.jpg", "https://cdn.instructables.com/FC5/L030/JTMSW0VP/FC5L030JTMSW0VP.LARGE.jpg", "https://cdn.instructables.com/FX9/R59I/JTMSW0VQ/FX9R59IJTMSW0VQ.LARGE.jpg"], "step_title": "Step 5: Applying Leopard Pattern Film or Wrap"}, {"step": 6, "steps_text": "As shown in the pictures this power bank is truly compact and portable and you can easily place it in your pocket or in your backpack while going hiking or some adventure trip. This will easily fit into any of your trouser regular pockets. Finally, I have shown that it functions well as expected and the phone I am holding is getting charged easily by power bank. I have tested it and I found that form total discharge state of say about (4000 mAh capacity of phone battery) it can boost your phone up to about 7 to 8% with this 400 mAh battery (used in power bank) and that is what the purpose of this power bank is all about. I hope that many of you would find this project useful. Thank you all for your time and do not forget to give this instructable a heart It will be a great motivation for me.", "step_imgs": ["https://cdn.instructables.com/FNK/J8E6/JTMSW0VR/FNKJ8E6JTMSW0VR.LARGE.jpg", "https://cdn.instructables.com/FH3/QYIE/JTMSW0VS/FH3QYIEJTMSW0VS.LARGE.jpg", "https://cdn.instructables.com/FYJ/LNVA/JTMSW0VT/FYJLNVAJTMSW0VT.LARGE.jpg"], "step_title": "Step 6: Usability and Test"}], "channel": ""}, {"category": "", "description": "Hello!\nMy name is David, I am a 14-year-old boy living in Spain and this is my first Instructable. I have been building robots and fixing old computers for some time now and my robotics teacher told me that it was good time to start sharing with other people what I have learnt. So here we go!\nOne day a friend of mine gave me a 3D model to build a robot and some components: One arduino nano microcontroller and two servo motors, with these 3 things I started to build my little robot.\nIn this Instructable I am going to share with you how to make this robot, also I will include the 3D model and the code that I have written, so you can have all that it is needed to make your own robotic rat!", "title": "Robotic Rat", "url": "https://www.instructables.com/id/Robotic-Rat/", "section": "technology", "steps": [{"step": 1, "steps_text": "- Arduino Nano microcontroller\n- 2 SG90 servo motors (You can find them in Amazon, or in some online shops)\n- You will have to print the 3D model or you can build a structure with cardboard or plastic. I used this model: https://www.tinkercad.com/things/12eU8UHtMSB from Tinker Robot Labs\n- Some wires, and a small breadboard\n- A 9 Volt battery and a connector\nAlso you will need to use the arduino IDE, you can download it in the next link: https://www.arduino.cc/en/Main/Software", "step_imgs": ["https://cdn.instructables.com/F6N/5P18/JTMSFS8H/F6N5P18JTMSFS8H.LARGE.jpg"], "step_title": "Step 1: What You Need:"}, {"step": 2, "steps_text": "Before starting the robot you have to do one previous step. You need to find the middle position of the servo. A servo can turn 180 degrees (half a circumference), and you need to find where is the 90 degree position first to be able to put the legs perpendicular to the body. To do this I wrote a program that puts the servos in the 90\u00ba position. Once the servos are at 90\u00ba you will have a reference point of where the servo will be at the beginning of the program.\nThis is the program that I use to center the servos:\n#include\nServo Front;\nServo Back;\nvoid setup() {\nFront.attach(9);\nBack.attach(6);\n}\nvoid loop(){\nFront.write(90);\nBack.write(90);\n}\nYou will have to make small adjustments to the software or the hardware to improve the movement of the robot and get a perfect gait, but first let's make the robot move, and at the end of the project, you will be able to do these adjustments.", "step_imgs": ["https://cdn.instructables.com/FFL/BQQ3/JTMSFXU7/FFLBQQ3JTMSFXU7.LARGE.jpg", "https://cdn.instructables.com/F9A/DGWS/JTMSFXUV/F9ADGWSJTMSFXUV.LARGE.jpg"], "step_title": "Step 2: Calibrating the Servos"}, {"step": 3, "steps_text": "After this you have to take the shafts of the servos and put it into the legs of the robot, to make this easier you can cut a little of the material around the hole in the legs to enter there the shafts.\nSecondly you will need to screw in the shafts with the 3D legs into the servos, when you have all in the right position, put a little dot of hot glue between the shaft and the legs to secure them in place. Be sure to put the legs at 90 degrees as seen in step 2.", "step_imgs": ["https://cdn.instructables.com/F2S/1R17/JTMSG0B0/F2S1R17JTMSG0B0.LARGE.jpg", "https://cdn.instructables.com/FC0/VOYY/JTMSG0B3/FC0VOYYJTMSG0B3.LARGE.jpg", "https://cdn.instructables.com/F3W/YVR1/JTMSG0B5/F3WYVR1JTMSG0B5.LARGE.jpg", "https://cdn.instructables.com/FR6/85XP/JTMSG0BU/FR685XPJTMSG0BU.LARGE.jpg"], "step_title": "Step 3: Assembling the Legs"}, {"step": 4, "steps_text": "Now you have to install the servos in the body of the robot, to do this you have to take the body in one hand and push in the servo, with the legs, into a hole that you have for the servo. Be sure that the wires of the servo goes in the right position, if not the servo will not fit in the chassis. There is a small slot on one of the sides of the servo hole. Use that slot for the wires.\nRepeat this step with the other set of legs.", "step_imgs": ["https://cdn.instructables.com/FVR/Y5H0/JTMSG2V1/FVRY5H0JTMSG2V1.LARGE.jpg", "https://cdn.instructables.com/FV3/H64C/JTMSG2YQ/FV3H64CJTMSG2YQ.LARGE.jpg", "https://cdn.instructables.com/FB0/7ID4/JTMSG2ZQ/FB07ID4JTMSG2ZQ.LARGE.jpg"], "step_title": "Step 4: Installing the Servos"}, {"step": 5, "steps_text": "After all these steps you will have the robot hardware finished. Now we are entering in the final part, the electronics and wiring. First, take the Arduino Nano and push it into the breadboard, then you'll have to remove the paper in the bottom side of the breadboard and glue the breadboard in the 3D model.", "step_imgs": ["https://cdn.instructables.com/F29/CN74/JTMSG39X/F29CN74JTMSG39X.LARGE.jpg", "https://cdn.instructables.com/FHC/ACY2/JTMSG3EZ/FHCACY2JTMSG3EZ.LARGE.jpg", "https://cdn.instructables.com/FOA/H6DI/JTMSG3JH/FOAH6DIJTMSG3JH.LARGE.jpg"], "step_title": "Step 5: Adding the Arduino"}, {"step": 6, "steps_text": "Let\u2019s do the wiring! In this step in which you will connect all the wires from the breadboard, to the servos.\nAll the servos have three wires, so one is for the information that the arduino sends, the orange one, other is for the +5v current, the red one, and finally the GND (or ground) wire, that is the brown one.\nTo connect the wires you may want to look at the code we have used to center the servos. In the code we can see that the servo for the front legs it is connected to the pin D9 and the other servo, the one for the back legs and tail it is connected in the port D6. this means that the orange wire of the front servo goes to the D9 pin, and the orange wire of the servo for the back legs is connected to the D6 pin. The red cable of both servos go to 5V and the brown wires of both servos go to GND (any of the GND pins of the Arduino Nano).", "step_imgs": ["https://cdn.instructables.com/FG9/KXIZ/JTMSG425/FG9KXIZJTMSG425.LARGE.jpg", "https://cdn.instructables.com/F2C/IPKR/JTMSG435/F2CIPKRJTMSG435.LARGE.jpg"], "step_title": "Step 6: Wiring"}, {"step": 7, "steps_text": "To finish the robot you have to bring it alive!, so here comes my favourite part, the code.\nHere below, I share with you the code. The key to make your robot walk with a perfect gate is to modify the program to perfectly adapt it to the weight and balance of your rat, but I only recommend this if you know a little bit of arduino's programmation. If your rat struggles to walk, write a comment and I can help you to make your rat walk with some style!.\nHere you have the code that I used:\n#include <Servo.h>\nServo Front;\nServo Back;\nvoid setup() {\nFront.attach(9);\nBack.attach(6);\nFront.write(92); // my front servo, at 90 degrees was not perfectly straight, so I had to modify the angle to 92 degrees.\nBack.write(90);\ndelay(1000); //the robot puts all legs perpendicular to the body and waits one second\n}\nvoid loop() {\n// This loop will run till you unplug the robot\n// You can modify the angles or the delay time between movements to make your robot walk quicker or slower or make bigger or smaller steps\nFront.write(132);\ndelay(100);\nBack.write(50);\ndelay(300);\nFront.write(50);\ndelay(100);\nBack.write(130);\ndelay(300);\n}\nAfter writing the program in the arduino's programming platform you can upload it in the robot and see how it moves.", "step_imgs": ["https://cdn.instructables.com/F86/R9Z7/JTMSG6W0/F86R9Z7JTMSG6W0.LARGE.jpg"], "step_title": "Step 7: And Some Code"}, {"step": 8, "steps_text": "This robot is super simple to assemble, and the program is also quite simple. It is easy to make it move... but quite complicated to make it move gracefully. If you want to start building and programming walking robots, this is a good project for you. You will learn with this project how to program a \u201cgait\u201d, the sequence of instructions to make your robot walk.\nI hope you have enjoyed my first instructables and please, if you need any help with your robot, I will be happy to assist you in English, French or Spanish.\nDavid", "step_imgs": [], "step_title": "Step 8: You Are Done!"}], "channel": ""}, {"category": "", "description": "All the versions of ultrasonic radars I have found using ultrasonic detectors with arduino devices (Arduino - Radar/Ultrasonic Detector, Arduino Ultrasonic Radar Project) are very nice radars but all of them are \"blind\" radars, I mean, the radar detects something but what is it.\nSo I propose myself to develope a system able to detects objets and identyfy them. In other words a positioning system without using GPS devices but ultrasonic detectors.\nThis is the result I hope you like.", "title": "Positioning System", "url": "https://www.instructables.com/id/Positioning-System/", "section": "technology", "steps": [{"step": 1, "steps_text": "The positioning systems is formed by three sensors stations with ultrasonic detectors and id_node 1,2 and 3 forming a rectangle or square that sweep an angle of 90\u00ba and where the distances between them are known as shown on picture 1.\nconst float distancebetween1and2 = 60.0;\nconst float distancebetween2and3 = 75.0;\nThese sensors measurement the distance and angle of other objects with id_node greater than 3 that also have an ultrasonic detector that sweeps an angle of 170\u00b0.\nAll of them send the distances, angles measured and the id_node to another master station using wireless communicactions to analyze, calculate the position of the objects using trigonometry calculation and identify them.\nTo avoid interferences the master station synchronizes all the ultrasonics detectors in that way that only one ultrasonic detector is measuring at each moment\nAfter that and using a serial communication the master station sends the information (angle, distance, id_object) to a processing sketch to plot the results.", "step_imgs": ["https://cdn.instructables.com/FYN/U7EO/JT4TLQ37/FYNU7EOJT4TLQ37.LARGE.jpg"], "step_title": "Step 1: How Does It Work?"}, {"step": 2, "steps_text": "The only function of each sensor station is to detect objects and send the list of distance, angle and id node measured to the master station.\nSo you have to update the maximum detection distance (\u201cvalid_max_distance \u201c) allowed and the minimum one (\u201cvalid_min_distance \u201c) (centimetres) to improve the detection and to limit the detection zone:\nint valid_max_distance = 80;\nint valid_min_distance = 1;\nThe id node of these sensor stations (\u201cthis_node\u201d in the code below) are 1, 2 and 3 and the id node of the master station is 0.\nconst uint16_t this_node = 01;  // Address of our node in Octal format (Node01,Node02, Node03)\nconst uint16_t other_node = 00; //Address of the master node (Node00) in Octal format\nEach sensor station sweeps and angle of 100\u00ba (\u201cmax_angle\u201d in the code below)\n#define min_angle 0\n#define max_angle 100\nAs above the only function of an object is to detect objects and send the list of distances, angles and id object measured to the master station. The id of one object (\u201cthis_node\u201d in the code below) has to be greater than 3.\nEach object sweeps and angle of 170\u00ba and as above, it is possible to update the maximum and minimum detection distance.\nconst uint16_t this_node = 04;        // Address of our node in Octal format (Node04,Node05, ...)\nconst uint16_t other_node = 00;       // Address of the master node (Node00) in Octal format\nint valid_max_distance = 80;\nint valid_min_distance = 1;\n#define min_angle 0\n#define max_angle 170", "step_imgs": ["https://cdn.instructables.com/FOW/WF58/JTIYPGXS/FOWWF58JTIYPGXS.LARGE.jpg", "https://cdn.instructables.com/FTI/EJ4A/JTMSW8ML/FTIEJ4AJTMSW8ML.LARGE.jpg"], "step_title": "Step 2: How to Configure the Three Sensor Stations and the Objects"}, {"step": 3, "steps_text": "The function of the master station is to receive the transmissions of the sensor stations and the objects and send the results using the serial port to a processing sketch to plot them. Moreover synchronizes all the objects and the three sensor stations in that way that only one of them is measuring at each time to avoid interferences.\nFirstable you have to update the distance (centimetres) between sensor 1 and 2 and the distance between 2 and 3.\nconst float distancebetween1and2 = 60.0; \nconst float distancebetween2and3 = 70.0;\nThe sketch calculates the position of the objects in the following way:\nFor all the transmissions of the objects (id_node greater than 3) look for the same distance in each transmission of the ultrasonic sensors (id_node 1, 2 or 3).\nAll these points form a list of \u201ccandidates\u201d (distance, angle, id_node) to be the position of one object (\u201cprocess_pointobject_with_pointssensor\u201d in the sketch).\nFor each \u201ccandidate\u201d of the previous list, the function \u201ccandidate_selected_between_sensor2and3\u201d calculates from the point of view of the ultrasonic sensor 2 and 3 which of them match the following trigonometry condition (see the pictures 2 and 3)\nfloat distancefroms2 = sin(radians(angle)) * distance;\nfloat distancefroms3 = cos(radians(angle_candidate)) * distance_candidate;\n\n// Trigonometry condition 1\nabs(distancefroms2 + distancefroms3 - distancebetween2and3) <= float(max_diference_distance) \nAs above, for each \"candidate\" of the previous list, the function \u201ccandidate_selected_between_sensor1and2\u201d calculates from the point of view of the ultrasonic sensor 1 and 2 which of them match the following trigonometry relation (see the picture 2 and 3)\nfloat distancefroms1 = sin(radians(angle)) * distance;<br>float distancefroms2 = cos(radians(angle_candidate)) * distance_candidate;\n\n// Trigonometry condition 2\nabs(distancefroms1 + distancefroms2 - distancebetween1and2) <= float(max_diference_distance)\nOnly the candidates (distance, angle, id_node) that matches the trigonometry conditions 1 and 2 are identified objects detected by the sensor stations 1,2 and 3.\nAfter that the results are sending by the master station to a processing sketch to plot them.", "step_imgs": ["https://cdn.instructables.com/FVI/ELKC/JT4TLQ1I/FVIELKCJT4TLQ1I.LARGE.jpg", "https://cdn.instructables.com/F03/566K/JTIYPH1L/F03566KJTIYPH1L.LARGE.jpg", "https://cdn.instructables.com/FYF/9AZV/JTMSULBI/FYF9AZVJTMSULBI.LARGE.jpg"], "step_title": "Step 3: How to Configure the Master Station"}, {"step": 4, "steps_text": "The list of material needed for one sensor station or one object is the following:\nNano board\nUltrasonic sensor\nMicro servo motor\nNRF24L01 wireless module\nNRF24L01 adapter\nand the list of material for the master station is the following:\nNano board\nNRF24L01 wireless module\nNRF24L01 adapter", "step_imgs": ["https://cdn.instructables.com/FPA/85M8/JTIYPH2I/FPA85M8JTIYPH2I.LARGE.jpg"], "step_title": "Step 4: List of Material"}], "channel": ""}, {"category": "", "description": "Have you calculated the number of alkaline batteries we throw every year, around the world. It's enormous... !\nThe battery market in France is 600 million units sold each year, 25,000 tons and 0.5% of household waste. According to Ademe, this number is 1 billion and 90 million for batteries ... 80% of batteries are not recycled in Europe in 2009.\nIn France, in 2006, 2 out of 3 piles ended up in the trash: only 9,000 tons of used batteries were collected while at the same time 30,000 tons of new batteries were sold. 80% of the batteries used in Europe in 2009 are not recycled!\nWe all need to do something to make this change .... for example, to start by reducing the number of alkaline batteries used.\nA few years ago, I found a document from a French manufacturer \"Wonder\" of alkaline batteries that had surprised me. He explained how to recharge them several times ... hallucinating. Here it is.\nIn summary, here's what you need to respect to recharge an alkaline battery:\nThe terminal voltage must be greater than 1.25V for a 1.5V battery.\nThe battery should be discharged only partially (20-30%) to increase this life and are possible recharge number.\nWhen charging, the voltage at the battery terminals must not exceed 1.7V.\nThe charging current must not exceed C / 15. \"C\" is the theoretical capacity of the battery. for example C = 1100mAh for an R6 battery.\nA dozen recharge possible if this point is respected.\nIn 2017, I had enough to throw away the batteries used in the toys of my young children. So I started to test chargers (No. 1 and No. 2) batteries for so called alkaline batteries. But none of them met the load conditions explained in the Wonder manufacturer's document. In the end, the batteries recharged by these chargers were good to throw.\nI had no choice then. I had to design one myself.", "title": "Smart Charger for Alkaline Batteries", "url": "https://www.instructables.com/id/Smart-Charger-for-Alkaline-Batteries/", "section": "technology", "steps": [{"step": 1, "steps_text": "Charge 4 1.5v AA and AAA 1.5v alkaline batteries.\nLimit the load to 1.7V per element.\nCharging current of C / 15, about 80mAh for a 1200mAh / 1.5V battery.\nDetect if the battery can be recharged.\nDetect if the battery is fully charged.\nAs a bonus, transmit the voltages of the batteries by serial link.", "step_imgs": [], "step_title": "Step 1: The Functions He Has to Fulfill"}, {"step": 2, "steps_text": "I used a box 4 batteries the cheapest possible, found on Aliexpress to use its mechanical system of fixing batteries and LEDs.\nThe electronic PCB consists only of 5 resistors for the LEDs and the battery charge. I modify this ultra simple card by cutting tracks to isolate LED power supplies and mechanical contacts to use them.\nTo be able to integrate the electronic card, I printed a box extension, which sticks on the high part of the box and is screwed on the bottom of the box. The file STL is available here.", "step_imgs": ["https://cdn.instructables.com/FCH/6MLR/JTIYMHRH/FCH6MLRJTIYMHRH.LARGE.jpg", "https://cdn.instructables.com/F1T/PD5D/JTIYMHSL/F1TPD5DJTIYMHSL.LARGE.jpg", "https://cdn.instructables.com/FDH/NHHX/JTIYMHRL/FDHNHHXJTIYMHRL.LARGE.jpg", "https://cdn.instructables.com/F06/6N4D/JTIYMHRM/F066N4DJTIYMHRM.LARGE.jpg", "https://cdn.instructables.com/FNO/L776/JTIYMHRN/FNOL776JTIYMHRN.LARGE.jpg", "https://cdn.instructables.com/F6U/71XJ/JTIYMHRO/F6U71XJJTIYMHRO.LARGE.jpg"], "step_title": "Step 2: The Box"}, {"step": 3, "steps_text": "The charger is designed around a 28 pin dsPIC30F2010.\nThese inputs / outputs will allow to:\nMeasure the battery voltages.\nControl the charge of each battery.\nControl the charge state LEDs of the batteries.\nTransmit voltages by serial link.\nThe charge of each 1.5V battery is achieved by the PWM control of a transistor 2N2222 (T1 to T4) and a resistor (R2, R5, R8, R11) limiting the current to C / 15, 83mAh. A diode 1N4148 (D1 to D4) protects the battery and the charging circuit from a possible error of setting up the battery in the case.\nThe values of resistors R2, R5, R8 and R11 can be changed to charge more + or - significant batteries. But be careful not to exceed the heat dissipation power of transistors T1 to T4.\nThe card is equipped with an ICSP connector to program the dsPIC30F2010.\nA LM317 regulator is provided to charge 9V batteries at 38mAh @ 10.2V. But the tests showed that it did not work. I do not use this function.\nThe analog inputs of the dsPIC measure the voltage across the battery when the transistors (T1 to T4) are in the off state. Thus, we know the voltage at their terminals.\nThe LEDs (DS1 to DS5) indicate the charge / discharge status of each 1.5V (DS1 to DS4) and 9V (DS5) battery.\nThe board is powered by a 12V / 1.6Ah power supply.\nThe 5V is produced by a 12v- 5V DC / DC switching board.", "step_imgs": ["https://cdn.instructables.com/FTI/2EC4/JTIYMHRK/FTI2EC4JTIYMHRK.LARGE.jpg"], "step_title": "Step 3: Electronics"}, {"step": 4, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FWR/U23K/JTIYMHSM/FWRU23KJTIYMHSM.LARGE.jpg"], "step_title": "Step 4: Schematic"}, {"step": 5, "steps_text": "The status of the LEDs indicates whether the battery is charged / discharged / not rechargeable.\nLED off: no battery or battery not rechargeable Flashing LED: charged battery LED on: battery charging\nIf the LED remains steady after 12 hours of charging, the battery is considered charged. It must be removed from the charger.", "step_imgs": ["https://cdn.instructables.com/FNW/4KUP/JTIYMHSK/FNW4KUPJTIYMHSK.LARGE.jpg"], "step_title": "Step 5: Operation"}, {"step": 6, "steps_text": "They are designed to charge 4 1.5V batteries and a 9V battery.\nUnfortunately the 9V battery charging tests were inconclusive: the 9V batteries are discharging instead of charging. So I did not use this function later, even though the program measures the voltage of the 9V battery and transmits it by serial link.\nIts dimensions are: 68x38mm.\nThe DC / DC power adapter must be configured as follows: solder the ADJ connectors together. Then adjust the potentiometer to output a voltage of 5V. The \"5V\" pre-setting of the card does not work properly.", "step_imgs": ["https://cdn.instructables.com/FCS/VDTR/JTIYMHRQ/FCSVDTRJTIYMHRQ.LARGE.jpg", "https://cdn.instructables.com/FEF/VLZS/JTIYMHRT/FEFVLZSJTIYMHRT.LARGE.jpg", "https://cdn.instructables.com/FCK/MAUV/JTIYMHRI/FCKMAUVJTIYMHRI.LARGE.jpg"], "step_title": "Step 6: The PCB"}, {"step": 7, "steps_text": "1 case for 4 batteries\n1 PCB + components\n1 power supply card 12vDC / 5Vdc 0.8Ah\n1 block 220Vac socket (or 110Vac) to 12V / 1.6Ah\n1 case extension (3D printing)\nThe complete component nomenclature is available here.", "step_imgs": [], "step_title": "Step 7: Nomenclature"}, {"step": 8, "steps_text": "The configuration of the communication is as follows: 9600 bauds, 1 start bit, 1 stop bit, no parity.\nThe output voltage levels are TTL.", "step_imgs": [], "step_title": "Step 8: Serial Communication"}, {"step": 9, "steps_text": "You want to do it, no worries, I propose several kits depending on the budget you want to put.\nThey are available in the shop of my website.\nAll files are available here.", "step_imgs": [], "step_title": "Step 9: Do It Yourself"}], "channel": ""}, {"category": "", "description": "Small and handy radio for your little ones. Let them play their favorite songs or fairytales. And that all in the wooden box!", "title": "Kids' Wooden Radio", "url": "https://www.instructables.com/id/Kids-Wooden-Radio/", "section": "technology", "steps": [{"step": 1, "steps_text": "When I saw the Horbert radio I knew in instant I want to build something similar for my 2yo daughter. But yet I wanted to make it smaller and handier. Maybe put some lights there. So here we are. Radio for your little ones. It features 7 color buttons, small yet powerful speaker and mp3 player capable of playing songs or fairytales from SD card. Last but not least it features rainbow LEDs around the case to create nice ambient light which can be used as a night lamp while the bedtime fairytale is being played.", "step_imgs": ["https://cdn.instructables.com/FC9/JC7I/JTMST7D4/FC9JC7IJTMST7D4.LARGE.jpg", "https://cdn.instructables.com/FBJ/0OKH/JTMST7DZ/FBJ0OKHJTMST7DZ.LARGE.jpg", "https://cdn.instructables.com/F0K/QJ0G/JTMST7ES/F0KQJ0GJTMST7ES.LARGE.jpg", "https://cdn.instructables.com/FZP/FKVE/JTMST7E0/FZPFKVEJTMST7E0.LARGE.jpg"], "step_title": "Step 1: Story"}, {"step": 2, "steps_text": "I wanted to make the case wooden. It looks nice and I love working with wood. Luckily by the same time, my friend got himself a laser cutter to cut plywood. And it is awesome! Various shapes cut within a few seconds and with awesome accuracy! The graphics file is attached at the bottom of this article.\nDimensions: 90x140x35mm\nThe case is made out of 4mm plywood cut into 8 parts. Front and back plate. Four side plates. Battery and speaker cover. First I glued the four side plates together to form a frame. I've also used some extra wood to reinforce the corners because I want them to be round at the end so I need to have some extra material there to be able to sand the corners down a little bit.\nBefore I glued in the front piece I inserted a thin layer of plexiglass between the front plate and the frame. This will allow me to later attach the LEDs to create a nice shiny ring around the radio. Some extra design touch. I've used 4mm plexiglass which I cut into rough shape to fit on the frame. Plexiglass is glued to the frame and front plate with the use of super glue. Don't worry about the overlapping plexiglass, it will be sanded out with final shaping.", "step_imgs": ["https://cdn.instructables.com/FYQ/4BU8/JTMST57T/FYQ4BU8JTMST57T.LARGE.jpg", "https://cdn.instructables.com/FA7/P329/JTMST57W/FA7P329JTMST57W.LARGE.jpg", "https://cdn.instructables.com/FOS/0XWR/JTMST5AM/FOS0XWRJTMST5AM.LARGE.jpg", "https://cdn.instructables.com/FY4/O2DM/JTMST5AP/FY4O2DMJTMST5AP.LARGE.jpg", "https://cdn.instructables.com/FXB/21OA/JTMST5AS/FXB21OAJTMST5AS.LARGE.jpg", "https://cdn.instructables.com/FY9/9S0Y/JTMST5BF/FY99S0YJTMST5BF.LARGE.jpg"], "step_title": "Step 2: The Wooden Case"}, {"step": 3, "steps_text": "To add an extra coolness and effect in the dark I've added 4 RGB LEDs around the case. Plexiglass inserted earlier will allow the emitted light to spread around the case. I've used standard addressable WS2818 RGB LEDs daisy-chained together. One in each corner of the case.\nFirst, glue these tiny LEDs into the corners on top of the plexiglass with super glue. Don't forget to mark the pin 1 otherwise you won't be able to properly interconnect them - see my tiny black mark made by permanent marker. Second, interconnect them together. I've used 0.3mm copper wire with transparent insulation.\nVCC to VCC\nGND to GND\nOUT to IN of the next LED", "step_imgs": ["https://cdn.instructables.com/FDJ/JL5D/JTMST5H4/FDJJL5DJTMST5H4.LARGE.jpg", "https://cdn.instructables.com/FVH/2W03/JTMST5JZ/FVH2W03JTMST5JZ.LARGE.jpg", "https://cdn.instructables.com/FEQ/MR9F/JTMST5Q8/FEQMR9FJTMST5Q8.LARGE.jpg", "https://cdn.instructables.com/FSI/TC6O/JTMST5VY/FSITC6OJTMST5VY.LARGE.jpg"], "step_title": "Step 3: Ambient Rainbow Lights"}, {"step": 4, "steps_text": "Prior to gluing the back plate in place cut small holes on one side of the frame to fit Arduino NANO USB port, MP3 player SD card slot and power switch. I've decided to put them on the left side of the radio. Using a small knife and a square file I've cut precise holes. As small as possible to hide as much as possible.\nNow it is time to glue the back plate in place and form the final shape of the radio. After the glue set, I've used a bench sander to shape the round corners and clean up all the surfaces. To protect the edges I've also sanded them a little bit. Protect the wires coming out of the RGB LEDs to prevent any damage to the insulation while sanding.\nThe last step is to glue a speaker cover ring over the speaker hole. It will hold the speaker in place. As a final protection, I've applied clear lacquer in 4 layers.", "step_imgs": ["https://cdn.instructables.com/F8T/WN0W/JTMST6L3/F8TWN0WJTMST6L3.LARGE.jpg", "https://cdn.instructables.com/FA2/HQSS/JTMST6L4/FA2HQSSJTMST6L4.LARGE.jpg", "https://cdn.instructables.com/FCD/G3GR/JTMST65W/FCDG3GRJTMST65W.LARGE.jpg", "https://cdn.instructables.com/FFL/3M5B/JTMST5EO/FFL3M5BJTMST5EO.LARGE.jpg", "https://cdn.instructables.com/F3X/UQFQ/JTMST6GG/F3XUQFQJTMST6GG.LARGE.jpg", "https://cdn.instructables.com/F47/6SWH/JTMSTD9V/F476SWHJTMSTD9V.LARGE.jpg", "https://cdn.instructables.com/F71/MMXJ/JTMST6QB/F71MMXJJTMST6QB.LARGE.jpg"], "step_title": "Step 4: Finalizing the Case"}, {"step": 5, "steps_text": "To protect the speaker from being damaged by the curious fingers I wanted to put a mesh of some kind over the speaker hole. But since I don't own a 3D printer and I didn't have anything else suitable, I've created it by soldering 1mm brass rods into a mesh.\nIt's perfect. It's incredibly solid. Nothing can penetrate it and also looks pretty nice. To hide the solder joints I've sprayed it with white color. Speaker cover is glued into the radio with use of super glue.", "step_imgs": ["https://cdn.instructables.com/F5D/CKO4/JTMST79T/F5DCKO4JTMST79T.LARGE.jpg", "https://cdn.instructables.com/FPF/WP32/JTMST6TP/FPFWP32JTMST6TP.LARGE.jpg", "https://cdn.instructables.com/F1K/P8HY/JTMST71Q/F1KP8HYJTMST71Q.LARGE.jpg", "https://cdn.instructables.com/FKD/J84H/JTMST74M/FKDJ84HJTMST74M.LARGE.jpg"], "step_title": "Step 5: Speaker Cover Mesh"}, {"step": 6, "steps_text": "The heart of the radio is my favorite Arduino NANO board. It reads the states of 7 buttons, controls DFPlayer mini MP3 player and controls the addressable RGB LEDs. DFPlayer is a tiny MP3 player with built-in SD card slot and sound amplifier which can handle up to 3W speaker. I've used a 0.5W 8ohm speaker.", "step_imgs": ["https://cdn.instructables.com/FZM/34DB/JTMST589/FZM34DBJTMST589.LARGE.jpg"], "step_title": "Step 6: Inside the Radio"}, {"step": 7, "steps_text": "First of all, create the buttons platform. Radio contains 7 programmable buttons in total soldered to small piece of a perf board. Originally I wanted each button to have a different color to play 7 different songs. But it didn't look nice so I decided to have one black button to change the volume level and yellow, blue and red pairs to select previous or next song out of 3 groups of songs. Each button is connected to one digital pin of Arduino and they are all grounded via 1Kohm resistor.\nThe buttons don't have standard perf board friendly spacing so I had to place them into the holes in the case and solder them together with a piece of a brass rod using free form technique. Now when the layout of buttons was fixed it was time to solder it to the perf board upside down and add 7 wires to each button. Finally, I soldered the 8th wire for the common ground.", "step_imgs": ["https://cdn.instructables.com/FH6/23H2/JTMST5AL/FH623H2JTMST5AL.LARGE.jpg", "https://cdn.instructables.com/FO7/I0LI/JTMST58V/FO7I0LIJTMST58V.LARGE.jpg", "https://cdn.instructables.com/F5Y/90NK/JTMST5BI/F5Y90NKJTMST5BI.LARGE.jpg", "https://cdn.instructables.com/F5V/69TC/JTMST6NG/F5V69TCJTMST6NG.LARGE.jpg"], "step_title": "Step 7: The Buttons"}, {"step": 8, "steps_text": "Now when you have all the parts needed, let's finish the job. I first soldered all the wires between the Arduino Nano, DFPlayer, buttons, speaker, RGB LEDs, battery and on/off switch outside the radio because there is not enough room inside the case once they will be inserted. It also allowed me to test the electronics outside the case before all the components are irreversibly glued inside.\nFirst I inserted and glued Arduino NANO, DFPlayer and on/off switch into the case with use of Mamut Glue. The Mamut Glue gave me more time to precisely and nicely place the boards inside and will hold them better in the future because it is flexible. Next was a speaker mounted on the bottom of the speaker cover mesh again with Mamut Glue. And the last parts were the buttons and the battery pack. The battery pack sits in the hole on the back to allow easily replace the batteries. Later I replaced the 4xAA batteries with a single 9V battery. It's much lighter.\nIt is finished! Let's program it!", "step_imgs": ["https://cdn.instructables.com/FH1/8HPN/JTMST7AE/FH18HPNJTMST7AE.LARGE.jpg", "https://cdn.instructables.com/FO4/QYQG/JTMSTGRO/FO4QYQGJTMSTGRO.LARGE.jpg"], "step_title": "Step 8: Assembling It Together"}, {"step": 9, "steps_text": "I've simply used examples from DFPlayer site and added some code to read the buttons and control the LEDs from my Ever Blooming Mechanical Tulip project. The code is quite simple. Definitely not the cleanest I ever made but it works.\nIt requires the SD card to contains 3 folders named 01, 02, 03 for each color pair. Within each folder can be up to 255 songs named 001.mp3 to 255.mp3. I'd rather name the folders red, blue and yellow but DFPlayer does not support that.\nDFPlayer is pretty easy to use. It communicates via serial line and has a pretty nice library with various functions to read and control the state of the player. I would only add support for human readable folder and file names.\nDon't forget to share your creation! Like this article. Also, consider supporting me by buying some of my products in my Tindie store.\nYou can find me and my latest projects on my Twitter account.\nBelow are Arduino source code and DXF file for laser cutter with radio wooden parts.", "step_imgs": ["https://cdn.instructables.com/F8S/GR5E/JTMSTJUL/F8SGR5EJTMSTJUL.LARGE.jpg"], "step_title": "Step 9: Playing the Songs!"}], "channel": ""}, {"category": "", "description": "hey before I talk about myself and why I decided to go on this journey, I will like to say please check out my vid for an epic riding montage and my practices of making also importantly please subscribe it will really help my college course, because my lecture challenged me to get 1000 subscribers by the end of this college year to show improvement and continuous progress,\nokay, now we got that boring stuff out the way lets talk about why I did this?\nI've been making wooden longboards for years which you can actually see the first one I made here https://www.instructables.com/id/How-to-Make-a-Lo... (they are much better now) ;-) but I wanted to try something new which would give me the next rush, so I wanted an electronic longboard which could get me going 30mph + and at least a 12 mile range and a hand made carbon fibre deck which I also never done before , also it had to get me to college to save my dads car from potholes so it had to get up some mean hills, so lets get started\nthis instructable was inspired from this build https://www.instructables.com/id/DIY-Electric-Longboard/ who promoted it being a budget build, this was definitely something that I wanted to copy and steal use quality components, but I wanted mine to be even faster and much more range!", "title": "Insane Electric Longboard Budet With Carbon Fiber Deck", "url": "https://www.instructables.com/id/Insane-Electric-Longboard-Budet-With-Carbon-Fiber-/", "section": "technology", "steps": [{"step": 1, "steps_text": "so to start any good project you will need some materials, I've brought the materials to form a range of suppliers including hobbyking aliexpress ebay and homebase\n6374 192kv motor , this motor was chosen because 192kv is the perfect hotspot for torque(= hill climbing) and speed and 63mm 74mm motor because it only being used singlely not dual hub and bigger motor = better colling which should therefore last longer \u00a364.11 Hobbyking\nHobbyKing motor mount, this connects motor to truck \u00a36.74\nxt-90 anti spark connectors, these are great for the loop key switches to turn of the long board and to connect battery pack to the vesc \u00a34.51 HobbyKing\nxt 60 connectors, i used these as the charger port to create an diferncial between the xt90 loop key switch \u00a32.19 HobbyKing\n12 awg wire buy red and black for positive and negative HobbyKing \u00a33.20\n4mm bullet connectos for connecting vesc cables to motor HobbyKing\u00a32.22\nflipsky vesc 4.12 this is proberllry one of the most important parts of an electronic longboard build because this is the brains behind the longboard this tells the motor what to do and helps protect the battery also adds alot of satey nets includeing if the remote cuts out the longboard will break and turns of board if something oveer heats Ebay \u00a345\n10s 35a bms, this also super important because this will keep the 18650 batteries in ballence which is crucicial otherwise the pack will eventalley break and it may be a fire risk also this allows the pack to charge safely Ebay \u00a38.99\n106xl belt Ebay \u00a32.27\ninsulation paper this is really important helps stop short circuits and fires Ebay \u00a32.68\n2.4ghz remote Ebay \u00a321\n18650 battery samsung 30q, it is crucial you buy these batteries from nkon youll need 30 around euro 3.60\n10s 36v output 42v charger , i only reconmend a 4 amp max charger or lower to prolong the life of battery pack as they are expenisve this will take longer to charge thogh Aliexpress\n83mm wheels these wheels are important as they are the only cheap ones which fit the thingverse gear Ebay \u00a317\ntrucks 180mm Aliexpress \u00a324\n16t 8mm gear aliexpress \u00a32.82\npine board from home base \u00a310\ngriptape ebay \u00a32.95\n18650 battery holder\n3d printed gears\n---------------------------------------------------------------------------------------\ntools\njig saw\nsandpaper\nsander or spokeshave\nfiles and rasps\ndrill\nrouter (optional)\nepoxy resin\ncarbon fiber fabric\nbattery spot welder (optional)\n3d printer (optional)", "step_imgs": ["https://cdn.instructables.com/F2D/K8X1/JSOZ3BFD/F2DK8X1JSOZ3BFD.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "the reason why I used pine for the longboard deck is because my local timber shop was closed , I wanted to use poplar wood because of its lightweight properties , but then again this pre-prepared pine board makes it more available for anyone to do at home easily who may not have expensive tools like tables saws and thicknessers, they took a lot of selling models and makes to save up for\nnow you got your timber ready you will want to draw your design or print out a template of the deck mine is 39\" long and 26cm wide i recommend a more rectanlear design so you have room to store your container for the batteries and vesc\none mistake that i did make is that i did not mark out the rebates for the batterys and the coves for cool aerodynamic looks before it was cut so it was really hard to mark it all out sqaure when the board was alleady cut in a curvy shape so markeing yp guised for the router was hard to jue there not being a stright esdge to mark ot from,\nonece etherything has been marked out you will be ready to router in detail or compartments for batterys then cut the template with the jig saw use a fine cut balde, and if your desighn has samll complex curvrs in i recon mend useing a thiner blade to enable you to get around them curves and to reduce burning and heat stress which will mean your blades last longer\nafter its cut you will want to refine your beatiful shape, i used a range of tools , like a spoke shave which is allways a plesure to use and a files vareious sanding blocks, and just shape away untill its all symetrical\ni aslo wanted to add in some wheel wheels which i thought whould add a allmost formula car vibe to my deck, to get this i used a rasp then further refined it with a sander\nthen round over all the coners for the grip tape side i just used a round over bit on an router then for the bootom , the ends are round over then the sides i used a chamfer to give it extra style\ngive it a final sand to around 120 grit, if you did not want to carbon fiber it and keep the deck costing \u00a310 just varnish it now or paint it then varnish and your finnsih the deck", "step_imgs": ["https://cdn.instructables.com/FUO/V808/JTMSFCF0/FUOV808JTMSFCF0.LARGE.jpg", "https://cdn.instructables.com/F1C/3VJC/JTMSFCFF/F1C3VJCJTMSFCFF.LARGE.jpg"], "step_title": "Step 2: Maneufacture of the Deck"}, {"step": 3, "steps_text": "now for a modern aesthetic to too ad strength to the pla 3d prints will cover all the parts in carbon fibre, check out my video on good methods\nhttps://youtu.be/caJs6WLj5MA\nNow your deck is completed your ready to carbon fibre the board and make it look modernly cool, I used a 1 to 2 part epoxy resin, if you want to save money you can you a polyester resin but its a super strong solvent and will make any room stink and its corrosive to skin, also you'll want to grab some carbon fibre , I just bought the generic sort from eBay properly not the cheapest place\nI recommend spraying your deck with a coat of matte black spray paint because as we are only doing a one layer skin of carbon fibre there is a tendency of the fabric being slightly transparent and you could see the grain underneath which will just ruin the general aesthetic\nthrough trial and error I found the easiest method is to spay a contact adhesive on both parts then lay the fabric on top to get a instant pain free bound, it took a lot of hassle when I just put the fabric directly on top of the epoxy resin, hard to get it to stick to curves, but the contact adhesive gets rid of that, then your ready to apply your first coat of resin\nonce you applied your first coat you'll want to do the next one in like an hours time whilst it was still slightly tacky this is best for layer adhesion, you should have 3 coats of resin then wait 2 days for it to dry otherwise when you wet sand the water will cause a reaction with the curing epoxy and turn it cloudy\njust sand whilst increasing the grits recommend starting on 120 and go to the finest possible grit you have, I went up to 2000 but more would be better\nnow your ready to polish I first used a cutting compound which is used in cars, sort of like a whigting thooth paste for your paint work, i buffed it with a orbital sand posilshing whell i made my self by placeing vecro on a lambs wall pad\nthen after its buffed up you want to apply a car wax on the carbon fiber t give it a bright glossy shine, this board whould be perfect for mirrors a permimant black mirror that goes 30mph", "step_imgs": [], "step_title": "Step 3: Aplicattion of Carbon Fibre"}, {"step": 4, "steps_text": "this is by far the most dangerous step of any electronic longboard build so please do a ton of research on the esk8 forum about the 18650 batteries, they are super dangerous if done poorly ill give you a brief guide as I want you do read on this subject from more experienced people than myself. soon I'm making a detailed video on batteries, I prefer videos due to being heavily dyslexic\nhttps://youtu.be/od9hAs69crk\nso first things first you'll want to buy genuine 18650 batteries, I'm going to tell you something which would have saved me a lot of time and money, only go for Samsung 30q's from nkon https://eu.nkon.nl/samsung-inr-18650-30q-3000mah.h... they grantee all the batteries are genuine and ship worldwide for a super reasonable cost, beware there are a lot of fakes, also Samsung 30q are a tried and tested battery they have a great current output (15a) which gets you the speed and a good capacity of (3000mah) which gives you the range , I once made the mistake of buying 2nd laptop batteries thinking it would save me money but no it actually wasted money because they are only like 2 amps which will not get you the speed, not all 18650 are created equal so please get Samsung 30q from nkon, then there will be no problems,\nI create a 10s3p battery pack which basically means 3 batteries welded in parallel which increases the amperage giving you a capacity of 9000 mah, like 1 set then you make 10 of them sets and welded in series giving you a the higher voltage of 42 volts which will get your motor zooming down the roads of 30mph\nfirst, you will have to prepare your batteries, you will want to make sure the voltage difference is no more than 0.05 volts, you need a voltmeter for this build. also, you will want to place some insulation paper on the top of every battery (positive side) to save any risk of shortages and the fire,\nnow the battery is prepared you are ready to connect them together you can use my battery holders here https://www.thingiverse.com/thing:3499015 which I designed to dovetail together and use mechano as connections or you can just spot weld\nonce your battery is glued or connected together in 10 sets of 3 you are ready to start connecting the nickel strip. so with the sets of 3 just put a nickel strip across the negative and positive terminal and repeat this step to all the sets are done,\nthen connect each part like in the 2nd diagram each positive to negative\nnow you're ready to wire the bms leads to follow the first diagram\nblack one goes on the first negative then the red ones go on each positive of the 10 groups,\nnext wire the other wires to your bms instructions and add an xt60 for the charge port and test each connection to make sure everything is connected with a voltmeter if each battery is 3,2 volts the whole pack should be 32volts", "step_imgs": ["https://cdn.instructables.com/FWH/1NI9/JTCRHUAQ/FWH1NI9JTCRHUAQ.LARGE.jpg", "https://cdn.instructables.com/FSB/CT8X/JTEN2Q6F/FSBCT8XJTEN2Q6F.LARGE.jpg", "https://cdn.instructables.com/FG4/TE5Y/JTMSFCG5/FG4TE5YJTMSFCG5.LARGE.jpg", "https://cdn.instructables.com/F2N/3AKP/JTMSFCH0/F2N3AKPJTMSFCH0.LARGE.jpg", "https://cdn.instructables.com/FU0/1A05/JTMSFCHG/FU01A05JTMSFCHG.LARGE.jpg"], "step_title": "Step 4: Battery Makeing"}, {"step": 5, "steps_text": "now your battery is made its relatively straight forward to put together as you can see from my diagram above, its more simple than an RC car, so lets start with making the lop key, a loop key is an anti-spark XT-90 with a piece of wire connecting both terminals together, then female part is soldered between the negative part of the battery so when you plug it in it creates a full circuit, this saves the need of the expensive switches that can support the amout of high amps necessary (dont use normal 12v switches on eBay they will not work), lets sort out the charging port used an xt60 to void confusion with the xt90 loop key because that would definitely create a short circuit which can case fire.\nnow the switches and charge port is sorted you're ready to connect the vesc, I recommend using an xt90 to connect the vesc to the power source. then you are ready to connect the receiver to the vesc this is relatively straight forward it will come with instructions on how to use your specific model, you will also have to bind it to the remote.\nthen you'll have to connect the phase wires of the motor just make sure the middle wire of the vesc is connected to the middle wire of the motor then nothing is gonna break, when you use your board if it reverses when you throttle, it means you got the 2 outside phase wires wrong way round.\nnow its all connected you're ready to download the vesc tool https://vesc-project.com/node/17 this is a free programme, which helps you configure your vesc this makes sure your not pushing too much or too little amps to your motor which can break your motor, just use the motor setup wizard and input wizard to set it up properly", "step_imgs": ["https://cdn.instructables.com/FN1/6SGO/JTMSDUGY/FN16SGOJTMSDUGY.LARGE.jpg", "https://cdn.instructables.com/FFQ/7N15/JTMSDX86/FFQ7N15JTMSDX86.LARGE.jpg", "https://cdn.instructables.com/FLW/SZY3/JTMSEKFU/FLWSZY3JTMSEKFU.LARGE.jpg"], "step_title": "Step 5: Connecting Board"}, {"step": 6, "steps_text": "once you've put your esk8 parts in the enclosure, and installed your loop key your part of the eks8 team if you have any questions please feel free to ask me and I really hope you liked this instructable and please give me feedback! and please vote for me", "step_imgs": ["https://cdn.instructables.com/FKC/N635/JTMSFCLE/FKCN635JTMSFCLE.LARGE.jpg"], "step_title": "Step 6: Your Ready to Ride!!"}], "channel": ""}, {"category": "", "description": "For quite a while I have been working with Arduino. It is easy, cheap and gets the job done. But lately I have been inclining more towards IoT projects. So I started using ESP development board and it worked perfectly. But now I want to move towards bigger projects like image processing etc. And the best board for this purpose is Raspberry Pi.\nIn this post I will be sharing basic information about Raspberry Pi and how to get started. So you can start making cool projects along with me.", "title": "Beginners Guide to Raspberry Pi", "url": "https://www.instructables.com/id/Beginners-Guide-to-Raspberry-Pi/", "section": "technology", "steps": [{"step": 1, "steps_text": "First question that arise in mind is \"What really is Raspberry pi?\" so let me start with introducing Pi to all the beginners.\nRaspberry Pi is a cheap single board computer introduced in 2012 by Raspberry Pi Foundation. This credit card sized computer is very popular among the maker community. There are may models of raspberry pi Raspberry Pi 3 model B+ being the latest. There is also a smaller version named Raspberry Pi Zero and Zero W these are incredibly small boards.\nBelow I have listed specifications of the two popular boards.\nRaspberry Pi 3 Model B+:\nARM cortex-A53 1.4GHz processor\n1GB RAM\nIntegrated WiFi 2.4GHz/5GHz\nBluetooth 4.2\n300Mbps Ethernet\n4 USB ports, 1 HDMI , 1 earphone jack and a micro USB power port.\nRaspberry Pi Zero W:\nBCM2835 1GHZ processor\n512MB RAM\nIntegrated WiFi 2.4GHz\nBluetooth 4.0\n2 USB ports, 1 mini HDMI\nYou can learn more about these boards and other, Check out Raspberry Pi Foundation's official website raspberrypi.org.", "step_imgs": ["https://cdn.instructables.com/FIT/O51B/JTEN9JZ6/FITO51BJTEN9JZ6.LARGE.jpg", "https://cdn.instructables.com/F4F/CYI8/JTEN9JZW/F4FCYI8JTEN9JZW.LARGE.jpg"], "step_title": "Step 1: What Is Raspberry Pi ?"}, {"step": 2, "steps_text": "Here I have listed all the materials you will be needing to get started.\nHardware Components:\nRaspberry Pi\nRaspberry Pi Zero W (Amazon Link)\nOR\nRaspberry Pi 3 Model B+ (Amazon Link)|\nMicro SD card (Amazon Link)\nMicro SD card Reader (Amazon Link)\nOTG cable (for Pi Zero w) (Amazon Link)\nHDMI cable (Amazon Link)\n\nOR\nHDMI to mini HDMI (Amazon Link)\nOR you can get a Raspberry Pi Starter kit (Amazon Link)\nMini Wireless Keyboard (Amazon Link)\nSoftware Requirements:\nRaspbian\n7-Zip\nWin32diskimager", "step_imgs": ["https://cdn.instructables.com/FQO/0WM5/JTIYHRG2/FQO0WM5JTIYHRG2.LARGE.jpg"], "step_title": "Step 2: Requirements:"}, {"step": 3, "steps_text": "Raspberry Pi is a computer and every computer requires an Operating System to work. There are may OS available for Raspberry Pi but I will be using Raspbian which is the official OS by Raspberrypi Foundation.\nTo get started:\nFirst download the Raspbian Stretch\nNext download and install 7-Zip\nExtract the Raspbian Zip file using 7-Zip\nNext download and install Win32diskimager\nInsert the SD card into the card reader and plug it in the computer\nNote the name of drive, in my case it is (I:) drive.\nOpen the disk imager and select the SD card drive.\nClick on the file icon and navigate to the folder where Raspbian image is extracted.\nSelect the image and click on \"write\".\nNow it will take few minutes for the completion of burning process. Make sure you do not cancel it in between.", "step_imgs": ["https://cdn.instructables.com/FRT/8VL0/JSYZ7LZ5/FRT8VL0JSYZ7LZ5.LARGE.jpg", "https://cdn.instructables.com/FPL/HP8Y/JSYZ7M9V/FPLHP8YJSYZ7M9V.LARGE.jpg", "https://cdn.instructables.com/F7D/VO2R/JSYZ7MW2/F7DVO2RJSYZ7MW2.LARGE.jpg", "https://cdn.instructables.com/F97/KEMB/JSYZ7N0V/F97KEMBJSYZ7N0V.LARGE.jpg", "https://cdn.instructables.com/FM0/6YN2/JSYZ7MYS/FM06YN2JSYZ7MYS.LARGE.jpg"], "step_title": "Step 3: Installing Operating System:"}, {"step": 4, "steps_text": "Once the Raspbian image is burned on to the card successfully. Insert the SD card into Raspberry Pi. Now follow the steps given below.\nConnect HDMI to the port on board and a monitor.\nConnect the wireless module of keyboard into the USB port of Rpi, if you have Pi Zero W use an OTG adapter.\nFinally power the board using a micro USB. Make sure you use proper power supply. I used a 5v 2A smartphone charger which works perfectly.\nThe Pi will take a while for the first boot so be patient and do not power it off or remove the SD card.\nOnce the boot is successful, you will see the home screen of Raspbian. You can use a mouse or track pad to navigate.", "step_imgs": ["https://cdn.instructables.com/FU5/7P8W/JTIYGS1M/FU57P8WJTIYGS1M.LARGE.jpg"], "step_title": "Step 4: First Boot:"}, {"step": 5, "steps_text": "As we will be using the Pi for robotics we will need to enable some features of Pi. These features will allow us to operate I/O pins and interface devices like LED, Servo, Motors, etc to Raspberry Pi.\nClick on the Raspberry icon on top left corner.\nFrom the drop-down menu select \"Preferences\" and click on \"Raspberry Pi Configuration\".\nFrom the Configuration window select \"Interfaces\" tab.\nNext Enable GPIO, I2C, SSH, Camera and Serial Port. These are the features we will be needing mostly.", "step_imgs": ["https://cdn.instructables.com/FVL/A78J/JTIYP4M2/FVLA78JJTIYP4M2.LARGE.jpg", "https://cdn.instructables.com/FCS/SW42/JTIYP4M1/FCSSW42JTIYP4M1.LARGE.jpg"], "step_title": "Step 5: Enabling Interfaces:"}, {"step": 6, "steps_text": "That is all for this tutorial. Now you can boot an OS into any Raspberry Pi. In next tutorial I will be sharing how to use Raspberry Pi to control your projects.\nIf you are interested in robotics and still in the learning process , Check out my first eBook \"Mini WiFi Robot\" where you will learn everything you need to get started with robotics.\nIf you want to get a certified robotics course check out this e-course\nI hope you liked the post and learned from it.\nIf you faced any problem or difficulty, please leave a comment below.\nThank you", "step_imgs": [], "step_title": "Step 6: Final Note:"}], "channel": ""}, {"category": "", "description": "Watch the video too and subscribe to 3DSage for more fun videos! Thank you.\nLink to the Makers Muse project I remixed: https://www.youtube.com/watch?v=Le-PVXUCl0M\nI saw a video about the Geneva Drive by Makers Muse on youtube and on Instructables but it was only used as a demonstration. The Geneva Drive holds it's position before quickly turning to the next position. I was inspired by this and I did my best to redesign and remix this 6 position Geneva Drive into a 3D printed 12 frame automatic projector!", "title": "3D Printed Projector | Geneva Drive", "url": "https://www.instructables.com/id/3D-Printed-Projector-Geneva-Drive/", "section": "technology", "steps": [{"step": 1, "steps_text": "This is what the Geneva Drive looks like and what I remixed into. I had to figure out how to double the number of positions and attach a spinning wheel on top for the slides. I am not an engineer so I am happy that this works and how the final design turned out!", "step_imgs": ["https://cdn.instructables.com/FYE/UQGL/JTIYKGR3/FYEUQGLJTIYKGR3.LARGE.jpg", "https://cdn.instructables.com/FML/M6YK/JTIYKDAP/FMLM6YKJTIYKDAP.LARGE.jpg", "https://cdn.instructables.com/FRM/WSPY/JTIYKDBO/FRMWSPYJTIYKDBO.LARGE.jpg"], "step_title": "Step 1: The Geneva Drive... Remixed"}, {"step": 2, "steps_text": "LS-3006 Servo Motor 360 degrees\n3CH Digital Multi Servo Tester\n4x AA Battery Holder with 6 Inch Wired 2P Connector. (Jameco Part: 2278463)\nNebo 6272-A Micro Redline OC LED Flashlight - 360 LUX\nPendant Magnifier 5x 1 3/4\"\n3D print the files attached. The template image is also in the zip file.\nYou could make some variations. Any bright flashlight roughly the same size should work. The servo can be controlled with a mircrocontroller or components on a breadboard, but these materials listed are what I used. and if you don't have a 3D printer, search \"local 3d printing service.\" Print at 0.2mm and no supports", "step_imgs": ["https://cdn.instructables.com/FD5/8YQG/JTIYKDQM/FD58YQGJTIYKDQM.LARGE.jpg", "https://cdn.instructables.com/F8O/J64R/JTIYKQVB/F8OJ64RJTIYKQVB.LARGE.jpg"], "step_title": "Step 2: Shopping List"}, {"step": 3, "steps_text": "The servo and batteries will connect to the servo controller. Pay attention to the wire colors, black-negative and red-positive. 3D Print the redesigned Geneva Drive and assemble the parts together as shown.\nGive this a test run by plugging in the batteries and rotate the nob on the controller. The controller will make it spin forwards or backwards and the speed can be adjusted.", "step_imgs": ["https://cdn.instructables.com/FTC/CQ6H/JTIYKDAU/FTCCQ6HJTIYKDAU.LARGE.jpg", "https://cdn.instructables.com/FWZ/NFXE/JTIYKDAV/FWZNFXEJTIYKDAV.LARGE.jpg", "https://cdn.instructables.com/FVH/S44F/JTIYKDAY/FVHS44FJTIYKDAY.LARGE.jpg"], "step_title": "Step 3: I Like to Move It Move It"}, {"step": 4, "steps_text": "The wheel comes in two parts. (It was easier to print it this way)\nOne side will friction fit into the other. Possibly print these parts slower since thin vertical part need more time and care when printing.\nI created this PNG image and added pictures with a high contrast so the light and dark areas will really show up when projected. Then I took the image to a near by print center and asked to have it printed on transparency. These slides will also help wedge and hold the wheel parts together.", "step_imgs": ["https://cdn.instructables.com/FYY/VE8M/JTIYKD9E/FYYVE8MJTIYKD9E.LARGE.jpg", "https://cdn.instructables.com/FKJ/AAO8/JTIYKDBN/FKJAAO8JTIYKDBN.LARGE.jpg", "https://cdn.instructables.com/F88/BMDU/JTIYKD9J/F88BMDUJTIYKD9J.LARGE.jpg"], "step_title": "Step 4: The Wheels on the Drive Go Round and Round"}, {"step": 5, "steps_text": "When you turn on the flashlight, the image will be very blurry when projected on the wall. We need to focus the light. You might notice that the image is upside down.\nThe slide can be flipped vertically so the projected image is correct.\nThis 5X magnifying lens will fit in the 3D printed holder and can be positioned around until the projected image is in focus. I later tried two 5X magnifying lenses for a larger image.", "step_imgs": ["https://cdn.instructables.com/FB8/3V74/JTIYKD9I/FB83V74JTIYKD9I.LARGE.jpg", "https://cdn.instructables.com/FTV/F5MN/JTIYKD9Q/FTVF5MNJTIYKD9Q.LARGE.jpg", "https://cdn.instructables.com/F8V/LU7R/JTIYKD9N/F8VLU7RJTIYKD9N.LARGE.jpg"], "step_title": "Step 5: Through the Looking Glass"}, {"step": 6, "steps_text": "Everything is set up, now time to make it work. Turn it on and the light will project the image on the wall and is focused by the magnifying lens. It looks better in a very dark room.\nI see this as a fun and educational device and I hope you enjoyed it! Thank you so much for watching!", "step_imgs": ["https://cdn.instructables.com/FO2/LH89/JTIYKD9R/FO2LH89JTIYKD9R.LARGE.jpg", "https://cdn.instructables.com/FHL/00W7/JTIYKD9U/FHL00W7JTIYKD9U.LARGE.jpg", "https://cdn.instructables.com/F2Z/N6PY/JTIYKILX/F2ZN6PYJTIYKILX.LARGE.jpg"], "step_title": "Step 6: Grab the Popcorn! It's Showtime"}], "channel": ""}, {"category": "", "description": "This is a short project that I created as part of a larger RC build of a Lightweight Land Rover. I decided that I fancied having a working speedometer in the dashboard, but I knew that a servo wouldn't cut it. There was only one reasonable option: deploy the arduino!\nA bit of background to begin with... I am not a coding or electronics person. I still think of electricity in terms of water flow and am somewhat mystified by resistors. That said, if even I was able to make this work, then you should be able to as well!\nPARTS LIST:\nMicrocontroller: I used an ATTiny85 chip, which cost about \u00a31 each.\nMicrocontroller Programmer: In order to get the code onto the chip, you need a way to program it. With regular arduino this is just a USB cable, but for the ATTiny chip, you need something extra. You can use another arduino to do this or, like me, you can use a Tiny AVR programmer from Sparkfun.\nhttps://learn.sparkfun.com/tutorials/tiny-avr-prog...\nI would recommend this, as I've tried programming them with various methods and this one is the easiest. The board is a bit expensive, but a good investment if you do a lot of ATTiny projects.\n8 Pin Chip Socket: If you put the chip in a socket rather than soldering it directly, you can afford yourself some mistakes in assembly. Spoken from experience - nobody wants to desolder chips to reprogram them.\nCapacitor: A decoupling capacitor of 100nF (code 104) is used. I don't understand quite why, but I read that decoupling capacitors are important on the internet, so it must be true...\nResistor: A 10k\u03a9 resistor is used to pull down the line into the arduino. Again, yet another mystery of electronics.\nPerfboard/Stripboard: Some baseboard upon which to assemble your circuit.\nWinding Wire: Regular sheathed wire is too thick to solder onto the motor. Using fine enamelled wire will reduce the stress on the motor terminals and make your life a lot easier.\nServo Wire: A three wire ribbon terminating in a 3-pin JR female plug. I got mine from a burnt out servo that I was 'modifying'.\nStepper Motor: I used a 6mm bipolar Nidec stepper motor. Any small stepper should work, although keep them small, as the stepper is being driven directly from the Arduino.\nHeader Pins: Not essential, but if you wire your stepper to 4 header pins and put a socket on your circuit, you can easily unplug your dashboard for ease of installation.\nComputer: To program your board, you'll need a computer. Possibly with the Arduino IDE. And maybe a USB cable. If it has a power cable as well, then even better.", "title": "Working RC Car Speedometer", "url": "https://www.instructables.com/id/Working-RC-Car-Speedometer/", "section": "technology", "steps": [{"step": 1, "steps_text": "The basic outline of the system I created was a method whereby the Pulse Width Modulation (PWM) signal coming from the RC receiver is converted into a stepper motor sweep via an ATTiny 85 microcontroller (uC).\nHere is a resource on PWM signals and RC, but to replicate this you don't strictly need to understand it.\nhttps://en.wikipedia.org/wiki/Servo_control\nThe ATTiny is my favorite flavour of Arduino because it's small with still enough I/O pins to do basic things, so fits perfectly into small models and RC projects. The main downside of the ATTiny is that it requires a bit more setup in order to program one, but once you've got it set up they are so cheap you can buy stacks of them for all sorts of projects.\nThe size of the speedometer dial is too small to have a geared motor with feedback, so in order to have a proportional response a stepper motor had to be used. A stepper motor is a motor that is moved in discrete amounts (or steps...!), which makes it ideal for a no-feedback system like this. The only caveat is that the 'steps' will cause the resultant movement to be jerky as opposed to smooth. If you get a stepper with enough steps per rotation, that isn't noticeable, but with the stepper that I used in this project having only 20 or so steps in a full rotation, the angle jump is quite bad.\nThe system, on power-up, will run the stepper backwards for two revolutions, so as to zero the needle. The speedometer needs a resting pin where you want the zero mark to be, or else it will just spin forever. Then it maps the forward and reverse PWM signals to a set number of steps of the motor. Easy, right...?", "step_imgs": [], "step_title": "Step 1: The System"}, {"step": 2, "steps_text": "Disclaimer: I'm not a programmer. For this project I am the digital equivalent of Dr. Frankenstein, assembling something working out of various found bits of code.\nSo, my heartiest thanks go to Duane B, who made the code for interpreting RC signals:\nhttp://rcarduino.blogspot.com/\nAnd to Ardunaut, who made the code for running a stepper as an analogue gauge:\nhttps://arduining.com/2012/04/22/arduino-driving-a...\nAnd to both, my most sincere apologies for what I did to your code.\nNow that's out of the way, here is what to upload to the ATTiny:\n#define THROTTLE_SIGNAL_IN 0 // INTERRUPT 0 = DIGITAL PIN 2 - use the interrupt number in attachInterrupt\n#define THROTTLE_SIGNAL_IN_PIN 2 // INTERRUPT 0 = DIGITAL PIN 2 - use the PIN number in digitalRead\n#define NEUTRAL_THROTTLE 1500 // this is the duration in microseconds of neutral throttle on an electric RC Car\n#define UPPER_THROTTLE 2000   // this is the duration in microseconds of maximum throttle on an electric RC Car\n#define LOWER_THROTTLE 1000   // this is the duration in microseconds of nminimum throttle on an electric RC Car\n#define DEADZONE 50           // this is the throttle deadzone. The total deadzone is double this.\n#include \n#define  STEPS  21      // steps per revolution (limited to 315\u00b0) Change this to adjust the maximum travel of the speedometer.\n#define  COIL1  3       // Coil Pins. The ATTiny uses pins 0,1,3,4 for the stepper. Pin 2 is the only pin that can handle interrupts so it needs to be the input. \n#define  COIL2  4       // Try changing these around if the stepper motor doesn't run properly. \n#define  COIL3  0\n#define  COIL4  1\n// create an instance of the stepper class:\nStepper stepper(STEPS, COIL1, COIL2, COIL3, COIL4);\nint pos = 0;               //Position in steps(0-630)= (0\u00b0-315\u00b0)\nint SPEED = 0;\nfloat ThrottleInAvg = 0;\nint MeasurementsToAverage = 60;\nfloat Resetcounter = 10; // time to reset while at idle throttle\nint Resetval = 0;\nvolatile int ThrottleIn = LOWER_THROTTLE;\nvolatile unsigned long StartPeriod = 0; // set in the interrupt\n// we could use nThrottleIn = 0 in loop instead of a separate variable, but using bNewThrottleSignal to indicate we have a new signal\n// is clearer for this first example\nvoid setup()\n{\n  // tell the Arduino we want the function calcInput to be called whenever INT0 (digital pin 2) changes from HIGH to LOW or LOW to HIGH\n  // catching these changes will allow us to calculate how long the input pulse is\n  attachInterrupt(THROTTLE_SIGNAL_IN, calcInput, CHANGE);\n  stepper.setSpeed(50);    // set the motor speed to 30 RPM (360 PPS aprox.).\n  stepper.step(STEPS * 2);     //Reset Position(X steps counter-clockwise).\n}\nvoid loop()\n{\n  Resetval = millis;\n  for (int i = 0; i < MeasurementsToAverage; ++i)\n  {\n    ThrottleInAvg += ThrottleIn;\n    delay(1);\n  }\n  ThrottleInAvg /= MeasurementsToAverage;\n  // Forward mapping\n  if (ThrottleInAvg > (NEUTRAL_THROTTLE + DEADZONE) && ThrottleInAvg < UPPER_THROTTLE) {\n    SPEED = map(ThrottleInAvg, (NEUTRAL_THROTTLE + DEADZONE), UPPER_THROTTLE, 0, 255);\n    Resetval = 0;\n  }\n  // Reverse mapping\n  else if (ThrottleInAvg < (NEUTRAL_THROTTLE - DEADZONE) && ThrottleInAvg > LOWER_THROTTLE) {\n    SPEED =  map(ThrottleInAvg, LOWER_THROTTLE, (NEUTRAL_THROTTLE - DEADZONE), 255, 0);\n    Resetval = 0;\n  }\n  // Out of range upper\n  else if (ThrottleInAvg > UPPER_THROTTLE) {\n    SPEED = 255;\n    Resetval = 0;\n  }\n  // Out of range lower\n  else if (ThrottleInAvg < LOWER_THROTTLE) {\n    SPEED = 255;\n    Resetval = 0;\n  }\n  // Deadzone\n  else {\n    SPEED = 0;\n    int t2 = millis;\n    if ((t2 - Resetval) > Resetcounter) {\n      stepper.step(4);        // I'm trying to tell the stepper to re-reset itself if the RC signal is in the deadzone for a long time. Not sure if this part of the code actually works. \n    }\n  }\n  int val = SPEED ;   //get the potentiometer value (range 0-1023)\n  val = map(val, 0, 255, 0, STEPS * 0.75); // map pot range in the stepper range.\n  if (abs(val - pos) > 2) {      //if diference is greater than 2 steps.\n    if ((val - pos) > 0) {\n      stepper.step(-1);      // move one step to the left.\n      pos++;\n    }\n    if ((val - pos) < 0) {\n      stepper.step(1);       // move one step to the right.\n      pos--;\n    }\n  }\n  //  delay(10);\n}\nvoid calcInput()\n{\n  // if the pin is high, its the start of an interrupt\n  if (digitalRead(THROTTLE_SIGNAL_IN_PIN) == HIGH)\n  {\n    // get the time using micros - when our code gets really busy this will become inaccurate, but for the current application its\n    // easy to understand and works very well\n    StartPeriod = micros();\n  }\n  else\n  {\n    // if the pin is low, its the falling edge of the pulse so now we can calculate the pulse duration by subtracting the\n    // start time ulStartPeriod from the current time returned by micros()\n    if (StartPeriod)\n    {\n      ThrottleIn = (int)(micros() - StartPeriod);\n      StartPeriod = 0;\n    }\n  }\n}\nRefer to this for more information on programming an ATTiny85:\nhttps://learn.sparkfun.com/tutorials/tiny-avr-prog...", "step_imgs": [], "step_title": "Step 2: The Software"}, {"step": 3, "steps_text": "Refer to the circuit diagram for building the circuit. How you assemble it is up to you, but I'd suggest using a bit of stripboard/perfboard used for circuit board prototyping, and mounting the chip in a socket.\nC1 = 100nF\nR1 = 10k\u03a9\nThe capacitor should be mounted as close to the chip as possible to be most effective.\nWhen soldering the enamelled wires to the motor, be extremely careful, as the terminals on the motors like to snap off and sever the coil wire to the motor. To remedy this, a good solution is to solder the wires on, and then put a big blob of 2-part epoxy over the joint, , let it cure, then twist the wires together. This reduces stress on individual terminal joints and should stop them snapping off. If you don't do this, they will snap off at the least convenient time, guaranteed.\nIf you make the header pin connector, and set up the pins thus: [Ca1, Cb1, Ca2, Cb2] with Ca1 standing for Coil A, wire 1 etc. This allows you to change the rotational direction of the gauge by swapping the plug around.\nThe gauge will need an endstop to calibrate the zero position against. I'd recommend making the needle out of metal if possible. This stops it flexing when it hits the endstop. A way to get the needle in a good position is to temporarily glue the needle to the axle, power up the module, let it come to rest, and then remove and re-glue the needle on the axle, with the needle resting against the endstop. This aligns the needle with the magnetic cogging of the motor, and ensures that your needle should always come to rest against the endstop.", "step_imgs": ["https://cdn.instructables.com/FMU/P3T1/JTIYKJTA/FMUP3T1JTIYKJTA.LARGE.jpg", "https://cdn.instructables.com/F2N/MF18/JTIYI5YX/F2NMF18JTIYI5YX.LARGE.jpg", "https://cdn.instructables.com/FAY/LI6F/JTIYI5ZP/FAYLI6FJTIYI5ZP.LARGE.jpg"], "step_title": "Step 3: The Hardware"}, {"step": 4, "steps_text": "Hopefully you've enjoyed this brief instructable, and found it useful. If you build one of these, do let me know!\nGood luck!", "step_imgs": [], "step_title": "Step 4: Epilogue"}], "channel": ""}, {"category": "", "description": "A pyranometer measures the sun's irradiance (power/area, basically \"brightness\") on a surface. Despite the similar names, it is completely different from a pyrometer, so stop right here if that is what you are looking for.\nThis Instructable describes how to build and test a modified version of the pyranometer kit offered by Dr. David Brooks of the Institute for Earth Science Research and Education (InstESRE):\nhttp://www.instesre.org/construction/pyranometer/pyranometer.htm\nThis version of the InstESRE pyranometer interfaces with an Arduino using an ADS1115 analog-to-digital converter (ADC) and also supports temperature correction using a TMP36 temperature sensor co-located with the photodiode.\nThe IV Swinger 2 IV curve tracer supports this pyranometer design as an optional sensor, and that was the motivation for the modifications. However, since other users of the InstESRE pyranometer may find it useful, this Instructable describes the design independently from the IV Swinger 2 project.\nThe following GitHub repository contains the documentation and software:\nhttps://github.com/csatt/ADS1115_InstESRE_Pyranometer\nPlease download and read the document before proceeding. The document contains a text-only version of the steps in this Instructable and can be used as a checklist during construction. It also describes how to order the kit from Dr. Brooks and what additional parts to buy. Those are not repeated in this Instructable.", "title": "ADS1115 InstESRE Pyranometer", "url": "https://www.instructables.com/id/ADS1115-InstESRE-Pyranometer/", "section": "technology", "steps": [{"step": 1, "steps_text": "I used the tools shown in the photo.", "step_imgs": ["https://cdn.instructables.com/FAL/T05R/JTIYIUIZ/FALT05RJTIYIUIZ.LARGE.jpg"], "step_title": "Step 1: Gather Tools"}, {"step": 2, "steps_text": "Insert the grommet into the hole at the end of the case. Use a small blunt object such as a small screwdriver. Be careful not to cut the grommet. (The grommet is the soft rubber O-shaped item.)\n_______\nSpread a small amount of superglue around the inside of the larger of the two holes in the top of the case. Insert the bubble level from the inside of the case. Make sure the bubble level's shoulder seats firmly against the top of the case. Set the case aside, upside down, to let the glue dry for several minutes.\n\n[NOTE: the bubble level is not needed for the IV Swinger 2 application, and it is not shown in the photos.]\n_______", "step_imgs": ["https://cdn.instructables.com/F3Q/WVTK/JTENEXVT/F3QWVTKJTENEXVT.LARGE.jpg"], "step_title": "Step 2: Prepare Enclosure"}, {"step": 3, "steps_text": "Make sure the PDB-C139 photodiode leads are straight and parallel to each other, making adjustments if necessary.\n_______\nInsert PDB-C139 photodiode into the LED holder. It should snap into place. Do NOT use any superglue.\n_______\nWith the PDB-C139 photodiode leads pointing up and with the longer lead to the left and the shorter to the right, VERY SLIGHTLY bend both leads away from you.\n_______\nInsert the photodiode assembly into the housing tube from the top. Again, do NOT use any superglue. Make sure the top of the diode is clean and dust free.\n_______\nPick up the Teflon diffuser disk with a paper towel or tissue and rub both surfaces gently to remove any dust or debris that might be there. Snap the disk into its recess at the top of the housing tube. Do NOT use any superglue. If it is a very loose fit, you will have to use some superglue LATER, but NOT YET.\n_______\nFlip the assembly upside down (leads pointing up, longer one to the left). Make sure the diffuser disk didn't fall out. Use 4 pieces of tape to hold it down on a hard, smooth work surface. The tape should be below the machined rim of the tube. Wrap one more piece of tape around the tube.\n_______", "step_imgs": ["https://cdn.instructables.com/F9A/2WWX/JTENEZ3S/F9A2WWXJTENEZ3S.LARGE.jpg", "https://cdn.instructables.com/FZ6/0IC6/JTENF1KW/FZ60IC6JTENF1KW.LARGE.jpg", "https://cdn.instructables.com/F7Y/9183/JTENF3RW/F7Y9183JTENF3RW.LARGE.jpg", "https://cdn.instructables.com/FUR/VBMY/JTENF4DT/FURVBMYJTENF4DT.LARGE.jpg"], "step_title": "Step 3: Prepare Photodiode and Diffuser"}, {"step": 4, "steps_text": "Insert the TMP36 into the hole on the near side of the photodiode leads, with the flat side of the TMP36 toward the leads, and the rounded side towards the wall of the tube. Press it down by the ends of its leads. It should fit nicely with minimal deflection of the photodiode leads.\n_______\nRemove the TMP36, apply superglue to its top, flat side, and rounded side and promptly insert it back into the hole in the same position. Use only enough glue so it should stick to the LED holder, diode leads, and inside of the tube, but don't use so much that it could possibly flow around the photodiode. Make sure to press it into the hole quickly, so the glue doesn't grab it before it is all the way in.\n_______\nAdjust the two photodiode leads and the three TMP36 leads so they are all pointing as straight up as possible\n_______", "step_imgs": ["https://cdn.instructables.com/F83/EHZQ/JTENF556/F83EHZQJTENF556.LARGE.jpg", "https://cdn.instructables.com/FCP/F2XC/JTENF71M/FCPF2XCJTENF71M.LARGE.jpg", "https://cdn.instructables.com/FGH/LWST/JTIYHYPI/FGHLWSTJTIYHYPI.LARGE.jpg"], "step_title": "Step 4: Add TMP36 (optional)"}, {"step": 5, "steps_text": "Apply some superglue to the machined rim of the tube and then promptly lower the case over that, so the tube is glued into the hole in the case. The long dimension of the case should be in line with the rows of leads coming through the hole and the end hole with the grommet should be to your right. Make sure the tube is fully seated in the hole.\n_______\nUse some tape to hold the case in position so that it is level and the tube is perpendicular to it.\n_______", "step_imgs": ["https://cdn.instructables.com/FGT/XHBK/JTIYEE6Q/FGTXHBKJTIYEE6Q.LARGE.jpg", "https://cdn.instructables.com/FSZ/OM1F/JTIYEE53/FSZOM1FJTIYEE53.LARGE.jpg"], "step_title": "Step 5: Glue Sensor Tube to Case"}, {"step": 6, "steps_text": "Apply a blob of superglue to the back of the ADS1115 board right in the middle. Quickly, but carefully, lower the ADS1115 board down with the longer photodiode lead coming through hole A0 and the shorter one coming through hole A1. The three TMP36 leads will be along the edge of the ADS1115 board and may deflect slightly. Adjust the position of the ADS1115 board so the A0 and A1 holes are centered over the tube hole and hold the board in place for about a minute so it sticks to the case.\n_______\nLeave this untouched for a couple hours so the glue will be sure to have dried. Do not proceed with the following steps until then.\n_______", "step_imgs": ["https://cdn.instructables.com/F33/IMVL/JTIYEEPR/F33IMVLJTIYEEPR.LARGE.jpg", "https://cdn.instructables.com/FZQ/SJU3/JTIYEER6/FZQSJU3JTIYEER6.LARGE.jpg", "https://cdn.instructables.com/FJG/YYI9/JTIYHYZ7/FJGYYI9JTIYHYZ7.LARGE.jpg"], "step_title": "Step 6: Add ADS1115 Board"}, {"step": 7, "steps_text": "Cut both leads of the resistor to 1 cm. Bend 2mm on the end of each lead at a right angle and insert those 2mm ends into holes A0 and A1 of the ADS1115 board, alongside the photodiode leads. The reason for the 2mm length is so there's no possibility that the ends can touch the TMP36 leads or the other photodiode lead underneath the board.\n_______\nSolder the resistor and photodiode leads to holes A0 and A1.\n_______\nTrim the photodiode leads.\n_______", "step_imgs": ["https://cdn.instructables.com/F55/N90W/JTIYEFWF/F55N90WJTIYEFWF.LARGE.jpg", "https://cdn.instructables.com/F9W/6FSX/JTIYEFWS/F9W6FSXJTIYEFWS.LARGE.jpg", "https://cdn.instructables.com/F40/Y3K4/JTIYEFUC/F40Y3K4JTIYEFUC.LARGE.jpg"], "step_title": "Step 7: Add Load Resistor"}, {"step": 8, "steps_text": "Gently bend the two outer TMP36 leads away from the edge of the ADS1115 board.\n_______\nWith long-nosed pliers, carefully bend the middle TMP36 lead toward the A2 hole and solder it to the hole. You may need a small piece of stripped hookup wire in the hole to solder to if the lead isn't quite long enough to actually go into the hole. Make sure this lead is not making contact with the A1 solder joint or photodiode lead stub.\n_______", "step_imgs": ["https://cdn.instructables.com/FEA/X7AJ/JTIYEGN3/FEAX7AJJTIYEGN3.LARGE.jpg", "https://cdn.instructables.com/FU9/8KGP/JTIYEGJY/FU98KGPJTIYEGJY.LARGE.jpg"], "step_title": "Step 8: Solder TMP36 Middle Lead to A2 (optional)"}, {"step": 9, "steps_text": "Untape the whole assembly from the work surface\n_______\nShake it to make sure the Teflon diffuser disk doesn't fall out. If it does, set the disk aside for now.\n_______\nCut the female end off of the cable. Push the cut end through the grommet into the case and pull it through. Don't worry about pulling it too far, you will be able to pull it back out later. Use a drop of dish soap if it is difficult to push through.\n_______\nCut away the outer cable sheathing on the cut end to expose the four wires inside, being careful not to damage the insulation on the inner wires. Cut away at least 2 cm of the sheathing.\n_______\nStrip 8 mm of the insulation from the inner four wires and twist the ends of each.\n_______\n\u201cTin\u201d the twisted ends by heating with the soldering iron and applying some solder to the strands.\n_______\nUse a digital multimeter (DMM) to determine the connectivity between the inner wires and the four parts of the 3.5mm plug on the other end of the cable. Write down the colors:\n\nColor:\n\nTip: _________________ [+5V]\n\nRing 1: _________________ [SCL]\n\nRing 2: _________________ [SDA]\n\nSleeve: _________________ [GND]\n\nNOTE: these colors will almost certainly NOT match the colors in the connections diagram, so this is very important.\n\n_______\nPull the cable back out through the rubber grommet until the insulation of the inner wires just reaches the VDD hole of ADS1115 board.\n_______", "step_imgs": ["https://cdn.instructables.com/FQA/JN5H/JTIYHZ55/FQAJN5HJTIYHZ55.LARGE.jpg", "https://cdn.instructables.com/F2C/IAVP/JTIYI074/F2CIAVPJTIYI074.LARGE.jpg", "https://cdn.instructables.com/F96/Q0JE/JTIYHZB0/F96Q0JEJTIYHZB0.LARGE.jpg"], "step_title": "Step 9: Prepare Cable"}, {"step": 10, "steps_text": "Cut the following lengths of hookup wire (only needed forTMP36)\nBlack, 2.5cm\nRed, 2.5cm\n\nStrip 6mm from each end of each.\n_______\nSolder the cable wire that is connected to the plug Tip (+5V) to the VDD hole, along with one end of the 2.5cm red wire.\n_______\nSolder the cable wire that is connected to the plug Sleeve (GND) to the GND hole, along with one end of the 2.5cm black wire.\n_______\nSolder the cable wire that is connected to the plug Ring 1 (SCL) to the SCL hole.\n_______\nSolder the cable wire that is connected to the plug Ring 2 (SDA) to the SDA hole.\n_______", "step_imgs": ["https://cdn.instructables.com/FHF/2TZ5/JTIYI0TR/FHF2TZ5JTIYI0TR.LARGE.jpg"], "step_title": "Step 10: Solder Cable Wires and Hookup Wire to ADS1115"}, {"step": 11, "steps_text": "Solder the other end of the 2.5cm black wire (from the GND hole) to the TMP36 lead on the right. Make sure it doesn't contact the middle lead.\n_______\nSolder the other end of the 2.5cm red wire (from the VDD hole) to the TMP36 lead on the left. Make sure it doesn't contact the middle lead.\n_______", "step_imgs": ["https://cdn.instructables.com/FPW/UQVR/JTIYI11P/FPWUQVRJTIYI11P.LARGE.jpg"], "step_title": "Step 11: Solder TMP36 Power/ground Leads (optional)"}, {"step": 12, "steps_text": "Cut four hookup wires. Make them long enough for whatever enclosure you'll be putting the Arduino in (9cm for IV Swinger 2):\nBlack: __________\nRed: __________\nBlue: __________\nGreen: __________\n\nStrip 1cm from the end of each.\n_______\nInsert the cable plug into the 3.5mm jack.\n_______\nUse the DMM to determine which solder connection on the back of the 3.5mm jack is connected to the VDD hole on the ADS1115 board.\n\nTwist the RED wire to that solder connection on the jack.\n_______\nUse the DMM to determine which solder connection on the back of the 3.5mm jack is connected to the GND hole on the ADS1115 board.\n\nTwist the BLACK wire to that solder connection on the jack.\n_______\nUse the DMM to determine which solder connection on the back of the 3.5mm jack is connected to the SCL hole on the ADS1115 board.\n\nTwist the BLUE wire to that solder connection on the jack.\n_______\nUse the DMM to determine which solder connection on the back of the 3.5mm jack is connected to the SDA hole on the ADS1115 board.\n\nTwist the GREEN wire to that solder connection on the jack.\n_______\nUse DMM to confirm the connections. Test continuity from the end of the hookup wire to the ADS1115 hole. At the same time, test that there is NO CONTINUITY to the other three.\nRed to VDD: __________\nBlack to GND: __________\nBlue to SCL: __________\nGreen to SDA: __________\nSolder all four hookup wires to the 3.5mm jack\n_______", "step_imgs": ["https://cdn.instructables.com/F95/I701/JTIYI1MN/F95I701JTIYI1MN.LARGE.jpg"], "step_title": "Step 12: Cut and Solder Wires to Jack"}, {"step": 13, "steps_text": "Put the cable tie around the cable and use pliers to pull it tight right next to the grommet on the inside of the case. Trim.\n_______\nScrew the cover to the case.\n_______\nUse the small piece of fine abrasive paper included with the kit and gently abrade the surface of the Teflon with a circular motion, just enough to remove the \"shine\" from the disk.\n_______\nIf the Teflon diffuser disk did not snap tightly into its recess, use a TINY amount of superglue around the recess to hold it in. Make sure not to get any glue on the photodetector! A toothpick can be useful to apply the superglue, but move quickly. Use a small clamp to hold it in while the glue dries.\n_______\nConnect to Arduino:\nConnect the four wires from the back of the 3.5mm jack to the Arduino as shown in the photos.\n_______", "step_imgs": ["https://cdn.instructables.com/F79/7UVH/JTIYIRLO/F797UVHJTIYIRLO.LARGE.jpg", "https://cdn.instructables.com/FKC/5LFS/JTIYI1MU/FKC5LFSJTIYI1MU.LARGE.jpg", "https://cdn.instructables.com/FCZ/XSAW/JTIYIQCR/FCZXSAWJTIYIQCR.LARGE.jpg", "https://cdn.instructables.com/FHO/2EV4/JTIYIQC5/FHO2EV4JTIYIQC5.LARGE.jpg"], "step_title": "Step 13: Final Assembly"}, {"step": 14, "steps_text": "The document in the GitHub repository describes how to load and run the tests. It also describes what is required to calibrate the pyranometer.", "step_imgs": ["https://cdn.instructables.com/FWP/MFX6/JTIYIX32/FWPMFX6JTIYIX32.LARGE.jpg", "https://cdn.instructables.com/FN1/7T4F/JTIYIX10/FN17T4FJTIYIX10.LARGE.jpg", "https://cdn.instructables.com/FSA/WSZN/JTIYIX1I/FSAWSZNJTIYIX1I.LARGE.jpg"], "step_title": "Step 14: Running Tests and Calibrating"}], "channel": ""}, {"category": "", "description": "Power supply units are essential tool for every person involved in electronics. It happens for me to own a Korad, that is a linear (heavy) power supply which is at good price and have received good reviews.\nWhat is a power supply and what is the problem this instructable solves.\nThe main task of a power supply is to supply a load with a configured constant voltage or constant current. However if the cables we are using are long or of bad quality, and the current of our circuit is considerable, then there will be a significant (depending on the application) voltage drop across the wires. That will result in lower voltage than specified across the load. A workaround, is to use short wires with very little resistance (good quality), but that is not always achievable.\nMany power supplies, more expensive than korad, to eliminate this issue are capable of remote sensing.\nHow remote sensing works\nI couldn't describe remote sensing better that tinbin here :\nhttps://community.keysight.com/community/keysight-...\nI highly recommend this article, so for those of you who click this link or know about the issue you can skip the following two paragraphs.\nBy default power supplies sense the voltage across the load probing the output of psu. For example if we have set the output voltage to be 5V and for whatever reason psu sense locally 4.8 volts at its output, then will increase voltage till it senses again 5V. However if there is voltage drop of 0.2 volts across wires, so in effect load \"sees\" only 4.8 volts, psu will never increase voltage at its output since it still senses 5V locally before the running wires.\nFor that reason higher end models are capable of remote sensing. That is they have an extra output port where we can plug a pair of wires for remote sensing. The other end of the sensing wires connect to the load. So if for whatever reason (including losses across wires) the voltage across the load is less than specified, the psu will sense it (at the load this time) and increase the voltage at its output until the load voltage be again the specified. For example if we see 5V volt output and voltage drop across wires is 0.2V then power supply will remotely sense 4.8 volts at load so will increase the output voltage until voltage at load be again 5V. I repeat myself I know!\nThe main idea for this instructable.\nKorad has a pair of sense wires internally that are connected locally at its output ports. The main idea is to create a new port where we can connect our sense wires, and also with the aid of just a switch to select either local sense (at the output) or remote sense (at the load)", "title": "Remote Sensing for Korad Power Supply", "url": "https://www.instructables.com/id/Remote-Sensing-for-Korad-Power-Supply/", "section": "technology", "steps": [{"step": 1, "steps_text": "Consumables that you'll need\nWires 24awg: (Choose whatever colour you like, but I think red and black are consistent with other wires of korad)\n50 cm red wire,\n50 cm black wire\n5 cm white wire\n5 cm blue wire\n20 cm yellow wire for ground (I used again a blue one)\nSome heat shrinkables\n1 usb type A female connector, preferably vertically oriented (I used a horizontally oriented one)\n1 double pole double through (dpdt) switch with on-on\nOptionally heat shrinkables\n1 tiny FR4 board (one sided is ok, I used two sided)\nsolder, flux\nhot glue stick\n2 crocodile terminals (or whatever terminals you prefer)\n1 usb2.0 cable\nTools you will need\nSoldering iron, or soldering station\nWire stripper/cutter\nOptionally a rotary or drill tool (Maybe you can melt enclosure with soldering iron, but I don't recommend it)\nExacto knife\nHot glue gun\nMaybe you'll need a tool for cutting large FR4 board ( I use a hand metal cutter, like a big scissor)\nTotal Cost:\nCost is ZERO, I don't bother to take into account usb connector and wires or the tiny board. The most important cost here is labor time.", "step_imgs": [], "step_title": "Step 1: What Will You Need"}, {"step": 2, "steps_text": "I will not be too verbose in this step (screws are at obvious positions).\nUnplug all the wire to board connectors of the front panel\nLocate the sense wires, is the thin pair of wires that runs from port to main pcb, like shown in the image\nCut the pair of sense in middle. Don't through any part of it\nUnscrew and remove the main green pcb\nUnscrew and remove the lcd pcb\nOptionally remove the yellow pcb and optical encoder pcb (I suggest it to avoid damaging it during drilling). Note the rotary knob is easily removable, just pull it don't be afraid you won't damage it.", "step_imgs": ["https://cdn.instructables.com/F0Q/BBFN/JTIXB8SL/F0QBBFNJTIXB8SL.LARGE.jpg"], "step_title": "Step 2: Disassemple Korad, Locate and Cut Sense Wire"}, {"step": 3, "steps_text": "If you have removed the protective layer of lcd panel is now a good time\nto make a protective mask for your screen putting maybe an adhesive tape\nLooking at the image locate the spots where the usb port and switch will be accommodated\nThere is not enough room between top of the front panel and main pcb of the board. So in order to make room for the switch we have to cut a little bit the inner bezel of the panel.\nWith a switch at hand make on the panel where you will make cut. Precision is not of importance. All we need is to make enough room for the switch to fit in.\nWith a rotary tool cut horizontal lines from inner to outer surface. Rotary tool will maybe push you against the screw pole. Be careful and don't cut it like me. Scrap the pieces out of panel\nCheck with the lcd board on if switch fits. Note that you must maintain the gap between outer and inner bezel in order outer metal box fit again in when assembling back the device\nMark the position where you will make the hole for the switch. This time you have to be precise. The center of hole must be half height of switch bellow the infra surface of inner bezel (that is now missing). I suggest to make these measurements ( I didn't keep them to readily provide you). Height of switch, gap height and thichness of inner and outer bezel.\nDrill a hole. I used my rotary tool for that purpose mounted on a DIY drill bench stand. My rotary tool can't host thicker drill bits so I had to route it a little bit inside the hole to enlarge it. You can use whatever drill tool you have available, or melt a hole with your solder iron. You can make the hole slightly bigger so you have the freedom to move around the switch a little bit to center it perfectly\nMake room for the usb port\nAs you can see the location for the usb port is ideal because the white plastic is already cutted, so the drilling or melting will be easier, and also there are two poles in each side that we'll use them to secure usb port in place\nCreate extra masking with two pieces of adhesive tape before drilling or cutting\nIf you use a drilling tool drill multiple holes inside the black area in order to get a coarse opening.\nWith a precision knife smooth the edges", "step_imgs": ["https://cdn.instructables.com/FTI/BIO4/JTIYDOWL/FTIBIO4JTIYDOWL.LARGE.jpg", "https://cdn.instructables.com/FQM/REFI/JTIYDOZE/FQMREFIJTIYDOZE.LARGE.jpg", "https://cdn.instructables.com/FNV/64J2/JTIYDP04/FNV64J2JTIYDP04.LARGE.jpg", "https://cdn.instructables.com/FKM/5WPB/JTIYDP05/FKM5WPBJTIYDP05.LARGE.jpg", "https://cdn.instructables.com/FNV/B0N9/JTIYDP06/FNVB0N9JTIYDP06.LARGE.jpg", "https://cdn.instructables.com/FPT/LQID/JTIYDOYI/FPTLQIDJTIYDOYI.LARGE.jpg", "https://cdn.instructables.com/F2F/MEKK/JTIYI2MU/F2FMEKKJTIYI2MU.LARGE.jpg", "https://cdn.instructables.com/F6X/RP85/JTIYI0LB/F6XRP85JTIYI0LB.LARGE.jpg", "https://cdn.instructables.com/FO1/MS4Q/JTIYI0N4/FO1MS4QJTIYI0N4.LARGE.jpg", "https://cdn.instructables.com/FJ1/LQ7K/JTIYI0FT/FJ1LQ7KJTIYI0FT.LARGE.jpg"], "step_title": "Step 3: Drill Holes for Switch and Usb Port"}, {"step": 4, "steps_text": "The circuit will be the one shown in the first image. It is the super-cluttered collage sketch of what I describe here.\nIt is easier to cut the appropriate length of wires and solder them firstly on the switch.\nWhen switch is up will select the remote sense pair and when switch is down will select the local sense pair. For that reason the local pair will be connected to the upper switch terminals and remote pair will be connected to the bottom terminals (reverse).\nWhat will you need is about 17cm of red and black wire for the local pair. So solder this pair on the top of the switch.\nIn turn use about 8 cm of red and black wire for the pair that goes to korad pcb and solder that again in the middle terminals of the switch.\nTo complete connection use about 5 cm of blue and white wire (or whatever colors you prefer) for the pair that will connect to usb connector and solder it on the bottom terminals of the switch\nTwist slightly all the wire pairs. In that way you will have increased noise immunity\nWhen you are done the switch along with the wires should look like in the picture\nUnplug the original upper half of sense pair, twist it in the opposite\ndirection you did before and solder it with the middle pair of the switch. Cable tighteners are used to hold against untwisting during soldering\nTake a washer or a more appropriate ground terminal and solder it on a ground wire (I used the same blue wire as before) of length about 18 cm. The end result of screwed ground wire should look like in the last picture", "step_imgs": ["https://cdn.instructables.com/F1V/UAY1/JTIYIDPP/F1VUAY1JTIYIDPP.LARGE.jpg", "https://cdn.instructables.com/FIX/OPXJ/JTIYIHM5/FIXOPXJJTIYIHM5.LARGE.jpg", "https://cdn.instructables.com/FEW/Q4E0/JTIYIHGU/FEWQ4E0JTIYIHGU.LARGE.jpg", "https://cdn.instructables.com/FOD/3QRT/JTIYIJ3P/FOD3QRTJTIYIJ3P.LARGE.jpg"], "step_title": "Step 4: Make Wires"}, {"step": 5, "steps_text": "Cut an fr4 board to these dimensions (to be written soon). Drill two holes using a 4mm drill in either direction. I can't recall the exact position of screw holes.(My first instructable! Sorry)\nMark the exact position where you will solder usb port on board in the following way:\nPlace usb port into the hole\nFrom the outer side of panel plug a flash drive or a usb cable, in order to handle the port\nScrew the right side of the board, and leave it in a rotated position so you have access to underneath connector\nPut a bean of hot glue on the back side of usb port near its pins (glue will also protect pins during soldering)\nImmediately rotate board to align its left hole with left screw pole and using flash drive as handle push against board and make fast small movements to align usb port as you wish.\nLet the glue get cold, unscrew the board and lift it from behind the panel\nSecure the position of port on board with a rubber band. (During soldering hot glue will melt and if have not fixed position, usb connector will get misaligned)\nSolder the usb connector onto board.\nAt this point make sure, using continuity test, there is no short circuits between usb pins and ground (outer surface of usb connector). In such a case use another usb connector", "step_imgs": ["https://cdn.instructables.com/FO3/RAV3/JTIYIM8W/FO3RAV3JTIYIM8W.LARGE.jpg", "https://cdn.instructables.com/F53/F23E/JTIYIR9Y/F53F23EJTIYIR9Y.LARGE.jpg", "https://cdn.instructables.com/FJ9/PH2D/JTIYIREV/FJ9PH2DJTIYIREV.LARGE.jpg", "https://cdn.instructables.com/FBI/T00H/JTIYIRYU/FBIT00HJTIYIRYU.LARGE.jpg"], "step_title": "Step 5: Make the Pcb Board That Hold Usb Connector"}, {"step": 6, "steps_text": "Solder the blue(-) wire (not ground) to the second pin of usb connector (as you see it from behind\nSolder the white(+) wire to the third pin of usb connector\nSolder the other side of ground wire on board\nSolder the other end of the local sensor leads to the bottom pair of cutted original sensor cable\nPut back and screw the lcd board\nPut back and screw the yellow pcb board and rotary board with the knob\nPut switch into its hole and screw it\nPut the usb board into its position and use two self tapping screws to screw it (I borrowed two of them from the main pcb board, shhh don't tell anyone)\nPut back and screw the main green pcb board\nPut every thing back together. Don't forget to screw the new ground wire along with the old one", "step_imgs": ["https://cdn.instructables.com/FOE/7AE7/JTIYITZZ/FOE7AE7JTIYITZZ.LARGE.jpg", "https://cdn.instructables.com/FW6/24B6/JTIYIX06/FW624B6JTIYIX06.LARGE.jpg", "https://cdn.instructables.com/FOD/3QRT/JTIYIJ3P/FOD3QRTJTIYIJ3P.LARGE.jpg"], "step_title": "Step 6: Make the Rest of Soldered Connections and Reassemple"}, {"step": 7, "steps_text": "For remote sense cable you can use a ubiquitous usb2.0 cable. Most of them come with a shield and have a twisted pair.\nCut one end of the cable approximately at desired end\nThe twisted pair does not involve the thicker red and black wires (which are not twisted). In my case the twisted pair is consisted of one green(+) and one white(-) wire.\nSolder on the twisted pair the desired connectors (I prefer crocodiles for that case)\nYou can make cheaply multiple sense cables by resurrecting unused usb cables or buy new ones", "step_imgs": ["https://cdn.instructables.com/FGB/JL9Z/JTIYJ07O/FGBJL9ZJTIYJ07O.LARGE.jpg"], "step_title": "Step 7: Make a Remote Sense Cable"}, {"step": 8, "steps_text": "More than enough said, just enjoy the pictures\nNote: Since I ran into trouble for this project I changed also the output led to blue one. But that is a different story.", "step_imgs": ["https://cdn.instructables.com/FPC/YQ76/JTIYJ6QZ/FPCYQ76JTIYJ6QZ.LARGE.jpg", "https://cdn.instructables.com/F9H/7LYA/JTIYJ6DQ/F9H7LYAJTIYJ6DQ.LARGE.jpg"], "step_title": "Step 8: Enjoy Remote Sensing Capability"}], "channel": ""}, {"category": "", "description": "The Ultrasonic Theremin is an Arduino project that uses a cheap theremin to teach sound waves. By changing the distance of my hand to the device, I am changing the frequency of the sound waves. Also, moving a potentiometer changes the amplitude of the wave. This can be used as a science lesson about sound waves.", "title": "Ultrasonic Theremin (Teach Sound)", "url": "https://www.instructables.com/id/Ultrasonic-Theremin-Teach-Sound/", "section": "technology", "steps": [{"step": 1, "steps_text": "Supplies\nArduino Uno with USB Cord\nUltrasonic Sensor to change frequency (pitch)\nPiezo Buzzer to play the sound\nPotentiometer to change the amplitude (volume)\nLED with 220ohm Resistor (visual for the frequency)\nFoamcore Board for the case\nJumper Wires\nNOTE: Most of these parts came from an Arduino kit.\nTools\nComputer with Arduino Installed\nHot Glue Gun\nLaser Cutter for enclosure\nPower Bank if you want to make it portable", "step_imgs": ["https://cdn.instructables.com/F6T/D4CD/JT4TYEXV/F6TD4CDJT4TYEXV.LARGE.jpg"], "step_title": "Step 1: Tools and Supplies"}, {"step": 2, "steps_text": "The Electronics\nThe first two images, to the right, show the electronics in testing but in the third, I moved around the components around to accommodate the case. The LED and Ultrasonic Sensor use 40cm male to female jumper wires which can definitely be smaller but that was what I had on hand. I just wrapped the excess around the Arduino before casing it.\nThe Case\nThe case was made by MakerCase with dimensions that were a little small so my prototype required extra glue to piece it together. After you measure your parts on top of your Arduino, add a few millimeters to your values and insert them into MakerCase for a file that can then be laser cut on the foam-core.", "step_imgs": ["https://cdn.instructables.com/F3B/N8SV/JT91LDW9/F3BN8SVJT91LDW9.LARGE.jpg", "https://cdn.instructables.com/F6P/1O4Y/JT4TYEYC/F6P1O4YJT4TYEYC.LARGE.jpg", "https://cdn.instructables.com/F4B/0MJB/JT4TYEZ8/F4B0MJBJT4TYEZ8.LARGE.jpg", "https://cdn.instructables.com/F2A/0NFJ/JT4TYEZU/F2A0NFJJT4TYEZU.LARGE.jpg"], "step_title": "Step 2: Assembly"}, {"step": 3, "steps_text": "The code is mainly controlled by a variable called pitch. The pitch uses map to covert the values from the ultrasonic sensor to something readable by the piezo speaker and in particular to frequencies between A3 and C5. The constrain makes sure the map doesn't predict a high frequency when it sees a high distance (they were annoying). The rest of the code is to read the sensor, add an LED, and add serial messages.\npitch = constrain(map (distanceCm, 1, 40, 256, 523), 220, 523);", "step_imgs": [], "step_title": "Step 3: The Code"}], "channel": ""}, {"category": "", "description": "The KUNAI is a 4 x 4 MIDI controller that uses the highest quality; Japanese SANWA buttons , has as many banks as your DAW can handle, a touch filter , and completely customizable and modular!\n\nThis is a project I have finally started to perfect after starting to work on a remix of this midi controller posted on DJTT by Kyle Mohr! https://djtechtools.com/2015/08/25/how-to-make-yo... I have since then moved from wires to a custom made circuit board to clean things up , cleaned up the code, and added a few features! :D", "title": "The KUNAI MIDI CONTROLLER", "url": "https://www.instructables.com/id/The-KUNAI-MIDI-CONTROLLER/", "section": "technology", "steps": [{"step": 1, "steps_text": "You will need:\n-TEENSY LC Micro Controller]\n-At least 120x120mm Single Layer Copper Board (I purchase a 300x300 sheet on amazon for $20 that makes 4)\n-Male Micro-B to Female-B panel mount\n-Spectra Symbol Soft Potentiometer\n-10k Resistor\n-x16 SANWA arcade push buttons\n-x4 3mm LEDs\n-x2 12mm Tactile Push Buttons\n-x32 3577 fuse clips ( if you want the buttons to be removable from the PCB [HIGHLY recommended]\nx4 30mmx2.5mm (M3) screws\n-Ferric Chloride\n-Elmers Glue Stick\n-Soldering Iron & Solder\n-1mm drill bit\n-3D printer\n-3D printer filament in desired color\n-2mm single layer copper board\n-Glass or Plastic container\n-Hot Glue\n-Small gauge wire", "step_imgs": ["https://cdn.instructables.com/FLM/L51G/JTIYGN9I/FLML51GJTIYGN9I.LARGE.jpg"], "step_title": "Step 1: Required Materials"}, {"step": 2, "steps_text": "The best part of The KUNAI is that the enclosure is fully 3D printed, allowing it to be VERY easily customized with minimal effort.\nI have included the base files for The KUNAI which have no embossment patterns on it so you can simply drag and drop a pattern into your 3D modeling program, get a 3D stencil from that, and then subtract it from the walls of The KUNAI , causing that pattern to be engraved onto The KUNAI walls.\nTo do this simply follow these steps: -Download & install \"3D Builder\" from The Microsoft store\n-Find an image you would like to use as the pattern on The KUNAI and drag and drop it into 3D Builder\n-You will be given options at the top... Disable Textures, change the levels & smoothness until you achieve a desirable result. You can also use the \"Inverse\" option to reverse the embossment which will reverse which edges are sunk into the walls and which remain at the same level. After you are done with these options, click on \"Import Image\" at the top left, and you will be given a 3D model made from a photo.\n- Next step is to open a SECOND instance of 3D builder , and open The KUNAI base files\n-Go back to your pattern once The KUNAI base has been opened, and ctrl + A to select all, and ctrl + c to copy the model\n-Now go back to The KUNAI base model , and ctrl + v to paste the model\n-With your model now posted beside The KUNAI , select the rotate tool from the bottom that's shaped like a rotating arrow(or \"E\" if you're having trouble finding it), you will then adjust the Rolll, Pitch & Yaw of your pattern to align it with the walls of The KUNAI\n-Once you're happy with the orientation of your pattern, select the move ( or \"R\" if you're having trouble finding it)\nand move the pattern flush with the wall of The KUNAI; it should \"SNAP\" into place once it's flush.\n-Now with only the pattern selected, ctrl + c to copy it in its new position ( this will save time for each wall )\n-With only the pattern selected, we want to chose the \"SCALE\" tool ( Q if you're having trouble finding it ),\npay attention to the number under \"Z\" , as this is your patterns base thickness, and now drag the arrow facing the center of The KUNAI towards the center of The KUNAI , until the Z value is 0.5mm greater than it was originally ( this will be an embossment with a 0.5mm depth )\n-Now click on \"Edit\" at the top, and select \"Subtract\" from its secondary bar to create the embossment!\n-You will notice The KUNAI now has a pattern on ONE of the walls, but we still need the other 3! This is why we copied the pattern before editing it any further! Simply ctrl + v to paste the pattern back in the exact same spot it was in before you pulled it into the walls for embossment\n-Simply select the pattern that you just pasted ( ENSURING ONLY THE PATTERN IS SELECTED ) , and use the MOVE TOOL \"R\" , to move it to the opposite wall and repeat the process\n-For the last 2 walls ( that are facing 90 with the initial wall ) , after you do the second subtraction and paste the pattern for a third time, select the rotate tool (E) , and rotate it 90 degrees and then follow the same steps again!\nOnce you're happy with the Pattern on The KUNAI walls. Save the file as a .STL , .OBJ , or .3MF.\n-Now do all that again for the top cover >:} ( just simply put your pattern ON TOP of the cover and subtract from that )\nTADAA!!!! 3D modesl done... Now 3D print them! ( I recommend printing it with PLA @ 20% infill , 2 walls, 0.3mm layers )", "step_imgs": ["https://cdn.instructables.com/FA0/DLI9/JTIYGPF0/FA0DLI9JTIYGPF0.LARGE.jpg", "https://cdn.instructables.com/FS4/W0SI/JTIYGPER/FS4W0SIJTIYGPER.LARGE.jpg", "https://cdn.instructables.com/F5W/NYXF/JTIYGPEN/F5WNYXFJTIYGPEN.LARGE.jpg"], "step_title": "Step 2: 3D Modeling the KUNAI"}, {"step": 3, "steps_text": "So... This is where things get a little weird, especially since there's multiple ways to do this.\nIf you're lucky enough to own a 3D printer, I have already done all the brain work to turn your 3D printer into a circuit board creator extraordinaire WITHOUT having to do ANY kind of modifications!!!\nTo prepare your 3D printer for making circuit boards, simply drop the bed at least 2mm from level, and literally that's it! ( for the printer )\nNow securing your Copper Board to the printer is the little more complicated part , and where your double sided tape comes in.\n-Simply take your double sided tape, and tape the back of your Copper Board; ENSURING that the corners and the middle at least have tape on them ( the tape I use is about the thickness of duct tape, and using 3 strips only leaves a very small gap that's not covered )\n-Now remove the protective back from the tape, and drop the Copper Board onto your 3D printers bed as square as possible ( I use a 150mm sheet of copper to make a 120mm board to leave room for error due to it not being perfectly square... and because I buy my sheets in 300x300 packs :3 )\n-Now level your printer as you usually would, but instead of using the corners of the bed as reference points to flat, use the corners of the copper board ( if your using the on board level option on your 3d printer, level it to the middle, wait for it to get to the lowest point it gets, then turn your printer off , or send the \"DISABLE MOTORS\" command via your slicer, and manually move the print head and bet to get to the corners of the board)\n-Once your board is leveled, take your Elmer's Glue and cover the copper with at least 3 layers ( IMPORTANT , TOO MUCH IS BETTER THAN TOO LITTLE ) , I usually do a vertical pass, horizontal pass, and then another vertical pass, or until the glue is visibly cloudy on the copper\n-After all these steps are complete , simply load the included \"traces\" 3d model into your slicer , set your nozzle temp to the high end of the scale for your filament , set your bed to 60 degrees (Haven't tested with an unheated bed) set the walls to \"4\" , 100% infill , 0.3mm layers, solid diaphragm ever 1 layer ( if you have the option ) , and you may have to mess around with single extrusion settings to get a solid fill on the traces. I also recommend using 2/3 skirts 4-5mm away to prepare the nozzle, and also find out if your board is properly lined up on the bed.\n-Once you have the model loaded up and the print settings set, print! -Pay close attention to the skirt when the print first starts, if it prints the whole skirt onto the board , and nothing is lifting / peeling off the board, the rest of the print SHOULD go through no problem!\nOnce your board is finished printing , it's onto step 2 of 3 of the PCB making process!", "step_imgs": [], "step_title": "Step 3: The PCB ( Printed Circuit Board) Step 1/3"}, {"step": 4, "steps_text": "Once your copper board is finished printing, it's time to get ready to etch it.\n-Remove your RAW PCB from the printer bed and remove any tape still attached to it....prying with a 3D printing chisel with the bed a little warm helps!\n-Now run your board under the tap set to hot at maximum pressure ( assuming your sink doesn't shoot lasers ) to melt any of the extra glue off! It doesn't hurt to use a paint brush to try and help get any left over glue out from in between traces that run close to each other ( like the center traces and the ones along the edges ), FAILURE TO REMOVE ANY GLUE WILL RESULT IN THE COPPER NOT BEING ETCHED, AND POSSIBLY SHORTING OUT YOUR BOARD IF NOT CAUGHT EARLY ENOUGH!!!!!\n-Place your RAW PCB into a plastic container or pyrex / glass dish ( ANYTHING BUT METAL )\n-Pour some Ferric Chloride onto the RAW PCB, until its fully submerged\n-Now shake shake shake! Constantly agitate the Ferric Chloride by shaking your container, twisting it, rocking it back and forth , what ever, just keep it moving, and switching directions SEEMS to help.\n-Your board is done etching once you see NO copper left anywhere on your board ( I wouldn't bother checking on it before 10 min or so )\n-If you're unsure if it's done ( seems patchy ) , simply remove the board from the Ferric Chloride, run it under some cold water, and inspect it closely , if there's copper left, run that spot under hot water and give it a shake in the Ferric Chloride again for a few min! If that copper doesn't want to etch, it probably still has glue over it, so simply use your paint brush and warm water to remove the glue from there and either submerge it back into the Ferric Chloride , or you can dip your paint brush into the Ferric Chloride and repetitively paint of the spot that the remaining copper is to remove it without having to submerge the whole board again!\n-Once you're convinced that all the copper in the negative space ( spots with no 3D printing on it ) has been etched, simply rip off the 3D printed layer using tweezers or a chisel!\n-Now you should have a completely blank professional looking PCB you made at home for only a few dollars! (You're welcome) , now take that PCB and run it under water and rub off any glue left over on the traces.\n-Now take some steel wool , and give the traces a nice clean & shine!\nONTO STEP 3/3 of the PCB process!", "step_imgs": [], "step_title": "Step 4: The PCB Step 2 / 3"}, {"step": 5, "steps_text": "Once you have your blank PCB rinsed and polished , it's time to simply cut it to size and drill the holes for all the components!\n-Using a 1mm drill bit, prepare your eyes, hands and mind to drill 90 holes manually\n-The drill holes are a little hard to identify at first, but long story short , it's anything that looks like a nipple or circle ( attached photo with circled drill points )\n-Once you've drilled all 12982309182 holes, cut the board to size buy following the OUTSIDE edge of the big trace the runs along the edge of the board ( Ground Plane )\nNow to fill them holes ;)\nThis part is simple enough! All components should be mounted on the OPPOSITE side of the traces so that the tail end of the component is only sticking through to the side where the traces are ( picture attached ).\nThe TEENSY should be mounted with the USB port facing the LEFT EDGE of the board if you're looking at it from the blank side while it's correctly oriented.\nThe Fuse Clips should be oriented with the slit facing the bottom edge of the board if you're looking at it from the blank side while it's correctly oriented\nLED's should have the shorter end going through the trace at the edge ( GROUND ) , and the longer one onto the thinner trace the runs along the ground trace all the way around the board ( 5V )\nnow simply solder everything from the other side!\nNow rout your Micro USB to B USB to end up coming out between the top two rows of clips to the left side ( reference picture for help )\nNow onto the next step! Programming!", "step_imgs": ["https://cdn.instructables.com/FA2/6E1F/JTIYGRC9/FA26E1FJTIYGRC9.LARGE.jpg"], "step_title": "Step 5: The PCB Step 3/3"}, {"step": 6, "steps_text": "Since The KUNAI uses a TEENSY processor , it makes compiling code with ARDUINO stupid easy.\nThis code uses the \"bounce\" & \"MIDI\" libraries to look for button pushes, and then to send MIDI code * duh *\nI won't break down the code here, as it's annotated pretty well!\nYou will need the Arduino Programmer and the teensyduino libraries, which can both be found by a quick google search.\nPlug in your now \"dumb\" board into your computer and open up the ARDUINO program.\nNow simply copy and paste this code into your ARDUINO program , or open the included .ino file with the ARDUINO program and set the following settings: Tools > Boards > Teensy LC\nTools > USB Type > MIDI\nTools > Port > Which ever port shows the Teensy\nNow finally hit the arrow button top left to verify and upload the code!\nNOW TIME TO TEST!", "step_imgs": [], "step_title": "Step 6: Coding the KUNAI"}, {"step": 7, "steps_text": "So... Now you technically have a working midi instrument, but we're not 100% sure if there's any shorts , or breaks in the traces & solder, so we need to test it!\nOpen up your DAW like FL Studios or Ableton ( I will use Ableton for this example ) , and enable the Teensy MIDI device in MIDI options ( picture attached )\nNow load up a drum rack ( onto a midi channel for ableton by going to instruments in the collections menu on the left, and double clicking the drum rack to load it up.\nnow start using a button, a wire or anything conductive, short each set of 2 clips on the board and watch for your LED's to turn on , and for the drum rack pad to light up relating to the set of pads you shorted; bottom left pad ( c1 ) is located on the bottom left of The KUNAI if the board is rotated 90 degrees clockwise.\nIf every set of standoffs shorting causes a pad launch + LED glow , then the standoffs are working correctly!\nNow push the left tactile button and short the pads again , and watch for the lights in the bank of squares above the currently selected one to light up to ensure that your next pad button is working , once you have that working , press the right tactile button, which will return you to your active set of pad , short pads again, if you see the active grid light up , your bank buttons work!\nTo make sure that your touch filter works, enter midi mapping mode ctrl + m for Ableton on Windows ( command + m for Ableton on OSX ) or ctrl + j for FL Studio on windows ( Probably command j for FL Studios on OSX )\nnow click on any knob on your daw , then drag your finger along the touch filter, then exit MIDI map mode ( ctrl / command m for ableton , and I THINK FL studio automatically exists after each link ).\nNow to finally test the filter, drag your finger along it again, and you should see the knob you clicked on , correlate with the position of your finger on the filter!\nYAY!!! YOUR BOARD WORKS! NOW ONTO THE FINAL STEP OF ASSSEMBLY!", "step_imgs": ["https://cdn.instructables.com/FCT/TT0U/JTIYGSKU/FCTTT0UJTIYGSKU.LARGE.jpg"], "step_title": "Step 7: TESTING TIME"}, {"step": 8, "steps_text": "Now you should have a 3D printed KUNAI base , a 3D printed KUNAI top , and an assembled Circuit Board!\nFirst step is to put the buttons into the top panel , which is pretty self explanatory . just keep in mind that the button pins need to make *ROWS* instead of *COLUMNS* ( hard to explain ) as the board goes in turned 90 degrees, so if you have a pattern printed on the that needs to be oriented in a certain way, pay attention to that! OTHERWISE , just push the buttons in the same way so that the pins are aligned with the edges of the board creating 4 columns or row!\nNow make sure your USB connector is in the correct position, align the pins from the bottom of the buttons into the fuse clips and push them into place! It's easiest to align a whole row or column at a time and push that row or column down at the same time instead of each button individually! Keep in mind that due to the drilling being manual and the placing of the buttons being manual , everything will NOT be perfectly aligned , you may have to finesse the button pin into the clip by slightly bending and twisting the top cover!\nOnce you have the top assembled , hot glue the tactile buttons into the cut outs in The KUNAI base , let it cool, then simply slide the touch filter into the slit; with the silver part of the filter facing out, and use a little bit of hot glue to keep the resistor and little blue tab secured to the body of The KUNAI so it stays out of the way of the PCB once it's put into the base!\nNow simply drop the board and buttons into The KUNAI base , while putting the far edge in first ( edge with the tactile buttons ) and now the tricky part... Lining up the USB port with the cutout.\nI find this easiest by using tweezers or a small hard tool to push around in the port until I see on of the screw holes through the cutout holes. Once you see one, secure one side with a screw ( don't fully tighten it yet ) , and then go fishing again for the second screw hole while the first one is still being held in place with the screws; once you've found it, screw in both screws and tighten them down ( I can never get it completely perfect with my model yet )\nNow for the last steps screw the top panel into the bottom panel using the 30mm screws, and add the rubber feet to the corners on the bottom of the now finished KUNAI!", "step_imgs": ["https://cdn.instructables.com/FE4/XMDC/JTIYGVM9/FE4XMDCJTIYGVM9.LARGE.jpg"], "step_title": "Step 8: Final Assembly"}, {"step": 9, "steps_text": "Thank you for checking out my tutorial, this project has no secrets behind it, but as you can see is a very tedious and expensive project! I make and sell these from my website @ www.themidiwork.shop\nThank you for all your support , and I hope you found this tutorial informative enough to make your own, or to have inspired you to purchase one from me!", "step_imgs": ["https://cdn.instructables.com/FLS/XIOP/JTIYGUI6/FLSXIOPJTIYGUI6.LARGE.jpg"], "step_title": "Step 9: Support the Future of 3D Printed Instruments!"}], "channel": ""}, {"category": "", "description": "This Instructable is for Workshop Users at the Autodesk Technology Center in San Francisco\nThis Instructable explains how to use the Ultimaker S5 3D Printer. The Ultimaker is a fused deposition modeling(FDM) printer that extrudes filaments of thermoplastic material to print your model, layer by layer. Requirements for using the Ultimaker printer at Pier 9:\nTake General Workshop Safety Class\nRead through all the pages of this Instructable\nFind Shop Staff to go through Safety Check-off\nFor additional Information on how to use the Ultimaker S5, please see the support site and choose operation from the right panel options.", "title": "Autodesk Workshop Guide: Ultimaker S5 3D Printer", "url": "https://www.instructables.com/id/Autodesk-Workshop-Guide-Ultimaker-S5-3D-Printer/", "section": "technology", "steps": [{"step": 1, "steps_text": "The Ultimaker has many moving parts that could cause injury.\nTip: While the Ultimaker is in operation never reach inside it, or open the visor or the lid.\nWhen trying to remove support, scrapers can cause injury if used incorrectly.\nTip: Always scrape away from yourself. Rest the bed in a vertical position, against a sturdy level surface when removing a part. Always use short, ramming motions to remove a part from the print bed. Always keep fingers or other body parts out of the path of the scraper when removing a part from the print bed. Keep the angle between the scraper and the print bed small while you are removing your part.", "step_imgs": [], "step_title": "Step 1: Safety Checklist"}, {"step": 2, "steps_text": "Which material should I use?\nPLA is the standard material supported on our Ultimaker. ABS, ASA, Nylon and Polycarbonate are available on the Fortus 450 machines. If you have a special material request, please speak with Shop Staff.\nWhen you select a print material, it is important to consider the characteristics of the object you want to print and the environment in which it will be used. Ideally, you will select your print material based on material characteristics such as:\ntechnical properties\naesthetic qualities\nprocessing ability\nThe following material descriptions will help you select the right material for your 3D printing application. For further information, refer to the material data sheets for technical data and the material guides for printing instructions.\nPLA (polylactic acid)\nPLA is a biodegradable polymer that is ideal for prototyping 3D models with pleasing aesthetics. It has good surface quality, is somewhat glossy, and prints details with a high resolution. PLA is a reliable and easy-to-print material that can be printed at low temperatures. It has a low shrinkage factor and does not require the use of a heated build plate. It is the perfect choice for creating concept models, visualization aids, or for use in education. Overall, PLA is not as strong as more technical materials but does have a high tensile strength. It is not recommended for functional and mechanical parts. Items printed with PLA can lose their mechanical properties and may become brittle over time.\nPVA (polyvinyl alcohol)\n\nAlthough PVA is not typically used for printed objects, it is an ideal material to choose if you\u2019re looking for removable support structures. Ultimaker PVA is biodegradable, has a good thermal stability, and is less moisture sensitive than other PVA filaments. After printing in combination with another material, PVA support structures can easily be removed by dissolving in water. This makes PVA a good support material and allows you to print models with large overhangs and complex geometries. Note: PVA is only supported on the Ultimaker 3 and is currently optimized to serve as a support structure for either PLA or Nylon.\nTPU 95A (thermoplastic polyurethane)\nTPU 95A is a semi-flexible material for use in applications that demand the qualities of rubber and plastic. TPU 95A has a score of 95 on the Shore A Hardness Scale, with an elongation break of up to 580%. TPU 95A is flexible, strong, and can withstand high impacts without deforming or breaking. It is also resistant to many common industrial oils and chemicals and easily resists normal wear and tear. Unlike other (semi-)flexible materials, Ultimaker TPU 95A is easy to use, prints quickly, and does not require a high level of expertise to use effectively. TPU 95A is not recommended for applications that will be exposed to UV light, moisture, or high temperatures for extended periods.\nABS (acrylonitrile butadiene styrene)\nABS is a well-known material used by professionals for mechanical and technical applications. It has excellent mechanical properties and can be used for objects that require toughness and durability. With a thermal resistance of up to 85 \u00b0C, ABS can be used in warm environments. These properties make ABS a good choice for prototyping and fit testing. Ultimaker ABS is specially formulated to minimize warping and ensure consistent interlayer adhesion. This makes it easier to use than standard ABS filaments. Ultimaker ABS has pleasing aesthetics and results in a matte finish when printed. Note: ABS is adversely affected by exposure to UV light, so it is strongly recommended not to use ABS for applications that are exposed to UV light for extended periods.\nCPE (co-polyester)\nCPE is a popular material for mechanical applications. It has the same strength as ABS but also has high tensile strength, dimensional stability, and chemical resistance. This means that CPE can be used in combination with most industrial oils and chemicals without adverse effects. CPE is odorless and emits few UFPs (ultrafine particles) and VOCs (volatile organic compounds) during printing. This makes it a safer choice than many other materials. Note: CPE should not be used for parts exposed to high temperatures as it may deform at temperatures above 70 \u00b0C. CPE+ (co-polyester) CPE+ is stronger than CPE, which makes it suitable for applications where the strength of the object is key. CPE+ is primarily used for functional prototyping and modeling. It has greater thermal resistance than CPE, and therefore parts printed in CPE+ can be used at temperatures up to 100 \u00b0C without deforming. Note: Printing in CPE+ is more challenging than CPE because of the high temperature required to print.\nPC (polycarbonate)\nPC can be used for various engineering applications. It\u2019s one of the toughest print materials, making it a perfect choice for printing strong objects. PC has a high mechanical strength, good UV stability, and high thermal resistance. It retains its form at temperatures up to 110 \u00b0C. In addition, PC has a good dimensional stability, is chemical resistant, and has flame-retardant characteristics. These properties make it suitable for lighting, molds, engineering parts, tools, functional prototyping, and short-run manufacturing. Note: Printing in PC can be challenging due to the high temperature required to print.\nNylon (polyamide)\nNylon is a well-known material used for printing tools, functional prototypes, and end-use parts. It combines strength, impact resistance, and flexibility. Nylon 3D prints are both strong and slightly flexible. Ultimaker Nylon is very durable due to its abrasion resistance and corrosion resistance to alkalis and organic chemicals. Unlike standard nylon filaments, Ultimaker Nylon is considerably easy to use - it features reduced humidity absorption for easy and reliable printing.\nPP (polypropylene)\nAs the second most used polymer worldwide, PP offers many possibilities for both prototypes and end-use parts. Ultimaker PP is durable with a high toughness and fatigue resistance. This means that PP retains its shape after torsion, bending, or flexing. It has very low friction, allowing parts that are in contact with each other to move smoothly over each other. PP is also semi-flexible. While it\u2019s not as flexible as TPU 95A, it can still be a good option if you\u2019re looking for a material with slight flexibility. Besides this, it has good chemical resistance and high electrical resistance, so it is ideal as an electrical insulator. Another key advantage of PP is that it has a low density, making it perfect for the creation of lightweight parts. Furthermore, it has good translucent properties.", "step_imgs": ["https://cdn.instructables.com/FCL/M2NB/JTENDFE0/FCLM2NBJTENDFE0.LARGE.jpg", "https://cdn.instructables.com/FFO/UV9U/JTENE2G7/FFOUV9UJTENE2G7.LARGE.jpg", "https://cdn.instructables.com/F57/45KZ/JTENE33Z/F5745KZJTENE33Z.LARGE.jpg", "https://cdn.instructables.com/FUW/G2BT/JTENE347/FUWG2BTJTENE347.LARGE.jpg"], "step_title": "Step 2: Material Choices"}, {"step": 3, "steps_text": "PLA (polylactic acid) is one of the most widely used 3D printing materials and also the recommended material for beginners. It prints fast, is safe, and can be used for a broad range of models and applications. The following is everything you need to know about printing with Ultimaker PLA.\nOn the Ultimaker S5 and Ultimaker 3, PLA can also be printed in combination with PVA, Breakaway or another color of PLA. This overview shows the materials PLA is compatible with.\nTemperatures\nUltimaker PLA prints at moderate temperatures, mostly around 200-210 \u00b0C, depending on the selected nozzle size and print profile. Profiles for the 0.25 mm nozzles use a slightly lower temperature though, and the 0.8 mm profiles require a higher temperature.\nFor the build plate, a temperature of 60 \u00b0C is used for heated build plates, but it is also possible to print PLA on a cold build plate using the blue tape.\nNote: The correct temperatures are automatically used based on the printer, nozzle size, and profile you select in Ultimaker Cura.\nAdhesion\nPLA usually adheres well to the heated glass plate, but for the best results, it is advised to apply a thin layer of glue (included in the accessory box of your 3D printer).\nThe PLA profiles in Ultimaker Cura use a brim as build plate adhesion type, to provide optimal adhesion on the first layer.\nA brim is made of extra lines printed around the perimeter of the initial layer of your 3D print to ensure a successful adhesion to the build plate. Once the 3D print has finished, do not remove it while the build plate is still warm. This can result in deformation of the base of your print.", "step_imgs": [], "step_title": "Step 3: Printing With PLA"}, {"step": 4, "steps_text": "You will need an .STL or .OBJ to print with CURA.\nYour model will need to be watertight, meaning it has no holes, inverted normals or other errors. You can check for errors in Autodesk's Netfabb or Meshmixer.", "step_imgs": ["https://cdn.instructables.com/FOH/V6GG/JTENE422/FOHV6GGJTENE422.LARGE.jpg"], "step_title": "Step 4: 3D Model"}, {"step": 5, "steps_text": "To print on the Ultimaker you will need to open Cura on the Desktop Computer located next to the printer.\nCURA UI:\nOpen file\nAdjustment tools\nNon-printable areas\n3D model\nView mode\nPrinter, material, print core and build plate configuration\nPrint Setup (recommended mode)\nModel information\nPrint job information (print time and material usage)\nPrint over network, or save to file or USB stick\nPrepare a File\nTo slice a model in Ultimaker Cura:\nLoad the model(s) by clicking the Open File folder icon.\nIn the sidebar (right side of the screen), check if the materials, print cores and build plate are correct.\nUse the Adjustment Tools to position, scale and rotate the model as desired.\nSelect your desired settings (layer height/print speed, infill, support and build plate adhesion) under Print Setup.\nMake sure you have the correct Tip and materials selected.\nTo view the result of the selected settings, change the view mode from Solid view to Layer view.\u0007\nIn the bottom-right corner, select Print over network, Save to file or Save to USB depending on the printing method. Read more here about sending prints to the Ultimaker.\n\u2714 Tip: Check the print heads before printing for any plastic that is dripping off the hot ends because it can some times throw off the auto height calibration.\n\u2714 Tip: \u0007When printing with support, you have the option to select the extruder that you want to use to print the support structure. This allows you to print your model with PVA support, Breakaway support or build material support on your Ultimaker S5.\n\u2714 Tip: If you create a dual-color print you have to assign material colors to the models and merge the models before finishing your slice. For more instructions on how to use Ultimaker Cura, take a look at the Ultimaker Cura manual.", "step_imgs": ["https://cdn.instructables.com/FTY/0BS6/JTENDHXV/FTY0BS6JTENDHXV.LARGE.jpg"], "step_title": "Step 5: Software: Ultimaker Cura"}, {"step": 6, "steps_text": "Print Failures", "step_imgs": [], "step_title": "Step 6: Printing"}, {"step": 7, "steps_text": "Once your 3D print is finished it must be removed from the build plate.\n\u26a0Caution: When using a brim, be aware of the danger of cutting yourself when removing the print from the build plate.\n\u26a0Caution: Take the build plate out of the printer to avoid damaging the build plate clamps.\nWait for cool down\nIf you printed directly onto the build plate, simply allow the build plate and the print to cool down after printing. The material will contract as it cools, allowing you to easily remove the print from the build plate.\nUse a spatula If your print is still adhered to the build plate after cooling, you can use a spatula to remove the print. Place the spatula under the print, and keep it parallel to the build plate, and apply a small amount of force to remove the print.\nA spatula can also be used to carefully remove remaining parts of the print from the build plate, such as the brim or support structures.\nUse water\nIf you printed on the build plate with glue and if neither of the above methods work, remove your print using water.\nRemove the build plate with print from the printer. Be careful not to burn your fingers if the build plate is still warm.\nRun cool tap water on the back side of the plate to cool it quickly. The print material will contract more than with normal cool down.\nOnce cool, the print will pop off.\nAlternatively, you can run lukewarm water over the print side of the plate to dissolve the glue. Once the glue is dissolved, it is easier to remove the print.\nIf PVA was used, place the build plate and print in water to dissolve the PVA. This makes print removal easier.", "step_imgs": ["https://cdn.instructables.com/FNL/FX89/JTENDLSW/FNLFX89JTENDLSW.LARGE.jpg"], "step_title": "Step 7: Removing Your Print"}, {"step": 8, "steps_text": "If you did not use a support structure, you may still need to use a deburring tool to remove the brim around the base of the part.\nRemove Breakaway support\nPrints using Ultimaker Breakaway as support material will require post-processing to remove the support structures. This can be achieved by breaking the support structures from the build material.\n\u26a0Caution: It is advised to wear protective gloves when the support structure contains sharp corners or when working with bigger models.\n1. \u0007Tear the inner support structure\nStart by removing the walls of the support structure with a gripping plier. This allows you to quickly tear away the majority of the inner support structure.\n2. \u0007Pull the Breakaway support from the build material\nAfter removing most of the support structure, the remaining part(s) can be pulled from the build material. Use cutting pliers to grip the Breakaway support in a corner and try to carefully get underneath it, then bend it upwards. Repeat this for several corners, so that you can loosen the support from the model around the corners. After this, pull the Breakaway support from the model.\n3. \u0007Peel the last traces from the model\nSometimes a final layer of the support material remains after pulling the Breakaway support from the build material. If this happens, use cutting pliers to peel it off from a loose edge. Any leftover traces on the model can be removed with tweezers.\n\nDissolve PVA support\nPVA support structures can be removed by dissolving the PVA in water. This takes several hours and leaves no trace afterwards.\n1. \u0007Submerge the print in water\nBy putting a print with PVA in water the PVA will slowly dissolve.\n2. \u0007Rinse with water\nAfter PVA supports are totally dissolved, rinse the print with water to remove any excess PVA.\n3. \u0007Let the print dry\nLet the print dry completely and apply additional post-processing to the build material if desired.", "step_imgs": ["https://cdn.instructables.com/FP0/YEVA/JTENDM8T/FP0YEVAJTENDM8T.LARGE.jpg", "https://cdn.instructables.com/FHE/60DY/JTENDM9N/FHE60DYJTENDM9N.LARGE.jpg", "https://cdn.instructables.com/FYK/HL3T/JTENDMCG/FYKHL3TJTENDMCG.LARGE.jpg", "https://cdn.instructables.com/FWW/VV7D/JTENDMD9/FWWVV7DJTENDMD9.LARGE.jpg"], "step_title": "Step 8: Post Process"}], "channel": ""}, {"category": "", "description": "In this DIY project, I will assemble a 2K and 4K resolution projector using 3D printers and commercially available parts. I will provide a 3D print file when I am done.", "title": "Easily 3Dprint 2k 4k Uhd Projector Part 1:the Light Source", "url": "https://www.instructables.com/id/Easily-3Dprint-2k-4k-Uhd-Projector-Part-1the-Light/", "section": "technology", "steps": [{"step": 1, "steps_text": "Use 2 point LEDs: xhp70\nPaste it on the 3D printing bracket with instant glue and sand the back with a sandpaper", "step_imgs": ["https://cdn.instructables.com/F7R/Q9CA/JTENFD6G/F7RQ9CAJTENFD6G.LARGE.jpg", "https://cdn.instructables.com/FG0/NZIP/JTENFD7X/FG0NZIPJTENFD7X.LARGE.jpg", "https://cdn.instructables.com/FF7/OJVJ/JTENFD7V/FF7OJVJJTENFD7V.LARGE.jpg"], "step_title": "Step 1:"}, {"step": 2, "steps_text": "Each LED needs to use a constant current power supply separately, set the voltage to 6V, and set it to a constant current of 4.8A or less.", "step_imgs": ["https://cdn.instructables.com/F6G/ZLY6/JTENFD81/F6GZLY6JTENFD81.LARGE.jpg", "https://cdn.instructables.com/F7C/53MI/JTENFD9D/F7C53MIJTENFD9D.LARGE.jpg", "https://cdn.instructables.com/F6T/3SM1/JTENFD9U/F6T3SM1JTENFD9U.LARGE.jpg", "https://cdn.instructables.com/FTJ/7C19/JTENFD9V/FTJ7C19JTENFD9V.LARGE.jpg"], "step_title": "Step 2:"}, {"step": 3, "steps_text": "Each LED needs to use a constant current power supply separately, set the voltage to 6V, and set it to a constant current of 4.8A or less.", "step_imgs": ["https://cdn.instructables.com/FVY/PK4U/JTENFDA7/FVYPK4UJTENFDA7.LARGE.jpg", "https://cdn.instructables.com/FOU/YVIF/JTENFDA5/FOUYVIFJTENFDA5.LARGE.jpg", "https://cdn.instructables.com/FQJ/73IL/JTENFDA4/FQJ73ILJTENFDA4.LARGE.jpg"], "step_title": "Step 3:"}, {"step": 4, "steps_text": "It can be used as a flashlight after the battery is installed.", "step_imgs": ["https://cdn.instructables.com/FQ9/EVBZ/JTENFDAA/FQ9EVBZJTENFDAA.LARGE.jpg", "https://cdn.instructables.com/FVG/8SYV/JTENFDAH/FVG8SYVJTENFDAH.LARGE.jpg"], "step_title": "Step 4:"}, {"step": 5, "steps_text": "The interior of the 3D printed lampshade is sprayed with a reflective paint, and the Fresnel lens is placed, and the light source portion is completed.", "step_imgs": ["https://cdn.instructables.com/FUI/8CBP/JTENFDFR/FUI8CBPJTENFDFR.LARGE.jpg", "https://cdn.instructables.com/FCS/P560/JTENFDFE/FCSP560JTENFDFE.LARGE.jpg", "https://cdn.instructables.com/F0J/XPFK/JTENFDCY/F0JXPFKJTENFDCY.LARGE.jpg", "https://cdn.instructables.com/FCV/4WYJ/JTENFDAK/FCV4WYJJTENFDAK.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "It is already a handheld searchlight.\nTo be continued, thank you for watching", "step_imgs": ["https://cdn.instructables.com/FA1/FNRL/JTENFDIM/FA1FNRLJTENFDIM.LARGE.jpg", "https://cdn.instructables.com/FY7/RMIP/JTENFDJ8/FY7RMIPJTENFDJ8.LARGE.jpg"], "step_title": "Step 6:"}], "channel": ""}, {"category": "", "description": "In this IBLE, we\u2019ll take a quick tour of an IoT-powered model of a Desktop Garage Door Opener. The model simulates the workings of an actual garage door opener and I use it as a rig to test changes to the entire IoT system before I deploy them to the application that controls the garage door in my house.\nThis IBLE is one part of my book project. The book is titled Give Yourself IoT Super Powers and is available on Amazon Kindle.", "title": "An IoT-powered Desktop Garage Door Opener", "url": "https://www.instructables.com/id/An-IoT-powered-Desktop-Model-of-a-Garage-Door-Open/", "section": "technology", "steps": [{"step": 1, "steps_text": "The Desktop Geo Model was designed entirely using the free online design software Tinkercad. The image shows the overview of the entire design with identifiable components.\nThe parts for the model were printed out using ordinary PLA.\nCheck out a few video shorts on my YouTube channel.", "step_imgs": ["https://cdn.instructables.com/F8D/KVLY/JTENDLP3/F8DKVLYJTENDLP3.LARGE.jpg"], "step_title": "Step 1: The Design"}, {"step": 2, "steps_text": "Left to Right:\n1.\nThis is the aerial view of the assembled model. The WeMos D1 mini on the top-left is the heart of the model . The WeMos runs the Micro Web Server application that I can access via my cell phone or tablet to control the tiny door on the model.\nThe Servo motor on the bottom-right is powered by a separate 9V battery and moves the door to the open or closed position based on the user command received by the Web Server over local WiFi.\n2.\nAn LM2596 DC-to-DC Adjustable Step-down voltage regulator, or Buck converter has been used to step down the 9V input voltage from the battery into the 5V required by the SG-90 Servo.\n3.\nA small switch soldered in line with the power wire from the battery turns the power to the voltage regulator on or off. When not in use, this switch is in the off position.\n4.\nThe core electronics have been set up on small bread board mounted on to the top-side Cross Brace of the model.", "step_imgs": ["https://cdn.instructables.com/F7X/VRS2/JTENDJV5/F7XVRS2JTENDJV5.LARGE.jpg", "https://cdn.instructables.com/FU7/SNNN/JTENDJV7/FU7SNNNJTENDJV7.LARGE.jpg", "https://cdn.instructables.com/FW2/9UM6/JTENDJVE/FW29UM6JTENDJVE.LARGE.jpg", "https://cdn.instructables.com/FWH/SRIG/JTENDJW8/FWHSRIGJTENDJW8.LARGE.jpg"], "step_title": "Step 2: The Aerial View and Electronics"}, {"step": 3, "steps_text": "Left to Right:\n1.\nThe little SG-90 Servo motor is mounted on the Servo Mount Post . One of the screws that holds the servo mounting bracket to the mount post also holds up the Buck converter.\n2.\nThe Servo horn is attached to the Servo on one end, and the drive shaft on the other end.\n3.\nA double-ended horn locks into both the slots of the Drive Lock Ring to better transmit power from the Servo to the door. This horn also comes as part of the SG-90 package.\n4.\nThe door is mounted between two slotted flanges on either end . One of them is screwed on to the drive pin driven by the Servo motor.\n5. Why the Relay?\nThe little SG-90 servo does not require a relay and can be driven directly by the WeMos D1 mini. But the real garage door opener is triggered by the WeMos via a Relay!\nTherefore, I\u2019ve opted to wire the servo power line from the output of the Buck converter through a Relay. The WeMos turns the power on to the servo before moving the door and then cuts power soon after the door moves to the required position. This arrangement is similar to how the real garage door is wired to the IoT Server.", "step_imgs": ["https://cdn.instructables.com/FKC/GHNV/JTENDJY9/FKCGHNVJTENDJY9.LARGE.jpg", "https://cdn.instructables.com/FN7/Y5UW/JTENDJYA/FN7Y5UWJTENDJYA.LARGE.jpg", "https://cdn.instructables.com/FHY/56EG/JTENDJZ4/FHY56EGJTENDJZ4.LARGE.jpg", "https://cdn.instructables.com/FB5/EJ8O/JTENDJZY/FB5EJ8OJTENDJZY.LARGE.jpg", "https://cdn.instructables.com/FP9/SRA8/JTENDK49/FP9SRA8JTENDK49.LARGE.jpg"], "step_title": "Step 3: The Servo Drive System"}, {"step": 4, "steps_text": "Here\u2019s a shot of the model with the garage door swiveled to the Open position.\nThe two side walls of the model have been held on to the base with four L-angled brackets as shown . The separation distance between the inside faces of the walls is 115 mm.\nThe entire model is mounted on to three pieces of scrap wood. These sections of wood couldn\u2019t be glued together as I did not have clamps wide enough. Therefore, three 3D printed brackets (in Black, third image) were used to hold the wood in formation and screwed in place to these brackets.\nHowever, this is purely an optional arrangement because the base you might be using may be one solid piece of wood.", "step_imgs": ["https://cdn.instructables.com/FUG/GH3T/JTENDK22/FUGGH3TJTENDK22.LARGE.jpg", "https://cdn.instructables.com/FMV/ZDAH/JTENDK1C/FMVZDAHJTENDK1C.LARGE.jpg", "https://cdn.instructables.com/FN7/2URG/JTENDK00/FN72URGJTENDK00.LARGE.jpg"], "step_title": "Step 4: The Desktop Model"}, {"step": 5, "steps_text": "From Left to Right:\n1.\nA KY-025 Reed Switch Module is mounted above the door senses the door position in real time. A magnet mounted on the door moves closer or away from the switch. The switch is triggered by the magnetic field and sends this information to the Web Server.\n2.\nThis second image shows the KY-025 triggered by the little Black magnet on the door in the closed position . Both on-board LEDs are On indicating that the switch was activated when the door closed.\n3.\nIn contrast, the KY-025 is deactivated when the door swings to the open position in the third image.\nTo see this in action, check out this video short on my channel!\nIgnoring Repeat User Requests\nThe KY-025 switch helps in making the door control a bit more than a simple open/close affair. The server uses the feedback from the switch to take no action if the user repeats a request.\nIn this example, the close button is hit twice, but the door is already closed as shown by the first browser screen shot.\nWhen the Close button is hit the second time, the user gets an informational message stating that no action was taken by the Server because the request was repeated. Consequently, the door remains closed.\nA similar thing happens when the Open button is hit twice.\nWatch this short demo of the smart door feature.", "step_imgs": ["https://cdn.instructables.com/FPS/0BWT/JTENDK23/FPS0BWTJTENDK23.LARGE.jpg", "https://cdn.instructables.com/FWP/59C3/JTENDK3J/FWP59C3JTENDK3J.LARGE.jpg", "https://cdn.instructables.com/FDT/VPVH/JTENDK2T/FDTVPVHJTENDK2T.LARGE.jpg", "https://cdn.instructables.com/F8C/KFXE/JTENDQ5Y/F8CKFXEJTENDQ5Y.LARGE.jpg", "https://cdn.instructables.com/FZP/1GQ0/JTENDQ66/FZP1GQ0JTENDQ66.LARGE.jpg"], "step_title": "Step 5: Smart System - Sensing Door Position in Real Time"}, {"step": 6, "steps_text": "The IoT Server maintains a White list of device IPs that are allowed access to the IoT Web Server.\nThis way, when users outside the household get on to local WiFi they're by default not on the White list and therefore will not have access to the IoT Web Server. Therefore, all users not on the White list will get an Unauthorized page if they try to access the IoT Web Server.\nThis is one line of defense applied to the system because it does not control a table lamp, but a Garage Door that opens up your house to the world!\nWatch this feature in action on my channel.", "step_imgs": ["https://cdn.instructables.com/FCJ/ANRL/JTENDQ87/FCJANRLJTENDQ87.LARGE.jpg"], "step_title": "Step 6: Regulating Access to the IoT Server"}, {"step": 7, "steps_text": "In the order of images posted in this step:\n1.\nA 4-foot view of the actual set up in my garage. The forward right of the image shows the WeMos D1 mini and the Relay mounted in proximity of the Craftsman Garage Door Opener. The wires from the mini are routed across the ceiling to the KY-025 positioned atop the garage door on the far-left very close to a magnet. The magnet is stuck to the door with double-sided tape and rolls in and out from under the KY-025 turning it ON or OFF in the process.\n2.\nA closeup of the WeMos D1 and relay installation . The rubber strap is there to hold a few wires down and as an added measure to hold the WeMos down in its case.\n3.\nA pre-installation closeup of how the 3D printed Ceiling Bracket and the WeMos case come together. The Relay is mounted to the Ceiling Bracket and is wired to the mini. Note that the male headers pins are accessible on the WeMos board even after it\u2019s closed inside the case.\n4.\nA close up of the KY-025 set up. The donut magnet is taped on to the top face of the garage door with double-sided tape. Note that the Reed switch hovers on top of the magnet and stays clear of the garage door so that the door does not crash into the KY-025 Reed switch and damage it or its mount!\n5. and 6.\nThe Reed switch is passive as the door remains closed most of the time.\nThe switch is activated when the door is open. As seen, the magnet on the door is in close proximity to the switch.\n7.\nArrows in the design sketch of the KY-025 Reed mount indicate various ways in which the Reed switch could be adjusted to be in proximity of the magnet when the door rolls up to the ceiling and comes to a stop. Based on the location, a longer arm (in Blue) could be used to extend the Reed switch closer to the magnet.", "step_imgs": ["https://cdn.instructables.com/FMP/O7X0/JTENDK6C/FMPO7X0JTENDK6C.LARGE.jpg", "https://cdn.instructables.com/FCH/QJAJ/JTENDK6E/FCHQJAJJTENDK6E.LARGE.jpg", "https://cdn.instructables.com/FNR/TK8V/JTENDK7Y/FNRTK8VJTENDK7Y.LARGE.jpg", "https://cdn.instructables.com/FY3/0BEH/JTENDK9K/FY30BEHJTENDK9K.LARGE.jpg", "https://cdn.instructables.com/F68/PX6Y/JTENDKAW/F68PX6YJTENDKAW.LARGE.jpg", "https://cdn.instructables.com/FVH/D82D/JTENDKD5/FVHD82DJTENDKD5.LARGE.jpg", "https://cdn.instructables.com/FD6/3HV9/JTENDKDX/FD63HV9JTENDKDX.LARGE.jpg"], "step_title": "Step 7: The Onsite Installation Tour"}, {"step": 8, "steps_text": "This entire project is detailed in my Book titled Give Yourself IoT Super Powers available in the Amazon Kindle Store.\nIn this book I discuss how this project has been put together by assembling small units of functionality (requiring the most fundamental knowledge) into a larger application. The code covered in this book can be downloaded along with the parts required to put the Desktop model together.\nIn addition, there is a document that illustrates the steps required to assemble the Desktop model.\nThe last Chapter of this book will explore more ideas and enhancements that readers can take on to better fine tune their project and make it more advanced.\nI hope you have fun reading my book and building the project!", "step_imgs": ["https://cdn.instructables.com/FMU/K04B/JTON5WZI/FMUK04BJTON5WZI.LARGE.jpg"], "step_title": "Step 8: Get the Book!"}], "channel": ""}, {"category": "", "description": "This project is based on a research work developed at the University of California, Berkeley by Richard Zhang, Phillip Isola, and Alexei A. Efros. Colorful Image Colorization.\nThe idea of this tutorial will be to develop a fully automatic approach that will generate realistic colorizations of Black & White (B&W) photos and by extension, videos. As explained in the original paper, the authors, embraced the underlying uncertainty of the problem by posing it as a classification task using class-rebalancing at training time to increase the diversity of colors in the result. The Artificial Intelligent (AI) approach is implemented as a feed-forward pass in a CNN (\" Convolutional Neural Network\") at test time and is trained on over a million color images.\nHere a photo shoot on 1906, showing one of the first tests with Santos Dumont's plane \"14-bis\" in Paris:\nAnd its colorized version using the models developed using these AI technics:\nThe same technics could be applied to old videos. Here a 1932 B&W footage of the city of Rio de Janeiro, Brazil:\nAnd the colorized version:", "title": "Colorizing Old B&W Photos and Videos With the Help of AI", "url": "https://www.instructables.com/id/Colorizing-Old-BW-Photos-and-Videos-With-the-Help-/", "section": "technology", "steps": [{"step": 1, "steps_text": "Usually, we are used to coding a color photo using the RGB model. The RGB color model is an additive color model in which red, green and blue light are added together in various ways to reproduce a broad array of colors. The name of the model comes from the initials of the three additive primary colors, red, green, and blue.\nBut, the model that will be used on this project is the \"Lab\".\nThe CIELAB color space (also known as CIE L*a*b* or sometimes abbreviated as simply \"Lab\" color space) is a color space defined by the International Commission on Illumination (CIE) in 1976. It expresses color as three numerical values, L* for the lightness and a* and b* for the green\u2013red and blue-yellow color components.\nThe color space L * a * b * was created after the theory of opposing colors, where two colors cannot be green and red at the same time, or yellow and blue at the same time. CIELAB was designed to be perceptually uniform with respect to human color vision, meaning that the same amount of numerical change in these values corresponds to about the same amount of visually perceived change.\nUnlike the RGB color model, Lab color is designed to approximate human vision. It aspires to perceptual uniformity, and its L component closely matches human perception of lightness. The L component is exactly what is used as input of the AI model, that was train to estimate the remained components, \"a\" and \"b\".", "step_imgs": [], "step_title": "Step 1: Lab Color Space"}, {"step": 2, "steps_text": "As commented on the introduction, the Artificial Intelligent (AI) approach is implemented as a feed-forward pass in a CNN (\" Convolutional Neural Network\") at test time and is trained on over a million color images. In other words, millions of color photos were decomposed using Lab model and used as an input feature (\"L\") and classification labels (\"a\" and \"b\"). For simplicity let's split in two: \"L\" and \"a+b\" as shown in the block diagram:\nHaving the trained model (that is available publically), we can use it to colorize a new B&W foto, where this photo will be the input of the model or the component \"L\". The output of the model will be the other components \"a\" and \"b\", that once added to the original \"L\", will return a full colorized photo as shown here:\nIn short, using a broad and diverse set of objects and scenes dataset of 1.3 Millon photos from ImageNet and applying a Deep Learning algorithm (Feed-Forward CNN), final models were generated and are available at:\nZhang et al - Colorful Image Colorization - models", "step_imgs": [], "step_title": "Step 2: The AI (Deep Learning) Process"}, {"step": 3, "steps_text": "The first thing to do is to organize an environment where we will work. Let's create a folder and name it:\nPhoto_Video_Colorization\nUnder this main created directory, let's create sub-folders:\nmodel\ninput_images\ninput_videos\ncolorized_images\ncolorized_frames\ncolorized_videos\nGo to Zhang et al - Colorful Image Colorization - models and download the 3 files and load them at the created subfolder \"/model\". The files are:\ncolorization_release_v2.caffemodel\ncolorization_release_v2_norebal.caffemodel\ncolorization_release_v1.caffemodel\nI will assume that you have Python (version 3.6) and OpenCV (4.0) installed in your machine. We will describe step by step all the process of colorization using Jupyter Notebooks. I recommend that you follow my explanation, but if you want, you can go and download the notebooks and test photos from my GitHub:\nPhoto_Video_Colorization\nI also recommend that you review the great tutorial \" Black and white image colorization with OpenCV and Deep Learning\" by Dr. Adrian Rosebrok, that was the inspiration and guide for this project.", "step_imgs": ["https://cdn.instructables.com/FLH/HZDI/JTENDEHH/FLHHZDIJTENDEHH.LARGE.jpg"], "step_title": "Step 3: The Working Envirolment"}, {"step": 4, "steps_text": "Each one of the following steps is a specific cell at Jupyter notebook.\n1. Import important Libraries:\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport cv2\n2. Define Image to be colorized:\nIMAGE = \"soldiers_1941\"\nNote: You can use any photo here. In this case, I use a 1941 B&W photo of soldiers at WWII. The photo is available on my GitHub.\n3. Define Model Paths:\nprototxt = \"./model/colorization_deploy_v2.prototxt\"\nmodel = \"./model/colorization_release_v2.caffemodel\"\npoints = \"./model/pts_in_hull.npy\"\nimage =  \"./input_images/\"+IMAGE\n4. Load serialized black and white colorizer model and cluster:\nnet = cv2.dnn.readNetFromCaffe(prototxt, model)\npts = np.load(points)\n5. Add the cluster centers as 1x1 convolutions to the model:\nclass8 = net.getLayerId(\"class8_ab\")\nconv8 = net.getLayerId(\"conv8_313_rh\")\npts = pts.transpose().reshape(2, 313, 1, 1)\nnet.getLayer(class8).blobs = [pts.astype(\"float32\")]\nnet.getLayer(conv8).blobs = [np.full([1, 313], 2.606, dtype=\"float32\")]\n6. Load the input image, scale it and convert it to Lab:\nNote that we will first convert the image to grayscale. This step is not really necessary, but I realize that some B&W photos, especially the old ones, could have some treatment during the years, so, better to clean them a little.\nimage = cv2.imread(image)\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\nimage = cv2.cvtColor(image, cv2.COLOR_GRAY2RGB)\nAt this point, we have our original image, but in order to show it straight on a Jupyter cell, we should use a pyplot library :\nplt.imshow(image)\nplt.axis('off');\n7. Extracting \"L\":\nNow, let's take our \" image\" and proceed with the colorization process, where first should be rescaled, converted to Lab in order to extract the component \"L\" and center it:\nscaled = image.astype(\"float32\") / 255.0\nlab = cv2.cvtColor(scaled, cv2.COLOR_RGB2LAB)\nresized = cv2.resize(lab, (224, 224))\nL = cv2.split(resized)[0]\nL -= 50\n8. Predicting \"a\" and \"b\":\nnet.setInput(cv2.dnn.blobFromImage(L))\nab = net.forward()[0, :, :, :].transpose((1, 2, 0))\nab = cv2.resize(ab, (image.shape[1], image.shape[0]))\n9. Creating a colorized Lab photo (L + a + b):\nL = cv2.split(lab)[0]\ncolorized = np.concatenate((L[:, :, np.newaxis], ab), axis=2)\nSame as we did with the grayscaled image, let's check how the colorized image looks like:\nplt.imshow(colorized)\nplt.axis('off');\nplt.title('colorized LAB image');\nOps, seems that Lab image cannot tell us much, let's convert it to RGB and see the result:\n10. Converting to RGB:\ncolorized = cv2.cvtColor(colorized, cv2.COLOR_LAB2RGB)\ncolorized = np.clip(colorized, 0, 1)\ncolorized = (255 * colorized).astype(\"uint8\")\nplt.imshow(colorized)\nplt.axis('off');\nUau! Pretty amazing!!!!! This is a 1941 photo that seems to really be shot in full colors! Let's save it:\n11. Saving the final RGB photo:\ncv2.imwrite(\"./colorized_images/Color_\"+IMAGE, cv2.cvtColor(colorized, cv2.COLOR_RGB2BGR))\nOne more: Charles Darwin visiting Rio in 1832:\nGreat!!!! Try with other B&W photos and see how amazing Artificial Intelligence can be!", "step_imgs": ["https://cdn.instructables.com/F20/H2SE/JTENDONY/F20H2SEJTENDONY.LARGE.jpg"], "step_title": "Step 4: Black & White Photo Colorization"}, {"step": 5, "steps_text": "Once we colorized photos, colorize videos is not a complicated task. We must follow the following general steps:\nGet B&W footage and load it on input_video/ subdirectory\nRead the video one frame at a time\nHaving a single frame, apply what we did for a photo\nHaving a colorized frame, save it on another subfolder: colorized_video_frames\nClose the OpenCv windows.\nLet's do a real case:\nDownload the notebook B_W_Video_Colorization.ipynb from my GitHub.\nThe first test that I did, was to download from Youtube a B&W movie, in this case :\nFor that, I used the free tool: VidPaw.\nApplying the steps described above, at the end we will have all colorized frames stored on the subfolder colorized_video_frames. Let's do it:\n1. Start defining the file that should be colorized (that should be at the input_video folder:\nVIDEO = \"rio_32.mp4\"\n2. Define Paths, constants, and video variables:\nprototxt = \"./model/colorization_deploy_v2.prototxt\"\nmodel = \"./model/colorization_release_v2.caffemodel\"\npoints = \"./model/pts_in_hull.npy\"\nvideo =  \"./input_video/\"+VIDEO\nwidth = 500\nvs = cv2.VideoCapture(video)\n3. Load and prepare models:\nnet = cv2.dnn.readNetFromCaffe(prototxt,model)\npts = np.load(points)\nclass8 = net.getLayerId(\"class8_ab\")\nconv8 = net.getLayerId(\"conv8_313_rh\")\npts = pts.transpose().reshape(2, 313, 1, 1)\nnet.getLayer(class8).blobs = [pts.astype(\"float32\")]\nnet.getLayer(conv8).blobs = [np.full([1, 313], 2.606, dtype=\"float32\")] \n4. Split video, frame by frame and apply model:\ncount = 0\nsuccess = True\nwhile success:\n success, frame = vs.read()\n if frame is None:\n  break\n\n frame = imutils.resize(frame, 500)\n frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n frame = cv2.cvtColor(frame, cv2.COLOR_GRAY2RGB)\n scaled = frame.astype(\"float32\") / 255.0\n lab = cv2.cvtColor(scaled, cv2.COLOR_RGB2LAB)\n\n resized = cv2.resize(lab, (224, 224))\n L = cv2.split(resized)[0]\n L -= 50\n    \n net.setInput(cv2.dnn.blobFromImage(L))\n ab = net.forward()[0, :, :, :].transpose((1, 2, 0))\n\n ab = cv2.resize(ab, (frame.shape[1], frame.shape[0]))\n L = cv2.split(lab)[0]\n colorized = np.concatenate((L[:, :, np.newaxis], ab), axis=2)\n\n colorized = cv2.cvtColor(colorized, cv2.COLOR_LAB2BGR)\n colorized = np.clip(colorized, 0, 1)\n colorized = (255 * colorized).astype(\"uint8\")\n\n cv2.imshow(\"Original\", frame)\n cv2.imshow(\"Colorized\", colorized)\n    \n cv2.imwrite(\"./colorized_video_frames/frame%d.jpg\" % count, colorized)\n count += 1\n key = cv2.waitKey(1) & 0xFF\n\n if key == ord(\"q\"):\n  break\n\nvs.release()\ncv2.destroyAllWindows()\nThe above loop process, usually takes a while. For example, the process of colorization of this video (8 minutes) having around of 14,000 frames took me around 3 hours on a MacBook Pro - 2.9GHz Core i7 with 16GB 2133MHz of RAM.\n5. Once you have the file with the frames, you must \"re-assemble\" it to create a video. The bellow function can do it:\ndef convert_frames_to_video(pathIn, pathOut, fps):\n    frame_array = []\n    files = [f for f in os.listdir(pathIn) if isfile(join(pathIn, f))]\n \n    #for sorting the file names properly\n    files.sort(key = lambda x: int(x[5:-4]))\n \n    for i in range(len(files)):\n        filename=pathIn + files[i]\n        #reading each files\n        img = cv2.imread(filename)\n        height, width, layers = img.shape\n        size = (width,height)\n        print(filename)\n        #inserting the frames into an image array\n        frame_array.append(img)\n \n    out = cv2.VideoWriter(pathOut,cv2.VideoWriter_fourcc(*'MJPG'), fps, size)\n \n    for i in range(len(frame_array)):\n        # writing to a image array\n        out.write(frame_array[i])\n    out.release()\nNote that depending on what Video Controler you have on your machine, the codec (*'MJPG'), should be changed. Please check with OpenCV documentation. At end would a \"try&error\" experience.\nNow, it only to apply the function on the colorized frames:\npathIn= './colorized_video_frames/'\npathOut = './colorized_videos/color_rio_32.avi'\nfps = 30.0\nconvert_frames_to_video(pathIn, pathOut, fps)\nThe resulting \"raw\" video can be seen here:\nNote that the video obviously has no sound. What I did was to strip the original sound from the B&W movie and add it to the colorized one, using iMovie. The result is here:\nThat's it! Very cool, isn't? ;-)", "step_imgs": [], "step_title": "Step 5: Colorizing Videos"}, {"step": 6, "steps_text": "Taking the opportunity to colorize old photos and videos, I decided to honor one of the great inventors of last century, Alberto Santos-Dumont.\nSantos-Dumont was a Brazilian inventor and aviation pioneer, one of the very few people to have contributed significantly to the development of both lighter-than-air and heavier-than-air aircraft.\nThe heir of a wealthy family of coffee producers, Santos-Dumont dedicated himself to aeronautical study and experimentation in Paris, where he spent most of his adult life. In his early career, he designed, built, and flew hot air balloons and early dirigibles, culminating in his winning the Deutsch de la Meurthe prize on 19 October 1901 for a flight that rounded the Eiffel Tower. He then turned to heavier-than-air machines and on 23 October 1906, his 14-is made the first powered heavier-than-air flight in Europe to be certified by the A\u00e9ro-Club de France and the F\u00e9d\u00e9ration A\u00e9ronautique Internationale. His conviction that aviation would usher in an era of worldwide peace and prosperity led him to freely publish his designs and forego patenting his various innovations.\nAbove you can appreciate some of the photos from the first decade of XX century that were colorized using the technics described in this tutorial. And below, a video collage is done. I hope you appreciate it.", "step_imgs": ["https://cdn.instructables.com/FI6/SOPN/JTIYDT2U/FI6SOPNJTIYDT2U.LARGE.jpg", "https://cdn.instructables.com/F4C/P2T5/JTIYDT6P/F4CP2T5JTIYDT6P.LARGE.jpg", "https://cdn.instructables.com/FZ6/J6X3/JTIYDT2D/FZ6J6X3JTIYDT2D.LARGE.jpg", "https://cdn.instructables.com/F1H/OK98/JTIYDT3D/F1HOK98JTIYDT3D.LARGE.jpg", "https://cdn.instructables.com/FZO/LVEJ/JTIYDT3U/FZOLVEJJTIYDT3U.LARGE.jpg", "https://cdn.instructables.com/FU4/PFPE/JTIYDT4B/FU4PFPEJTIYDT4B.LARGE.jpg"], "step_title": "Step 6: Homage to Santos Dumont"}, {"step": 7, "steps_text": "As always, I hope this project can help others find their way into the exciting world of technology!\nFor details and final code, please visit my GitHub repository: MJRoBot-Python4DS\nSaludos from the south of the world!\nSee you in my next instructable!\nThank you,\nMarcelo", "step_imgs": ["https://cdn.instructables.com/F8Y/193A/JGR21GEI/F8Y193AJGR21GEI.LARGE.jpg"], "step_title": "Step 7: Conclusion"}], "channel": ""}, {"category": "", "description": "In this instructable I will be showing you how to make your own Smart Contact Dispenser!", "title": "Smart Contact Lens Dispenser", "url": "https://www.instructables.com/id/Smart-Contact-Dispenser/", "section": "technology", "steps": [{"step": 1, "steps_text": "", "step_imgs": [], "step_title": "Step 1: Intro"}, {"step": 2, "steps_text": "If you wear contacts then you are probably familiar with the boxes that they come in. Most people I know, including myself, use these boxes as permanent storage and we take out our contacts as needed every day. This resulted in a stack of boxes in my bathroom that was driving me crazy. I knew there had to be a better way to organize these contacts so I went searching on the internet. After only finding a contact storage dispenser that someone was trying to sell for $25, I designed up some basic ones which can be found here.\nThey worked pretty great, but I couldn't help but feel annoyed that I had to pull each contact out individually so I looked into ways to have each contact automatically dispense into my hand. Since I had a ESP8266 laying around, I decided to order an OLED display so I could display the weather forecast while I am getting ready in the morning.\nIf you want to see more of the design process and them in action check out the video above. Please consider subscribing to my YouTube channel to support me and see more videos.", "step_imgs": ["https://cdn.instructables.com/FJ8/IFH4/JTEN34Z9/FJ8IFH4JTEN34Z9.LARGE.jpg"], "step_title": "Step 2: Background"}, {"step": 3, "steps_text": "For this project the items needed are the following:\n1. 5V Power Supply\n2. IR LED and Photodiode Pair\n3. 220 Ohm Resistor (2)\n4. 10K Resistor\n5. 10K Potentiometer\n5. LM358 Op-Amp\n6. 3.3V Zener Diode\n7. Basic LED\n8. OLED Display 0.96\"\n9. 470 uF Capacitor (2)\n10. 2 FS90R Servos (Or Mod SG90 Servos)\n11. Node MCU ESP8266\n12. Access to 3D Printer (Check your local library!)", "step_imgs": ["https://cdn.instructables.com/F6N/Q5KM/JTEN330V/F6NQ5KMJTEN330V.LARGE.jpg"], "step_title": "Step 3: Items Needed"}, {"step": 4, "steps_text": "Now that you have gathered all of the required components, it is time to start assembling everything together. I would recommend wiring everything up on a breadboard first and then once everything is functioning properly go ahead and solder everything up on a perf board.\nFor those that are unfamiliar with electronics or unsure of some of the components, trust me this circuit is not too bad. I will attempt to break it down below, and if you want to know more, check out the video linked.\nOn the left we have our IR Led and Photodiode which is connected to a LM358 operational amplifier. This is our proximity circuit which detects our hand underneath to let the controller know we want our contacts dispensed. The distance you want your hand to be detected can be adjusted using a 10K potentiometer. The output from this circuit is brought into our ESP8266 microcontroller which we will program using the Arduino IDE setup for the NodeMCU ESP8266. The program will wait for the input from the proximity circuit, then trigger the right servo, wait a second to allow you to move your hand to the left dispenser, and then trigger the left servo. This way both contacts will be dispensed into your hand. The ESP8266 will also be connected over WiFi which will enable us to use a weather API to display the weather forecast for the next few days on the OLED display. I started with just a weather forecast display but over time I will definitely be adding more features.", "step_imgs": ["https://cdn.instructables.com/FVJ/OPEM/JT4TQVT0/FVJOPEMJT4TQVT0.LARGE.jpg"], "step_title": "Step 4: Electronics"}, {"step": 5, "steps_text": "Since the electronics consisted of a servo, a few LEDs, power supply, and the rest of the circuit I went ahead and designed up our auto contact dispenser. I made it in several parts that will need to be glued or taped together because I didn't feel like possibly failing a super long print.\nThe base of our contact dispensor had two holes for out 5mm IR and Photodiode Leds, a cutout for a 5V power supply, and a cutout to allow the servos to be placed sideways as they are used to dispense contacts.\nThe contact storage remained similar to my previous design but I cutout a slot at the bottom for out servo wheel to turn freely. I also increased the size to allow more contacts to be stored getting rid of those stupid boxes once and for all.\nThe case for the OLED display and the electronics is pretty basic but since I used a standard 50 x 70 mm perf board, I designed a a slot for it to slide right into place.\nThe designs can be found on Thingiverse here.", "step_imgs": ["https://cdn.instructables.com/F55/0706/JT4TQVG5/F550706JT4TQVG5.LARGE.jpg", "https://cdn.instructables.com/FEP/P9G5/JT4TQVER/FEPP9G5JT4TQVER.LARGE.jpg", "https://cdn.instructables.com/FYN/IYV1/JT4TQVHI/FYNIYV1JT4TQVHI.LARGE.jpg"], "step_title": "Step 5: 3D Design and Print"}, {"step": 6, "steps_text": "In this step, I will show you how to program the ESP8266. The code is just a simple modification of the awesome ThingPulse esp8266 weather station (Github Link) weather example. You will also need to download the following packages to the Arduino IDE:\n1. ESPWifi\n2. ESPHTTPClient\n3. JsonListener\nOnce the libraries are installed, download the program below.\nYou will need to fill in you Wifi SSID, Wifi Password, signup for weather underground and receive your API key, and also find your location ID. Once all of these are entered into the code, go ahead an upload to your NodeMCU.", "step_imgs": ["https://cdn.instructables.com/FO3/60E2/JTEN35A3/FO360E2JTEN35A3.LARGE.jpg"], "step_title": "Step 6: Programming"}, {"step": 7, "steps_text": "In this step, we will put all of the components together.\nThis includes placing the servos in their slots, pushing the IR Led and Photodiodes into their holes, soldering up everything on a perf board, inserting the perf board into the printed slot, and connect all of the other components up.", "step_imgs": ["https://cdn.instructables.com/FWT/0XH5/JTEN391L/FWT0XH5JTEN391L.LARGE.jpg", "https://cdn.instructables.com/F2J/FPIV/JTEN390P/F2JFPIVJTEN390P.LARGE.jpg", "https://cdn.instructables.com/F3C/BZ0D/JTEN3915/F3CBZ0DJTEN3915.LARGE.jpg", "https://cdn.instructables.com/F6Y/H2LH/JTEN390C/F6YH2LHJTEN390C.LARGE.jpg"], "step_title": "Step 7: Putting It All Together"}, {"step": 8, "steps_text": "After you have connected all the 3D printed parts together and mounted it to the wall, it is time to put it to the test. Fill up the left and right side contact containers, plug in power, and after waiting for the OLED screen to boot up with your local weather and test it out!\nCheck out the video for it in action!", "step_imgs": [], "step_title": "Step 8: Test It Out!"}], "channel": ""}, {"category": "", "description": "Hi, Today I am making a egg turner for incubator , Birds need to rotate the egg to distribute the heat evenly and prevent the egg membrane from sticking to the shell which in artificial method by incubating the eggs need to rotate the egg by hand but this method often not suitable because of cracking of eggs sudden move could break the shell or spread bacteria through unhygienic handling and rotating eggs in incubation time,for this problem there is a method of turning the eggs by egg turner which reduced the workload and minimize the bacteria spreading.There are lot of egg turner in shapes in sizes but today I am making a roller egg turner which rotate the eggs evenly and takes small space,These egg turner are great tool in incubator system and easy to make.\nif you don't understand something please watch the video and If you like this tutorial please like,share and vote for this instructable. :)", "title": "Egg Turner Diy for Incubator", "url": "https://www.instructables.com/id/Eeg-Turner-for-Incubator/", "section": "technology", "steps": [{"step": 1, "steps_text": "Need 20\" of two wooden and two 15\" wooden , mark 1 inches from the start on 20\" and then start marking 4.5 inches 11 times make a hole in all of them in both 20\"\nAttach the 15\" to the sides of 20\" by screws and make a rectangle", "step_imgs": ["https://cdn.instructables.com/F01/SQ26/JTENAX5M/F01SQ26JTENAX5M.LARGE.jpg", "https://cdn.instructables.com/F87/RHFA/JTENAX6O/F87RHFAJTENAX6O.LARGE.jpg", "https://cdn.instructables.com/FE5/EWYA/JTENAX6U/FE5EWYAJTENAX6U.LARGE.jpg", "https://cdn.instructables.com/F3I/QAB1/JTENAX7O/F3IQAB1JTENAX7O.LARGE.jpg", "https://cdn.instructables.com/FAT/465U/JTENAX9W/FAT465UJTENAX9W.LARGE.jpg", "https://cdn.instructables.com/FFH/G9AQ/JTENAXBH/FFHG9AQJTENAXBH.LARGE.jpg", "https://cdn.instructables.com/FMN/F6UC/JTENAXCA/FMNF6UCJTENAXCA.LARGE.jpg", "https://cdn.instructables.com/F32/8982/JTENAXDB/F328982JTENAXDB.LARGE.jpg", "https://cdn.instructables.com/FOY/CCM2/JTENAXFK/FOYCCM2JTENAXFK.LARGE.jpg", "https://cdn.instructables.com/FOY/GYOT/JTENAXGE/FOYGYOTJTENAXGE.LARGE.jpg", "https://cdn.instructables.com/FCS/R4K5/JTENAXGG/FCSR4K5JTENAXGG.LARGE.jpg", "https://cdn.instructables.com/F04/PI34/JTENAXHZ/F04PI34JTENAXHZ.LARGE.jpg", "https://cdn.instructables.com/FV8/O35C/JTENAXKA/FV8O35CJTENAXKA.LARGE.jpg", "https://cdn.instructables.com/FP4/NV98/JTENAXLR/FP4NV98JTENAXLR.LARGE.jpg", "https://cdn.instructables.com/FDX/RP3Z/JTENAXM3/FDXRP3ZJTENAXM3.LARGE.jpg", "https://cdn.instructables.com/FNH/00B0/JTENAXM4/FNH00B0JTENAXM4.LARGE.jpg", "https://cdn.instructables.com/F1S/PW5U/JTENAXMW/F1SPW5UJTENAXMW.LARGE.jpg", "https://cdn.instructables.com/F7E/4Y2F/JTENAXNQ/F7E4Y2FJTENAXNQ.LARGE.jpg", "https://cdn.instructables.com/FJT/WM1E/JTENAXOL/FJTWM1EJTENAXOL.LARGE.jpg", "https://cdn.instructables.com/FYU/APOB/JTENAXRP/FYUAPOBJTENAXRP.LARGE.jpg", "https://cdn.instructables.com/FI5/G96R/JTENAXTA/FI5G96RJTENAXTA.LARGE.jpg", "https://cdn.instructables.com/F60/PD82/JTENAXU2/F60PD82JTENAXU2.LARGE.jpg", "https://cdn.instructables.com/F9C/QSAP/JTENAXZG/F9CQSAPJTENAXZG.LARGE.jpg", "https://cdn.instructables.com/FKI/WRPE/JTENAXWE/FKIWRPEJTENAXWE.LARGE.jpg", "https://cdn.instructables.com/FMC/T7VR/JTENAXXW/FMCT7VRJTENAXXW.LARGE.jpg", "https://cdn.instructables.com/F4R/I83D/JTENAY0Z/F4RI83DJTENAY0Z.LARGE.jpg", "https://cdn.instructables.com/F0A/8NOW/JTENAY2K/F0A8NOWJTENAY2K.LARGE.jpg", "https://cdn.instructables.com/FMA/MKXL/JTENAY3N/FMAMKXLJTENAY3N.LARGE.jpg"], "step_title": "Step 1:"}, {"step": 2, "steps_text": "Need another 15\" wooden pieces put them under the previous 15\" and attach them with screws", "step_imgs": ["https://cdn.instructables.com/FQ2/K5NO/JTENAY4S/FQ2K5NOJTENAY4S.LARGE.jpg", "https://cdn.instructables.com/FT2/L045/JTENAY7B/FT2L045JTENAY7B.LARGE.jpg", "https://cdn.instructables.com/FCN/6XD4/JTENAY8V/FCN6XD4JTENAY8V.LARGE.jpg", "https://cdn.instructables.com/FN3/U3IO/JTENAY91/FN3U3IOJTENAY91.LARGE.jpg", "https://cdn.instructables.com/FCE/IB03/JTENAYAO/FCEIB03JTENAYAO.LARGE.jpg", "https://cdn.instructables.com/FNB/C20X/JTENAYDM/FNBC20XJTENAYDM.LARGE.jpg", "https://cdn.instructables.com/F74/SBYD/JTENAYFL/F74SBYDJTENAYFL.LARGE.jpg", "https://cdn.instructables.com/FL8/MRGU/JTENAYI4/FL8MRGUJTENAYI4.LARGE.jpg", "https://cdn.instructables.com/FZR/492F/JTENAYNP/FZR492FJTENAYNP.LARGE.jpg"], "step_title": "Step 2:"}, {"step": 3, "steps_text": "Need 12 inches pvc pipe and it's end caps ,mark the center of cap and drill holes,take 2\" bolt and bolt and tighten it from the inside so the bolt comes out cap,do it same with other cap but this time use 1.5\" , put the caps on the pvc pipe.", "step_imgs": ["https://cdn.instructables.com/FXZ/JN9Q/JTENAYT9/FXZJN9QJTENAYT9.LARGE.jpg", "https://cdn.instructables.com/FH3/Z03U/JTENAYXK/FH3Z03UJTENAYXK.LARGE.jpg", "https://cdn.instructables.com/FL8/QOYJ/JTENAYZ0/FL8QOYJJTENAYZ0.LARGE.jpg", "https://cdn.instructables.com/FRC/D50X/JTENAZ0W/FRCD50XJTENAZ0W.LARGE.jpg", "https://cdn.instructables.com/FGQ/92EG/JTENAZ45/FGQ92EGJTENAZ45.LARGE.jpg", "https://cdn.instructables.com/FQ3/MMBN/JTENAZ6T/FQ3MMBNJTENAZ6T.LARGE.jpg", "https://cdn.instructables.com/FZM/KMGZ/JTENAZF1/FZMKMGZJTENAZF1.LARGE.jpg", "https://cdn.instructables.com/FI6/PDHS/JTENAZGL/FI6PDHSJTENAZGL.LARGE.jpg", "https://cdn.instructables.com/FNJ/64CG/JTENAZI2/FNJ64CGJTENAZI2.LARGE.jpg", "https://cdn.instructables.com/F99/PB1L/JTENAZIU/F99PB1LJTENAZIU.LARGE.jpg", "https://cdn.instructables.com/FCV/BLSK/JTENAZJM/FCVBLSKJTENAZJM.LARGE.jpg", "https://cdn.instructables.com/FGK/SYWK/JTENAZLT/FGKSYWKJTENAZLT.LARGE.jpg", "https://cdn.instructables.com/FVT/PFD2/JTENAZMU/FVTPFD2JTENAZMU.LARGE.jpg", "https://cdn.instructables.com/F85/9AAZ/JTENAZOL/F859AAZJTENAZOL.LARGE.jpg", "https://cdn.instructables.com/FZO/EO3E/JTENAZT9/FZOEO3EJTENAZT9.LARGE.jpg", "https://cdn.instructables.com/FHD/5ZP4/JTENAZVP/FHD5ZP4JTENAZVP.LARGE.jpg", "https://cdn.instructables.com/F1V/4QWU/JTENB02H/F1V4QWUJTENB02H.LARGE.jpg", "https://cdn.instructables.com/F6P/QCS0/JTENB072/F6PQCS0JTENB072.LARGE.jpg"], "step_title": "Step 3:"}, {"step": 4, "steps_text": "Cut the 1.5 inches lenght of L bracket and cut it in half ,place it over the 2\" bolt and tighten it so it stay at the end of bolt.", "step_imgs": ["https://cdn.instructables.com/F6L/IYQS/JTENB0AQ/F6LIYQSJTENB0AQ.LARGE.jpg", "https://cdn.instructables.com/FGQ/8LSU/JTENB0FX/FGQ8LSUJTENB0FX.LARGE.jpg", "https://cdn.instructables.com/FLL/NJFE/JTENB0JD/FLLNJFEJTENB0JD.LARGE.jpg", "https://cdn.instructables.com/FPA/2C70/JTENB0NE/FPA2C70JTENB0NE.LARGE.jpg", "https://cdn.instructables.com/FQQ/9ONG/JTENB0PY/FQQ9ONGJTENB0PY.LARGE.jpg", "https://cdn.instructables.com/F6I/H6CH/JTENB0UQ/F6IH6CHJTENB0UQ.LARGE.jpg", "https://cdn.instructables.com/F4N/C80I/JTENB0W7/F4NC80IJTENB0W7.LARGE.jpg", "https://cdn.instructables.com/FQH/U12W/JTENB12H/FQHU12WJTENB12H.LARGE.jpg", "https://cdn.instructables.com/FQ9/4E2J/JTENB18W/FQ94E2JJTENB18W.LARGE.jpg", "https://cdn.instructables.com/F5A/I4N0/JTENB1BK/F5AI4N0JTENB1BK.LARGE.jpg", "https://cdn.instructables.com/FIH/QF1V/JTENB1E9/FIHQF1VJTENB1E9.LARGE.jpg", "https://cdn.instructables.com/F43/Q8OK/JTENB1HP/F43Q8OKJTENB1HP.LARGE.jpg", "https://cdn.instructables.com/FY9/3WSI/JTENB1LD/FY93WSIJTENB1LD.LARGE.jpg", "https://cdn.instructables.com/FV2/DSBG/JTENB1M6/FV2DSBGJTENB1M6.LARGE.jpg", "https://cdn.instructables.com/FU7/CGD8/JTENB1NZ/FU7CGD8JTENB1NZ.LARGE.jpg", "https://cdn.instructables.com/FYO/TFJO/JTENB1OW/FYOTFJOJTENB1OW.LARGE.jpg", "https://cdn.instructables.com/F22/4R7O/JTENB1PP/F224R7OJTENB1PP.LARGE.jpg", "https://cdn.instructables.com/FW5/K77G/JTENB1QV/FW5K77GJTENB1QV.LARGE.jpg", "https://cdn.instructables.com/FDC/SCXL/JTENB1RO/FDCSCXLJTENB1RO.LARGE.jpg", "https://cdn.instructables.com/FFF/4IMD/JTENB1TQ/FFF4IMDJTENB1TQ.LARGE.jpg"], "step_title": "Step 4:"}, {"step": 5, "steps_text": "Make 11 pieces of pipes and put them in the holes and tighten them back with screws.", "step_imgs": ["https://cdn.instructables.com/FKU/TWHQ/JTENB1UO/FKUTWHQJTENB1UO.LARGE.jpg", "https://cdn.instructables.com/FV3/P9MC/JTENB20A/FV3P9MCJTENB20A.LARGE.jpg", "https://cdn.instructables.com/FYW/V9HT/JTENB20L/FYWV9HTJTENB20L.LARGE.jpg", "https://cdn.instructables.com/FBQ/FOGH/JTENB255/FBQFOGHJTENB255.LARGE.jpg", "https://cdn.instructables.com/FV8/VH6N/JTENB25Z/FV8VH6NJTENB25Z.LARGE.jpg", "https://cdn.instructables.com/F4A/6N4P/JTENB29G/F4A6N4PJTENB29G.LARGE.jpg", "https://cdn.instructables.com/F13/4W5X/JTENB2EH/F134W5XJTENB2EH.LARGE.jpg", "https://cdn.instructables.com/F61/J6Z1/JTENB2FB/F61J6Z1JTENB2FB.LARGE.jpg", "https://cdn.instructables.com/F3P/OXUO/JTENB2G7/F3POXUOJTENB2G7.LARGE.jpg", "https://cdn.instructables.com/FF3/TNBQ/JTENB2IA/FF3TNBQJTENB2IA.LARGE.jpg", "https://cdn.instructables.com/F8W/49L9/JTENB2JQ/F8W49L9JTENB2JQ.LARGE.jpg", "https://cdn.instructables.com/FXQ/9F89/JTENB2KV/FXQ9F89JTENB2KV.LARGE.jpg", "https://cdn.instructables.com/F6M/94NF/JTENB2MQ/F6M94NFJTENB2MQ.LARGE.jpg", "https://cdn.instructables.com/FBH/MOVQ/JTENB2PG/FBHMOVQJTENB2PG.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "Place Cutted L bracket on the ends and put 14\" narrow wooden over the it and mark the points where bolts are going placed ,make holes in them and put the narrow wood in those bolts and tighten it with nuts.", "step_imgs": ["https://cdn.instructables.com/FA4/HFFX/JTENB2WA/FA4HFFXJTENB2WA.LARGE.jpg", "https://cdn.instructables.com/FI4/BMK9/JTENB2YV/FI4BMK9JTENB2YV.LARGE.jpg", "https://cdn.instructables.com/FOE/508X/JTENB308/FOE508XJTENB308.LARGE.jpg", "https://cdn.instructables.com/FW3/MLT8/JTENB31O/FW3MLT8JTENB31O.LARGE.jpg", "https://cdn.instructables.com/F40/SBAU/JTENB33G/F40SBAUJTENB33G.LARGE.jpg", "https://cdn.instructables.com/FJY/5N1R/JTENB35N/FJY5N1RJTENB35N.LARGE.jpg", "https://cdn.instructables.com/FLW/V62I/JTENB377/FLWV62IJTENB377.LARGE.jpg", "https://cdn.instructables.com/F7P/K84Q/JTENB3BM/F7PK84QJTENB3BM.LARGE.jpg", "https://cdn.instructables.com/FTR/6LZC/JTENB3CF/FTR6LZCJTENB3CF.LARGE.jpg", "https://cdn.instructables.com/F07/5JTE/JTENB3E6/F075JTEJTENB3E6.LARGE.jpg", "https://cdn.instructables.com/FEX/1OHY/JTENB3GQ/FEX1OHYJTENB3GQ.LARGE.jpg", "https://cdn.instructables.com/F0W/D9Z0/JTENB3HH/F0WD9Z0JTENB3HH.LARGE.jpg", "https://cdn.instructables.com/FCY/UDLU/JTENB3HL/FCYUDLUJTENB3HL.LARGE.jpg", "https://cdn.instructables.com/FWQ/RZ4C/JTENB3HX/FWQRZ4CJTENB3HX.LARGE.jpg", "https://cdn.instructables.com/FK5/FF9X/JTENB3WY/FK5FF9XJTENB3WY.LARGE.jpg", "https://cdn.instructables.com/FZW/3403/JTENB3MF/FZW3403JTENB3MF.LARGE.jpg", "https://cdn.instructables.com/FSG/DAJT/JTENB41D/FSGDAJTJTENB41D.LARGE.jpg", "https://cdn.instructables.com/FMW/85HD/JTENB4A2/FMW85HDJTENB4A2.LARGE.jpg"], "step_title": "Step 6:"}, {"step": 7, "steps_text": "I am using asmo motor because of it's shaft size is attachable with the pvc pipe connector , put 1 inches connector over it and tighten it with the screws put the motor over the center roller pipe and mark it under half inches from connector, take it out and cut from the mark and place it in the connector and put it back in place.", "step_imgs": ["https://cdn.instructables.com/FSC/VWOE/JTENB4MK/FSCVWOEJTENB4MK.LARGE.jpg", "https://cdn.instructables.com/FKB/I7AQ/JTENB4O1/FKBI7AQJTENB4O1.LARGE.jpg", "https://cdn.instructables.com/FZJ/24JA/JTENB4QE/FZJ24JAJTENB4QE.LARGE.jpg", "https://cdn.instructables.com/FIE/BO6H/JTENB4RL/FIEBO6HJTENB4RL.LARGE.jpg", "https://cdn.instructables.com/FLT/L3T1/JTENB4U7/FLTL3T1JTENB4U7.LARGE.jpg", "https://cdn.instructables.com/F4K/5DUR/JTENB4UC/F4K5DURJTENB4UC.LARGE.jpg", "https://cdn.instructables.com/FCY/5N9Z/JTENB50L/FCY5N9ZJTENB50L.LARGE.jpg", "https://cdn.instructables.com/F8W/GLB6/JTENB538/F8WGLB6JTENB538.LARGE.jpg", "https://cdn.instructables.com/FLN/UV11/JTENB556/FLNUV11JTENB556.LARGE.jpg", "https://cdn.instructables.com/FR8/4TSB/JTENB586/FR84TSBJTENB586.LARGE.jpg", "https://cdn.instructables.com/FVO/FJOT/JTENB5AF/FVOFJOTJTENB5AF.LARGE.jpg", "https://cdn.instructables.com/F48/RVK9/JTENB5CD/F48RVK9JTENB5CD.LARGE.jpg", "https://cdn.instructables.com/F2K/7IR1/JTENB5G7/F2K7IR1JTENB5G7.LARGE.jpg", "https://cdn.instructables.com/FO1/6JTG/JTENB5IY/FO16JTGJTENB5IY.LARGE.jpg", "https://cdn.instructables.com/FSU/TZHO/JTENB5L7/FSUTZHOJTENB5L7.LARGE.jpg", "https://cdn.instructables.com/F2L/RJ4G/JTENB5NI/F2LRJ4GJTENB5NI.LARGE.jpg", "https://cdn.instructables.com/FTI/6E9B/JTENB5PI/FTI6E9BJTENB5PI.LARGE.jpg", "https://cdn.instructables.com/F3X/FN0H/JTENB5PS/F3XFN0HJTENB5PS.LARGE.jpg", "https://cdn.instructables.com/F4J/7LM0/JTENB5RG/F4J7LM0JTENB5RG.LARGE.jpg", "https://cdn.instructables.com/F1N/1LYM/JTENB5SD/F1N1LYMJTENB5SD.LARGE.jpg", "https://cdn.instructables.com/FAD/22W1/JTENB65B/FAD22W1JTENB65B.LARGE.jpg", "https://cdn.instructables.com/F2L/GXZG/JTENB68V/F2LGXZGJTENB68V.LARGE.jpg", "https://cdn.instructables.com/FWC/QCAS/JTENB6GQ/FWCQCASJTENB6GQ.LARGE.jpg", "https://cdn.instructables.com/FM5/WB69/JTENB6IX/FM5WB69JTENB6IX.LARGE.jpg", "https://cdn.instructables.com/FE5/70Z8/JTENB6LI/FE570Z8JTENB6LI.LARGE.jpg"], "step_title": "Step 7:"}, {"step": 8, "steps_text": "Take 3 inches length wood place it on the back of where motor will attach secure it from the bottom then place motor over it and secure it with screws.", "step_imgs": ["https://cdn.instructables.com/FXU/YGUM/JTENB6MD/FXUYGUMJTENB6MD.LARGE.jpg", "https://cdn.instructables.com/FSQ/9P3T/JTENB6PN/FSQ9P3TJTENB6PN.LARGE.jpg", "https://cdn.instructables.com/FO6/834J/JTENB6SP/FO6834JJTENB6SP.LARGE.jpg", "https://cdn.instructables.com/FA0/8DCI/JTENB6TM/FA08DCIJTENB6TM.LARGE.jpg", "https://cdn.instructables.com/F3F/8N1Z/JTENB6U5/F3F8N1ZJTENB6U5.LARGE.jpg", "https://cdn.instructables.com/F80/FUCN/JTENB6V5/F80FUCNJTENB6V5.LARGE.jpg", "https://cdn.instructables.com/FLH/F7LI/JTENB6XO/FLHF7LIJTENB6XO.LARGE.jpg", "https://cdn.instructables.com/FSV/73FN/JTENB6ZT/FSV73FNJTENB6ZT.LARGE.jpg", "https://cdn.instructables.com/FDR/AWY4/JTENB70X/FDRAWY4JTENB70X.LARGE.jpg", "https://cdn.instructables.com/FYD/BBST/JTENB722/FYDBBSTJTENB722.LARGE.jpg", "https://cdn.instructables.com/F6S/4O52/JTENB72L/F6S4O52JTENB72L.LARGE.jpg", "https://cdn.instructables.com/FHU/262Q/JTENB73T/FHU262QJTENB73T.LARGE.jpg", "https://cdn.instructables.com/FF8/TBIU/JTENB76P/FF8TBIUJTENB76P.LARGE.jpg", "https://cdn.instructables.com/FCF/2CFS/JTENB76U/FCF2CFSJTENB76U.LARGE.jpg"], "step_title": "Step 8:"}, {"step": 9, "steps_text": "Testing on the objects as they are moving smoothly and then placing eggs as they are rolling smoothly.\nIf you like this tutorial please vote for it.", "step_imgs": ["https://cdn.instructables.com/F8L/XRX0/JTENB78U/F8LXRX0JTENB78U.LARGE.jpg", "https://cdn.instructables.com/FJ1/VB51/JTENB7BI/FJ1VB51JTENB7BI.LARGE.jpg", "https://cdn.instructables.com/F8M/BHMP/JTENB7CJ/F8MBHMPJTENB7CJ.LARGE.jpg", "https://cdn.instructables.com/F9X/APG9/JTENB7EL/F9XAPG9JTENB7EL.LARGE.jpg", "https://cdn.instructables.com/F2B/NUT3/JTENB7HF/F2BNUT3JTENB7HF.LARGE.jpg"], "step_title": "Step 9:"}], "channel": ""}, {"category": "", "description": "You might have come across the Jitterbug Earth model I made for the Remix competition a few weeks ago https://www.instructables.com/id/Buckminster-Full... this took a geometric representation of the Earth and introduced some hinges so that the shape could expand and change\nIn researching and thinking about that model and where it could go further I found some really interesting papers and ideas that I'd like to share along with some of my models I used to try and wrap my head around the ideas as I think they've been under-utilised and might lead to some interesting practical (and entertainingly impractical) applications", "title": "Generalising the Jitterbug - Deployable Structures Using Geometry", "url": "https://www.instructables.com/id/Generalising-the-Jitterbug-Deployable-Structures-U/", "section": "technology", "steps": [{"step": 1, "steps_text": "Researching the Jitterbug transformation I came across a really cool paper that takes the Jitterbug idea and runs with it https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa...\nGo download it - it'll have your head sparking with ideas for days. Joseph Clinton worked with Buckminster-Fuller and has a fascinating career in his own right https://en.wikipedia.org/wiki/Joseph_Clinton and does a nice talk about these ideas and more at https://m.youtube.com/watch?v=J19eV7Z1x3M", "step_imgs": ["https://cdn.instructables.com/FBG/XLMY/JSL33VZ0/FBGXLMYJSL33VZ0.LARGE.jpg", "https://cdn.instructables.com/FO8/ACA9/JSL34PXX/FO8ACA9JSL34PXX.LARGE.jpg"], "step_title": "Step 1: First Step in Doing Anything Cool - Find Someone Smarter Than You Who Has Done All of the Hard Thinking"}, {"step": 2, "steps_text": "In that NASA paper Clinton describes different ways of expanding tessellated shapes as a potential way to pack down and unfold structures - what was called \"The Geometric Transformation Concept\"\nThis concept was then described in both 2D and 3D\nA tessellation is essentially any arrangement of shapes that fit neatly together to cover a surface - this could be regular like a checkerboard pattern with squares or more complicated with a mix of shapes\nTransformations were described as adding animation and expansion to a tessellation. You can imagine that if you have an area covered in square tiles. If you were to rotate the square tiles a quarter turn (what he called a Face transformation) as in sketch (1) but keep the connections or relationships between corners labelled A you'd get an expansion.\nIn sketch (2) I've added 12 oval marks to show where you could place hinges between corners to achieve this\nThe paper then build further on this by showing that you needn't keep the relationship between immediately touching corners - as in sketch (3) you could have 12 struts that connect corners not to their immediate neighbour but one further along (what was termed an Edge transformation)\nYou can go further and further with this idea with other shapes and possible connections between them (Vertex transformation)", "step_imgs": ["https://cdn.instructables.com/FXK/RFXJ/JTENHV58/FXKRFXJJTENHV58.LARGE.jpg"], "step_title": "Step 2: Tessellations and Adding Moves to the Jitterbug - Different Shapes and Connections"}, {"step": 3, "steps_text": "The Clinton paper described this tessellation idea and applied it not just to shapes covering a flat plan but also to 3D shapes and set out a whole series of possible transformations\ne.g. Face Transformations:\ntetrahedron -> octahedron\noctahedron -> icosahedron -> hexoctahedron (the original jitterbug)\nhexahedron -> hexoctahedron\nicosahedron -> icosadodecahedron\ndodecahedron -> icosadodecahedron\nYou can see from his diagram and the resulting models that the Face rotation translation is the original Jitterbug while changing the connections between corners gives a whole new scope", "step_imgs": ["https://cdn.instructables.com/FO1/NM02/JTENHXUD/FO1NM02JTENHXUD.LARGE.jpg", "https://cdn.instructables.com/FQD/HSG0/JSL33VYC/FQDHSG0JSL33VYC.LARGE.jpg", "https://cdn.instructables.com/FGZ/DVHY/JSL33VZL/FGZDVHYJSL33VZL.LARGE.jpg", "https://cdn.instructables.com/F3M/SIHS/JTEN8RNS/F3MSIHSJTEN8RNS.LARGE.jpg", "https://cdn.instructables.com/FP8/FXCR/JTEN8RKT/FP8FXCRJTEN8RKT.LARGE.jpg"], "step_title": "Step 3: Taking This to 3D"}, {"step": 4, "steps_text": "Thinking about these movements I sketched up a few different variations on a hinge to hold the angle constant throughout the rotation and settled on a short 3D printed section with 2 bolts which the faces would rotate around. I later found the same hinge had already been suggested in an academic paper examining the jitterbug maths and similar models (available as a free pdf at https://www.sciencedirect.com/science/article/pii... if you want to see more)", "step_imgs": ["https://cdn.instructables.com/FB2/DERT/JTEN8R5R/FB2DERTJTEN8R5R.LARGE.jpg", "https://cdn.instructables.com/FVD/V7QL/JSL33VYA/FVDV7QLJSL33VYA.LARGE.jpg", "https://cdn.instructables.com/F3U/TB7V/JTEN8VK0/F3UTB7VJTEN8VK0.LARGE.jpg"], "step_title": "Step 4: Applying These Transformations to 3D Shapes"}, {"step": 5, "steps_text": "Translating this idea into a laser cut tetrahedron with 3D printed hinges (sized for 3mm plywood and M5 bolts - you'll need either short (6mm or thereabouts bolts) or to add washers to outside as the inside angle is quite tight)", "step_imgs": ["https://cdn.instructables.com/FUX/XRLF/JTEN8RLL/FUXXRLFJTEN8RLL.LARGE.jpg", "https://cdn.instructables.com/FP7/G6CH/JTEN8RMJ/FP7G6CHJTEN8RMJ.LARGE.jpg", "https://cdn.instructables.com/FZN/OGLI/JTEN8RJB/FZNOGLIJTEN8RJB.LARGE.jpg"], "step_title": "Step 5: Tetrahedral Transformation"}, {"step": 6, "steps_text": "... and an edge transformation laser cut octahedron with 3D printed hinges (sized for 3mm plywood and M5 bolts)", "step_imgs": ["https://cdn.instructables.com/F3M/SIHS/JTEN8RNS/F3MSIHSJTEN8RNS.LARGE.jpg", "https://cdn.instructables.com/F92/H6OI/JTEN8RH8/F92H6OIJTEN8RH8.LARGE.jpg", "https://cdn.instructables.com/FP8/FXCR/JTEN8RKT/FP8FXCRJTEN8RKT.LARGE.jpg"], "step_title": "Step 6: Edge Centred Octahedral Transformation"}, {"step": 7, "steps_text": "... and lastly a laser cut edge transformation tetrahedron with 3D printed hinges (sized for 3mm plywood and M5 bolts)", "step_imgs": ["https://cdn.instructables.com/FRT/3UPR/JTEN8RDM/FRT3UPRJTEN8RDM.LARGE.jpg", "https://cdn.instructables.com/FA5/WEUJ/JTEN8RDA/FA5WEUJJTEN8RDA.LARGE.jpg", "https://cdn.instructables.com/FE8/S3V5/JTEN8RC2/FE8S3V5JTEN8RC2.LARGE.jpg"], "step_title": "Step 7: Edge Centred Tetrahedral Transformation"}, {"step": 8, "steps_text": "The thing that has me equal parts fascinated and puzzling over these shapes and transformations is how the dihedral angle in one shape becomes a vertices angle in the next shape up leading to a series of relationships between them. An octahedron is made up of two transformed tetrahedra... and so on and so on\nIf I go a bit crazy and end up doing alchemical and astrological experiments and muttering about celestial spheres you'll know where it started", "step_imgs": [], "step_title": "Step 8: Relationships Between Shapes"}, {"step": 9, "steps_text": "I'm not sure if there are any established practical uses of these - I've seen a few sculptures and models yet but it seems like there should be more. Hopefully readers might come up with some interesting ideas\nThe closest thing that came to mind after making the edge transformation tetrahedron was that the resulting truncated tetrahedron is used for the cargo boxes in the sci-fi movie Silent Running e.g. cargo box image", "step_imgs": [], "step_title": "Step 9: Practical Applications?"}], "channel": ""}, {"category": "", "description": "Two other tutorials I have written step you through the basics (Arduino 101) and how to create a really basic data logger (Arduino Datalogger - simple). This tutorial will step through how to attach servo motors, and use temperature sensor to move it!\nThe premise is that often, you want to respond to some input and make something happen. Most tutorials show you how to make lights come on or make a sound. Here, I want to show how you can use a simple servo motor to open something (like a window) in proportion to the ambient temperature.\nLet's get started!", "title": "Temperature and Servos", "url": "https://www.instructables.com/id/Temperature-and-Servos/", "section": "technology", "steps": [{"step": 1, "steps_text": "For this tutorial, you're going to need:\nAn Arduino\nA Breadboard Small\nA servo motor\nAn LED\na resistor, set to 150\u03a9\na temperature sensor\nI use Tinkercad for all tutorials until I get into classes or complex libraries, so head over there and get an account! To add the components, you'll need to open the Components draw and search/scroll, making sure you have selected \"all\" instead of \"basic\" in the components drop down selector.\nIf you're not sure how to use these, or if at any time you get lost, go back to Step 1 and use the 101 and datalogger tutorial to get started. They are a good starting point.\nLet's wire these up.", "step_imgs": ["https://cdn.instructables.com/F0P/F5E4/JTEN8V3O/F0PF5E4JTEN8V3O.LARGE.jpg", "https://cdn.instructables.com/FQW/W7BI/JTEN8VI5/FQWW7BIJTEN8VI5.LARGE.jpg"], "step_title": "Step 1: Adding the Components"}, {"step": 2, "steps_text": "A reminder that all columns in a breadboard are connected, but there is a gap in the middle that disconnects the top array from the bottom.\nUse the first image as a guide on how to wire up the 5v and GND wires from the Arduino to the breadboard. Connect the 5V and GND ports on the Arduino to the breadboard. Essentially, these two power rails provide a greater number of ports to access power when prototyping.\nConnect the bottom of the board to the top. Make sure you match GND / Negative (black) to 5v / Positive (red).\nMake sure all components are on the bottom half of the breadboard, except the servo, and that they are crossing the columns. This is important so we don't cross any wires.\nAdd the LED (image 2).\nUse the resistor and connect to one of the pins (I used the anode).\nIf you used the anode (and it is easier to follow the wiring diagram in the image), then connect the cathode (negative) to the GND line on the breadboard.\n\nQuick tip! If you roll your mouse over the end of the pins on a component it'll tell you which is the anode and cathode, or signal etc.\nConnect the temperature sensor. Make sure the left leg goes to 5v. The right leg goes to GND. The middle leg must be connected to the A0 pin.\nThis is an analogue device and as such, needs an analogue pin. We could use digital and tell it to receive analogue, but we have enough pins.\nFor the servo, we have three wires. These include 5v, GND (ground) and a signal wire.\nConnect the brown wire on the servo to GND on the breadboard.\nConnect the red wire on the servo to a 5v pin on the breadboard.\nConnect the orange wire to digital pin 3 on the Arduino.\nIf you're unsure, check the images above!", "step_imgs": ["https://cdn.instructables.com/FUB/ONDW/JTEN93RL/FUBONDWJTEN93RL.LARGE.jpg", "https://cdn.instructables.com/F3Y/MJ6W/JTEN8VHC/F3YMJ6WJTEN8VHC.LARGE.jpg", "https://cdn.instructables.com/F06/IZB4/JTEN8VH9/F06IZB4JTEN8VH9.LARGE.jpg", "https://cdn.instructables.com/F8H/V2BJ/JTEN8VAS/F8HV2BJJTEN8VAS.LARGE.jpg"], "step_title": "Step 2: Wiring Up"}, {"step": 3, "steps_text": "In this example, I am assuming I have a house in a hot climate. I would like to open windows when it gets hot so I can maximise airflow, because I have a condenser air con that requires massive positive pressure in the house to cool the place down. So, we are going to automatically control the windows to maximise airflow.\nLet's get into the code nice and quickly!\n#include <servo.h>\nThis is the first time (in this series) we have used a library. A library is like a box with a series of folders in it. In each folder are sheets of paper, and each one has special instructions on how to use specific devices. You can \"include\" these folders in your code, which makes it faster for you to write your code!\nIn the past, I have written plugins for webapps and other software which are distributed free. It's a great way to give back to the community! Once you have developed a good skill base in code, it's a worthwhile opportunity to engage in open source.\nWe use the #include instruction to tell Arduino that it will use the library. If it is a global library (something you installed with the package manager or built in to the Arduino, like math.h), then you will put it between the <> symbols.\nLater, you'll learn to write your own and if you store them in the project folder, you'll put the filename between double quotes, \"like this\". That's because the compiler (the program that converts the code from something we can read to something the Arduino can read) needs to reference the file in the folder, not on the global scope.\nThe next block of code should look fairly familiar, so we'll just look at the new features.\n// Define constants\n#define temperature A0\n#define ledIndicator 2\n#define servoPin 3\n\n// Startup the servo class\nServo mainServo;\nSo, we have defined the two constants we're going to use. These are the pins connected to sensors or outputs. We also defined the servo pin.\nYou can see the line Servo mainServo - this is where we instantiate the class Servo we installed with the library. This is like turning on the coffee machine to warm it up (I love coffee....). It's ready to go! In this case, mainServo is the name we have given this new instantiation. This is important, because with classes, I could have 1, 2 or many servos running at the same time! This is why we use classes, because they are little packages on their own we can use many times and do many things with.\n// Define variables\nint position = 0;\nint previousPosition;\n\nvoid setup() {\n pinMode(temperature, INPUT);\n pinMode(ledIndicator, OUTPUT);\n\n // Tell mainServo which pin it is connected to\n mainServo.attach(servoPin);\n\n Serial.begin(9600);\n}\nThis block of code above is fairly consistent with everything else we have done. The only major note to make is of the mainServo.attach() function call. Here, we have told mainServo to run a function called attach() and inside the round braces, indicated the pin we are attaching the servo to. This helps the servo know where to send the signals later.\nIf you're wondering how we know what function calls to make inside our library, all libraries have documentation. This documentation tells you what functions exist inside the library, and how you can use them (for example, what parameters each function takes).\nvoid loop() {\n}\nThe next block of code goes within the loop() code.\n// Temperature analysis\nint tempReading = analogRead(temperature);\n// If using 5v input\nfloat voltage = tempReading * 5.0; \n// Divided by 1024\nvoltage /= 1024.0;\n//Converting from 10mv per degree\nfloat tempC = (voltage - 0.5) * 100;\n \n// This maps temperature to degrees open for the flap\nint position = map(tempC, 10, 50, 0, 180);<br>\nIn this block, we are completing temperature analysis (we saw this in the data logger tutorial). Essentially, we're taking the analog signal sent in by the temperature sensor and converting it into degrees.\nThe map() function allows us to convert this into something useable. Rather than perform complex maths that would take many lines, we convert it like this:\nmap(variableValue, fromLow, fromHigh, toLow, toHigh);\nWhat this does is take the value of the variable we have (like degrees) and convert the minimum possible value and the maximum possible value in might give us (in this case, I set the minimum to 10degrees and the maximum to 50degrees. These are the minimum and maximum values I am expecting from the temp sensor, and I also know at 10degrees, I would like the windows completely closed to keep the warmth in! Whilst at 50degrees, I want them completely open for max air flow!\nif(previousPosition != position){\n Serial.print(\"New position: \");\n Serial.println(position);\n  \n mainServo.write(position);\n digitalWrite(ledIndicator, HIGH);\n // Wait for the servo to move\n delay(2000);\n}\n\n// Turn off the indicator light\ndigitalWrite(ledIndicator, LOW);\n// set previousPosition so if we don't have to change, we don't fire the servo\npreviousPosition = position;\nIn this block, I have decided to only allow the servo to fire when the position actually changes. This shouldn't be that often, but it might be. In that case, I might need to make some changes so the code only allows movement when the temp change is over 5degrees, otherwise it might be constantly trimming the window, which might damage the servo. Anyway, a problem for another day!\nSo, if the position changes, then we will print the new position to the Serial and then, using the mainServo.write() function call, passing in the new position, the servo changes position. To alert the user that something is happening, I turn on an LED and then wait 2 seconds for the servo to move. The last two lines turn off the LED and make sure the previousPosition is stored so we can check it next loop.\nAll done!", "step_imgs": ["https://cdn.instructables.com/F7W/UC05/JTEN8VI1/F7WUC05JTEN8VI1.LARGE.jpg"], "step_title": "Step 3: The Code"}, {"step": 4, "steps_text": "That's it! If you would like to check out the circuit, please head over to Tinkercad. I have inserted the embed below.\nThanks for checking out the tutorial. As always, drop a comment if you need help or just want to say thanks!", "step_imgs": [], "step_title": "Step 4: That's It!"}], "channel": ""}, {"category": "", "description": "This awesome LED clock is a quite simple project that nearly everyone can make. It can function as a Clock, can be LED decoration, or it can just be a nice piece of decoration when turned off.\nWhy I made this project/instructable\nLast year I saw quite some great projects from people that used ping pong balls as diffusers for LEDs. This inspired me to make something with ping pong balls as well. After making some sketches and ordering parts I finally finished the project. Since some people were interested in a tutorial, I decided to improve the build and make a new improved version of the ping pong ball clock. With this instructable, I hope to get others excited and inspired to build their own projects.\nDesign choices\nSince the ping pong balls are not oriented in a matrix, I had to come up with a nice way to display digits. The design I settled on uses 12 ping pong balls for each digit. After some sketching, I found that this allowed for the clearest digit representations. The length of the middle row is 20 balls (20*4 = 80cm). This size came to be because I wanted four digits next to each other, with a colon in the middle. I also wanted to have at least one row of balls between the digits to improve readability. Whilst doing this I found out that this way the total amount of balls and LEDs became to be 128.\nImprovements over the first version\nIn the images, you can see the previous version and the new one (the pictures with 2 panels, the top one is the old version). The newer version:\n- uses LED strips instead of separately soldered together Neo-Pixels.\n- has pixels orientated in a way so it is easier to program.\n- has less exposed contacts.\n- has a back panel, so you can not see through gaps.\n- allows for easier modifications and possible repair.\n- looks cleaner, since wires and electronics cannot be seen from the front.\n- Is way faster to make, since soldering 128*6 contacts, and stripping the same amount of wires takes some time\nnote:\nFor anyone building this: This project requires some repetitive work, I advise to first make a small test version of this project to see how the end result will look like. This allows you to see if the ping pong balls diffuse the light nicely. This could also prevent mistakes that otherwise might occur later on ( like having to much space between balls). I build a small piece of this display (picture) both times I build one of these, and I am glad I did.", "title": "Ping Pong Ball LED Clock", "url": "https://www.instructables.com/id/Ping-Pong-Ball-LED-Clock/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials:\nbought locally:\n- Mdf plate (80*30 cm)\n- Wood for a frame (has to be 5 cm wide and a total length of at least 200 centimeters )\n- 128 ping pong balls (white ones preferably milky white)\n- A few (4) small nails\n- Old USB cable (one that can power the Arduino nano)\n- Power cable from old electronics\nbought online (China)\n- 5V 10A power supply (lower Amperage might also work)\n- Arduino nano (clone)\n- ws2812b LED strip (5m 30Leds/meter IP30)\n- DS3231 RTC\n- Wire with 3 cores (2+ meter)\noptional\n- Female pin connectors\n- Resistor (between 300 and 500 Ohm)\nTools:\n- Saw that can cut 30-degree angles (miter-saw)\n- Hand saw with fine teeth (metal-saw)\n- Wire strippers\n- Soldering iron\n- 12mm drill\n- 32mm hole-saw\n- Wood-glue\n- Hot-glue\n- Flashlight\n- Sandpaper\nnote:\nPicking the right type of ping pong balls is very important for this project. Ping pong balls generally have a seam where two halves were added together. This in itself is not a problem, since by making a hole in the middle one of those halves the seam will not be visible in the display. However, when the ping pong balls also have a print on one side, it is important that the print on the balls is oriented to the back. This could result in a piece of the seam being visible from the front. When buying ping pong balls, also do not buy balls that shine (reflect light). They will diffuse the light less well and it will look strange (an example of ping pong balls you should not buy).\nsummary: preferably use seamless ping pong balls without print that are white and do not reflect light.", "step_imgs": ["https://cdn.instructables.com/FI5/WOQM/JTENAK70/FI5WOQMJTENAK70.LARGE.jpg", "https://cdn.instructables.com/FK2/NI68/JTENAK9O/FK2NI68JTENAK9O.LARGE.jpg", "https://cdn.instructables.com/FPD/P5XE/JTENAKBZ/FPDP5XEJTENAKBZ.LARGE.jpg"], "step_title": "Step 1: Materials / Tools:"}, {"step": 2, "steps_text": "Each ping pong ball will have its own LED behind it. To get as much light as possible to shine through, a piece of the back side of the ping pong balls needs to be removed, so the light of the LED only has to go through one side of the ball. These holes need to be quite large (approximately 30mm) since the LEDs will not be centered behind the balls.\nMaking these large holes in the ping pong balls was a bit of a challenge. Since the balls are quite weak on their own, they need some support before holes can be made in them. I did this by drilling some 32mm holes in a piece of MDF. When sawing the balls, I provided pressure with one hand on the ping pong balls to press them against the hole. Since the hole was approximately 8mm smaller in diameter than the balls, the balls would just be pressed against the hole. Whilst providing pressure on one side, I sawed off the top of the ping pong ball on the other side, by just sawing in a straight line against the MDF.\nBefore sawing them, I made sure that the logo that was printed on the balls, was on the side that I was going to saw off. I also used my flashlight to find the seam where the two halves were added together. I turned the balls a bit more, so the logo was not visible from the front and as little from the seam was visible.\nnote: It does not matter if not all holes are exactly the same size, the size can vary a few mm. This can not be seen from any direction when the build is finished.", "step_imgs": ["https://cdn.instructables.com/FYX/3Z4V/JTON6BAJ/FYX3Z4VJTON6BAJ.LARGE.jpg", "https://cdn.instructables.com/FI6/ZSS2/JTENARUI/FI6ZSS2JTENARUI.LARGE.jpg", "https://cdn.instructables.com/F4S/BL5B/JTENB2CD/F4SBL5BJTENB2CD.LARGE.jpg", "https://cdn.instructables.com/FDC/YLRR/JTENARWD/FDCYLRRJTENARWD.LARGE.jpg", "https://cdn.instructables.com/F7M/Y80S/JTENARSM/F7MY80SJTENARSM.LARGE.jpg"], "step_title": "Step 2: Making Holes in the Ping Pong Balls."}, {"step": 3, "steps_text": "After making large holes in all the ping pong balls they need to be glued together in rows (2 rows of (17,18 and 19) and one row of 20). These rows should be as straight as possible and there should be no space between the balls. I used the wood I bought to build the frame to do this. By having the balls supported by the 2 pieces of wood I was certain that they were in one line. After placing a few balls, whilst making sure the holes were facing up and the balls were touching each other, I glued them together. A very little bit of glue is enough to do this. If you use to much glue it will be visible from the front. I used a flashlight again this tone to make sure ping pong balls did not have ugly spots on the front side (some had those since it were cheap balls).", "step_imgs": ["https://cdn.instructables.com/F2G/DI8B/JTENAKM3/F2GDI8BJTENAKM3.LARGE.jpg", "https://cdn.instructables.com/FXW/IAFJ/JTENAL71/FXWIAFJJTENAL71.LARGE.jpg", "https://cdn.instructables.com/FOM/RLWP/JTENALAK/FOMRLWPJTENALAK.LARGE.jpg", "https://cdn.instructables.com/FPD/K57O/JTENAKID/FPDK57OJTENAKID.LARGE.jpg", "https://cdn.instructables.com/FJS/PVQJ/JTENALDM/FJSPVQJJTENALDM.LARGE.jpg", "https://cdn.instructables.com/F3N/PPDA/JTENALHX/F3NPPDAJTENALHX.LARGE.jpg", "https://cdn.instructables.com/FST/4E18/JTENALLY/FST4E18JTENALLY.LARGE.jpg", "https://cdn.instructables.com/FUX/WWUM/JTENALOO/FUXWWUMJTENALOO.LARGE.jpg", "https://cdn.instructables.com/FYO/WQ0O/JTENALSL/FYOWQ0OJTENALSL.LARGE.jpg", "https://cdn.instructables.com/FEK/UKBC/JTENALUY/FEKUKBCJTENALUY.LARGE.jpg", "https://cdn.instructables.com/FVT/JV4E/JTMSXL9A/FVTJV4EJTMSXL9A.LARGE.jpg"], "step_title": "Step 3: Gluing All Balls in Rows"}, {"step": 4, "steps_text": "To do this I used the wood for the frame to keep 2 rows pressed together. Keep in mind to use small drops of glue, if you use to much it will be visible from the front. After placing glue on around 8 connections at a time, I provided pressure with my hands to make sure the balls were glued tight together.", "step_imgs": ["https://cdn.instructables.com/FXI/13Q7/JTENALXE/FXI13Q7JTENALXE.LARGE.jpg", "https://cdn.instructables.com/F4H/L4D1/JTENB4RN/F4HL4D1JTENB4RN.LARGE.jpg", "https://cdn.instructables.com/F8Y/3O3R/JTENB4U9/F8Y3O3RJTENB4U9.LARGE.jpg", "https://cdn.instructables.com/F18/38Z1/JTENALZV/F1838Z1JTENALZV.LARGE.jpg", "https://cdn.instructables.com/F0W/YA6Q/JTENAM25/F0WYA6QJTENAM25.LARGE.jpg", "https://cdn.instructables.com/FT3/EKVT/JTENAM4Y/FT3EKVTJTENAM4Y.LARGE.jpg", "https://cdn.instructables.com/FMH/GIB3/JTENB4O2/FMHGIB3JTENB4O2.LARGE.jpg", "https://cdn.instructables.com/FRW/EINR/JTENAM8K/FRWEINRJTENAM8K.LARGE.jpg", "https://cdn.instructables.com/FTW/JUOU/JTENB4XN/FTWJUOUJTENB4XN.LARGE.jpg", "https://cdn.instructables.com/F74/Y3GJ/JTENB519/F74Y3GJJTENB519.LARGE.jpg"], "step_title": "Step 4: Gluing the Rows Together."}, {"step": 5, "steps_text": "The frame exists out of 6 pieces. 2 long pieces and 4 short. All the edges of these pieces should have a 60-degree angle. Since the size of my ping pong balls wasn\u2019t exactly 40 mm, but (39,5 something), I calculated the approximate length of the frame pieces (this can be done by measuring the height or width of the panel and using a^2 + b^2 = c^2). I calculated that the inside length of the 2 long pieces should be 66.3cm, and the inside of the 4 short pieces should be 14.3cm. Since my saw was not too accurate, I made sure to cut them a bit larger, so they would not be to short.\nAfter cutting all 6, I placed them around the ping pong ball panel, to see if it fitted well. It didn't, so I sawed a few mm of some pieces. I glued everything together around the ping pong ball panel to make sure it was glued in exactly the right shape, this was necessary since the angles were not cut perfectly in 60 degrees but were more likely 59.5 mm.", "step_imgs": ["https://cdn.instructables.com/FGF/CQFQ/JTENB6YR/FGFCQFQJTENB6YR.LARGE.jpg", "https://cdn.instructables.com/FPM/JYPH/JTENB5PH/FPMJYPHJTENB5PH.LARGE.jpg", "https://cdn.instructables.com/FLQ/Y8A3/JTENB5PT/FLQY8A3JTENB5PT.LARGE.jpg", "https://cdn.instructables.com/FLU/Z4BD/JTENB5PK/FLUZ4BDJTENB5PK.LARGE.jpg", "https://cdn.instructables.com/FRA/SANB/JTENB70W/FRASANBJTENB70W.LARGE.jpg", "https://cdn.instructables.com/F3K/XAKT/JTENB5SA/F3KXAKTJTENB5SA.LARGE.jpg"], "step_title": "Step 5: Making the Frame"}, {"step": 6, "steps_text": "The led strip needs to be cut (one piece of 1 led, one piece of 3 LEDs, one piece of 5 LEDs and 17 pieces with 7 LEDs). The pieces of LED strip need to be wired as can be seen in the image ( first a piece of one led, then the 5 LEDs, next 17 pieces with 7 LEDs and finally the piece with 3 LEDs). The wire that connects the shorter pieces of the strip should be longer than the other pieces since it needs to cover a greater distance. I taped the strip on a piece of MDF to see if each led would be behind its own ball. After soldering all the pieces together I tested if all the solder connections were good, by activating each LED one by one (checkIfLedsAreBehindBalls.ino).", "step_imgs": ["https://cdn.instructables.com/FAT/5RDF/JTENB5LL/FAT5RDFJTENB5LL.LARGE.jpg", "https://cdn.instructables.com/FET/0509/JTON6QF0/FET0509JTON6QF0.LARGE.jpg", "https://cdn.instructables.com/FPJ/R6B9/JTENB539/FPJR6B9JTENB539.LARGE.jpg", "https://cdn.instructables.com/FUU/X8EC/JTWSVNP9/FUUX8ECJTWSVNP9.LARGE.jpg", "https://cdn.instructables.com/FB2/JWBP/JTENB5AE/FB2JWBPJTENB5AE.LARGE.jpg", "https://cdn.instructables.com/FL2/ZYG3/JTENB558/FL2ZYG3JTENB558.LARGE.jpg"], "step_title": "Step 6: Soldering the LED Strip"}, {"step": 7, "steps_text": "One the frame was done I placed the frame and the ping pong ball panel over the MDF which had the LEDs taped to it. After making sure each led was after its own ball I removed the ping pong ball panel. Next, I drew along the inside of the frame on the MDF, to get the shape I needed to cut out. I did it this way because the LEDs are not centered behind the balls and this way I have the relative position of the LEDs to the frame. After removing the LEDs that were taped to the board I cut out the shape of the panel and sanded the edges, so it fitted nicely inside the frame.\nnote: be aware that le LEDs will not be centered behind the ping pong balls, see sketch", "step_imgs": ["https://cdn.instructables.com/FRY/AAXO/JTENB6IU/FRYAAXOJTENB6IU.LARGE.jpg", "https://cdn.instructables.com/FPJ/XK9U/JTON6BBX/FPJXK9UJTON6BBX.LARGE.jpg", "https://cdn.instructables.com/FD5/OC55/JTON6S22/FD5OC55JTON6S22.LARGE.jpg", "https://cdn.instructables.com/F69/R03M/JTENB65C/F69R03MJTENB65C.LARGE.jpg", "https://cdn.instructables.com/FV7/QGRL/JTON6SON/FV7QGRLJTON6SON.LARGE.jpg", "https://cdn.instructables.com/FIH/3NB5/JTENB6GW/FIH3NB5JTENB6GW.LARGE.jpg"], "step_title": "Step 7: Cutting the MDF"}, {"step": 8, "steps_text": "As could be seen previously, the wire connecting the LEDs is kinda in the way. The way it is right now, the wire will be visible from the front. I decided to solve this by drilling holes on the end of the location of each vertical strip of LEDs, so the wire can go on the backside. I weaved the led strip through the holes and temporarily taped it down. After making sure that again, each led would be behind its own ping pong ball I removed the tape and connected the LED strip to the board with the glue strip that is already on the LED strip.\nnote: When drilling holes in MDF, be really careful, you can break the board really easy.", "step_imgs": ["https://cdn.instructables.com/FB4/ER75/JTENB6TN/FB4ER75JTENB6TN.LARGE.jpg", "https://cdn.instructables.com/FX3/G5WR/JTENB6LM/FX3G5WRJTENB6LM.LARGE.jpg", "https://cdn.instructables.com/FUG/LX4R/JTENB6SB/FUGLX4RJTENB6SB.LARGE.jpg", "https://cdn.instructables.com/F83/710S/JTENB6T4/F83710SJTENB6T4.LARGE.jpg", "https://cdn.instructables.com/FQ8/SWQK/JTENB6UZ/FQ8SWQKJTENB6UZ.LARGE.jpg", "https://cdn.instructables.com/FGH/TIP1/JTON72J5/FGHTIP1JTON72J5.LARGE.jpg", "https://cdn.instructables.com/FAC/GV5C/JTENB6V4/FACGV5CJTENB6V4.LARGE.jpg"], "step_title": "Step 8: Adding Holes and LEDs to MDF"}, {"step": 9, "steps_text": "I placed the panel of ping pong balls upside down in the frame, then I applied glue on every point where the ping pong balls touched ( or barely touched the frame ).", "step_imgs": ["https://cdn.instructables.com/FQJ/5QJ5/JTENB76O/FQJ5QJ5JTENB76O.LARGE.jpg", "https://cdn.instructables.com/FXS/NADO/JTENB723/FXSNADOJTENB723.LARGE.jpg", "https://cdn.instructables.com/F2N/7MXY/JTENB72O/F2N7MXYJTENB72O.LARGE.jpg", "https://cdn.instructables.com/FDP/9P9C/JTENB74T/FDP9P9CJTENB74T.LARGE.jpg"], "step_title": "Step 9: Gluing the Balls to the Frame"}, {"step": 10, "steps_text": "I placed the led panel on top of the backside of the balls. Next, I used 4 small nails to attach the panel to the frame. I did this by placing the nails on the inside of the frame. I chose to do it this way since it allows me to fix something if it ever breaks (It also allows me to double the number of LEDs, since to many lumens does not exist)", "step_imgs": ["https://cdn.instructables.com/FDK/QFV0/JTENB76V/FDKQFV0JTENB76V.LARGE.jpg", "https://cdn.instructables.com/FOB/F7FS/JTENB7IW/FOBF7FSJTENB7IW.LARGE.jpg", "https://cdn.instructables.com/FS8/BNLB/JTENB7BL/FS8BNLBJTENB7BL.LARGE.jpg", "https://cdn.instructables.com/FCA/OG7J/JTENB78V/FCAOG7JJTENB78V.LARGE.jpg", "https://cdn.instructables.com/FRU/XAF0/JTENB7L1/FRUXAF0JTENB7L1.LARGE.jpg"], "step_title": "Step 10: Attaching the LED Panel to the Frame"}, {"step": 11, "steps_text": "Okay, I have (almost) no experience with Arduino so this might not be perfect. But I tried to do this in an as simple way as possible.\nI soldered connectors to the Arduino nano (black things in the image) (not necessary).\nI decided to do it this way so everything can be taken apart easily again if I ever want to add Buttons or a Light Dependent Resistor (LDR) or other features to it.\nNext, I connected the RTC to the Arduino, just make sure the SDA and SCl of the clock module are connected to the SDA and SCL of the Arduino Nano. Then connect the resistor between pin 9 and the data in of the LED strip.\nFinally, wires were connected to the end of the LED strip to also provide power to the end of the LED strip, in order to prevent voltage drop.\nYes, it really is that simple.\nTo provide everything with power, I cut a USB cable that could connect to the Arduino nano in half and connected the 5V side of the two cables that went to the LED strip and the cut in half USB cable. I did the same with the Other side. This allows me to power the LED strip without supplying power through the Arduino.\nA cable from an old lamp was used to connect the 5V 10A power supply with the clock.\nI also drilled a hole in the bottom of one side of the frame for the power cable to go through. This allows the clock to be flat against a wall, whilst still being able to stand on a surface if preferred.\nThe only thing left to do is writing some code.", "step_imgs": ["https://cdn.instructables.com/F0V/WI9Y/JTWSVNPF/F0VWI9YJTWSVNPF.LARGE.jpg", "https://cdn.instructables.com/FZ2/ZOW1/JTENB8ET/FZ2ZOW1JTENB8ET.LARGE.jpg", "https://cdn.instructables.com/FFW/Z7DX/JTENB86I/FFWZ7DXJTENB86I.LARGE.jpg", "https://cdn.instructables.com/FBH/HOAO/JTWSVNPE/FBHHOAOJTWSVNPE.LARGE.jpg"], "step_title": "Step 11: Electronics"}, {"step": 12, "steps_text": "When uploading code, make sure the power supply is off!\nBefore the clock module knows the current time, the time has to be set on the module. Luckily there is some code available to do this. After only the addition of 4 lines of code and installing the DS1307RTC module, we can run this (SetTime_on_ds3231_nano.ino, link to original code) code to set the time on the Arduino to the time of the PC.\nWith the time set, we can start looking at writing some code for this clock. I used 2 libraries in the programs, the FastLED library, and the DS3232RTC library. These two libraries will do almost all the work for you, and allow someone with very little programming experience to write programs.\nUnderneath here you can see The code that I used in the video on the top of this Instructable, and in most of the pictures. (timeWhiteBackgroundRainbow.ino)\n<p>#include <FastLED.h><fastled.h><br>#include <DS3232RTC.h><ds3232rtc.h>\n#define LED_PIN     9\n#define NUM_LEDS    128\nDS3232RTC myRTC(false);\ntmElements_t tm;\nCRGB leds[NUM_LEDS];\nCHSV colour( 0, 255, 180);\nint counter=0;\nconst int Digits[10][10] =\n{\n  {7,8,10,11,14,18,22,24},\n  {14,16,18,22,24},\n  {7,8,9,11,14,16,18,24},\n  {7,9,11,14,16,18,22,24},\n  {9,10,11,16,18,22,24},\n  {7,9,10,11,14,16,18,22},\n  {7,8,9,14,15,16,18,22},\n  {7,11,14,16,17,24},\n  {7,8,9,10,11,14,16,18,22,24},\n  {7,9,10,11,14,16,17,24},\n};\nvoid setup()\n{\n    pinMode(17, OUTPUT); //ground and v5 for clock module\n    pinMode(16, OUTPUT);\n    digitalWrite(17, HIGH);\n    digitalWrite(16, LOW);\n    FastLED.addLeds<</ds3232rtc.h></fastled.h>WS2812, LED_PIN, GRB>(leds, NUM_LEDS);</p><p><fastled.h><ds3232rtc.h><ws2812, led_pin,=\"\" grb=\"\">    myRTC.begin();\n}</ws2812,></ds3232rtc.h></fastled.h></p><p>//function that uses the Digit aray to display numbers between 0 and 100\nvoid displaynumber( int place , int number){\n  for (int i = 0 ; i < 10 ; i++) {\n    if (Digits[number/10][i] != 0) {\n      leds[(Digits[number/10][i]+place)] = CRGB(255,255,255);;\n    }\n    if (Digits[number%10][i] != 0) {\n      leds[(Digits[number%10][i]+28+place)] = CRGB(255,255,255);;\n    }\n  }\n}</p><p>void loop(){\n  RTC.read(tm);\n  \n  //changes the colour of background every 10 cycles\n  if (counter<10){\n    counter++;\n  }else{\n    colour.hue = (colour.hue+1)%256;\n    counter=0;\n  }</p><p>  // sets background to rainbow colours\n  for ( int i=0; i< 128;i++){\n    colour.hue = (colour.hue+1)%256;\n    leds[i]= colour;\n  }\n  colour.hue = (colour.hue+128)%256;\n  \n  displaynumber(0,tm.Hour);\n  displaynumber(70,tm.Minute);</p><p>  //display colons\n  if ( tm.Second%2 == 0 ){\n    leds[64] = CRGB(255,255,255);\n    leds[66] = CRGB(255,255,255);\n  }\n  FastLED.show();\n}</p>\nI think the Code is relatively short, but it can, of course, be improved. All it does is reading the time from the RTC and displaying that time. The location of the LEDs that should be lit to form a digit is hardcoded in the matrix 'Digits'. For example, Digits[0] contains the location of the LEDs that should be lit to form a zero.\nI also provided the other programs I made, they are slight alterations of the program above. The program 'CycleThroughDigits.ino' just counts up to 9999 to demonstrate how all the digits look. The program 'onlyTime.ino' just displays the time in changing colors, with no background color. Finally, 'FastledExampleCode.ino' is some code provided by the FastLED library that demonstrates some simple animations.", "step_imgs": [], "step_title": "Step 12: Code"}, {"step": 13, "steps_text": "This project can be so much more than a basic clock, you can add buttons, make it change brightness depending on the light, have it display just some colors, make it reactive to music, connect it to wifi with an ESP. It's basically an Arduino connected to a display, everything is possible", "step_imgs": ["https://cdn.instructables.com/FRI/JYD6/JTMSX3C9/FRIJYD6JTMSX3C9.LARGE.jpg", "https://cdn.instructables.com/F71/3IOO/JTMSX3C8/F713IOOJTMSX3C8.LARGE.jpg"], "step_title": "Step 13: Add Every Feature You Want"}], "channel": ""}, {"category": "", "description": "I built some DIY acoustic panels to help cut down on the reverb in my room when recording audio. If you are building a home studio, this project is a great and relatively inexpensive way to make your own acoustic panels!", "title": "DIY Acoustic Panels", "url": "https://www.instructables.com/id/DIY-Acoustic-Panels-1/", "section": "technology", "steps": [{"step": 1, "steps_text": "1x4 boards\nFabric: Pick whatever you'd like and that would match the room you are putting the panels in\nInsulation: https://thd.co/2Y5WbMS\nScreen Door Material: https://thd.co/2JqM8yO\nStapler: https://amzn.to/2TUjcDv\nStaples: https://amzn.to/2Weeq0Z\nDrywall Anchors: https://amzn.to/2TmQmHf\nD-Ring Hangers: https://amzn.to/2HD99Nt", "step_imgs": [], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "2x 48\" x 1\"x4\" per panel\n2x 23\" x 1\"x4\" per panel", "step_imgs": ["https://cdn.instructables.com/F25/YV57/JTEN886H/F25YV57JTEN886H.LARGE.jpg"], "step_title": "Step 2: Cutting the Boards to Length"}, {"step": 3, "steps_text": "I used some glue on my joints so they're a little stronger after I nail them together.", "step_imgs": ["https://cdn.instructables.com/FR6/ZMVE/JTEN88M5/FR6ZMVEJTEN88M5.LARGE.jpg"], "step_title": "Step 3: Glue Up the Boards"}, {"step": 4, "steps_text": "I used a brad nailer for this, but you could use small screws and some butt joints, or pocket hole joints, do whatever your heart desires.", "step_imgs": ["https://cdn.instructables.com/FU4/D9XM/JTEN8925/FU4D9XMJTEN8925.LARGE.jpg"], "step_title": "Step 4: Fasten Them Together"}, {"step": 5, "steps_text": "I used screen door material to hold in the insulation, I probably put on too many staples but better safe than sorry.", "step_imgs": ["https://cdn.instructables.com/FPL/VGWB/JTEN899P/FPLVGWBJTEN899P.LARGE.jpg"], "step_title": "Step 5: Add Screen Material"}, {"step": 6, "steps_text": "I just used a piece and a half of insulation in my panels, if you decide to make a different size, you may use less or more.", "step_imgs": ["https://cdn.instructables.com/FPJ/G0OR/JTEN8926/FPJG0ORJTEN8926.LARGE.jpg"], "step_title": "Step 6: Add Insulation"}, {"step": 7, "steps_text": "I added more screen on the other side as well.", "step_imgs": ["https://cdn.instructables.com/F5E/YHGF/JTEN8922/F5EYHGFJTEN8922.LARGE.jpg"], "step_title": "Step 7: Add More Screen"}, {"step": 8, "steps_text": "I stretched fabric over the front of the panels, you really gotta stretch it out and make sure to add staples frequently.", "step_imgs": ["https://cdn.instructables.com/FKU/152L/JTEN892C/FKU152LJTEN892C.LARGE.jpg"], "step_title": "Step 8: Cover in Fabric"}, {"step": 9, "steps_text": "Trim the excess fabric away, I also used hot glue to secure the little bit left so it didn't flap around.", "step_imgs": ["https://cdn.instructables.com/FKL/5ASP/JTEN89AG/FKL5ASPJTEN89AG.LARGE.jpg"], "step_title": "Step 9: Trim the Excess"}, {"step": 10, "steps_text": "I used drywall anchors and d-ring hangers to hang up the panels.", "step_imgs": ["https://cdn.instructables.com/FT0/QJ6Z/JTEN8874/FT0QJ6ZJTEN8874.LARGE.jpg", "https://cdn.instructables.com/F94/8GK0/JTEN8877/F948GK0JTEN8877.LARGE.jpg", "https://cdn.instructables.com/FBY/QZXB/JTEN88UR/FBYQZXBJTEN88UR.LARGE.jpg"], "step_title": "Step 10: Hang It Up"}, {"step": 11, "steps_text": "And that's it, enjoy some reverb reduction!", "step_imgs": ["https://cdn.instructables.com/FK0/7M9M/JTEN8863/FK07M9MJTEN8863.LARGE.jpg"], "step_title": "Step 11: You're Done!"}], "channel": ""}, {"category": "", "description": "Now, you can easily track attendance and clock working hours with the help of this easy and fun to make DIY fingerprint scanner! We\u2019ll be using ThingSpeak to store and retrieve the data. All you require is a cardboard piece, some colored paper, a fingerprint sensor, evive, and lots of DIYing!\nReady for some scanning and tracking? Hop on board!", "title": "IoT Based Fingerprint Attendance System Using Evive (Arduino Based Embedded Platform)", "url": "https://www.instructables.com/id/IoT-Based-Fingerprint-Attendance-System-Using-Eviv/", "section": "technology", "steps": [{"step": 1, "steps_text": "Hardware\nevive / Arduino Board\nFingerprint Sensor\nWiFi Module (ESP8266)\nJumper Cables\nCardboard\nColor Papers\nHot Glue\nSoftware\nArduino IDE\nThingspeak", "step_imgs": [], "step_title": "Step 1: Components Required"}, {"step": 2, "steps_text": "Take the piece of cardboard and cut it in the shape of evive or your Arduino Board.\nThe box I have made just needs to be folded and glued.\nCut out the extras and you will get the shape as shown in Image2.\nTo fold the cardboard, make slight cuts at the edges drawn. Thus, helping you to fold it into the box easily.\nFinally, to keep the box stable, glue the edges using Hot Glue.\nThus, our box is almost ready.", "step_imgs": ["https://cdn.instructables.com/FSM/O52Z/JTEN8GYF/FSMO52ZJTEN8GYF.LARGE.jpg", "https://cdn.instructables.com/FIV/174A/JTEN8GYG/FIV174AJTEN8GYG.LARGE.jpg", "https://cdn.instructables.com/FQD/RWM6/JTEN8GYH/FQDRWM6JTEN8GYH.LARGE.jpg"], "step_title": "Step 2: Making the Evive Holder"}, {"step": 3, "steps_text": "Take the box that, you have made and color it according to your choice.\nI have glued the color paper on the box to make it attractive.\nFinally, keep the evive safe :) I have added a lock to it.\nI took a small string and have made a loop of it.\nI have fixed a small bolt onto the side of the box to fix the loop around it.\nFinally, as we are using the fingerprint sensor. I have 3D printed a sensor holder and have attached it to the front door of the box.", "step_imgs": ["https://cdn.instructables.com/FJR/ORWO/JTEN8GYL/FJRORWOJTEN8GYL.LARGE.jpg"], "step_title": "Step 3: Decorating the Box"}, {"step": 4, "steps_text": "Once done with the making, it's time to make the connection:\nVCC (Red wire) to evive's 3.3 V\nGND (Black wire) to evive's GND\nRx (Yellow wire) to Digital Pin 10 of evive\nTx (White wire) to Digital Pin 11 of evive", "step_imgs": ["https://cdn.instructables.com/FE9/FN40/JTEN8OOL/FE9FN40JTEN8OOL.LARGE.jpg"], "step_title": "Step 4: Circuitry"}, {"step": 5, "steps_text": "I have added the two working mode for the attendance system:\nEnroll Mode\nAttendance Mode\nLet's discuss each mode in detail.", "step_imgs": ["https://cdn.instructables.com/FTC/2PO9/JTEN8GZH/FTC2PO9JTEN8GZH.LARGE.jpg"], "step_title": "Step 5: Working Modes"}, {"step": 6, "steps_text": "All the first time user needs to first enroll themselves into the system.\nI have added some instructions so that one can enroll the fingerprints easily.\nI have added the following instructions:\nChoose the Enroll Mode\nChoose the Number on which you wanna enroll yourself.\nPlace your finger on the sensor.\nThen remove the finger and again place it for the verification\nIf the fingerprints are matched, you have now enrolled.\nIf not, have to follow the above steps again.", "step_imgs": ["https://cdn.instructables.com/FAK/0P37/JTEN8GYP/FAK0P37JTEN8GYP.LARGE.jpg", "https://cdn.instructables.com/FQD/NM2T/JTEN8GYQ/FQDNM2TJTEN8GYQ.LARGE.jpg"], "step_title": "Step 6: Enroll Mode"}, {"step": 7, "steps_text": "Once you have enrolled yourself, all you need to do is mark your attendance daily to check your working hours.\nSelect the Attendance mode and place your finger on the sensor and mark your attendance.\nYou can select the text you want to display on the screen.\nOnce you have marked the attendance, on selecting the attendance mode again and placing your finger again, will mark your exit.\nYou can again choose the exit text you want to display.", "step_imgs": ["https://cdn.instructables.com/FO6/WMA2/JTEN8GZE/FO6WMA2JTEN8GZE.LARGE.jpg"], "step_title": "Step 7: Attendance Mode"}, {"step": 8, "steps_text": "I have used Thingspeak, which is the opensource software to store and retrieve data.\nI have first created a Thingspeak account. One out of the many good things about Thingspeak is that you can store the data coming from your multiple projects in a single account. All you need to do is create a different channel for each project. You can store up to 8 fields on 1 channel. We will store 1 parameter.\nWhen a new channel is created, you can see four graphs for each parameter. Get the Channel ID of your Channel (To be used while connecting to the channel). Get the Read and Write API from the API tab:\nTo connect your project with the corresponding channel, you need to enter the Thingspeak's API of that channel into your Arduino Code.\nAll our records are being directly stored over WiFi to our account.\nYou can retrieve the data by downloading the CSV File.", "step_imgs": ["https://cdn.instructables.com/FQH/VDET/JTEN9469/FQHVDETJTEN9469.LARGE.jpg", "https://cdn.instructables.com/FGZ/FMHO/JTEN8GYC/FGZFMHOJTEN8GYC.LARGE.jpg", "https://cdn.instructables.com/FDB/O4U1/JTEN8GZA/FDBO4U1JTEN8GZA.LARGE.jpg", "https://cdn.instructables.com/F5D/9OT4/JTEN8GYE/F5D9OT4JTEN8GYE.LARGE.jpg"], "step_title": "Step 8: Storing Data"}, {"step": 9, "steps_text": "Upload the following Arduino code to evive.", "step_imgs": [], "step_title": "Step 9: Arduino Code"}, {"step": 10, "steps_text": "With this, your DIY fingerprint attendance system is all set to maintain a record for you of all those you came and went.\nBTW, did you know that is one door is closed, another somewhere is open? If you didn\u2019t you will now! Owing to overwhelming success and the love and support of DIY enthusiasts and hobbyists around the world, we\u2019ve decided to EXTEND our Indiegogo campaign! So, If you missed the opportunity before, you have the chance to take its advantage NOW! Go check out all the cool stuff that we\u2019re offering HERE and seize the day. ;)", "step_imgs": [], "step_title": "Step 10: Conclusion"}], "channel": ""}, {"category": "", "description": "Turn any radio into a guitar amp.\nThis is probably one of my favourite hacks that I have ever stumbled across! It\u2019s so simple that anyone with a soldering iron and screwdriver can do it.\nAll radios have an amplifier built into them \u2013 it\u2019s how you're able to increase the volume. What this hack allows you to do is to tap into the radio\u2019s amplifier so you can play guitar through it.\nYou may be thinking why in hell would I want to do that!\nHacking a radio can give you the most amazing vintage tone. The distinct \u201cLo-fidelity\u201d sounds that come out of these vintage radio\u2019s will really surprise you. It\u2019s a real raw and dirty sound which is perfect for playing some bluesy riffs. There is also the added bonus of creating your very own sound as no 2 radios are ever alike.\nWhen you get your hands on a radio that you want to hack, there is a good chanec that its seen some miles. The speaker might hiss or rattle, the volume could jump around or it has some other left-of-centre feature which is what makes these amps so cool. You never know what sound you are going to get.\nI've made a few of these now and this version has added filters in the way of capacitors so the sound is even better. You can swap from a clean sound to a low down dirty sound at a flick of a switch.", "title": "Hack Any Radio Into a Guitar Amp V2", "url": "https://www.instructables.com/id/Hack-Any-Radio-Into-a-Guitar-Amp-V2/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts\n1. Vintage radio. If you don't have one lying around, then try a thrift store, 2nd hand shop or eBay\n2. 220uf Cap - eBay This is a good quality audio cap. You can use a cheaper one if you want to but it might affect the sound quality.\n3. 100nf Cap - eBay\n4. SPDT Switch - eBay\n5. 10K Potentiometer - eBay\n6. 1/4 mono, input jack - eBay\n7. Prototype board - eBay\n8. Wires\nTools:\n1. Soldering Iron\n2. Guitar\n3. Guitar cord\n4. Drill\n5. Screwdriver / Phillips head", "step_imgs": ["https://cdn.instructables.com/FGF/6ZKW/JT91X79I/FGF6ZKWJT91X79I.LARGE.jpg", "https://cdn.instructables.com/FAL/GRX5/JT91XAKE/FALGRX5JT91XAKE.LARGE.jpg"], "step_title": "Step 1: Things to Gather"}, {"step": 2, "steps_text": "I'm no expert on this hack, but after some research and a little experimentation, I worked out that there are some radio's that will work better than others. I have included some notes below on what to look for when your out searching for a vintage radio to convert.\nThe trick is to find one that has some style and is large enough to pump out some decent sound. You can modify small transistor radios but you'll probably find that they aren't very loud or have any distortion. If the radio has no handle and a wrist strap or is in a little leather case it will be a bit too small to waste you time with. This is due to the small, crappy speaker that they come with.\nLook for a radio that's at least a 3 inch speaker. It will ensure the speaker is big enough to have an effect on the tone. The size and quantity of the batteries that the radio takes will also effect the tone! The bigger the size of battery the fuller the tone and the more volume the radio will have. Try and find a radio which takes \"C\" or \"D\" batteries as these will give you the best result. The radio I used takes 6 X \"D\" cell batteries so has plenty of power to drice the 5 amp speaker.\nIf your radio has extra controls like bass, tone or trebble, then you are in radio amp heaven. These will give you extra ways to change the sound and tone of the amp.\nRadios which take a 9v or AA batteries won't give you the best sound. It is definitely worth experimenting though and seeing what type of sound you can get out of the small \"transistor\" type radio's. You never know...", "step_imgs": ["https://cdn.instructables.com/FG0/S1ZH/JT91X7YX/FG0S1ZHJT91X7YX.LARGE.jpg", "https://cdn.instructables.com/FEN/NR9E/JT91XAYU/FENNR9EJT91XAYU.LARGE.jpg", "https://cdn.instructables.com/F1A/GDS0/JT91XAYX/F1AGDS0JT91XAYX.LARGE.jpg", "https://cdn.instructables.com/F1D/2K46/JT91XAYW/F1D2K46JT91XAYW.LARGE.jpg", "https://cdn.instructables.com/FN8/HJZL/JT91XAKF/FN8HJZLJT91XAKF.LARGE.jpg", "https://cdn.instructables.com/FBC/ZYXY/JT91XAMG/FBCZYXYJT91XAMG.LARGE.jpg"], "step_title": "Step 2: Finding the Right Radio"}, {"step": 3, "steps_text": "The first thing you'll need to do is to open the back of the radio. You need to be able to get to the volume potentiometer do be able to do this mod. This hack won't affect the radio's ability to play music either so you'll still be able to listen to music through it.\nSteps:\n1. Flip the radio over and remove the screws holding the back into place\n2. With a screwdriver, lever off the knobs and switches. They should pop off with some jiggling.\n3. Gently remove the cover making sure that no wires are pulled out.\n4. You should be able to see the volume pot and also the solder points.", "step_imgs": ["https://cdn.instructables.com/F0Q/YTB5/JT91XAXR/F0QYTB5JT91XAXR.LARGE.jpg", "https://cdn.instructables.com/FFW/TYU5/JT91XAXT/FFWTYU5JT91XAXT.LARGE.jpg"], "step_title": "Step 3: Open Up You Radio"}, {"step": 4, "steps_text": "The circuit is pretty simple to make. I'd prototype it first though on a breadboard and then test it first, you may have to change the value of the capacitors for your radio.\nSteps:\n1. Breadboard the circuit first then test it on the radio.\n2. To test you'll need to solder a jumper cable to a ground point on the radio - I used the ground solder point on the speaker\n3. The other jumper cable which will be the positive one will be used to probe the volume pot to determine which is gthe right solder point. Once you have found it (you will be able to hear the guitar through the speaker when strummed), then you can solder the jumper wire to it and experiment further.\n4. Put the radio onto AM and tune it so it's not on a radio station. You may hear some static or noise, if you, turn down the radio until you don't hear it any longer.\nThe next step will go through ghow to find the right solder point.", "step_imgs": ["https://cdn.instructables.com/FSO/0COX/JT91WY0U/FSO0COXJT91WY0U.LARGE.jpg", "https://cdn.instructables.com/FO2/L4BC/JT91X6UG/FO2L4BCJT91X6UG.LARGE.jpg", "https://cdn.instructables.com/FOR/ZMYF/JT91X6UP/FORZMYFJT91X6UP.LARGE.jpg", "https://cdn.instructables.com/F8I/EHRR/JT91X6R3/F8IEHRRJT91X6R3.LARGE.jpg", "https://cdn.instructables.com/FZM/F3GS/JT91X7QI/FZMF3GSJT91X7QI.LARGE.jpg"], "step_title": "Step 4: Making the Circuit - Breadboarding"}, {"step": 5, "steps_text": "When deciding on where to add the positive wire on the voltage pot, you need to do a little bit of testing. There are usually about 5 solder points that the voltage pot has, and the wire from the jack will need to be soldered to the right one for the amp to work.\nSteps:\n1. With the breadboarded circuit connected to ground on the radio and the lead plugged into the 1/4\" jack and the guitar, you can start to probe and work out where to attach the positive to the volume pot\n2. Place the jumper lead against the first solder point on the volume pot and strum the guitar. If you near nothing, move onto the next one.\n3. Once you find the right one (you'll here the guitar through the speaker) solder the jumper lead to it\n4. Experiment with different cap values if necessary until you are happy with the sound", "step_imgs": ["https://cdn.instructables.com/FOO/2SZW/JT91X6SS/FOO2SZWJT91X6SS.LARGE.jpg", "https://cdn.instructables.com/FPK/YB62/JT91X6SR/FPKYB62JT91X6SR.LARGE.jpg", "https://cdn.instructables.com/FC3/TE34/JT91X7SO/FC3TE34JT91X7SO.LARGE.jpg", "https://cdn.instructables.com/FBF/2DW3/JT91XAZZ/FBF2DW3JT91XAZZ.LARGE.jpg"], "step_title": "Step 5: Finding the Right Solder Point on the Volume Pot"}, {"step": 6, "steps_text": "I've included a schematic for the circuit along with the fritzing file in case you want to make any changes. You can download fritzing here to make your own circuit shematics.\nSteps:\n1. Use the schematic and start to build the circuit\n2. You'll need to add some wires so you can connect these to the pot, switch and 1/4' socket. Make sure that they are longer then necessary - it's easier to trim then to add.\n3. Once the curcuit is built, you then need to add the components into the radio", "step_imgs": ["https://cdn.instructables.com/FSO/0COX/JT91WY0U/FSO0COXJT91WY0U.LARGE.jpg", "https://cdn.instructables.com/FLO/O4EI/JT91X7EH/FLOO4EIJT91X7EH.LARGE.jpg"], "step_title": "Step 6: Making the Circuit"}, {"step": 7, "steps_text": "To be able to plug the guitar inot the radio, you'll need to find a good spot to add the jack (and other components). The good thing is, most radio's have empty space inside to add extra components.\nSteps:\n1. First identfy where to add the 3 components to the case of the radio. You'll also need to be able to stick the circuit down as well so make sure there's enough room inside for that as well.\n2. Drill 3 holes into the radio and secure the pot, switch and jack into the case\n3. Place the circuit inside and make sure you can secure it in place later on", "step_imgs": ["https://cdn.instructables.com/FBM/0PI7/JT91X7KO/FBM0PI7JT91X7KO.LARGE.jpg", "https://cdn.instructables.com/FI1/X5QX/JT91X7M4/FI1X5QXJT91X7M4.LARGE.jpg", "https://cdn.instructables.com/FK5/T5L5/JT91X7MF/FK5T5L5JT91X7MF.LARGE.jpg", "https://cdn.instructables.com/FGL/J1LY/JT91X7N8/FGLJ1LYJT91X7N8.LARGE.jpg", "https://cdn.instructables.com/FT5/QOES/JT91X7P5/FT5QOESJT91X7P5.LARGE.jpg"], "step_title": "Step 7: Adding the Components to the Radio"}, {"step": 8, "steps_text": "Steps:\n1. It's now time to wire-up the circuit to the components.\n2. Start with wiring-up the switch to the 100nf cap and ground on the speaker. You can attach the ground wire to any ground point on the radio\n3. Next wire-up the 10k pot. This is used for volume control and helps filter the sound\n4. Lastly, wire-up the 1/4\" jack and attach the wire to the solder point on the radio volume pot\n5. Plug in your guitar and test to make sure the curcuit is working. If everything is working you should start to hear some sweet sounds coming from the speaker.", "step_imgs": ["https://cdn.instructables.com/FKG/9YBV/JT91X7UV/FKG9YBVJT91X7UV.LARGE.jpg", "https://cdn.instructables.com/F5J/KZ7Q/JT91X7VA/F5JKZ7QJT91X7VA.LARGE.jpg", "https://cdn.instructables.com/FPK/3QDF/JT91X7VC/FPK3QDFJT91X7VC.LARGE.jpg", "https://cdn.instructables.com/F1Q/M05M/JT91X7SP/F1QM05MJT91X7SP.LARGE.jpg", "https://cdn.instructables.com/F9S/SJ95/JT91X7SU/F9SSJ95JT91X7SU.LARGE.jpg", "https://cdn.instructables.com/FS1/3F2V/JT91XAJF/FS13F2VJT91XAJF.LARGE.jpg"], "step_title": "Step 8: Connecting the Circuit"}, {"step": 9, "steps_text": "As I mentioned earlier, the hack won't damage the radio at all and you can still use it just as a radio. Using the amp is very simple but I thought I would add a couple of tips\nSteps:\n1. Don't have the volume up too loud. As a matter of fact, turn it right down and just have it on\n2. You can use either AM or FM, I don't find there is any real difference\n3. Tune in the radio so it's not on a station\n4. Plug the cord into the jack on the radio and then plug it into your guitar\n5. Try adjusting the 10K pot you added and strumming the guitar. Find the sweet spot for the volume. You can also turn it up on the radio volume pot as well. Just note that you might hear some background static if it is too loud. The radio I used can be turned right up without any noise. The amp does become too sensitive though and the sound starts to decay a little.\n6. If your radio has bass and trebble control then play around with these as well. You can get some awesome sounds by adjusting them.\n7. Try flicking the switch. You'll find that you either have a very clean sound or a grungy, lo-fi sound.\n8. Lastly, have fun playing your amp and experiment to see what other sounds you can get out of it.", "step_imgs": ["https://cdn.instructables.com/FUK/U1G8/JT91XHA2/FUKU1G8JT91XHA2.LARGE.jpg", "https://cdn.instructables.com/FTO/5MJ7/JT91XHBT/FTO5MJ7JT91XHBT.LARGE.jpg"], "step_title": "Step 9: How to Use the Amp"}], "channel": ""}, {"category": "", "description": "In the past few years, a number of synthesizer manufacturers have been releasing \"desktop semi-modular\" instruments. They generally take the same form factor as the Eurorack modular synthesizer format and most are probably intended as a gateway drug into the world of modular. (As addictions go, it's one of the safer ones.)\nI fell for the marketing hard I'm afraid.\nWhile I love the Moogs and Behringers, I kept reading about the Make Noise \"0-Coast.\" At the same time I was seeing these promotional videos featuring Suzanne Ciani, Kaitlyn Aurelia Smith, Todd Barton, Allesandro Cortini, etc. that beckoned me to (what was to me anyway) a new kind of music synthesis mindset: \"West-coast synthesis,\" it was called in general.\nThe general difference between this and what I grew up on (as it is usually explained) is that Bob Moog created \"east coast\" (or subtractive) synthesis with a focus on emulating traditional instruments by creating natural, basic waveforms and filtering out ends or bands of the spectrum while shaping the volume envelope. Don Buchla, on the other hand, was working on the other side of the US to create an electronic instrument that sounded like nothing that had ever existed before, focusing on timbral enrichment and complex wave shaping. (Incidentally, the difference is often couched as a rivalry or a dichotomy between the two, but unlike Biggy and Tupac in what is probably a more familiar East Coast/West Coast rivalry, from what I can tell, Buchla and Moog felt quite warmly towards one another and spoke of each other in glowing terms. Also most artists who use Buchla or Serge instruments also have subtractive synths in the arsenal as well.)\nAnyhoo, that brings us to the Make Noise. The 0-Coast is marketed as a synthesizer which contains elements of both east- and west-coast synthesis but has \"allegiance\" to neither. However the fact that it's really the only desktop unit available with any west-coast features makes it a stand-out as representing the west-coast among desktop semi-mods. I fell in love with mine right away. It's about the closest thing to a Buchla that most of us who love synths but don't perform for a living care to afford.\nThe only thing I'd change about the 0-Coast is that (Krell patches notwithstanding) it doesn't have an on-board performance control. Most of the time it's paired with an Arturia or a Korg, but my Keystep was so much wider than the 0-Coast that I found it a little unsatisfying. Buchla is often quoted saying he wanted to avoid \"Black and white keys\" because that forces you to think like a pianist instead of a synthesist essentially, and you can see the results in the controllers he came up with. Remembering that, I was inspired to create my own tribute to Don Buchla in the form of this capacitive-touch midi controller for my 0-Coast, \"The Oceania.\"", "title": "Oceania Midi Controller (for Make Noise 0-Coast and Other Synths)", "url": "https://www.instructables.com/id/Oceania-Midi-Controller-for-Make-Noise-0-Coast-and/", "section": "technology", "steps": [{"step": 1, "steps_text": "The materials should be pretty familiar and easy to come by for any maker-it's the process and time that are complicated. You'll need:\nMaterials\n1 Arduino Mega-I recommend the mini style (like this one at Amazon) to make it easier to mount under the sensor pads, but it's not absolutely necessary. You might even be able to use an Uno/Genuino or Mini or Feather, but that would probably require you to treat the ADC pins as digital and I don't know if the standard capacitance routine works on those. And you'd have to figure out the programming on your own.\n2 220\u03a9 resistors\n1 Stereo 3.5mm phono socket\n1 single sided sheet of copper clad (used for etching your own PCBs) at least 9\"x2 3/4\"\nStranded hookup wire (the thinner the better-I used this 30AWG, again from Amazon)\nSolder\nSomething you like and are comfortable working with to mount it on\nStereo TRS 3.5mm male-to-male cable\nTools\nA table saw (alternatively, a CNC or laser cutter would probably give you better results if you know what you're doing.)\nA soldering iron and soldering tools, including pliers, flush-cutters and wire strippers\nA printer (paper, not 3-d)(but maybe also 3-d)\nA straight-edge\nA permanent marker/markers\nA drill (a drill press or rotary tool press would be best.)\nA Rotary Tool or file\nSteel wool (optional)", "step_imgs": [], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "Print out the reversed (vertical) version of the pattern included (the one that doesn't have any note letters on it) and cut the two rows into the right and left strips. Next, cut the copper clad into two strips the same size as the two strips of paper (each should be 8 7/8\" x 1 \u215b\".) Tape the paper strips to the backs of the pieces of copper clad and, using a permanent marker, mark the corners of the triangles, parallelograms and rectangles on the edges of the copper clad, then use a straight edge to connect them so that you have something that looks like the last photo with this step.\nNext, very carefully set the table saw blade so that the blade barely cuts above the table level. The point is to remove a blade-width of the copper side of the clad but not cut through the fiberglass substrate (at least not substantially.) You may want to test it with some of the \"drop\" left over from cutting the strips of copper clad to see that the blade is neither too high nor too low. Cut the clad off using the lines drawn on the back as guides with which to line up the blade. You'll want to use an angle guide with an extension. The diagonal lines should all be at 62.5\u02da. Go slowly. As you can see, my cuts didn't quite come out as perfectly as I'd hoped. Once the channels are cut into the clad, you'll want to file down any rough copper edges (blood would really mess with the capacitance after all.) I took some steel wool to mine to give it a brushed feel.\nNeedless to say, take all the usual precautions when working with a table saw. Wear safety glasses and use a push-stick, and FOR GOD'S SAKE IF YOU DON'T KNOW WHAT YOU'RE DOING DON'T EVEN TRY THIS!\nAlternatively, I've included the PDF in hopes that if someone has a CNC machine or laser cutter they'd like to try this with that they can use the vectorized version of the layout and cut a professional looking one. (Please share the results if you do this.)\nOnce the not-keys are cut into the clad, drill holes with as small of a bit as your press can handle that will still allow you to get your hookup wire threads through into the tips or corners of the top rows of each of the not-key strips.\nOf course if you want you could avoid the hassle and artistry and cut a traditional keyboard by cutting regular straight line grooves across one strip of clad and then cutting shorter, thinner strips to sit on top of those (as the #/\u266dkeys.) Puffy double-stick tape will probably insulate enough that you wouldn't trigger the notes underneath but that's an untested conjecture. I'd be interested to see what you come up with.", "step_imgs": ["https://cdn.instructables.com/FFV/WSU2/JTCSMCIN/FFVWSU2JTCSMCIN.LARGE.jpg", "https://cdn.instructables.com/FHW/UOJT/JTCSMCIP/FHWUOJTJTCSMCIP.LARGE.jpg", "https://cdn.instructables.com/F68/45AN/JTCSMFVS/F6845ANJTCSMFVS.LARGE.jpg"], "step_title": "Step 2: The Not-keys"}, {"step": 3, "steps_text": "Solder one piece of hookup wire to each of the not-keys by running the wire through the drill holes from the back side, then flush-cut the wire off from the copper side. Without being too technical, think about how you're going to mount it, and plan to make the wire just long enough to get from each not-key in each strip to the Arduino without having more than a couple mm of extra wire. Then, very carefully, one wire at a time, solder the wire from each not-key to to the Arduino Mega pin corresponding to the number marked on each not-key in the photo. This is the make-or-break part of the operation. You may wish to skip ahead to the programming part and test the function of the keys after every few solder connections. (For example on my original version, pin 13 bridged or something and always read as though it was being touched, so I had to write code to compensate and move everything above it down a pin value.)\nNext, solder one 220\u03a9 resistor between the +5v on the Arduino and the sleeve connector of the socket, and solder the other resistor between the Pin 1/TX pin and the tip connector of the socket. (Note that the pinouts for various sockets will vary so it's up to you to determine which connection is which.) Finally, solder a piece of hookup wire between a Gnd pin on the Arduino to the ring connector on the socket.\nAs you can see I used a small piece of strip board to mount the resistors and socket, but that's not absolutely necessary.\nAfter soldering, you'll want to file/sand/rotary-tool the flush cuts of the soldered wire until smooth enough to play, and you may choose to use permanent marker to color the not-keys in any configuration you choose. I made the downward facing triangles all black as a visual cue, but I tested a red and a silver permanent marker and each worked (silver oddly diminished the capacitance readings.)", "step_imgs": ["https://cdn.instructables.com/FE5/0687/JTCSMBUC/FE50687JTCSMBUC.LARGE.jpg", "https://cdn.instructables.com/F93/XV18/JTCSMBO3/F93XV18JTCSMBO3.LARGE.jpg", "https://cdn.instructables.com/F2P/NE2I/JTEN04SB/F2PNE2IJTEN04SB.LARGE.jpg"], "step_title": "Step 3: Electronics"}, {"step": 4, "steps_text": "Let's not get too instruct-y about this part. Use whatever you feel comfortable with as a mount. I used stained solid oak for that classic synth look (a nod to the East Coast lineage) but you can use whatever you want. For example, I also made a CV version of this for my Eurorack case that's mounted on a PVC sheet construction. You might consider 3D printing a base if you have access to a printer with a wide enough bed, or even making a cardboard base for it. It really doesn't matter so long as it doesn't interfere with the electronics.\nAs you can see, I (sloppily) routed two channels for the wires on the backs of the not-keys, a recess for the electronics on the underside, and a port between the two so I could solder the wires to the copper clad pieces and the Arduino before mounting and simply pass the Arduino through the port. The piece of aluminum is what I used for mounting the electronics to (using plastic standoffs and a little hot glue for the socket strip board.) Then I screwed the metal into the base and put some EVA foot runners on the bottom.\nThe not-keys are attached to the base with strips of puffy double-stick tape, but again-use whatever you want as long as it doesn't interfere with capacitance or circuitry.", "step_imgs": ["https://cdn.instructables.com/FEX/RI28/JTCSMBIP/FEXRI28JTCSMBIP.LARGE.jpg", "https://cdn.instructables.com/FRC/HEUE/JTCSMBKU/FRCHEUEJTCSMBKU.LARGE.jpg"], "step_title": "Step 4: Mount It"}, {"step": 5, "steps_text": "If you've never programmed an Arduino before then you're on the right site-there are probably hundreds or thousands of 'ibles on the subject, so I won't cover that ground again.\nIn the attached zip file are two sketches. Download and unzip them and add them to your Arduino sketch library.\nThe first sketch(megaCapacitiveKeyboardTest) is an adaptation of the Arduino readCapacitivePin function which is here as a test that shows you what key is being pressed and the capacitance value for it while it's being pressed in the serial monitor. It will let you see some values and test the connections from the Arduino to the not-keys.\nLoad this onto the Arduino, open the serial monitor (make sure to set the serial monitor to the correct baud) and touch a few not-keys, noting the values for the heaviest and lightest touch you'd be using to play. These will be used for the minCap (lightest touch) and maxCap (heaviest) values in the second sketch (OceaniaMidi_Release), which is what you will actually load onto the controller to use it as, well, a controller. If you need to adjust the values, do so, then save the sketch again and upload it to the Oceania.", "step_imgs": [], "step_title": "Step 5: Program It"}, {"step": 6, "steps_text": "The only power required to run the Oceania is sourced to the Arduino, so you can use the same cable as you used to upload the sketch and power it from your computer, or hook it up to a phone charger or a wall wart-whatever trips your fancy and works with the Arduino you used.\nPlug the male-to-male cable into the Oceania socket and the Midi A socket of the 0-Coast or other compatible synth and have a go at it! The two keys to the far left (pins 29/28) act as pitch bend and the two to the far right (pins 30/31) will raise and lower the octave the notes are sent as.\nThe 0-Coast seems to have a tendency to hang onto some notes sent by the Arduino, but usually you can just touch the hanging tone again and it will turn off. Also if the 0-Coast is connected to the Oceania when you load the sketch it may get stuck on a low note. If that happens just power cycle the 0-Coast and it should go away.\nFinally, it occurs to me that one thing that would have made the cutting of the copper clad much cleaner would have been a laser cutter, so if you found this at all helpful, please vote for this Instructable in the Epilog X contest.\nHappy playing!", "step_imgs": [], "step_title": "Step 6: Play"}], "channel": ""}, {"category": "", "description": "Dear friends, followers and DIY-enthusiasts!\nAs I announced at the end of my description of the \"Steampunk Oriental Night Light - Nur-al-Andalus\"- project, some days ago, here comes the second project (in a technical way the twin brother) using a CMH-Bulb in the center of this object called:\n\"Steampunk Voltaic Arc Spectator\" which is definitely indispensable for Mad Scientists!!!\nAfter writing so much about theory of CMB-Bulbs in my last instructable, I now just concentrate to the making of!\nBut before we can start I have to write this:\nNOTE: All producers like GE, Philips and more others, write about a possible risk that a bulb could burst when it is running in its normal use. It is said that if this tube bursts, very hot (about 500\u00b0C) glass parts will be spread. So take care and do not wreck yourself. Better cover these bulbs with a protective glass shield.\nMy personal opinion and experience is that these bulbs are quite safe when they just glowing like I used to work with, especially when you use the very low power of these flash units. It seems to me, that it is nearly the same risk like working with neon gas filled bulbs or nixie tubes. These nearly dead CMH bulbs (and also brand new ones) just start to glow and they do not heat up. I measured at different times these bulbs while glowing under here described conditions! and they showed just the same temperature as the surrounding air in the room. Conclusion: This construction works deeply under the operating temperature! Literature talks about 6 exploded bulbs while highly running! in a number of 35 billions of produced bulbs! over a time of twenty years. But it is your own decision and I please you one more time not to harm you, and to take care of your health!!!\nI hope that enjoy this constructive twin brother instructable to the Steampunk Oriental Night Light - Nur-al-Andalus project and I thank you for reading, watching, following and hopefully for voting at the trash to treasure contest 2019;-))\nYous Aeon Junophor\nSo let\u00b4s start!", "title": "Steampunk Voltaic Arc Spectator (indispensable for Mad Scientists)", "url": "https://www.instructables.com/id/Steampunk-Voltaic-Arc-Spectator-indispensable-for-/", "section": "technology", "steps": [{"step": 1, "steps_text": "In the center of this apparatus I placed a nearly dead CMH Bulb, hooded by a half cut copper tube which is constructed for being turned 360\u00b0 around. From one side you can take a closer look through a magnifying object glass from a wrecked diascope and watch in detail the genius construction of this bulb type and on the other side there is a single glass lense which turns the picture upside down. Because of its only oft glowing of gases and metal vapors inside by using such a \"nearly dead-bulb\" (and of course only in this case!!!) -you can\u00b4t harm your eyes.\nSo you can discover the secrets of the ionized gases and take as a mad scientist a look into the depth of the universe muharr!!! muharr!!!", "step_imgs": ["https://cdn.instructables.com/FY3/BM2N/JT91UBJB/FY3BM2NJT91UBJB.LARGE.jpg", "https://cdn.instructables.com/FL9/L85H/JTEN1GS1/FL9L85HJTEN1GS1.LARGE.jpg", "https://cdn.instructables.com/FBL/C8YK/JTEN1H05/FBLC8YKJTEN1H05.LARGE.jpg", "https://cdn.instructables.com/FX5/D1LO/JTEN1H62/FX5D1LOJTEN1H62.LARGE.jpg", "https://cdn.instructables.com/F8N/0P2Z/JT91UBN7/F8N0P2ZJT91UBN7.LARGE.jpg", "https://cdn.instructables.com/FHI/292E/JT91UBJC/FHI292EJT91UBJC.LARGE.jpg", "https://cdn.instructables.com/F04/WCZA/JT91UBJ5/F04WCZAJT91UBJ5.LARGE.jpg"], "step_title": "Step 1: Short Description About This Spectator"}, {"step": 2, "steps_text": "As you know, I love it to create new things in steampunk style, mostly/only out of scrap and that makes it difficult to give you a parts-list which enables you to copy this spectator one to one. But maybe it helps you a little bit to find your own creation so here it comes:\nParts list:\n1 pc. of antique oval picture frame made of wood\nI got the antique wodden picture frame (together with some other more) as a hand-me-down from my grandpa!\nBrass and copper parts from plumber scrapyard:\n1 pc. of copper fitting 18 x 22 mm, already used\n2 pcs. of already used copper tubes 12 mm\none welded with and one pressed with fittings from central heating system\n1 pc. of magnet valve brass made body, \u00be inch\n1 pc. of coupling nut 1 inch, used\n1 pc. of coupling nut 1/2 inch, from faucet\n1 pc. of coupling ring 18 mm\n1 pc. of O-ring, 40 mm, rubber\nseveral parts to build the bulb hood top called \u201ecrown\u201c\nParts from electric scrapyard:\n1 pc. of object lense from wrecked diascope\n1 pc. of single glass lense \u00f835 mm\n1 pc. of flash unit from single use camera\n2 pc. of 1.5 V AA-batteries from single use cameras\nDifferent lengths of electric wires.\n1 pc. of CMH-bulb, Philips TCM 35 Watts, nearly broken down\n1 pc. of EDISON Screw socket E42 from 1.000 Watts incandescent bulb, made of brass\n1 pc. of screw terminal\n1 pc. of amber LED from a wrecked signal light\nParts from woodshop scrap:\n2 pcs. of Plywood plate\nProduction wastage/rejects:\n1pc. of brass tube 12 mm\n1 pc. of copper tube 18 mm milled out\n1 pc. of vulcanized fibre plate\nSamples from trading companies:\n4 ps. rubber feet 12 mm\nBought at Ebay or/and amazon:\n1 pc. of micro switch\n1pc. of micro push down button\n1 pc. of Munsenring 42 mm, (brass)\n1 pc. of Munsenring 35mm, (brass)\n1pc. of batteryholder (4xAA-battery)\n4 pcs. footplate for Munsen rings (brass)\nDifferent pcs. of brass screws and washers\n1pc. of aerosol can car finish, black", "step_imgs": ["https://cdn.instructables.com/FJ4/ARRH/JT91UBH9/FJ4ARRHJT91UBH9.LARGE.jpg", "https://cdn.instructables.com/FPT/QZ92/JTEN1G67/FPTQZ92JTEN1G67.LARGE.jpg", "https://cdn.instructables.com/FXJ/F05G/JT91UBH6/FXJF05GJT91UBH6.LARGE.jpg"], "step_title": "Step 2: Parts List"}, {"step": 3, "steps_text": "A piece of milled out copper tube from production wastage, (outer diameter 18 mm, inner diameter 15.5 mm) fits perfectly around the CMH tube. I got a handful of this tubes from production wastage and if you cut them right in the middle, you get a pair of such \"hood-bodies\". One piece of an used copper tube (15 mm) already covered with a coupling ring is fixed with a combination of one M5 brass screw, two nuts, one washer and again one covernut by epoxy resin. At the end I attached a special ball bearing cage made of laminated fabric and the top crown is ready to be glued together again with epoxy resin. These cages also had been rejected from further production of bearings and had been thrown to the srap.", "step_imgs": ["https://cdn.instructables.com/F5U/VMYO/JT91UBGD/F5UVMYOJT91UBGD.LARGE.jpg", "https://cdn.instructables.com/F1G/4GAO/JT91UBGA/F1G4GAOJT91UBGA.LARGE.jpg", "https://cdn.instructables.com/FKV/ZFGU/JT91UBI0/FKVZFGUJT91UBI0.LARGE.jpg", "https://cdn.instructables.com/FJX/FORL/JT91UBHW/FJXFORLJT91UBHW.LARGE.jpg", "https://cdn.instructables.com/F1G/K1UH/JT91UBH2/F1GK1UHJT91UBH2.LARGE.jpg", "https://cdn.instructables.com/F6J/GTKD/JT91UBG9/F6JGTKDJT91UBG9.LARGE.jpg"], "step_title": "Step 3: Hooding the Bulb"}, {"step": 4, "steps_text": "The metal body from the magnet valve made of brass, was covered by a coupling nut fixed with epoxy resin. Than worked on the 18 x 22 mm copper fitting where I just took the former copper tube out.\nI\u00b4ve just cut the rest of the former tube lengthwise with a sharp file, took a plier made one turning move and 30 seconds later I got this fitting ready for reusing here! This fitting was also attached to the valve top with epoxy resin. In this construction the prepared screw terminal fits perfectly in.\nNext step was drilling a hole at the bottom of the valve to put the wires through later.\nThen the two copper tubes with with screw fittings already on, got the prepared Munsen rings on, which later carries the single lense and the object lense, covered with the brass made Edison Screw socket E42!\nLast step was to screw these new parts left and right to the open parts of the valve body.", "step_imgs": ["https://cdn.instructables.com/FVE/W1SH/JT91UBJD/FVEW1SHJT91UBJD.LARGE.jpg", "https://cdn.instructables.com/FOM/XWM2/JTEN2NG6/FOMXWM2JTEN2NG6.LARGE.jpg", "https://cdn.instructables.com/FNF/X558/JT91UBH8/FNFX558JT91UBH8.LARGE.jpg", "https://cdn.instructables.com/FBC/O7KC/JT91UBIB/FBCO7KCJT91UBIB.LARGE.jpg", "https://cdn.instructables.com/FKY/0FYN/JT91UBIA/FKY0FYNJT91UBIA.LARGE.jpg"], "step_title": "Step 4: Metal Works"}, {"step": 5, "steps_text": "First a plate (3 mm) of red fibre was put into the old wood made picture frame from my grandpa. Then two plates of plywood had been screwed together with the frame. Next step was colouring the wooden parts with car finish(3 layers)\nThe I cut and drilled of the wooden parts to put in the switch and the push button in and also some spare place to keep the battery holder and some wires in. At the end, the former footplates of the munsen rings had been fixed with brass screws to the fibre plate.They now hold the former magnet valve body tight.", "step_imgs": ["https://cdn.instructables.com/FCB/AK1J/JT91UBHF/FCBAK1JJT91UBHF.LARGE.jpg", "https://cdn.instructables.com/F59/J5RF/JT91UBI6/F59J5RFJT91UBI6.LARGE.jpg", "https://cdn.instructables.com/FSA/8K76/JT91UBI7/FSA8K76JT91UBI7.LARGE.jpg", "https://cdn.instructables.com/FSN/FQA2/JT91UBN1/FSNFQA2JT91UBN1.LARGE.jpg", "https://cdn.instructables.com/FVD/JQOX/JT91UBN2/FVDJQOXJT91UBN2.LARGE.jpg", "https://cdn.instructables.com/FMW/3J54/JT91UBJI/FMW3J54JT91UBJI.LARGE.jpg", "https://cdn.instructables.com/FD6/GCVU/JT91UBN4/FD6GCVUJT91UBN4.LARGE.jpg", "https://cdn.instructables.com/F5N/1QJY/JT91UBN3/F5N1QJYJT91UBN3.LARGE.jpg", "https://cdn.instructables.com/FYA/OUF8/JT91UBN0/FYAOUF8JT91UBN0.LARGE.jpg", "https://cdn.instructables.com/FU5/EDV2/JT91UBJH/FU5EDV2JT91UBJH.LARGE.jpg", "https://cdn.instructables.com/FXR/ECY1/JT91UBN5/FXRECY1JT91UBN5.LARGE.jpg"], "step_title": "Step 5: Woodworking"}, {"step": 6, "steps_text": "The battery holder keeps the two needed AA-batteries (1,5 Volt each) which now supply the LED and the CMH-Bulb via flash unit as well as the flash board from the single use camera. Just some wires had to be soldered to the push button for the LED and to the switch to ignite the CMH bulb with the high voltage from the flash circuit.\nThe electronic and electric construction of this apparatus is nearly the same like the Steampunk Oriental Night Light - Nur-al-Andalus STEP 5, so I don\u00b4t want to bother you by repeating.\nI hope you enjoyed this instructable\nand if you like it please do not forget to vote for it at the trash to treasure contest 2019 !\nYours Aeon Junophor", "step_imgs": ["https://cdn.instructables.com/FY5/MRZ1/JT91UBG1/FY5MRZ1JT91UBG1.LARGE.jpg", "https://cdn.instructables.com/FZ9/2N1D/JT91UBG2/FZ92N1DJT91UBG2.LARGE.jpg", "https://cdn.instructables.com/F80/F5X2/JT91UBG3/F80F5X2JT91UBG3.LARGE.jpg", "https://cdn.instructables.com/FSX/OF7A/JT91UBG4/FSXOF7AJT91UBG4.LARGE.jpg", "https://cdn.instructables.com/F45/Y5UQ/JT91UBG5/F45Y5UQJT91UBG5.LARGE.jpg", "https://cdn.instructables.com/FB6/QIOC/JT91UBG6/FB6QIOCJT91UBG6.LARGE.jpg", "https://cdn.instructables.com/F4G/RRBR/JT91UBN6/F4GRRBRJT91UBN6.LARGE.jpg", "https://cdn.instructables.com/FJS/3766/JT91UBG0/FJS3766JT91UBG0.LARGE.jpg", "https://cdn.instructables.com/FBQ/X8PA/JT91UBG7/FBQX8PAJT91UBG7.LARGE.jpg"], "step_title": "Step 6: Wiring at the End"}], "channel": ""}, {"category": "", "description": "\"Designing a Simple 3D Printed Rubber Band Car using Autodesk Fusion 360\" is an Instructable illustrating how I designed, printed and assembled a simple rubber band powered car for the kids and grandkids.\nThis little \"pocket size\" car will not win any distance or speed records, but the kids and grandkids love it for table top racing, it's quite durable, and it runs in two modes; \"power\" and \"coast\". Power mode is when the car is unwinding the rubber band from the axle. When the rubber band is completely unwound, it disconnects from the axle allowing the car to enter coast mode for additional distance.\nThe symmetrical design of the car requires eight 3D printed parts (two chassis sides, two axles, and four wheels) yet only three unique parts (chassis, axle and wheel), with all parts small enough to fit on most if not all 3D printers.\nI've included a step by step video of the design and assembly process, the Autodesk Fusion 360 cad file \"Rubber Band Car v1.f3d\" containing the design (familiarity with the Autodesk Fusion 360 environment is highly recommended), and all .STL files required to print the car.\nAs usual, I probably forgot a file or two or who knows what else, so if you have any questions, please do not hesitate to ask as I do make plenty of mistakes.\nDesigned using Autodesk Fusion 360, sliced using Cura 3.5.0, and printed in PLA on an Ultimaker 2+ Extended and an Ultimaker 3 Extended.", "title": "Designing a Simple 3D Printed Rubber Band Car Using Autodesk Fusion 360", "url": "https://www.instructables.com/id/Designing-a-Simple-3D-Printed-Rubber-Band-Car-Usin/", "section": "technology", "steps": [{"step": 1, "steps_text": "I purchased eight \"R20\" sized O-Rings (25mm ID, 3.5mm Section) for use as the tires and a bag of assorted rubber bands to use as the \"motor\".\nI printed all parts at .15mm layer height with 50% infill. I printed two \"Axle.stl\", two \"Chassis.stl\" and four \"Wheel.stl\".\nPrior to assembly, I test fit and trimmed, filed, sanded, etc. all parts as necessary for smooth movement of moving surfaces, and tight fit for non moving surfaces. If you decide to make your own Simple 3D Printed Rubber Band Car, depending on the colors you chose, your printer model and your printer settings, more or less trimming, filing and/or sanding may be required. I carefully filed all edges that contacted the build plate to make absolutely certain that all build plate \"ooze\" was removed and that all edges were smooth. I used small jewelers files and plenty of patience to perform this step.", "step_imgs": [], "step_title": "Step 1: Purchase, Print and Prepare the Parts."}, {"step": 2, "steps_text": "As shown in the video and screen captures, I performed the following steps to assemble and test the car:\nPlaced the eight O-Rings onto the four \"Wheel.stl\" components.\nPressed the two \"Chassis.stl\" together (if the fit is loose, use a small dot of thick cyanoacrylate glue).\nPressed one \"Axle.stl\" into one wheel assembly until in was flush with the wheel outer surface, then repeated the process with the second \"Axle.stl\" and wheel assembly.\nSlid the two axle assemblies into the chassis assembly.\nPressed the remaining two wheels onto the two axle assemblies.\nChecked to make sure the wheels rotated smoothly.\nAttached a rubber band to the car as shown in the video.\nWound the car as shown in the video and let it go!\nAnd that is how I designed, printed and assembled Simple 3D Printed Rubber Band Car.\nHope you enjoy it!", "step_imgs": ["https://cdn.instructables.com/FAN/YQXK/JTEN116R/FANYQXKJTEN116R.LARGE.jpg", "https://cdn.instructables.com/F6B/X8IY/JTEN117U/F6BX8IYJTEN117U.LARGE.jpg", "https://cdn.instructables.com/F99/VRVM/JTEN11C1/F99VRVMJTEN11C1.LARGE.jpg", "https://cdn.instructables.com/FSM/F9XQ/JTEN11GF/FSMF9XQJTEN11GF.LARGE.jpg", "https://cdn.instructables.com/FON/5JHI/JTEN11HG/FON5JHIJTEN11HG.LARGE.jpg", "https://cdn.instructables.com/F7H/9G95/JTEN114P/F7H9G95JTEN114P.LARGE.jpg", "https://cdn.instructables.com/FCV/AUPO/JTEN115Q/FCVAUPOJTEN115Q.LARGE.jpg"], "step_title": "Step 2: Assembly and Test."}, {"step": 3, "steps_text": "The car can use twin rubber bands for all wheel drive!\nMount the rubber bands on both the top and bottom of the car as shown in the photograph (you may wish to tie or glue the rubber bands to the chassis to hold them in place). Hook the free ends of the rubber bands onto the axle rubber band hooks as shown, then draw the car backward and release for all wheel drive!", "step_imgs": ["https://cdn.instructables.com/F3C/FIYA/JTEN1TFN/F3CFIYAJTEN1TFN.LARGE.jpg"], "step_title": "Step 3: Oh, and Did I Forget to Mention..."}], "channel": ""}, {"category": "", "description": "Custom Coins and Medallions\nMath, Social Studies, English, Science, Grades 3 - 8\nLesson Overview Students use Tinkercad to design and create original coins, medallions, or other decorative items that depict the important features of a person, place, thing, or concept. Using a few simple design rules, students can put pictures and/or text on both the top and the bottom, reshape the coin, and easily 3D print the items without supports. For beginning Tinkercad users, coins offer easy success - the flat design doesn\u2019t require complex supports in order to print properly, and very few graphics are needed to complete the design. Once printed, custom coins can be displayed, shared, or - depending on the content of the coin - used as teaching tools.\nThis project is structured to follow the Engineering Design Process (EDP), a process that helps designers in any discipline create solutions to problems. While there are many ways that people solve problems, designers often use the EDP because it offers a clear roadmap for them to follow as they work towards a solution. First, designers Define the challenge they are facing, then Learn more about the problem and Explore existing solutions. It\u2019s tempting to skip these first few steps and head straight into brainstorming, but don\u2019t! When designers take the time to understand the problem clearly, they come up with much better solutions. The Design phase is where brainstorming happens. Designers brainstorm multiple possible solutions, then develop a few of them into more detailed plans. Encourage your students to plan at least 3 of their potential ideas before choosing a design direction and starting to Create a product based on their design. If they hit any roadblocks trying to create their first design choice, they\u2019ll be able to revisit their alternate design plans and choose a new direction - without starting from scratch. Designers then take time to Observe their design and see how they can Improve it. We strongly recommend that students have an opportunity for at least 2 Create-Observe-Improve cycles. When students feel they have to \u201cget it right the first time,\u201d they are less willing to take risks and be creative. By repeating the cycle, they have a chance to fix flaws and adopt successful ideas from classmates, and in fact, they\u2019re practicing what professional designers really do. A good design cycle builds in time for the designer to Reflect on their product and the process of making it, looking for learning habits and insights that will help in future challenges. When the work is complete, designers are ready to Share. They bring their work into the real world, by posting, publishing, presenting, or exhibiting - or giving or selling if appropriate! - what they\u2019ve made. For students working through a design process, a real audience helps students connect their learning and work experiences to the world outside the classroom. For Makerspaces and Maker projects, in particular, this is hugely important for building confidence in every student and a sense of community among Makers. To help students work through this process, be sure to build in planned \u201cstops\u201d at each step for students to record their thoughts and progress as they work through product iteration cycles.\nEssential Question(s)\nHow can we use graphic design to summarize and represent key attributes of a person, place, thing, or concept?\nHow can the design process and 3D modeling tools be useful tools in creating meaningful artifacts?\nTime Required: 2-3 Hours design time\nSkills Practiced: Critical analysis The Design Process 3D modeling in Tinkercad Symbolic Communication Materials Needed: Sketch paper and pencils Tinkercad Miscellaneous prototyping materials (paper, cardstock, foam sheets, markers, etc.) 3D Printer and filament.", "title": "Custom Coins and Medallions", "url": "https://www.instructables.com/id/Custom-Coins-and-Medallions/", "section": "technology", "steps": [{"step": 1, "steps_text": "Context\nCoins show important slogans, symbols, and personalities from history, mythology, and nature. But why? Simple words and images allow designers to clearly communicate in a limited amount of space - pick up any coin and look at the words and images. Ask yourself: where is this coin from? What is that country\u2019s government trying to say about itself on that coin? Who are its heroes? What are their values? Does the country\u2019s image on the coin match the image in your head?\nGiving students the chance to design their own coin (or medallion, award, etc.) is a perfect opportunity for students to:\nPractice using graphic design as a communication tool.\nDevelop awareness of symbolism by using it themselves.\nDevelop awareness of visual arts and writing as works intentionally created by an artist or writer.\nSimple prompts for 2-3 hour projects allow first-time Tinkercad users to focus on learning the software - students who are already skilled with Tinkercad can be assigned complex, higher-order-thinking prompts that require additional time for intense research, collaboration, design, and sharing. Consider the example of these two social studies prompts:\nSimple: state shapes with an important landmark or product on 1 side, and a study question on the other.\nComplex: class designs a \u201ctreasure hunt\u201d game or exhibit that leads players through all 50 states, where the coin designs for each state form a portion of each clue.\nChallenge:\nStudents create a coin or medallion that commemorates something important or interesting to them, following a theme that the teacher assigns. (E.g., a real or fictional country, social group, public figure, team etc.) Students will fabricate their work using Tinkercad and 3D printers.\nCriteria:\nThe coin must memorialize or celebrate something.\nThe coin has at least 2 of the following features:\nLegible text.\n1 or more pictures.\nMeaningful shape (other than circular).\nConstraints:\nSize constraints: Max height: 0.2 in, Max area 6 square inches.\nMax print time: 30 minutes.\nStudent Product / Learning Goals\nA custom-designed, 3D printed coin or medallion.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research: Students examine and analyze a few real-life examples of the product they want to create (coins, medals, etc.). Give students examples, and prompt them to observe, document, and discuss:\nWhat images do you see?\nWhat do you think of when you see that image?\nWhat text do you see?\nWho do you think made this?\nWhat are they trying to tell you?\nHow do the text and image work together to communicate their message?\n2. Collect: Have students document their research on the coin subject. Students can keep an inspiration page such as a blog, Google Docs, a notebook, Padlet, poster, etc to save notes or images.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "REMEMBER: Be sure to provide stopping points for the class where students can observe, evaluate, and document their designs.\n1. Design: Students use their inspiration page from step 2 as a reference and use one of the following methods to create at least 3 different ideas that meet the criteria defined above.\nOption A: draw designs showing how this coin will look, naming each design element\nOption B: sculpt design drafts using clay.\nOption C: let the students try drafting directly in Tinkercad to get familiar with the program and make practice models.\n2. Choose a Direction: Have the students choose a design to model and print. Consider also checking it against the \u201cThing\u201d Checklist (this checklist can be found in the Resource section of the Lesson). Some examples:\nOne coin, two colors! Even if your machine only prints from a single filament, you can still get a multi-color effect. Pause the build and change the filament color to try this look.\n2 different coins with raised features, enhanced with permanent marker (left) and oil paint pen (right)\nThe Image on right is the front face. The image on the left is the detailed back.\nCoin commemorating the first discovery of \u201cBrontosaurus\u201d bones and their eventual re- identification as an Apatosaurus skeleton. Note holes in corners for creating a wearable necklace. State of Montana created using Tinkercad US State shape generator.", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "You can watch our video tutorial on Youtube:\nThis is a summary of the creation steps described in the video:\nCreate a body of the coin using a circle, ellipse, or other custom shapes (see in video)\nOptional: Create a rim (optional) by cutting out some of the top of the coin (see in video)\nAdd engraved/raised text or image to the top of the coin (details below) (see in video)\nAdd engraved text or image to the back/bottom of the coin (details below) (see in video)\nCheck design against size constraints\n3D printer \u201cslicer\u201d program to check against print time and volume constraints\nRefine the design and iterate through the design cycle until you meet the design criteria and constraints.\nPrint the design\nUse permanent markers or paint pens to enhance parts of the design\nAdmire and share the coins!\nAdding raised photographic images (see in video)\nMake or choose a high-contrast image\nImport to an svg app or website\nDownload the new svg file\nImport the svg file into Tinkercad workplane\nAdd height to your file\nDrag to coin body, adjust position, and group with all other parts of coin.\nNote: at one time, Tinkercad offered an Image Generator in its Shape Generator gallery. It is currently offline for debugging, but there are separate apps and sites that can perform this function for you - search online for \u201cconvert image to stl.\u201d\nAdding engravings (see in video)\nTo add words or simple images as engravings, import or create your object.\nSelect the object - in the Shape editor panel, click \u201cHole\u201d\nSet object height to desired engraving depth - 0.05\u201d or 1 mm works well\nIf adding to the front/top of the coin, align the top of the engraving to the top of the coin body\nIf adding to the back of the coin, Flip object as needed, then type \u201cD\u201d to drop the object to the workplane\nSelect all and group - you should now see a visible engraving in the coin\nAdding a raised rim to one side - works best for simple convex shapes (see in video)\nSelect the body of the coin, and make a duplicate. Select the duplicate, and turn it into a hole.\nAdjust its height to an ideal engraving depth - 0.05\u201d or 1 mm works well\nHolding \u201cshift,\u201d drag the corner of the hole to shrink its footprint slightly.\nSelect both the original coin body and the hole. Align the objects so that their footprints are centered.\nSelect only the hole. Use the handle to drag it upwards so that it erases a small amount of the main coin body. The rim should now be visible. Remember: raised features, like the rim, are best limited to .05 in or 2 mm of thickness.\nSelect the hole and the coin body - Group them to turn them into a single object.\nNeed a jumpstart? Students can go to the \u201cMaker Coin\u201d project at https://www.tinkercad.com/things/7SfuGhp2R1u and start by following these steps:\n1. Create a copy of the file for personal use by clicking \u201cTinker this\u201d\u2013 give it a new name.\n2. Ungroup the coin elements and move the pieces apart to see how each is incorporated in the object.\n3. Refer to coin drafts from Step 3: Design above, and begin to replace parts of the Tinkercad model with original graphics.", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "REMEMBER: Be sure to provide stopping points for the class where students can observe, evaluate, and document their designs.\n1. Observe and document: Students print their designs, share, observe, and document what they notice. Some possible note-taking prompts they might respond to:\nWhat do the designs look like now that they\u2019ve been printed?\nWhat parts of the design are unclear? Is anything too big? Too small? Blurry? How could the design be changed to make them clearer?\nWhen others look at the coin, do they see the ideas that the designers wanted them to? If not, what changes can designers make?\n2. Improve: Students use their observation notes to return to Tinkercad and make slight alterations to their design. If any students are feeling particularly discouraged by their first round of printing, redirect them to their alternative designs from step 3.\n3. Iterate: It\u2019s a good idea for students to have an opportunity for at least two design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\n4. Download pdf bellow with possible discussion/documentation prompts for Steps 5 and Step 6.\n5. Follow instructions in the Create Step as needed for the next iteration.", "step_imgs": [], "step_title": "Step 5: Observe, Improve, Iterate"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.\nDownload pdf with possible prompts for Steps 5 and Step 6.", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "Give the students an opportunity to share their coins with the class or some other community. Options for sharing include presentation, demonstration, blog or online post, video clip, physical display, family events, and maker fairs, or in the use for which it was intended.", "step_imgs": [], "step_title": "Step 7: Share"}, {"step": 8, "steps_text": "\u201cTHING\u201d Checklist:\nTo ensure you get a quality print, go through the list before tinkering and printing.\nMeets overall size requirements as specified in the course packet: Height, Width, Depth, Weight, Volume as specified in the challenge description.\nEmbossed features stick out no more than 1 mm (.04 in).\nEngraved features go in no more than 2 mm (.08 in).\nUnsupported features (overhangs) are angled up at least 15\u2070 (more is better).\nBridge features have an unsupported span no greater than 12 mm (.5 in).\nWall thicknesses are typically 2 mm (.08 in).\nThin features such as details are no smaller than 1 mm (.08 inch).\nRound holes can be at any angle and are greater than 2 mm (.08 in)", "step_imgs": [], "step_title": "Step 8: Resources"}, {"step": 9, "steps_text": "Science + Social Studies:\nCoin that replaces existing currency from a specific country, with a figure from that country\u2019s science history on 1 side and an innovation they are known for on the other.\nStudents design a custom medallion for a notable scientist (or science concept) as a showpiece to accompany an essay or speech about the prize winner.\nMath + Social studies:\nStudents work in groups to design novel systems (or reinvent existing systems) of currency, with each student working to design a different denomination. Requirements may include but are not limited to:\nDifferent denominations of currency\nA standard value (e.g. gold standard) for each team to set the value of their basic unit\nImportant people or symbols depicted on currency, explanation of choice\nExchange rate calculators between different groups\u2019 currency\nMaximum time/ease of production\nMethod of mass production - in all likelihood, kids will choose molding, which makes our Candy Casts tutorial [To Be Published] a good intro step for a coin production project.\nELA / Literature:\nStudents work in pairs: Students design a coin with specific meaning in mind, swap with a partner, and write about the meaning of their partners\u2019 coins without knowing what the creator\u2019s original intentions were.\nCoins with authors\u2019 images or names on 1 side - on the other side,\none of their characters thought to embody them\none of their quotes that the student finds important\nan image symbolizing a theme the author often explores or explores in a work the students have read\nFilm as literature: explore the concept of \u201cMacGuffins\u201d that drives the plot (e.g. the lamp in Aladdin, Nemo in Finding Nemo) - have students write a treatment (plot summary) for an original movie or sequel, and design a printable model of the MacGuffin driving the plot.\nWe hope you had fun designing and sharing your Custom Coins and Medallions. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in? Send us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nList of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 9: Project Extensions"}], "channel": ""}, {"category": "", "description": "In my Arduino 101 tutorial, you'll be taught how to setup your environment in Tinkercad. I use Tinkercad because it is a pretty powerful online platform that allows me to demonstrate a range of skills to students for building circuits. Feel free to build all my tutorials using the Arduino IDE and a real Arduino!\nIn this tutorial, we're going to learn about buttons! We need to know:\nHow to wire them up\nReading their value\nDebounce, and why it's important\nA practical application (creating a menu)\nMost people think the most practical thing to do with a button is turn a light on and off. We'll, not here! We're going to use ours to create a menu and set some options on the Arduino.\nReady? Let's get started!", "title": "A Menu in Arduino, and How to Use Buttons", "url": "https://www.instructables.com/id/A-Menu-in-Arduino-and-How-to-Use-Buttons/", "section": "technology", "steps": [{"step": 1, "steps_text": "The first step is to put an Arduino and Breadboard Small onto the prototyping area. Check the images above to see how to wire up the power rails.\nA Breadboard Mini has two power rails top and bottom. We wire these up to the Arduino so we can provide power to more components. Later in this tutorial we will use 3 buttons so we'll need more power. The thing to note is that on a breadboard small, the power rails run across the board, horizontally. This is different to the columns in the main prototyping area in the middle; these run vertically. You can use any of the power pins to provide power to any column in the main area in the middle.\nWhen you add power, use black and red wires to the negative and positive respectively. Add wires at the end that run power to the other side of the board. We won't use that side, but it's good practise.", "step_imgs": ["https://cdn.instructables.com/FGO/G25W/JTCSMQPX/FGOG25WJTCSMQPX.LARGE.jpg", "https://cdn.instructables.com/FRY/IT5B/JTCSMQD5/FRYIT5BJTCSMQD5.LARGE.jpg"], "step_title": "Step 1: Setup the Board"}, {"step": 2, "steps_text": "Add a small pushbutton from the components tray. It should look like the one in the image. Make sure it isn't a switch! Add a resistor, too. Click it, and set its value to 10k\u03a9. That is enough to pull the pin low when it is not connected, which is very important later in the code.\nPlace the component across the middle of the breadboard. The way a button works is:\nCorner to corner, the button is not connected. Pushing the button closes the contacts and connects the corners.\nThe sides of the button are connected. If you connected a wire to the top left and bottom left, the circuit would be closed.\nThis is why we put the component across the space in the middle. It makes sure the corners are not connected under the pins in the board.\nThe next step provides a couple of images that illustrates these points.\nPlace the resistor from the bottom right pin across columns, so it sits horizontally.", "step_imgs": ["https://cdn.instructables.com/FM5/WIUA/JTCSMQGJ/FM5WIUAJTCSMQGJ.LARGE.jpg", "https://cdn.instructables.com/F8W/ARQ5/JTCSMQEP/F8WARQ5JTCSMQEP.LARGE.jpg", "https://cdn.instructables.com/FLH/3G7D/JTCSMQI2/FLH3G7DJTCSMQI2.LARGE.jpg"], "step_title": "Step 2: Add the Button and Resistor"}, {"step": 3, "steps_text": "The images above make it fairly clear how the buttons connect. It was always a point of confusion when you think something is all good and it doesn't work!\nNow, let's add the wires.\nPlace a red lead from a positive power pin to the same column as the bottom right pin on the button\nPlace a black lead from a negative power pin to the same column as the resistor.\nPlace a coloured wire (not red/black) from the top left pin to Digital Pin 2 on the Arduino\nCheck the images above to make sure your wiring is correct.", "step_imgs": ["https://cdn.instructables.com/FT2/T14K/JTCSMQJM/FT2T14KJTCSMQJM.LARGE.jpg", "https://cdn.instructables.com/FWL/RV1Y/JTCSMQL5/FWLRV1YJTCSMQL5.LARGE.jpg"], "step_title": "Step 3: Button Connections"}, {"step": 4, "steps_text": "Let's have a look at the code for a basic button.\nOpen the code editor and change from Blocks to Text. Clear the warning that comes up. We're happy with text!\nYou know the basic setup, so let's define the button and do a basic read. We'll print the output to Serial.\nI put a few extra comments into the code below so it's easier to read than the image.\n// Define constants\n#define button 2\n\nvoid setup() {\n pinMode(button, INPUT);\n Serial.begin(9600);\n}\n\nvoid loop() {\n\n // Read the digital pin to check status of button\n int pressed = digitalRead(button);\n\n // Button returns HIGH if pressed, LOW if not\n if(pressed == HIGH){\n  Serial.println(\"Pressed!\");\n }\n}\nOk, well that works!\nEssentially, all we're doing is checking the status of the digital pin each time the code loops. If you click Start Simulation and press the button, you'll see the Serial Monitor (click the button below the code) display \"Pressed!\" repeatedly.\nOne feature you'll see in the code above is the if() condition evaluation taking place. All the code is doing is asking a question and evaluating if it is true, in this case. We use the is equal (double equal signs, like this: == ) to check if the value of the variable is equal to a certain value. A digitalRead() returns either HIGH or LOW.\nUsing the if()else if / else we can check many conditions or all conditions, and if you go back to the Arduino Basics, you'll see some of the comparisons you can make.\nNow... Our code might look complete... But we have a problem.\nSee, that works really well when in the simulator. But real electricity has noise, especially DC electronics. So our button might return a false reading sometimes. And that's a problem, because your project might not respond the right way for the user.\nLet's fix it!", "step_imgs": ["https://cdn.instructables.com/F28/TGYP/JTCSMQMO/F28TGYPJTCSMQMO.LARGE.jpg", "https://cdn.instructables.com/FNY/MF0R/JTCSMQMP/FNYMF0RJTCSMQMP.LARGE.jpg"], "step_title": "Step 4: The Code..."}, {"step": 5, "steps_text": "We use a procedure called debounce to overcome our button problem. This essentially waits a specified amount of time between when the button was pushed and actually responding to the push. It still feels natural to the user (unless you make the time too long). You can also use it for checking length of press, so you can respond differently each time. You don't need to change any of the wiring!\nLet's look at the code:\n#define button 2<br>#define debounceTimeout 100\nThe first change is on the global scope. You'll remember that's where we define variables lots of our functions might use or those that can't be reset each time the loop fires. So, we added debounceTimeout to the defined constants. We made this 100 (which will later translate to 100ms), but it could be shorter. Any longer and it'll feel unnatural.\nlong int lastDebounceTime;\nThis variable is declared below the constants. This is a long int type, which basically allows us to store long numbers in memory. We called it lastDebounceTime.\nWe don't need to change anything in the void setup() function. Let's leave that one.\nvoid loop() {<br> // Read the digital pin to check status of button\n int pressed = digitalRead(button);\n long int currentTime = millis();\n \n // Button code\n}\nThe first change we make in the loop() function is under the call to read the button. We need to keep track of the current time. The millis() function returns the current time of the clock since the Arduino booted up in milliseconds. We need to store this in a long int type variable.\nNow, we need to make sure we are aware of the time since the button was pressed, so we reset the timer when it isn't pressed. Take a look:\nvoid loop() {<br> // Read the digital pin to check status of button\n int pressed = digitalRead(button);\n long int currentTime = millis();\n \n if(pressed == LOW){\n  // Reset the count time while button is not pressed\n  lastDebounceTime = currentTime;\n }\n \n // Button code\n}\nThe if(pressed == LOW) algorithm checks if the button isn't pressed. If it isn't, then the code stores the current time since last debounce. That way, each time the button is pressed, we have a point in time from which we can check when the button was pressed. We can then do a quick mathematical calculation to see how long the button was pressed for, and respond correctly. Let's look at the rest of the code:\nvoid loop() {<br> // Read the digital pin to check status of button\n int pressed = digitalRead(button);\n long int currentTime = millis();\n \n if(pressed == LOW){\n  // Reset the count time while button is not pressed\n  lastDebounceTime = currentTime;\n }\n // Button has been pressed for a given time\n if(((currentTime - lastDebounceTime) > debounceTimeout)){\n  // If the timeout is reached, button pressed!\n  Serial.println(\"Pressed!\");\n }\n}\nThe last block of code takes the current time, subtracts the last debounce time and compares it to the timeout we set. If it is greater, the code assumes the button has been pressed for that time and responds. Neat!\nRun your code and check it works. If you have errors, check your code!\nNow, let's look at a practical example.", "step_imgs": ["https://cdn.instructables.com/F4E/DVCZ/JTCSMQOB/F4EDVCZJTCSMQOB.LARGE.jpg"], "step_title": "Step 5: A Little Debounce"}, {"step": 6, "steps_text": "Buttons are interesting, because there are so many possibilities with them! In this example, we're going to make a menu. Let's say you've created this really great device, and need users to be able to change options to turn certain things on or off, or set a particular value for a setting. This three button design can do that!\nSo, for this project we need:\nThree buttons\nThree resistors set to 10k\u03a9\nWe already have one of these, we just need the other two. So add those to the board. Wiring up is a little more complex, but only because I wanted to keep it really compact. You could follow the same pattern for the first button, or follow the image above.\nThe three buttons are a menu open/next option, a change option (as in, alter the setting), and a save/close menu button.\nWire it up, let's look at the code!", "step_imgs": ["https://cdn.instructables.com/FAY/PL7Q/JTCSMQOE/FAYPL7QJTCSMQOE.LARGE.jpg"], "step_title": "Step 6: The Making of a Menu"}, {"step": 7, "steps_text": "Ok, this is going to be a long step, but I am going to go through each section of code.\nFirst, let's look at the global variables needed.\n// Define constants<br>#define menuButton 2\n#define menuSelect 3<br>#define menuSave 4\n#define debounceTimeout 50\n<br>// Define variables\nint menuButtonPreviousState = LOW;\nint menuSelectPreviousState = LOW;\nint menuSavePreviousState = LOW;\nlong int lastDebounceTime;\n<br>// Menu options\nchar * menuOptions[] = {\"Check Temp\", \"Check Light\"};\nbool featureSetting[] = {false,false};\nbool menuMode = false;\nbool menuNeedsPrint = false;\nint optionSelected = 0;\nThese three blocks are fairly similar to what we have seen before. In the first, I have defined the three buttons and the timeout. For this part of the project, I have set it to 50ms so it takes a deliberate press to make it work.\nThe second block is all the variables. We need to keep track of the buttonPreviousState, and we need to keep track of the lastDebounceTime. These are all int type variables, but the last is a long type because I am assuming we need the space in memory.\nThe menu options block has a few new features. First, the char * (yes, that is a deliberate asterisk), which is a character/string literal variable. It is a pointer to a static storage in memory. You can't change it (like you can in Python, for example). This char *menuOptions[ ] line creates an array of string literals. You could add as many menu items as you like.\nThe bool featureSetting variable is just the array of values that represents each menu item. Yes, you could store anything you like, just change the variable type (they all have to be the same type). Now, there might be better ways to manage this, like dictionaries or tuples, but this is simple for this application. I would probably create one of the latter in a deployed application.\nI have kept track of the menuMode, so if I wanted other things on my display I could do that. Also, if I had sensor logic I might pause that during menu operation, just in case something conflicts. I have a menuNeedsPrint variable because I want to print the menu at specific times, not just all the time. Finally, I have an optionSelected variable, so I can keep track of the option selected as I access it in a number of places.\nLet's look at the next set of functions.", "step_imgs": [], "step_title": "Step 7: Code Breakdown - Global"}, {"step": 8, "steps_text": "The setup() function is easy enough, just three input declarations:\nvoid setup() {<br> pinMode(menuSelect, INPUT);\n pinMode(menuSave, INPUT);\n pinMode(menuSelect, INPUT);\n Serial.begin(9600);\n}\nNext are the three custom functions. Let's look at the first two, then the last one separately.\nWe need two functions that return some information. The reason is, we want to make sure this is sort of human readable. It will also help with debugging the code if we have an issue. Code:\n// Function to return the current selected option<br>char *ReturnOptionSelected(){\n char *menuOption = menuOptions[optionSelected];\n // Return optionSelected\n return menuOption;\n}\n// Function to return status of current selected option\nchar *ReturnOptionStatus(){\n bool optionSetting = featureSetting[optionSelected];\n char *optionSettingVal;\n if (optionSetting == false){\n  optionSettingVal = \"False\";\n }else{\n  optionSettingVal = \"True\";\n }\n // Return optionSetting\n return optionSettingVal;\n}\nThe char *ReturnOptionSelected() function checks the option selected (if you see above, we set a variable to keep track of that), and pulls the string literal from the array we created earlier. It then returns it as a char type. We know this because the function indicates the return type.\nThe second function, char *ReturnOptionStatus() reads the status of the option saved in the array and returns a string literal that represents the value. For example, if the setting we have stored is false, I would return \"False\". This is because we show the user this variable and it is better to keep all this logic together. I could do it later, but it makes more sense to do it here.\n// Function to toggle current option<br>bool ToggleOptionSelected(){\n featureSetting[optionSelected] = !featureSetting[optionSelected];\n return true;\n}\nThe function bool ToggleOptionSelected() is a convenience function to change the value of the setting we have selected in the menu. It just flips the value. If you had a more complex set of options, this might be quite different. I return true in this function, because my callback (the call later in the code that fires this function) expects a true/false reply. I am 100% sure this will work, so I didn't account for it not working, but I would in a deployed application (just in case).", "step_imgs": [], "step_title": "Step 8: Code Breakdown - Setup and Custom Functions"}, {"step": 9, "steps_text": "The loop() function is fairly long, so we'll do it in parts. You can assume everything below nests within this function:\nvoid loop() {\n // Do work in here <-----\n}\nOk, we saw this stuff before:\n// Read the buttons<br> int menuButtonPressed = digitalRead(menuButton);\n   int menuSelectPressed = digitalRead(menuSelect);\n   int menuSavePressed = digitalRead(menuSave);\n \n\n // Get the current time\n long int currentTime = millis();\n \n if(menuButtonPressed == LOW && menuSelectPressed == LOW && menuSavePressed == LOW){\n  //Reset the count time while button is not pressed\n  lastDebounceTime = currentTime;\n  menuButtonPreviousState = LOW;\n  menuSelectPreviousState = LOW;\n  menuSavePreviousState = LOW;\n }\nAll I had to do here was add in the three digitalRead() calls, and make sure I accounted for the fact that if all buttons were low, we should reset the timer (lastDebounceTime = currentTime) and set all previous states to low. I also store millis() in currentTime.\nThe next section nests inside the line\nif(((currentTime - lastDebounceTime) > debounceTimeout)){\n //Do work in here <----\n}\nThere are three sections. Yes, I could have moved them into their own functions, but for sake of simplicity I kept the three main button algorithms in here.\nif((menuButtonPressed == HIGH) && (menuButtonPreviousState == LOW)){<br>  \n if(menuMode == false){\n  menuMode = true;\n  // Let the user know\n  Serial.println(\"Menu is active\");\n }else if (menuMode == true && optionSelected < 1){   \n  // Change option if menu is active\n  optionSelected = optionSelected + 1;\n }else if (menuMode == true && optionSelected >= 1){\n  // Reset option\n  optionSelected = 0;\n }\n  \n // Print the menu\n menuNeedsPrint = true;\n // Toggle the button prev. state to only display menu \n // if the button is released and pressed again\n menuButtonPreviousState = menuButtonPressed; // Would be HIGH\n}\nThis first one handles when menuButtonPressed is HIGH, or when the menu button is pressed. It also checks to make sure the previous state was LOW, so that the button had to be released before it was pressed again, which stops the program from constantly firing the same event over and over again.\nIt then checks that if the menu is not active, it activates it. It will print the first option selected (which is the first item in the menuOptions array by default. If you press the button a second or third (etc) time, you'll get the next option in the list. Something I could fix is that when it gets to the end, it cycles back to the beginning. This could read the length of the array and make cycling back easier if you changed the number of options, but this was simple for now.\nThe last little section (//Prints the menu) obviously prints the menu, but it also sets the previous state to HIGH so the same function won't loop (see my note above about checking if the button was previously LOW).\n// menuSelect is pressed, provide logic<br>if((menuSelectPressed == HIGH) && (menuSelectPreviousState == LOW)){\n if(menuMode){\n  // Change the selected option\n  // At the moment, this is just true/false \n  // but could be anything\n  bool toggle = ToggleOptionSelected();\n  if(toggle){\n   menuNeedsPrint = true;\n  }else{\n   Serial.println(\"Something went wrong. Please try again\");\n  }\n }\n // Toggle state to only toggle if released and pressed again\n menuSelectPreviousState = menuSelectPressed;\n}\nThis bit of code handles the menuSelectPressed button in the same way, except this time we just fire the ToggleOptionSelected() function. As I said before, you could change this function so it does more, but that's all I need it to do.\nThe main thing to note is the toggle variable, which tracks success of the callback and prints the menu if true. If it returns nothing or false, it will print the error message. This is where you can use your callback to do other things.\nif((menuSavePressed == HIGH) && (menuSavePreviousState == LOW)){<br> // Exit the menu\n // Here you could do any tidying up\n // or save to EEPROM\n menuMode = false;\n Serial.println(\"Menu exited\");\n  \n // Toggle state so menu only exits once\n menuSavePreviousState = menuSavePressed;\n }\n}\nThis function handles the menuSave button, which just exits the menu. This is where you could have a cancel or save option, maybe do some cleaning up or save to the EEPROM. I just print \"Menu exited\" and set the button state to HIGH so it doesn't loop.\nif(menuMode && menuNeedsPrint){<br> // We have printed the menu, so unless something \n // happens, no need to print it again\n menuNeedsPrint = false;\n char *optionActive = ReturnOptionSelected();\n char *optionStatus = ReturnOptionStatus();\n Serial.print(\"Selected: \"); \n Serial.print(optionActive);\n Serial.print(\": \");\n Serial.print(optionStatus); \n Serial.println();\n}\nThis is the menuPrint algorithm, which only fires when the menu is active and when the menuNeedsPrint variable is set to true.\nThis could definitely be moved to its own function, but for the sake of simplicity..!\nWell, that's it! See the next step for the whole code block.", "step_imgs": [], "step_title": "Step 9: The Loop..."}, {"step": 10, "steps_text": "// Define constants\n#define menuButton 2\n#define menuSelect 3\n#define menuSave 4\n#define debounceTimeout 50\n\nint menuButtonPreviousState = LOW;\nint menuSelectPreviousState = LOW;\nint menuSavePreviousState = LOW;\n\n// Define variables\nlong int lastDebounceTime;\nbool lightSensor = true;\nbool tempSensor = true;\n\n// Menu options\nchar * menuOptions[] = {\"Check Temp\", \"Check Light\"};\nbool featureSetting[] = {false,false};\nbool menuMode = false;\nbool menuNeedsPrint = false;\nint optionSelected = 0;\n\n// Setup function\n<p>void setup() {<br> pinMode(menuSelect, INPUT);\n pinMode(menuSave, INPUT);\n pinMode(menuSelect, INPUT);\n Serial.begin(9600);\n}</p>\n// Function to return the current selected option\nchar *ReturnOptionSelected(){\n char *menuOption = menuOptions[optionSelected];\n // Return optionSelected\n return menuOption;\n}\n\n// Function to return status of current selected option\nchar *ReturnOptionStatus(){\n bool optionSetting = featureSetting[optionSelected];\n char *optionSettingVal;\n if (optionSetting == false){\n  optionSettingVal = \"False\";\n }else{\n  optionSettingVal = \"True\";\n }\n // Return optionSetting\n return optionSettingVal;\n}\n\n// Function to toggle current option\nbool ToggleOptionSelected(){\n featureSetting[optionSelected] = !featureSetting[optionSelected];\n return true;\n}\n\n// The main loop\n<p>void loop()<br>{\n   // Read the buttons\n int menuButtonPressed = digitalRead(menuButton);\n   int menuSelectPressed = digitalRead(menuSelect);\n   int menuSavePressed = digitalRead(menuSave);\n // Get the current time\n long int currentTime = millis();\n \n if(menuButtonPressed == LOW && menuSelectPressed == LOW && menuSavePressed == LOW){\n  //Reset the count time while button is not pressed\n  lastDebounceTime = currentTime;\n  menuButtonPreviousState = LOW;\n  menuSelectPreviousState = LOW;\n  menuSavePreviousState = LOW;\n }\n if(((currentTime - lastDebounceTime) > debounceTimeout)){\n  // If the timeout is reached, button pressed!</p><p>  // menuButton is pressed, provide logic\n  // Only fires when the button has previously been released\n  if((menuButtonPressed == HIGH) && (menuButtonPreviousState == LOW)){\n  \n   if(menuMode == false){\n    menuMode = true;\n    // Let the user know\n    Serial.println(\"Menu is active\");\n   }else if (menuMode == true && optionSelected < 1){\n    // Change option if menu is active\n    optionSelected = optionSelected + 1;\n   }else if (menuMode == true && optionSelected >= 1){\n    // Reset option\n    optionSelected = 0;\n   }\n  \n   // Print the menu\n   menuNeedsPrint = true;\n   // Toggle the button prev. state to only display menu \n   // if the button is released and pressed again\n   menuButtonPreviousState = menuButtonPressed; // Would be HIGH\n  }\n  // menuSelect is pressed, provide logic\n  if((menuSelectPressed == HIGH) && (menuSelectPreviousState == LOW)){\n   if(menuMode){\n    // Change the selected option\n    // At the moment, this is just true/false \n    // but could be anything\n    bool toggle = ToggleOptionSelected();\n        if(toggle){\n    menuNeedsPrint = true;\n    }else{\n     Serial.print(\"Something went wrong. Please try again\");\n    }\n   }\n   // Toggle state to only toggle if released and pressed again\n   menuSelectPreviousState = menuSelectPressed;\n  }\n  if((menuSavePressed == HIGH) && (menuSavePreviousState == LOW)){\n   // Exit the menu\n   // Here you could do any tidying up\n   // or save to EEPROM\n   menuMode = false;\n   Serial.println(\"Menu exited\");\n  \n   // Toggle state so menu only exits once\n   menuSavePreviousState = menuSavePressed;\n   }\n  }\n  // Print the current menu option active, but only print it once\n  if(menuMode && menuNeedsPrint){\n   // We have printed the menu, so unless something \n   // happens, no need to print it again\n   menuNeedsPrint = false;\n   char *optionActive = ReturnOptionSelected();\n   char *optionStatus = ReturnOptionStatus();\n   Serial.print(\"Selected: \"); \n   Serial.print(optionActive);\n   Serial.print(\": \");\n   Serial.print(optionStatus); \n   Serial.println();\n  }\n }\n}\nThe circuit is available on the Tinkercad site. I have embedded the circuit below for you to see, too!\nAs always, if you have questions or issues, please let me know!", "step_imgs": [], "step_title": "Step 10: Final Code Block"}], "channel": ""}, {"category": "", "description": "In this Instructable, you will learn how to build your own vacuum chamber using common tools, a vacuum pump, and a few inexpensive or easy-to-locate materials. I suggest reading the entire Instructable before beginning this project, simply so that you will have a better idea of what the finished product should look like. I have written instructions to guide you around making significant mistakes, all of which I learned the hard way. :) Hopefully, this will make building your vacuum much simpler and stress-free.\nThe items you will need are as follows:\n-- a silicone baking mat\n-- silicone caulk (and caulk gun)\n-- power drill\n-- a 1 in thick board of HDPE (high density polyethylene) plastic. This can be ordered for less than $30 bucks.\n-- a glass bell jar\n-- a vacuum pump (more details later)\n-- if needed: detergent-free motor oil\n-- 4 plastic soda bottles\n-- vinyl tubing, preferably very thin and strong\n-- vacuum pressure gauge. A cheap one may be $5-$8\n-- vacuum grease\nNow... what is a vacuum chamber? What are they useful for? If you are well aware of how vacuum chambers work, and their uses, then by all means skip to the first step.\nA vacuum chamber is an area from which the air has been evacuated. The pressure inside the chamber is actually a negative value (i.e. -8.3mmHg, -1Bar, etc.) because the outside atmospheric pressure (about 101,325 pascals or 14.6959 psi) is pushing in on the chamber. In other words, the pressure inside the chamber is far, far less than that outside the chamber. Why is this useful? Well, if all the air is gone then there is no \"atmosphere\" to interact with whatever you place inside the chamber. Vacuum chambers are used in life sciences to preserve specimens, such as bacteria cultures, in order to store them and keep them from decaying. In physical sciences, the vacuum chamber is incredibly useful in projects involving electricity or optics because the lack of air reduces resistance and interference from gas particles. This helps induce arcing, like what you see on a tesla coil.\nDid you know?\nThe vacuum tube (a small, glass-covered vacuum chamber), was used by Thomas Edison in his invention of the light bulb in 1883 and by Sir John Ambrose Flemming in his invention of the diode in 1904.", "title": "Build a Vacuum Chamber", "url": "https://www.instructables.com/id/Build-a-Vacuum-Chamber/", "section": "technology", "steps": [{"step": 1, "steps_text": "In this step, you will need the silicone baking mat, a pen or sharpie, silicone caulk, and the bell jar. You may also want to grab some wax paper or foil and a big, heavy book.\nThe baking mat you can buy at Hobby Lobby or a home/kitchen goods store. It will be used to make the seal. For the silicone caulk, be sure it is actual silicone.\nA few notes on the bell jar... make sure that it is actually a bell jar, as in a glass jar with a rounded dome on top. A cake dome would also work. It is important that the top of the jar be convex because this structure is stronger and will withstand the pressure pressing inwards better. If you use a regular canning jar, for instance, the bottom may curve inwards. This concave structure runs the risk of breaking under pressure and collapsing on itself.\nNow, to begin the seal. Trace the rim of the jar onto the baking mat twice, spaced apart, on the right and left sides. Draw an inner circumference and an outer circumference for both circles, about half an inch away from the original circles. Now, cut out both circles along the inner and outer circumferences so that you have two baking sheet rings.\nApply a generous ring of caulk around the top of one of the baking mat rings and place the other baking mat ring on top. You want to apply pressure to adhere the rings together as evenly as possible. A good way to do this is to place a sheet of aluminum foil/wax paper on a table, put the silicone rings on top of that, then another sheet of foil/wax paper, and finally, on top a nice big, heavy book. Do not try to flatten the rings together manually, or you will end up with a bumpy seal that destroys your vacuum.\nLet the silicone caulk dry, and then you can trim off any excess with scissors. Consider yourself warned, the silicone caulk is smelly.\nThis double-thick silicone baking mat ring will be the seal for your chamber.", "step_imgs": ["https://cdn.instructables.com/F1C/DJSQ/JTEN27I4/F1CDJSQJTEN27I4.LARGE.jpg", "https://cdn.instructables.com/FPN/QMIZ/JTEN27J0/FPNQMIZJTEN27J0.LARGE.jpg"], "step_title": "Step 1: Create a Seal"}, {"step": 2, "steps_text": "In this step, you will need your seal, the 1\" thick board of HDPE (high density polyethylene) plastic, a sharpie, and the silicone caulk.\nPlace your seal on top of the HDPE. Position it so that it is in one corner on the top of the board, so that two of the sides of the board are tangent with the outside edge of the seal. Trace the seal with a sharpie.\nAfter removing the seal, Apply a generous ring of caulk to the board between the sharpie lines. Place the seal back on top. Like you did before, put a piece of aluminum foil on top and a big heavy book on top of that. Let dry.\nIf you want you can use your finger to smooth out the excess caulk along the edge of the seal. Your seal should be as flat and smooth as possible, and be sealed to the board on all sides.", "step_imgs": ["https://cdn.instructables.com/FLW/NCH3/JTEN27JW/FLWNCH3JTEN27JW.LARGE.jpg"], "step_title": "Step 2: Attach Seal to Plastic Base"}, {"step": 3, "steps_text": "In this step you will need a power drill, vinyl tubing, and silicone caulk. The vinyl tubing should be pretty small and strong. I used the vinyl tubing that goes with a nebulizer, because I had extra.\nGet out your power drill and drill bits.The drill bit you should use should be roughly the size of the vinyl tubing.\nMark a point inside the seal on the top of the board. From the 1\" thick side of the board, drill through the plastic until the tip of the drill is underneath the point on the top. It is a good idea to measure the drill bit and the distance to the point from the side of the board, so that you have a good idea of how far in you need to drill.\nDrill from the top point down into the tunnel from the side. The two tunnels should open into each other. It is very, very important not to drill all the way through the plastic while drilling downwards.\nOn the 1\" thick side of the board where you drilled in through the side, drill two more holes on either side. For these holes, drill diagonally into the center hole. These tunnels should open cleanly into each other.\nCut three lengthy pieces of the vinyl tubing. Insert one end of each into the 1\" thick side of the board.", "step_imgs": ["https://cdn.instructables.com/F5A/2WC3/JTEN27KS/F5A2WC3JTEN27KS.LARGE.jpg"], "step_title": "Step 3: Drill Tunnels in Base & Insert Tubing"}, {"step": 4, "steps_text": "For this step, you will need 4 plastic soda bottles, scissors, silicone caulk, and the drill. Electrical tape may come in handy.\nUsing scissors, cut the tops off of 4 plastic soda bottles, just underneath the lip. Make the cut surfaces as smooth as you can.\nUse silicone caulk to seal the cut sides of two of the bottle tops together. If you want, wrap electrical tape tightly around the outside to hold them in place and let the silicone dry completely. Be sure that the silicone does not seal up the inside of the bottle tops completely, and that at least one of the screw-on lids is still removable.\nDo the same for the other two bottle tops. These attached bottle tops are going to be your pressure valves.\nIn the cap on one side of each valve, drill a hole through the cap. This is so you can insert the vinyl tubing.", "step_imgs": ["https://cdn.instructables.com/F9E/6302/JTEN27LO/F9E6302JTEN27LO.LARGE.jpg"], "step_title": "Step 4: Create Pressure Release Valves"}, {"step": 5, "steps_text": "This step will require the vacuum pressure gauge, both pressure valves, and silicone caulk. Electrical tape may prove useful again.\nOn the ends of each of the three pieces of vinyl tubing, attach the pressure gauge to one, and pressure valves two the other two. Seal the pressure valves to the tubing with silicone.\nAttaching the gauge may be a trick because the gauge is probably much wider than the tubing. Just use whatever works that is airtight and can connect the two together. (I used a plastic part that the mask screws onto on the nebulizer tubing.) Electrical tape may come in handy again along with silicone to accomplish this.", "step_imgs": ["https://cdn.instructables.com/FAC/SHE1/JTEN27MK/FACSHE1JTEN27MK.LARGE.jpg"], "step_title": "Step 5: Attach Pressure Gauge and Valves"}, {"step": 6, "steps_text": "This step will require the vacuum pump, rubbing alcohol, vacuum grease and silicone caulk.\nIf you do not want to buy vacuum grease, ask around and see if anyone has some you can borrow. You won't need much.\nThere are three ways to get a vacuum pump if you do not already have one. You could buy one, borrow one, or make one. There are ways of making a vacuum pump out of an old refrigeration compressor or by converting a pancake compressor, but I would recommend researching that elsewhere.\nHow to attach the vacuum pump may depend upon what your pump is like. Use one of the pressure valves to attach the pump. If the tubing could attach directly, you could cut the pressure valve off entirely. Do whatever is necessary to create an airtight seal between the pump and the tubing.\nIn order to prepare the chamber to be turned on, clean of the seal on the board with isopropyl alcohol (rubbing alcohol), apply a thin layer of vacuum grease to the bottom of the bell jar, and place the bell jar on the seal. Press down on the bell jar as you turn on the pump.\nAir will leak through the space between the tubing and the plastic base. Apply caulk around the tubing on the edge of the board. It is good to do this while the pump is on, because it will slurp the silicone into the small space between the tubing and the plastic. Turn off the pump and let the caulk dry.", "step_imgs": ["https://cdn.instructables.com/FN0/2XYO/JTEN27NG/FN02XYOJTEN27NG.LARGE.jpg"], "step_title": "Step 6: Attach to Pump and Seal With Caulk"}, {"step": 7, "steps_text": "After the silicone is dry, press down on the bell jar and turn on the pump again. You will now proceed to look for vacuum leaks. This step is critical in getting your vacuum chamber to work!\nObserve the reading on the vacuum pressure gauge to see if you are pulling a good vacuum. Check thoroughly for leaks by listening for hissing air and looking for holes. Seal any leaks you find with silicone.\nA good way of checking for leaks near or on the tubing is to pinch off areas of the tubing or blocking the hole into the chamber and observing what that does to the pressure shown on the gauge.\nResearchers, scientists, and engineers are always battling vacuum leaks. Blocking them is important because even a small vacuum leak can destroy your vacuum.", "step_imgs": [], "step_title": "Step 7: Checking for Leaks"}, {"step": 8, "steps_text": "Now that your vacuum is all sealed up, turn it on and see how low the pressure will drop on the gauge.\nOne thing you can do to test your vacuum is place a crushed plastic soda bottle with an airtight lid inside the chamber. As the vacuum is pulled, the bottle should inflate to its original state. Once the vacuum is released, the bottle will crumble again.\nA vacuum chamber can be used in loads of awesome science projects and many other things. For example, you could run wires through the base to preform electrical experiments in a vacuum. It certainly helped me!\nHappy building!", "step_imgs": ["https://cdn.instructables.com/F9G/G9QK/JT91I38Q/F9GG9QKJT91I38Q.LARGE.jpg", "https://cdn.instructables.com/FDV/IMFA/JT91I37L/FDVIMFAJT91I37L.LARGE.jpg"], "step_title": "Step 8: Testing and Applications"}], "channel": ""}, {"category": "", "description": "Resistor assortments are often packed as strips of \"tape mounted\" resistors. The resistors can be easily organized by stapling the \"taped resistor strips\" to index cards. Resistor index cards can be sorted and stored in standard index file boxes. Resistors can be cut from the index card as needed.\nI believe this method oftens easy, fast, inexpense, and compact organization of resistor assortments.", "title": "Easy Resistor Assortment Organization With Index Cards", "url": "https://www.instructables.com/id/Easy-Resistor-Assortment-Organization-With-Index-C/", "section": "technology", "steps": [{"step": 1, "steps_text": "Besides your tape mounted resistor assortment, you'll need: Index cards sized to the resistor tape strips ( 3 by 5 cards worked for me), file box, stapler and marking pen.\nStaple each resistor strip to an index cards in 4 places as shown in photo. Clearly write the resistor value in the index card upper right corner. Add the resistor cards to file box arranged in ascending order of resistance value.", "step_imgs": ["https://cdn.instructables.com/FWR/PV5M/JTEN1MN8/FWRPV5MJTEN1MN8.LARGE.jpg"], "step_title": "Step 1: Material, Tools, and Resistor Mounting Process"}, {"step": 2, "steps_text": "Sort through the file box to find the resistor value value you need. Remove the resistor card, and use side cutter pliers to cut the resistor from the card. Return the index card to the correct location in the file box!", "step_imgs": ["https://cdn.instructables.com/F9B/CUK7/JTEN1MN3/F9BCUK7JTEN1MN3.LARGE.jpg"], "step_title": "Step 2: Resistor Retrieval"}], "channel": ""}, {"category": "", "description": "Rover Design Challenge\nGrades 4-8, Engineering, Social Studies, Geography, Science\nLesson Overview\nIn this activity, students design and build electric toy Rovers that run on monorail tracks. It can be set up for learning about real geography and cultures, or for a creative experience where students invent a new land. The Rover challenge is also an engaging way to practice the Engineering Design Process on a flexible challenge while learning 3D modeling on Tinkercad.\n\nThe Rover is a small vehicle with a base and four pins to guide it on a monorail track. It uses hobby gear-motors and wheels that are easy to find online, reasonably priced, and reusable. Shaft extensions for the motors can be 3-D printed from the Tinkercad files linked in this lesson. The Monorail track is made from an inexpensive plastic electrical conduit that is available at hardware stores or online. Several track challenges are provided in this lesson plan. Students design and build the Rover and/or the Track, creating track features that depict the area they are exploring and adaptations to the Rover that help it perform on the journey.\nThis project is structured to follow the Engineering Design Process (EDP), a process that helps designers in any discipline create solutions to problems. While there are many ways that people solve problems, designers often use the EDP because it offers a clear roadmap for them to follow as they work towards a solution.\nFirst, designers Define the challenge they are facing, then Learn more about the problem and Explore existing solutions. It\u2019s tempting to skip these first few steps and head straight into brainstorming, but don\u2019t! When designers take the time to understand the problem clearly, they come up with much better solutions. The Design phase is where brainstorming happens. Designers brainstorm multiple possible solutions, then develop a few of them into more detailed plans. Encourage your students to plan at least 3 of their potential ideas before choosing a design direction and starting to Create a product based on their design. If they hit any roadblocks trying to create their first design choice, they\u2019ll be able to revisit their alternate design plans and choose a new direction - without starting from scratch. Designers then take time to Observe their design and see how they can Improve it. We strongly recommend that students have an opportunity for at least 2 Create-Observe-Improve cycles. When students feel they have to \u201cget it right the first time,\u201d they are less willing to take risks and be creative. By repeating the cycle, they have a chance to fix flaws and adopt successful ideas from classmates, and in fact, they\u2019re practicing what professional designers really do. A good design cycle builds in time for the designer to Reflect on their product and the process of making it, looking for learning habits and insights that will help in future challenges. When the work is complete, designers are ready to Share. They bring their work into the real world, by posting, publishing, presenting, or exhibiting - or giving or selling if appropriate! - what they\u2019ve made. For students working through a design process, a real audience helps students connect their learning and work experiences to the world outside the classroom. For Makerspaces and Maker projects, in particular, this is hugely important for building confidence in every student and a sense of community among Makers. To help students work through this process, be sure to build in planned \u201cstops\u201d at each step for students to record their thoughts and progress as they work through product iteration cycles.\nEssential Question(s)\nHow can the Engineering Design Process be used to efficiently and effectively create a machine to meet a specified challenge?\nHow can an electric toy car (the rover) and track be used to help students learn academic content?\nSkills Taught:\nEngineering Design Process\nAdditional Academic Topics Researched by Students\nBasic electronics\nBasic Prototyping Skills\nTime Required: _____ Hours\nMaterials Needed:\n3D Printer and filament.\nDC Gear Motor (on Amazon called Gear Motor for Smart Car Robot, GR 1:48.\nWheels that fit the motor shafts, usually available with the motors.\nFlex Tubing, \u215c\u201d to \u00bd\u201d outside diameter, such as electrical conduit from a hardware store.\nOn/Off Switch\nBattery pack - 3V (2 AA batteries)\nMotor shaft extensions printed from Tinkercad file\nTinkercad\nMisc. Arts+Crafts materials (cardstock, corrugated plastic sheets, hot glue, markers, etc.)\nTimekeeper", "title": "Rover Design Challenge", "url": "https://www.instructables.com/id/Rover-Design-Challenge/", "section": "technology", "steps": [{"step": 1, "steps_text": "Context\nThe Engineering Design Process (EDP) is a respected process for solving engineering and other critical thinking challenges. Students will learn and practice transferable skills involving creativity, communication, collaboration, critical thinking. The EDP is a guide to problem-solving and leads the user to effective solutions in an efficient manner. In this activity, students design and build a toy Rover powered by an electric motor. It is powered by a single electric DC gear-motor and follows a monorail track made out of flexible tubing. Students also have the opportunity to design the track and various obstacles and features for the rover to encounter during its travels. The challenge can simply be a made-up land, or the class can build it as a significant historical or geographic region. The rover body, features of the course, and the items the rover encounters can all be related to the theme.\nThrough building a rover and its challenge course, students will be practicing engineering design, critical thinking, teamwork, as well as basic electronics.\nChallenge\nDesign an electric toy rover and track/course to complete challenges. Student teams consider scoring options and plan a strategy to earn points based on the performance of their rover on the course they create.\nSample Challenge 1 - Geography and Culture\nRoad-trips and tours are popular with vacationers that like to explore and learn about new places. To prepare for such a trip the adventurer may need to outfit their vehicle with special features, plan a way to navigate the expected terrain, and/or plan how to store items they collect along the way.\nStudents create a rover with features that help it in its tour of a specified region. The rover may need to navigate terrain specific to that region, visit significant sites, and/or collect typical artifacts from the region.\nThe rover design challenge is an engaging activity for a class on geography and culture. It includes aspects of technology, engineering, and electricity, and can serve as an interdisciplinary activity.\nStudents will:\nBuild a rover as per the instructions here, or design their own.\nLearn about the people in the area and design artifacts that represent the culture of the civilizations\nResearch the geography of the region and create terrain, physical features, and artifacts as expected in the region.\nSample Challenge 2 - Mars exploration\nFor years, scientists have been looking for signs of life on the red planet. Numerous NASA missions have been looking for signs such as bacteria and other microscopic life forms. Most important, the Mars rovers and probes are looking for one other key piece of evidence: liquid water. Life cannot exist without it from what we know, and surface geography has indicated that water once flowed over the surface of the red planet. On their journey, these rovers will encounter many obstacles including mountains, craters, valleys, sand drifts, and more. Learn about the history of the search for life on the Red Planet. Discuss the reasons for the study of celestial bodies such as other planets. Are we alone in the universe? Consider the implications such a study would have for the future.\nStudents study the geography and features of the regions of Mars: Olympus, the South Cap, Tharsis, Cassini Crater, Acidalia Planitia. They create landscapes and tracks to show this geography and build rovers to perform discovery challenges.\nThe Challenge is set up so there is not 1 winner, but levels which students can try to attain, as they might in sports or martial arts. Student designers can create rovers that earn points in different ways, creating track or rover features that earn points for performance. Track features can include rough terrain, bridges, and underpasses, or seesaws. Rover features include carrying, plowing, or collecting objects such as foam blocks or action figures.\nCriteria:\nStudents must build a working rover and track that can perform the suggested tasks and earn points\nConstraints:\nComplete the project in the time allotted, with the materials provided\nIn the example scoring, 25 points = Road Racer, 35 points = Road Master, 50 points = King/Queen of the Road\nSee PDF Below.\nStudent Product / Learning Goals\nStudents can be involved in 2 types of activity - designing the course and designing the track. They can practice the engineering design process by using 3D Printers to make \u201cparts\u201d and \u201ctools\u201d for a moving rover or research a topic and apply their knowledge to design obstacles and challenges for this rover to cross.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research: Direct students to resources with information about their specific regions or cultures, and suggest specific things to look for. This can be an individual or team activity.\n2. Collect: Instruct students on how/where to keep notes on the things they learned. They may create an \u201cinspiration page\u201d such as a blog, Google Docs, a notebook, Padlet, poster, etc.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "1. Design:\nStudents work together to brainstorm ideas on how to represent the region and culture they are assigned The goal is to create a rover and track/course that is simple enough to build while still being complex enough to communicate the idea. The design process is most effective when designers create at least 3 different ideas.\nOption A: draw designs on how the rover and track/course will look and/or function. Use paper, whiteboard, drawing apps.\nOption B: Build simple models using crafting materials (paper, glue, clay, pipe cleaners, etc.) to show look and/or function\nOption C: Let the students play around in Tinkercad to get familiar with the program and make practice models.\n2. Direction: Help the students choose a rover and track/course that fills the criteria of the project, as well as the \u201cThing\u201d Checklist (this checklist can be found in the Resource section of the Lesson).", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "Rover Base:\n1. Pull a box shape into the workspace and size it to the following:\nHeight: \u215b\u201d(.125\u201d) - Required.\nLength: 5 \u00bd\u201d - The current length includes room for the current electrical components as well as space in the back for optional extensions.\nWidth: 2\u201d - This is wide enough to fit the motor with shaft extensions.\nRadius: .12\u201d (optional) - The radius can be found under shape drop-down panel, this step is optional but can help the rover avoid getting caught on other objects while in motion.\nFront Pins:\nThese pins are meant to be used as guides and not as standing supports. The overall height of the front pin is the distance to the ground, minus 1/16\" (.062\u201d).\n2. Pull a cylinder shape into the workplace and set the dimensions to:\nHeight: 5/8\u201d (.625) - Required.\nDiameter: \u00bc\u201d - Required.\n3. Pull in a half sphere and size to:\nHeight: \u215b\u201d - Required.\nDiameter: \u00bc\u201d - Required.\n4. Drop the half sphere on top of the cylinder. (To do this, select the workplane, then choose a side wall. Select the shape you want to drop, and hit the D key on your keyboard.)\n5. Align them to center.\n6. Group the half sphere and cylinder.\n7. Duplicate the pin, and give the two pins a spacing equal to the tubing diameter, plus .03\".\nx +.03 = y (x = tube dimension, y = 1st pin spacing).\n8. You can import a box shape to use as a guide and set its width to the needed spacing.\n9. Individually select and drop each pin to the box's side wall. (To do this, select the workplane, then choose a side wall. Select the shape you want to drop, and hit the D key on your keyboard. )\n10. Once you're done, align the pins to be side by side, and delete the box shape guide.\n11. Group the front pins for easy movement.\nBack pins:\nDesigned to be used as turning guides and are shorter to help the rover go up/down ramps with ease.\n12. Pull a cylinder shape into the workplace and set the dimensions to:\nHeight: \u00bd\u201d - Required.\nDiameter: \u00bc\u201d - Required.\n13. Pull in a half sphere and size to:\nHeight: \u215b\u201d - Required.\nDiameter: \u00bc\u201d - Required.\n14. Drop the half sphere on top of the cylinder and align them to center.\n15. Group the half sphere and cylinder.\n16. At the bottom right corner of the workplane, set the Snap Grid to a unit you wish to move the cylinder by.\nExample:\n16. Duplicate the back pin, and use the right or left arrow keys to move the second pin over in increments of the Snap grid. Feel free to experiment with different spacings, and see how this affects the rover's movements.\nLimit: Keep the spacing distance under 1.75\" (2\" rover body, minus the half thickness of both pins (.125\"+.125\")).\n17. Group the back pins together after you're setting them to your desired distance.\nAligning the Pins:\n18. Set the Snap Grid to 1/2 in.\n19. Align the front pins to the front of the rover base.\n20. Move them in (use directional arrow keys (up,down,left or right)), twice (.5\" x 2 = 1\" depth).\n21. Align the back pins to the front of the rover.\n22. Move them in (use directional arrow keys (up,down,left or right)), six times (.5\" x 6 = 3\" depth).\n23. Select all shapes and group them together.\n24. Export as an STL, and print the part in this position.\n25. While the Rover body is printing, wire up the DC gear-motor and battery.\nRover Assembly - wiring:\nWheels:\nPrint the premade or custom rover extensions.\nPush the pin part of the extenders into the wheels.\nPush the motor pins through the extenders.\nDownload and print the extensions.\nIf the fit is loose, try adding hot glue.\nIf the extenders don\u2019t fit, try using an Exacto blade to carefully clean off the edges of the print.\nAssembly placement:\nCheck to make sure the wheels are rotating in the correct direction and moving the rover forward.\nHot glue motor to the body. The placement should be between the two rover pin guides.\nOn/off switch to the body:\nHot glue the one/off switch to top side of the rover, closer to the motor.\nMake sure to leave space on the sides and the back for your extra components.\nBattery:\nHot glue the battery pack on top of the motor. This will create space for your extra components.\nAfter you\u2019ve finished, add any extra extensions you need for the rover challenge.\nDon\u2019t forget to customize your rover with fun characters and designs!\nTrack: The grid in these layouts is 1\u201d square, showing a 4\u2019 x 6\u2019 course.\n1. Choose one of the following challenge maps or make your own.\nChallenge Map 1:\nChallenge Map 2:\nChallenge Map 3:\nMake your own:\n2. Use floor tiles as guides to mark a 4\u2019 x 6\u2019 area in which the rover challenge will take place.\n3. Maker a \u201cHome\u201d base in which the rover will start and end it\u2019s track.\n4. Mark the locations of the Terrains for the students to design their track with and around. Terrains have special features that affect how the rover will behave:\nWater - Not a spot the rover can ride on unless specified.\nExample: A rover can\u2019t travel in water, but after it collects special \u201cfloating\u201d devices (corks), it can.\nSandpit/stone - Textured terrain.\nExample: Pebbles, hot glued to a piece of paper/cardboard make it harder for a rover to ride over.\nMountain - A specified elevated spot on the map. Should be high enough for a rover to pass under, but not too high so a rover can get up a possible ramp.\n5. Mark a designated \u201cPICK UP\u201d and \u201cDROP OFF\u201d spot.", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "1. Play with the rovers and tracks! Student teams earn points for performance and get ratings. Encourage students to help each other solve problems so that all teams earn at least 1 rating for their car/track.\n2. It is recommended that students have an opportunity for at least 2 design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\n3. Provide stopping points for the class where students can observe, evaluate, and document their design.\n4. Give students a chance to record their thoughts and progress as they work through product iteration cycles.\nFor possible prompts: download the PDF at the end of the step.\n5. Follow instructions in the Create Step as needed for the next iteration", "step_imgs": [], "step_title": "Step 5: Observe and Test"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.\nFor possible prompts: Download the PDF attached to the bottom of the step.", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "We hope you had fun designing and sharing your Rovers and tracks. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in? Send us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nLists of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 7: Project Extensions"}], "channel": ""}, {"category": "", "description": "Hi,\nin this Instructable, I want to show you how you can build your own step / dir interface for ILDA standard galvo laser scanners.\nAs you might know I am also the inventor of the \"DIY-SLS-3D-Printer\" and the \"JRLS 1000 DIY SLS-3D-PRINTER\" and while I was building these machines I have start tinkering about how these printers will perform, if I will use a Galvo Scanners instead of a cartesian movement system. However in these days I don't had the knowledge to program a controller for a galvo scanner. So I have used an existing firmware with cartesian motion.\nBut today and after some research I found an instructable where the author uses an arduino to create a DIY Laser Galvo show. I thought this is exactly what I am searching for, so I have ordered the parts like in his instructable and made some experiments. After some research I found out, that the Arduino will not perform that well as step / direction interface, so I remixed it for the STM32 microcontroller.\nPlease remember this controller is just a prototype, but usable for a lot of projects. For example in a DIY SLS 3D printer or a laser engraver.\nThe features of the Galvo controller are:\nconversion from 5V step/dir signals to ILDA standart\n120kHz input frequency of (Step / Direction signals)\n12bit Output resolution (0,006\u00b0 per angle)\nconversion from polar to linear coordinates\ncompatible with any motion controller which will create a step and direction signal\ncenter alignment pin (homing routine)\nvideo of laser galvo controller: (coming soon)\n\nIf you like my Instructable, please vote for me in the Remix Contest", "title": "DIY STEP/DIR LASER GALVO CONTROLLER", "url": "https://www.instructables.com/id/DIY-STEPDIR-LASER-GALVO-CONTROLLER/", "section": "technology", "steps": [{"step": 1, "steps_text": "Electronic Parts for the galvo controller:\nQuantity Description Link Price\n1x ILDA 20Kpps galvo galvanometer set\nAliexpress 56,51\u20ac\n1x 6mm 650nm Laserdiode\nAliexpress 1,16\u20ac\nsome\nwires\n-\n-\n1x\nST-Link V2\nAliexpress 1,92\n\nElectronic Parts for the circuit:\nHere are all required parts for the galvo controller. I tried to source all parts as cheap as possible.\nQuantity Description Name on circuit\nLink Price\n1x STM32 \"Blue-Pill\" microcontroller\n\"BLUE-PILL\"\nAliexpress 1,88\u20ac\n1x MCP4822 12 bit dual channel DAC\nMCP4822\nAliexpress 3,00\u20ac\n2x TL082 dual OpAmp\nIC1, IC2\nAliexpress 0,97\u20ac\n6x 1k Resistor\nR1-R6\nAliexpress 0,57\u20ac\n4x 10k trim-potentiometer\nR7-R10\nAliexpress 1,03\u20ac\nsome\npin header\n-\nAliexpress 0,46\u20ac", "step_imgs": [], "step_title": "Step 1: Parts You Need for the Galvo Controller"}, {"step": 2, "steps_text": "Here I will you explain, how the controller works in general. I will also show some details for example the calculation of the right angle.\n\n1. MOTION-CONTROLLER\nThe motion controller is the part where you will create the step and direction signals. The step/direction controll is often used in stepper motor applications like 3D-Printers, Lasers or CNC-Mills.\nIn addition to the step and direction signals there is a need for a center allignment pin to make the STM32 and the Motioncontroller consitent. That is because the galvos are absolute controlled and there is no need for any limit switches.\n2.STM32-Microcontroller\nThe STM32 microcontroller is the heart of this controller. This microcontroller has several task to do. These task are:\nTask 1: Measure signals\nThe first task is to measure the input signals. In this case it will be step and direction signals. Because I don't want that the motion-controller will be limited by input frequency, I designed the circuit for 120kHz (tested) . To achieve this input frequency without loosing data, I am using two hardware timers TIM2 and TIM3 on the STM32 to manage the step / direction interface. In addition to the step and direction signals there is the llignment signal. This alignment is controlled by an external interrupt on the STM32.\nTask 2: Compute the signals\nNow the controller needs to compute the signals to the right value for the DAC. Because the galvo will create a non linear polar coordinate system, a small calculation is needed to create a linear dependence between step and actual moved laser. Here I will show you a sketch of the calculation:\nNow we need to find the formula for the calculation. Because I use a 12bit DAC, I can give out a voltage from -5 - +5V in 0 - 4096 steps. The galvo I have order has a total scan angle of 25\u00b0 at -5 - +5V. So my angle phi is in a range from -12,5\u00b0 - +12,5\u00b0 . Finally I need to thought about the distance d . I personally want a scan field of 100x100mm, so my d will be 50mm. The high h will be the result of phi and d. h is 225,5mm. To bring the distance d in relation to the angle phi I used a little formula, which will use the tangents and convert the angle from radians into \"DAC-values\"\nFinally I only need to add a bias of 2048, because my scanfield is center alignment and all of the calculations are done.\nTask 3: Send values to the DAC:\nBecause the STM32 i have used has no build in DAC, I have used an external DAC. The communication between the DAC and the STM32 is realized over SPI.\n3. DAC\nFor the circuit I am using the same 12bit DAC \"MCP4822\" as deltaflo. Because the DAC is unipolar 0-4,2V and you need -+5V bipolar for the ILDA standard, you need to build a small circuit with some OpAmps. I am using TL082 OpAmps. You have to build this amplifier-circuit twice, because you need to controll two galvos. The two OpAmps are connected to -15 and +15V as their supply voltage.\n4.GALVO\nThe last part is rather simple. The Output voltage of the two OPAmps will be connected to the ILDA Galvo drivers. And that's it, now you should be able to control the galvos with step and direction signals", "step_imgs": [], "step_title": "Step 2: The Theory of the Controller"}, {"step": 3, "steps_text": "For the circuit I have used a prototype PCB.\nYou can connect the step and direction signals directly to the STM32, because I have activated internal pull down resistors. Also I have used 5V tolerant pins for the step, direction and center pins.\nYou can download the full schematic of the circuit below:", "step_imgs": ["https://cdn.instructables.com/FO4/TLFM/JT91M0SM/FO4TLFMJT91M0SM.LARGE.jpg"], "step_title": "Step 3: The Circuit"}, {"step": 4, "steps_text": "The STM32 is programmed with Attolic TrueStudio and CubeMX . TrueStudio is free to use and you can download it here\nBecause TrueStudio is not that simple like for example the Arduino IDE, I have generated a .hex file, which you simply need to upload to the STM32 microcontroller.\nIn the following I will explain, how you uplaod the file to the STM32 \"BluePill\":\n1. Download \"STM32 ST-LINK Utility\":\nYou can download the Software here\n2.Install and open \"STM32 ST-LINK Utility\":\n3. Now open the Galvo.hex file in the ST-Link Utility: After that you need to connect the STM32 \"BluePill\" to the ST-Link-V2. Once connected click on the \"Connect to traget Button\":\nFinally click on \"Download\". Now your STM32 should be flashed correctly.\nIn addition, I have attached all the source files for the Galvo_Controller in TrueStudio", "step_imgs": [], "step_title": "Step 4: Programming the STM32"}, {"step": 5, "steps_text": "I have placed all the electronic parts on a 4mm aluminum plate for a better look :-)\nNow I will show you how you need to adjust the potentiometers on the circuit probably:\nAt first some background information about the ILDA standard. The ILDA standard is usually used for Laser shows, and consists of a 5V and a -5v signal. The both signals have the same amplitude, but with changed polarity. So what we have to to is to trim the output signal from the DAC to 5V and -5V.\nAdjust the potentiometer:\nWhat you can see here is the output voltage of this circuit at an input step frequency of 100kHz and with a constant direction signal. In this picture everything is fine. The amplitude goes from 0 to 5V and from 0 to -5 . Also the voltages are aligned probably.\nNow I will show you what could get wrong while adjusting the potentiometer:\nAs you can see now both voltages are not aligned probably. The solution is to adjust the offset voltage from the OpAmp. You do that by adjusting the potentiometers \"R8\" and \"R10\".\nAn other example:\nAs you can see now the voltages are aligned probably, but the amplitude is not 5V but 2V. The solution is to adjust the gain resistor from the OpAmp. You do that by adjusting the potentiometers \"R7\" and \"R9\".", "step_imgs": ["https://cdn.instructables.com/FWR/0ZOU/JT91M134/FWR0ZOUJT91M134.LARGE.jpg", "https://cdn.instructables.com/FK6/UKRX/JT91M13G/FK6UKRXJT91M13G.LARGE.jpg"], "step_title": "Step 5: Connect All the Parts Mechanically and Test It"}], "channel": ""}, {"category": "", "description": "Hi, night bicycle trails are pretty popular in my country. I thought it would be cool if you have, beside of primary light, light which direction you can control with joystick. As I am a fan of MTB my requirements were: reliability, so you can use it in moderate terrain, low price and simplicity so everybody can make it. This is first version of Z-light I would call it alfa, its not field tested yet, but I believe it can make a regular trip. To make it, you will have to: 3D print parts, solder, crimp dupont connectors and program arduino nano (copy paste). If you never did this stuff before, don't worry it is all basics and youtube is filled with great tutorials.", "title": "Z-light (alpha)", "url": "https://www.instructables.com/id/Z-light-alpha/", "section": "technology", "steps": [{"step": 1, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FAE/VI7P/JTCRJRLL/FAEVI7PJTCRJRLL.LARGE.jpg"], "step_title": "Step 1:"}, {"step": 2, "steps_text": "Parts list:\nNot everything is on the picture.\nAbout the screws, you can use any screw you will find home and consider them good enough.\nMost of these screws I had from 3D printer kit.\n1x Generic Arduino joystick or Sony PSP 2000 joystick (Amazon or Aliexpress)\n1x Metal gear servo 54.1 x 20 x 44.3 mm (Amazon or Aliexpress).\nI recommend to buy 20kg servo ( 20USD on amazon), it has much better movement and feeling than cheapest generic servo.\n1x 9g servo (Amazon or Aliexpress)\n1x Arduino nano (www.arduino.cc)\n2x M5 wing nut, (Home depot, local hardware store)\n2x M5 x 25 mm hex screw, (Home depot, local hardware store)\n2x Hex nut for M5 screw, (Home depot, local hardware store)\n4x Axial ball bearing F8-16M (8x16x5mm) (Amazon or Aliexpress)\n1x Aluminium servo arm horn 24T (Amazon or Aliexpress)\n2x M6 x30 Hex screw, (Home depot, local hardware store)\n2x M2 x 6 mm screw, wood like thread (one usually come with 9g servo, Aliexpress)\n4x M3 x 8 mm screw, wood like thread (in picture is 2x that is it a mistake, you can use two screws that come with 9g servo, I bought these in Home Depot)\n4x M3 x 6 mm screw for standard arduino joystick\n2x M3NS nut, (They come with 3D printer kits, Aliexpress)\n3x M3 x 10 mm screw,(they come with 3d printer kits, Aliexpress)\n1x Chicago screw 5 x 40 mm (Home depot, Amazon)\n1x Mini led flash light (Amazon or Aliexpress)\n1x Copper board 35 x 25 mm one sided for PCB (you might need spare, local store with electronics, Amazon.)\n3x 14500 rechargeable batteries and charger (they are same shape as AA 1,5V batteries but these are different)\n1x 14500 battery case for 2 batteries. Use different type or number of batteries or case if you want 18650 are even better. USB power bank with combination of 20 kg servo didint work for me.\n2x Calbe tie\n1x Dupont female - female 4 wire cable 20 cm long. You might crimp it. They come with arduino kits.\nDipont pins 2.54mm header curved, straight (comes with dupont crimping kit, aliexpres)\nSpare wire\nNylon spiral wrap, 30 cm should be enough or textile sleeve\nCopper etchant (local store with electronics, Amazon.)\nPiece of anti slip mat - for handle to not slip\nVelcro\n3D printed parts\nTools list\nSoldering gun\nDupont Crimping Pliers with Dupont connectors kit (I bought mine on Amazon for 40 CAD) - optional\nGlue gun\nMultimeter\nDrill with 1mm drill bit\nAllan key set and basic tools", "step_imgs": ["https://cdn.instructables.com/FF7/VMS8/JSPAD0Y4/FF7VMS8JSPAD0Y4.LARGE.jpg"], "step_title": "Step 2: Parts and Tools"}, {"step": 3, "steps_text": "First you need to prepare PCB, I have been inspired by tutorial on youtube made by Gareth Burrows.\nYou need: 35 x 25 mm one sided copper board, etchant, fancy polish nail remover and laser printer.\nI used glossy gift wrapping paper.\nPrint the scheme on the glossy paper.\nCut the scheme out and put it on copper board.\nApply pressure on paper and pout little bit of polish nail remover.\nContinue to apply perpendicular pressure on every part of paper, until scheme shows up on the top of paper. Repeat several times and remove paper until its still wet.\nDouble check if the scheme is correct. If it didn't come out good, you can fix it with permanent marker.\nEtch the boar.\nAfter etching, make sure you don't have shorted circuit. Check with voltmeter + and - and the signals.\nShort circuit will destroy your arduino board.\nDrill all holes for pins with 1mm drill bit.", "step_imgs": ["https://cdn.instructables.com/F7B/AO42/JTCRFLC4/F7BAO42JTCRFLC4.LARGE.jpg", "https://cdn.instructables.com/FU3/DJQ6/JTCRFLC5/FU3DJQ6JTCRFLC5.LARGE.jpg", "https://cdn.instructables.com/FW3/DLSI/JTCRFLC6/FW3DLSIJTCRFLC6.LARGE.jpg", "https://cdn.instructables.com/FV3/JGO6/JTCRFLC8/FV3JGO6JTCRFLC8.LARGE.jpg", "https://cdn.instructables.com/F8N/QCKG/JTCRFLC9/F8NQCKGJTCRFLC9.LARGE.jpg", "https://cdn.instructables.com/F3S/HDJW/JTCRG755/F3SHDJWJTCRG755.LARGE.jpg"], "step_title": "Step 3: Preparing PCB"}, {"step": 4, "steps_text": "Solder PCB to arduino board, using straight pins.\nI cut out half of the plastic part from pins so whole assembly takes less space.\nSoldier PCB to arduino according to pictures and check again for short circuit.\nTake 90 degree pins, you will need 2 x 6 pins, keep them together for easier manipulation.\nSolder pins to PCB according to pictures.\nNow it is good time to connect joystick and servos and try it (check connections in next steps). Also you can position servos to the middle of rotation.\nIMPORTATNT:\nPreviously soldered pins will be in your way and you have to cut them so they wont stick out so much.\nInsert servo connectors in pins and solder them with connectors.\nLater you wont have a problem to insert connectors.\nThis was the hardest part of the project, at least for me.", "step_imgs": ["https://cdn.instructables.com/F7I/GR76/JTCRFZG3/F7IGR76JTCRFZG3.LARGE.jpg", "https://cdn.instructables.com/FDM/QG5H/JTCRG6H3/FDMQG5HJTCRG6H3.LARGE.jpg", "https://cdn.instructables.com/FJC/IDJ8/JTCRG6IR/FJCIDJ8JTCRG6IR.LARGE.jpg", "https://cdn.instructables.com/FCO/TMQM/JTCRG6K1/FCOTMQMJTCRG6K1.LARGE.jpg", "https://cdn.instructables.com/FE0/4BBG/JTCRG6JR/FE04BBGJTCRG6JR.LARGE.jpg", "https://cdn.instructables.com/FDN/NFNA/JTCRG7T3/FDNNFNAJTCRG7T3.LARGE.jpg", "https://cdn.instructables.com/FUE/NDJN/JTCRG7TW/FUENDJNJTCRG7TW.LARGE.jpg", "https://cdn.instructables.com/FGF/JJKS/JTCRG7UO/FGFJJKSJTCRG7UO.LARGE.jpg", "https://cdn.instructables.com/FB9/CQ5J/JTCRG7W7/FB9CQ5JJTCRG7W7.LARGE.jpg"], "step_title": "Step 4: Prepare Arduino Board"}, {"step": 5, "steps_text": "If you want to use small joystick from PSP 2000, use 3D printed PSP 2000 joystick holder and follow this step.\nTurn joystick up side down and with dupond pins mark holes.\nCarefully drill the holes and solder 90 degrees pins to joystick.\nIn the picture I am using straight pins, they can be used but it is better to use 90 degree pins so you will have more room for velcro.\nCheck for short circuit between pins and use a glue gun (or try something else) to secure connector. This joystick is really fragile. I bought two of them and second one worked correctly.\nVise I am using is 2inch Desktop Vise by mdkendall on Thinkiverse.", "step_imgs": ["https://cdn.instructables.com/FDX/IY9J/JTCRG9NI/FDXIY9JJTCRG9NI.LARGE.jpg", "https://cdn.instructables.com/FI4/BXCF/JTCRG9QR/FI4BXCFJTCRG9QR.LARGE.jpg", "https://cdn.instructables.com/FEL/MIF6/JTCRG9T9/FELMIF6JTCRG9T9.LARGE.jpg", "https://cdn.instructables.com/FPI/ZW7F/JTCRG9HN/FPIZW7FJTCRG9HN.LARGE.jpg"], "step_title": "Step 5: Prepare PSP 2000 Joystick (OPTIONAL)"}, {"step": 6, "steps_text": "You will need 4x M3 x 6 mm screw, 3D printed joystick holder and Dupont female - female 4 wire cable 20 cm long.\nAssemble it together. You can protect connector with glue gun and glue female dupond connector to joystick 3D printed part. Later you can have issues with unplugging.\nAlso joystick is all naked, its not ideal for rainy and dusty environment (same for PSP2000 joystick).", "step_imgs": ["https://cdn.instructables.com/F38/0TNE/JTCRHCFY/F380TNEJTCRHCFY.LARGE.jpg", "https://cdn.instructables.com/F77/50R1/JTCRHCGF/F7750R1JTCRHCGF.LARGE.jpg"], "step_title": "Step 6: Prepare Joystick"}, {"step": 7, "steps_text": "Now you need to shorten servo cables.\nCut wires and crimp new dupont connector or use other way.\nIn case you want to crimp dupont, I am attaching some pictures, MagoArcade on youtube made good tutorial.\nSmall servo cable should have 155 mm (6 1/8inch) including connector.\nBig servo cable should have 115 mm (4 9/16 inch) including connector.\n\nFind middle rotation position on big servo and put red servo arm on it, same as it is on picture.\nTighten the screws with allen key.\nSmall servo gear:\nTake a 3D printer gear, super glue and small servo.\nDry try to fit gear on servo. It should be tight, probably you will need to clean a hole little bit.\nPut little bit super glue into gear hole and put it on servo. Let it rest for hour.\nIMPORTANT:\nGear have to be straight, not crooked, check it from more angles (see pictures).\nGear cant touch the servo, if the hole is big and gear is touching the servo, use some spacer when gluing (paper, thin cables). Otherwise it can stick onto the servo body.\nOnes you will glue gear on servo you cannot remove it.", "step_imgs": ["https://cdn.instructables.com/F2L/8EDG/JTCRGUBW/F2L8EDGJTCRGUBW.LARGE.jpg", "https://cdn.instructables.com/FU0/7C2X/JTCRGIAK/FU07C2XJTCRGIAK.LARGE.jpg", "https://cdn.instructables.com/FA5/E3X4/JTCRGINC/FA5E3X4JTCRGINC.LARGE.jpg", "https://cdn.instructables.com/FJ5/QJ3V/JTCRGJ6F/FJ5QJ3VJTCRGJ6F.LARGE.jpg", "https://cdn.instructables.com/FU3/2M8B/JTCRGL8G/FU32M8BJTCRGL8G.LARGE.jpg", "https://cdn.instructables.com/FT3/NJ1K/JTCRGLLX/FT3NJ1KJTCRGLLX.LARGE.jpg", "https://cdn.instructables.com/FNI/9XH1/JTCRGLW9/FNI9XH1JTCRGLW9.LARGE.jpg", "https://cdn.instructables.com/FPJ/5IAI/JTCRGM6X/FPJ5IAIJTCRGM6X.LARGE.jpg"], "step_title": "Step 7: Prepare Servos"}, {"step": 8, "steps_text": "As per first picture, connections goes from left to right:\nGND - black (big servo)\n+5V - red (big servo)\nSignal D3 - white (big servo)\nGND - brown (small servo)\n+5V - red (small servo)\nSignal D4 - yellow (small servo)\n+5V power supply (7V) - red (power supply)\nGND - brown (power supply)\nAnalog input signal A6 - purple (joystick)\nGND - grey (joystick)\nAnalog input signal A4 - white (joystick)\n+5V - black (joystick)\nWhile connecting servos and power supply is obvious, joystick X and Y might be different.\nI recommend to assemble all electronics and try movement directions (at this point you should have everything but power supply). Also the case if you left handed, left and right will be opposite. You can change the code or just twist joystick.\n\nSecond scheme picture is informative, inputs and outputs signals doesn't match.\nArduino upload code tutorial:\nhttps://www.arduino.cc/en/main/howto\n\nThere are two code options.\nFirst code keep returning original positions of servos.\nWith second code servos stay in set positions.\nFirst line in both codes is #include\nFirst code by:\nServos are returning to original positions\nCode by biomech75 on instructables.com\n\nSecond code\nServos stay in position.\nCode by Ali Hamza on maker.pro\nI have a problem with this code since I didn't figure out how to change servo direction. One servo goes opposite direction. If you can help me with this and share it would be awesome.", "step_imgs": ["https://cdn.instructables.com/FEC/U5FY/JTCRHM4D/FECU5FYJTCRHM4D.LARGE.jpg", "https://cdn.instructables.com/FC4/LZHF/JTCRHM5M/FC4LZHFJTCRHM5M.LARGE.jpg"], "step_title": "Step 8: Adruino Code and Scheme"}, {"step": 9, "steps_text": "IMPORTANT:\nBatteries 14500 look similar to AA but they have 3,7V instead of 1,5V.\nDo not use them where AA supposed to be. There is a physical protection, probably it won't work.\nPrepare battery case 2 x 1450 batteries.\nAfter modification you can use 2xAA battery case (I dont recommend this).\nCrimp 2 x female dupont connector, length is not really matter is up to you where you will store power.\nAbout 10 cm should be enough to store batteries in the bag in front of the bicycle.\nYou will connect it to another cable going from arduino board.\n3D printed parts:\nThinkiverse\nPinshape", "step_imgs": ["https://cdn.instructables.com/F89/KD9T/JTCRHFVS/F89KD9TJTCRHFVS.LARGE.jpg", "https://cdn.instructables.com/FX5/BCUP/JTCRHSM3/FX5BCUPJTCRHSM3.LARGE.jpg", "https://cdn.instructables.com/FW3/2FP9/JTCRHSP2/FW32FP9JTCRHSP2.LARGE.jpg"], "step_title": "Step 9: Final Preparations"}, {"step": 10, "steps_text": "You can see the final assembly on the video.\nThere are few changes.\nIt is better to put board in with USB connector on right side.\nWith dupont pins directing to the top. its better because you are not able accidentally unplug joystick and power.\nTake a time to put whole assembly and cables in.\nIn the end you can use textile sleeve or nylon cable wrap to protect wires.\nIn the next step I am planning to make headlight holder and gopro holder.\nHeadlight is lighter and in general have a stronger light than this flash light, also load on servos will be smaller.\nIf you have better ideas for mechanical and electronical designs and solutions, please share.\nThank you for your interest in Z-light.", "step_imgs": ["https://cdn.instructables.com/FWK/J7GE/JTCRIIE7/FWKJ7GEJTCRIIE7.LARGE.jpg", "https://cdn.instructables.com/FEW/ECM6/JTCRIIEY/FEWECM6JTCRIIEY.LARGE.jpg", "https://cdn.instructables.com/FYU/NQF8/JTCRIIG8/FYUNQF8JTCRIIG8.LARGE.jpg", "https://cdn.instructables.com/FVI/12RI/JTCRIIHU/FVI12RIJTCRIIHU.LARGE.jpg"], "step_title": "Step 10: Assembly"}], "channel": ""}, {"category": "", "description": "XIV Nixie Clock V1\nProject Date: December 2018 \u2013 March 2019\nWARNING: Nixie tubes require 180v to operate, this is a dangerous high voltage and you need to handle the tubes and the supporting circuitry with great caution.\nIf you would like to use Nixie styled tubes in your project, which are safer to handle and use, then consider the VFD type of tube, similar character style, and style of tube but these tubes only require 27v to operate.\nBACKGROUND\nTo understand the working of the VFD type and Cold Cathode type of Nixie tubes I would recommend the following excellent articles by Chris Woodford:\nhttps://www.explainthatstuff.com/how-nixie-tubes-w...\nhttps://www.explainthatstuff.com/how-vacuum-fluore...\nThis is my first Nixie styled clock I have constructed. The clock actually consists of two clocks, the first being a 6 x IN-18 tube clock which is mounted on the clock\u2019s top and displays both time and date. The second clock, this time based on 6 x IN-12A and 2 x IN-15A nixie tubes displays at the front of the clock and can display, time, date, pressure (with units and trend), temperature (both Centigrade and Fahrenheit) and, humidity (with units and trend). The time and date are separated with two single neon lamp-based separators, while only one of these lamps is displayed, to represent a decimal point, when the pressure, humidity or temperature is displayed. Both these clocks use \u201cDirect/Static Drive\u201d to power the displays and are based on two Arduino Mega 2560 boards. The fourteen tubes are driven by 12V to 170V DC to DC boost power supplies and 14 x K155 IC chips. The clock also powers two sets of Neon Lamps which switch off while the clock goes through its cathode cleaning cycle which happens at 19, 39 and 55 minutes past each hour. This cathode cleaning cycle consists of all six tubes displaying the digits 0 through 9 in sequence 6 times.\nIn addition the clock will sound a chime at 15, 30, 45 and 60 minutes. At the 60 minute chime the hour chime is also sounded. The chimes are standard MP3 files using a simple MP3 player controlled by the Arduino mega. In order to save on tube life all tubes are switched off automatically when the light level in the room dims to a predefined level, this is achieved using a LRD resistor located at the back of the clock. To help dissipate any heat build up both Arduino Mega ICs have copper heat fins attached and a 5V fan draws air out of the clock, cool air entering through a hole in the bottom plate.\nThe user can adjust the time, date, Chimes, and Chimes Volume using one of two 16x2 LCD displays, located at the back of the clock. The BME280 temperature, humidity, and pressure sensor is mounted on the back of the clock so as to not be affected by the clock's internal temperature.", "title": "XIV Nixie Clock", "url": "https://www.instructables.com/id/XIV-Nixie-Clock/", "section": "technology", "steps": [{"step": 1, "steps_text": "1 2 x Arduino Mega 2560\n2 2 x DC to DC Step down Buck converter\n3 6 x IN-18 Nixie tubes NOS (manufactured in 1988, USSR)\n4 6 x IN-12A Nixie tubes NOS (manufactured in 1979, USSR)\n5 2 x In-15A Nixie tubes NOS (manufactured in 1981, USSR)\n6 2 x 12V to 180V boost DC-DC power supply\n7 Plastic stand offs to support components and secure to base board\n8 12v 1A DC power adapter\n9 14 x K155ID1 Nixie driver IC Chips NOS (74141 chips can also be used)\n10 14 x 16 pin IC CHIP carriers\n11 multi-coloured wire (2m per colour, 10 colours)\n12 1mm PCB female pins (70 required)\n13 4mm heat shrink cable\n14 2 x PCB board\n15 14 x 15K resistors, 4 x 100K resistors\n16 6 x Neon NE-2 lamps\n17 2 x LDR(Light Dependent Resistor) (optional senses light levels)\n18 2 x LCD 2605 with keypad, (only SELECT, UP, and DOWN buttons used)\n19 2 x Power adapter 2.5mm input plug\n20 2 x Two pole switch\n21 5V fan\n22 2 x Real Time Clock unit DS3231\n23 2 x Pressure, temperature, humidity unit BME180\n24 2 x Duel channel relay\n25 3W/ 8ohm speaker\n26 JQ6500 MP3 player", "step_imgs": ["https://cdn.instructables.com/FLI/JPOP/JT91R8Q8/FLIJPOPJT91R8Q8.LARGE.jpg", "https://cdn.instructables.com/FN8/S2PL/JT91R8Q9/FN8S2PLJT91R8Q9.LARGE.jpg", "https://cdn.instructables.com/F6W/N71A/JT91R8QB/F6WN71AJT91R8QB.LARGE.jpg", "https://cdn.instructables.com/FTW/PB27/JT91R8QE/FTWPB27JT91R8QE.LARGE.jpg", "https://cdn.instructables.com/FFW/9GAX/JT91R8Z2/FFW9GAXJT91R8Z2.LARGE.jpg", "https://cdn.instructables.com/F8W/YP64/JT91R8RL/F8WYP64JT91R8RL.LARGE.jpg", "https://cdn.instructables.com/FC6/P8G6/JT91R8QN/FC6P8G6JT91R8QN.LARGE.jpg", "https://cdn.instructables.com/FT8/G0E8/JT91R8QI/FT8G0E8JT91R8QI.LARGE.jpg"], "step_title": "Step 1: Equipment List"}, {"step": 2, "steps_text": "The clock\u2019s front display consists of 6 x IN-12A, 2 x IN-15A Nixie tubes, set within the wooden box that display the date, time (alternative time zone), humidity, pressure, and temperature in Centigrade or Fahrenheit. A further two IN-15A Nixie tubes that are located at either end of the 6 x IN-12A tubes display trend I.e. plus or minus, at the start of the display and either % or P symbols at the end of the display.\nInputs from the Arduino A,D,B, and C control the outputs from the BCD Decoder. Wires attracted to the BCD Decoder pins have \u201coutputs\u201d numbers beside these pins which refer to digits on the nixie tubes, so for example the wire attached to pin 1, output 8 is attached to the Nixie pin 4, which in turn will, if high, light the number \u201c8\u201d inside the Nixie tube.\nBCD DECODE NIXIE TUBE (IN-12A)\nPIN OUTPUT PIN DISPLAY\n1 8 4 8\n2 9 3 9\n8 2 10 2\n9 3 9 3\n10 7 5 7\n11 6 6 6\n13 4 8 4\n14 5 7 5\n15 1 11 1\n16 0 2 0\nThe above applies to IC chips 2 through 7, IC Chip 1 is special in that it controls the front \u201ctrend\u201d Nixie tube, while IC Chip 8 controls the rear \u201cunits\u201d Nixie tube. The \u201ctrend\u201d Nixie tube uses + and \u2013 while the characters % and P are used on the rear \u201cunits\u201d Nixie tube.\nSpecial Outputs IC CHIP 1 and 8\nBCD DECODE NIXIE TUBE\nPIN OUTPUT PIN DISPLAY\n1 - 4 - IN-15A\n2 + 5 +\n10 % 10 %\n11 P 3 P\nIn order to drive the K155di chip it is necessary to provide a binary value to the inputs A,D,B, and C. This is achieved by taking the digit to be displayed on the Nixie tube and breaking it down into its binary value:\ndigitalWrite(d, (value & 0x08) >> 3); // 0 \u2013 9 digit equals value\ndigitalWrite(c, (value & 0x04) >> 2);\ndigitalWrite(b, (value & 0x02) >> 1);\ndigitalWrite(a, value & 0x01);", "step_imgs": ["https://cdn.instructables.com/FYL/OHUP/JT91R8PS/FYLOHUPJT91R8PS.LARGE.jpg", "https://cdn.instructables.com/F76/V8NB/JT91R8QZ/F76V8NBJT91R8QZ.LARGE.jpg", "https://cdn.instructables.com/F6R/LCGB/JT91R8R4/F6RLCGBJT91R8R4.LARGE.jpg", "https://cdn.instructables.com/FWX/CXDS/JT91R8R2/FWXCXDSJT91R8R2.LARGE.jpg", "https://cdn.instructables.com/FK7/EW6K/JT91R8NA/FK7EW6KJT91R8NA.LARGE.jpg", "https://cdn.instructables.com/F44/8M76/JT91R8QY/F448M76JT91R8QY.LARGE.jpg", "https://cdn.instructables.com/FJA/6WKV/JT91R8QX/FJA6WKVJT91R8QX.LARGE.jpg", "https://cdn.instructables.com/F8A/LPPL/JT91R8N1/F8ALPPLJT91R8N1.LARGE.jpg", "https://cdn.instructables.com/F34/0BSC/JT91R8R8/F340BSCJT91R8R8.LARGE.jpg", "https://cdn.instructables.com/F9U/2FGD/JT91R8R9/F9U2FGDJT91R8R9.LARGE.jpg", "https://cdn.instructables.com/FP0/DYR6/JT91R8RR/FP0DYR6JT91R8RR.LARGE.jpg", "https://cdn.instructables.com/F9E/L9P3/JT91R8RA/F9EL9P3JT91R8RA.LARGE.jpg", "https://cdn.instructables.com/FIA/M2ZY/JT91R8RB/FIAM2ZYJT91R8RB.LARGE.jpg", "https://cdn.instructables.com/F61/VY6W/JT91R8N2/F61VY6WJT91R8N2.LARGE.jpg", "https://cdn.instructables.com/F2T/IAC6/JT91R8QS/F2TIAC6JT91R8QS.LARGE.jpg", "https://cdn.instructables.com/FAG/LT09/JT91R8QW/FAGLT09JT91R8QW.LARGE.jpg", "https://cdn.instructables.com/F46/4RV9/JT91R8QV/F464RV9JT91R8QV.LARGE.jpg", "https://cdn.instructables.com/F8M/J6RD/JT91R8N5/F8MJ6RDJT91R8N5.LARGE.jpg", "https://cdn.instructables.com/FE9/TOQK/JT91R8N6/FE9TOQKJT91R8N6.LARGE.jpg", "https://cdn.instructables.com/FQD/NXEA/JT91R8NC/FQDNXEAJT91R8NC.LARGE.jpg", "https://cdn.instructables.com/FXG/WGW8/JT91R8NS/FXGWGW8JT91R8NS.LARGE.jpg", "https://cdn.instructables.com/F9R/8KB2/JT91R8RQ/F9R8KB2JT91R8RQ.LARGE.jpg", "https://cdn.instructables.com/FHB/ZMA0/JT91R8RT/FHBZMA0JT91R8RT.LARGE.jpg", "https://cdn.instructables.com/FCW/RA5M/JT91R8RS/FCWRA5MJT91R8RS.LARGE.jpg", "https://cdn.instructables.com/F2K/G6PH/JT91R91D/F2KG6PHJT91R91D.LARGE.jpg", "https://cdn.instructables.com/FQ2/13CP/JT91R8R5/FQ213CPJT91R8R5.LARGE.jpg", "https://cdn.instructables.com/FBR/184L/JT91XD5H/FBR184LJT91XD5H.LARGE.jpg"], "step_title": "Step 2: Construction"}, {"step": 3, "steps_text": "Each Nixie Tube has its own pinouts, each of the above datasheets shows these pinouts. Where the tube is supplied with solid pins I used PCB female pins to attach to these pins. Each PCB pin was soldered to its coloured wire and then heat shrink was applied.", "step_imgs": ["https://cdn.instructables.com/F00/PH7F/JT91R8RF/F00PH7FJT91R8RF.LARGE.jpg", "https://cdn.instructables.com/FGV/AIC6/JT91R8RI/FGVAIC6JT91R8RI.LARGE.jpg", "https://cdn.instructables.com/FT7/6RWR/JT91R8QL/FT76RWRJT91R8QL.LARGE.jpg", "https://cdn.instructables.com/F60/MU6L/JT91R8QK/F60MU6LJT91R8QK.LARGE.jpg", "https://cdn.instructables.com/FFF/HOQK/JT91R8RE/FFFHOQKJT91R8RE.LARGE.jpg", "https://cdn.instructables.com/FPT/MUZ4/JT91R8QR/FPTMUZ4JT91R8QR.LARGE.jpg", "https://cdn.instructables.com/FNU/FE08/JT91R8QP/FNUFE08JT91R8QP.LARGE.jpg"], "step_title": "Step 3: Nixie Tube Pinouts"}, {"step": 4, "steps_text": "IN-15A\n1 = Anode / 3 = P / 4 = - / 5 = + / 10 = %\nIN-12A\n1 = Anode / 2 = 0 / 3 = 9 / 4 = 8 / 5 = 7 / 6 = 6 / 7 = 5 / 8 = 4\n9 = 3 / 10 = 2 / 11 = 1\nAll Anodes are connected to 170v via a 15K resistor in series. The Neons are controlled directly from the Arduino Mega with 100K resistors in series.\nLogical Driver\n1 23 45 67 8 Tubes\n+/- DD N1 MM N2 YY %/P Display\nChips 1 through 8 \u2013 Controls tubes 1 through 8, 8 chips in total.\nPin Action\n1 Tube 1, number 0\n2 Tube 1, number 1\n3 Tube 1, number 2\n4 Tube 1, number 3\n5 Tube 1, number 4\n6 Tube 1, number 5\n7 Tube 1, number 6\n8 Tube 1, number 7\n9 Tube 1, number 8\n0 Tube 1, number 9\nN1 and N2 are both lit when the date and time are displayed. Only N2 is lit when temperature, humidity, and pressure are displayed, and the plus or minus tube is only displayed while these three are displayed. This is also the same for tube 8 where P is displayed while pressure is being displayed and % while the humidity is being displayed.\nThe six IN-12A and two IN-15A Nixie tubes have 11 cathode pins and 1 Anode pin all of which are soldered to 16AWG wire which in turn is soldered to a 1mm DuPont female pin. Both ends of the wire are heat shrink wrapped. Each wire is a different colour with the last three wire colours a repeat of the first three wire colours but having an extra black heat shrink wrapping added at both ends. This solder, wire, heat shrink is repeated for all six IN-12A Nixie tubes. Two cathode pins and the anode are connected using this method for the two IN-15A Nixie tubes. The DuPont female pins attach to individual header pins which in turn attach to the 10 output pins of the K155 BCD chip. Prewired DuPont male to female cables are attached to headers that are attached to the four input pins of the K155iD BCD chip and also attached to the output female connectors of the Arduino Mega 2560. The front Arduino Mega based clock also has neon NE-2 lamps however these form two dots between the date digits or a single decimal point when the temperature, pressure, or humidity are displayed. In order for this neon lamp to work off the 170V Nixie tube supply it is necessary to add a voltage divider, to reduce the voltage down to 130V to power these Neon Lamps.\nWhere Vin is 148V, Vout is 130V, R1 is 68K ohms, and R2 is 9K ohms. To control these two neon lamps the Arduino Mega uses Pins 11 and 12 as inputs to a two-channel relay which when enabled will provide a ground for each of the Neon lamps.", "step_imgs": ["https://cdn.instructables.com/FO1/EF1I/JT91R8MX/FO1EF1IJT91R8MX.LARGE.jpg", "https://cdn.instructables.com/FA7/3V4A/JT91R8ZK/FA73V4AJT91R8ZK.LARGE.jpg", "https://cdn.instructables.com/FQ3/YSBG/JT91R901/FQ3YSBGJT91R901.LARGE.jpg", "https://cdn.instructables.com/F7N/9IDB/JT91R8MZ/F7N9IDBJT91R8MZ.LARGE.jpg", "https://cdn.instructables.com/FGT/KI3P/JT91R8RU/FGTKI3PJT91R8RU.LARGE.jpg", "https://cdn.instructables.com/FG0/3QWB/JT91R8O8/FG03QWBJT91R8O8.LARGE.jpg", "https://cdn.instructables.com/F8Y/ZVP9/JT91R8PQ/F8YZVP9JT91R8PQ.LARGE.jpg", "https://cdn.instructables.com/FSN/H46M/JT91R8UM/FSNH46MJT91R8UM.LARGE.jpg", "https://cdn.instructables.com/FVC/1IFO/JT91R8XR/FVC1IFOJT91R8XR.LARGE.jpg", "https://cdn.instructables.com/FGS/X34P/JT91R8Y7/FGSX34PJT91R8Y7.LARGE.jpg", "https://cdn.instructables.com/F7X/54VY/JT91R8YN/F7X54VYJT91R8YN.LARGE.jpg", "https://cdn.instructables.com/FMJ/G5IR/JT91R90G/FMJG5IRJT91R90G.LARGE.jpg", "https://cdn.instructables.com/FCU/UNXS/JT91R90Y/FCUUNXSJT91R90Y.LARGE.jpg"], "step_title": "Step 4: Pin Connection"}, {"step": 5, "steps_text": "The attached Fritzing Diagrams show the basic working layout of each clock. I have not included many of the neutral wires as this would further complicate the diagram.", "step_imgs": [], "step_title": "Step 5: Fritzing Diagrams"}, {"step": 6, "steps_text": "ARDUINO SOFTWARE\nThe software consists of a simple date, time, and temperature format option, selected by pressing the SELECT key. The UP and DOWN keys adjust the displayed values. The attached LCD screen displays in parallel what is displayed on the Nixie tubes. The Arduino software runs on the Arduino Mega 2560 board with attached BME180 temperature, pressure, and humidity unit. In addition, a DS3231 Real Time Clock and 5v fan are also attached. The primary role of the software is to convert the date, time, pressure, humidity, and temperature character strings into sets of individual characters. Each character is then further converted into a set of four binary as inputs to the K155 IC chips. These inputs A, D, B, and C are either high or low, when applied to the K155 IC CHIP the chip generates a 10-bit output which is used to drive its attached Nixie tube. The Nixie tube anode is supplied with 170V DC and connected in series with a 15K resistor, while each of the remaining 10 Cathode connections are attached to the K155 outputs.\nAt 19, 39, and 55 minutes past the hour all eight Nixie tubes go through a simple routine to reduce cathode poisoning, this consists of each tube displaying an increasing digit value from 0 to 9, this routine takes about 15 seconds to complete. A light detecting resistor has been installed so the clock displays will switch off while the room is dark.\nCHIMES\nIt was decided as a last-minute addition to add a chime feature to the clock. This would only apply to the IN-18 clock. The CHIMES are 16 pre-recorded chime sound MP3 files held on a Mini MP3 player add-on board. The board is powered with 5v and connected to a 5W speaker. Its control is via Pins 0 and 1 on the Arduino Mega board. Further it was necessary to add a \u201cchime\u201d function to the clocks software in order that it would chime the quarter hours and each hour. In addition, a CHIMES Yes/No option and a volume control where added to the Clock adjustment menu.", "step_imgs": [], "step_title": "Step 6: Arduino Software"}, {"step": 7, "steps_text": "REVIEW\nThis was not an easy project, over 150 individual wires to solder, heat shrink wrap, and check, plus ensuring that each was correctly attached to its IC CHIP or header pin. Caution was the watchword when handling any wiring due to the 180v DC supply to the Nixie tubes. The supply and use of the NOS stock Nixie tubes and K155 IC Chips was no problem. All purchased via eBay and coming from the Ukraine, long delivery time 4-6 weeks but well packaged and suppliers very helpful. Quality of soldering was important as was use of a rigid wire colouring scheme.\nWHATS NEXT\nThis clock is based on the Static or Direct method of driving the Nixie tubes, that is to say one BCD output, powers one wire which in turn lights a single digit within the tube. While this method works, I would like to move onto Multiplexing which in turn leads to a PCB based clock rather than numerous wires and potential failure points. While building this clock I took the opportunity to build two other Clocks both of which provided platforms for understanding the building process. The three attached photos show these two clocks the first a Kit based unit (IN-8-2 tubes) and the second a scratch-built unit (IN-14 tubes), basically a simplified version of the XIV clock. The third photo shows my next project a breadboard development of a Multiplex clock based on an USSR manufactured IV-27M VFD tube made in 1985.", "step_imgs": ["https://cdn.instructables.com/FPX/ASGA/JT91R8JY/FPXASGAJT91R8JY.LARGE.jpg", "https://cdn.instructables.com/F40/W6U1/JT91R8JZ/F40W6U1JT91R8JZ.LARGE.jpg", "https://cdn.instructables.com/FNX/76AU/JT91R8K0/FNX76AUJT91R8K0.LARGE.jpg"], "step_title": "Step 7: Review and Whats Next"}], "channel": ""}, {"category": "", "description": "Hi Makers,\nWe are in the joy of making a project that has been in our mind for a long time and sharing with you. Smart Coffee Table. Because this table is really smart. It illuminates your environment according to the weight of your drink.", "title": "Smart Coffee Table", "url": "https://www.instructables.com/id/Smart-Coffee-Table/", "section": "technology", "steps": [{"step": 1, "steps_text": "We are in the joy of making a project that has been in our mind for a long time and sharing with you. Smart Coffee Table. Because this table is really smart. It illuminates your environment according to the weight of your drink.\nHow Does? We have used a weight sensor on the smart coffee table. Thanks to this sensor, we can adjust the desired color to the desired weight to the RGB strip led that we have connected to the Arduino outputs.\nIf the cup is empty, the red color is lit.\nBetween 0-50 gr, the yellow color is lit.\nBetween 50-100 gr, the green color is lit.\nBetween 100-150 gr, the blue color is lit.\n150 and higher, close to white color.\nAnd we used epoxy again in this project. Thus, the lights from RGB are better spread to the environment.", "step_imgs": ["https://cdn.instructables.com/FT8/FGY7/JTCRF5UW/FT8FGY7JTCRF5UW.LARGE.jpg", "https://cdn.instructables.com/FAD/KMMC/JTCRF5V0/FADKMMCJTCRF5V0.LARGE.jpg"], "step_title": "Step 1: Summary"}, {"step": 2, "steps_text": "If you decided to make this project or you are wondering, have to have some materials and equipments.\nWe used 4 groups in this project ;\n- Elektronics\n- 3D Printed Parts,\n- Epoxy Resin\n- Others", "step_imgs": ["https://cdn.instructables.com/FHF/S4ZQ/JTCRF6CA/FHFS4ZQJTCRF6CA.LARGE.jpg"], "step_title": "Step 2: Equipment & Materials"}, {"step": 3, "steps_text": "You will find below list:\n- Arduino Nano\n- HX711 Weight Sensor\n- RGB Led Strip\n- BD135 ( * 3)\n- 10K (* 3)\n- On - Off Switch", "step_imgs": ["https://cdn.instructables.com/FV5/APBU/JTCRF6KK/FV5APBUJTCRF6KK.LARGE.jpg", "https://cdn.instructables.com/F3I/95GI/JTCRF6Y8/F3I95GIJTCRF6Y8.LARGE.jpg", "https://cdn.instructables.com/FWF/WYBZ/JTCRF6XJ/FWFWYBZJTCRF6XJ.LARGE.jpg", "https://cdn.instructables.com/FYH/9J57/JTCRF6R0/FYH9J57JTCRF6R0.LARGE.jpg", "https://cdn.instructables.com/FUL/2FQX/JTCRF6R5/FUL2FQXJTCRF6R5.LARGE.jpg", "https://cdn.instructables.com/F9S/CQ7D/JTCRF7O2/F9SCQ7DJTCRF7O2.LARGE.jpg"], "step_title": "Step 3: Electronics"}, {"step": 4, "steps_text": "You will find list below;\n- Main Body\n- Cup Holder\n- Battery Case\n- Shoes (* 8)\n- Cup Holder Support", "step_imgs": ["https://cdn.instructables.com/FXZ/91IQ/JTCRF8PH/FXZ91IQJTCRF8PH.LARGE.jpg", "https://cdn.instructables.com/FBJ/XOKM/JTCRF8PK/FBJXOKMJTCRF8PK.LARGE.jpg", "https://cdn.instructables.com/FA6/KOJK/JTCRF8PN/FA6KOJKJTCRF8PN.LARGE.jpg", "https://cdn.instructables.com/FHC/3YB6/JTCRF8PS/FHC3YB6JTCRF8PS.LARGE.jpg", "https://cdn.instructables.com/FO0/RMVJ/JTCRF8QM/FO0RMVJJTCRF8QM.LARGE.jpg", "https://cdn.instructables.com/FRU/W4UH/JTCRF8QT/FRUW4UHJTCRF8QT.LARGE.jpg", "https://cdn.instructables.com/F10/FE0V/JTCRF8XC/F10FE0VJTCRF8XC.LARGE.jpg", "https://cdn.instructables.com/FXZ/XT15/JTCRFCZK/FXZXT15JTCRFCZK.LARGE.jpg"], "step_title": "Step 4: 3D Printed Parts"}, {"step": 5, "steps_text": "We used epoxy resin in this project for good spreading.", "step_imgs": ["https://cdn.instructables.com/FXO/RULQ/JTCRF988/FXORULQJTCRF988.LARGE.jpg"], "step_title": "Step 5: Epoxy Resin"}, {"step": 6, "steps_text": "we used some materials too.\n- Wooden (* 4)\n- A glass\n- Glue", "step_imgs": ["https://cdn.instructables.com/F9S/UJFI/JTCRFAL3/F9SUJFIJTCRFAL3.LARGE.jpg", "https://cdn.instructables.com/FW7/EBLL/JTCRFBAI/FW7EBLLJTCRFBAI.LARGE.jpg", "https://cdn.instructables.com/FE2/P6RF/JTCRFBGW/FE2P6RFJTCRFBGW.LARGE.jpg"], "step_title": "Step 6: Others"}, {"step": 7, "steps_text": "A RGB led have 4 inpusts. Red , Green , Blue and +12 V.\nWe added wires to this inputs. And than put it to 3d printed main body like that pictures.", "step_imgs": ["https://cdn.instructables.com/FJP/FCYT/JTCRFFUB/FJPFCYTJTCRFFUB.LARGE.jpg", "https://cdn.instructables.com/FLP/AXII/JTCRFG0S/FLPAXIIJTCRFG0S.LARGE.jpg", "https://cdn.instructables.com/F3Q/HPF7/JTCRFGEG/F3QHPF7JTCRFGEG.LARGE.jpg", "https://cdn.instructables.com/F3M/ZVAS/JTCRFGKT/F3MZVASJTCRFGKT.LARGE.jpg", "https://cdn.instructables.com/FWZ/1R7Z/JTCRFGKW/FWZ1R7ZJTCRFGKW.LARGE.jpg", "https://cdn.instructables.com/FZU/TVK0/JTCRFGRG/FZUTVK0JTCRFGRG.LARGE.jpg", "https://cdn.instructables.com/F1R/SPVF/JTCRFGYE/F1RSPVFJTCRFGYE.LARGE.jpg"], "step_title": "Step 7: RGB LED Assemble"}, {"step": 8, "steps_text": "Epoxy resin is known for its strong adhesive qualities, making it a versatile product in many industries. It offers resistance to heat and chemical applications, making it an ideal product for anyone needing a strong hold under pressure. Epoxy resin is also a durable product which can be used with various materials, including: wood, fabric, glass, china or metal.\nif you use X gr hardener, use 4X gr resin. this rate recommended.\nmix them for 6-8 min. and will transparent.\nIf you have epoxy now, we will pour it to main body. As you can see in pictures, we are pouring slowly because it will be bubbles.\nPlease when you pour , wait 24-36 hours for drying. And than you have to broke some parts. And finaly you will see like pics a transparent view. and also you can sand ...", "step_imgs": ["https://cdn.instructables.com/F5C/TID3/JTCRFK1O/F5CTID3JTCRFK1O.LARGE.jpg", "https://cdn.instructables.com/FHE/HFMW/JTCRFKF8/FHEHFMWJTCRFKF8.LARGE.jpg", "https://cdn.instructables.com/FUY/C9Q7/JTCRFKS7/FUYC9Q7JTCRFKS7.LARGE.jpg", "https://cdn.instructables.com/FN1/TH28/JTCRFKSZ/FN1TH28JTCRFKSZ.LARGE.jpg", "https://cdn.instructables.com/F5X/R0FS/JTCRG80S/F5XR0FSJTCRG80S.LARGE.jpg", "https://cdn.instructables.com/FC4/W614/JTCRG821/FC4W614JTCRG821.LARGE.jpg", "https://cdn.instructables.com/F4S/9HTC/JTCRG82S/F4S9HTCJTCRG82S.LARGE.jpg", "https://cdn.instructables.com/F1J/9B4E/JTCRG85B/F1J9B4EJTCRG85B.LARGE.jpg", "https://cdn.instructables.com/F43/MVEA/JTCRG85T/F43MVEAJTCRG85T.LARGE.jpg", "https://cdn.instructables.com/FNO/6I6L/JTCRG86B/FNO6I6LJTCRG86B.LARGE.jpg", "https://cdn.instructables.com/F8N/W0B6/JTCRG881/F8NW0B6JTCRG881.LARGE.jpg", "https://cdn.instructables.com/F9N/QSNM/JTCRG89Z/F9NQSNMJTCRG89Z.LARGE.jpg", "https://cdn.instructables.com/F5E/YRB8/JTCRG8AV/F5EYRB8JTCRG8AV.LARGE.jpg", "https://cdn.instructables.com/FGE/XVQ0/JTCRG8F4/FGEXVQ0JTCRG8F4.LARGE.jpg"], "step_title": "Step 8: Making Epoxy & Pouring"}, {"step": 9, "steps_text": "We assemle electronic equipments to a pertinax. We use BD135 and 10 K resistors for RGB LED drive outputs. And than we combined with Arduino nano and HX711 weight sensor module.", "step_imgs": ["https://cdn.instructables.com/FIM/2CGP/JTCRGB9D/FIM2CGPJTCRGB9D.LARGE.jpg", "https://cdn.instructables.com/FLC/RWS2/JTCRGBBC/FLCRWS2JTCRGBBC.LARGE.jpg", "https://cdn.instructables.com/F8O/U65R/JTCRGBCQ/F8OU65RJTCRGBCQ.LARGE.jpg", "https://cdn.instructables.com/F1T/BOTU/JTCRGBGJ/F1TBOTUJTCRGBGJ.LARGE.jpg", "https://cdn.instructables.com/FV2/WP60/JTCRGBH9/FV2WP60JTCRGBH9.LARGE.jpg", "https://cdn.instructables.com/FQG/DZNV/JTCRGBK0/FQGDZNVJTCRGBK0.LARGE.jpg", "https://cdn.instructables.com/FRB/IWZ1/JTCRGBOE/FRBIWZ1JTCRGBOE.LARGE.jpg", "https://cdn.instructables.com/FUZ/W7ZN/JTCRGBQC/FUZW7ZNJTCRGBQC.LARGE.jpg", "https://cdn.instructables.com/FW0/59W2/JTCRGE6C/FW059W2JTCRGE6C.LARGE.jpg", "https://cdn.instructables.com/FLV/J1GK/JTCRGE73/FLVJ1GKJTCRGE73.LARGE.jpg", "https://cdn.instructables.com/F3K/TAB4/JTCRGEBM/F3KTAB4JTCRGEBM.LARGE.jpg", "https://cdn.instructables.com/FKM/HQJO/JTCRGELR/FKMHQJOJTCRGELR.LARGE.jpg", "https://cdn.instructables.com/F0X/6QSL/JTCRGEN7/F0X6QSLJTCRGEN7.LARGE.jpg", "https://cdn.instructables.com/F8Y/HKDD/JTCRGEUZ/F8YHKDDJTCRGEUZ.LARGE.jpg", "https://cdn.instructables.com/FRA/9BXU/JTCRGEWI/FRA9BXUJTCRGEWI.LARGE.jpg"], "step_title": "Step 9: Circuit Assemble"}, {"step": 10, "steps_text": "Based on Avia Semiconductor\u2019s patented technology, HX711 is a precision 24-bit analogue to-digital converter (ADC) designed for weigh scales and industrial control applications to interface directly with a bridge sensor.\nWe added a support part for up lavel. We put on it a glass. As you can see in pics, balanced.", "step_imgs": ["https://cdn.instructables.com/FK3/GQ6C/JTCRGJ6E/FK3GQ6CJTCRGJ6E.LARGE.jpg", "https://cdn.instructables.com/FTO/8384/JTCRGJ6K/FTO8384JTCRGJ6K.LARGE.jpg", "https://cdn.instructables.com/FFF/KTX0/JTCRGJCY/FFFKTX0JTCRGJCY.LARGE.jpg", "https://cdn.instructables.com/FMT/LC8Y/JTCRGJJC/FMTLC8YJTCRGJJC.LARGE.jpg", "https://cdn.instructables.com/FW4/GPI5/JTCRGJSB/FW4GPI5JTCRGJSB.LARGE.jpg", "https://cdn.instructables.com/FBX/HJ4N/JTCRHU5R/FBXHJ4NJTCRHU5R.LARGE.jpg", "https://cdn.instructables.com/F3K/ZXS6/JTCRHU75/F3KZXS6JTCRHU75.LARGE.jpg", "https://cdn.instructables.com/FM4/1MV3/JTCRHUAR/FM41MV3JTCRHUAR.LARGE.jpg", "https://cdn.instructables.com/FQY/SVLL/JTCRHUCY/FQYSVLLJTCRHUCY.LARGE.jpg", "https://cdn.instructables.com/FEP/Z53Y/JTCRHUDL/FEPZ53YJTCRHUDL.LARGE.jpg"], "step_title": "Step 10: HX711 Weight Sensor Assemble"}, {"step": 11, "steps_text": "we put all crcuits in it. So you see in pics. And now going to LEGS", "step_imgs": ["https://cdn.instructables.com/FT3/W9SC/JTCRHVI4/FT3W9SCJTCRHVI4.LARGE.jpg", "https://cdn.instructables.com/FKG/1JFE/JTCRHVJA/FKG1JFEJTCRHVJA.LARGE.jpg", "https://cdn.instructables.com/FGB/N7W0/JTCRHVL2/FGBN7W0JTCRHVL2.LARGE.jpg"], "step_title": "Step 11: Last Touches on Main Body"}, {"step": 12, "steps_text": "And now you are in last step about project. Legs. We are using wood and shoes for legs These are easy and simple.", "step_imgs": ["https://cdn.instructables.com/FPQ/2XGM/JTCRHWOS/FPQ2XGMJTCRHWOS.LARGE.jpg", "https://cdn.instructables.com/FPO/GLAG/JTCRHWR6/FPOGLAGJTCRHWR6.LARGE.jpg", "https://cdn.instructables.com/FD2/NNY9/JTCRHWWW/FD2NNY9JTCRHWWW.LARGE.jpg", "https://cdn.instructables.com/F37/T9G6/JTCRHWY7/F37T9G6JTCRHWY7.LARGE.jpg", "https://cdn.instructables.com/FC1/1N4Q/JTCRHX0R/FC11N4QJTCRHX0R.LARGE.jpg", "https://cdn.instructables.com/FON/HC9B/JTCRHX1V/FONHC9BJTCRHX1V.LARGE.jpg", "https://cdn.instructables.com/FJ0/HEUS/JTCRHX7A/FJ0HEUSJTCRHX7A.LARGE.jpg", "https://cdn.instructables.com/FGQ/CJUW/JTCRHXCG/FGQCJUWJTCRHXCG.LARGE.jpg", "https://cdn.instructables.com/FIM/DA93/JTCRHXDK/FIMDA93JTCRHXDK.LARGE.jpg", "https://cdn.instructables.com/FU7/FAGO/JTCRHXDN/FU7FAGOJTCRHXDN.LARGE.jpg"], "step_title": "Step 12: Legs Assemble"}, {"step": 13, "steps_text": "Project is over. Now lets begin show....\nThanks for patience....\nBest Regards....", "step_imgs": ["https://cdn.instructables.com/FZX/A582/JTCRHYJ6/FZXA582JTCRHYJ6.LARGE.jpg", "https://cdn.instructables.com/FW1/O8I2/JTCRHYGH/FW1O8I2JTCRHYGH.LARGE.jpg", "https://cdn.instructables.com/FHR/Y1XY/JTCRHYH9/FHRY1XYJTCRHYH9.LARGE.jpg", "https://cdn.instructables.com/FGD/IA7I/JTCRHYHA/FGDIA7IJTCRHYHA.LARGE.jpg", "https://cdn.instructables.com/F0G/Q2Z7/JTCRHYHE/F0GQ2Z7JTCRHYHE.LARGE.jpg", "https://cdn.instructables.com/FY2/DMIH/JTCRHYHG/FY2DMIHJTCRHYHG.LARGE.jpg", "https://cdn.instructables.com/FIZ/ZDFX/JTCRHYHI/FIZZDFXJTCRHYHI.LARGE.jpg", "https://cdn.instructables.com/FVF/R5LZ/JTCRHYI7/FVFR5LZJTCRHYI7.LARGE.jpg", "https://cdn.instructables.com/F7R/SFNA/JTCRHYI8/F7RSFNAJTCRHYI8.LARGE.jpg", "https://cdn.instructables.com/F0H/P58J/JTCRHYIB/F0HP58JJTCRHYIB.LARGE.jpg", "https://cdn.instructables.com/FG8/PJ2E/JTCRHYJ3/FG8PJ2EJTCRHYJ3.LARGE.jpg", "https://cdn.instructables.com/FWM/VPQ3/JTCRHYJ4/FWMVPQ3JTCRHYJ4.LARGE.jpg", "https://cdn.instructables.com/FLH/M39Z/JTCRHYJ5/FLHM39ZJTCRHYJ5.LARGE.jpg", "https://cdn.instructables.com/F9C/G1GS/JTCRHYJ7/F9CG1GSJTCRHYJ7.LARGE.jpg"], "step_title": "Step 13: Finally"}, {"step": 14, "steps_text": "You can find below \" which model we used \"\nWeighing Pressure Sensor: https://bit.ly/2Huz49Z\nArduino Uno: https://bit.ly/2HwZRlK\nRGB Led Strip: https://bit.ly/2OcXmWx", "step_imgs": ["https://cdn.instructables.com/FKF/1XTJ/JTCRHZ8N/FKF1XTJJTCRHZ8N.LARGE.jpg", "https://cdn.instructables.com/FR3/AOFI/JTCRHZ8O/FR3AOFIJTCRHZ8O.LARGE.jpg"], "step_title": "Step 14: Files"}], "channel": ""}, {"category": "", "description": "For bedroom rockers like me, there is nothing worse than noise complaints. On the other hand, it is a shame to have a 50W amplifier hooked to a load dissipating almost everything in heat. Therefore I tried to build a high gain preamp, based on a famous mesa amplifier using some subminiature tubes for ultra low output.", "title": "An Ultra Low Wattage, High Gain Tube Amplifier", "url": "https://www.instructables.com/id/High-Gain-Subminiature-Amplifier/", "section": "technology", "steps": [{"step": 1, "steps_text": "This instructables will be structures as:\nCircuit overview: The amplifier\nCircuit overview: The SMPS\nParts list\nThermal transfer\nMasking\nEtching\nFinishing\nAdding sockets\nAssembling the boards\nAdjusting the trimpots\nMounting everything inside the enclosure\nFinal result and Soundcheck\nThere are some tools required to build this amplifier:\nHand drill, with different drill bits (in case you want to drill the PCB with a hand drill you need a 0.8-1 mm drill bit, not normally found in kits).\nSoldering iron\nClothes iron\nMultimeter\nSanding files\nAccess to a toner printer\nPlastic box for etching\nAnd some materials\nSanding paper (200, 400, 600, 1200)\nSpray paint (black, clear)\nPCB Coating spray\nFerric Chloride Etching Solution\nSolder", "step_imgs": ["https://cdn.instructables.com/FX8/FR8F/JT4TR8SB/FX8FR8FJT4TR8SB.LARGE.jpg"], "step_title": "Step 1: Overview, Tools and Materials"}, {"step": 2, "steps_text": "Subminiature tubes for batteries\nFor this project I used 5678 and 5672 tubes. They were used in portable battery radios, where filament current was a problem. This tubes only require 50mA for their filaments, making them way more efficient than the 12AX7. This keeps the current consumption low, requiring a smaller power supply. In this case I wanted to power them with a 9v 1A power supply, as commonly used with guitar pedals.\nThe 5678 tube has a mu of roughly 23, which makes it a low gain tube in comparison with the 12AX7, but maybe with some tweaks even this could be enough. High gain amplifiers are known to have a lot of filtering between stages, where almost the majority of the signal is shorted to ground. There may be some air to play with.\nThe 5672, on the other hand, has a mu of 10, but was mostly used as a power tube in hearing aid devices, and was already used in some other subminiature amplifiers (Murder one and Vibratone, from Frequencycentral). It can produce up to 65mW clean...ish. Don't be scared with the low wattage, it's still pretty loud when distorted! The datasheet specifies a 20k output transformer for this tube.\nAs in previous builds, the 22921 reverb transformer will be used.\nBiasing\nOne of the difficulties is to bias these tubes without using different batteries, since they have direct heated cathodes. I did not want to make this more complicated, so I had to use a fixed bias configuration. This, on the other hand, allowed the use of the filaments in series, reducing the total filament consumption. With 6 tubes, each dropping 1.25V, I got pretty close to the 9V of the power supply, it just required a small resistor, which also improved the bias of the first stage. This means the total filament current is only 50mA!\nPretty good for a pedal power supply.\nFor it to work, some stages have a trimpot to adjust the desired bias. The bias is calculated as the difference between the voltage at the negative side of the filament (f-)and the grid of the tube. The trimpot adjusts the DC voltage at the grid of the tube, allowing the different bias configurations and is bypassed by a large capacitor, working as a short to ground for the signal.\nThe third stage, for example, is biased close to the cut-off point of the tube at -1.8V, achieved as the difference between f- (pin 3) at roughly 3.75V and the grid, at 1.95V. This stage emulates the cold clipping stage found in high gain amplifiers, such as the soldano or the dual rectifier. The 12AX7 in a dual rectifier uses a 39k resistor to achieve this. The other stages are almost center biased, at approximately 1.25V.", "step_imgs": ["https://cdn.instructables.com/FXF/ZXGG/JT4TR1WX/FXFZXGGJT4TR1WX.LARGE.jpg"], "step_title": "Step 2: Circuit Overview: the Amplifier"}, {"step": 3, "steps_text": "High voltage supply\nRegarding the plate voltage, these tubes run ideally with plate voltages at 67.5V, but also worked with 90V or 45V batteries. Those batteries were huge! They are also difficult to come by and expensive. That's why I opted for a switched mode power supply (SMPS) instead. With the SMPS I can boost the 9V to 70V and add some massive filtering before the output transformer.\nThe circuit used in this instructables is based on the 555 chip, successfully used in previous builds.", "step_imgs": ["https://cdn.instructables.com/FO6/W5FN/JT4TR2OS/FO6W5FNJT4TR2OS.LARGE.jpg"], "step_title": "Step 3: Circuit Overview: the SMPS"}, {"step": 4, "steps_text": "Here you have a summary of the necessary parts:\nMainboard\nC1 22nF/100V__________R1 1M_______________V1 5678\nC2 2.2nF/50V__________ R2 33k_______________V2 5678\nC3 10uF/100V__________R3 220k______________V3 5678\nC4 47nF/100V__________R4 2.2M______________V4 5678\nC5 22pF/50V___________R5 520k______________V5 5678\nC6 1nF/100V___________R6 470k______________V6 5672\nC7 10uF/100V__________R7 22k_______________TREBBLE 250k Linear 9 mm\nC8 22nF/100V__________R8 100k______________MID 50k Linear 9 mm\nC9 10uF/100V__________R9 220k______________BASS 250k Linear 9 mm\nC10 100nF/100V________R10 470k_____________GAIN 250k Log/Audio 9 mm\nC11 22nF/100V_________R11 80k______________ PRESENCE 100k Linear 9 mm\nC12 470pF/50V_________R12 100k_____________VOLUME 1M Log/Audio 9 mm\nC13 10nF/50V__________R13 15k______________B1 10k trimpot\nC14 22nF/50V__________R14 330k_____________B2 50k trimpot\nC15 680pF/50V_________R15 220k_____________B4 50k trimpot\nC16 2.2nF/50V_________ R16 100k_____________SW1 micro DPDT\nC17 30pF/50V__________R17 80k______________J1 6.35 mm Mono jack\nC18 220uF/16V_________R18 50k______________J2 DC Jack\nC19 220uF/16V_________R19 470k_____________J3 6.35 mm Mono-switched jack\nC20 220uF/16V_________R20 50k______________SW2 SPDT\nC21 220uF/16V_________R21 100k_____________LED 3 mm\nC22 100uF/16V_________R22 22k______________3 mm LED holder\nC23 100uF/16V_________R23 15R/25R\nC24 220uF/16V_________R24 15k\nC25 10uF/100V_________R25 100R\nC26 10uF/100V_________R26 1.8k\nC27 220uF/16V_________R27 1k\nC28 100uF/16V_________R28 10k\nC29 47nF/100V_________R29 2.7k (LED resistor, adjust for brightness)\nC30 22nF/100V_________R30 1.5k\nSpecial attention to the capacitor voltage rating. The high voltage circuit requires 100V capacitors, the signal path after the coupling capacitors can use lower values, in this case I used 50V or 100V since the film capacitors have the same pin spacing. The filaments need to be decoupled, but since the highest voltage on the filaments is 9V a 16V eletrolytic capacitor is on the safe side and way smaller than a 100V one. Resistors can be of the 1/4W type.\n555 SMPS\nC1 330uF/16V__________R1 56k______________IC1 LM555N\nC2 2.2nF/50V__________ R2 10k______________L1 100uH/3A\nC3 100pF/50V__________R3 1k_______________Q1 IRF644\nC4 4.7uF/250V_________ R4 470R____________ VR1 1k\nR5 150k_______________D1 UF4004 or ES2G (ultra fast)\nR9 2.2k\nAttention to the switching diode! It must be of the ultra fast type, otherwise it won't work. For the SMPS low ESR capacitors are also desired. In case a normal 4.7uF/250V capacitor is used an additional ceramic capacitor of 100nF in parallel helps to bypass the high frequency switching.\nThese are the easier parts to find and can be obtained from any eletronic parts store. Now, the tricky parts are:\nOT 3.5W, 22k:8ohm transformer (022921 or 125A25B) Banzai, Tubesandmore\nL1 100uH/3A inductor Ebay, just don't buy the toroidal shaped. You also find it at Mouser/Digikey/Farnell.\nDon't forget to buy:\nA copper clad board, 10x10 mm will do for both boards\n2x 40 pin sip sockets for the tubes\nA 1590B enclosure\nSome 3 mm screws and nuts\nRubber feet\n5 mm rubber wire grommets\nSix 10 mm knobs", "step_imgs": [], "step_title": "Step 4: Parts List"}, {"step": 5, "steps_text": "To prepare the PCB and the enclosure I use a process based on toner transfer. The toner protects the surface from the etchant, and as a result after the etching bath we have the PCB with the copper tracks or a beautiful enclosure. The process of transfering the toner and preparing for etching consists of:\nPrint the layout/image with a toner printer using glossy paper.\nSand the surface of the enclosure and of the copper board using sanding paper with grit 200 to 400.\nFix the printed image to the PCB/enclosure using tape.\nApply heat and pressure with the clothes iron for about 10 minutes. Make some extra movement with the tip of the iron at the edges, those are the tricky places where the toner won't stick.\nWhen the paper is looking yellowish trow it in a plastic container filled with water to cool it down, and let the water soak into the paper.\nRemove the paper carefully. It's better when it comes off in layers, instead of removing everything in a single attempt.\nThe drill template helps to identify the positioning of the components, you just need to add your own art, and you're good to go.", "step_imgs": ["https://cdn.instructables.com/F2M/NOZF/JT4TR34V/F2MNOZFJT4TR34V.LARGE.jpg", "https://cdn.instructables.com/FSC/TVQE/JT4TR38X/FSCTVQEJT4TR38X.LARGE.jpg", "https://cdn.instructables.com/FUK/JBN6/JT4TR3EL/FUKJBN6JT4TR3EL.LARGE.jpg", "https://cdn.instructables.com/FP6/MOA7/JT4TR3HA/FP6MOA7JT4TR3HA.LARGE.jpg", "https://cdn.instructables.com/FI9/WLKE/JT4TR3J1/FI9WLKEJT4TR3J1.LARGE.jpg"], "step_title": "Step 5: Thermal Transfer"}, {"step": 6, "steps_text": "For the enclosure, mask larger areas with nail polish. Since the reaction with aluminum is much stronger than with copper, there could be some pitting in larger areas.\nGiving an extra protection guarantees that there will be no marks to ruin the enclosure.", "step_imgs": ["https://cdn.instructables.com/FU5/WREP/JT4TR3KU/FU5WREPJT4TR3KU.LARGE.jpg", "https://cdn.instructables.com/FFD/H8P8/JT4TR3N7/FFDH8P8JT4TR3N7.LARGE.jpg"], "step_title": "Step 6: Masking"}, {"step": 7, "steps_text": "For the etching process I like to use a plastic container with etchant and one with water to rinse between steps.\nFirst, some safety tips:\nuse rubber gloves to protect your hands\nwork on a non-metallic surface\nUse a well ventilated room and avoid breathing the resulting fumes\nUse some paper to protect your workbench from possible spills\nHere I only show the etching of the enclosure, but the PCB was etched in the same solution. The only difference is that for the PCB I just waited for about an hour until all the unprotected copper was gone. With the aluminum there must be some extra care, since we only want to etch the outside of the box.\nFor the enclosure I shake the box in the etching mixture for about 30 seconds, until it gets warm due to the reaction an rinse it in the water. I repeat this step another 20 times, or until the etch is about 0.5 mm deep.\nWhen the etch is deep enough wash the enclosure with water and soap to rinse off all the remaining etchant. With the box cleaned sand the toner and the nail polish off. For the nail polish you can save some sanding paper by using acetone, but remember to keep the room well ventilated!", "step_imgs": ["https://cdn.instructables.com/FN9/YI3P/JT4TR8CE/FN9YI3PJT4TR8CE.LARGE.jpg", "https://cdn.instructables.com/F4S/M9DW/JT4TR8CA/F4SM9DWJT4TR8CA.LARGE.jpg", "https://cdn.instructables.com/F8G/0MFA/JTCSF75J/F8G0MFAJTCSF75J.LARGE.jpg", "https://cdn.instructables.com/FJJ/7RP2/JTCSF8FJ/FJJ7RP2JTCSF8FJ.LARGE.jpg", "https://cdn.instructables.com/FU3/W9OS/JT4TR8CF/FU3W9OSJT4TR8CF.LARGE.jpg"], "step_title": "Step 7: Etching"}, {"step": 8, "steps_text": "In this step I used the 400 grit sanding paper to achieve a clean surface, like in the third picture. This is clean enough for the drilling step. I drilled all the different sized holes, and used the files to make the holes for the tubes sockets. The PCB must be drilled too, I a 0.8 mm drill bit for the components and 1-1.4 mm for the wire holes. In this build I also used a 1.3 mm drill for the tube sockets.\nWith the drilling and filing done I give the box a black coat of spray paint and let it dry for 24h. It will give a better constrast between the etch and the enclosure. Obviously, the next step is to sand it off. This time I go from 400 to the finest grit. I change the sandng paper when one grit removed the lines of the previous one. Sanding in different dirrections makes it easier to identify when all the previous marks are gone. With the enclosure shining I apply 3 layers of the clear coat and wait until it dries for another 24h. The PCB can be protected from corrosion by using a protective coating. As you can see in the last two figures I like to have a dark green coating. This coating requires longer times to dry. I waited 5 days to avoid having finger prints on the board while soldering the components.", "step_imgs": ["https://cdn.instructables.com/FLI/PRLB/JT4TR8CJ/FLIPRLBJT4TR8CJ.LARGE.jpg", "https://cdn.instructables.com/FRV/QM6V/JT4TR8CU/FRVQM6VJT4TR8CU.LARGE.jpg", "https://cdn.instructables.com/FH7/7183/JT4TR8D0/FH77183JT4TR8D0.LARGE.jpg", "https://cdn.instructables.com/FU6/3VSF/JT4TR8KV/FU63VSFJT4TR8KV.LARGE.jpg", "https://cdn.instructables.com/F9L/KJX7/JT4TR8KZ/F9LKJX7JT4TR8KZ.LARGE.jpg"], "step_title": "Step 8: Finishing"}, {"step": 9, "steps_text": "Soldering the Sockets\nAccording to the layout, the tubes are mounted at the copper side of the board. This way the board can come closer to the enclosure and profit from some extra shielding against nasty high frequency EMI coming from the SMPS. But using the copper side of the board to solder components has some disadvantages, such as the copper becoming loose from the board. To avoid this, instead of soldering the tube sockets, I made larger holes where the sockets could be pressed in. The pressure of a slighlty smaller hole and some solder on both sides should solve the problem. For this I used the machined style pin sockets, without the plastic structure, forced the metal pin in the hole and soldered on both sides (on the components side it looks like a blob of solder, but it helps to keep the pin stuck), as shown in the first 3 pictures. The 4th and 5th pictures show all the sockets and jumpers installed.\nSoldering another set of sockets, this time with the plastic structure, to the tubes improves the connection to the board and makes it more stable. The original pins of the tubes are very thin, which can lead to some bad contact or even falling off the sockets. By soldering them to sockets we solve this problem, since now they have a tight fit. I think they should have come with proper pins on the first place, like the larger tubes!", "step_imgs": ["https://cdn.instructables.com/F2Y/9TCT/JTCSF91F/F2Y9TCTJTCSF91F.LARGE.jpg", "https://cdn.instructables.com/FOJ/9BX3/JTCSF9LI/FOJ9BX3JTCSF9LI.LARGE.jpg", "https://cdn.instructables.com/FSP/N2B9/JTCSF9XA/FSPN2B9JTCSF9XA.LARGE.jpg", "https://cdn.instructables.com/FBX/VMPE/JTCSFAGD/FBXVMPEJTCSFAGD.LARGE.jpg", "https://cdn.instructables.com/FNJ/PK36/JTCSFA3H/FNJPK36JTCSFA3H.LARGE.jpg", "https://cdn.instructables.com/FPW/0Z8K/JTCSFQHG/FPW0Z8KJTCSFQHG.LARGE.jpg"], "step_title": "Step 9: Adding Sockets"}, {"step": 10, "steps_text": "To solder the components I started with the resistors, and moved to the larger parts. The electrolytics are soldered at the end, since they are the highest components on the board.\nWith the board ready it's time to add the wires. There are a lot of external connections here, from the tonestack to the high voltage and filament cables. For the signal wires I used shielded cable, shielding the ground mesh at the panel side, closer to the input.\nCritical wires are around the first stage, coming from the input jack, and going to the gain potentiometer. Before we can build everything inside the box we need to test it, so that we still have access to the copper side of the board for some debugging, if it's necessary.\nFor the high voltage filtering I added another RC filter in a smaller board, mounted perpendicularly to the main board, as seen in the picture. This way the ground, high voltage and transformer connections are easier to acccess with the board mounted to the enclosure and can be soldered afterwards.\nBuilding the tonestack\nAlthough I was going to test the board outside the enclosure I already built the tonestack in the box. This way all the potentiometers are fixed and properly grounded. Testing the circuit with ungrounded potentiometers (at least the outside shield) can result in horrible noises. Again, for longer connections I used a shielded cable, grounded near to the input jack.\nUnfortunately in this build the potentiometers are really close together, making it difficult to use a board with the components. In this case I used a point-to-point approach for this part of the circuit. Another problem was that I only had a PCB style 9 mm 50K potentiometer, so that I had to anchor it to the neighbouring potentiometers (panel mount style).\nNow is also a good time to install the on/off switch and the LED with the 2.7k resistor.\nAs a result of two rows of potentiometers I had to file the inside wall of the lid, as shown in the picture, so that the box would close.", "step_imgs": ["https://cdn.instructables.com/F3A/Q817/JTCSFHOR/F3AQ817JTCSFHOR.LARGE.jpg", "https://cdn.instructables.com/FQV/E0Y7/JTCSFHOL/FQVE0Y7JTCSFHOL.LARGE.jpg", "https://cdn.instructables.com/FRH/HFBV/JT4TR8PH/FRHHFBVJT4TR8PH.LARGE.jpg", "https://cdn.instructables.com/F33/HAGO/JT4TR8PG/F33HAGOJT4TR8PG.LARGE.jpg", "https://cdn.instructables.com/FO7/3QEB/JT4TR8PI/FO73QEBJT4TR8PI.LARGE.jpg", "https://cdn.instructables.com/FZE/3SYF/JT4TR8PJ/FZE3SYFJT4TR8PJ.LARGE.jpg", "https://cdn.instructables.com/FJH/S77C/JT4TR8PK/FJHS77CJT4TR8PK.LARGE.jpg"], "step_title": "Step 10: Assembling the Boards"}, {"step": 11, "steps_text": "Adjusting the 555 SMPS\nIf the SMPS is not working there is no high voltage and the circuit won't work correctly. To test the SMPS just connect it to the 9V power jack and check the voltage reading at the output. It should be around 70V, otherwise it needs to be adjusted with the trimpot. If the output voltage is 9V there is a problem with the board. Check for a bad mosfet or 555. If the trimpot does not work verify the feedback circuit around the smaller transistor. An advantage of this SMPS is the low count of parts, so it is a little easier to identify any mistakes or faulty components.\nAdjusting the mainboard trimpots\nDuring the testing stage is a good time to adjust the bias with the trimpots. It can be done later, but if the tone is to dark or to bright it is easier to make changes now.\nThe first trimpot controls the bias of the second, third and output stages and is therefore the most important. I adjusted this trimpot by measuring the bias of the third stage, the cold clipper. If the bias is too high the stage will be completely in cut-off, giving a raw, cold, spongy distortion. If it is biased hotter the output stage will be too hot, adding some power stage distortion, and running the tube closer to the max. plate dissipation. In this case, the lower side of the master volume should be connected to the negative side of the first stage, so that the bias is still around 5.9V. In my case it sounded better when the output stage was running at 5.7V instead of 6.4V.\nJust measure the bias at the third stage (middle tube in the back row) and verify that it is around 1.95V The second trimpot just needs to be adjusted to taste, or nearly center biased at 1.2V (measured between pins 3 and 4). Similarly the third trimpot is also adjusted to approx. 1V.\nThe voltage readings at the tube's pins 1(plate) to 5 (filament) are:\nV1: <8.8V><41.6V><1.21V><0.00V><2.50V>\nV2:<27.9V><27.9V><2.50V><1.94V><3.71V>\nV3:<42.4V><42.4V><3.70V><1.94V><4.90V>\nV4:<36.2V><36.2V><4.90V><3.90V><6.10V>\nV5:<41.4V><41.4V><6.20V><5.10V><7.60V>\nV6:<64.6V><63.7V><8.80V><1.94V><7.60V>\nNote that the filaments in the 5672 are backwards than in the 5678, so that the tubes can't be swapped. Another important aspect to consider is the tube manufacturer. I found out that the tung-sol tubes sounded better in the first positions, than the raytheon tubes. Checking it with an oscilloscope it was visible that the tung-sol tubes had more gain than the raytheon tubes I had.\nNow is also the time to test the circuit and see how it sounds, if it is too bass heavy I suggest changing the 47nF capacitor between second and third stage to 10nF, that will filter some bass out from the initial stages and improve the sound. If it got too thin, just increase this capacitor to 22nF and so on.", "step_imgs": ["https://cdn.instructables.com/FVH/4N20/JT4TR9A5/FVH4N20JT4TR9A5.LARGE.jpg", "https://cdn.instructables.com/FO7/3QEB/JT4TR8PI/FO73QEBJT4TR8PI.LARGE.jpg"], "step_title": "Step 11: Adjusting the Trimpots"}, {"step": 12, "steps_text": "I started adding the screws for the mainboard. On the inside I added the rubber wire grommets, to give some clearance between board and enclosure and also to dampen some vibration. By running the first stage in pentode mode this could help if the tube gets microphonic. Then I added the board and screwed it down with the nuts, connected the tonestack, inserted the input jack and soldered the remaining wires.\nWith the mainboard in position I added the output transformer, adjusted the lenght of the wires and inserted the output jack and power jack.\nAt this point I saw that my SMPS board would not fit in the desired position (at the lateral wall, with the components perpendicular to this wall) because I added the power jack on the wrong side of the output jack... To fix this I sawed the SMPS board at the input side, removing the inductor and capacitor, and soldered the piece back to the board rotated by 90 degrees, as shown in the picture. I tested the SMPS again to see if it still was working, and finished by connecting the high voltage to the main board, through the RC filter board.", "step_imgs": ["https://cdn.instructables.com/F3B/2PNV/JT4TR8PN/F3B2PNVJT4TR8PN.LARGE.jpg", "https://cdn.instructables.com/FHP/1B8H/JT4TR8PM/FHP1B8HJT4TR8PM.LARGE.jpg", "https://cdn.instructables.com/FLV/0LEW/JT4TR8PL/FLV0LEWJT4TR8PL.LARGE.jpg", "https://cdn.instructables.com/FBO/0EAT/JT4TR8PP/FBO0EATJT4TR8PP.LARGE.jpg", "https://cdn.instructables.com/FC8/Z4F2/JT4TR8PO/FC8Z4F2JT4TR8PO.LARGE.jpg"], "step_title": "Step 12: Mounting Everything Inside the Enclosure"}, {"step": 13, "steps_text": "Now just plug the amplifier to your favorite 8 ohms cabinet (in my case a 1x10\" with a celestion greenback) and use your pedal power supply to play at non-deafening levels!\nBy the way, if you like the sound of your amp feedbacking when you stop playing at the end of a sound, wait for the middle part of the video, it feedbacks quite easily when sitting in front of the cab.", "step_imgs": ["https://cdn.instructables.com/FQQ/SGWF/JT4TR8QN/FQQSGWFJT4TR8QN.LARGE.jpg"], "step_title": "Step 13: Soundcheck"}], "channel": ""}, {"category": "", "description": "I loved that Instructables was running a Contest about creating Tools. And this frankly nudged me out of procrastination to finish writing this up, as I think this has a nice twist on who we make tools for...\nAlthough I have made many tools (some technically 'unique' - e.g. Rabbet Tool (LINK) - which helped me and a team of makers put a superman doll into space for under $500), one of the most memorable has been creating a tool for someone with a very unique need...\nKyle was born limited use of his left hand, after a complication while in utero. As long as he can remember, he's always wanted to be a hairdresser, and although he has made valiant efforts to create his own tools to hold hair (in tension to be cut), they all have fallen short of the ideal.\nAs part of BBC Two's Big Life Fix, I was tasked with trying to help Kyle realise his dream career. This Instructables is as much about how to approach a challenge such as this, as the final tool itself. I hope that it is a useful guide and an inspiration not to underestimate the determination and courage of people like Kyle, and the power of communities who are interested in designing things that make a difference to people's lives.\nIf you'd like to do something similar, check out universities, or sign-up at Remap.org.uk", "title": "Creating a Unique Hairdressing Tool", "url": "https://www.instructables.com/id/Creating-a-Unique-Hairdressing-Tool/", "section": "technology", "steps": [{"step": 1, "steps_text": "Although this picture showing the evolution of the design, is abridged - the process remains clear - it was very much about iterating after the initial breakthrough (see 'Eureka!').\nHowever, a very broad range of ideas were considered, both in terms of the mechanism (should it be motorised?), and what the input should be (I experimented with MYO bands (electromyography) to see if I could take electrical signals from muscles elsewhere in the arm to act as the 'control signal to actuate the comb - but this seemed (in hindsight) over-complex, and I later realised not practicle for sterilisation, and furthermore - more prone to maintence issues).\nThe learning was that sometimes you need to walk into some unlikely/stupid/over-complex scenarios to fully understand and evaluate the suitability of this.\nOne interesting, and very personal aspect of this journey was that this tool needed not only to function, but to feel befitting of Kyle's trade - both his environment and to be convincing to clientele. So it was not enough to just make a contraption which might function but would look unconvincing in a Salon.\nSafe to say, this Instructable does not describe all the myriad decisions both Kyle and I had to make, which will hopefully be useful to learn from should you do something similar / for someone else. Indeed, everything from 'tool vs hand' to 'robotic vs flesh' were complex and unfamiliar discussions to both of us, and require time to give each other space to make the right decision together.", "step_imgs": ["https://cdn.instructables.com/F3B/LGP8/JT4TMUN2/F3BLGP8JT4TMUN2.LARGE.jpg", "https://cdn.instructables.com/F1O/B422/JT4TMZ0T/F1OB422JT4TMZ0T.LARGE.jpg", "https://cdn.instructables.com/FGS/B7CO/JREUAFB3/FGSB7COJREUAFB3.LARGE.jpg", "https://cdn.instructables.com/FSB/TUYM/JT4TN1DB/FSBTUYMJT4TN1DB.LARGE.jpg", "https://cdn.instructables.com/FJ0/NQQN/JG74SE95/FJ0NQQNJG74SE95.LARGE.jpg", "https://cdn.instructables.com/F8T/MPJX/JG6TAGYM/F8TMPJXJG6TAGYM.LARGE.jpg"], "step_title": "Step 1: Design, Build, Test. // Repeat..."}, {"step": 2, "steps_text": "Kyle had previously used a sports wristband to hold a comb in place. He'd remove this band, and then attach the 'clip', which has a modified wrist-strap with a spring-loaded clip attached.\nThe problem was that Kyle had to apply a lot of force to actuate the clip, which was also not 'subtle' (precise enough) enough to grasp all the hair. [One can really appreciate how specialised the human hand and a craft such as hairdressing is in times like these!].\nA final issue was not obvious as first, but made total sense in hindsight: The clip was attached to his wrist, not his hand/fingers. This meant that he was having to move his whole arm, when really his hand was all that really needed to move, to orientate for the task at hand.", "step_imgs": ["https://cdn.instructables.com/F0L/Y0KU/JG6TAGOF/F0LY0KUJG6TAGOF.LARGE.jpg", "https://cdn.instructables.com/FDW/JTCV/JG6TAGNU/FDWJTCVJG6TAGNU.LARGE.jpg", "https://cdn.instructables.com/FN1/X05B/JG6TAGNX/FN1X05BJG6TAGNX.LARGE.jpg", "https://cdn.instructables.com/F0Q/CF35/JG6TAGO1/F0QCF35JG6TAGO1.LARGE.jpg", "https://cdn.instructables.com/FRM/HROR/JG6TAGO5/FRMHRORJG6TAGO5.LARGE.jpg"], "step_title": "Step 2: Previous Attempts: Kyle's Hairdressing Prosthetic"}, {"step": 3, "steps_text": "As with so much in design - you have to dive in and be a part of the process! I had a crash-course in hairdressing from Yvonne, Kyle's wonderful tutor at Marvel Hairdressing Academy, Swindon.\nAs you can see from my frantically scribbled notes, there were some 'core' skills needed to get a basic haircut done: The hair needs to be parted, and then layered in a certain way to ensure the cut is even and stylish.\nWhat also became clear was that Kyle couldn't simply use a fixed comb and electric clippers. As although the 'straight-cut' for most chaps is fine, most women's hair is defined by a quality 'feather-cut', which is all attributed to the skill of the use of the scissors.\nThis meant that Kyle had to only use his right hand for cutting with scissors, but his left hand needed to comb and hold in place to be cut. As shown in the picture, Kyle's fingers were not long enough to manage large enough quantities of hair, or flexible/dextrous enough to control it.\nEven his current comb-modification only worked when the hair was 'down' - and he couldn't life it up, so was unable to do a significant portion of the styling needed for a good haircut.\nA tool was essential...", "step_imgs": ["https://cdn.instructables.com/FYU/1D5V/JG6TAGPG/FYU1D5VJG6TAGPG.LARGE.jpg", "https://cdn.instructables.com/FD7/TLO3/JG6TAGPR/FD7TLO3JG6TAGPR.LARGE.jpg", "https://cdn.instructables.com/FFI/EQKD/JG6TAGPX/FFIEQKDJG6TAGPX.LARGE.jpg", "https://cdn.instructables.com/FED/3HHS/JREUAEGC/FED3HHSJREUAEGC.LARGE.jpg", "https://cdn.instructables.com/FT2/P366/JREUADUU/FT2P366JREUADUU.LARGE.jpg", "https://cdn.instructables.com/F70/VVB7/JREUADVW/F70VVB7JREUADVW.LARGE.jpg", "https://cdn.instructables.com/FQO/OFUX/JREUAEAF/FQOOFUXJREUAEAF.LARGE.jpg", "https://cdn.instructables.com/FYD/G0FM/JREUAEF9/FYDG0FMJREUAEF9.LARGE.jpg"], "step_title": "Step 3: Gaining Perspective on Kyle and the Goal"}, {"step": 4, "steps_text": "It was quite a humbling, and at times, moving experience - to see these artefacts on display at Strathclyde University's Biomedical Engineering Dept. which included Prosthetic and Orthotic specialities. One can see the labour of love and care that must have gone into these devices to help people who had few options in life.\nOne can only imagine the emotional journey one would have to go through to be at once liberated by a device, which no doubt was an improvement, but also may still have disappointing limitations.\nThe 'poundland hand' was included as a advisory note from the specialists - who stressed that although this was primitive and seemed laughable in a 'medical history cabinet'... as a cost-to-functionality ratio, it was very high performing - and students (most certainly including me!) were often encourage to 'keep it simple' wherever possible.\nLooking back, it was fair to suppose that this was a key moment in my journey of working with Kyle, as it underscored the importance that although fancy tech is seductive, it add risk of breakdown and maintenance, and on one of the most effective prosthetics was the 'hook' - operated by a pull cord - as this was totally intuitive, and in tune with the body's natural approach to interacting with objects.\nI realised that my task was not to replicate the extraordinary nuances and power of the human hand - but rather to create a tool which would work in harmony with Kyle's capabilities. I am indebted to Arjan Buis & Sarah Day for their counsel and open-mindeness to the whole 'design for telly' process.", "step_imgs": ["https://cdn.instructables.com/F00/ZQEG/JREUAFIP/F00ZQEGJREUAFIP.LARGE.jpg", "https://cdn.instructables.com/FIY/8JMM/JREUAH84/FIY8JMMJREUAH84.LARGE.jpg", "https://cdn.instructables.com/FDD/2VZ9/JREUAGXP/FDD2VZ9JREUAGXP.LARGE.jpg", "https://cdn.instructables.com/FLV/U3OR/JREUAGXW/FLVU3ORJREUAGXW.LARGE.jpg", "https://cdn.instructables.com/FZF/YZVW/JG6TAGTE/FZFYZVWJG6TAGTE.LARGE.jpg", "https://cdn.instructables.com/FE3/UMSI/JREUAH2U/FE3UMSIJREUAH2U.LARGE.jpg", "https://cdn.instructables.com/F08/ZSQ9/JREUAFYK/F08ZSQ9JREUAFYK.LARGE.jpg", "https://cdn.instructables.com/FQ6/FBWA/JREUAG99/FQ6FBWAJREUAG99.LARGE.jpg", "https://cdn.instructables.com/FF6/JHQK/JREUAGHM/FF6JHQKJREUAGHM.LARGE.jpg", "https://cdn.instructables.com/FRG/8W11/JREUAGKW/FRG8W11JREUAGKW.LARGE.jpg", "https://cdn.instructables.com/FOA/6ENC/JG6TAGUK/FOA6ENCJG6TAGUK.LARGE.jpg", "https://cdn.instructables.com/FEL/ZPUG/JREUAGSR/FELZPUGJREUAGSR.LARGE.jpg", "https://cdn.instructables.com/FJ7/C6X5/JREUAGX1/FJ7C6X5JREUAGX1.LARGE.jpg", "https://cdn.instructables.com/F8G/HZBX/JREUAGWB/F8GHZBXJREUAGWB.LARGE.jpg", "https://cdn.instructables.com/FHA/F0SL/JREUAGLN/FHAF0SLJREUAGLN.LARGE.jpg", "https://cdn.instructables.com/FKE/M6NG/JREUAGKU/FKEM6NGJREUAGKU.LARGE.jpg", "https://cdn.instructables.com/FZS/JRZT/JREUAGJ5/FZSJRZTJREUAGJ5.LARGE.jpg", "https://cdn.instructables.com/FFD/Q134/JREUAGI4/FFDQ134JREUAGI4.LARGE.jpg", "https://cdn.instructables.com/FHC/FTG4/JREUAGGL/FHCFTG4JREUAGGL.LARGE.jpg"], "step_title": "Step 4: Learning From History"}, {"step": 5, "steps_text": "The moment of inspiration struck when using my electric hair 'clippers'!\nI realised that the reciprocating motion of the twin blades, when low on battery used to snag my hair, which was uncomfortable as it pulled - but did not cut - my hair!\nThis painful memory, made me realise that if these twin blades were dull, and moved while hair as passing through, they would 'grip', rather than cut hair. Likewise, when moved again, the hair would flow through again - like a comb.\nThis tiny insight* allowed me to imagine what it might look like - when scaled up with two normal hair combs! I immediately went to a pound-store and tried to fix two combs together in such a way that they could be 'locked' and 'unlocked' while hair passed through their teeth...\n*(Although a little 'TV' recreation shown here, this insight was the genuine inspiration!)", "step_imgs": ["https://cdn.instructables.com/F8A/VINY/JT4TN1C3/F8AVINYJT4TN1C3.LARGE.jpg", "https://cdn.instructables.com/F2H/E16P/JT4TN1AW/F2HE16PJT4TN1AW.LARGE.jpg", "https://cdn.instructables.com/F2T/RST1/JT4TN1AB/F2TRST1JT4TN1AB.LARGE.jpg", "https://cdn.instructables.com/FOT/2XW4/JT4TN144/FOT2XW4JT4TN144.LARGE.jpg"], "step_title": "Step 5: Eureka!"}, {"step": 6, "steps_text": "Safe to say, I'm not a prosthetics expert - so I spoke to Arjan and Sarah again to 'sense check' the design. Fortunately, they felt the design was not just functionally sound, but also addressed some of their points about not being overly complex (risking breakdown) and also that it's simplicity might mean it is more likely to be acceptable for Kyle.\nArguably a longer discussion than afforded here on Instructbales, but we also discussed the emotional and ethical impact of this device on Kyle as a person. Sometimes these nuanced considerations are overlooked at the early stages of the design, when enthusiasm is high (or low!) and so it was a good time to have some calm reflection and constructive critique. It helped me move the design forward considerably, and with more conviction that this was not about 'fancy tech' but efficient design....after all, Scissors themselves are hard to beat for their simplicity!\nAs shown, Arjan drawing on his hand the best placement of the proposed 'socket'. I loved the down-to-earth nature of both specialists :o)", "step_imgs": ["https://cdn.instructables.com/F9I/JUH6/JG6TAH6W/F9IJUH6JG6TAH6W.LARGE.jpg", "https://cdn.instructables.com/FZR/4FVZ/JREUAHI7/FZR4FVZJREUAHI7.LARGE.jpg", "https://cdn.instructables.com/FLZ/HXIW/JREUAHT2/FLZHXIWJREUAHT2.LARGE.jpg", "https://cdn.instructables.com/FDV/L39R/JREUAIFC/FDVL39RJREUAIFC.LARGE.jpg", "https://cdn.instructables.com/FH6/BCC1/JREUAHY7/FH6BCC1JREUAHY7.LARGE.jpg"], "step_title": "Step 6: Connecting Things Safely"}, {"step": 7, "steps_text": "Showing the end result first, this was a long process of starting with many discussions of how best to attach the comb to Kyle in a practical way.\nMuch of the exploration was taking Kyle from his previous prototypes (which were bound at the wrist) and re-thinking how to do this when able to move freely - from his hand. It sounds straightforward, but was a significant stage to get right with myriad options to select from.", "step_imgs": ["https://cdn.instructables.com/F6T/GUI9/JREUAIVF/F6TGUI9JREUAIVF.LARGE.jpg", "https://cdn.instructables.com/FE2/66GN/JREUAIT9/FE266GNJREUAIT9.LARGE.jpg", "https://cdn.instructables.com/FBI/9KPX/JREUAIZ8/FBI9KPXJREUAIZ8.LARGE.jpg", "https://cdn.instructables.com/FPK/8H52/JREUAIWF/FPK8H52JREUAIWF.LARGE.jpg", "https://cdn.instructables.com/FB8/Q59H/JREUAIVC/FB8Q59HJREUAIVC.LARGE.jpg", "https://cdn.instructables.com/FXH/JMC8/JREUAJ0E/FXHJMC8JREUAJ0E.LARGE.jpg", "https://cdn.instructables.com/F4K/OV1Y/JREUAIRP/F4KOV1YJREUAIRP.LARGE.jpg", "https://cdn.instructables.com/FW5/U6H5/JREUAISP/FW5U6H5JREUAISP.LARGE.jpg", "https://cdn.instructables.com/FT4/AKB9/JREUAIRO/FT4AKB9JREUAIRO.LARGE.jpg"], "step_title": "Step 7: Fibreglass Socket"}, {"step": 8, "steps_text": "This shows the early design of creating the 'dovetail' running system for the two combs to pass past each other (and un/lock the hair, as desired).\nIt was clear that the combs needed a convincing 'click' into place, and to apply the lock when Kyle was not moving the combs past one another with his other hand. This mechanism was initially borrowed from a toggle switch, and later evolved to precision spring loaded grub-screws.", "step_imgs": ["https://cdn.instructables.com/FQM/TSYL/JG74SHS3/FQMTSYLJG74SHS3.LARGE.jpg", "https://cdn.instructables.com/FFH/Q6EF/JG74SEZP/FFHQ6EFJG74SEZP.LARGE.jpg", "https://cdn.instructables.com/FLZ/VM6M/JG74SFB0/FLZVM6MJG74SFB0.LARGE.jpg", "https://cdn.instructables.com/FAR/674X/JTCRJ12G/FAR674XJTCRJ12G.LARGE.jpg"], "step_title": "Step 8: Version 2.0"}, {"step": 9, "steps_text": "As you can see, this video was not only testing the mechanism, but also the position of the comb on his prosthetic socket. I watched and re-watched this clip to study how best to combine these and allow easy exchange with other future tools...", "step_imgs": ["https://cdn.instructables.com/F8J/DA42/JG74SFUR/F8JDA42JG74SFUR.LARGE.jpg", "https://cdn.instructables.com/FXO/K04I/JG74SGMD/FXOK04IJG74SGMD.LARGE.jpg", "https://cdn.instructables.com/FC7/7GJU/JG74SGIT/FC77GJUJG74SGIT.LARGE.jpg", "https://cdn.instructables.com/FFO/D9HJ/JG74SGPT/FFOD9HJJG74SGPT.LARGE.jpg"], "step_title": "Step 9: Click-Lock Test"}, {"step": 10, "steps_text": "These were casts taken in the Salon.\nThese preliminary casts (done in Alginate casting jelly) allowed Kyle to move his hands in 4 different poses, so I could understand the 'max' and 'min' ranges of movement.\nA big issue was (as mentioned earlier) that Kyle was not able to actuate any fine control, or particularly forceful control, so this ultimately informed the need to allow his other hand to take the lead on this.\nMany hours were spent inspecting at these and wondering how to gain an insight - enough for the ideas to come. They didn't make the edit on TV, but arguably were one of the most valuable things I did in the research phase (other than getting to know Kyle better, of course!).", "step_imgs": ["https://cdn.instructables.com/FF1/AQLH/JG74SE4W/FF1AQLHJG74SE4W.LARGE.jpg", "https://cdn.instructables.com/F4M/HJ19/JREUAFAH/F4MHJ19JREUAFAH.LARGE.jpg", "https://cdn.instructables.com/F4G/V1FH/JT91LSKR/F4GV1FHJT91LSKR.LARGE.jpg", "https://cdn.instructables.com/FB5/OJMW/JG74SJUU/FB5OJMWJG74SJUU.LARGE.jpg"], "step_title": "Step 10: Casting - Freedom of Movement"}, {"step": 11, "steps_text": "The Casts of the hand were scanned using a 3D Scanner at a Imperial College London. These are often available at Hackspaces and Makerspaces, and although quality is not mm precise - I needed a 'close enough' model to iterate on. Like clothes - the final fitting would catch any slight issues.\nI evaluated the best place to position the tool, with the minimum of connection points, and complexity to change/repair if needed.\nAs shown in the final picture - much of the reality of 'Design' is jumping between CAD and a 3D print to test out an idea... It's not great TV, but is critical to refining the design. This stage probably had over 20 iterations to perfect the mechanism.", "step_imgs": ["https://cdn.instructables.com/F6V/C20K/JG74SICQ/F6VC20KJG74SICQ.LARGE.jpg", "https://cdn.instructables.com/FLE/RYLL/JG74SIQV/FLERYLLJG74SIQV.LARGE.jpg", "https://cdn.instructables.com/F8U/LDT0/JREUAKSD/F8ULDT0JREUAKSD.LARGE.jpg", "https://cdn.instructables.com/F2J/XJCY/JREUAL3D/F2JXJCYJREUAL3D.LARGE.jpg", "https://cdn.instructables.com/F3C/XN0J/JG74SII2/F3CXN0JJG74SII2.LARGE.jpg", "https://cdn.instructables.com/FWC/JIBB/JREUAM1Z/FWCJIBBJREUAM1Z.LARGE.jpg"], "step_title": "Step 11: 3D Scan --> CAD Modelling"}, {"step": 12, "steps_text": "This was a great stage of the project - Kyle was now cutting hair, with the prototype working great!\nIt's hard to describe the feeling to have arrived at a 'click-lock-cut-unlock-comb' loop of work, that was so fast, that even without any practice, Kyle was stuck into the task!\nDare I say it, I think the producer was a little worried it all looked too easy, but the truth was that it was months of exploration that lead to a 'Eureka' moment. Often in design, I find that one has a 'gradually - then suddenly' progression with idea, but I think the 'gestational period' of thought can't be underestimated.", "step_imgs": ["https://cdn.instructables.com/FW8/SMYR/JG74SHHU/FW8SMYRJG74SHHU.LARGE.jpg", "https://cdn.instructables.com/FSJ/KI0F/JG74SHCM/FSJKI0FJG74SHCM.LARGE.jpg", "https://cdn.instructables.com/FEH/GRF8/JG74SH7C/FEHGRF8JG74SH7C.LARGE.jpg", "https://cdn.instructables.com/FZ7/SL2L/JG74SHLC/FZ7SL2LJG74SHLC.LARGE.jpg"], "step_title": "Step 12: Refining the Design"}, {"step": 13, "steps_text": "This was probably the most nerve-wracking part of the build. All other things can be re-build, or purchased again...but this was drilling into the only mould/cast we had created for Kyle in Fibreglass.\nI also started to begin to develop the system for interchanging the tools easily, as although the comb was apparently 80%-90% of the job, the remaining other functions were also part of what make a great Salon experience complete, so those had to be developed in parallel consideration: from painting colouring creams to razor blades!!\nTIP: Sugru was used to help create a perfect fit between the Fibreglass and the 3D Print. By adding cling film over the Fibreglass, and allow the Sugru (attached to the 3D Print) while still wet, to take mould, this then cured over night to be a firm rubber. This removed any tolerance errors in CAD / Fibreglass mould. If you are replicating this project, this can really help interface the 3D print and the Fibreglass interface.", "step_imgs": ["https://cdn.instructables.com/F6G/LCF6/JT4TPR6P/F6GLCF6JT4TPR6P.LARGE.jpg", "https://cdn.instructables.com/FBW/JY22/JT4TPR6O/FBWJY22JT4TPR6O.LARGE.jpg", "https://cdn.instructables.com/FKH/R1RQ/JREUAJSB/FKHR1RQJREUAJSB.LARGE.jpg", "https://cdn.instructables.com/FQ7/A26Z/JREUAJTF/FQ7A26ZJREUAJTF.LARGE.jpg", "https://cdn.instructables.com/FMQ/ZTBL/JREUAJU1/FMQZTBLJREUAJU1.LARGE.jpg", "https://cdn.instructables.com/FYZ/XUXR/JG74SI3X/FYZXUXRJG74SI3X.LARGE.jpg", "https://cdn.instructables.com/FE0/RVTZ/JG74SI7E/FE0RVTZJG74SI7E.LARGE.jpg", "https://cdn.instructables.com/FMV/GR6T/JREUAMI4/FMVGR6TJREUAMI4.LARGE.jpg"], "step_title": "Step 13: Assembly: Fibreglass Meets 3D Printing"}, {"step": 14, "steps_text": "Understandably, this CAD is specific to Kyle. However, if one were to take a fibreglass prosthetic, and adapt from this - then the fiels can be edited to suit. (See SLDPRT Files)", "step_imgs": ["https://cdn.instructables.com/FE4/8TI5/JT91LSIT/FE48TI5JT91LSIT.LARGE.jpg", "https://cdn.instructables.com/FCO/JFQ9/JT91LSF8/FCOJFQ9JT91LSF8.LARGE.jpg"], "step_title": "Step 14: CAD Overview"}, {"step": 15, "steps_text": "A quick tip on working with detailed and to-scale parts in CAD...\nI created an approximation of comb (and also the Fibreglass part) by taking pictures - and using this to scale, so that I could approximate 'real-world' object, within the CAD model. I took tips from YouTube videos like this. It can be especially useful to take pictures from x, y and z axis, and attach to the said planes of the CAD datum.\nI later machined (routered) out a profile of the comb, such that it could be inserted into the groove in the CAD part, as you can see later on, using a multitool and a guide, such as the one shown. You could attach the comb in other ways, but I felt this would be stronger than just a face-to-face joint.", "step_imgs": ["https://cdn.instructables.com/FHX/SGIG/JT91LSKB/FHXSGIGJT91LSKB.LARGE.jpg", "https://cdn.instructables.com/FEE/1ANB/JT91N29R/FEE1ANBJT91N29R.LARGE.jpg", "https://cdn.instructables.com/FQ5/P7J1/JT91N2AO/FQ5P7J1JT91N2AO.LARGE.jpg", "https://cdn.instructables.com/F6G/S58C/JREUALB3/F6GS58CJREUALB3.LARGE.jpg"], "step_title": "Step 15: Real World --> CAD"}, {"step": 16, "steps_text": "Parts created in Solid Works.\nThese can be edited to suit your needs, and coudl be applied to a variety of prosthetic attachments.", "step_imgs": ["https://cdn.instructables.com/FML/AE8X/JT91LX8N/FMLAE8XJT91LX8N.LARGE.jpg"], "step_title": "Step 16: SLDPRT FIles"}, {"step": 17, "steps_text": "STL Files, for quickness.\nTIP: I would suggest printing in the shown orientation, to give strength and minimise warpage. The Runners can bow a little, but it is best to have the face which attaches to the combs finish last as this will be most straight. Likewise, the other face can be sanded down lightly to be more parallel.", "step_imgs": ["https://cdn.instructables.com/FLH/EVTJ/JT91LWW1/FLHEVTJJT91LWW1.LARGE.jpg"], "step_title": "Step 17: STL Files & Printing"}, {"step": 18, "steps_text": "As shown earlier, this too can connect with a variety of tools - all created around 4x4mm square stainless steel section bar. This was found to be an optimum balance of rigidity and weight.\nThe hole in the side need to receive a brass insert, and can be placed either by press, parallel pliers, or nestled-in with a soldering iron. I did the latter, as it is a stronger hold. I then added a dap of super-clue to 'wick' into an gaps to give strength.", "step_imgs": ["https://cdn.instructables.com/FNI/BLAI/JT91LSJJ/FNIBLAIJT91LSJJ.LARGE.jpg", "https://cdn.instructables.com/F19/L6X2/JT91NDRM/F19L6X2JT91NDRM.LARGE.jpg"], "step_title": "Step 18: Multi-Tool Socket"}, {"step": 19, "steps_text": "Similar to the tool socket, a Brass Insert is recommended here. Taking care not to protrude too far so as to obstruct the steel from running inside.\nThe channel in the other runner is to contain the steel. 4x4mm square stainless (LINK). This can be fixed with super glue, or epoxy. The latter is preferable.", "step_imgs": ["https://cdn.instructables.com/FUC/8YJL/JT91LSCX/FUC8YJLJT91LSCX.LARGE.jpg", "https://cdn.instructables.com/FUN/LEQZ/JT91LSCI/FUNLEQZJT91LSCI.LARGE.jpg", "https://cdn.instructables.com/F0X/PTG7/JT91LSG1/F0XPTG7JT91LSG1.LARGE.jpg"], "step_title": "Step 19: Runners & Steel"}, {"step": 20, "steps_text": "This small red piece of plastic is a subtle adjutment piece: It allos you to tune the distance needed to 'lock' the hair. This is not to say that hair varies so much in thickness that you'd need to change it between cuts!\nRather, what I realised from using the tool, and observing Kyle, was that with confidence, one needs a less tight grip (i.e. smaller travel distance - and hence longer red piece) as one gest more experiences, and hesitates less. Hence suggesting printing a few off at once for the future.\nI like that this piece is nicely hidden away inside, but can be accesses by unscreweing the clamping nut, and then sliding the two runners appart.", "step_imgs": ["https://cdn.instructables.com/FWU/OJ7S/JT91LSHD/FWUOJ7SJT91LSHD.LARGE.jpg", "https://cdn.instructables.com/FZP/3Q8K/JT91LSGG/FZP3Q8KJT91LSGG.LARGE.jpg", "https://cdn.instructables.com/F9Z/75GT/JT91LSI0/F9Z75GTJT91LSI0.LARGE.jpg", "https://cdn.instructables.com/FOH/EO4F/JT91LSJX/FOHEO4FJT91LSJX.LARGE.jpg", "https://cdn.instructables.com/FQ2/2MCD/JREUANSV/FQ22MCDJREUANSV.LARGE.jpg"], "step_title": "Step 20: Adjustable Stop"}, {"step": 21, "steps_text": "I actually dabbled with some fibreglass-infused ABS filament, but in all honesty, the weight difference was not much different to the normal ABS, but it may have improved in terms of less warpage now(?). Always worth trying different filaments to see which works best.\nThe benefit of ABS was that it could cope with hot water of cleaning, where as PLA would likely degrade much faster. ABS also can be washed with acetone nicely to get a smoother (and stronger) finish.", "step_imgs": ["https://cdn.instructables.com/FI1/TFYE/JREUAL7Y/FI1TFYEJREUAL7Y.LARGE.jpg"], "step_title": "Step 21: Filament Choices"}, {"step": 22, "steps_text": "Safe to say a lot of this build is very tailored, and although I think the Instructables community appreciates this will be a case-by-case projects, some useful tools and tips include:\nSpring Loaded Grub Screws. (LINK). & Brass Inserts (LINK).\nThese were invaluable to not only make the 'click-lock' mechanism small and compact, but because the pressure of the ball can be adjusted via the screw, the force Kyle had to apply to get the combs to trigger/slip past each other, was adjustable. Brass inserts were also used to connect the socket to the fibreglass piece (see next image).\nThread Locker (videly available).\nUseful to add some friction to the Grub Screws to hold in place once the desired force was found.\nThumb Screws (from computer cases).\nThis is where the personalisation comes in - one can find a range of thumb screws in various styles and colours. Simply cut to size with a multitool.", "step_imgs": ["https://cdn.instructables.com/FWN/EOM6/JG74SJWN/FWNEOM6JG74SJWN.LARGE.jpg", "https://cdn.instructables.com/F29/MAMZ/JT91NT83/F29MAMZJT91NT83.LARGE.jpg", "https://cdn.instructables.com/FMJ/C1DW/JT91NTBM/FMJC1DWJT91NTBM.LARGE.jpg", "https://cdn.instructables.com/FDA/B46I/JT91NUSO/FDAB46IJT91NUSO.LARGE.jpg"], "step_title": "Step 22: Special Parts List"}, {"step": 23, "steps_text": "The Comb Attachment fits on top of the Fibreglass Socket, as shown.\nThis allows the 'trigger' or 'click-lock' mechanism to dock. As you can see there are multiple Brass Inserts, as I was finding out where was the best place to clamp the tools/combs/etc, and how much force was needed. (In the end, only one was needed - see images as show later)\nThe combs were routed to fit the 3D printed parts, and glued in with Epoxy. They were then sanded back to be flush with one another.\nLastly, other tools were checked for fit and utility.", "step_imgs": ["https://cdn.instructables.com/FYI/6NRW/JT4TQF1S/FYI6NRWJT4TQF1S.LARGE.jpg", "https://cdn.instructables.com/FYN/O7BW/JT4TQF1T/FYNO7BWJT4TQF1T.LARGE.jpg", "https://cdn.instructables.com/F1S/LVUR/JT4TQF1W/F1SLVURJT4TQF1W.LARGE.jpg", "https://cdn.instructables.com/F6G/S58C/JREUALB3/F6GS58CJREUALB3.LARGE.jpg"], "step_title": "Step 23: Assembly: Comb Mechanism"}, {"step": 24, "steps_text": "Although the crux of the project rested on the ability to cut hair, the final success of the project was the ability to interchange between tools safely, quickly and easily, so that the entire solution also enabled styling of hair too.\nFor Kyle and myself, these accessories needed to be 'centre stage' and look the part on the desk of a Salon, in front of the mirror. So the stand was a nice touch, to organise them for Kyle's easy access - but it also became a talking point for clients. Much of this project was about the little touches.\nThe last tool was a good example, which needed to evolve to be dual purpose - for brush and styling pic. The brushes once old can be removed and disposed of.", "step_imgs": ["https://cdn.instructables.com/FTN/3MDX/JG74SL1T/FTN3MDXJG74SL1T.LARGE.jpg", "https://cdn.instructables.com/F0I/19DO/JG74SL3M/F0I19DOJG74SL3M.LARGE.jpg", "https://cdn.instructables.com/FRW/NQ9W/JG74SLBX/FRWNQ9WJG74SLBX.LARGE.jpg", "https://cdn.instructables.com/F25/94LD/JG74SLDR/F2594LDJG74SLDR.LARGE.jpg"], "step_title": "Step 24: The \"Swiss Army Knife\" of Hairdressing Prosthetics"}, {"step": 25, "steps_text": "This was great fun being tutored by Master Jeweller, Mark Bloomfield, from Electrobloom. I learned loads about the process of jewellery making - both the design, craft and aesthetics of this. His input was invaluable in helping me deliver an aesthetic that Kyle would be proud to own. It was even a nice touch that he suggest we used Silver - not only because it was precious, but because it tarnished, it needed polishing - which in itself was a 'bonding' moment for Kyle, similar to that of say a motorcycle enthusiast, or saxophonist - taking that care to polish and observe the details in caring for a beloved item. His eye for organic designs is clearly inspirational when seeing the blue 'trigger handle', which is not only functional - but gives character to the tool.\nThis allowed the utility of the tool to be taken to the next level, such that it would be a credible looking thing for a client to see. Many of the techniques are similar to those used in Instructables Jewellery Class, so I will not detail them here.", "step_imgs": ["https://cdn.instructables.com/FMA/2G1S/JG74SL8M/FMA2G1SJG74SL8M.LARGE.jpg", "https://cdn.instructables.com/F4D/8FZJ/JG74SKNG/F4D8FZJJG74SKNG.LARGE.jpg", "https://cdn.instructables.com/F5G/6M1L/JG74SK1Q/F5G6M1LJG74SK1Q.LARGE.jpg", "https://cdn.instructables.com/F6D/OUR0/JG74SKP7/F6DOUR0JG74SKP7.LARGE.jpg", "https://cdn.instructables.com/FFX/6KOJ/JG74SKSO/FFX6KOJJG74SKSO.LARGE.jpg", "https://cdn.instructables.com/FC0/ORXO/JREUAN3B/FC0ORXOJREUAN3B.LARGE.jpg", "https://cdn.instructables.com/FGW/DYKE/JREUAN6L/FGWDYKEJREUAN6L.LARGE.jpg", "https://cdn.instructables.com/FW5/5S5S/JREUAFC5/FW55S5SJREUAFC5.LARGE.jpg", "https://cdn.instructables.com/FEA/XOVK/JG74SKW8/FEAXOVKJG74SKW8.LARGE.jpg", "https://cdn.instructables.com/F67/RX4B/JREUAM43/F67RX4BJREUAM43.LARGE.jpg", "https://cdn.instructables.com/FVO/J2O7/JG74SJZX/FVOJ2O7JG74SJZX.LARGE.jpg", "https://cdn.instructables.com/F46/AA4T/JREUAMS4/F46AA4TJREUAMS4.LARGE.jpg"], "step_title": "Step 25: Personalisation of the Tool"}, {"step": 26, "steps_text": "The reveal!\nAnd I got a free haircut from Kyle =D\nWatch the show online at BBC, or Youtube (ssshhhh!) (LINK)", "step_imgs": ["https://cdn.instructables.com/F18/O3NY/JG74SM4D/F18O3NYJG74SM4D.LARGE.jpg", "https://cdn.instructables.com/FH1/8AWG/JG74SLYV/FH18AWGJG74SLYV.LARGE.jpg", "https://cdn.instructables.com/FA5/DSCK/JREUAPUD/FA5DSCKJREUAPUD.LARGE.jpg", "https://cdn.instructables.com/FBR/UBIT/JREUAPV2/FBRUBITJREUAPV2.LARGE.jpg", "https://cdn.instructables.com/F56/TVZA/JREUAPIL/F56TVZAJREUAPIL.LARGE.jpg"], "step_title": "Step 26: Put It to the Test"}, {"step": 27, "steps_text": "Kyle is continuing his training course, and is much more able to manage the various complex tasks of the profession, from the click-lock comb, and the various accessories.", "step_imgs": ["https://cdn.instructables.com/FW4/65IO/JREUAODO/FW465IOJREUAODO.LARGE.jpg", "https://cdn.instructables.com/FEI/B2ES/JG74SLJ9/FEIB2ESJG74SLJ9.LARGE.jpg", "https://cdn.instructables.com/F8L/1OXK/JG74SLMV/F8L1OXKJG74SLMV.LARGE.jpg", "https://cdn.instructables.com/F9M/1M0O/JG74SLQD/F9M1M0OJG74SLQD.LARGE.jpg", "https://cdn.instructables.com/FSB/6IG1/JREUAPEJ/FSB6IG1JREUAPEJ.LARGE.jpg"], "step_title": "Step 27: Kyle at Work"}, {"step": 28, "steps_text": "Some pics of the final work.", "step_imgs": ["https://cdn.instructables.com/FYO/V0DQ/JREUAOCJ/FYOV0DQJREUAOCJ.LARGE.jpg", "https://cdn.instructables.com/FYB/SWXV/JREUANEO/FYBSWXVJREUANEO.LARGE.jpg", "https://cdn.instructables.com/FUX/I2PG/JG74SMLO/FUXI2PGJG74SMLO.LARGE.jpg", "https://cdn.instructables.com/FEP/WGFJ/JG74SMOS/FEPWGFJJG74SMOS.LARGE.jpg", "https://cdn.instructables.com/FMP/APHQ/JREUAOBE/FMPAPHQJREUAOBE.LARGE.jpg", "https://cdn.instructables.com/FB4/PK9K/JG74SMN8/FB4PK9KJG74SMN8.LARGE.jpg", "https://cdn.instructables.com/FYB/Z8DZ/JG74SMLK/FYBZ8DZJG74SMLK.LARGE.jpg", "https://cdn.instructables.com/FU0/W5N6/JREUANKR/FU0W5N6JREUANKR.LARGE.jpg"], "step_title": "Step 28: Gallery"}, {"step": 29, "steps_text": "Using the tool =)", "step_imgs": ["https://cdn.instructables.com/F9O/LB2I/JREUAQ7V/F9OLB2IJREUAQ7V.LARGE.jpg", "https://cdn.instructables.com/FNF/BP8C/JREUARWZ/FNFBP8CJREUARWZ.LARGE.jpg", "https://cdn.instructables.com/FHL/IR5D/JREUARSZ/FHLIR5DJREUARSZ.LARGE.jpg", "https://cdn.instructables.com/FBW/F29L/JREUAS8W/FBWF29LJREUAS8W.LARGE.jpg", "https://cdn.instructables.com/FLI/PZ2Z/JREUARFB/FLIPZ2ZJREUARFB.LARGE.jpg", "https://cdn.instructables.com/FMU/61N8/JREUAQRH/FMU61N8JREUAQRH.LARGE.jpg", "https://cdn.instructables.com/F1U/4B1L/JREUARB9/F1U4B1LJREUARB9.LARGE.jpg", "https://cdn.instructables.com/F40/8ATV/JREUARP1/F408ATVJREUARP1.LARGE.jpg"], "step_title": "Step 29: Kyle in Action!"}, {"step": 30, "steps_text": "Thanks again for all involved in making the BBC Big Life Fix series 2. It was an incredible ride, and I hope the show's many other inventions are an inspiration to the Instructables community and beyond...\nMore at: http://www.judepullen.com/bbc-big-life-fix/\nI hope this Instructable is a useful guide, and although has a lot of the back-story, is also helpful not only in iterating (or Remixing?) on this project, but also gives confidence to approach a complex design challenge such as this. Any questions, please do comment, or email me.\nCheers,\nJude", "step_imgs": ["https://cdn.instructables.com/F9W/LGXH/JREUASGX/F9WLGXHJREUASGX.LARGE.jpg"], "step_title": "Step 30: Thanks!"}], "channel": ""}, {"category": "", "description": "3D pens are great tools to develop the creativity of your kids. But, what can you do when your 3D Doodler Start stops working and cannot be repaired? Don't throw your 3D pen to the trash! Because in this instructable I will teach you how to transform it into a robot.\nThis model of 3D pen has some very interesting components: a micro-motor with gearbox, two rechargeable Lithium Polymer batteries and a mini-circuit board that can be used as a battery charger. Add some discarded 3D glasses and a few extra materials, and you can build a rope-climbing Simple Bot.\nI'm participating in the \"Trash to Treasure Contest\" of Instructables. So if you like this project, your vote will very appreciated. Thanks for your support!\nNow, grab some tools and let the fun begin!", "title": "Rope-climbing Robot From a Broken 3D Pen", "url": "https://www.instructables.com/id/Rope-climbing-Robot-From-a-Broken-3D-Pen/", "section": "technology", "steps": [{"step": 1, "steps_text": "Building a rope-climbing robot was an idea I have since I was a kid, inspired by one of the favorite shows of my childhood: The Wizard. Probably you never have heard about it. You see, in a classic example of \"trash to treasure\", several shows that were unpopular in United States (and cancelled after only one season) became cult classics in Latin America, with complete generations having them as a reference point. So for a lot of us, \"Street Hawk\", \"Manimal\" and \"Automan\" were as cool as \"The Fall Guy\", \"The A-Team\" and \"MacGyver\".\nPeople says that Tyrion Lannister is the first time a person with dwarfism is considered for a main character in a TV series (nothing against Peter Dinklage, he is one of the finest actors of our time), but that credit goes to Simon McKay (David Rappaport). He was awesome! A genius in robotics who used to create weapons for the government, then he quits and becomes the best toymaker, philanthropist and adventurer. Every time he and his friends were in trouble, he had some special toys in his suitcase that helped them to escape. And probably the first of his toys that impressed me was a little rope-climbing robot he has at his workshop. Several times I tried to make a toy like that one, but I failed. But after having this 3D pens problem, I decided to give another run to this idea.\nFirst, I needed to test if the 3D pen's gearbox was powerful enough to lift the weight of the robot, so I created a prototype using the motor, a battery holder and bamboo kebab sticks, all attached using hot glue. I was surprised when I saw it worked!... for a few minutes. After that, the hot glue was not strong enough to stand the stress, and the prototype got tangled up and fell to the ground. But in its short time working, it gave me the essential information to build a better robot!\nNext step (and that's something you don't see often in my instructables), I draw a design. With a pen. If I wanted to make it work, I needed to go full Engineering Design Process with it.", "step_imgs": ["https://cdn.instructables.com/FI0/GZXE/JT91JC22/FI0GZXEJT91JC22.LARGE.jpg", "https://cdn.instructables.com/F5K/VDHY/JT91J4T3/F5KVDHYJT91J4T3.LARGE.jpg"], "step_title": "Step 1: Inspiration, Prototype and Design"}, {"step": 2, "steps_text": "So, to build the Mark II of this project, you will need the following materials. All or almost all of them are recycled, and you can use alternatives, as long as you have a motor with gearbox. You will need:\n1 broken rechargeable 3D pen\n1 3D glasses (or any kind of glasses with thick plastic frame)\n1 plastic bottle cap\n1 small switch (you can recycle it from a broken toy or even, from the 3D pen's board)\n1 zip tie\n1 Tic-Tac plastic box\n1 discarded ceramic continental car fuse (or any other hard plastic small piece that can be useful as a crank)\nWires (red and black, preferable)\nScrews, nuts, bolts, washers\nSuperglue\nSoldering tin\nAlso, you will require the following tools:\nDremel rotary tool\nheat gun\nsoldering iron\nscrewdrivers\npliers", "step_imgs": ["https://cdn.instructables.com/FPU/A5P6/JT91J3IQ/FPUA5P6JT91J3IQ.LARGE.jpg", "https://cdn.instructables.com/FUU/E6VH/JT91J3H7/FUUE6VHJT91J3H7.LARGE.jpg"], "step_title": "Step 2: Materials"}, {"step": 3, "steps_text": "Using the rotary tool, carefully cut the 3D pen's case through the middle (the slimiest part). But only the plastic part! If you cut too much, you can damage the board or other components that can be useful for this or future projects.\nThe part of the case we will use for the robot's body is where the batteries are housed. Carefully disconnect them from the rest of the circuit board.", "step_imgs": ["https://cdn.instructables.com/F1W/BCSA/JT91J3KL/F1WBCSAJT91J3KL.LARGE.jpg", "https://cdn.instructables.com/F5P/PRVC/JT91J3OD/F5PPRVCJT91J3OD.LARGE.jpg", "https://cdn.instructables.com/FSG/X2QE/JT91J3Q8/FSGX2QEJT91J3Q8.LARGE.jpg", "https://cdn.instructables.com/FF9/V9PK/JT91J3Z3/FF9V9PKJT91J3Z3.LARGE.jpg", "https://cdn.instructables.com/FT6/BVFY/JT91J3Z5/FT6BVFYJT91J3Z5.LARGE.jpg", "https://cdn.instructables.com/FTZ/P62U/JT91J41N/FTZP62UJT91J41N.LARGE.jpg", "https://cdn.instructables.com/FCY/5QPD/JT91J3WW/FCY5QPDJT91J3WW.LARGE.jpg", "https://cdn.instructables.com/F24/TO1K/JT91J44N/F24TO1KJT91J44N.LARGE.jpg"], "step_title": "Step 3: Open the 3D Pen"}, {"step": 4, "steps_text": "Using a flat screwdriver and small pliers, open the black case that contains the mechanical and electronic parts. Basically, you will need the following components to create the robot:\nCase with batteries inside: it will be the main body and power source.\nCircuit board: it will be transformed into an independent battery charger.\nMotor with gear box: it will move the arms of the robot.", "step_imgs": ["https://cdn.instructables.com/FX1/EJTS/JT91J44A/FX1EJTSJT91J44A.LARGE.jpg", "https://cdn.instructables.com/FVK/OBO5/JT91J453/FVKOBO5JT91J453.LARGE.jpg", "https://cdn.instructables.com/FEO/261S/JT91J4D7/FEO261SJT91J4D7.LARGE.jpg", "https://cdn.instructables.com/FS2/JBUV/JT91J4EL/FS2JBUVJT91J4EL.LARGE.jpg", "https://cdn.instructables.com/FE0/ISDP/JT91J4F1/FE0ISDPJT91J4F1.LARGE.jpg", "https://cdn.instructables.com/FTN/8THE/JT91J4IF/FTN8THEJT91J4IF.LARGE.jpg"], "step_title": "Step 4: Mining the Necessary Components"}, {"step": 5, "steps_text": "To charge this robot, the battery must be unplugged from the motor and connected to the charger. That means we need two mini sockets compatible with the battery plug: one in the board/charger, and an extra one for the motor. You can buy a new one. Or, you can use one of the other two soldered to the board.\nUsing a soldering iron, remove the red mini socket, and solder a wire to each pin. We will use this one for the motor (later, I also removed the blue one, to be used in another project.)\nAt the end, place some heat-shrinkable tube on the socket and expose it to the heat gun, so the pins are protected.", "step_imgs": ["https://cdn.instructables.com/F6Z/EYVQ/JT91J44O/F6ZEYVQJT91J44O.LARGE.jpg", "https://cdn.instructables.com/FCE/EXV8/JT91J4V8/FCEEXV8JT91J4V8.LARGE.jpg", "https://cdn.instructables.com/F32/WB1E/JT91J4VO/F32WB1EJT91J4VO.LARGE.jpg", "https://cdn.instructables.com/FLC/59ZZ/JT91J4WC/FLC59ZZJT91J4WC.LARGE.jpg", "https://cdn.instructables.com/FR1/7MF7/JT91J7AR/FR17MF7JT91J7AR.LARGE.jpg", "https://cdn.instructables.com/F73/25KU/JT91J7CY/F7325KUJT91J7CY.LARGE.jpg", "https://cdn.instructables.com/FYX/89ZS/JT91J7HP/FYX89ZSJT91J7HP.LARGE.jpg", "https://cdn.instructables.com/F5H/ECDL/JT91J7IL/F5HECDLJT91J7IL.LARGE.jpg"], "step_title": "Step 5: Modifications for the Circuit Board"}, {"step": 6, "steps_text": "For this part you will need the modified board, the USB cable included with the 3D pen and a Tic Tac box.\nModify the Tic Tac box so you can fit the board inside. Use a Dremel rotary tool. Before inserting the board, check that the switch is in OFF (charging position.)", "step_imgs": ["https://cdn.instructables.com/FV3/VORD/JT91J4UX/FV3VORDJT91J4UX.LARGE.jpg", "https://cdn.instructables.com/FPE/PX3O/JT91J4WU/FPEPX3OJT91J4WU.LARGE.jpg", "https://cdn.instructables.com/FZJ/UVRR/JT91J4YN/FZJUVRRJT91J4YN.LARGE.jpg", "https://cdn.instructables.com/FHD/HPTA/JT91J4Z2/FHDHPTAJT91J4Z2.LARGE.jpg", "https://cdn.instructables.com/FVY/065J/JT91J4ZE/FVY065JJT91J4ZE.LARGE.jpg", "https://cdn.instructables.com/FZ6/7IE5/JT91J519/FZ67IE5JT91J519.LARGE.jpg", "https://cdn.instructables.com/FDM/GW3R/JT91J533/FDMGW3RJT91J533.LARGE.jpg", "https://cdn.instructables.com/F9F/OJOC/JT91J5LT/F9FOJOCJT91J5LT.LARGE.jpg"], "step_title": "Step 6: Building the Battery Charger"}, {"step": 7, "steps_text": "With the Dremel, adapt a plastic cap to cover the hole in the batteries case. This cap is very important, because the motor will be attached to it. Also, cables from the batteries and motor will pass by its side.", "step_imgs": ["https://cdn.instructables.com/FO7/GRDB/JT91J5W2/FO7GRDBJT91J5W2.LARGE.jpg", "https://cdn.instructables.com/FA0/MZBB/JT91J5X0/FA0MZBBJT91J5X0.LARGE.jpg", "https://cdn.instructables.com/F08/QJPG/JT91J5Y4/F08QJPGJT91J5Y4.LARGE.jpg", "https://cdn.instructables.com/F99/U39T/JT91J5YY/F99U39TJT91J5YY.LARGE.jpg", "https://cdn.instructables.com/FJG/J9OF/JT91J62A/FJGJ9OFJT91J62A.LARGE.jpg", "https://cdn.instructables.com/FBN/SBVZ/JT91J6L9/FBNSBVZJT91J6L9.LARGE.jpg"], "step_title": "Step 7: Robot's Body"}, {"step": 8, "steps_text": "Remove the extra attachments from the shaft of the motor. Also, probably you will need to cut a section from the shaft, so it has the same length of the crank.\nAs a crank, we will use the fuse. Check that it fits and adapt with the Dremel or add a drop of super glue if necessary (be careful! don't jam the gearbox.)\nThen, attach the motor to the bottle cap using a zip tie. Then, place the bottle cap in the body and check if the motor axle is aligned with the case's fissure.", "step_imgs": ["https://cdn.instructables.com/FNI/H9PB/JT91J64S/FNIH9PBJT91J64S.LARGE.jpg", "https://cdn.instructables.com/FGN/D8XL/JT91J681/FGND8XLJT91J681.LARGE.jpg", "https://cdn.instructables.com/F1C/FCIE/JT91J69U/F1CFCIEJT91J69U.LARGE.jpg", "https://cdn.instructables.com/F5Z/BN4T/JT91J6FY/F5ZBN4TJT91J6FY.LARGE.jpg", "https://cdn.instructables.com/FTO/67VS/JT91J6JB/FTO67VSJT91J6JB.LARGE.jpg", "https://cdn.instructables.com/FG9/9UHD/JT91J6LZ/FG99UHDJT91J6LZ.LARGE.jpg", "https://cdn.instructables.com/FL0/BAPU/JT91J6N0/FL0BAPUJT91J6N0.LARGE.jpg", "https://cdn.instructables.com/FJ4/6G15/JT91J6NE/FJ46G15JT91J6NE.LARGE.jpg", "https://cdn.instructables.com/FB4/8NG5/JT91J6P3/FB48NG5JT91J6P3.LARGE.jpg", "https://cdn.instructables.com/FCM/C3R6/JT91J6RP/FCMC3R6JT91J6RP.LARGE.jpg", "https://cdn.instructables.com/FET/00JK/JT91J6ZG/FET00JKJT91J6ZG.LARGE.jpg", "https://cdn.instructables.com/FZG/8FBH/JT91J70X/FZG8FBHJT91J70X.LARGE.jpg", "https://cdn.instructables.com/FT1/CINT/JT91J75J/FT1CINTJT91J75J.LARGE.jpg", "https://cdn.instructables.com/F85/7WVZ/JT91J75M/F857WVZJT91J75M.LARGE.jpg"], "step_title": "Step 8: Adding a Crank and Attaching the Motor"}, {"step": 9, "steps_text": "This robot works with a basic electrical circuit. However, you will need to do some extra modifications to the plastic case. Using the Dremel, open a hole on the back (for the mini-socket and cables of Step 5) and on bottom (to place a switch.)\nConnect the mini-socket to the batteries, and then insert it through the hole. One cable will go to one of the pins of the motor. The other one, to one of the pins of the switch. Then connect an extra cable from the center pin of the switch to the other pin of the motor, trying to keep all the cables inside the case (only exposed cables are the plug and socket of the battery.)\nUse the soldering iron and soldering thin on each connection.\nAt the end, place the plastic cap with the motor, and fix it to the case using small screws.", "step_imgs": ["https://cdn.instructables.com/FR8/S1CM/JT91J7JP/FR8S1CMJT91J7JP.LARGE.jpg", "https://cdn.instructables.com/F02/DYW6/JT91J7LP/F02DYW6JT91J7LP.LARGE.jpg", "https://cdn.instructables.com/FOJ/GOXR/JT91J7MV/FOJGOXRJT91J7MV.LARGE.jpg", "https://cdn.instructables.com/F43/V518/JT91J7N6/F43V518JT91J7N6.LARGE.jpg", "https://cdn.instructables.com/FWE/LJYB/JT91J7NO/FWELJYBJT91J7NO.LARGE.jpg", "https://cdn.instructables.com/FGP/RMK5/JT91J7Q8/FGPRMK5JT91J7Q8.LARGE.jpg", "https://cdn.instructables.com/F2N/YSTG/JT91J7QT/F2NYSTGJT91J7QT.LARGE.jpg", "https://cdn.instructables.com/F01/4T25/JT91J7U1/F014T25JT91J7U1.LARGE.jpg", "https://cdn.instructables.com/FHY/DPVN/JT91J7UO/FHYDPVNJT91J7UO.LARGE.jpg", "https://cdn.instructables.com/F7G/6IMU/JT91J80I/F7G6IMUJT91J80I.LARGE.jpg", "https://cdn.instructables.com/FHE/BB5V/JT91J82E/FHEBB5VJT91J82E.LARGE.jpg", "https://cdn.instructables.com/FSY/541D/JT91J842/FSY541DJT91J842.LARGE.jpg", "https://cdn.instructables.com/FK6/UKTJ/JT91J8DC/FK6UKTJJT91J8DC.LARGE.jpg", "https://cdn.instructables.com/F68/PMUD/JT91J8E1/F68PMUDJT91J8E1.LARGE.jpg", "https://cdn.instructables.com/FTT/YT8W/JT91J8W0/FTTYT8WJT91J8W0.LARGE.jpg"], "step_title": "Step 9: Electrical Circuit"}, {"step": 10, "steps_text": "Take the 3D glasses and remove the legs. One of the legs will be the mobile arm of the robot. Drill a hole and make a groove in the points shown in the photos. Then attach it to the crank using a screw and a metal washer.\nDrill a small hole in the case, being extremely careful of not piercing the batteries. Attach a metal rod from a small toy car and glue it with superglue. Then, insert a small car wheel to keep the mobile arm in position.", "step_imgs": ["https://cdn.instructables.com/FKL/X9ON/JT91J8P2/FKLX9ONJT91J8P2.LARGE.jpg", "https://cdn.instructables.com/F6B/1D04/JT91J8QF/F6B1D04JT91J8QF.LARGE.jpg", "https://cdn.instructables.com/FCX/GJ37/JT91J8Z1/FCXGJ37JT91J8Z1.LARGE.jpg", "https://cdn.instructables.com/F9T/Q5IW/JT91J8ZC/F9TQ5IWJT91J8ZC.LARGE.jpg", "https://cdn.instructables.com/F4X/LDLL/JT91J93J/F4XLDLLJT91J93J.LARGE.jpg", "https://cdn.instructables.com/FYE/CHVL/JT91J9E2/FYECHVLJT91J9E2.LARGE.jpg", "https://cdn.instructables.com/FO8/H9P7/JT91J9HC/FO8H9P7JT91J9HC.LARGE.jpg", "https://cdn.instructables.com/FKM/TCW0/JT91J9N4/FKMTCW0JT91J9N4.LARGE.jpg", "https://cdn.instructables.com/F58/Y603/JT91J9QM/F58Y603JT91J9QM.LARGE.jpg", "https://cdn.instructables.com/F9D/NG08/JT91J9SI/F9DNG08JT91J9SI.LARGE.jpg", "https://cdn.instructables.com/FG5/G6IH/JT91JA1J/FG5G6IHJT91JA1J.LARGE.jpg", "https://cdn.instructables.com/F32/TWYB/JT91JA3P/F32TWYBJT91JA3P.LARGE.jpg", "https://cdn.instructables.com/F5A/9LNN/JT91JA7C/F5A9LNNJT91JA7C.LARGE.jpg", "https://cdn.instructables.com/FCJ/EFRK/JT91JABP/FCJEFRKJT91JABP.LARGE.jpg", "https://cdn.instructables.com/FQC/LRFV/JT91JAGH/FQCLRFVJT91JAGH.LARGE.jpg", "https://cdn.instructables.com/F26/MSSF/JT91JANV/F26MSSFJT91JANV.LARGE.jpg", "https://cdn.instructables.com/FN9/PWO7/JT91JAQ2/FN9PWO7JT91JAQ2.LARGE.jpg", "https://cdn.instructables.com/F65/803R/JT91JART/F65803RJT91JART.LARGE.jpg", "https://cdn.instructables.com/FO3/S0L5/JT91JAXG/FO3S0L5JT91JAXG.LARGE.jpg"], "step_title": "Step 10: Mobile Arm"}, {"step": 11, "steps_text": "The other arm will be fixed to the body. Drill a hole in the same position of the mobile arm, and skewer it in the other end of the motor's axle (the one without a gearbox). Attach the rest of the arm to the body, again being careful of not piercing the batteries.", "step_imgs": ["https://cdn.instructables.com/F5K/7LVY/JT91JB36/F5K7LVYJT91JB36.LARGE.jpg", "https://cdn.instructables.com/FR0/33Y7/JT91JB4R/FR033Y7JT91JB4R.LARGE.jpg", "https://cdn.instructables.com/FN4/DW9J/JT91JB6B/FN4DW9JJT91JB6B.LARGE.jpg", "https://cdn.instructables.com/F6G/YYOP/JT91JBDJ/F6GYYOPJT91JBDJ.LARGE.jpg", "https://cdn.instructables.com/FH8/WW5Q/JT91JBEM/FH8WW5QJT91JBEM.LARGE.jpg", "https://cdn.instructables.com/FNM/TWYO/JT91JBK8/FNMTWYOJT91JBK8.LARGE.jpg", "https://cdn.instructables.com/F9Z/R9XK/JT91JBKD/F9ZR9XKJT91JBKD.LARGE.jpg"], "step_title": "Step 11: Static Arm"}, {"step": 12, "steps_text": "Using the heat gun, mold the arms to create a hook shape, being careful of not melting any other part of the robot. Check that, during the movement, both arms can move freely without touching each other. Also, the hooks must pass each other, so both of them can catch the rope without difficulty.\nStick some googly eyes to give extra personality to this little guy. Now, have fun with your robot, amaze your friends and give a new opportunity to a 3D pen that probably would finish in the garbage.\nHappy making!", "step_imgs": ["https://cdn.instructables.com/FS7/TZEA/JT91JBVV/FS7TZEAJT91JBVV.LARGE.jpg", "https://cdn.instructables.com/FZA/G8YB/JT91JBZT/FZAG8YBJT91JBZT.LARGE.jpg", "https://cdn.instructables.com/F5R/3H4F/JT91JBZY/F5R3H4FJT91JBZY.LARGE.jpg", "https://cdn.instructables.com/F36/6GW5/JT91JDZN/F366GW5JT91JDZN.LARGE.jpg", "https://cdn.instructables.com/FP4/550H/JT91JE7Z/FP4550HJT91JE7Z.LARGE.jpg", "https://cdn.instructables.com/FTM/13B2/JT91JEDF/FTM13B2JT91JEDF.ANIMATED.LARGE.gif"], "step_title": "Step 12: Arm Hooks"}], "channel": ""}, {"category": "", "description": "Among the first set of Corvettes that Chevrolet produced, the 1957 model is a bonafide classic! Designer Ben Light put a modern CNC twist on this stunner by showing you how to build a wood and acrylic toy version using the versatile Bantam Tools Desktop PCB Milling Machine. This intermediate-level project assumes you have some experience with the Bantam Tools Desktop PCB Milling Machine, Bantam Tools Desktop Milling Machine Software, and are comfortable using hand tools. If you're just getting started, be sure to check out our series of introductory guides.", "title": "Bantmobile 1957 Corvette", "url": "https://www.instructables.com/id/Bantmobile-1957-Corvette/", "section": "technology", "steps": [{"step": 1, "steps_text": "TOOLS\nBantam Tools Desktop PCB Milling Machine\nComputer with Bantam Tools Desktop Milling Machine Software installed\nFlat end mill, 1/8\"\nHammer\nClamps\nDigital calipers\nFlathead screwdriver\nDrill and \u00bc\" drill bit\nMATERIALS\nPlywood, 5\" x 4.5\" x 0.475\" (2)\nAcrylic, red, 5\" x 4.5\" x 0.25\" (2)\nDowel pins, \u00bc\" diameter 1\" long (3)\nWood glue\nAdhesive spray\nDouble-sided tape\nSandpaper, 220 and 400 grit\nPaper towels\nMATERIALS FOR WHEELS AND AXLES\nNylon door roller, 1\u00bd\" (4)\nNylon spacers (4)\nBinding barrels and screws (2)\nO-rings (4)\nSVG FILES\nvette_wood_outside.svg\nvette_wood_inside.svg\nvette_wood_engrave.svg\nvette_plastic_outside.svg\nvette_plastic_engrave.svg\nvette_plastic_holes.svg\nvette_plastic_flip_outside.svg\nvette_plastic_flip_engrave.svg\nvette_plastic_flip_holes.svg\nCUSTOM TOOL LIBRARIES\nCustom tool library for milling wood\nCustom tool library for milling acrylic\nNote: We suggest buying more material than you think you need. A good rule of thumb is to take the amount you think you need and times it by pi.\nSafety first: Before you get started, take the time to learn the proper procedures for your mill, your bits, and your materials. Always use a clean mill. Take care to properly mount the material to the bed. And never leave a running mill unattended.", "step_imgs": [], "step_title": "Step 1: Gather Your Tools and Materials"}, {"step": 2, "steps_text": "The SVG design files you need are all provided in this tutorial. Download them all from the Tools and Materials list.\nTo create them, Ben first drew a simplified version of a \u201857 Corvette and scanned it. He then opened the scan in Vectorworks (which is free for students) and traced on top of the image, mostly using the Arc tool. The file was manipulated until it fit along the diagonal of a 5\" x 4.5\" rectangle. Finally, that file was opened in Adobe Illustrator, where the SVG files were created.", "step_imgs": ["https://cdn.instructables.com/F0Z/1FP7/JT91JZ7F/F0Z1FP7JT91JZ7F.LARGE.jpg", "https://cdn.instructables.com/FDZ/NPC2/JT91JZGT/FDZNPC2JT91JZGT.LARGE.jpg", "https://cdn.instructables.com/FE2/0YII/JT91JZBV/FE20YIIJT91JZBV.LARGE.jpg"], "step_title": "Step 2: Create the Design"}, {"step": 3, "steps_text": "Before you mill, download the Bantam Tools custom tool libraries for wood and acrylic.\nFor wood, download this file, which contains all the recommended feeds and speeds. Then open the Bantam Tools software, click File > Tool Library, click the \u201cImport\u201d button, and select this file.\nFor acrylic, download this file, which contains all the recommended feeds and speeds. Then open the Bantam Tools software, click File > Tool Library, click the \u201cImport\u201d button, and select this file.\nBefore using these settings, it\u2019s a good idea to read through the Bantam Tools Speeds and Feeds Guide.", "step_imgs": [], "step_title": "Step 3: Download and Import the Tool Libraries"}, {"step": 4, "steps_text": "Measure the thickness of the plywood with digital calipers (\u00bd\" plywood is not always exactly \u00bd\" thick). Our plywood measured in at 0.475\" thick.\nIn the software, set Material to \u201cGeneric\u201d and Size to your specific measurements (ours was 5\" x 4.5\" x 0.475\").\nThe double-sided tape we're using to mount the plywood to the spoilboard is 0.003\" thick. In the software, set Placement to 0.003\" for the z-axis. Mount the plywood to the mill bed with the double-sided tape.\nTo mill the wooden parts, use these files:\nvette_wood_outside.svg\nvette_wood_inside.svg\nvette_wood_engrave.svg\nAnd follow these instructions:\nChoose the bit \u215b\u201d FEM Birch for all files.\nFor all files, under \u201cAdvanced\u201d, set \"Scale from\" to \u201cDocument bounds\u201d.\nFor vette_wood_outside.svg, unclick the \u201cEngraving\u201d option.\nFor vette_wood_inside.svg, unclick the \u201cEngraving\u201d option.\nFor vette_wood_inside.svg under \u201cAdvanced\u201d, set Cutout placement to \u201cInside\u201d.\nFor vette_wood_engrave.svg, unclick the \u201cCutout\u201d option.\nFor vette_wood_engrave.svg, set Engraving Depth to 0.475\u201d.\nMill each part. Then remove the plywood, clean the machine, and attach another piece of plywood to the mill bed with double-sided tape. Repeat until you've milled all three parts.", "step_imgs": ["https://cdn.instructables.com/FV4/CZOJ/JT91JZMA/FV4CZOJJT91JZMA.LARGE.jpg", "https://cdn.instructables.com/F6A/C9MV/JT91JZR7/F6AC9MVJT91JZR7.LARGE.jpg", "https://cdn.instructables.com/FLU/H589/JT91JZTX/FLUH589JT91JZTX.LARGE.jpg", "https://cdn.instructables.com/F8C/B47B/JT91JZUA/F8CB47BJT91JZUA.LARGE.jpg"], "step_title": "Step 4: Mill the Plywood Parts"}, {"step": 5, "steps_text": "Make sure you measure your material thickness with digital calipers (\u00bc\"-thick acrylic is not always \u00bc\" thick). Our acrylic thickness measured in at 0.21\".\nIn the software, we set Material to \u201cGeneric\u201d and Size to 5\" x 4.5\" x 0.210\".\nThe double-sided tape we're using to mount the acrylic is 0.003\" thick. In the software, set Placement to 0.003\" for the z-axis. Mount the acrylic to the mill bed with double-sided tape.\nTo mill the first acrylic part, use these files:\nvette_plastic_outside.svg\nvette_plastic_engrave.svg\nvette_plastic_holes.svg\nAnd follow these instructions:\nChoose the bit 1/8\" FEM Acrylic for all files.\nFor all files under \u201cAdvanced\u201d, set \"Scale from\" to \u201cDocument bounds\u201d.\nFor vette_plastic_outside.svg, unclick the \u201cEngraving\u201d option.\nFor vette_plastic_engrave.svg, unclick the \u201cCutout\u201d option.\nFor vette_plastic_engrave.svg, set Engraving Depth to 0.21\".\nFor vette_plastic_holes.svg, unclick the \u201cCutout\u201d option.\nFor vette_plastic_holes.svg, set Engraving Depth to 0.1\".\nMill the part.\nTo mill the next acrylic part, use the same placement and material size as the last operation, but use these files:\nvette_plastic_flip_outside.svg\nvette_plastic_flip_engrave.svg\nvette_plastic_flip_holes.svg\nAnd follow these instructions:\nChoose the bit 1/8\" FEM Acrylic for all files.\nFor all files under \u201cAdvanced\u201d, set \"Scale from\" to \u201cDocument bounds\u201d.\nFor vette_plastic_flip_outside.svg, unclick the \u201cEngraving\u201d option.\nFor vette_plastic_flip_engrave.svg, unclick the \u201cCutout\u201d option.\nFor vette_plastic_flip_engrave.svg, set Engraving Depth to 0.21\u201d.\nFor vette_plastic_flip_holes.svg, unclick the \u201cCutout\u201d option.\nFor vette_plastic_flip_holes.svg, set Engraving Depth to 0.1\u201d.\nMill the part.", "step_imgs": ["https://cdn.instructables.com/FIS/OAMR/JT91JZYS/FISOAMRJT91JZYS.LARGE.jpg", "https://cdn.instructables.com/FNT/BOGP/JT91K042/FNTBOGPJT91K042.LARGE.jpg", "https://cdn.instructables.com/FB5/5AQY/JT91K093/FB55AQYJT91K093.LARGE.jpg", "https://cdn.instructables.com/FS6/TJ3C/JT91K0EL/FS6TJ3CJT91K0EL.LARGE.jpg", "https://cdn.instructables.com/F96/M5SD/JT91K0KU/F96M5SDJT91K0KU.LARGE.jpg", "https://cdn.instructables.com/FFB/59NJ/JT91K0NB/FFB59NJJT91K0NB.LARGE.jpg"], "step_title": "Step 5: Mill the Acrylic Parts"}, {"step": 6, "steps_text": "The plywood can be a little fuzzy after milling. Give the plywood pieces a quick sanding with the 220 and 400 sandpaper before glue-up.\nPlace a dowel pin in each of the three holes indicated in one of the images shown here.\nSpread a little bit of wood glue on the other piece of plywood (a little goes a long way). Squeeze the two pieces of plywood together, using the dowel pins to align the two halves. The dowel pins should stick out a little on both ends.\nClamp the two pieces together. Clean any glue that squeezes out with a wet paper towel. Allow to dry overnight.\nPlace the red pieces of milled acrylic on a flat surface, holes side up. Spray the adhesive on the acrylic surfaces.\nFasten a piece of acrylic on both sides of the plywood car. The acrylic should line up with the dowel pins that are sticking out. Clamp the assembly with spring clamps. Allow to dry overnight.\nWhen everything is dry, sand all the outer edges and inside the window with 220 sandpaper. Then sand everywhere with 400 sandpaper, including the acrylic surfaces. You can continue to sand with higher and higher grits to get a smoother finish.", "step_imgs": ["https://cdn.instructables.com/FP3/FZY6/JT91K0PF/FP3FZY6JT91K0PF.LARGE.jpg", "https://cdn.instructables.com/FME/RKR0/JT91K0R2/FMERKR0JT91K0R2.LARGE.jpg", "https://cdn.instructables.com/F0J/XBUE/JT91K0WI/F0JXBUEJT91K0WI.LARGE.jpg", "https://cdn.instructables.com/F00/8Q55/JT91K11B/F008Q55JT91K11B.LARGE.jpg", "https://cdn.instructables.com/FQK/5QT9/JT91K13Y/FQK5QT9JT91K13Y.LARGE.jpg", "https://cdn.instructables.com/FTY/Z24H/JT91K16R/FTYZ24HJT91K16R.LARGE.jpg", "https://cdn.instructables.com/F2U/8XFW/JT91K18G/F2U8XFWJT91K18G.LARGE.jpg", "https://cdn.instructables.com/FJO/LCBL/JT91K19H/FJOLCBLJT91K19H.LARGE.jpg", "https://cdn.instructables.com/FPO/E6WC/JT91K1C4/FPOE6WCJT91K1C4.LARGE.jpg"], "step_title": "Step 6: Assemble and Sand the Car"}, {"step": 7, "steps_text": "Obviously not everyone has access to a wood lathe with a wax-polishing wheel attachment, but if you do, this is the recommended way to finish your Bantmobile. Just a few minutes on each side using only the Tripoli Polishing Buffing Compound leaves an amazing glass-like finish. It also has the added benefit of softening all of the sharp edges of the acrylic. In the image here, the car in the back is sanded and waxed but the one in the front is just sanded. Big difference!", "step_imgs": ["https://cdn.instructables.com/FUY/ECRV/JT91K1E6/FUYECRVJT91K1E6.LARGE.jpg"], "step_title": "Step 7: Wax the Acrylic (Optional)"}, {"step": 8, "steps_text": "Put a rubber O-ring around the outer edge of each of the white door rollers.\nPut one roller onto each binding barrel, then put one nylon spacer on each binding barrel.\nSlide each binding barrel into the holes in the wooden car body. Then place a nylon spacer onto each binding barrel.\nIf the holes are clogged with dried wood glue, clear them out with a drill and \u00bc\" drill bit.\nPlace a roller onto each binding barrel and screw in the binding barrel screws with a flathead screwdriver. Do not over-tighten \u2014 make sure the wheels spin freely.\nThat\u2019s it, you\u2019re ready to roll!", "step_imgs": ["https://cdn.instructables.com/FE6/J245/JT91K1FE/FE6J245JT91K1FE.LARGE.jpg", "https://cdn.instructables.com/FYE/P6SC/JT91K1G9/FYEP6SCJT91K1G9.LARGE.jpg", "https://cdn.instructables.com/FFM/UFBO/JT91K1HU/FFMUFBOJT91K1HU.LARGE.jpg", "https://cdn.instructables.com/FNN/7DZW/JT91K1LI/FNN7DZWJT91K1LI.LARGE.jpg", "https://cdn.instructables.com/F3H/HO6M/JT91KZFG/F3HHO6MJT91KZFG.LARGE.jpg"], "step_title": "Step 8: Assemble the Wheels and Roll"}], "channel": ""}, {"category": "", "description": "Windup Bunny 2 is a dual floating pinion all wheel drive update to my original Windup Bunny of years ago. Even though Windup Bunny 2 is larger (1.5 times) and heavier (120 grams versus 64 grams) than the original Windup Bunny, it runs faster and further thanks to its dual floating pinion / rotating pinion gear carriage design along with a stronger spring.\nI've designed rear wheel drive floating pinion models before that utilize both gravity and rotational momentum in order to disengage the rear axle from the spring motor once the spring motor energy is depleted. Windup Bunny 2 is more complicated in that it is all wheel drive thus both the rear and front axles must disengage from the spring motor in order to coast and / or function as a push / pull toy. In order to accomplish this, the design incorporates a rotating dual floating pinion carriage with a rear mass heavy enough to disengage both the front and rear axles from the spring motor once the spring motor energy is depleted.\nWindup Bunny 2 is another favorite of our kids and grandkids, providing both a windup and push / pull toy for the older and younger family members. And while much sturdier than the original Windup Bunny, it does require patience and finesse to print, assemble and test.\nAs usual, I probably forgot a file or two or who knows what else, so if you have any questions, please do not hesitate to point them out as I do make mistakes in plenty.\nDesigned using Autodesk Fusion 360, sliced using Cura 3.5.0, and printed in PLA and Tough PLA on an Ultimaker 2+ Extended and an Ultimaker 3 Extended.", "title": "Windup Bunny 2 With a PLA Spring Motor and Floating Pinion Drive", "url": "https://www.instructables.com/id/Windup-Bunny-2/", "section": "technology", "steps": [{"step": 1, "steps_text": "I purchased four 31mm I/D by 3.5mm section O-Rings for the \"tires\".\nPlease refer to the file \"Windup Bunny 2.pdf\" for the parts count and settings.\nPrior to assembly, I test fit and trimmed, filed, sanded, etc. all parts as necessary for smooth movement of moving surfaces, and tight fit for non moving surfaces. If you decide to make your own Windup Bunny 2, depending on the colors you chose, your printer model and your printer settings, more or less trimming, filing and/or sanding may be required. I carefully filed all edges that contacted the build plate to make absolutely certain that all build plate \"ooze\" was removed and that all edges were smooth, especially the gear teeth. I used small jewelers files and plenty of patience to perform this step. I also used 6mm by 1 right hand threaded taps and dies to prepare the threaded parts prior to assembly.", "step_imgs": [], "step_title": "Step 1: Purchase, Print and Prepare the Parts."}, {"step": 2, "steps_text": "I assembled the Floating Pinion Carriage as follows:\nPositioned \"Gear, Idler, Front (8, 1.5).stl\" and \"Gear, Idler, Rear (8, 1.5).stl\" onto \"Carriage, Left.stl\".\nPositioned \"Carriage, Right.stl\" onto the carriage assembly, then secured carriage right in place with two \"Axle, Carriage.stl\".\nThreaded \"Bolt, Carriage.stl\" into the assembly.\nWith the floating pinion carriage assembled, I made sure the pinions rotated freely in the carriage.", "step_imgs": ["https://cdn.instructables.com/FSM/DE70/JT91LXHX/FSMDE70JT91LXHX.LARGE.jpg", "https://cdn.instructables.com/FT2/K0I4/JT91LXM8/FT2K0I4JT91LXM8.LARGE.jpg", "https://cdn.instructables.com/FJD/EYK7/JT91LXVX/FJDEYK7JT91LXVX.LARGE.jpg", "https://cdn.instructables.com/FVI/UOTT/JT91LY0V/FVIUOTTJT91LY0V.LARGE.jpg", "https://cdn.instructables.com/FK4/C9EK/JT91LY21/FK4C9EKJT91LY21.LARGE.jpg", "https://cdn.instructables.com/FYU/G1G1/JT91LY25/FYUG1G1JT91LY25.LARGE.jpg", "https://cdn.instructables.com/F8D/QTUE/JT91LY4G/F8DQTUEJT91LY4G.LARGE.jpg"], "step_title": "Step 2: Assemble the Floating Pinion Carriage."}, {"step": 3, "steps_text": "To assemble the Frames, I performed the following steps:\nPositioned \"Knob and Axle.stl\" into \"Frame, Left.stl\".\nPressed \"Spring.stl\" onto \"Knob and Axle.stl\" while positioning the spring end onto the spring mount in \"Frame, Left.stl\".\nPressed \"Pawl.stl\" onto \"Knob and Axle.stl\".\nPositioned \"Gear, Pawl (40, 1.5).stl\" onto \"Pawl.stl\".\nPositioned \"Gear, Compound ((8, 1.5), (40, 1.5)).stl into the carriage assembly.\nSlid the carriage assembly onto the frame assembly.\nSecured \"Frame, Right.stl\" onto the assembly using three \"Bolt, Frame.stl\".\nSecured \"Frame, Left.stl\" using three \"Bolt, Frame.stl.\nWith the frames assembled, I made sure the spring motor functioned properly, and that the carriage assembly rotated freely.", "step_imgs": ["https://cdn.instructables.com/FNA/IHFT/JT91M417/FNAIHFTJT91M417.LARGE.jpg", "https://cdn.instructables.com/F72/HVNF/JT91M43G/F72HVNFJT91M43G.LARGE.jpg", "https://cdn.instructables.com/FBG/CLNW/JT91M45P/FBGCLNWJT91M45P.LARGE.jpg", "https://cdn.instructables.com/FII/94GA/JT91M480/FII94GAJT91M480.LARGE.jpg", "https://cdn.instructables.com/FHF/VVQ4/JT91M487/FHFVVQ4JT91M487.LARGE.jpg", "https://cdn.instructables.com/F16/21PE/JT91M48C/F1621PEJT91M48C.LARGE.jpg", "https://cdn.instructables.com/FWN/3APR/JT91M48G/FWN3APRJT91M48G.LARGE.jpg", "https://cdn.instructables.com/FCZ/U2RI/JT91M48L/FCZU2RIJT91M48L.LARGE.jpg", "https://cdn.instructables.com/FS0/M3BN/JT91M48O/FS0M3BNJT91M48O.LARGE.jpg", "https://cdn.instructables.com/FOF/2M2W/JT91M48U/FOF2M2WJT91M48U.LARGE.jpg", "https://cdn.instructables.com/FUX/22XD/JT91M4FR/FUX22XDJT91M4FR.LARGE.jpg", "https://cdn.instructables.com/FGQ/D2XD/JT91M4IQ/FGQD2XDJT91M4IQ.LARGE.jpg", "https://cdn.instructables.com/FUA/GTZL/JT91M4L1/FUAGTZLJT91M4L1.LARGE.jpg", "https://cdn.instructables.com/FHO/2LFY/JT91M4NA/FHO2LFYJT91M4NA.LARGE.jpg", "https://cdn.instructables.com/FJD/JAAT/JT91M4PL/FJDJAATJT91M4PL.LARGE.jpg", "https://cdn.instructables.com/F0D/VHHZ/JT91M4RU/F0DVHHZJT91M4RU.LARGE.jpg", "https://cdn.instructables.com/F7B/REMB/JT91M4U3/F7BREMBJT91M4U3.LARGE.jpg"], "step_title": "Step 3: Assemble the Frames."}, {"step": 4, "steps_text": "To add the Wheel Axles and Wheels, I performed the following steps:\nWrapped the four O-Rings on each of the four wheels.\nPressed \"Gear, Axle, Front (8, 1.5).stl\" onto \"Axle, Front.stl\" exactly 21.20mm from one end of \"Axle, Front.stl\". If the gear was not tight on the axle, I used a small dot of cyanoacrylate glue to secure it in place.\nPressed \"Gear, Axle, Rear (8, 1.5).stl\" onto \"Axle, Rear.stl\" exactly 25.20 mm from one end of \"Axle, Rear.stl\". If the gear was not tight on the axle, I used a small dot of cyanoacrylate glue to secure it in place.\nPositioned the front axle assembly between the left and right frames such that the gear aligns with \"Gear, Idler, Front (8, 1.5).stl\".\nPressed one \"Wheel, Front.stl\" onto the front axle assembly, with the axle flush with the wheel outer surface.\nPressed the remaining \"Wheel, Front.stl\" onto the axle assembly, 180 degrees out of phase from the first wheel, with the axle flush with the wheel outer surface.\nPositioned the rear axle assembly between the left and right frames such that the gear aligns with \"Gear, Idler, Rear (8, 1.5).stl\".\nPressed one \"Wheel, Rear.stl\" onto the rear axle assembly, with the axle exactly 4mm proud of the wheel outer surface.\nPressed the remaining \"Wheel, Rear.stl\" onto the rear axle assembly, with the axle exactly 4mm proud of the wheel outer surface.\nWith the wheel axles and wheels assembled, I made sure that both the front and rear axles rotated freely.", "step_imgs": ["https://cdn.instructables.com/FA8/3CZJ/JT91MGXZ/FA83CZJJT91MGXZ.LARGE.jpg", "https://cdn.instructables.com/FB3/TJDF/JT91MH0N/FB3TJDFJT91MH0N.LARGE.jpg", "https://cdn.instructables.com/F13/YYQP/JT91MH6K/F13YYQPJT91MH6K.LARGE.jpg", "https://cdn.instructables.com/FET/5ZPF/JT91MH6Q/FET5ZPFJT91MH6Q.LARGE.jpg", "https://cdn.instructables.com/F62/5ET5/JT91MH6V/F625ET5JT91MH6V.LARGE.jpg", "https://cdn.instructables.com/F2L/7GGL/JT91MH73/F2L7GGLJT91MH73.LARGE.jpg", "https://cdn.instructables.com/FYD/G4Z1/JT91MH7Y/FYDG4Z1JT91MH7Y.LARGE.jpg", "https://cdn.instructables.com/F8K/S84H/JT91MH8A/F8KS84HJT91MH8A.LARGE.jpg", "https://cdn.instructables.com/F7T/WVAD/JT91MH8I/F7TWVADJT91MH8I.LARGE.jpg", "https://cdn.instructables.com/FKV/87EL/JT91MH8R/FKV87ELJT91MH8R.LARGE.jpg", "https://cdn.instructables.com/FEC/O62D/JT91MH8Y/FECO62DJT91MH8Y.LARGE.jpg", "https://cdn.instructables.com/FB6/8LR8/JT91MH94/FB68LR8JT91MH94.LARGE.jpg"], "step_title": "Step 4: Add the Wheel Axles and Wheels."}, {"step": 5, "steps_text": "I performed the following steps for Final Assembly:\nPositioned \"Foot, Right.stl\" onto the assembly and secured in place with one \"Axle, Foot.stl\" and one \"Hub, Foot.stl\".\nPositioned \"Foot, Left.stl\" onto the assembly and secured in place with the remaining \"Axle, Foot.stl\" and remaining \"Hub, Foot.stl\".\nAnd that is how I printed and assembled Windup Bunny 2.\nI hope you enjoy it!", "step_imgs": ["https://cdn.instructables.com/FP7/M4RR/JT91MICM/FP7M4RRJT91MICM.LARGE.jpg", "https://cdn.instructables.com/FBP/L9E2/JT91MICQ/FBPL9E2JT91MICQ.LARGE.jpg", "https://cdn.instructables.com/FC7/FW80/JT91MICU/FC7FW80JT91MICU.LARGE.jpg", "https://cdn.instructables.com/FAU/CBFM/JT91MID4/FAUCBFMJT91MID4.LARGE.jpg", "https://cdn.instructables.com/FZ4/A2VN/JT91MID7/FZ4A2VNJT91MID7.LARGE.jpg", "https://cdn.instructables.com/FAL/CYJ1/JT91MIDB/FALCYJ1JT91MIDB.LARGE.jpg", "https://cdn.instructables.com/FLE/NMKW/JT91MIDI/FLENMKWJT91MIDI.LARGE.jpg", "https://cdn.instructables.com/FWC/7J2B/JT91MIDK/FWC7J2BJT91MIDK.LARGE.jpg", "https://cdn.instructables.com/FYQ/CZ5U/JT91MIDQ/FYQCZ5UJT91MIDQ.LARGE.jpg"], "step_title": "Step 5: Final Assembly."}], "channel": ""}, {"category": "", "description": "Ever since my first bench power supply project, I have wanted to build another one which would be much smaller and cheaper. The issue with the first one was that the total cost was over 70$ and it was overpowered for most of my applications. I wanted to have multiple power supplies on my bench so that I can power more than one project at a time but the cost and size didn't allow it.\nSo I decided to build a mini bench power supply. My main goal with this power supply was low cost, small size and visually appealing aesthetic. I wanted it to cost no more that $25. I wanted to have variable current and voltage settings. And I wanted a decent output power of ~ 30 Watts.\nSo follow me along as I take my goals and turn them into a reality. If you like my work, please support me by voting for me and by sharing with you like minded friends.\nFollow me on other platforms for more news and content on upcoming projects\nFacebook: Badar's Workshop\nInstagram: Badar's Workshop\nYoutube: Badar's Workshop", "title": "Mini Bench Power Supply", "url": "https://www.instructables.com/id/Mini-Bench-Power-Supply/", "section": "technology", "steps": [{"step": 1, "steps_text": "I started my design for the power supply with the selection of the switch mode power supply. I found 19 Volt 1.6 Amp laptop chargers in an electronics recycling center. They were small in size and good quality so they were perfect for my mini power supply.\nI chose to use a buck converter with constant current and constant voltage modes as my regulator module. This was easily available and very low cost.\nFor the display, I first purchased the buck converter with the integrated volt/amp meter but the seven segment display was very dim so I scrapped that plan and bought a panel volt/amp meter.\nOnce I had all the parts, I mocked up my design and used an electronic load to perform some testing to see if the power supply can provide the output power I wanted.\nAfter several hours under full load, the thermals were within safe limits so I went ahead with the design.", "step_imgs": ["https://cdn.instructables.com/FER/QQX0/JT91RA6S/FERQQX0JT91RA6S.LARGE.jpg"], "step_title": "Step 1: Design and Testing"}, {"step": 2, "steps_text": "You will need the following parts:\n19V 1.6Amp Laptop Charger eBay\n5A DC - DC Step Down Module CC CV AliExpress\nPanel Volt/Amp Meter AliExpress\nBanana Jack Binding Posts AliExpress\nIEC 320 C8 Panel Socket with Switch AliExpress\n10K Potentiometer AliExpress\n6mm MOS Heat Sink AliExpress\nPotentiometer Knobs AliExpress\nTerminal Connectors\nWires\nYou will also need the 3D Printed and Laser Cut housing which we will talk about in the next step.", "step_imgs": ["https://cdn.instructables.com/F5J/KZ8Z/JT91RAYZ/F5JKZ8ZJT91RAYZ.LARGE.jpg"], "step_title": "Step 2: Parts Required"}, {"step": 3, "steps_text": "For the housing, I wanted to use laser cut plywood as I have never used it before for any of my electronics projects. I also wanted to experiment with living hinges. That being said, I will attach my SolidWorks model and my CorelDraw laser cutter files. If you have access to both a 3D Printer and a laser cutter, you can follow what I did. Otherwise you can 3D Print the entire housing.\nI used 1/8\" plywood for the top and sides of the housing. I used laser cut living hinges to add some of the curvature. I 3D Printed the base as it was the easiest way to secure all the modules to the bottom and to make the power supply serviceable.\nSomething to keep in mind is that the tolerances on the Main Body model are set for laser cutter and not 3D Printing so you would need to experiment with those.\nI experimented with the tolerances on all my files at least 2 to 3 times to get them just right. Your machines may vary hence you would need to experiment a little as well. Having the clips in the base and the cutouts for the push fit panel meter just right is a bit tricky so I would recommend testing them out first separately if possible.", "step_imgs": ["https://cdn.instructables.com/FP4/65L8/JT91RBT9/FP465L8JT91RBT9.LARGE.jpg"], "step_title": "Step 3: Housing Design"}, {"step": 4, "steps_text": "Like I mentioned before, I started off the housing build the right way by first testing all my dimensions. Although it may be worth mentioning that I still ended up redoing the housing 3 times but the testing probably helped avoid redoing it more than three times.\nI laser cut the pieces, cleaned them and sanded them. Then I used superglue to glue them together. Then I 3D Printed the base and I was done. Well all of that times three because I had one dimension wrong and them my living hinge was too weak. For the 3D Printed base I designed clips to hold everything in place and when you design clips, dimensions are very important so I ended up reprinting many times.\nBut once I was done, I tested the fit and despite some minor gaps here and there, I was happy with how it looked.", "step_imgs": ["https://cdn.instructables.com/F95/LAH1/JT91RC7P/F95LAH1JT91RC7P.LARGE.jpg", "https://cdn.instructables.com/FMY/BSB4/JT91RC7O/FMYBSB4JT91RC7O.LARGE.jpg", "https://cdn.instructables.com/FYU/SSYE/JT91RC7N/FYUSSYEJT91RC7N.LARGE.jpg", "https://cdn.instructables.com/F8S/1S1I/JT91RC7M/F8S1S1IJT91RC7M.LARGE.jpg"], "step_title": "Step 4: Housing Construction"}, {"step": 5, "steps_text": "The assembly for builds like these is never too complicated. It just wiring everything together and making it fit.\nSince I designed the housing to be as small as possible, everything will fit in very snugly. I also used connectors and terminals so that I can disassemble everything fairly easily. Its the attention to detail what counts when it comes to good design and build quality. Even though it is much easier to solder every wire, a more professional approach is properly sized connectors with solid crimped wires.\nFirst step is to remove the potentiometers on the buck converter and replace it with jst connectors. Then solder some wires to the panel mount pots and crimp on the jst connectors. Put a heatsink on the voltage regulator.\nNext step is to prepare the psu. Cut open its plastic case and desolder the input and output wires. Solder some wires on the input and output. Take note of the thickness of the wires as these would be the main current carrying wires hence we want to be appropriately sized.\nNext, snap the two module in the base and crimp on the terminals for the binding post and the mains input. Screw in the connections based on the schematic.\nFinally tuck everything in and close the case. A good way to do this is to keep the panel meter and the IEC connector popped out. Once you close the base, tuck in the wires and then push in the two modules.\nLastly, stick some non slip feet on the base so that it doesnt slip on your bench.", "step_imgs": ["https://cdn.instructables.com/F2V/558Q/JT91RD6C/F2V558QJT91RD6C.LARGE.jpg", "https://cdn.instructables.com/FO2/HAO7/JT91RD6B/FO2HAO7JT91RD6B.LARGE.jpg", "https://cdn.instructables.com/FYS/3KWL/JT91RD6A/FYS3KWLJT91RD6A.LARGE.jpg", "https://cdn.instructables.com/FBV/NTXV/JT91RD68/FBVNTXVJT91RD68.LARGE.jpg", "https://cdn.instructables.com/FFO/TAL1/JT91RD6I/FFOTAL1JT91RD6I.LARGE.jpg", "https://cdn.instructables.com/FQI/6ODR/JT91RD69/FQI6ODRJT91RD69.LARGE.jpg"], "step_title": "Step 5: Main Assembly"}, {"step": 6, "steps_text": "Once I was done with assembly, I wanted to test it out but unfortunately I wired my voltage regulator in backwards and fried it. So I had to use my backup. Once I did that, I was able to vary the voltage and control the current as expected.\nTesting the supply did reveal some flaws. One of the major flaw is that the voltage and current adjustment doesnt span the full range of the pots and thats because I am not using the full range of the driver. That just makes the adjustment very finicky. But I have some smaller value pots in the mail and will be testing with them to modify the circuit for my current and voltage range. I also have some knobs for the pots in the mail. For now I just 3D Printed some but will be getting the actual ones soon which will make it more ergonomic.\nTesting also revealed that drawing more power than the power supply can handle results in a shutdown followed by a self reset, which is a neat feature to have as the power supply is smart enough not to damage itself if it is shorted out.", "step_imgs": ["https://cdn.instructables.com/F1P/1SRR/JT91RE4I/F1P1SRRJT91RE4I.LARGE.jpg"], "step_title": "Step 6: Testing"}, {"step": 7, "steps_text": "Overall I am very happy with how it looks and I will be using it in the future to test it out in practical situations. This is just the first version and I will be working on it to make improvements. I would love to hear from your guys what you think about it. Maybe suggest areas where I can improve. My eventual goal is to turn this into a marketable product and would love some feedback.\nAnyways, thank for following along and once again, please support my work by voting for me. All the help is highly appreciated.", "step_imgs": ["https://cdn.instructables.com/FYJ/1292/JT91REHI/FYJ1292JT91REHI.LARGE.jpg", "https://cdn.instructables.com/FGE/7D3J/JT91REHJ/FGE7D3JJT91REHJ.LARGE.jpg"], "step_title": "Step 7: Conclusion"}], "channel": ""}, {"category": "", "description": "GRADES 6 - 8, Social Studies, Science, Engineering\nLesson Overview\nCam toys (aka automata) use hand-powered mechanisms to create cyclical motions that animate a scene. Students design and create cam toy machines with moving objects/characters that symbolize abstract concepts and represent dynamic situations.\nThe lesson is structured to follow the Engineering Design Process (EDP), a process widely used by designers in any discipline to tackle challenges. While there are many ways that people solve problems, designers often opt to use the EDP because it offers a roadmap for the project journey and will help them work efficiently and effectively. The process requires that the designer first clearly Define the challenge, then Learn about and Explore existing solutions, before beginning the design stage. This understanding of the problem, combined with the Design step requirement of generating at least 3 different ideas, allows for a rich set of creative solutions to draw from in choosing a design direction. The designer is now ready to prototype the solution in the Create step. An important feature of the EDP is the expectation that the designer will build 2 or more prototypes after the direction is set. This is done by cycling through the Create and Observe/Improve steps a few times. It is recommended that students have an opportunity for at least 2 design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second and later times through the cycle, they can fix flaws and adopt successful ideas from classmates. Hopefully, the designer will have an opportunity to Reflect on the product they created and the process they followed, looking for learning habits and insights that will help in future challenges. The Share step involves documentation, publishing, or presenting to affirm the project and inspire others.\nEssential Question(s)\nHow can creating metaphors be used to increase understanding and enhance communication skills?\nHow can movement and imagery be used to create metaphors for social, scientific, and other academic concepts?\nSkills Practiced:\nAnalysis and Abstract Modeling\nMechanical design\nEngineering Design\n3D modeling in Tinkercad\nTime Required: 3-4 Hours\nMaterials Needed:\nSketch paper\n3D printer and filament\nCraft materials such as (cardstock, foam sheets, markers, hot glue)\nFlexible PVC tubing, \u00bc\u201d inside diameter\nWood dowels, \u00bc\u201d diameter (optional, to reduced 3D printing time)", "title": "Mechanical Cam Toys", "url": "https://www.instructables.com/id/Mechanical-Cam-Toys/", "section": "technology", "steps": [{"step": 1, "steps_text": "Context\nCreating physical objects can be an engaging and useful way for students to process their learning. Some physical models are directly representative of the academic content, such as a depiction of a sound wave, or a model of a cell. Abstract concepts, like a balance of power, ecological interactions, or societal changes, are also well-suited to modeling. Students practice higher order thinking skills when creating metaphors and symbols for abstract concepts. Coming up with imagery for social, scientific, or other academic concepts pushes the student to research the topic and develop a deeper understanding of it. The addition of motion, as in the Cam Toy activity, can make the project even more engaging and lead to creative, entertaining products.\nCams are rotating shapes that push on / rub against mechanical elements to create other motions. One rotating shaft can power many cams, and each can create a different motion in its associated mechanical element. Students decide which of these motions is best for the specific concepts they want to represent. In this project, students design the cams and moving objects in Tinkercad for fabrication on a 3D printer or laser cutter. Backgrounds or other static objects can be designed in Tinkercad and fabricated in a variety of ways for a more elaborate Cam Toy machine.\nChallenge: Design and build a Cam Toy with motions and scenery that represent concepts related to the specified topic. Students may work in groups of 2 or 3. A Cam Toy base, rotating shaft, and a few cam designs are provided at this Tinkercad link. The base accommodates 2 motions. Students can modify the models to make smaller or larger machines.\nCriteria:\nIncludes 2 characters/objects that move when the toy is operated. Possible motion types are:\nUp-down\nSpin\nSide-to-side\nIncludes 1 static object that is a background, piece of scenery, or other objects.\nThe motions and scenery must represent concepts related to the specified topic.\nConstraints:\nThe 2 motions must be different. The same type of motion can be used twice if the 2 motions differ either in frequency or magnitude. (For example, if there are 2 up-down motions 1 can have 2 rises/falls per cycle while the other has 1. For spinning, 1 can spin at a faster speed than the other.\nThe appearance and motions of the characters and objects must communicate the intended concept.\nStudent Product / Learning Goals\nStudents will choose motions that express physical or abstract concepts. They will design and build a working cam toy that expresses these concepts as a representative model or metaphor.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research:\nReview the motions and mechanisms that are easily implemented in the Cam Toy. Show examples of the 3 motions that are simplest to build (up-down, spin, and side-to-side), An online search using the search term \u201cstudent automata\u201d will yield many videos. The Cabaret Mechanical Theater group in the UK has been creating fine wooden automata for decades. Their site is https://cabaret.co.uk/\nPick a topic for the class and see that each student group has a concept to represent in their Cam Toy.\n2. Collect:\nHave students document their research on the automata, noting mechanisms and features that they found interesting or may be relevant to their topic. Students can keep notes on the things they learned or that intrigued them on an inspiration page such as a blog, Google Docs, a notebook, poster, etc.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "1. Design:\nStudents work together to brainstorm ideas on how to represent the topic they are assigned using the mechanical motions commonly done in automata. Use the inspiration page as a reference and create a design that is simple enough to build while still being complex enough to communicate an idea. Backgrounds, scenery and other static objects can be very helpful in communicating the idea. The design process is most effective when designers create at least 3 different ideas.\nOption A: draw designs on how the Cam Toy will look and/or function. Use paper, whiteboard, drawing apps.\nOption B: Build simple models using crafting materials (paper, glue, clay, pipe cleaners, etc.) to show look and/or function\nOption C: Let the students play around in Tinkercad to get familiar with the program and make practice models.\nExample project for Social Studies: Systems and Interactions and in the United States Government.\nOne concept to explore is the differences between the 2 parts of Congress, House of Representatives and the Senate.\nThe House has 435 members as opposed to 100 in the\nSenate The length of term in the House is 2 years, while the Senate term is 6 years.\nThe Senate has the power to confirm judges, Cabinet members etc, while the House does not.\nThis design shows the differences in term lengths and includes a non-traditional cam shape - a triangle. In one rotation of the camshaft, the triangle cam will move the House up-down three times while the eccentric circular cam will move the Senate up-down once. The student may express that one rotation of the camshaft represents 6 years.\nExample projects for Earth Science:\nHurricanes. One factor in the creation of a hurricane is warm air rising off the ocean. This is shown with up/down motion. The spinning storm is shown with rotary motion.\nSea breezes on the beach. They are caused by heat rising from warm beach sand and can be shown with up/down motion. The breeze comes in from the ocean to fill the void from the rising air; it is shown with side-to-side motion or rotary motion.\nLand breeze at the beach during nighttime - a reverse of the previous example.\n2. Choose a Direction: Have the students choose a design that meets the criteria of the project. Consider also checking it against the \u201cThing\u201d Checklist (this checklist can be found in the Resource section of the Lesson).", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "Sketch a front view of the overall Cam Toy idea including the base, the mechanism pieces, characters, and background. It can be helpful to lay it out on graph paper to get the sizes correct.\nList the motions you expect to create and draw the appropriate cams.\nFor the up-down motion, you need a circle cam with an off-center hole\nFor the spinning motion draw a circle cam with a centered hole\nFor a side-to-side motion, you need 2 circle cams with off-center holes. Make sure the D-shaped holes are reversed\nCreate models of the base and all mechanical parts on Tinkercad\nSamples of the Cam Toy base and mechanism parts https://www.tinkercad.com/things/1LklmG8A0Ua The next instructions will show you how to make them on your own.\nAll dimensions for a basic toy are included in the videos here. If you want to design from a CAD drawing, you will find dimensioned drawings for all Cam Toy parts (Base, Various Cams, Rotating Handle, and Cam Followers) this document.\nOption to reduce 3D printing time: Choose whether you will use wood dowels for the Cam Shafts and/or Cam follower shafts. Use \u00bc\u201d wood dowels for the drive shaft and the cam followers.\nMake the Cam Toy base. See video and/or the dimensioned drawing for a starter design. Students may want to modify this design to accommodate more mechanisms.\nMake mechanism parts (cams, drive shaft, cam followers) See video and/or drawing for a starter design. If using a wood dowel for the camshaft, then holes in cams should be circles, not \u201cDs\u201d, and they will need to be glued on.\nMake the characters/objects and all scenery/props using craft materials or 3D printer\nAssemble and align all the parts and use PVC tubing to hold them in place Will create assembly video", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "1. Play with the Cam Toys! See if others can figure out what they mean before they are explained. Encourage students to share their creations and get feedback from peers.\n2. It is recommended that students have an opportunity for at least 2 design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\n3. Provide stopping points for the class where students can observe, evaluate, and document their design.\n4. Give students a chance to record their thoughts and progress as they work through product iteration cycles. This can serve as a formative assessment.\n5. Follow instructions in the Create Step as needed for the next iteration.", "step_imgs": [], "step_title": "Step 5: Observe, Improve, Iterate"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "Give the students an opportunity to share their Cam Toy with the class or some other community. Options for sharing include presentation, demonstration, blog or online post, video clip, physical display, family events, and maker fairs, or in the use for which it was intended.", "step_imgs": [], "step_title": "Step 7: Share"}, {"step": 8, "steps_text": "Create CamToys for physical and abstract concepts such as:\nScience\nChemical reactions/phase changes of matter\nPollination/ plant growth\nCell processes\nEffects of climate change/rising sea level\nMath\nMathematical relationships\nSocial Studies\nPersonal growth - transformations in environment/appearance/ skills\nChange in power balance before/after conflict/event\nAmerican westward expansion\nMedieval life and social structures\nUnderstanding of race in the US\nWomen\u2019s roles in society\nReactions to social stresses such as taxes/tariffs/ cultural oppression/ work conditions\nCitizenship and stewardship examples\nELA\nPersonal growth - transformations in environment/appearance/ skills\nScenes from a story/novel/play/history\nAnimated character from story/novel/play/history\nWorld Languages\nCultural norms in world cultures\nStudents 13 and older can learn how to make a digital animation of a mechanical design using Fusion 360 (free for students and teachers):\nWe hope you had fun designing and sharing your Cam Toys. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in?\nSend us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nLists of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 8: Project Extensions"}], "channel": ""}, {"category": "", "description": "This tutorial is about making a little shape that creates a lot of reflections inside. With holes on every angle for light and a little window to see through, you can watch this infinity proces in your hand! The idea came from watching infinity mirror video's and trying to think of any variation on them. Hope you like it! :)", "title": "Infinity Mirror Pentagon Shape", "url": "https://www.instructables.com/id/Infinity-Mirror-Pentagon-Shape/", "section": "technology", "steps": [{"step": 1, "steps_text": "i made a vector drawing and made an order online to lasercut these shapes from 3mm acrylic sheet mirror. Once received, we can start! :)", "step_imgs": ["https://cdn.instructables.com/FXG/CW0L/JT91LFXH/FXGCW0LJT91LFXH.LARGE.jpg", "https://cdn.instructables.com/F3R/9KNZ/JT91LFZ7/F3R9KNZJT91LFZ7.LARGE.jpg"], "step_title": "Step 1: Make or Order the 3mm Lasercut Acrylic Mirror Parts"}, {"step": 2, "steps_text": "the assembling is pretty easy this way. I made a 2cm strip of thick paper and scored this strip. A path of 2mm wide needed to be scored in the middle. apply double sided tape on the other side and make the folds.", "step_imgs": ["https://cdn.instructables.com/FZR/53CN/JT91LG0X/FZR53CNJT91LG0X.LARGE.jpg", "https://cdn.instructables.com/F2V/92MO/JT91LG43/F2V92MOJT91LG43.LARGE.jpg", "https://cdn.instructables.com/FXG/MR6F/JT91LG4F/FXGMR6FJT91LG4F.LARGE.jpg", "https://cdn.instructables.com/FPV/U9GO/JT91LG93/FPVU9GOJT91LG93.LARGE.jpg", "https://cdn.instructables.com/F8R/8YGD/JT91LGAL/F8R8YGDJT91LGAL.LARGE.jpg"], "step_title": "Step 2: Make a Simple Paper Strip With Double Sided Tape to Construct the Infinity Polygon Shape"}, {"step": 3, "steps_text": "cut the paper strip to lengths of the pentagon side and work your way trough. Keep the 3 with the viewing hole side for last. It\u2019s fun to see the reflections increasing with every element you assemble :)\nOnce the job is done, look inside and enjoy!", "step_imgs": ["https://cdn.instructables.com/FTK/L64T/JT91LGF6/FTKL64TJT91LGF6.LARGE.jpg", "https://cdn.instructables.com/FQZ/AV05/JT91LGFI/FQZAV05JT91LGFI.LARGE.jpg", "https://cdn.instructables.com/FD0/NFUU/JT91LGFV/FD0NFUUJT91LGFV.LARGE.jpg", "https://cdn.instructables.com/F5M/4440/JT91LGHL/F5M4440JT91LGHL.LARGE.jpg", "https://cdn.instructables.com/F9Q/94AA/JT91LGHY/F9Q94AAJT91LGHY.LARGE.jpg"], "step_title": "Step 3: Assembling Time!"}], "channel": ""}, {"category": "", "description": "In this quick tutorial I will show you guys how to make a simple led strip using copper tape and some smd led's with little bit of soldering work.This project is quick and can be useful too.As this led strip runs on very commonly used 3.7V power supply it can be easily maintained.I made this because i want this type of led strip in my upcoming project on instructables.\nJust ,follow the below mentioned step and make your own.", "title": "How to Make Led Strip (Copper Tape)", "url": "https://www.instructables.com/id/How-to-Make-Led-Strip-Quick-and-Easy/", "section": "technology", "steps": [{"step": 1, "steps_text": "SMD Led (any color )\nCopper Tape\nMasking Tape\nSoldering Iron and wire\nHobby knife\nTweezers", "step_imgs": ["https://cdn.instructables.com/FIR/3WCS/JT2SKI4X/FIR3WCSJT2SKI4X.LARGE.jpg", "https://cdn.instructables.com/F2G/0UWQ/JT2SKI11/F2G0UWQJT2SKI11.LARGE.jpg"], "step_title": "Step 1: Materials Required"}, {"step": 2, "steps_text": "Copper tape is very flexible and it comes with sticky back so I thought its perfect for our project.\nHere I have a 6mm wide copper tape as i need around 6-8cm of led strip ( You can change the length according to your need) so I took a piece of copper tape of that length.First of all I divided copper tape into 3 equal parts resulting me a final length of 2mm*8cm for reference you can see the above picture.Then I took two pieces of it and stick them to my table using masking tape as you can see in the image.I also marked the points were led's are soldered and also marked the polarity for the led.", "step_imgs": ["https://cdn.instructables.com/FL8/NPSP/JT2SKI8W/FL8NPSPJT2SKI8W.LARGE.jpg", "https://cdn.instructables.com/FUM/LREY/JT2SKIDT/FUMLREYJT2SKIDT.LARGE.jpg", "https://cdn.instructables.com/FR4/9539/JT2SKIET/FR49539JT2SKIET.LARGE.jpg"], "step_title": "Step 2: Working on Copper Tape"}, {"step": 3, "steps_text": "Soldering the led is very easy as you can see in the image i just added little bit of solder on each sides and then with the help of tweezers and soldering iron I soldered the led's in parallel connection.Here I am using 3014 smd led of green color.Take care of polarity.Later I also added jst connector which i completely optional you can solder any connector or wire for power supply .", "step_imgs": ["https://cdn.instructables.com/FQA/MI5F/JT2SKIFT/FQAMI5FJT2SKIFT.LARGE.jpg", "https://cdn.instructables.com/FD9/RPIR/JT2SKIFU/FD9RPIRJT2SKIFU.LARGE.jpg", "https://cdn.instructables.com/F4S/E549/JT2SKI7V/F4SE549JT2SKI7V.LARGE.jpg"], "step_title": "Step 3: Soldering LED's"}, {"step": 4, "steps_text": "This the best led strip for my upcoming project it is easy to build and its runs on 3.7V DC power supply.Here i had used green color led and 3.7v lipo battery as a power supply and we if you remember we had not not removed the sticky cover so you can stick it where ever you want by peeling of the cover.\nI hope you guys liked this project also I have entered this for a tape contest so please vote for me I will really appreciate.Also If you any question about the project please let me know in the comment below.\nTHANK YOU VERY MUCH !", "step_imgs": ["https://cdn.instructables.com/FCF/44B3/JT2SKIVQ/FCF44B3JT2SKIVQ.LARGE.jpg", "https://cdn.instructables.com/F03/6Q8Q/JT2SKITR/F036Q8QJT2SKITR.LARGE.jpg"], "step_title": "Step 4: Results"}], "channel": ""}, {"category": "", "description": "A while ago i found a childs toy with fiberoptics at a dollar store, and started thinking about what i could do with it.\nOne of the crazy ideas i had, was making a tie with the effect of a starry sky.\nI still had some arduino pro mini's, adafruit boards and batteries laying around that would probably fit this project.\nSo as soon as i found a nice wide tie in a pawnshop in my town and found a box which might fit the hardware, i decided to go for it and try and build it.\nThis instructable shows you how i made it.\nIt runs on an arduino pro mini, adafruit powerboost 500 charger, emmerich icr 18650nh-sp and 5 white LED's.\nThe code makes the LED's change brightness random. (The first 40 seconds of the video are 3x speed)", "title": "Starry Sky Led Tie", "url": "https://www.instructables.com/id/Starry-Sky-Led-Tie/", "section": "technology", "steps": [{"step": 1, "steps_text": "I'm using the following hardware:\n- PCB with Ice white LEDs and 220 Ohm resistors.\n- Arduino pro mini (i used a knockoff) https://store.arduino.cc/arduino-pro-mini\n- Adafruit Powerboost 500 charger https://store.arduino.cc/arduino-pro-mini\n- Emmerich Li-ion accu ICR-18650NH-SP https://store.arduino.cc/arduino-pro-mini\n- Optic fibers (in different sizes)", "step_imgs": ["https://cdn.instructables.com/F77/NFC3/JT91JH7R/F77NFC3JT91JH7R.LARGE.jpg", "https://cdn.instructables.com/F49/OKHU/JT91JH80/F49OKHUJT91JH80.LARGE.jpg"], "step_title": "Step 1: Schematics and Hardware"}, {"step": 2, "steps_text": "I cut a strip off a PCB to hold the LED's and used the LED pins to solder it to the main PCB.\nConnected all the cathodes (-) to GND, and used half of the pins to solder it stuck to the main PCB.\nConnected all the anodes (+) to resistors, and with cables to the arduino.\nLEDs each have to be connected to one of the following PWM ports: 3, 5, 6, 9, 10, 11\nSilly me made lots of mistakes with this project and forgot to check the correct PWM ports, so i had to resolder a few later. Tested with High/Low so i only noticed this later.\nI started with 7 LED's, but there were only 6 PWM ports and one of the LED's i resoldered died. I just kept the 5 working LED's and am not using the 6th.", "step_imgs": ["https://cdn.instructables.com/FLA/J4O2/JT4TTBW7/FLAJ4O2JT4TTBW7.LARGE.jpg", "https://cdn.instructables.com/FS1/IPR0/JT4TTB7A/FS1IPR0JT4TTB7A.LARGE.jpg", "https://cdn.instructables.com/FNE/N1QV/JT4TTB8I/FNEN1QVJT4TTB8I.LARGE.jpg", "https://cdn.instructables.com/F6P/WVGD/JT4TTBA8/F6PWVGDJT4TTBA8.LARGE.jpg", "https://cdn.instructables.com/FLV/UK5O/JT4TTBBL/FLVUK5OJT4TTBBL.LARGE.jpg", "https://cdn.instructables.com/FDZ/WSP1/JT4TTBBR/FDZWSP1JT4TTBBR.LARGE.jpg", "https://cdn.instructables.com/FLH/4YXJ/JT4TTBDM/FLH4YXJJT4TTBDM.LARGE.jpg", "https://cdn.instructables.com/FR4/0R9Y/JT4TTBFG/FR40R9YJT4TTBFG.LARGE.jpg"], "step_title": "Step 2: Making the PCB Hosting the LED's"}, {"step": 3, "steps_text": "I used a Bosch GRO (like a Dremel) and a drill to cut out the shape of the battery, the button, the micro-usb port, the headers from the Arduino and the optic fibers. (use a dust mask!)\nGlued the battery to the case with 2 bands.\nUsed screws to mount the Adafruit board and the PCB.\nFriction from opening and closing damaged some wires. I had to resolder them and use glue to prevent it from happening again.", "step_imgs": ["https://cdn.instructables.com/FYM/8VGP/JT4TTBFK/FYM8VGPJT4TTBFK.LARGE.jpg", "https://cdn.instructables.com/FW4/HV01/JT4TTBHK/FW4HV01JT4TTBHK.LARGE.jpg", "https://cdn.instructables.com/FWS/38H5/JT4TTBFO/FWS38H5JT4TTBFO.LARGE.jpg", "https://cdn.instructables.com/F0D/9FVW/JT4TTBLU/F0D9FVWJT4TTBLU.LARGE.jpg", "https://cdn.instructables.com/FJV/8MY4/JT4TTBLW/FJV8MY4JT4TTBLW.LARGE.jpg", "https://cdn.instructables.com/FHS/A3RU/JT4TTBMO/FHSA3RUJT4TTBMO.LARGE.jpg", "https://cdn.instructables.com/FVX/F3SH/JT4TTBMJ/FVXF3SHJT4TTBMJ.LARGE.jpg"], "step_title": "Step 3: Making the Box"}, {"step": 4, "steps_text": "Removed the stitching from the bottom part of the tie to fit the rubber sheet.\nTo hide the hardware and still be able to access it if needed i decided to use a zipper.\nI'm no good with a sewing machine, so my sweet mom put a zipper on the back of the tie.\nAfter that was done, i glued the rubber sheet in the tie. I was afraid of using too much glue that would saturate the fabric and be visible from the front, so i tried to even it out and not use too much. Overall it looks good, but at a few places i noticed too much or too little glue, cause it came through the fabric or didn't stick the fabric very well. Fortunately this is only barely visible from close distance in bright light.\nThe box and tie are now done. Time to glue the fiberoptics!", "step_imgs": ["https://cdn.instructables.com/FF3/0THC/JT4TTBJE/FF30THCJT4TTBJE.LARGE.jpg", "https://cdn.instructables.com/FXQ/LULP/JT4TTBM0/FXQLULPJT4TTBM0.LARGE.jpg", "https://cdn.instructables.com/FU8/71Q3/JT4TTBM6/FU871Q3JT4TTBM6.LARGE.jpg"], "step_title": "Step 4: Preparing the Tie"}, {"step": 5, "steps_text": "The toy had one big bundle fiber optic wires that easily broke apart. I tried gluing them one by one at first, but soon noticed it would be better to make small bundles and stick those to the LED at once. That would make it easier to keep it steady till the glue was dry. Messed up the first LED figuring this out.\nBe sure to use a transparent glue! The one i used dried very slow and the fast drying glue i tried on the first LED turned white, making some fibers from the first LED less bright.\nI glued small black rubber sheets to prevent light leaking on top and to separate the LED's.\nOne of the sheets prevented the case from closing so i added a rubber band to keep the cover shut.", "step_imgs": ["https://cdn.instructables.com/FY5/RQIU/JT4TTBMD/FY5RQIUJT4TTBMD.LARGE.jpg", "https://cdn.instructables.com/FZS/Q0Y4/JT4TTBMF/FZSQ0Y4JT4TTBMF.LARGE.jpg", "https://cdn.instructables.com/FZN/RUU5/JT4TTBMH/FZNRUU5JT4TTBMH.LARGE.jpg", "https://cdn.instructables.com/F7Z/GQS1/JT4TTBNH/F7ZGQS1JT4TTBNH.LARGE.jpg"], "step_title": "Step 5: Glueing the Fiberoptics"}, {"step": 6, "steps_text": "Starting on the bottom, i pinched holes with a needle and put the fibers through one by one. Each LED's fibers spread random across the tie.\nI glued a black strip on the back that was supposed to go all the way up to the smaller part of the tie to keep the weight of the box, but after i put all the wires through and felt the tension of the wires i decided gluing everything to the tie was a better idea and cut the strip off.\nSince the fiber optic wires from the toy were so short, it was hard fitting them all over the tie. I was limited in positioning the box and had a hard time making everything as flat as i wanted.", "step_imgs": ["https://cdn.instructables.com/FAN/SY9G/JT4TTBNY/FANSY9GJT4TTBNY.LARGE.jpg", "https://cdn.instructables.com/FCR/CFKI/JT4TTBO6/FCRCFKIJT4TTBO6.LARGE.jpg", "https://cdn.instructables.com/F26/RL9W/JT4TTBP2/F26RL9WJT4TTBP2.LARGE.jpg", "https://cdn.instructables.com/FXA/OD8K/JT4TTBP6/FXAOD8KJT4TTBP6.LARGE.jpg", "https://cdn.instructables.com/F9V/PGID/JT4TTBPA/F9VPGIDJT4TTBPA.LARGE.jpg"], "step_title": "Step 6: Putting Fiberoptics Through the Tie"}, {"step": 7, "steps_text": "I glued all the fiber optic wires to the rubber sheet to prevent the wires from getting pulled out of the rubber sheet and to make the tie flat.\nTo make sure i didn't glue the clamp to the tie when putting pressure on it i put some paper in between. It doesn't look that great but works well. And you don't see it when it is closed.\nAfter the glue dried i cut off the wires on the front and cut off a bit off the rubber sheet just above the highest wire, cause the tie was a bit too long.\nPhotos with the white shirt are made before i cut that last bit of rubber off.", "step_imgs": ["https://cdn.instructables.com/FKI/AVN0/JT4TTBPI/FKIAVN0JT4TTBPI.LARGE.jpg", "https://cdn.instructables.com/FTK/91TA/JT4TTBQD/FTK91TAJT4TTBQD.LARGE.jpg", "https://cdn.instructables.com/FR7/YMIZ/JT4TTBU7/FR7YMIZJT4TTBU7.LARGE.jpg", "https://cdn.instructables.com/FIR/5J2D/JT4TTBRM/FIR5J2DJT4TTBRM.LARGE.jpg"], "step_title": "Step 7: Glueing Fiberoptics to the Tie"}, {"step": 8, "steps_text": "Below the code i wrote for the tie.\nAll LED's have a set \" average \" (not actually an average but a middle brightness).\nAs soon as it reaches that average, it will decide with a chance <1/4 to go high, or >3/4 to go to a lower brightness. It also randomly sets a new minimum brightness, maximum brightness, waiting time for minimum and maximum brightness and the speed it increases or decreases every round (1-255) from 5 preset values. Then it will do a cycle till it reaches the average again. Only 2 LED's can be in a high cycle at the same time.\nEvery state is represented by an integer value (1-7) determining if it's going avg-low, low-avg, waiting low, updating, etc.\nFor information about uploading code to the arduino, please have a look at www.arduino.cc\n<p>/*  Starry Sky Tie<br> *  \n *  This is a script to randomly fade 5 LEDs from an average to a lower \n *  or higher brightness with random lower, higher and timing settings \n *  to look like a starry sky when used with fiberoptics.\n *  In this case these will be implemented in a tie.\n *  \n *  Up/down chance =  1/4 up, 3/4 down, with a maximum of 2 \n *  going up to max at the same time.\n *  \n *  Average stays the same.\n *  Minimum, maximum and timing options change randomly\n *  from 5 options every time a LED reaches the average again.\n *  \n *  Created by Billy Jaspers, May 2019.\n *</p><p>/ Declare pins\nint LED01           = 3;\nint LED02           = 5;\nint LED03           = 6;\nint LED04           = 9;\nint LED05           = 11;</p><p>// Time variables\nunsigned long currentTime;\nunsigned long waitingTime[5];\nunsigned long lastRound;</p><p>// LED Variables\nint brightMin [5]   =       { 10,   10,   10,   10,     10        };      // Minimum brightness\nint brightAvg [5]   =       { 200,  200,  200,  200,    200       };      // Average brightness\nint brightMax[5]    =       { 240,  240,  240,  240,    240       };      // Maximum brightness\nint timeWaitLow[5]  =       { 1000, 1000, 1000, 1000,   1000      };      // Waiting time\nint timeWaitAvg[5]  =       { 5000, 5000, 5000, 5000,   5000      };      // Waiting time\nint timeWaitMax[5]  =       { 4000, 3000, 3000, 3000,   3000      };      // Waiting time\nint increment[5]    =       { 2,    5,    4,    5,      2         };      // Increment in brightness\nint currentBright[5]=       { 200,  230,  210,  210,    235       };      // Current brightness</p><p>// LED Variables Possibilities\nint brightMinPos[5] =       { 5,   20,    40,   5,      20        };      // Minimum brightness possibilities\nint brightMaxPos[5] =       { 240,  245,  230,  225,    245       };      // Maximum brightness possibilities\nint timeLowPos[5]   =       { 3000, 5000, 4000, 2000,   1000      };      // Waiting time on low brightness possibilities\nint timeHighPos[5]  =       { 3000, 1000, 500,  2000,   4000      };      // Waiting time on high brightness possibilities\nint timeAvgPos[5]   =       { 3000, 5000, 4000, 7000,   8000      };      // Waiting time on average brightness possibilities\nint incrementPos[5] =       { 2,    4,    5,    3,      1         };      // increment in brightness possibilities</p><p>// Variables\nbool startup = true;                                                      // Do the start settings need to be started?</p><p>// Directional variables\n/* 0 = Waiting at Average\n   1 = going Avg to Low\n   2 = waiting Low\n   3 = going Low to Avg\n   4 = going Avg to Max\n   5 = waiting at Max\n   6 = going High to Avg\n   7 = Updating variables*/\nint statusLED[5]           =        { 0, 0, 0, 0, 0  };\nint amountHighLED          =        0;\nint refreshRate            =        50;\nbool statusWaiting[5]      =        { false, false, false, false,  false};  // Is the Led waiting?</p><p>// Random variables\nlong randomNumber;                                                    //  Long to store random number\nlong randomNumberTwo;                                                 //  Long to store the second random number</p><p>// counters\nint i = 0;                                                            // Counter for main loop</p><p>void setup() {\n  Serial.begin (115200);                                              //  Start serial\n  randomSeed(analogRead(A0));                                         //  Set randomseed </p><p>// Declare outputs\n  pinMode (LED01, OUTPUT);\n  pinMode (LED02, OUTPUT);\n  pinMode (LED03, OUTPUT);\n  pinMode (LED04, OUTPUT);\n  pinMode (LED05, OUTPUT);\n}</p><p>//  Write data to LEDs\nvoid writeToLED(){\n  analogWrite(LED01, currentBright[0]);                               \n  analogWrite(LED02, currentBright[1]);\n  analogWrite(LED03, currentBright[2]);\n  analogWrite(LED04, currentBright[3]);\n  analogWrite(LED05, currentBright[4]);\n}</p><p>// Main loop\nvoid loop() {\n  if (startup){                                                                         // Startup settings\n    lastRound = millis();                                                               // Set lastRound for boot\n    writeToLED();                                                                       // Write start data to LED\n    startup = false;                                                                    // Turn off startup\n  }\n    \n  currentTime = millis();                                                             // Set current time</p><p>  if (currentTime - lastRound >= refreshRate ){ \n    for (i=0;i<5;i++){\n      if (statusLED[i] == 7){                                                             // -7- Updating Led\n        randomNumber      = random(5);\n        brightMin[i]      = brightMinPos[randomNumber];                                     // Set random value for minimum brightness\n        randomNumber      = random(5);\n        brightMax[i]      = brightMaxPos[randomNumber];                                     // Set random value for maximum brightness\n        randomNumber      = random(5);\n        timeWaitLow[i]    = timeLowPos[randomNumber];                                       // Set random value for low waiting time\n        randomNumber      = random(5);\n        timeWaitMax[i]    = timeHighPos[randomNumber];                                      // Set random value for high waiting time\n        randomNumber      = random(5);\n        timeWaitAvg[i]    = timeAvgPos[randomNumber];                                       // Set random value for average waiting time\n        randomNumber      = random(5);\n        increment[i]      = incrementPos[randomNumber];                                     // Set random value for increment value\n        randomNumber      = random(2);                                                      // Set random value for direction\n        randomNumberTwo   = random(2);                                                      // Set random value for direction\n        if (randomNumber == 1 && randomNumberTwo == 0 && amountHighLED < 2){                // If both are right and not more than 2 are high, go high\n          statusLED[i]    = 4;                                                                // Set to go Avg to Max\n          amountHighLED   = amountHighLED + 1;                                                // Add 1 to the amount of High LEDs\n        }else{                                                                              // Else go low\n          statusLED[i] = 1;                                                                   // Set to go Avg to Low\n        }\n        // Print the status for every LED as soon as it's updated\n        Serial.print(\"updated\");\n        Serial.print(\"\\t\");\n        Serial.print(i);\n        Serial.print(\"\\t\");\n        Serial.print(\"to\");\n        Serial.print(\"\\t\");\n        Serial.print(statusLED[i]);\n        Serial.print(\"\\n\");\n        \n      }else if (statusLED[i] == 3){                                                     // -3- Going Low to Avg\n        if ( currentBright[i] >= brightAvg[i] ){\n          statusLED[i] = 0;                                                                 // If at lowest point: Go to Waiting Avg\n        }else{\n          currentBright[i] = currentBright[i]+increment[i];                                 // Else: Higher Brightness\n        }\n        \n      }else if (statusLED[i] == 2){                                                     // -2- Waiting Low\n        if ( !statusWaiting[i] ){                                                           // If not waiting:\n          waitingTime[i] = millis();                                                        // Set waiting time\n          statusWaiting[i] = true;                                                          // Start waiting\n        }else if( statusWaiting[i] && currentTime-waitingTime[i] >= timeWaitLow[i] ){       // If waiting AND timeWaitAvg has passed:\n          statusWaiting[i] = false;                                                         // Stop waiting\n          statusLED[i] = 3;                                                                 // Set statusLed to Waiting for update\n        }\n        \n      }else if (statusLED[i] == 1){                                                     // -1- Going Avg to Low\n        if ( currentBright[i] <= brightMin[i] ){\n          statusLED[i] = 2;                                                                 // If at lowest point: Go to Waiting Low\n        }else{\n          currentBright[i] = currentBright[i]-increment[i];                                 // Else: Lower Brightness\n        }\n        \n      }else if (statusLED[i] == 6){                                                     // -6- Going Max to Avg\n        if ( currentBright[i] <= brightAvg[i] ){\n          statusLED[i] = 0;                                                                 // If at lowest point: Go to Waiting Low\n          amountHighLED = amountHighLED - 1;                                                // -1 on the amount of high LEDs\n        }else{\n          currentBright[i] = currentBright[i]-increment[i];                                 // Else: Higher Brightness\n        }\n        \n      }else if (statusLED[i] == 5){                                                     // -5- Waiting Max\n        if ( !statusWaiting[i] ){                                                         // If not waiting:\n          waitingTime[i] = millis();                                                        // Set waiting time\n          statusWaiting[i] = true;                                                          // Start waiting\n        }else if( statusWaiting[i] && currentTime-waitingTime[i] >= timeWaitMax[i] ){     // If waiting AND timeWaitAvg has passed:\n          statusWaiting[i] = false;                                                         // Stop waiting\n          statusLED[i] = 6;                                                                 // Set statusLed to Waiting for update\n        }\n        \n      }else if (statusLED[i] == 4){                                                     // -4- Going Avg to Max\n        if ( currentBright[i] >= brightMax[i] ){\n          statusLED[i] = 5;                                                               // If at lowest point: Go to Waiting High\n        }else{\n          currentBright[i] = currentBright[i]+increment[i];                               // Else: Higher Brightness\n        }\n        \n      }else if (statusLED[i] == 0){                                                     // -0- Waiting at Average\n        if ( !statusWaiting[i] ){                                                         // If not waiting:\n          waitingTime[i] = millis();                                                      // Set waiting time\n          statusWaiting[i] = true;                                                        // Start waiting\n        }else if( statusWaiting[i] && currentTime-waitingTime[i] >= timeWaitAvg[i] ){   // If waiting AND timeWaitAvg has passed:\n          statusWaiting[i] = false;                                                       // Stop waiting\n          statusLED[i] = 7;                                                               // Set statusLed to Waiting for update\n        }\n        \n      }\n    }\n    i=0;\n    lastRound = millis();                                                                 // Set when the last round is finished.\n    writeToLED();                                                                         // Write all data to the LED's\n  }\n}</p>", "step_imgs": [], "step_title": "Step 8: The Code"}, {"step": 9, "steps_text": "I think it worked out well. The tie is not too thick, stiff, long or heavy and the star effect looks amazing.", "step_imgs": ["https://cdn.instructables.com/FOW/DHH4/JT91JTAM/FOWDHH4JT91JTAM.LARGE.jpg", "https://cdn.instructables.com/FXM/HBCG/JT91L49E/FXMHBCGJT91L49E.LARGE.jpg", "https://cdn.instructables.com/FJD/T412/JT91JTAS/FJDT412JT91JTAS.LARGE.jpg", "https://cdn.instructables.com/FIZ/V2FJ/JT91JT6Z/FIZV2FJJT91JT6Z.LARGE.jpg", "https://cdn.instructables.com/FRY/WWWE/JT91JT7W/FRYWWWEJT91JT7W.LARGE.jpg", "https://cdn.instructables.com/FP3/G5FX/JT91JT87/FP3G5FXJT91JT87.LARGE.jpg", "https://cdn.instructables.com/FAV/9REA/JT91JT8E/FAV9REAJT91JT8E.LARGE.jpg", "https://cdn.instructables.com/FI9/WWXM/JT91JT8P/FI9WWXMJT91JT8P.LARGE.jpg", "https://cdn.instructables.com/F0U/SNQ3/JT91JTAF/F0USNQ3JT91JTAF.LARGE.jpg"], "step_title": "Step 9: Final Product"}], "channel": ""}, {"category": "", "description": "In one of my previous Instructable, I showed you how to control a model railway layout using a keyboard. It did great but had a drawback of requiring a computer to operate. In this Instructable, let's see how to control a model train using a keyboard through Arduino. So, without further ado, let's get started.", "title": "Keyboard Controlled Model Train V2.0 | PS/2 Interface", "url": "https://www.instructables.com/id/Keyboard-Controlled-Model-Train-PS2-Interface/", "section": "technology", "steps": [{"step": 1, "steps_text": "", "step_imgs": [], "step_title": "Step 1: Watch the Video"}, {"step": 2, "steps_text": "For this project you will need:\nAn Arduino microcontroller\nA PS/2 keyboard\nA female PS/2 connector(Get the one as shown in the picture, it will make your life easier.)\nAn L298N motor driver module\nA 12-volt DC power source with a current capacity of at least 1A(1000mA).\n3 male to female jumper wires(To connect the motor driver's inputs to the Arduino board's output pins.)\n4 male to male jumper wires(To connect the motor driver to power and the tracks.)\n4 male to male jumper wires(To connect the PS/2 connector to the Arduino board.)", "step_imgs": ["https://cdn.instructables.com/FMF/8U7N/JT91LBN5/FMF8U7NJT91LBN5.LARGE.jpg"], "step_title": "Step 2: Get All the Required Stuff"}, {"step": 3, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FPU/M97W/JT91J3N5/FPUM97WJT91J3N5.LARGE.jpg"], "step_title": "Step 3: Program the Arduino Microcontroller"}, {"step": 4, "steps_text": "Using a multimeter set to continuity test and using the given picture as a reference, mark the pinouts of the PS/2 connector/extension cable wires.", "step_imgs": ["https://cdn.instructables.com/FL9/KGT4/JT91RHRF/FL9KGT4JT91RHRF.LARGE.jpg", "https://cdn.instructables.com/FGN/JCPI/JT91LBNW/FGNJCPIJT91LBNW.LARGE.jpg"], "step_title": "Step 4: Identify the Pins of the PS/2 Connector"}, {"step": 5, "steps_text": "Make the following wiring connections:\nConnect the input pin 'ENB' to pin 'D10' of the Arduino board.\nConnect the input pin 'IN4' to pin 'D9' of the Arduino board.\nConnect the input pin 'IN3' to pin 'D8' of the Arduino board.\nConnect two male to male jumper wires to the output terminals 3 and 4 to be later connected to the track power feeder.\nConnect the 'VIN' pin of the motor driver to the 'VIN' pin and the 'GND' pin to the 'GND' pin of the Arduino board respectively.\nMake sure no wiring connections are loose.", "step_imgs": ["https://cdn.instructables.com/FZ2/AJI2/JT91LBPB/FZ2AJI2JT91LBPB.LARGE.jpg"], "step_title": "Step 5: Connect the Motor Driver to the Arduino Board"}, {"step": 6, "steps_text": "Make the following wiring connections:\nConnect 'VCC' to the '+5-volt' pin of the Arduino board.\nConnect 'GND' to the 'GND' pin of the Arduino board.\nConnect 'CLOCK' to pin 'D2' of the Arduino board.\nConnect 'DATA' to pin 'D3' of the Arduino board.\nDouble check the pinout diagram of the PS/2 connector before making connections.", "step_imgs": ["https://cdn.instructables.com/FSH/CXRF/JT91LBQ2/FSHCXRFJT91LBQ2.LARGE.jpg"], "step_title": "Step 6: Connect the PS/2 Connector to the Arduino Board"}, {"step": 7, "steps_text": "Make a simple loop of track to test the setup. Make sure the tracks are cleaned properly to prevent the locomotive from stalling.", "step_imgs": ["https://cdn.instructables.com/FLR/BYFV/JT91LBRY/FLRBYFVJT91LBRY.LARGE.jpg"], "step_title": "Step 7: Set Up a Test Layout"}, {"step": 8, "steps_text": "Connect the male to male jumper wires to the power feeder track terminals previously connected to the output terminals of the motor driver.", "step_imgs": ["https://cdn.instructables.com/FIF/XED5/JT91LBS0/FIFXED5JT91LBS0.LARGE.jpg", "https://cdn.instructables.com/F03/MVX6/JT91LBSA/F03MVX6JT91LBSA.LARGE.jpg"], "step_title": "Step 8: Connect the Motor Driver's Outputs to the Track Power Feeder"}, {"step": 9, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FON/HP5C/JT91LBY5/FONHP5CJT91LBY5.LARGE.jpg", "https://cdn.instructables.com/FFF/SRDJ/JT91LC2P/FFFSRDJJT91LC2P.LARGE.jpg"], "step_title": "Step 9: Connect the Keyboard to the PS/2 Connector"}, {"step": 10, "steps_text": "Place the locomotive on the tracks, aligning the wheels properly with the rails.", "step_imgs": ["https://cdn.instructables.com/FUD/3KOL/JT91LCCW/FUD3KOLJT91LCCW.LARGE.jpg"], "step_title": "Step 10: Place the Locomotive on the Tracks"}, {"step": 11, "steps_text": "Double-check all of the wiring connections and make sure everything is connected to the right place and no wiring connections are loose. Plug in the power supply adapter and turn it on.", "step_imgs": ["https://cdn.instructables.com/FYF/YXKV/JT91LD31/FYFYXKVJT91LD31.LARGE.jpg"], "step_title": "Step 11: Connect the Setup to 12-volt Adapter and Power It On"}, {"step": 12, "steps_text": "", "step_imgs": [], "step_title": "Step 12: Sit Back With You Keyboard and Run Your Train"}, {"step": 13, "steps_text": "I would love to see your project below. After completing this project, don't stop here and try adding more functions to the setup. Whatever you do, all the best!", "step_imgs": [], "step_title": "Step 13: What's Next?!"}], "channel": ""}, {"category": "", "description": "We MAKE a HOMEMADE BREADBOARD out of Paperclips, Cardboard, & Elmer's Glue.\nThese are STRONG and PERMANENT Electronic Circuits.\nIn this tutorial we will MAKE:\nBreadboard Using Paperclips\nLED Light Circuit\nLight Detector Circuit\nDark Detector Circuit\nWater Detector Circuit\nEnjoy Our Step-by-Step Tutorial on Creating Homemade Electronic Circuits.", "title": "Make a Breadboard for Electronic Circuits - Papercliptronics", "url": "https://www.instructables.com/id/Make-a-Breadboard-for-Electronic-Circuits-Papercli/", "section": "technology", "steps": [{"step": 1, "steps_text": "SUMMARY:\nWe USE 10 Paperclips to be the Rails of our Homemade Breadboard.\nWe MAKE a Top Rail, Bottom Rail & 8 Rails in the middle.\nThe Top Rail is Connected to the Positive End of our D BATTERIES.\nThe Bottom Rail is Connected to the Negative End of our D BATTERIES.\nWe CRIMPED Paperclip Connectors onto the Legs of our Resistor & LED.\nWe then CRIMPED those Paperclip Connectors to our Paperclip Rails.", "step_imgs": ["https://cdn.instructables.com/FFH/QQG1/JTEMYKX9/FFHQQG1JTEMYKX9.LARGE.jpg"], "step_title": "Step 1: Let's EXAMINE the Homemade Breadboard"}, {"step": 2, "steps_text": "We USE a Cardboard Box to be the Base of our Homemade Breadboard.\nWe CUT White Paper to FIT INSIDE the Cardboard Box.\nWe ELMER'S GLUE the White Paper into the Bottom of the Cardboard Box.\n(It only takes a small amount of Glue around the Edges of the Paper, to hold the Paper in place nicely.", "step_imgs": ["https://cdn.instructables.com/F6V/16YR/JTEMZCNK/F6V16YRJTEMZCNK.LARGE.jpg", "https://cdn.instructables.com/FI6/B82F/JTEMZG7K/FI6B82FJTEMZG7K.LARGE.jpg"], "step_title": "Step 2: Cardboard Box With White Paper That Is Glued Down"}, {"step": 3, "steps_text": "We USE 10 Large Paperclips.\nMake sure that your Paperclips are not coated with plastic.\nWe USE Metal Paperclips, which are highly conductive and very strong.", "step_imgs": ["https://cdn.instructables.com/FKD/47BD/JTEN0EID/FKD47BDJTEN0EID.LARGE.jpg", "https://cdn.instructables.com/FLX/5Q3B/JT2SJ9P2/FLX5Q3BJT2SJ9P2.LARGE.jpg"], "step_title": "Step 3: USE 10 Large Paperclips"}, {"step": 4, "steps_text": "We UNFOLD 10 Large Paperclips.\nWe LAY them out on the Cardboard.\nIn the next step, we will bend, both ends, of each Paperclip.\nThese ends will be inserted into the Cardboard.", "step_imgs": ["https://cdn.instructables.com/FM5/VTZ6/JT91HYL6/FM5VTZ6JT91HYL6.LARGE.jpg", "https://cdn.instructables.com/FFI/Q9AG/JT2SJG67/FFIQ9AGJT2SJG67.LARGE.jpg"], "step_title": "Step 4: UNFOLD the Paperclips"}, {"step": 5, "steps_text": "We MARK with Pencil the Bottom Left Corner & Top Right Corner of the 8 Paperclip Rails of the middle.\nThis helps later, as a guide, when we Insert the Paperclip Rail Ends into the Cardboard, as shown in a moment.", "step_imgs": ["https://cdn.instructables.com/F35/QAEE/JTEMZIZ2/F35QAEEJTEMZIZ2.LARGE.jpg"], "step_title": "Step 5: MARK With a Pencil the Bottom Left and Top Right of the 8 Rails in the Middle"}, {"step": 6, "steps_text": "We BEND Both Ends of each Paperclip.\nWe BEND about 1/4\" at 90 degrees.\nWe BEND all 10 Paperclips in this way.", "step_imgs": ["https://cdn.instructables.com/FHW/8N7W/JTEMZGOE/FHW8N7WJTEMZGOE.LARGE.jpg", "https://cdn.instructables.com/FJH/1V8H/JTEMZH07/FJH1V8HJTEMZH07.LARGE.jpg"], "step_title": "Step 6: Paperclip Rails BENT on Both Ends"}, {"step": 7, "steps_text": "We LAY OUT the Bent Paperclips that we prepared.\nWe have a TOP RAIL, BOTTOM RAIL & 8 RAILS in the middle.\nIn the next step we will insert these bent Paperclips into the Cardboard.", "step_imgs": ["https://cdn.instructables.com/F9I/9BQI/JTEMYSAF/F9I9BQIJTEMYSAF.LARGE.jpg", "https://cdn.instructables.com/F6M/WD4Q/JT2SJHCY/F6MWD4QJT2SJHCY.LARGE.jpg"], "step_title": "Step 7: Paperclip Rails BENT & Ready to Insert Into Cardboard"}, {"step": 8, "steps_text": "We INSERT the Paperclip Rail Ends into the Cardboard.\nWe REPEAT THIS for all 10 of the Large Paperclips.", "step_imgs": ["https://cdn.instructables.com/FPG/SH3E/JTEMZI0Z/FPGSH3EJTEMZI0Z.LARGE.jpg"], "step_title": "Step 8: INSERT the Bent End of the Paperclip Rail Into the Cardboard"}, {"step": 9, "steps_text": "We INSERT the Bent Ends of Each Paperclip into the Cardboard.\nWe SPACE out each Rail, about 1\" apart. But, a person may choose to space it closer too.\nWe APPLY ELMER'S GLUE over each insertion location.\nWe USE a good amount of Elmer's glue, to create a good adhesion effect.\nWe WAIT 14+ Hours, for the Elmer's glue to dry!\nDO NOT MOVE THE PIECES UNTIL THE GLUE IS DRIED!\nWe MAKE a VERY STRONG BOND, using the Elmer's glue.", "step_imgs": ["https://cdn.instructables.com/FNQ/OVJW/JSYZ8D9F/FNQOVJWJSYZ8D9F.LARGE.jpg", "https://cdn.instructables.com/FF5/MLCL/JSYZ8DM6/FF5MLCLJSYZ8DM6.LARGE.jpg"], "step_title": "Step 9: Paperclip Bent Ends INSERTED Into Cardboard & GLUED"}, {"step": 10, "steps_text": "We WAITED 14 hours for the Elmer's glue to dry.\nThe result is a very strong bond.\nOur Paperclip Rails are permanent circuit platforms now.\nElmer's glue provides a VERY STRONG adhesion!\nWhile we are waiting for the glue to dry, we can prepare more breadboards.", "step_imgs": ["https://cdn.instructables.com/F5F/9CT6/JSYZ9G7O/F5F9CT6JSYZ9G7O.LARGE.jpg"], "step_title": "Step 10: Paperclip Rails HELD in Place With the Elmer's Glue DRIED (14+ Hours)"}, {"step": 11, "steps_text": "WARNING: Be Careful for the Exposed Paperclip Ends on the bottom of the box!\n\nSOLUTION:\nWe can cover these Exposed Paperclip Ends using a variety of methods:\n* 4 Layers of Duct Tape, with the Duct Tape Ends Elmer's Glued, to ensure the that Tape remains in place.\n* A Cardboard Layer Cover which is Elmer's Glued, Hot Glued, or Stapled OVER the Exposed Paperclip Ends.\n* Hot Glue OVER the Exposed Paperclip Ends\nThe Shorter the Ends, the less glue needed, but remember, that even a small amount of exposed Paperclip End represents a very serious risk to a person from possible puncture or scratch.", "step_imgs": ["https://cdn.instructables.com/F38/NBQ5/JTT5KUW3/F38NBQ5JTT5KUW3.LARGE.jpg", "https://cdn.instructables.com/FOW/G499/JTT5L1WW/FOWG499JTT5L1WW.LARGE.jpg"], "step_title": "Step 11: Paperclip Ends Must Be Covered to Prevent Possible Injury"}, {"step": 12, "steps_text": "We MAY CHOOSE to BEND the Paperclip Rail Ends at 1/8\" instead of 1/4\".\nBy Bending the Paperclip Ends Shorter, there is LESS Paperclip End sticking through the Cardboard.\nIn either case, at 1/4\" or 1/8\", it is important to COVER the Exposed Paperclip Ends!", "step_imgs": ["https://cdn.instructables.com/FXD/8XU9/JTWSWYZE/FXD8XU9JTWSWYZE.LARGE.jpg", "https://cdn.instructables.com/FF2/ICA3/JTWSWZ2W/FF2ICA3JTWSWZ2W.LARGE.jpg", "https://cdn.instructables.com/FE8/KEKD/JTWSXSWN/FE8KEKDJTWSXSWN.LARGE.jpg"], "step_title": "Step 12: Paperclip Ends Bent Shorter - Less Exposed Paperclip Ends"}, {"step": 13, "steps_text": "Our Diagram Shows a POSITIVE RAIL, a BOTTOM RAIL, and 8 MIDDLE RAILS.\nThe POSITIVE RAIL is on the top of the diagram.\nThe Positive Rail is connected to the Positive side of the D BATTERY using Speaker Wire.\n--\nThe NEGATIVE RAIL is on the bottom of the diagram.\nThe Negative Rail is connected to the Negative side of the D Battery using Speaker Wire.\nThe Negative side of the D Battery is the FLAT side.\n--\nWe will later show how to secure the Speaker Wire to the Battery ends using Duct Tape.", "step_imgs": ["https://cdn.instructables.com/F34/AYMI/JT2SJ23O/F34AYMIJT2SJ23O.LARGE.jpg", "https://cdn.instructables.com/FNB/DVNY/JT2SJ2W6/FNBDVNYJT2SJ2W6.LARGE.jpg"], "step_title": "Step 13: Power Supply USES Two D Batteries - POS to 3rd Rail - NEG to 1st Rail"}, {"step": 14, "steps_text": "We CONNECT the Speaker Wire from the Bottom Rail to the 1st Row.\nWe CONNECT the Speaker Wire from the Top Rail to the 3rd Row.\n\nTherefore, the 1st Rail is now Negative and the 3rd Rail is Positive.", "step_imgs": ["https://cdn.instructables.com/F94/OGJR/JSYZ9F3N/F94OGJRJSYZ9F3N.LARGE.jpg", "https://cdn.instructables.com/FT4/1V7Y/JSYZ9EUJ/FT41V7YJSYZ9EUJ.LARGE.jpg"], "step_title": "Step 14: Power Supply - Speaker Wire Connection"}, {"step": 15, "steps_text": "We STRIP the End of our Speaker Wire about 1\" inch.\nWe BEND the End of the Speaker Wire into a Hook Shape.\nWe DUCT TAPE the Speaker Wire End onto the Negative Side of the D Battery.\nThe Negative Side is the Flat Side of the battery.", "step_imgs": ["https://cdn.instructables.com/F2X/8UWK/JT4TO91W/F2X8UWKJT4TO91W.LARGE.jpg", "https://cdn.instructables.com/F8K/ZE4N/JT4TOA0P/F8KZE4NJT4TOA0P.LARGE.jpg"], "step_title": "Step 15: Battery Connection - Speaker Wire + Duct Tape"}, {"step": 16, "steps_text": "We CRIMP Paperclip Hook Shapes around both Resistor Legs.\nWe USE \"small size\" Paperclips, as oppose to the \"large size\" Paperclips.\nIn Summary:\nFor Electronic Component Connectors, we use Small Paperclips,\nFor Breadboard Rails we use Large Paperclips.", "step_imgs": ["https://cdn.instructables.com/FKC/9TVN/JT91IBA3/FKC9TVNJT91IBA3.LARGE.jpg"], "step_title": "Step 16: Paperclip CRIMPED Both Resistor Legs - Electronic Component Connectors"}, {"step": 17, "steps_text": "We UNFOLD a small Paperclip.\nWe BEND the small Paperclip about 1/4\" from the end to form a Hook Shape.\nThis Hook Shape is what we will next crimp onto our Resistor legs.", "step_imgs": ["https://cdn.instructables.com/F0L/Q15G/JT4TQHBH/F0LQ15GJT4TQHBH.LARGE.jpg", "https://cdn.instructables.com/FXC/AGSH/JT4TQHQ7/FXCAGSHJT4TQHQ7.LARGE.jpg"], "step_title": "Step 17: Bend Paperclip 1/4\" From End to Make Hook Shape"}, {"step": 18, "steps_text": "We CRIMP the Paperclip Hook Shape around both legs of the Resistor.\nWe HOLD the Resistor horizontally and allow the Hook Shape to hang.\nWe USE Needle Nose Pliers to CRIMP the Hook Shape around the Resistor Legs.\nRemember, that we are using small Paperclips, as oppose to the Large size Paperclips.", "step_imgs": ["https://cdn.instructables.com/FVL/KJ8O/JT4TQI80/FVLKJ8OJT4TQI80.LARGE.jpg", "https://cdn.instructables.com/FMH/6UD8/JT4TQICE/FMH6UD8JT4TQICE.LARGE.jpg"], "step_title": "Step 18: Paperclip HOOK SHAPE Is CRIMPED Around Both Resistor Legs"}, {"step": 19, "steps_text": "We BEND each of the Paperclip Legs downward 90 degrees.\nWe ISOLATE the Paperclip Leg with Needle Nose Pliers.\nWhile ISOLATED, we BEND the Paperclip Leg downward, with our Hand.", "step_imgs": ["https://cdn.instructables.com/F44/CKUV/JSYZ993S/F44CKUVJSYZ993S.LARGE.jpg", "https://cdn.instructables.com/F2C/GKZF/JT4TQIL0/F2CGKZFJT4TQIL0.LARGE.jpg"], "step_title": "Step 19: Paperclip Legs Are Bent Downward 90 Degrees"}, {"step": 20, "steps_text": "We CUT the excess length of the Paperclip Legs.\nEach Paperclip Leg is CUT to about 1 1/2\" inches long. (One and a half inches)", "step_imgs": ["https://cdn.instructables.com/FZ5/8N4E/JT4TQISZ/FZ58N4EJT4TQISZ.LARGE.jpg", "https://cdn.instructables.com/F5M/UKMD/JT4TQIQ8/F5MUKMDJT4TQIQ8.LARGE.jpg"], "step_title": "Step 20: Paperclip Legs - Excess Is CUT"}, {"step": 21, "steps_text": "We BEND each Paperclip Leg about 1/4\" from the End of the Paperclip.\nThis BEND creates a Hook Shape.\nThus, we have two Hook Shapes now, for Each Leg of our Resistor.\nThis Resistor is now READY for our breadboard rails!", "step_imgs": ["https://cdn.instructables.com/FCL/USGW/JSYZ9BCX/FCLUSGWJSYZ9BCX.LARGE.jpg", "https://cdn.instructables.com/FX0/UU3B/JSYZ9BN7/FX0UU3BJSYZ9BN7.LARGE.jpg"], "step_title": "Step 21: Both Paperclip Legs Are BENT at the Ends About 1/4\", Into Hook Shapes"}, {"step": 22, "steps_text": "We PLACE the Hook Shapes of our Resistor Legs, on the 1st Rail and the 2nd Rail.\nWe CRIMP these Hook Shapes, using Needle Nose Pliers.\nMake sure to apply strong force when crimping these Hook Shapes to the Breadboard Rails.", "step_imgs": ["https://cdn.instructables.com/FN3/4RKY/JSYZ9CK6/FN34RKYJSYZ9CK6.LARGE.jpg", "https://cdn.instructables.com/F63/KB7K/JSYZ9CXP/F63KB7KJSYZ9CXP.LARGE.jpg"], "step_title": "Step 22: Paperclip Hook Shapes POSITIONED Under 1st & 2nd Rails"}, {"step": 23, "steps_text": "We SEE that that Hook Shapes are CRIMPED around the 1st and 2nd Rails.\nWe KEEP SPACE between the Resistors Legs, so that they NEVER TOUCH!", "step_imgs": ["https://cdn.instructables.com/FUS/L5X8/JSYZ9D22/FUSL5X8JSYZ9D22.LARGE.jpg", "https://cdn.instructables.com/FHS/QC5W/JSYZ9DHS/FHSQC5WJSYZ9DHS.LARGE.jpg"], "step_title": "Step 23: Both Paperclip Leg Connectors Are CRIMPED Around 1st & 2nd Rails"}, {"step": 24, "steps_text": "We have CRIMPED our Resistor & LED onto our Paperclip Rails.\nWe ALLOW the Resistor & LED to TILT.\nIn this Tilted Position we will next use Elmer's glue, to hold the pieces in place permanently.", "step_imgs": ["https://cdn.instructables.com/FMS/HHF8/JSYZ9DSD/FMSHHF8JSYZ9DSD.LARGE.jpg", "https://cdn.instructables.com/FLX/YDK6/JSYZ9EBP/FLXYDK6JSYZ9EBP.LARGE.jpg"], "step_title": "Step 24: Resistor & LED Are CRIMPED in PLACE. Allow Them to Tilt."}, {"step": 25, "steps_text": "We ELMER'S GLUE the Paperclip Connector Legs of the Resistor.\nWe USE a lot of Elmer's Glue.\nWe WAIT 14+ hours.\nPLACE on a LEVEL surface that will not be disturbed.\nDO NOT MOVE PIECES WHILE THEY ARE DRYING!", "step_imgs": ["https://cdn.instructables.com/FM1/QBTB/JT2SJ5AH/FM1QBTBJT2SJ5AH.LARGE.jpg", "https://cdn.instructables.com/FJ9/S7JF/JT91IJTE/FJ9S7JFJT91IJTE.LARGE.jpg"], "step_title": "Step 25: Paperclip Connectors Are Elmer's Glued, to the Paperclip Rails, AFTER They Are CRIMPED"}, {"step": 26, "steps_text": "We WAITED at least 14 hours before moving our Breadboard around again.\nThis is a VERY STRONG BOND!\nElmer's Glue does a very good job and is non-toxic, has no fumes, and does not require heat.\nTherefore, for making permanent circuits, Elmer's glue is highly recommended.\n--\nBut, for temporary circuits, Putty, gums, or tape, will also work, to hold components in place.", "step_imgs": ["https://cdn.instructables.com/F3R/X5IH/JT2SJ5NA/F3RX5IHJT2SJ5NA.LARGE.jpg"], "step_title": "Step 26: Elmer's Glue DRIED - 14+ Hours - VERY STRONG"}, {"step": 27, "steps_text": "Tools Used:\nNeedle Nose Pliers\nShears (Heavy Duty)\nWire Strippers (Light Duty)\nFlush Cutters", "step_imgs": ["https://cdn.instructables.com/FIH/DO4G/JSYZ9F6U/FIHDO4GJSYZ9F6U.LARGE.jpg", "https://cdn.instructables.com/FLA/1JRZ/JSYZ99EE/FLA1JRZJSYZ99EE.LARGE.jpg", "https://cdn.instructables.com/FGT/N9D5/JSYZ9FDG/FGTN9D5JSYZ9FDG.LARGE.jpg", "https://cdn.instructables.com/FY8/5M1J/JT91IL2L/FY85M1JJT91IL2L.LARGE.jpg"], "step_title": "Step 27: Tools"}, {"step": 28, "steps_text": "Materials:\nCardboard Box\n10 Large Paperclips\n4 Small Paperclips\nElmer's Glue-All\nDuct Tape\n2 D Batteries\n1 Resistor 100 Ohms\n1 LED", "step_imgs": ["https://cdn.instructables.com/FHU/EB42/JTEMZMBG/FHUEB42JTEMZMBG.LARGE.jpg", "https://cdn.instructables.com/F38/8DFS/JTEMZKZ8/F388DFSJTEMZKZ8.LARGE.jpg", "https://cdn.instructables.com/FT6/D6O9/JTEMZL1V/FT6D6O9JTEMZL1V.LARGE.jpg", "https://cdn.instructables.com/F4T/0QRA/JTEMZKWB/F4T0QRAJTEMZKWB.LARGE.jpg"], "step_title": "Step 28: Materials Required"}, {"step": 29, "steps_text": "Papercliptronics is designed for kids and adults.\nBy using Paperclips instead of Solder, we avoid the fumes!!!\nSolder fumes are toxic and cause damage to humans.\nI invented Paperclip Crimping to avoid the dangers of solder and the high costs of buying hundreds of Breadboards.\nPapercliptronics is a permanent circuit design method as well as a prototyping environment.\nInvented by Keystoner March of College of Scripting Music & Science.", "step_imgs": ["https://cdn.instructables.com/FXV/HDIN/JSYZAQO4/FXVHDINJSYZAQO4.LARGE.jpg", "https://cdn.instructables.com/FMS/HHF8/JSYZ9DSD/FMSHHF8JSYZ9DSD.LARGE.jpg"], "step_title": "Step 29: Papercliptronics - the Science of Paperclip Crimping"}, {"step": 30, "steps_text": "WATCH the Video Tutorial here to Follow along step-by-step.", "step_imgs": [], "step_title": "Step 30: Make a Homemade Breadboard Using Paperclips - VERY STRONG & PERMANENT CIRCUIT DESIGN METHOD"}, {"step": 31, "steps_text": "We CRIMP Paperclips around each Leg of the Transistor.\nWe BEND the End of those Paperclips into Hook Shapes.\nWe CONNECT those Hook Shapes to the Paperclip Rails.\nHAVE FUN CONNECTING ELECTRONIC COMPONENTS TO YOUR HOMEMADE BREADBOARD!", "step_imgs": ["https://cdn.instructables.com/F0P/DF8E/JT4TOV94/F0PDF8EJT4TOV94.LARGE.jpg", "https://cdn.instructables.com/FIU/BL2G/JT4TOTVB/FIUBL2GJT4TOTVB.LARGE.jpg"], "step_title": "Step 31: Transistor CRIMPED With Paperclips & Bent Into Hook Shapes for Rails"}, {"step": 32, "steps_text": "We MAKE a Light Detector Circuit using:\n100 Ohm Resistor\npnp 3906 Transistor\nLDR (Light Dependent Resistor)\nLED\n2 D Batteries\nSpeaker Wire Connectors\nPaperclip Connectors", "step_imgs": ["https://cdn.instructables.com/FI6/0CSE/JTWT8M59/FI60CSEJTWT8M59.LARGE.jpg", "https://cdn.instructables.com/FY6/SCMZ/JTWT8N0T/FY6SCMZJTWT8N0T.LARGE.jpg"], "step_title": "Step 32: Light Detector Circuit- Papercliptronics Example"}, {"step": 33, "steps_text": "CLICK to WATCH the Video to SEE the Light Detector Circuit in action.", "step_imgs": [], "step_title": "Step 33: Light Detector Circuit VIDEO"}, {"step": 34, "steps_text": "We MAKE a Dark Detector Circuit using:\n100 Ohm Resistor\n8.2 kOhm Resistor\nnpn 3904 Transistor\nLDR (Light Dependent Resistor)\nLED\n2 D Batteries\nSpeaker Wire Connectors\nPaperclip Connectors", "step_imgs": ["https://cdn.instructables.com/F3E/Z04H/JTWT8NYQ/F3EZ04HJTWT8NYQ.LARGE.jpg", "https://cdn.instructables.com/FHU/YE8G/JTYNMASB/FHUYE8GJTYNMASB.LARGE.jpg"], "step_title": "Step 34: Dark Detector Circuit - Papercliptronics Example (Night Light)"}, {"step": 35, "steps_text": "WATCH the Video Here to SEE the Dark Detector Circuit.", "step_imgs": [], "step_title": "Step 35: Dark Detector Circuit - Known Also As a Night Light"}, {"step": 36, "steps_text": "We MAKE a Water Detector Circuit using:\n270 Ohm Resistor\n1 kOhm Resistor\nnpn 3904 Transistor\n2 D Batteries\nLED\nSpeaker Wire Connectors\nPaperclip Connectors\nThis circuit will also sense when a human touches both of the leads.", "step_imgs": ["https://cdn.instructables.com/FCB/KKIO/JU31SQ2B/FCBKKIOJU31SQ2B.LARGE.jpg"], "step_title": "Step 36: Water Detector Circuit - Papercliptronics Example - Works As Touch Sensor As Well"}, {"step": 37, "steps_text": "WATCH the Video Here to SEE the Water Detector Circuit.", "step_imgs": [], "step_title": "Step 37: Water Detector Circuit VIDEO"}, {"step": 38, "steps_text": "We USE a thin piece of Duct Tape as a Band around the 3 Legs of our Transistor.\nThis ensures a good contact point on all 3 Legs.\nWe SECURE it firmly in place, applying tight pressure before pressing the tape down.\nWe will REPEAT this step for each of the Components.", "step_imgs": ["https://cdn.instructables.com/FJN/N3PB/JTSXANQK/FJNN3PBJTSXANQK.LARGE.jpg"], "step_title": "Step 38: Duct Tape Contact Band - to Ensure Contact for Circuit Testing Stage"}, {"step": 39, "steps_text": "We USE a thin piece of Duct Tape as a Contact Band, on each of our Components.\nWe PRESS DOWN in the direction that the Component is Tilting, when applying the Duct Tape Band.\nThis Duct Tape method ensures GOOD CONTACT POINTS while we are TESTING our Circuit.\nIn addition, these Duct Tape Bands, can then be Elmer's Glued Into Place.\nThis allows us to use less Elmer's Glue, than we would have, had we not used the Duct Tape Band.\nThe process of Gluing around the Duct Tape Band is shown in a moment.\nIn Summary:\nFor Temporary Circuits, just use a Duct Tape Band, without Elmer's Glue.\nElmer's Glue on top of the Duct Tape Band to SECURE it into place, to ensure, ends don't lift from surface.\nWe also have the option of using Elmer's Glue alone, without the Duct Tape Band, but, that can require a larger amount of Elmer's Glue, to hold each piece securely.", "step_imgs": ["https://cdn.instructables.com/FJ8/JJZL/JTT5GQT9/FJ8JJZLJTT5GQT9.LARGE.jpg", "https://cdn.instructables.com/F18/EB55/JTT5GR2K/F18EB55JTT5GR2K.LARGE.jpg"], "step_title": "Step 39: Duct Tape Contact Band to Ensure Contact - for Temp or Can Be Glue"}, {"step": 40, "steps_text": "We USE Elmer's Glue on top of the Duct Tape Band Ends.\nThe Glue ensures that the Duct Tape Band remains in place.\nThis method is used for GOOD CONTACT during Circuit Testing.\nAllow for 6 Hours for the Elmer's Glue to Dry.\nTime will vary depending on how much Elmer's Glue you use.\nREMEMBER:\nThis is the Temporary Gluing Method, that utilizes the Duct Tape Band to hold Components while Testing our Circuits.\nPERMANENT HOLDER:\nThe more permanent method of Gluing Components in place, requires us to use MORE Elmer's Glue.\nThe Height of Paperclip Rails from the surface of the Cardboard, will determine how much Elmer's Glue is needed for a Good Adhesion Effect.", "step_imgs": ["https://cdn.instructables.com/FVR/S0EF/JTT5JSD0/FVRS0EFJTT5JSD0.LARGE.jpg"], "step_title": "Step 40: Duct Tape Band Elmer's Glued Into Place - Ensures Good Contact for Circuit Testing"}, {"step": 41, "steps_text": "We can now make hundreds and hundreds of electronic circuits for pennies!\nPaperclip Crimping is a Safe Alternative to Solder, because there are no fumes or heat.\nHowever, here is a list of things to keep in mind.\nBE CAREFUL FOR SHARP PAPERCLIP ENDS, ESPECIALLY ON THE BOTTOM OF THE BOX!\nWhen you make the breadboard by inserting Paperclip Ends into the Cardboard, the bottom of the box will have many Paperclip Ends exposed, and therefore, should be considered as sharp and dangerous.\nThese exposed Paper Clip Ends should be covered if possible. A person may choose to place multiple layers of Duct Tape over the exposed Paperclip Ends, and then Elmer's Glue the Duct Tape Ends to keep the Duct Tape in place.\nOR Alternatively, a person can use Hot Glue to cover the ends.\nAlso, if a person bends the Paperclip Ends less, it will expose less of the Ends on the bottom.\nWe might choose also to Elmer's Glue, or Hot Glue, another piece of cardboard, underneath our breadboard, to Cover over the Paperclip Ends that are exposed.\nWARNING: BE CAREFUL FOR THE EXPOSED PAPERCLIP ENDS!!! WARNING\nAdult Supervision is recommended, when cutting Paperclip Connector Legs.\nMake sure to cut the Paperclips in a straight line, other wise a diagonal sharp-piece would result.\nAdult Supervision is recommended, for these are small pieces, and therefore represent a choking hazard.\nBe Careful for any of the sharp Speaker Wire Ends, for they represent a puncture danger.\nIf using Hot Glue, instead of Elmer's Glue, BE VERY CAREFUL for Fumes and Heat.\nHot Glue is non-toxic, but even so, make sure that you have extremely good ventilation, such as a strong fan near a window. In addition, make sure to be extremely careful from the HEAT of the Hot Glue Gun Tip!\nALWAYS HAVE A LARGE AMOUNT OF WATER NEARBY WHEN USING HOT GLUE, JUST IN CASE OF CONTACT!\nThe longer you allow the Elmer's Glue to Dry the STRONGER the Bond will be. But, if a piece is moved before the drying is complete, then the bond will not be as secure.", "step_imgs": ["https://cdn.instructables.com/FB0/IQU6/JTEMYO0G/FB0IQU6JTEMYO0G.LARGE.jpg"], "step_title": "Step 41: HAVE FUN & BE SAFE"}], "channel": ""}, {"category": "", "description": "This Instructable will show you an easy way to wire up an Arduino Nano to various PCB breakout boards. This project came about during my search for an effective, but non-destructive way to interconnect several module.\nI had five modules I wanted to interconnect:\nAn Arduino\nA 5-inch 800x480 graphical LCD touch panel from Haoyu electronics\nAn SD card reader\nA DS1302 real-time clock unit\nA MAX485 RS-485/RS-422 transceiver\nThe touch panel and the real-time clock modules had previously been used in my my Dali Clock and my Rainbow Synthesizer projects, but those prototypes had been done on a breadboard and had been dismantled to make space for new projects.\nIt became clear to me that having these all these modules together in a permanent fixture would allow me to spend more time writing software and less time wiring things up on a breadboard. At the same time, I did not want to permanently solder anything together so I could preserve the modules for future use.\nThis Instructable shows how I put it all together using wire wrapping.", "title": "Make a Custom Arduino Test Bench Using Wirewrapping", "url": "https://www.instructables.com/id/Make-a-Custom-Arduino-Test-Bench-Using-Wirewrappin/", "section": "technology", "steps": [{"step": 1, "steps_text": "My first step was to map out how to interconnect all the modules to the available pins on an Arduino Nano. The display and the SD card are both SPI modules. SPI is a bus, so the CLK, MISO and MOSI lines can be daisy chained to the modules that need it along with power. Each would require their own CS (Chip Select) pin, however.\nI decided to put the RTC module on its own pins because earlier experiments had shown me it wasn't quite SPI compatible. The transceiver modules also needed their own pins.\nAfter mapping everything out, I found it looked like this:\nArduino Pin GND -> LCD GND -> SD Card GND -> Transceiver GND -> RTC 5V\nArduino Pin 5V -> LCD 5V -> SD Card 5V -> Transceiver VCC -> RTC VCC\nArduino Pin 13 -> LCD CLK -> SD Card CLK\nArduino Pin 12 -> LCD MISO -> SD Card MISO\nArduino Pin 11 -> LCD MOSI -> SD Card MOSI\nArduino Pin 10 -> LCD CS\nArduino Pin 9 -> LCD PD\nArduino Pin 2 -> LCD INT\nArduino Pin 8 -> RTC CLK\nArduino Pin 7 -> RTC DAT\nArduino Pin 6 -> RTC RST\nArduino Pin 4 -> SD Card CS\nArduino Pin 14 -> Transceiver DI\nArduino Pin 15 -> Transceiver DE\nArduino Pin 16 -> Transceiver RE\nArduino Pin 17 -> Transceiver RO\nPins 0 and 1 are used by the USB interface, so they were off-limits. Digital pins 3, 5, 18 and 19 remained free, as did analog inputs A4 through A7, allowing for future expansion.", "step_imgs": [], "step_title": "Step 1: Planning the Interconnections"}, {"step": 2, "steps_text": "Initially I had attempted to interconnect everything with short custom crimped Y cables. However the crimps and connectors are only designed to take one wire at a time. Cramming multiple wires in one housing was difficult and led to fragile joints that didn't last long. Not only was the crimping process time consuming, once in use the connectors were likely to work themselves loose from pins, leading to additional wasted time tracking down intermittent faults.\nI had always wanted to give wire wrapping a try, so I thought this was a good opportunity to do so. After some research, I purchased a WSU-30 M tool, some extra long 19mm long single row headers and 30 AWG wire wrapping wire on eBay.\nAs a technology, wire wrapping has a long history. It was a popular way to make digital computers in the 60s, 70s and 80s and saw frequent use in telephone central offices. Although it was obsoleted by mass produced printed circuit boards, wire wrapping has the following advantages for the hobbyist:\nIt is inexpensive and quick\nIt is easy to apply and can be removed cleanly\nIt works with the pin headers that are soldered to many breakout boards\nIt forms a long lasting and reliable connection\nIt allows multiple connections to and from each point (when long headers are used)", "step_imgs": ["https://cdn.instructables.com/FZI/C6YF/JT4TQSZE/FZIC6YFJT4TQSZE.LARGE.jpg", "https://cdn.instructables.com/FST/VUYN/JT4TQTR1/FSTVUYNJT4TQTR1.LARGE.jpg"], "step_title": "Step 2: The Problem With Jumper Wires and Wirewrap As a Solution"}, {"step": 3, "steps_text": "The next step was preparing my Arduino Nano. I had an Arduino Nano without any headers, which turned out to be handy, since I wanted to solder the extra long header pins to the top side so I could see the labels while wire wrapping.\nI also soldered some extra long headers to the tiny breakout board that came with my display panel.\nOn the transceiver module, the screw terminals were on the opposite side of the headers, so I desoldered them and moved them to the same side as the headers.\nThe other boards had short headers already soldered on in the correct side, so I kept them as is.", "step_imgs": ["https://cdn.instructables.com/FOM/MDXO/JT4TQUB0/FOMMDXOJT4TQUB0.LARGE.jpg", "https://cdn.instructables.com/F3V/ACV5/JT4TQUAZ/F3VACV5JT4TQUAZ.LARGE.jpg"], "step_title": "Step 3: Preparing an Arduino Nano"}, {"step": 4, "steps_text": "I wanted to be able to mount all the electronics in the back of the LCD stand I had created for my Dali Clock instructable, so I modeled up something in OpenSCAD. I made cutouts for the various boards I wanted to mount.\nAfter I printed out the tray, I hot-glued all the modules in place.", "step_imgs": ["https://cdn.instructables.com/FW3/R1ZP/JT4TQUKE/FW3R1ZPJT4TQUKE.LARGE.jpg", "https://cdn.instructables.com/F62/O760/JT4TQV5S/F62O760JT4TQV5S.LARGE.jpg"], "step_title": "Step 4: Designing a Tray"}, {"step": 5, "steps_text": "The process of wire wrapping consists of the four steps: measuring, cutting, stripping, and wrapping.\nI measure out enough wire for spanning the two points I want to connect, plus an additional inch on each end for wrapping. Then, I strip off 1 inch of insulation on each end and use the tool to wrap the wire onto the post.\nThe following is the exact technique I use, which you can see on my demonstration video:\nI measure the span between two points I want to connect\nI mark the desired length with my fingers, then use a ruler to add two inches\nI cut the wire to length\nI measure 1 and a 1/4th inch off the end\nI then insert the end into the hole on the wrapping tool\nI pull the wire down into the gap in the cutting blade\nI yank the wire from the other end, stripping bare one inch of wire\nI repeat the process for the other side of the wire\nWith the wire stripped on both ends, I insert the bare wire end into the barrel of the wire wrapping tool so that the stripped portion emerges from the notch on the side. I then slide the tip down on a post and give it a few turns, holding the tool loosely to allow it to rise up as it winds.\nA good connection will leave about 7 turns of wire on the post. If the turns are stacked up upon each other, don't push down on the tool so hard!\nUPDATE: Several of you have chimed in that the insulation should wrap around the post for strain relief. I have included two photos to show the difference.", "step_imgs": ["https://cdn.instructables.com/FTG/33RI/JT4TQXJZ/FTG33RIJT4TQXJZ.LARGE.jpg", "https://cdn.instructables.com/FCK/CZA5/JT4TQXLX/FCKCZA5JT4TQXLX.LARGE.jpg", "https://cdn.instructables.com/FTZ/VI4E/JTEMXYJH/FTZVI4EJTEMXYJH.LARGE.jpg"], "step_title": "Step 5: The Process of Wirewrapping"}, {"step": 6, "steps_text": "This shows the board after I wire wrapped all the connections. I made a few mistakes along the way, but these were easily undone by clipping the wires and using tweezers to unwrap the ends from the posts.\nI suggest doing it one part at a time and checking your work with a multi-meter or by powering up and testing each component. Its a lot harder to fix once there are multiple layers of wires.\nMy finished product looks a bit messy, but if you want you can be a bit more careful about the routing or use different colors to keep things clear.\nEven if it doesn't look pretty, it is a lot more robust than a breadboard! But the big bonus is that if at any time you want to take it apart, you can do so easily with no damage to the Arduino Nano or to the pin headers on the individual boards!", "step_imgs": ["https://cdn.instructables.com/FEA/ZYCS/JT4TQVB2/FEAZYCSJT4TQVB2.LARGE.jpg"], "step_title": "Step 6: Wire Wrapping the Entire Board"}, {"step": 7, "steps_text": "The completed board will allow you to implement these projects:\n80s Style Melting Digital Clock\nAn Illuminated Rainbow Piano With An Arduino (requires external components)", "step_imgs": [], "step_title": "Step 7: Compatible Projects"}], "channel": ""}, {"category": "", "description": "Hi everybody!\nI am happy to present the \"Steampunk Oriental Night Light - Nur-al-Andalus\" as my latest object to you.\nLike it is a typical for my creations parts I took all needed parts -even the used batteries- from the scrap!\nThis small lamp is placed at my nightstand and I love to watch the wonderful colours of this nearly wrecked CMH-Bulbs each night.\nTo give you a short impression, I created a small animation of this light by sending the signal C-Q-D (which means: \"Come Quick, Danger!\" at that victorian era Steampunks prefer) in Morse-Code!\nAnd now let us start with some necessary explanations:\nWhen I was looking for some wrecked incandescent light bulbs at my local hardware store, these black coolured tubes which I have never seen before came to my hand and I took them with me at home. After some minutes with google, it was clear that these tubes are called CMH-Light-bulbs. At home, I just tried to activate them with an electronic board for flash units of a single-use camera (see this instructable) and was absolutely surprised, that it worked best!!!\nNOTE: All producers like GE, Philips and more others, write about a possible risk that a bulb could burst when it is running in its normal use. It is said that if this tube bursts, very hot (about 500\u00b0C) glass parts will be spread. So take care and do not wreck yourself. Better cover these bulbs with a protective glass shield.\nMy personal opinion and experience is that these bulbs are quite safe when they just glowing like I used to work with, especially when you use the very low power of these flash units. It seems to me, that it is nearly the same risk like working with neon gas filled bulbs or nixie tubes.\nThese nearly dead CMH bulbs (and also brand new ones) just start to glow and they do not heat up. I measured at different times these bulbs while glowing under here described conditions! and they showed just the same temperature as the surrounding air in the room. Conclusion: This construction works deeply under the operating temperature!\nLiterature talks about 6 exploded bulbs while highly running! in a number of 35 billions of produced bulbs! over a time of twenty years.\nBut it is your own decision and I please you one more time not to harm you, and to take care of your health!!!\nWell, I went down to my workshop and started this project immediately.\nI hope that enjoy the instructable and I thank you for reading, watching, following and hopefully for voting;-))\nYous Aeon Junophor", "title": "Steampunk Oriental Night Light - Nur-al-Andalus", "url": "https://www.instructables.com/id/Steampunk-Oriental-Night-Light-Nur-al-Andalus/", "section": "technology", "steps": [{"step": 1, "steps_text": "If you are interested in more details I\u00b4ll try to give them here by citing them. If not, just jump to the next step!\nIn literature I found a lot of information about these voltaic-arc-lamps and I picked the most important facts for this project out.\nAbout the construction of an arc tube:\nInside the fused quartz arc tube, two tungsten electrodes doped with thorium are sealed into each end and an AC voltage is applied to them through molybdenum foil seals fused in silica. It is the arc between the two electrodes where the light is actually created.\nBesides mercury vapor, the lamp contains iodides or bromides of different metals. Iodine and bromine are of the halogen group of the periodic table, and so are termed \"halides\" when ionized. Scandium and sodium are also used in some types, with thallium, indium, and sodium in European Tri-Salt models. More recent types use dysprosium for high color temperature and tin for lower color temperature. Holmium and thulium are used in very high power movie lighting models. Gallium or lead are used in special high UV-A models for printing purposes. The mixture of the metals used defines the color of the lamp. Some types, for festive or theatrical effect, use almost pure iodides of thallium, for green lamps, and indium, for blue lamps. An alkali metal, (sodium or potassium), is almost always added to reduce the arc impedance, allowing the arc tube to be made sufficiently long and simple electrical ballasts to be used. A noble gas, usually argon, is cold filled into the arc tube at a pressure of about 2 kPa to facilitate starting of the discharge. Argon filled lamps are typically quite slow to start up, taking several minutes to reach full light intensity; xenon fill, as used in automotive headlamps, start up relatively faster.\nFrom history:\nThe concept of adding metallic iodides for spectral modification (specifically: sodium - yellow, lithium - red, indium - blue, potassium and rubidium - deep red, and thallium - green) of a mercury arc discharge to create the first metal-halide lamp can be traced to patent US1025932 in 1912 by Charles Proteus Steinmetz, the \"Wizard of General Electric\".\nIn the mid-1980s a new type of metal-halide lamp was developed, which, instead of a quartz (fused silica) arc tube as used in mercury vapor lamps and previous metal-halide lamp designs, use a sintered alumina arc tube similar to those used in the high pressure sodium lamp. This development reduces the effects of ion creep that plagues fused silica arc tubes. During their life, sodium and other elements tends to migrate into the quartz tube, because of high UV radiation and gas ionization, resulting in depletion of light emitting material that causes cycling. The sintered alumina arc tube does not allow the ions to creep through, maintaining a more constant colour over the life of the lamp. These are usually referred as ceramic metal-halide lamps or CMH lamps.The amount of mercury used has lessened over years of progress.\nAbout the outer bulb:\nMost types are fitted with an outer glass bulb to protect the inner components and prevent heat loss. The outer bulb can also be used to block some or all of the UV light generated by the mercury vapor discharge, and can be composed of specially doped \"UV stop\" fused silica. Ultraviolet protection is commonly employed in single ended (single base) models and double ended models that provide illumination for nearby human use. The cover glass of the luminaire can be used to block the UV, and can also protect people or equipment if the lamp should fail by bursting.\nOld HMI lamps\nAt the end of life, metal-halide lamps exhibit a phenomenon known as cycling. These lamps can be started at a relatively low voltage but as they heat up during operation (sic!), the internal gas pressure within the arc tube rises and more and more voltage is required to maintain the arc discharge. As a lamp gets older, the maintaining voltage for the arc eventually rises to exceed the voltage provided by the electrical ballast. As the lamp heats to this point, the arc fails and the lamp goes out. Eventually, with the arc extinguished, the lamp cools down again, the gas pressure in the arc tube is reduced, and the ballast once again causes the arc to strike. This causes the lamp to glow for a while and then goes out, repeatedly. In rare occurrences the lamp bursts at the end of its useful life.", "step_imgs": ["https://cdn.instructables.com/FC8/212S/JT4TSC5L/FC8212SJT4TSC5L.LARGE.jpg", "https://cdn.instructables.com/FQP/4S6T/JT4TSC9N/FQP4S6TJT4TSC9N.LARGE.jpg", "https://cdn.instructables.com/FBW/G201/JT4TS9O5/FBWG201JT4TS9O5.LARGE.jpg", "https://cdn.instructables.com/FEN/7KH3/JT4TSBNH/FEN7KH3JT4TSBNH.LARGE.jpg", "https://cdn.instructables.com/FC2/5GJZ/JT4TSBLQ/FC25GJZJT4TSBLQ.LARGE.jpg"], "step_title": "Step 1: Some More Detailed Explanation About CMH-Bulbs If Needed"}, {"step": 2, "steps_text": "Meanwhile I got several CMH-bulb of different ages from brand new to very old ones and tested them intensively.\nIn these picture you can see my results.", "step_imgs": ["https://cdn.instructables.com/FUB/IWHB/JT4TSCAU/FUBIWHBJT4TSCAU.LARGE.jpg", "https://cdn.instructables.com/F7R/O5Q8/JT4TSBUG/F7RO5Q8JT4TSBUG.LARGE.jpg", "https://cdn.instructables.com/FLT/Z1N6/JT4TSBWE/FLTZ1N6JT4TSBWE.LARGE.jpg", "https://cdn.instructables.com/F2W/4GFD/JT4TSC22/F2W4GFDJT4TSC22.LARGE.jpg", "https://cdn.instructables.com/FHQ/9YPL/JT4TSC5H/FHQ9YPLJT4TSC5H.LARGE.jpg", "https://cdn.instructables.com/FGG/72NG/JT4TSC0U/FGG72NGJT4TSC0U.LARGE.jpg", "https://cdn.instructables.com/F2T/FRNN/JT4TSC21/F2TFRNNJT4TSC21.LARGE.jpg", "https://cdn.instructables.com/FIL/1O37/JT4TSC3B/FIL1O37JT4TSC3B.LARGE.jpg", "https://cdn.instructables.com/FF3/R3W8/JT4TSC8F/FF3R3W8JT4TSC8F.LARGE.jpg"], "step_title": "Step 2: Results of Testing CMH-bulbs With Different Ages"}, {"step": 3, "steps_text": "An old cigar box was broken in the middle when I took it from the scrap. To use this box once again, I cut the broken part off with a jig saw and made it smaller.Some brass made clamps, fixed with small M4 brass made screws are used for decoration and keep the edges together (which is of course not necessary but sound good as explanation)...\nIn the middle of the box top I placed the cover of an old and of course totally damaged junction box made of bakelite. Therefore I cut a big hole with a fret saw, finished it with some sanding paper and glued the bakelite cap with epoxy-resin in.\nThe hole in the middle of this cap had been used to close the junction box with a huge bakelite screw which also misses and a piece of a recycled copper tube muffle now perfectly fits in. In this muffle I put the bulb holder made of copper which is explained intail next step.", "step_imgs": ["https://cdn.instructables.com/F8T/E0I4/JT4TS8WA/F8TE0I4JT4TS8WA.LARGE.jpg", "https://cdn.instructables.com/F62/PYUM/JT4TS916/F62PYUMJT4TS916.LARGE.jpg", "https://cdn.instructables.com/FTQ/8OZK/JT4TS8ZM/FTQ8OZKJT4TS8ZM.LARGE.jpg", "https://cdn.instructables.com/FWD/71YS/JT4TS8YF/FWD71YSJT4TS8YF.LARGE.jpg", "https://cdn.instructables.com/FX4/D56R/JT4TS8XC/FX4D56RJT4TS8XC.LARGE.jpg", "https://cdn.instructables.com/FB5/OFAV/JT4TS954/FB5OFAVJT4TS954.LARGE.jpg", "https://cdn.instructables.com/FPW/Q6QR/JT4TS8Z0/FPWQ6QRJT4TS8Z0.LARGE.jpg", "https://cdn.instructables.com/FT5/INXE/JT4TS9EF/FT5INXEJT4TS9EF.LARGE.jpg", "https://cdn.instructables.com/FDR/OOQH/JT4TS9DD/FDROOQHJT4TS9DD.LARGE.jpg", "https://cdn.instructables.com/FAD/2KU8/JT4TS928/FAD2KU8JT4TS928.LARGE.jpg", "https://cdn.instructables.com/FJB/F3CX/JT4TS92Q/FJBF3CXJT4TS92Q.LARGE.jpg", "https://cdn.instructables.com/FLV/LG73/JT4TS94L/FLVLG73JT4TS94L.LARGE.jpg"], "step_title": "Step 3: Woodworking With the Box"}, {"step": 4, "steps_text": "The glowing light of these old CMH-bulbs is not so bright and so I took a piece of copper tube which once had been cut in the middle, polished and lacquered it, so that the inner side now reflects the light. The Top crown is made of different parts from the scrap like cover nuts, washers, rubber, a bearing cage made laminated fabric as well as copper- and brass made rings of different sizes. All parts had been finally glued together with epoxy resin and super glue.\nAs you can see at the pictures, long screws were needed to tighten the new box. Therefore I used these special screws which I already developed in this Flickering Bulb project. In combination with the \"crowned\" bulb holder and the bakelite cap it came to my mind that this lamp now looks like it is inspired from elements of the moorish architecture and I tried to work out this idea best.\nThe levers of the switches were also covered with brass.", "step_imgs": ["https://cdn.instructables.com/FE7/QK93/JT4TS99F/FE7QK93JT4TS99F.LARGE.jpg", "https://cdn.instructables.com/F3B/U081/JT4TS9B3/F3BU081JT4TS9B3.LARGE.jpg", "https://cdn.instructables.com/FTE/17AT/JT4TS9QV/FTE17ATJT4TS9QV.LARGE.jpg", "https://cdn.instructables.com/FS6/OH2J/JT4TS9P7/FS6OH2JJT4TS9P7.LARGE.jpg", "https://cdn.instructables.com/FO2/ML5J/JT4TS9PS/FO2ML5JJT4TS9PS.LARGE.jpg", "https://cdn.instructables.com/FFA/3NKC/JT4TS9RD/FFA3NKCJT4TS9RD.LARGE.jpg", "https://cdn.instructables.com/FWL/K1SX/JT4TS9M2/FWLK1SXJT4TS9M2.LARGE.jpg"], "step_title": "Step 4: Metal Works"}, {"step": 5, "steps_text": "Another old junction box, made of bakelite had been used before as a tester for these CMH-tubes and there I took out all the electronic parts for this lamp an added one more switch and a 470k ohms potentiometer.\nIt is also possible to run the flash unit with 3.0 Volts instead of 1.5 Volts without ans problems. The \"higher\" voltage supply with 3.0 Volts of the circuit let the glowing of the CMH-Bulbs shine brighter or even is necessary to ignite the glowing.\nWhile testing different aged CMH-bulbs, the idea came to my mind to add one small amber coloured LED to enlighten them additionally from the bottom, when their own glowing light is too weak.\nSo one can choose to switch on the LED too and with the potentiometer it is possible to regulate this LED-light.\nThis LED is integrated in the screw terminal for the CMH-tube an fixed with melting glue. In this case I chose two separate battery holders but you can also supply all electronic parts with one holder and 3 Volts. (This I show you in the following project)", "step_imgs": ["https://cdn.instructables.com/FXM/5V0M/JT4TS9CS/FXM5V0MJT4TS9CS.LARGE.jpg", "https://cdn.instructables.com/FGU/X356/JT4TSC6W/FGUX356JT4TSC6W.LARGE.jpg", "https://cdn.instructables.com/FVI/N5RN/JT4TS9FO/FVIN5RNJT4TS9FO.LARGE.jpg", "https://cdn.instructables.com/FGE/1HSG/JT4TS9IR/FGE1HSGJT4TS9IR.LARGE.jpg", "https://cdn.instructables.com/FQZ/R790/JT4TS96B/FQZR790JT4TS96B.LARGE.jpg", "https://cdn.instructables.com/F66/J7ZO/JT4TS98C/F66J7ZOJT4TS98C.LARGE.jpg", "https://cdn.instructables.com/F0P/HTQ3/JT4TS9G7/F0PHTQ3JT4TS9G7.LARGE.jpg", "https://cdn.instructables.com/FTC/N5HJ/JT91IZAI/FTCN5HJJT91IZAI.LARGE.jpg", "https://cdn.instructables.com/F5X/QSMU/JT91IZ9G/F5XQSMUJT91IZ9G.LARGE.jpg", "https://cdn.instructables.com/FCL/MNL7/JT4TS9MK/FCLMNL7JT4TS9MK.LARGE.jpg", "https://cdn.instructables.com/F9A/J64L/JT4TS9NM/F9AJ64LJT4TS9NM.LARGE.jpg"], "step_title": "Step 5: Electronic Equipment and Assembling All Parts"}], "channel": ""}, {"category": "", "description": "Imagine you have a scrambled Rubik's Cube, you know that puzzle form the 80s that everyone has but nobody really knows how to solve, and you want to bring it back into its original pattern. Luckily these days it is very easy to find solving instructions. So, go online look at a video learn how to turn the sides to bring you joy. After doing it a couple of times, however, you will realize that there is something missing. A hole inside that can't be filled. The engineers/maker/hacker within you simply cannot be satisfied with solving something so amazing in such a simple way. Wouldn't it be much more poetic if you had a machine that did all the solving for you? If you'd built something all your friends would be amazed by? I can guarantee you that it doesn't get much better than watching your creation do wonders and solve a Rubik's Cube. So, come and join me on the wonderful journey of building Q-Bot, the open source Rubik's Cube Solver that most certainly won\u2019t beat any world records, but will give you hours of joy (after of course going through all of the frustrations during the building process).", "title": "Q-Bot - the Open Source Rubik's Cube Solver", "url": "https://www.instructables.com/id/Q-Bot-the-Open-Source-Rubiks-Cube-Solver/", "section": "technology", "steps": [{"step": 1, "steps_text": "The complete solver was designed with CAD in Catia. This way most of the design errors could be found and corrected before manufacturing any physical components. Most of the solver was 3D printed in PLA using a prusa MK3 printer. In addition, the following hardware was used:\n8 pieces of 8 mm aluminium rod (10cm length)\n8 linear ball bearings (LM8UU)\na little under 2 m of GT2 6mm timing belt + some pulleys\n6 NEMA 17 bipolar stepper motors\n6 Polulu 4988 stepper drivers\nan Arudino Mega as the controller for the project\na 12 V 3A power supply\na step down converter to safely power the arduino\nsome screws and connectors\nsome plywood for the base\n\nHardware description\nThis section briefly covers how the Q-Bot even functions and where the above mentioned components are used. Below you can see a rendering of the fully assembled CAD modell.\nThe Q-bot works by having four motor attached directly to the Rubik's Cube with 3D printed grippers. This means that left, right, front and back can be turned directly. If the top or the bottom side need to be turned, the entire cube must be turned and so two of the motors have to be move away. This is done by attaching each of the gripping motors onto sleds driven by another stepper motor and a timing belt along a linear rail system. The rail system consists of two 8 ball bearings that are mounted into cavities in the sled and the whole sled rides on two 8mm aluminium shafts. Below you can see the sub assembly of one axis of the solver.\nThe x- and the y-axis are basically identical they only differ in the height of the mounting point of the belt, this is so that there are no collisions between the two belts when fully assembled.", "step_imgs": [], "step_title": "Step 1: Designing the Hardware"}, {"step": 2, "steps_text": "Of course, selecting the right motors is very important here. The main part is that they need to be strong enough to be able to turn a Rubik's cube. The only problem here is that no manufacturer of Rubik's cubes gives a torque rating. So, I had to improvise and do my own measurements.\nGenerally torque is defined by the force directed perpendicularly to the position of the rotational point at the distance r:\nSo, if I could somehow measure the force applied to the cube I could calculate the torque. Which is exactly what I did. I clamped my cube to a shelf in a way that only one side could move. That a string got tied around the cube and a bag attached at the bottom. Now all that was left to do was slowly increase the weight in the bag until the cube turned. For the lack of any accurate weights I used potatoes and measured them afterwards. Not the most scientific method but because I'm not trying to find the minimum torque it is quite sufficient.\nI did the measurments three times and took highest value just to be safe. The resulting weight was 0.52 kg. Now because of Sir Isaac Newton we know that Force equals mass times acceleration.\nThe acceleration, in this case, is the gravitational acceleration. So the required torque is given by\nPlugging in all of the values, including half of the diagonal of the Rubik's cube, finally reveals the required torque.\nI went with stepper motors that are able of applying up to 0.4Nm which is probably an overkill, but I wanted to be safe.", "step_imgs": [], "step_title": "Step 2: Picking the Right Motors"}, {"step": 3, "steps_text": "The base consists of a very simple wooden box and it houses all the required electronics. It features a plug to turn on and off the machine, an LED to indicate if it is turned on, an USB B port and a socket for the power supply to plug into. It was constructed using 15mm plywood, some screws and a bit of glue.", "step_imgs": [], "step_title": "Step 3: Constructing the Base"}, {"step": 4, "steps_text": "Now with all the required parts, including the base, the Q-bot was ready to assemble. The custom parts were 3D printed and adjusted where needed. You can download all of the CAD files at the end of this ible. The assembly included fitting all of the 3D printed parts with the bought parts, extending the motor cables and screwing all of the parts to the base. In addition, I put sleeves around the motor cables, just to make in look a little neater, and added JST connecters to their ends.\nTo highlight the importance of the base I built, here is a before and after shot of what the assembly looked like. Tiding everything up a bit can make a huge difference.", "step_imgs": [], "step_title": "Step 4: Assembling the Hardware"}, {"step": 5, "steps_text": "As for the electronics the project is rather simple. There is a main 12V power supply, that can deliver up to 3A of current, which powers the motors. A step-down module is used to safely power the Arduino and a custom shield for the Arduino was designed that houses all of the stepper motor drivers. The drivers make controlling the motors much easier. Driving a stepper motor requires a specific control sequence but by using motor drivers we only need to generate a high pulse for each step the motor shall turn. In addition, some jst connectors were added to the shield to make connecting the motors easier. The shield for the Arduino was firtsly built on a piece of perfboard and after making sure that everything workes as it was supposed to it got manufactured by jlc pcb. The egale files can be downloaded at the end of this ible.", "step_imgs": [], "step_title": "Step 5: Electronics"}, {"step": 6, "steps_text": "The Q-Bot is divided into two parts. On the one hand there is the hardware that gets controlled by the Arduino, on the other hand there is a piece of software that calculates the solving path for the cube based on the current scramble. The firmware running on the Arduino was written by myself but in order to keep this guide short I will not go into any details about it here. If you wish to have a look at it and play around with it, the link to my git repository will be provided at the end of this document. The software that calculates the solution runs on a windows machine and was written by a colleague of mine, again links to his source code can be found at the end of this ible. The two parts communicate using a simple serial interface. It calculates the solution based on Kociemba's two phase algorithm. The solving software sends a command consisting of two bytes to the solver and waits for it to return an \u2018ACK\u2019. This way the solver can be tested and debugged using a simple serial monitor. The complete instruction set can be found below.\nThe commands to turn each motor for one step are a workaround for a problem where some of the steppers would randomly perform small jumps upon power up. To compensate for this the motors can be adjusted to their initial position prior to the solving process.", "step_imgs": [], "step_title": "Step 6: Software & Serial Interface"}, {"step": 7, "steps_text": "After eight months of developing, swearing, hitting the keyboard and dancing the Q-bot was finally at a point where is successfully solved its first Rubik's Cube. The scramble of the cube had to be inserted manually into the control software, but everything worked well.\nI added a mount for a webcam a couple of weeks later and my college adjusted the software to read the cube automatically from the images taken. However, this is not tested well yet and still needs some improvements.\nIf this instructable sparked your interest don't hesitate and start building your very own version of the Q-bot. It might seem daunting at first, but it is very much worth the effort and if I could do it so can you.\nResources:\nSource Code of the Firmware:\nhttps://github.com/Axodarap/QBot_firmware\nSource Code of the control software\nhttps://github.com/waldhube16/Qbot_SW", "step_imgs": [], "step_title": "Step 7: Conclusion"}], "channel": ""}, {"category": "", "description": "What can you create merging one of the most appreciated flying wing frame, a proper electronic setup and a well set autopilot software? You'll have a nice and funny \"toy\" that can amuse different pilots with different skills.\nThis project started when i decided to put aside for a while other random ideas about rc planes, to dedicate some effort to design and build a model with some specs in mind. No custom, hotwired wing profile, no strange motor configuration and so on...\nI've listed these design goals:\nThe plane must \"fly well\" while being reasonably cheap, less than 100 bucks, the less the better. (well, purchase from china, without the transmitter-receiver).\nThe plane must have an FPV system, with an OSD device that's easy to set up.\nThe plane must being able to carry an HD action cam (foxeer legend, runcam 2, something light, with a low profile).\nThe plane must have a reliable flight controller (not only a gyro stabilization). I don't aim to do autonomous waypoint missions (nevertheless the hardware would be ok), what i want is:\nAutolaunch feature, for no-brain takeoff and no need of additional tools like catapults or bungees (or a buddy that launches the plane for us).\nAutonomous flight mode, like \"cruise\" and \"RTH\".\nReliable failsafe behavior in the event of video/radio signal lost.\nBattery voltage and current monitoring for additional safety.\nGood flight time, 20-30 min with a calm flight\nYou know, wouln't be nice to have a small and cheap rc plane, that you can always keep in the car's trunk to use it whenever and wherever you want? A plane that's also funny, with nice advanced features that can save you a lot of hassle, and with an HD cam to record your best places and moments? Well, i'm really sure it would, so i wrote this tutorial!", "title": "RC Plane: FPV & INAV on a Z-84 Wing", "url": "https://www.instructables.com/id/RC-Plane-FPV-INAV-on-a-Z-84-Wing/", "section": "technology", "steps": [{"step": 1, "steps_text": "One of the best plane i've ever had (and also heard of) is the Mini Talon. Nevertheless i didin't choose the mini talon for this project because it would't be an easy model to build and, more important, it wouldn't be a cheap model at all!\nAnother reasonable candidate could be the nano Skyhunter, which is a small and funny plane. Unluckily this frame is affected by some aerodynamic issues (it can start unwanted flat spins after tip stall and, without rudder, is not easy to save the plane) and for this reason it's not recommended for anyone.\nSomeone might like the traditional airplane design, with a fuselage, a couple of wing in the middle, with rudder and elevon behind, and a pulling motor on the front. Well, i really don't like to have pulling motors on these kind of planes (fpv). That's not beacuse the propeller disc will likely be in the middle of the recorded frame, that could be even nice. The issue is that the motor (and the propeller) will be more exposed during landing and, even more important, sometime something goes wrong. Remeber that there's always a chance to loose control, for whatever reason, and hit something or someone. With a pushing motor the chances to damage something or hurt someone are way less.\nAnother candidate could be a small delta wing frame, more or less as big as the nano skyhunter (80cm or 31in).\nI have some of them with different setups: with or without the flight controller and FPV gears, with small or big motors and i have to say that this concept has several nice features.\nFirst of all: they are tough and and crash resistant, you can easy glue them back into a fully working status several times. I've had full throttle crashes that required a bag to collect all the pieces spreaded on the field, but with a lot of glue i always managed to fly them again.\nMy final choice is a Wing Wing Z-84 frame, which is a cheap but really appreciated frame, with a nice and areodynamic shape with an efficient airfoil. I've considered also the Eachine Blackwing, but the Z-84 took the lead because of it's larger wingspan (then less wing load). Moreover, a guy called Mark Qvale also appreciates it, and you can believe that if he's happy with a frame then it's a good frame.\nI suggest to buy the plane in kit version and the other specific components, separately. I don't trust the PNP planes beacuse of both the assembly quality and the components quality. I'm not to saying that every PNP plane is crap, it's just that i'm not sure that every plane is well assembled with good components! Moreover i still remember when i've put additional eletronics on my PNP nano skyhunter, it would have been way easier to do than with a kit -unglued- plane. Well, i have to admit that with this kind frame it's not a big deal to choose a PNP beacuse everything will be placed in the canopy.\nFor the records, the photo shows what you will receive with the kit version of the plane. Now we have to add some other components.", "step_imgs": ["https://cdn.instructables.com/F9P/Z7PQ/JSUOW17J/F9PZ7PQJSUOW17J.LARGE.jpg"], "step_title": "Step 1: Choice of the Frame"}, {"step": 2, "steps_text": "In order to fly you'll need other components: a motor (MT), an electronic speed controller (ESC), a battery (BT), two servos and a transmitter-receiver (TX-RX) system.\nIf you want to fly FPV you'll need also a camera (CAM), a video transmitter (VTX) and an antenna.\nThe last feature, the autonomous flight, requires a flight controller (FC) and a GPS module.\nIn the photo you can see what i used for my plane (i know, i forgot the camera).\nAll these components have been collected on these pages (Amazon, Bangood). Keep the page open while i'll proceed describing why i choosed these specfic components.\nMOTOR (MT): in order to keep the price low i've decided to use a quadcopter motor. It would be good enough and i also like to have the threaded motor shaft that doesn't need anything else to fix the propeller (the \"airplane motors\" usually have a smooth shaft that requires a prop adapter/holder). A good choice is the common 2204 2300KV motor. A 2205 or a 2206 motor could also work, but they would be more heavy and expensive for no particular reason. You could/would try to have less KV, in order to use bigger props without overloading the ESC or the battery. Bigger and slower props are more efficient, but you have to deal with your frame available space.\nESC: this component takes power from the battery and gives it to the motor, depending on the received signal. There's no reason to go big here, 12Amps are enough to fly without troubles, 30Amps allows unlimited vertical flight. I'll keep a nice balance, 20A ESC can provide plenty of power also for loops and other acrobatic manouvres. I'll test also DIY batteries made with 18650 li-ion cells, and that's another reason why i don't want to foresee a current consumption higher than 20A.\nOne important ESC's feature is it's BEC, battery eliminator circuit. It's basically a voltage regulator that can provide the right voltage to the RX, the servos and the other electronic. BEC is relevant because most of the expert buidlers think that servos should be powered by a dedicated circuit, which must not provide power to the FC and/or the RX.\nYou know, shit happens, and if there's something wrong with a servo it usually drains a lot of current (brownout).\nThis amount of current could easily be more than the amount that can be provided by the BEC, and therefore the bad servo can \"steal\" power to the other components. If you have the FC on the same power rails it could be forced to reset due low voltage, and therefore disarm the model mid air and a lot of bad bad things will happen. On the other hand, if you have a separated BEC, the brownout could still force you into an emergency landing, or maybe a crash, or maybe you can recover the plane, who knows? The idea is that in any case the OSD, the GPS, the telemetry and the buzzer will remain online, no matter what. That's clear how big this is in case you have to search your plane in the field, meters and meters away in an unknown place.\nAnyway, since this plane has only two servo and since the suggested FC has its own (quite big) BEC, chances are not that bad. You'll gain few grams choosing \"opto\" ESC, without BEC, but imho is not worth the risk. I'll go with BEC ESC, i'll find other safe ways to safe few grams.\nPROPELLER: the best compromise i've found so far is a Dalprop 5046C three blades. A two blades 6040 or 6030 can give you more efficiency but they will run very close to the frame (see the following image) and this make noise. It's not \"taking off airbus\" loud but it's definitely loud and i'd rather keep a low profile when i'm flying around places like golf club and other quiet places. Whatever, it's just a personal choice. You can't further increase the diameter to 7\" or more, you'll hit the frame. You can reduce the prop diameter but you'll lose efficiency. A lot of efficiency. Anyway, any prop ranging from 5050 to 4045 should get you airborne. If you only have quad prop at hand you could still use them.\nI haven't built a motor/esc/propeller test stand yet, it's on the schedule but for now you should trust my \"feeling\" of the full throttle thrust compared to its power consumption (i have a wattmeter, no guessing here) with different propeller. I have these props that are reasonably sized for this model [diameter][pitch]-[blades #]:\n5056-3 -> too much current\n5050-3 -> too much current\n5046-3 -> my choice\n5042-3 -> ok, but you can use more power\n4045-3 -> little thrust and not efficient\n6050-2 -> too much current\n6040E-2 -> ok, but noisy\n5030-2 -> ok, but you can use more power\nBATTERY: Any battery that can provide 20-25A is ok, the capacity should range from 1000 to 1800mAh. I guess that a 1300mAh 20C 3S li-po battery would be the best choice, price/performance wise. I'll test also a 4S li-ion battery made from 18650 cells, i'll discuss that later.\nSERVO MOTORS: these small components will move the ailerons, so they will control the plane's flight path. As you can imagine this is not the best component to save money with, giving up quality. If you have an issue with the esc or the motor you still can try to land doing a controlled glide, if you have a servo that doesn't respond the plane will be out of control. Good news: you need only two of them, so quality servos are not that big chunk of the budget. Any good digital servo with metal gears is a proper choice, the right size is 9g servo.\nRADIO TRANSMITTER/RECEIVER (TX/RX): I won't talk a lot about this combo because the are mainly two options. Option one: you already have one, so you already know what i'm talking about and how to adapt this project to your radio. Option two: you don't have a radio and then you should just stick with the suggested one. A nice choice to begin with is the Flysky FS-I6 paired with an FS-X6B. These cheap radios have a lot of modding potential, you can see my other tutorials, so you can improve the performance and can add a lot of features just for few bucks. Anyway, with this receiver you can easily send the plane more than 1.5Km away, which isn't bad for a casual flight. Are other radios better? Yes, but the price is several times higher so there's no point in this. In the end the only requirement is to have a receiver that can output a serial bus (i-bus for the Flysky, but also sbus and others can work as well) or at least a PPM output. Serial bus is recommended!\nCAMERA (CAM): this choice is really subjective and it could have a notable impact on your wallet. You \"can\" fly with cameras that range from 5 to 100 bucks and here the performance are strongly bonded to the price. Some reviews say that without the best one you can't fly. That's false, you actually CAN FLY, the comfort is worse, the colors might be faded and/or not real but that's still good enough. My choice is a Foxeer HS1177-V2, which is a well tested and appreciated FPV camera.\nVIDEO TRANSMITTER (VTX): different places have different rules, check yours. My choice is a cheap but good enough Eeachne TX526. It works with in the usual 5.8GHz range, it can be set to different transmission power and it has one of the smallest footprint.\nVIDEO ANTENNA: You have two main choices: linear and circular polarization. The stock antennas, the straight \"router like\" ones, are linear polarization antennas, and this is the best choice if you want the farthest video range but it requires your plane to fly mostly flat. The suggested \"mushroom like\" antennas use the circular polarization, and these ones are the best choice if you have lively flight. Linear polarization requires to have the two antenna pretty much aligned, circular polarization doesn't care. I want to do loops and tight turn (with high bank angle), therefore my choice is to use circular polarization antennas. It's very important to have the same polarization on the transmitter and the receiver, and pay attention that the circular polarization can be \"left or right\" polarization, don't mix them. Long story short: use the same antenna on the transmitter and on the receiver, you won't make mistake.\nVIDEO RECEIVER (VRX): I can't tell you what to use in this tutorial beceause i'd need several pages only to cover the main options. Also, the price range is quite wide and you could easily invest more money just to buy FPV goggles than to buy all the other components of this tutorial. Use an FPV monitor, or FPV goggles, with or without diversity, the choice is your. I'll use cheap FPV goggles, you know, they will sleep in my car therefore nothing expensive. (if you really want a suggestion write a comment)\nFLIGHT CONTROLLER (FC): there are a lot of different models, you can have the full-optional and expensive ones or you can have the basic ones but you would need additional components if you want some advanced features. My choice is the Omnibus F4 Pro V3, that's a good mix of embedded features for a reasonable price. First of all it's an F4 and not an F3 CPU, which is enough for everything so far. It has an embedded OSD chip that can be easily set up directly from the main configurator. It has a 3A 5V BEC, enough to easily power every other device. It has an embedded voltage sensor (common) and current sensor (not so common) . With three physical serial ports you can connect a lot of additional device like GPS, telemetry, serial bus RX input... You can save some bucks buying an SP F3 board or a Pico Blk board, but then you'd need to buy and set up an external OSD module, an external current sensor, the software can't reach the same cycle speed... Not to mention the additional effort to configure external components with their \"external\" software, the additional weight and time requirement for the additional wiring. Also, the external components are not for free so if you don't want to give up some features you shouldn't buy cheaper FC for numbers of reasons.\nYou can buy way more expensive FC, they are undoubtedly better, but they won't give you much more for this kind of project and they usually are bigger and heavier.\nThere's more: the suggested FC can also work with Arduplane! Arduplane is a more mature but more complex firmware, it won't be discussed in this tutorial but it's nice to have also this option for the future. You never can tell...\nGPS: it's required for autonomous flights, we'll use it mostly to have our ass covered, and have a plane that can return to home in case of video/radio signal loss. The most common modules have also an embedded compass but that's for the copters. Since our plane must have at least a certain speed to fly, it's always easy to define its direction just by coordinate subtraction. The best choice is a BN-180 or BN-220 module, i've tested both and they are very similar, except for the fact that the 220 can update the firwmare. What this updated firmware can give to you? I don't know and i don't care about it, it works good enough with the stock one. I have a BS-880 on my mini talon, with integrated compass, but i don't use its compass for the same reason, it's not even wired. Actually, the BS-880 is faster to achieve GPS lock and it can see several satellites even in my basement (i'm not kidding!). It's worth to spend more money for the 880? Meh... Since i'm still unable to fly in my basement and since the 180/220 only needs a little more time to get the GPS lock, i'd go with the BN-180/220 module, wich is smaller and lighter (that's good!).\nEdit: the GPS module i've ordered from China has have arrived faulty (dead), no big deal, they'll send me another one but i have to wait the delivery. Since i don't want to wait i'll use a spare BS-880, but that's not relevant for the setup.", "step_imgs": ["https://cdn.instructables.com/FOS/E6TF/JSUOW19F/FOSE6TFJSUOW19F.LARGE.jpg", "https://cdn.instructables.com/FPE/JRWA/JSUOW19E/FPEJRWAJSUOW19E.LARGE.jpg"], "step_title": "Step 2: Base Components"}, {"step": 3, "steps_text": "The project's premises are already nice, but with these components you can upgrade a good FPV plane into an awesome FPV plane.\n1) I'll do some test with li-ion cells, my plan is to increase the flight time by using a 4S, 2600mAh, 7C, DIY battery. As i've already wrote in some comments on this very site: i don't trust people that claims that they can fly a drone with laptop reclaimed cells. I'll use 20A fully capable brand new cells, wich are usually used in vaping cigarettes, and this is barely \"good enough\" to fly an RC plane. A good laptop battery, even in pristine condition, can't provide more than 4-5A. They can't even manage the takeoff power consumption of a small and efficient plane, that's why i call a complete b.s. the claims that you can lift a quadcopter with them. Anyway, there are plenty of tutorial about DIY 18650 battery, just be sure to purchase cells from a reputable supplier. Edit: the idea is good but 4S is too heavy, you need 3S battery. Read last chapter...\n2) I'll cover every surface with laminating film! It's not a difficult task, it's only a time consuming task... The process to put heat-shrinkable adhesive thin plastic everywhere on the model needs patience, but you'll end with a stronger, more rigid, more efficient and better looking plane. Anyway, i can imagine that only few people would invest 2-3 hours to cover everything. If you don't laminate the whole model you should put a stripe of tape on the leading edge of the wings. That's the most exposed part and is worth to spend few minutes to protect it. If you do laminate invest some money in a proper laminating iron, with such curved and small profiles a standard clothes iron is way too big and heavy, the small details will be a pain in the a.\n3) Since i'll use 4S batteries i have to expect higher speed, higher speed means higher stress on the wings. I've decided to replace the stock glass fiber spar with a carbon fiber spar, wich is more rigid (and lighter, but that's not really relevant). I don't fear that the plane would broke in half in a tight turn, it won't, i just want to make it more rigid. The carbon spar (and the laminated wings!) will significantly increase the plane's rigidity and therefore the plane's handling at high speed and during high G maneuvres.", "step_imgs": ["https://cdn.instructables.com/F63/0FOB/JSUP34V3/F630FOBJSUP34V3.LARGE.jpg", "https://cdn.instructables.com/FIP/6TJ0/JSUOW18S/FIP6TJ0JSUOW18S.LARGE.jpg", "https://cdn.instructables.com/FNG/OWZ2/JSUOW184/FNGOWZ2JSUOW184.LARGE.jpg", "https://cdn.instructables.com/FIN/7G4B/JSUOW1NC/FIN7G4BJSUOW1NC.LARGE.jpg"], "step_title": "Step 3: Optional Components"}, {"step": 4, "steps_text": "Now it's time to glue something. The assembly is quite straightforward, there are no chances to glue something in the wrong place, but you have to use the proper glue. Generic \"super glue\" or cyanoacrilate glues are not recommended, you need a foam specific glue. The UHU POR is ideal, but also other foam glues are ok. One hint: glue the stabilizer fins at the end of the build, you'll have more room to move during the electrical wiring.\nTo glue the servos you could use hot glue, just few drops. I'm worried about the underwing servo linkage, which exposes them to shocks when you land on a not-flat surfaces (like every field), so i'd rather use a not-so-strong glue in case i have to change them. That's the price of better airfoil efficiency (due to the clean upper surface).\nTake care to install the servo arm at 90\u00b0 respect to the servo's case, when the servo's shaft is in the middle of its span. The servo arm should be able to move simmetrically in both direction, starting from 90\u00b0.\nTo mount the motor i've used a custom 3D printed part (thanks Mark), which is better than the stock one because it put the motor further back allowing bigger prop clearance (and slightly heavier batteries). It's ok to have the motor not horizontal when the frame is on the table, it will be leveled during flight.\nThe FC uses four nylon stand off, glued to the bottom of the fuselage. The ideal spot for the FC is exactly the CG, in this case it would be right under the carbon spar and it would be really uncomfortable. I've placed it right before the carbon spar.\nThe GPS, the VTX, the RX and the motor should be placed the as far as possible, especially respect to the motor, in orderto minimize the interference. I don't plan to do long range with this model, so this is not mandatory, and the drawback of installing components at the end of the wings is an increased inertia, which is bad for a short range fun wing. I've found a good compromise that doesn't bother me with a lot of long wiring but still keep the components quite apart.\nSince i've laminated every surface i had to cut slots in the foam for the additional components. That's not mandatory if you didn't laminate the surfaces, but it's still highly recommended because it preserves the awesome plane's aerodynamics. The only component that shouldn't be cover is the VTX because it needs to be cooled by fresh air, i've attached it with strong and thick double side tape.\nIn the photos you can also see a telemetry module, i'll use it to do some tests with a ground station but i don't want to increase the complexity of this tutorial, just ignore it.\nI put the cam in the nose (obviously) and i cut a dedicated slot in the fuselage foam. Please note that if you want the cam pointing straight forward during flight it should be aligned with the motor and not the table.\nI've cut the top fin on the motor cowl, it doesn't do anything except make noise and reduce the air flux on the propeller (Mark's hint, and i totally agree).\nSince i've laminate everything, also the fuselage belly, the air intakes under the fuselage are now sealed. The ESC and the motor have to be cooled so i've cut a small rectangular hole in the red canopy, right over the camera, to have a fresh air inlet. I suggest to do the same belly sealing, even if you don't laminate everything, because the air intakes under the fuselage will likely collect dirt, and if you have dirt inside the canopy it can exit only through the motor, and that's not good. Don't worry, you won't miss the grips to launch the plane, you'll be assisted by the autolaunch and the \"frisbee launch\" will work like a charm.\nThere's more: it's way more aredynamic and you really have to agree with me that its smooth and flat belly looks AWESOME! ^_^\nThe mechanical assembly is done, just paint it as you like and proceed with the wiring.\nPS: spray paint IS HEAVY! Use as many as you need to make your model visibile in the sky but try to avoid a full body paint, and avoid multiple layers.", "step_imgs": ["https://cdn.instructables.com/FYR/D14Q/JSUOW17E/FYRD14QJSUOW17E.LARGE.jpg", "https://cdn.instructables.com/F00/VRKE/JSUOW16G/F00VRKEJSUOW16G.LARGE.jpg", "https://cdn.instructables.com/F13/9EGO/JSUOW16Q/F139EGOJSUOW16Q.LARGE.jpg", "https://cdn.instructables.com/FSL/UHFT/JSUOW16J/FSLUHFTJSUOW16J.LARGE.jpg"], "step_title": "Step 4: Frame Assembly"}, {"step": 5, "steps_text": "You'll need some tools, my basic DIY electronic kit is collected here.\nFirst of all, sooner or later the FC must be calibrated, and it's easier to do that moving the PCB instead of moving the whole fuselage. So, if the FC is not calibrated yet, jump to the next step (software), calibrate the FC and come back.\nNow heat up your soldering iron and use a drop of tin to bridge two pads under the FC, look at the photo. You have to connect the pad \"RAM\" with the pad \"VCC\", this will provide battery (unregulated) voltage to the VTX and the CAM. If you don't use my suggested components be sure that yours can accept 3-4S lipo voltage. In case they work with 5V, bridge the RAM pad with the 5V pad instead.\nThe other components have to be connected as shown in the attached wiring diagram. It's not difficult, just do one step at time and double check polarity and the welding quality. The most annoyng thing is to split 5V and GND cables (to provide power to bot the GPS and the RX), and to solder the negative/black wires of both the esc and the battery connector to the same GND pad (big and squared under the FC). This could be somehow difficult, use abundant soldering flux and set the iron on max power.\nHint: if you feel confident with the soldering iron you should remove the connectors in most of the cables and proceed soldering every wire right in place. I've done this for pretty much everything (except for the servos, i still want to being able to change them quickly) because of two reasons. One, you'll save few grams here and there. Two, a connector might get loose while its appearance is still ok, and you really don't want hidden issues in an rc plane. Try to keep the wires just as long as needed, it will also help with the weight reduction and the cable management.\nBe careful and double check all connections, a crash could be fixed with some glue, a smoked component has usually to be trashed. Don't use a lipo to power it up the first time! You should use a power supply that can't provide a lot of amps, i've used a 12V 1A power supply (you can see the connector adapter in one of the previous step photos). Another good choice is the portable variable power supply that i've described here.", "step_imgs": ["https://cdn.instructables.com/FMX/LHZC/JSUOW16N/FMXLHZCJSUOW16N.LARGE.jpg", "https://cdn.instructables.com/FVX/S9ZU/JSUOW16H/FVXS9ZUJSUOW16H.LARGE.jpg", "https://cdn.instructables.com/FWO/PY96/JSUOW15O/FWOPY96JSUOW15O.LARGE.jpg"], "step_title": "Step 5: Electrical Wiring"}, {"step": 6, "steps_text": "Ok, the first FC setup could be overwhelming because of the huge number of new information but, with a little patience and doing one little step at time we will eventually complete the task.\nFirst step: download and install the firmware (INav) configurator. I have Win 10, try to use the same OS to minimize the chances to get stuck somewhere. I'm using version 2.1.4, if you find something strange and you are using a subsequent version just revert back and install this specific version.\nNow the worst part: the driver's installation. Sometimes is just a matter of plug the USB and let the OS do the trick, other times you need to use colorful words and a lot of profanity. The best Win10 strategy is to use this free software: Impulse RC driver fixer. Plug in the USB, run it as administrator and finger crossed.\nIf you open the INav configurator and in the top right field (look at the images, the \"driver\" rectangle) you see a new COM port, and you can connect to it, you are fine. Maybe the configurator software will tell you that your firmware version is not compatible but that's still good, we'll update the firmware anyway.\nNow, unplug the USB, press the \"boot\" button on the FC (is near the buzzer) and keep it pressed while you re-plug the usb in. Now in the field \"driver\" you should show \"DFU\". If you don't see DFU try to run again the driver fixer. If you don't see \"DFU\" but can connect to the COM port, you can go to the CLI tab (read further), type \"dfu\" in the input bar and then press enter. The FC should reboot in DFU mode.\nWithout this DFU option in the upper right corner you can't proceed, you have to find a solution before trying to proceed further. I can't write a tutorial about all the possible driver issues on every OS, you have to google that by yourself.\nWhen you see DFU, happy days, the worst part is already done! Proceed by following the numbers:\nclick button Nr 1 to open the right tab,\nselect the right option in the drop down men\u00f9: \"choose a board\" -> \"OMNIBUS F4 PRO\", \"choose a Firmware version\" -> \"2.0.1 - OMNIBUSF4PRO ...\"\nclick button Nr 4 and wait, you need internet connection because it will download the chosed firmware,\nclick button Nr 5 and you should see, after few messages, the message \"firmware flashed\".\nNow the FC should reboot, and instead of DFU you should see a COM port again, if it doesn't appear unplug the USB and retry. Click \"Connect\" and you should go online on the FC.\nNow you have to calibrate the accelerometers, go on the tab \"Calibration\" and follow the procedure. It's really easy, you have to hold the FC in 6 different angles and press the calibrate button. Now the board is calibrated and you can go back to take care of the wiring.\nNow it's time to set up the new firmware, there's a huge number of parameters and it's impossible to explain everything in a single tutorial. The firmware developers explain (more or less) everything in their wiki, but for this project we'll exploit the CLI (command line interface). Don't worry, it's nothing more than a copy&paste task, and it's way easier to have the job done this way than following a to-do list made by dozens steps distributed on several pages.\nYou can donwload the full configuration file here, scroll down to the end of the page or search for \"CLI OMNIBUS F4 PRO INAV 2.0.1\", it's config file dowload link.\nThe file can be used as it is. You might want to change only one parameter, the airplane name, which is shown also in the OSD. Go to line 840 or search the string \"set name\", the current value is \"Z-84 UBHF.EU\", you can use whatever you want, just modify the string (don't use special characters).\nNow select everything in the txt (ctrl+a on most text editor) and then copy it (ctrl+c).\nOpen the CLI tab in the INav configurator (look at the screenshot) and click on the input field (were it's written \"save\" in the image) and just paste (ctrl+p) the text, now press \"enter\" and it's done. The last string should be \"save\" and when you click enter the values will be stored in the FC, and the board itself will reboot (and disconnect).\nNow you only have to check that everything was done properly, reconnect to the FC, go to the \"receiver\" tab and check that the different channels behave as supposed (bind the receiver! just press the right button, plenty of tutorial online). The GPS tab might not show a GPS lock if you are inside a building, but at least it must not show errors. The OSD tab should look like the one in the last step video, but feel free to modify the configuration in the OSD page (by drag and drop). Modify the layout as you wish, it's not critical for the flight. If you want to change the switch assignment on your transmitter use the \"modes\" tab.\nThe default behavior is:\n- switch A (CH5) -> arm the plane\n- switch B (CH6) -> force manual mode\n- switch C (CH7) -> altitude hold mode / horizon mode / RTH mode\n- switch D (CH8) -> failsafe killswitch\n- var A (CH9) -> up = autotrim, left = autotune\n- var B (CH10) -> down = buzzer and failsafe\nThe autolaunch is always active so you only have to arm the plane, increase the throttle, and launch it. If you want to disable the assisted launch you only have to arm the plane and move the roll or pitch stick.\nThat's all, now you have a nice plane to have fun with!", "step_imgs": ["https://cdn.instructables.com/FC2/3TAT/JSUP3K1G/FC23TATJSUP3K1G.LARGE.jpg", "https://cdn.instructables.com/FG7/PY4O/JSUP3K24/FG7PY4OJSUP3K24.LARGE.jpg", "https://cdn.instructables.com/FKS/V1V9/JSUP3K2H/FKSV1V9JSUP3K2H.LARGE.jpg"], "step_title": "Step 6: Software Setup"}, {"step": 7, "steps_text": "Well, i've underestimated the li-ion weight. The 4S 18650 battery weights too much and i'd need to place it over the FC to have the right CG (which is impossible). Actually it's the 4th cell that gives extra weight issue, a 3S battery would be perfect. Unuckily i don't have spare 18650 cells at hand to build a 3S battery and this 4S battery is also used with other models and i don't want to unmount it. Another option, you could add 40-50g at the wing tips (which are behind the CG) to balance the cell's wheight. Now the issue is that you've also increased the roll intertia by a lot (not to mention the relevant ballast weight) and that's not desiderable in a fun wing. It's simply not worth it, it will cripple any positive effect that li-ion would give.\nBeside that i'm very happy with this model, in the video you can see the maiden flight recorded from the DVR. I wrote some hints, you should follow what i wrote and not what i actually did (yeah, it ended well but it was quite overconfident and not the safest approach to a maiden flight).\nThe plane behaves very well at both low and full throttle. When the current sensor will be properly calibrated i'll try different propellers at high speed (they'll behave differently at high speeds respect to the bench test). So far the motor/esc/propeller combo seems to be ok. The plane doesn't suffer gusts that much (it's a light plane and there were gusts!) and it remains stable and precise. Max speed achieved so far is over 100Km/h but the plane can also glide quite well, it doesn't fear tip stall and the it reacts well even if stressed with some rough maneuvre (tight turn, wing over, loop...). It's not a proper trainer plane but it doesn't require a lot of skill to be flown peacefully.\nThe GC should be exactly on the forward edge of the carbon spar. With a spot on CG the flight characteristics are amazing, if the CG is 5mm far from the best point then meh... I don't like it that much. Anyway, 5mm is quite a lot, and in any case remember that a plane with a forward CG flies badly, a plane with a backward CG flies once.\nPower: 20A @ 3S are ok, you can't do an unlimited vertical flight but you have enough power for acrobatic maneuvers. 12A @ 3S would be ok for relaxed flight, 30A or 4S should be reserved for skilled pilot and rigid models (carbon spar and lamniated).\nI have to agree with other reviews, it's a really nice airplane kit that can be adapted to a lot of different tastes, it can be easily set up to fly at more than 130Km/h, or it can be a slope soarer, or it can be an extremely efficient long range platform (it's excellent).\nDon't be as dumb as me: don't attach the HD camera on the canopy! OBVIOUSLY its plastic clip can't retain it in place during acro manouvres, it should have been cristal clear. Use a velcro or something else but attach it to the fuselage. Sorry, no HD video footage. :|\nI don't have anything else to say except that i'm thinkig about a Z-84 Mark-II, I'd like to add the only feature that i miss on this plane: the capability of detach wings to be carried in a backpack (like my zohd dart).\nHave fun!", "step_imgs": [], "step_title": "Step 7: MAIDEN FLIGHT & UPDATES:"}], "channel": ""}, {"category": "", "description": "I wanted to share the world of astronomy / astrophotography with the blind and those that see poorly. This project will do that in a simple fashion with few supplies and cheaply.", "title": "Braille Astronomy", "url": "https://www.instructables.com/id/Braille-Astronomy/", "section": "technology", "steps": [{"step": 1, "steps_text": "You don\u2019t need many supplies.\n\n1) Some black foam core board big enough for your final design. I believe I got mine at Walmart, but many craft stores have it as well.\n2) Paint. I used Windsor & Newton acrylic white paint. I don\u2019t think it has to be that brand, but thicker paint such as acrylic will do well.\n3) Paint applicator. I used a quarter inch (approx. 6mm) diameter plastic dowel from a mandala tool kit, but I bet a carefully cut/ sanded wooden dowel rod would do just fine.\n4) Embossing tool. I used this to make depressed lines between stars. Not sure what you could substitute. I believe you can get them at Hobby Lobby or Michaels. Mine had about an eighth of an inch ball at the end (about 3mm).\n5) Office supplies: hopefully on hand; pencil, paper, tape.", "step_imgs": [], "step_title": "Step 1: Gather Supplies"}, {"step": 2, "steps_text": "If you have a friend or nearby astronomy club, you can get them to take the base picture you want. But with an SLR and a tripod, you can shoot your own. See other instructables for the steps.", "step_imgs": ["https://cdn.instructables.com/FHB/2GDS/JT4TRPMC/FHB2GDSJT4TRPMC.LARGE.jpg"], "step_title": "Step 2: Take an Astrophoto"}, {"step": 3, "steps_text": "Use an app or Photoshop to make the black white and the white black. This might be optional, but I found it very useful to simplify the process. I used PictoScanner for iPhone (free). Crop the image to the constelllation you want. I started with Orion. Note that I had to take a picture of my monitor when I used PictoScanner. Once you like the framing, print it off. Leave a little room at the top for a flap to attach.", "step_imgs": ["https://cdn.instructables.com/FW2/ITMS/JSUOY26B/FW2ITMSJSUOY26B.LARGE.jpg"], "step_title": "Step 3: Reverse the Image"}, {"step": 4, "steps_text": "Simply crease the printout paper at the top, so that you can hang it on the foam core and tape it to the back. I pressed the tape against my palm a few times first to remove some of the stickiness. This allows easier removal, but is optional.", "step_imgs": ["https://cdn.instructables.com/FF1/68D9/JT4TRPPL/FF168D9JT4TRPPL.LARGE.jpg"], "step_title": "Step 4: Attach Reverse Image"}, {"step": 5, "steps_text": "Pick and choose the stars you want to use. This is a case of less is more, so be careful to not overdo it. Flip the paper up and down as you mark star by star with a pencil (don\u2019t dig in, just enough so you know where it is).", "step_imgs": ["https://cdn.instructables.com/FEY/1JBZ/JSUOY0EN/FEY1JBZJSUOY0EN.LARGE.jpg", "https://cdn.instructables.com/FM2/UTIQ/JT4TRPWX/FM2UTIQJT4TRPWX.LARGE.jpg"], "step_title": "Step 5: Make Pencil Marks for the Stars"}, {"step": 6, "steps_text": "Use the embossing tool and a ruler to connect the star marks. Again, less is more, you can crack the foam core board if you are not careful (like I did in the picture). It might be a good idea to practice on scrap.", "step_imgs": ["https://cdn.instructables.com/FNO/UHO3/JT4TRPRW/FNOUHO3JT4TRPRW.LARGE.jpg"], "step_title": "Step 6: Connect the Stars"}, {"step": 7, "steps_text": "Take the dowel and dab paint on the stars you marked. Try to keep the dowel perpendicular. Let it dry. I waited overnight before painting again. Repeat the process at least a couple times for each star. I did a regular star with a few small stars to illustrate a nebulae.", "step_imgs": ["https://cdn.instructables.com/FAS/O7I9/JT4TRPSW/FASO7I9JT4TRPSW.LARGE.jpg", "https://cdn.instructables.com/FUQ/QTJN/JT4TRPW2/FUQQTJNJT4TRPW2.LARGE.jpg"], "step_title": "Step 7: Paint the Stars"}, {"step": 8, "steps_text": "I signed my \u201cart\u201d in the corner..this turned out to be useful for another reason; it gives orientation to the work.\n\nI boxed it up in a box that could be reopened so that it didn\u2019t get damaged going back and forth. You are now ready to share the sky with a vision impaired friend. Enjoy!", "step_imgs": ["https://cdn.instructables.com/FK6/X86X/JT4TRPUA/FK6X86XJT4TRPUA.LARGE.jpg"], "step_title": "Step 8: Finish Up and Box It."}], "channel": ""}, {"category": "", "description": "Are you the kind of person who\u2019s not good with managing keys and always have to try each key for every other lock?\nWell don\u2019t worry, just grab a little bit of motivation and your maker tools to innovate your very own voice controlled smart key holder. Because there\u2019s no problem too small or big that cannot be solved and there\u2019s no maker that cannot solve it.\nAll you have to do is, just ask your smartphone about the lock you want to open. Your phone will then communicate with smart key holder and corresponding LED will light up to indicate about the exact key that belongs to that particular lock.\nThis smart key holder can also be used in banks, hospitals, libraries, administration offices etc.", "title": "Voice Controlled Smart Key Holder", "url": "https://www.instructables.com/id/Voice-Controlled-Smart-Key-Holder/", "section": "technology", "steps": [{"step": 1, "steps_text": "1. Arduino Uno/Nano\n2. USB 2.0 Cable Type A/B(for UNO) and Cable/USB 2.0 A to USB 2.0 Mini B(for nano)\n3. HC05 bluetooth module\n4. LEDs(3)\n5. 3 resistors of value 100 ohms\n6. 9v battery and its connector\n7. Breadboard/General Purpose Zero PCB Printed Circuit Board\n8. Jumper wires\nApart from all these, you'l also need soldering iron, soldering wire and glue gun.\nThat's pretty much everything.", "step_imgs": ["https://cdn.instructables.com/FZC/LIMM/JT4TRNQD/FZCLIMMJT4TRNQD.LARGE.jpg", "https://cdn.instructables.com/FKX/PFMD/JT4TRODN/FKXPFMDJT4TRODN.LARGE.jpg", "https://cdn.instructables.com/FS7/WT0Y/JT4TROFI/FS7WT0YJT4TROFI.LARGE.jpg", "https://cdn.instructables.com/FJG/X9S3/JT4TRNZV/FJGX9S3JT4TRNZV.LARGE.jpg", "https://cdn.instructables.com/FFQ/EHRN/JT4TRO6Y/FFQEHRNJT4TRO6Y.LARGE.jpg", "https://cdn.instructables.com/FO3/7H47/JT4TRO7W/FO37H47JT4TRO7W.LARGE.jpg"], "step_title": "Step 1: Components Required:"}, {"step": 2, "steps_text": "I started by creating a base/socket for Arduino Uno on zero board as shown in the first picture so that we can easily remove or attach the board according to our requirement. Then I connected HC05 bluetooth module to arduino.\n1. Connect Rx pin of bluetooth module to Tx pin of arduino\n2. Connect Tx pin of bluetooth module to Rx pin of arduino\n3. Connect Vcc of module to +5v of board\n4. Lastly connect GND of module to GND OF Uno board\nNext step is to make LED connections. Longer leg of LED is positive terminal and other one is negative terminal. Solder +ve terminal of LED to any one side of resistor and connect other side to digital pin 11 of arduino. Similarly connect the positive terminals of other two LEDs to resistors and other side of resistors to pin 12 and 13 respectively. Connect the negative terminals of all LEDs to GND pin.\nThat's it! We're done with the hardware it.!", "step_imgs": ["https://cdn.instructables.com/FJC/S8GJ/JT4TROKM/FJCS8GJJT4TROKM.LARGE.jpg", "https://cdn.instructables.com/FL6/6CMP/JT4TROKN/FL66CMPJT4TROKN.LARGE.jpg", "https://cdn.instructables.com/FS3/GJHD/JT4TROKQ/FS3GJHDJT4TROKQ.LARGE.jpg", "https://cdn.instructables.com/FZS/X83F/JT4TROKT/FZSX83FJT4TROKT.LARGE.jpg", "https://cdn.instructables.com/FR8/XRZ7/JT4TROLI/FR8XRZ7JT4TROLI.LARGE.jpg", "https://cdn.instructables.com/F5W/Y15B/JT4TROLJ/F5WY15BJT4TROLJ.LARGE.jpg"], "step_title": "Step 2: Hardware Connections"}, {"step": 3, "steps_text": "Download the app \u201cArduino Bluetooth Controller\u201d\nFrom available devices choose HC05. In order to connect your phone to bluetooth module for the first time, you need to enter either 0000 or 1234 as passkey.\nLast step is to upload the given code on arduino and our work is done.\nEnjoy\u2026.!", "step_imgs": ["https://cdn.instructables.com/F25/EGU4/JT4TROTZ/F25EGU4JT4TROTZ.LARGE.jpg"], "step_title": "Step 3: Upload the Code"}], "channel": ""}, {"category": "", "description": "I'm an undergrad researcher in material science and nanomaterials. For years I've wanted a simple science experiment that a child could do with parental or adult supervision for nanoscience outreach. I'm tired of simple baking soda volcanoes. You are better than that.... So lets make nanomaterials in the kitchen! Today, you're gonna make the tiniest Instructable ever.\nSpecifically, we are making Carbon Quantum Dots. Quantum dots are nanometer scale particles, typically of semiconductor. They are so small that when high energy light hits them, the photons will be absorbed then emitted at a lower energy state. QD's are usually made from toxic chemicals but today I'll show you how to make non-toxic quantum dots in your home. Also, they can be used as fluorescent dyes, inks, and possibly paints. I will probably be making things glow around my apartment in the coming days.\nThe original paper at the bottom used baking soda and fructose over the course of an hour. I modified it to use sucrose and take 10 minutes.\nDisclaimer: This is as dangerous as making candy. This is simply cooking, be safe and use common sense, molten sugar is the worst thing to burn yourself with.\nEquipment Needed\nMicrowave\nTempored Glass bowl(I prefer Borosilicate but we aren't rapidly changing temperatures)\nHeat resistant gloves(perhaps with silicone for grip)\nA few containers for you samples\nPlastic Pipettes\nGlass vials to store\nUV or Blacklight\nSupplies\nWater(I used tap water)\nBaking soda(Sodium Bicarbonate)\nCane sugar(Sucrose)\nWhite Vinegar(Acetic Acid)", "title": "DIY Quantum Dots(Nanotech in Your Kitchen)", "url": "https://www.instructables.com/id/DIY-Quantum-DotsNanotech-in-Your-Kitchen/", "section": "technology", "steps": [{"step": 1, "steps_text": "Add to the glass bowl\n1 cup of water\n1/4th cup of vinegar\n6 tablespoons of sugar(80 grams)\nMicrowave for 5 minutes\nThe sucrose must be broken down in a process called inversion, the sucrose is broken into fructose and glucose. Sucrose inversion is heavily used candy making because it makes the sugar less grainy in sweets. The acid decreases the time needed to do this from hours to minutes, especially with the application of heat.", "step_imgs": ["https://cdn.instructables.com/F2E/MURX/JSYZ7UP8/F2EMURXJSYZ7UP8.LARGE.jpg", "https://cdn.instructables.com/FX0/U8KO/JSYZ98NS/FX0U8KOJSYZ98NS.LARGE.jpg"], "step_title": "Step 1: Prep the Saccharide"}, {"step": 2, "steps_text": "Allow the bowl to cool to be safely handled\nSlowly add 20 grams of baking soda to the solution.(See video to see what happens when you do it all at once.)\nThe solution must be basic for the synthesis to occur so we add enough baking soda to neutralize the acid and make raise the pH.", "step_imgs": ["https://cdn.instructables.com/FIP/N4QB/JSYZ99AH/FIPN4QBJSYZ99AH.LARGE.jpg", "https://cdn.instructables.com/F6P/88AR/JSYZ99EB/F6P88ARJSYZ99EB.LARGE.jpg", "https://cdn.instructables.com/FPE/MIIE/JSYZ7UNF/FPEMIIEJSYZ7UNF.LARGE.jpg"], "step_title": "Step 2: Neutralize the Acid"}, {"step": 3, "steps_text": "Microwave the basic solution for 5 minutes. The liquid will yellow then darken.\nAs the concentration of QD's increase, the liquid will get darker and darker. I was able to get formation within 3 minutes but I wanted to minimize any chance of failure for anyone reproducing this experiment.", "step_imgs": ["https://cdn.instructables.com/F6B/1P71/JSYZ99IS/F6B1P71JSYZ99IS.LARGE.jpg"], "step_title": "Step 3: Synthesize the Quantum Dots"}, {"step": 4, "steps_text": "Allow the bowl to cool then pipette small amounts to a half filled vial of water. The Quantum Dots/sugar mixture will disburse and glow Green when exposed to an ultraviolet light.\nIf the QD's are too concentrated then they wont glow as well, you have most likely made several cups or a liters worth of Quantum Dots in 10 minutes, Congratulations.", "step_imgs": ["https://cdn.instructables.com/FI4/1APR/JSYZ9BLM/FI41APRJSYZ9BLM.LARGE.jpg", "https://cdn.instructables.com/FDW/C8YW/JSYZ9A1D/FDWC8YWJSYZ9A1D.LARGE.jpg", "https://cdn.instructables.com/FR1/TGU7/JSYZ9BLK/FR1TGU7JSYZ9BLK.LARGE.jpg"], "step_title": "Step 4: Dilute the Quantum Dots"}, {"step": 5, "steps_text": "This project was originally much more difficult but made an additional color. It originally took significantly longer to make the QDs.\nPhoto 1:I Took a sample at 1 minute, 20 minutes, 30 minutes, 40 minutes, and an hour.\nThe sucrose(a disaccharide) is not as easily converted to Quantum Dots as simple sugars(monosaccharides). I spent an hour and a half to get QD's just using baking soda. The sucrose would only decompose to Glucose and Fructose at high temperatures for extended periods of time. When simple sugars are in a basic solution, they can form the quantum dots. So using the acid and heat, I made lots of free fructose and glucose, but then I had to make the solution basic again.\nSo we added baking soda to neutralize the acid, but that isn't enough, when acetic acid and baking soda mix, they form sodium acetate which acts as a weakly acidic buffer solution. So i added plenty of sodium bicarbonate to the instructions to overcome the sodium acetate's buffering properties.\nAll in all, it was a fascinating challenge and I hope I've satisfied everyone's curiosity today.\nAdditional Reading and references\nhttps://pubs.rsc.org/en/content/articlelanding/201...\nhttps://www.tandfonline.com/doi/full/10.1080/21691...\nFascinating paper using Smartphones and carbon dots. https://www.nature.com/articles/s41598-017-11572-8\nNitrogen doping CQD's. https://www.nature.com/articles/srep05294\nhttps://www.hindawi.com/journals/jnm/2015/787862/", "step_imgs": ["https://cdn.instructables.com/FFP/84F4/JSYZ9A6H/FFP84F4JSYZ9A6H.LARGE.jpg"], "step_title": "Step 5: Discussion"}], "channel": ""}, {"category": "", "description": "Isn\u2019t it nice when you can hit two birds with one stone?\nThat\u2019s exactly what we\u2019ve done as we approach both Arduino Day and Saint Patrick\u2019s Day with our version of the Chug-O-Meter!\nWe absolutely loved what the circuit.io team did with their Chug Meter but thought that we could add more to its survivability while surrounded by inebriated merrymakers. To do this we changed the force sensor to regular switches, created a 3D printed abs enclosure, and then placed the electronics inside the enclosure to keep them away from accidental spills and splashes.", "title": "The Chug-O-Meter", "url": "https://www.instructables.com/id/The-Chug-O-Meter/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts\nIt can be awesome working at an electronics company when you want to design and build a project. For the Chug-O-Meter, we dived into our stock and found several components that will fit the build.\n\u00b7 1x DC-DC Boost Converter Power Supply Module (40408)\n\u00b7 1x CR2032 Coil Cell Holder (50484)\n\u00b7 1x CR2032 Lithium Battery (BattC2032)\n\u00b7 1x Power Switch (SWT1A)\n\u00b7 3x Snap Lever Switch (SWT9)\n\u00b7 1x 7-Segment Serial Display (50424)\n\u00b7 6x #2-56 1/2\u201d Thread Forming Screw (Not carried as Solarbotics)\n\u00b7 2x M3 x 10mm Machine Screw (M3x10-PPH)\n\u00b7 1x Roll of your favorite 3D Printer Filament. We used eSun ABS+ White (60801)\n\u00b7 1x 10k Resistor (R10k)\n\u00b7 1x 0.1uF Capacitor (CP0.1uF)\n\u00b7 2x colors of Groovy Noodle Wire (15060)\n\u00b7 1x double sided tape or hot glue\nTools\nOne thing you may have noticed in the parts list is that we haven\u2019t included an Arduino! Weird, huh? Well that\u2019s because of SparkFun's 7-Segment Serial Display is actually an Arduino in and of itself! Because of this, we\u2019ve overwritten the code used to control the display with regular Arduino code that will control the Chug-O-Meter instead. To do this though, we will need a serial programmer and interface header to do the job.\n\u00b7 1x TTLyFTDI USB-to-TTL Adapter (39240)\n\u00b7 1x Male Strip pins 6 pos (MPin6RA)\nNote: During the build process, do not solder the Male Strip Pins to the 7-Segment display as there isn\u2019t enough clearance in the enclosure to allow for it when inserting the display!", "step_imgs": ["https://cdn.instructables.com/F5T/5ND4/JT4TPZWP/F5T5ND4JT4TPZWP.LARGE.jpg", "https://cdn.instructables.com/F0G/R0ER/JT4TPZXE/F0GR0ERJT4TPZXE.LARGE.jpg", "https://cdn.instructables.com/FNR/MAIY/JT4TPZWO/FNRMAIYJT4TPZWO.LARGE.jpg"], "step_title": "Step 1: Gathering the Parts"}, {"step": 2, "steps_text": "To start, we are going to solder together the circuit as shown in the image above. This will allow us to power the circuit, turn it off and on, it senses when a drink is placed or removed, and then display the time on the 7-segment display.", "step_imgs": ["https://cdn.instructables.com/FOL/91N0/JT4TPZWQ/FOL91N0JT4TPZWQ.LARGE.jpg"], "step_title": "Step 2: Starting the Build"}, {"step": 3, "steps_text": "Now that we have the circuit together, it\u2019s time to add the\ncode to the display. The picture above depicts how the header is inserted into the 7-segment display, and instead of soldering, we use the tried and true method of \u201cadd some force to hold it in place while you program\u201d! However, before we can program our device, we need to do a few simple things to the Arduino environment to make it 7-segment ready.\n1. Download and install the latest version of the Arduino IDE (Arduino IDE)\n2. Open Arduino and navigate to File > Preferences and then add the following line to the \u201cAdditional Board Manager URLs:\u201d (if you already have the text here, just add a \u201c,\u201d to the end of the existing text and then paste the following line after it)\nhttps://raw.githubusercontent.com/sparkfun/Arduino_Boards/master/IDE_Board_Manager/package_sparkfun_index.json\n3. Press the okay button for the preferences menu and then navigate to Tools > Board: > Boards Manager\u2026\n4. In the \u201cfilter your search\u2026\u201d bar, type \u201cSparkfun avr\u201d\n4. Click the install button from the image above, making sure that you install the most recent version which in our case was 1.1.12.\nWith the proper board now installed, programming the SparkFun 7-segment is only a few simple steps!\n1. Copy the code into a new Arduino project or download our zip file for the project and extract and open the\n.ino file.\n2. Next Select the appropriate board by going Tools > Boards: >Sparkfun Serial 7-Segment Display\n3. Select the Port that the FTDI programmer is connected to by going Tools > Port > COM X\n4. Finally, while holding the FTDI programmer to the pins on the 7-segment display, press the upload button to program the display with the Chug-O-Meter code.\nFixing the Whoopsie\nDuring the build process of this project, we realized too late that the analog pin that the buttons used to sense the addition/removal of a drink does not have an internal pull-up resistor or debouncing capacitor. To fix this issue, we went ahead and added one ourselves to fix this issue, we recommend that you do the same!", "step_imgs": ["https://cdn.instructables.com/FW4/AJR2/JT4TPZZY/FW4AJR2JT4TPZZY.LARGE.jpg", "https://cdn.instructables.com/FLP/FTZN/JT4TQ01S/FLPFTZNJT4TQ01S.LARGE.jpg", "https://cdn.instructables.com/FNJ/4QHC/JT4TQ787/FNJ4QHCJT4TQ787.LARGE.jpg", "https://cdn.instructables.com/FNO/LRTF/JT4TQPMX/FNOLRTFJT4TQPMX.LARGE.jpg", "https://cdn.instructables.com/FAX/HO7X/JT4TQSEV/FAXHO7XJT4TQSEV.LARGE.jpg"], "step_title": "Step 3: Programming the Display"}, {"step": 4, "steps_text": "Now that the display has been programmed and the circuit is complete, it\u2019s time to add the electronics to the enclosure.\n1. Double-sided tape or hot glue the electronics as shown so that none of them extend past the top of the enclosure. This will keep them in place and stop any collisions with the sensing switches and plate\n2. Screw in the switches as shown using the #2-56 thread forming screws. If you don\u2019t have these, you can also use hot glue, but they won\u2019t be near as robust.\n3. Insert the display into the cavity of the display holder and use gravity to wiggle it into dropping into place so that the display is flush with the outside of the enclosure. Since we were kind of running out of time for elegant solutions, we used some ESD-Safe foam to hold it in place, but you could also use paper or anything else that is non-metallic.\n4. Finally, use the #4-40 screws to mount the display holder onto the enclosure. You can now flick the switch to turn on the circuit and add the sensing plate to cover everything up!", "step_imgs": ["https://cdn.instructables.com/F60/YDVP/JT4TPZWR/F60YDVPJT4TPZWR.LARGE.jpg", "https://cdn.instructables.com/FOP/FFI1/JT4TQ71P/FOPFFI1JT4TQ71P.LARGE.jpg", "https://cdn.instructables.com/FU3/58VS/JT4TQ734/FU358VSJT4TQ734.LARGE.jpg", "https://cdn.instructables.com/FLK/ZFRE/JT4TQ77D/FLKZFREJT4TQ77D.LARGE.jpg"], "step_title": "Step 4: Finishing the Build"}, {"step": 5, "steps_text": "The Chug-O-Meter has been programmed to make operation a breeze! Turn it on, place down a full glass of whatever liquid you prefer, remove the glass to start the count and start chugging! Once you\u2019ve finished, place the empty glass on the sensing plate to stop the timer. To reset the device, remove the empty cup and place a fresh, full cup onto the plate. happy chugging!\nIf you like building our kit, send us a photo of your build via email at media@solarbotics.com and we'll feature it!\n\nFor other updates and guides, go to Solarbotics and be sure to follow us on Facebook and Instagram.", "step_imgs": [], "step_title": "Step 5: Using the Chug-O-Meter"}], "channel": ""}, {"category": "", "description": "Revolution per minute, briefly is a speed of rotation expressed in revolutions minute. the tools for measuring RPM usually use tachometer. Last year ago i found interesting project made by electro18, and it is my inspiration instructable, he was made \"Measure RPM - Optical Tachometer\" link is below\nhttps://www.instructables.com/id/Measure-RPM-DIY-P...\nthis project is very inspiring and i thought i will remix and fit specifically to measure mini motor dc.\nMini 4WD hobbies measure RPM is a routine activity to prepare machine before attach into the car. So this will become important tools that always carry and can be use anywhere needed, so lets we make our rpm checker", "title": "RPM Checker for Mini Motor Dc", "url": "https://www.instructables.com/id/RPM-Checker-for-Mini-Motor-Dc/", "section": "technology", "steps": [{"step": 1, "steps_text": "This tools works very simple, rim rotated by the motor then sensor read revolution of white point get from that rim. Signal from sensor send to micro control calculated and displayed the rpm result, that's all. But how to get all things is done , lets we begin into the steps", "step_imgs": ["https://cdn.instructables.com/F3C/FN2N/JT4TM58B/F3CFN2NJT4TM58B.LARGE.jpg"], "step_title": "Step 1: How Its Works"}, {"step": 2, "steps_text": "There is variation method to measure RPM\n1. By Sound :\nThere is some nice instructuble how to measure Rpm of using free audio editing software https://www.instructables.com/id/How-to-Measure-RP... , the works is to capture sound frequency, analyze and crop repeatable rhythmic and calculate for get per minute.\n2. By Magnetic\nThere is some nice Instructable source about how to measure Rpm by magnetic field\nhttps://www.instructables.com/id/RPM-Measurement-U... the works is to capture pulse and converting into revolution every time magnetic sensor facing a magnet. some of use Hall Sensor and neodymium magnet\n3. By Optical\nAgain there is much of source of how to measure Rpm by use optical https://www.instructables.com/id/Simple-Motor-Spe...\nhttps://www.instructables.com/id/Measure-RPM-DIY-Portable-Digital-Tachometer/\nThis method that i choose for develop the device, because is no need silent environment during measuring.", "step_imgs": [], "step_title": "Step 2: Measurement Method"}, {"step": 3, "steps_text": "Optical Read\nOptical read is use reflected radiation of infrared beam to the object and received by infrared photodiode, the object with color white or light color more easy to reflect than black color or dark color. I choose to use TCRT 5000 from Vishay is already packed with plastic case and it small\nConverting Signal\nThis IR sensor can become analog sensor or digital sensor, Analog meaning have a range value (example from 0-100) is more fit to detect the distance. For this case we need to get digital signal, meaning only (1 or 0) on or off is fit to get counting value. To convert from analog into digital i use IC LM358, basically this is Amplifier IC but This IC can become voltage comparator when range of target Input can be set by trimpot resitor then after this IC give one output (On or OFF)\nCalculation RPM Formula\nAfter triggering input from High to Low, then data calculate with time and revolution\n1 rpm = 2\u03c0/60 rad/s.\nSignal from IR attaches an interrupt 0 ,into pin digital input 2 on arduino, whenever the sensor goes from LOW to HIGH , RPM is counted. then the function will be called twice increment (REV). To calculate the actual RPM, we need the time taken for one revolution. And (millis() - time)is the time taken for one full revolutions. In this case , let it be the time taken for one full revolution , so the total number of revolutions RPM in 60sec ( 60*1000 millisecond ) is : rpm = 60*1000 / t * actualREV => rpm = 60*1000 / (millis() - time ) * REV/2\nthe formula is got from this link https://www.instructables.com/id/Measure-RPM-DIY-P...\nDisplay\nAfter measurement from arduino is need to visualize, i choose oled 0,91\" style its looks like more modern and its small. For the arduino i use adafruit library ssd1306 its work really charm. There is some tricky i use to prevent flickering during reading interrupt signal is using separate millis timer, one for sensor and one for showing the text. https://www.baldengineer.com/blink-without-delay-explained.html", "step_imgs": ["https://cdn.instructables.com/F3C/C9T9/JSYZ8JBH/F3CC9T9JSYZ8JBH.LARGE.jpg", "https://cdn.instructables.com/FNY/WI0A/JSYZ8JBI/FNYWI0AJSYZ8JBI.LARGE.jpg"], "step_title": "Step 3: Electronics and Programming Method"}, {"step": 4, "steps_text": "Schematic is really simple, but i made PCB to looks more neat and compact, During make pcb layout need work together with enclosure design. so printed into paper and make model from cardboard to get the feel of size. From the top view Oled Display looks like overlap with arduino nano, in fact position of oled display is higher than arduino nano.\nOne Red LED need to pilot that the sonsor is reading , so i put that little red LED in the bottom of trimpot is double function in one hole .\nBelow the list of part\n1. TCRT 5000 IR sensor\n2. Trimpot 10 K\n3. Resistor 3k3 and 150 Ohm\n4. LM358\n5. Display Oled 0,91\n6. Arduino Nano\n7. Red Led 3mm\n8. Some pieces of cable", "step_imgs": ["https://cdn.instructables.com/FZT/NUKG/JSYZ8JK6/FZTNUKGJSYZ8JK6.LARGE.jpg", "https://cdn.instructables.com/FDO/TD2P/JSYZ8JK9/FDOTD2PJSYZ8JK9.LARGE.jpg", "https://cdn.instructables.com/FAL/RVAF/JSYZ8JKG/FALRVAFJSYZ8JKG.LARGE.jpg", "https://cdn.instructables.com/FO0/B8TW/JSYZ8KAK/FO0B8TWJSYZ8KAK.LARGE.jpg"], "step_title": "Step 4: Schema and PCB Layout"}, {"step": 5, "steps_text": "The motor holder is designed followed function. the function itself is to put the motor easily, safe and measure accurately. to consider the shape and dimension is divide to three parts like describe below\nSensor Holder\nBased from TCRT 5000 Data sheet, distance IR Sensor when read the reflective object is around from1mm to 2.5 mm, so i need to design sensor holder, finally i choose distance gap more less 2 mm near the rim. (Sensor holder ) 8,5 mm - (Height sensor) 6,3 = 2,2 mm and it still inside range of sensor capabilities\nSecond thing need to be more attention is sensor position, after several comparison for better and faster reading sensor should be placed parallel not a cross with the rim\nMotor Holder\nParts from motor holder should contain Motor dynamo, contactor motor dynamo and rim Based from mini motor dc data sheet, height of motor dynamo is 15,1mm so i took 7,5mm deep is exactly in the middle and the form is like a make negative mold. The hole for rim should be bigger than 21.50 mm for more specific how to make rim is on the next step. last things is contactor motor dynamo i took contactor from battery holder 2302, copy and drawing the hole (for attach the pin) and put into bottom part of motor holder.\nMotor Lid\nFor safety reason, during measuring motor speed will give vibration and to prevent any damaged motor lid designed with slide.\nThis design have difficulties for \"some 3D printer\" (that i use) specially for sliding component, but after couple of try so i decide to use ABS filament to get result near perfect\nthe things and all the details of drawing parts is attached you can study to develop more better", "step_imgs": ["https://cdn.instructables.com/FTM/1BEF/JT4TPH2I/FTM1BEFJT4TPH2I.LARGE.jpg", "https://cdn.instructables.com/F2R/HRD1/JT4TPBSC/F2RHRD1JT4TPBSC.LARGE.jpg", "https://cdn.instructables.com/F37/EN5U/JT4TMKNE/F37EN5UJT4TMKNE.LARGE.jpg", "https://cdn.instructables.com/FZ9/VWZY/JT4TPBSB/FZ9VWZYJT4TPBSB.LARGE.jpg", "https://cdn.instructables.com/FWO/6W4H/JT4TM5KQ/FWO6W4HJT4TM5KQ.LARGE.jpg", "https://cdn.instructables.com/FAE/X613/JT4TPK83/FAEX613JT4TPK83.LARGE.jpg"], "step_title": "Step 5: Motor Holder"}, {"step": 6, "steps_text": "The box part drawing by 3d modelling in the top part is to put motor holder, display and sensor adjuster. On the front or back side there is powers console. On the left and right side there is air ventilation to prevent hot temperature coming from motor when it running in long period. and this part it made by 3d print", "step_imgs": ["https://cdn.instructables.com/F2U/530H/JSYZ8JP4/F2U530HJSYZ8JP4.LARGE.jpg", "https://cdn.instructables.com/FRS/4EHH/JSYZ8KA1/FRS4EHHJSYZ8KA1.LARGE.jpg", "https://cdn.instructables.com/FMT/EHWO/JT4TPIKD/FMTEHWOJT4TPIKD.LARGE.jpg", "https://cdn.instructables.com/FS0/UV1O/JT4TPIL9/FS0UV1OJT4TPIL9.LARGE.jpg"], "step_title": "Step 6: Box"}, {"step": 7, "steps_text": "in the beginning i take some brass and cut it manually, result is disaster my hand not perfectly to do crafting, so i search something small as connector so i found out pieces of connector from 2302 battery holder, is perfectly curve with the shape of housing Motor dynamo.\nWhen assembly PCB of controller should be screw to the top part of casing, but in this casing i made wrong design, hole and support is too small so it is difficult to find small screw, by the way then i use hot glue for temporary assembly\nIR sensor wrap and safe with heat shrink tube to prevent short circuit when this tools vibrate", "step_imgs": ["https://cdn.instructables.com/FQU/K88I/JSYZ8JRL/FQUK88IJSYZ8JRL.LARGE.jpg", "https://cdn.instructables.com/F6F/7XAA/JSYZ8JRM/F6F7XAAJSYZ8JRM.LARGE.jpg", "https://cdn.instructables.com/F2M/N0TS/JSYZ8LX0/F2MN0TSJSYZ8LX0.LARGE.jpg", "https://cdn.instructables.com/FVW/11UF/JSYZ8KAJ/FVW11UFJSYZ8KAJ.LARGE.jpg"], "step_title": "Step 7: Assembly Tips"}, {"step": 8, "steps_text": "The rim was made with two alternative one is fit with plain shaft and other one fit with pinion (mini 4wd gear shaft). some times to take out and put again pinion is a pain and will loose the grip to the shaft so its make user easily. the last thing all surface of the rim painted in black by paint spray except little stripe 1 cm more and less for sensor read", "step_imgs": ["https://cdn.instructables.com/FX8/XZEA/JT4TPZCW/FX8XZEAJT4TPZCW.LARGE.jpg", "https://cdn.instructables.com/FOB/1LNC/JSYZ8N35/FOB1LNCJSYZ8N35.LARGE.jpg"], "step_title": "Step 8: The Rim"}, {"step": 9, "steps_text": "Motor dynamo is hungry power consumption, cannot join with power from micro control, even use motor driver chip is better make separated power for motor and for controller, means in this case i use two battery for powering motor dynamo is like actual condition when attach into car, then use 5v for micro control ( use mini usb )\nBelow is list of part\n1. Female power socket\n2. Female Mini Usb\n3. Piece of PCB hole\n4. Switch on off\n5. Power supply 5vdc\n6. Battery Holder 2XAA", "step_imgs": ["https://cdn.instructables.com/F25/V6OU/JT4TPZXD/F25V6OUJT4TPZXD.LARGE.jpg", "https://cdn.instructables.com/FYN/3MQZ/JSYZ8JYR/FYN3MQZJSYZ8JYR.LARGE.jpg", "https://cdn.instructables.com/F5I/G0F0/JSYZ8JZR/F5IG0F0JSYZ8JZR.LARGE.jpg", "https://cdn.instructables.com/F8C/NGPN/JSYZ8JZT/F8CNGPNJSYZ8JZT.LARGE.jpg", "https://cdn.instructables.com/F1G/SLT5/JSYZ8JZP/F1GSLT5JSYZ8JZP.LARGE.jpg", "https://cdn.instructables.com/FQV/AFOV/JSYZ8JZV/FQVAFOVJSYZ8JZV.LARGE.jpg", "https://cdn.instructables.com/FXJ/U21R/JSYZ8K6C/FXJU21RJSYZ8K6C.LARGE.jpg"], "step_title": "Step 9: Supplied the Power"}, {"step": 10, "steps_text": "After Assembly all part electronics and enclosure, power socket.\nNow going to test and calibration\nFirst is turn on power of device, the green led from arduino will go through that translucent material\nSecond is make sure use Rim that have white stripe. turn 180 degree until white stripe go down facing the sensor, if red led turn on it mean sensor is reading. try to rotate the rim and make sure if the sensor facing black color red led is turn off.\nIn case sensor not detected try to adjust trimpot by small screwdriver. After that switch on the power of the of the motor and see measurement", "step_imgs": ["https://cdn.instructables.com/FJA/4UTR/JSYZ8ME1/FJA4UTRJSYZ8ME1.LARGE.jpg", "https://cdn.instructables.com/F1T/C7AK/JSYZ8MF9/F1TC7AKJSYZ8MF9.LARGE.jpg", "https://cdn.instructables.com/FHQ/VQHA/JSYZ8MHP/FHQVQHAJSYZ8MHP.LARGE.jpg", "https://cdn.instructables.com/FOL/IK76/JT4TPVW3/FOLIK76JT4TPVW3.LARGE.jpg"], "step_title": "Step 10: Test and Calibration"}, {"step": 11, "steps_text": "Evolution this tools is coming from many of trial and brainstorming from very small user community specially my brother as first user, the point should be reach is\n1. How to get RPM precise measurement, comparing measurement result from Giri (Android App)\n2. How to powering motor\n3. How to hold / locked and make motor dynamo support\nSo far this tools already requested by hobbies (my brother and friends correctly :D)and some is produce by request , i hope anyone can build and develop too, Thanks again and Happy DIY", "step_imgs": ["https://cdn.instructables.com/F5S/2WFV/JSYZ8YCW/F5S2WFVJSYZ8YCW.LARGE.jpg"], "step_title": "Step 11: The Process"}], "channel": ""}, {"category": "", "description": "During my high-school sophomore year, the 3rd floor of our house lighted on fire due to a short circuit. Fortunately, my family was away on vacation for Christmas. But if we were home, wouldn't it be crucial to tell the direction of fire quickly so that we know the direction to evacuate?\nConsider another situation. You really hope to learn Arduino programming, which enables you to build both functional and decorative things. First, you need to get past the basics of the wiring and the programming language. But after you get past this hurdle, whenever you hope to create with some complexity, tutorials online often consist of \"replicate this wiring over here; then copy and paste the code into Arduino\". Do you hope to learn the \"why\" under each part of a tutorial? Do you hope to be able to alter parts of a tutorial to fit with your own needs?\nIf you have answered \"yes\" to any of the three questions above, then you are at the right place. In this tutorial, we will be going step-by-step from 0 to 100%. By the end of this tutorial, you will understand the underlying functions and challenges. You will know the different skills, such as integrating sensors, programming RGB colors, and using arrays, that can be used elsewhere. I gradually learned those skills as a newbie myself, so I understand your potential challenges and I fully trust that you can do this! Have fun building!", "title": "For Newbies at Arduino Programming: Telling the Direction of Fire in 3 Seconds WITH PIXEL LIGHTS!", "url": "https://www.instructables.com/id/For-Newbies-at-Arduino-Programming-Telling-the-Dir/", "section": "technology", "steps": [{"step": 1, "steps_text": "This tutorial does not require complex skills of Arduino programming, as small steps will be explained to lead you up to the final product. However, there is a tiny bit of soldering involved with this neopixel ring here so please be careful when you are on this step! It is not complex though: drop the solder and attach the wire.", "step_imgs": ["https://cdn.instructables.com/F49/7S0H/JSUOV10Z/F497S0HJSUOV10Z.LARGE.jpg"], "step_title": "Step 1: Potential Challenges and Safety Hazards"}, {"step": 2, "steps_text": "Required materials are the materials necessary to complete the final product.\nOptional materials are the materials only necessary to complete mini-activities.\nRequired materials:\n-1 Arduino board (preferably Arduino Uno, to store your program)\n-1 Base Shield V2 (this project requires a bunch of sensors, and this base shield attached to your Arduino keeps it tidy!)\n-7 MLX90615 infrared temperature sensors (infrared temperature sensors are capable at telling differences in temperature even when they are not spaced far apart; if you are using smoke sensors to detect fire, you would need to place them 15m apart!)\n-1 neopixel ring\n-Arduino software on computer (this can be downloaded for free on https://www.arduino.cc/en/main/software)\n-1 5V resistor (which will be attached to the neopixel ring)\n-7 Grove 4 pin connector cables\n-Arduino Breadboard\n-Soldering tools (to solder wires onto the neopixel ring)\nOptional materials:\n-3 RGB led lights\n-3 Arduino digital capacitive touch sensors\n-1 Arduino breadboard\n-20+ M-M wires (M means male; wires with pins pointing out on both sides)", "step_imgs": ["https://cdn.instructables.com/FMT/J7JU/JSUOV1AJ/FMTJ7JUJSUOV1AJ.LARGE.jpg", "https://cdn.instructables.com/FXT/VQ35/JSUOV1B5/FXTVQ35JSUOV1B5.LARGE.jpg", "https://cdn.instructables.com/FCT/FLVF/JT4TP72Y/FCTFLVFJT4TP72Y.LARGE.jpg"], "step_title": "Step 2: Let's Go Over Our Materials First!"}, {"step": 3, "steps_text": "Before we tangle ourselves with using lights, we will first be learning how to obtain temperature from an infrared temperature sensor. This part of the tutorial is adapted from the webpage (http://wiki.seeedstudio.com/Grove-Digital_Infrared_Temperature_Sensor/) On this site, you will be able to download the demo code and incorporate it into your Arduino library. This is necessary because the demo code contains a set of codes that should be included to make the sensors function properly. The code for this inclusion is\n#include \"MLX90615.h\"\nSoftI2cMaster i2c_1(sda_1, scl_1);\nMLX90615 mlx90615_1(DEVICE_ADDR, &i2c_1);\nIf you are doing multiple devices (as we are going to later on), you paste the last two lines of code again and change the number to 2 or whatever the number the sensor is given.\nThen, the SDA and SCL ports need to be defined. SCL is the clock line, which is used to synchronize all data transfers. SDA is the data line. On the backside of the temperature sensor, you can see SDA and SCL. When you attach the SDA and SCL cords, they correspond directly to the Dx on the base shield. In this diagram, SCL is connected to D6 and SDA is connected to D7, so on code it is:\nbyte sda_1 = 7;\nbyte scl_1 = 6;\nNote: It is totally okay if you later write byte sda_2 = 6 because SDA & SCL are separately defined!\nThen we will be coding for void set up and void loop in the software. The void set up only runs once at the start of the program (because it is a \"set up\"!) while the loop will be run again and again.\nvoid setup()\n{Serial.begin(9600);\nSerial.println(\"Setup...\");}\nThe first line means to open the serial port and set data rate to 9600 bytes per second (bps).\nThe second line means to print and show your obtained data on the serial monitor.\nThere are a few rules that you should be aware of here:\nAt the end of a line you must use a semicolon, or there will be a compiler error.\nCurly braces are used for telling the beginning and end of a statement, and an opening brace must be followed by a closing brace.\nFor the loop of getting the temperature, the code is:\nvoid loop ()\n{Serial.print(\"Object temperature: \"); Serial.println(mlx90615_1.getTemperature(MLX90615_OBJECT_TEMPERATURE));\nSerial.print(\"Ambient temperature: \"); Serial.println(mlx90615_1.getTemperature(MLX90615_AMBIENT_TEMPERATURE));\ndelay(1000);}\nThis function allows you to print two things \"Object temperature\" and \"Ambient temperature\" with the mlx90615_1 sensor defined previously. By changing the delay time (currently 1 second or 1000 microseconds) you can play with the time intervals you want your sensors to wait before obtaining new temperature data.\nThis is the end of this set of code, and you can upload through pressing the green arrow (called \"Upload) in the Arduino software. If the code does not upload properly, go to Tools - Port and check if you are connected to the right port. (If you are connected by USB, you would see a separate usb port than the normal bluetooth port) If you don't see the usb port try reattaching the usb cord or restarting your computer.\nOnce you wire up the sensor to D6 & D7 (on the big D6 port) and upload the code above, you will be able to see temperature data in the Arduino software through Tools -> Serial Monitor.", "step_imgs": ["https://cdn.instructables.com/F8C/TXJP/JSUOZVXQ/F8CTXJPJSUOZVXQ.LARGE.jpg", "https://cdn.instructables.com/FUT/AOF0/JSUOZWE4/FUTAOF0JSUOZWE4.LARGE.jpg"], "step_title": "Step 3: Obtaining Temperature With the Infrared Temperature Sensors"}, {"step": 4, "steps_text": "We want to make temperature change the color of a light. Therefore, the temperature is the input and the light's color is the output. On step 3 we went over how to obtain the input, so how do you use that information to affect the output?\nIn addition to our previous code, we can write up a command to turn pin 13 ON when a certain condition is reached. In the setup, you set 13 as output through pinMode (13, OUTPUT).\nThen, in the loop section, you use the float function, which obtains data that is in decimal point format and is constantly changing. In this example, we name the object temperature as \"tture\" and add it to the previous code.\nfloat tture = mlx90615.getTemperature(MLX90615_OBJECT_TEMPERATURE);\nThen, after the same codes previously for obtaining temperature from the sensors, we command the pin 13 to act according to the data given. This time let's try a simple one: pin 13 turns on when temperature of the sensor exceeds 27, and turns off when the temperature is below 27. We use digital write to control the pin's behavior.\nif (true > 27){\ndigitalWrite(13,HIGH);\n}\nelse{\ndigitalWrite(13,LOW);\n}\nYou can check this through putting your hand over the sensor. If pin 13 turns on, you would be able to see a small yellow light emerging.", "step_imgs": ["https://cdn.instructables.com/F5Q/ASAA/JSUOZWN6/F5QASAAJSUOZWN6.LARGE.jpg", "https://cdn.instructables.com/F06/XO4Q/JSUOZWOJ/F06XO4QJSUOZWOJ.LARGE.jpg", "https://cdn.instructables.com/FCE/8Z7D/JSUOZWOR/FCE8Z7DJSUOZWOR.LARGE.jpg"], "step_title": "Step 4: Output? Input?"}, {"step": 5, "steps_text": "You may be wondering, how could we create a range of colors with arduino? This can be achieved through programming a RGB light, which mixes red, green and blue values in different degrees to form various colors. RGB codes are given in the form (red value, green value, blue value). The maximum value given is 255. (255, 0,0) is red, (0,255,0) is green and (0,0,255). You can visit this link for a thorough color chart to create whichever colors you want: http://www.tayloredmktg.com/rgb/\nOn a standard Arduino RGB light, you can see how there are four cords, red, blue, green and ground. Similarly to the previous drill, you can define 9 as output red, 11 as output green and 12 as output blue. Then in the loop, instead of using digitalWrite you use analogWrite, in the format:\nanalogWrite (9, 200);\nanalogWrite (11, 100);\nanalogWrite (12, 100);", "step_imgs": ["https://cdn.instructables.com/FSC/HJ3I/JT4TOXTA/FSCHJ3IJT4TOXTA.LARGE.jpg", "https://cdn.instructables.com/F8Q/VY2K/JT4TOXTB/F8QVY2KJT4TOXTB.LARGE.jpg", "https://cdn.instructables.com/FR1/VM02/JT4TOXX4/FR1VM02JT4TOXX4.LARGE.jpg", "https://cdn.instructables.com/FCR/PHJN/JT4TOXXJ/FCRPHJNJT4TOXXJ.LARGE.jpg"], "step_title": "Step 5: Programming RGB"}, {"step": 6, "steps_text": "Let's do a mini-activity with the breadboard and the RGB light! The final product of this mini-activity would be a RGB light that changes from purple to red depending on the temperature around the sensor.\nThe wiring would consist of using the breadboard. You can see that on the left, there are two columns: negative and positive (indicated by the sign). On your Arduino you can see GND (ground) and 5V (power source). Plug one wire between a GND port and the end of the negative column. Plug one wire between a 5V port and the end of the positive column. Then, connect one wire between the negative and a row where the ground of the RGB light is in (on the two sides the columns are electrically connected, in the middle the rows are electrically connected, see the purple lines on picture 5). Then, the columns where the Red, Green and Blue pins are in are connected with pins on the Arduino via wires. In the following code, pin 10 on Arduino is connected with red, 11 with green and 12 with blue.\nAfter we are done with the wiring, let's get to the coding.\n#include \"MLX90615.h\"\nbyte scl_1 = 2;\nbyte sda_1 = 3;\nint ledPin1 = 10; // red\nint ledPin2 = 11; // green\nint ledPin3 = 12; //blue\nWe define the 3 pins as 11, 12 and 13.\nSoftI2cMaster i2c_1(sda_1, scl_1); MLX90615 mlx90615_1(DEVICE_ADDR, &i2c_1);\nvoid setup() {\nSerial.begin(9600);\nSerial.println(\"Setup...\");\npinMode(ledPin1, OUTPUT);\npinMode(ledPin2, OUTPUT);\npinMode(ledPin3, OUTPUT);\nWe set the three pins as output; other parts are explained previously.\nvoid loop() {\nfloat temperatureObj1 = mlx90615_1.getTemperature(MLX90615_OBJECT_TEMPERATURE);\nfloat temperatureAmb1 = mlx90615_1.getTemperature(MLX90615_AMBIENT_TEMPERATURE);\nSerial.print(\"Temp_1: \");\nSerial.print(temperatureObj1);\nSerial.print(\"`C \");\nSerial.print(temperatureAmb1);\nSerial.println(\"`C \");\nSerial.println(\"\\n=======================================\\n\\r\");\ndelay (100);\nThis is the code for obtaining the temperature. Explanation can be found in previous steps.\nif (temperatureObj1 > 23 && temperatureObj1 < 27) {\nanalogWrite (10, 148);\nanalogWrite (11, 0);\nanalogWrite (12, 220);\ndelay (100); }\nif (temperatureObj1 > 27 && temperatureObj1 < 31) {\nanalogWrite (10, 0);\nanalogWrite (11, 0);\nanalogWrite (12, 205);\ndelay (100); }\nif (temperatureObj1 > 31 && temperatureObj1 < 35) {\nanalogWrite (10, 0);\nanalogWrite (11, 205);\nanalogWrite (12, 0);\ndelay (100); }\nif (temperatureObj1 > 35 && temperatureObj1 < 38) {\nanalogWrite (10, 255);\nanalogWrite (11, 255);\nanalogWrite (12, 0);\ndelay (100); }\nif (temperatureObj1 > 38 && temperatureObj1 < 42) {\nanalogWrite (10, 255);\nanalogWrite (11, 0);\nanalogWrite (12, 0);\ndelay (100); }\nelse {\nanalogWrite (10,0);\nanalogWrite (11,0);\nanalogWrite (12,0);\ndelay(100);\n}}\nSimilar to the use of conditions before, you can analogWrite conditions for each of the three colors. There is a 0.1 millisecond delay between the color changes corresponding to a temperature change. You can change the colors through obtaining RGB values on http://www.tayloredmktg.com/rgb/.", "step_imgs": ["https://cdn.instructables.com/FZK/3WIR/JT4TOYDS/FZK3WIRJT4TOYDS.LARGE.jpg", "https://cdn.instructables.com/F9G/LEXW/JT4TOYDW/F9GLEXWJT4TOYDW.LARGE.jpg", "https://cdn.instructables.com/FLT/G8UA/JT4TOYDY/FLTG8UAJT4TOYDY.LARGE.jpg", "https://cdn.instructables.com/F9U/8JCU/JT4TOYDZ/F9U8JCUJT4TOYDZ.LARGE.jpg", "https://cdn.instructables.com/FJ6/1ZFJ/JT4TOYE1/FJ61ZFJJT4TOYE1.LARGE.jpg", "https://cdn.instructables.com/FV0/2Q6Y/JT4TP40Q/FV02Q6YJT4TP40Q.LARGE.jpg"], "step_title": "Step 6: How to Use a Range of Values: Changing One RGB Light With One Sensor"}, {"step": 7, "steps_text": "There are a few potential challenges so far.\nFirst: you need to make sure that the SCL and SDA ports on your program are correctly corresponding to your wiring. On the V2 base-shield, you can see the numbers like D2, D3, etc. so you know if your wiring is correct. One tip is that SDA is always 1 value higher than SCL! (e.g. sda = 3 scl = 2; sda= 4 scl = 3)\nSecondly: sometimes a new sensor may just not work. Here are a few tips:\n1. Make sure that the sensor cords are pulled separate.\n2. Make sure that the cords are fully plugged in.\n3. Retry plugging in the sensor.\nLastly, a common mistake is to type (temperatureObj1 > 23 && temperatureObj1 < 27) as if (temperatureObj1 > 23 & temperatureObj1 < 27), which will result in an uploading error. Remember to type && instead of &!", "step_imgs": [], "step_title": "Step 7: Potential Challenges"}, {"step": 8, "steps_text": "The function array is a collection of variables that are accessed with an index number. In this tutorial, it will be used to program the neopixel ring.\nAn array is difficult to conceptualize at first, but try imagining that there is a box that contains 5 cards. You pull out a card randomly and it gives you a value. Now imagine pulling out 3 cards from 3 boxes simultaneously, and their values form a RGB color.\nHere is a simple code for showing 125 random colors:\nint red[]={0,5,25,100,255};\nint green[]={0,5,25,100,255};\nint blue[]={0,5,25,100,255};\nThis is like putting cards in the red, green and blue boxes: you are putting in the collection of values.\nvoid setup() {\npinMode(9,OUTPUT);//pin 9 for blue p\ninMode(11,OUTPUT);//pin 10 for green\npinMode(12,OUTPUT);//pin 11 for red\npinMode(8,OUTPUT);\ndigitalWrite(8,LOW);//uses pin 8 as ground\nThis is simply defining 9, 11, and 12 as output and 8 as ground. If you have any confusions, refer to the previous steps.\nvoid loop() {\nfor(int i=0; i<5; i++){\nanalogWrite(12,red[i]); }\nfor(int i=0; i<5; i++){\nanalogWrite(11,green[i]);\n}\nfor(int i=0; i<5; i++){\nanalogWrite(9,blue[i]);\ndelay(500); }\n}//end of void loop\nThrough the for(int i=0; i<5; i++) you choose an integer from 0 to 4. 0 corresponds to a value of 0, 1 to 5, 2 to 25, 3 to 100 and 4 to 255. And in the analogWrite function 12 is no longer matched with a value, instead it is matched with [i], the value on the card you randomly pulls. This is repeated fro green and blue, ending with a delay of 0.5 milliseconds.", "step_imgs": [], "step_title": "Step 8: Arrays"}, {"step": 9, "steps_text": "The neopixel ring is like a string of RGB lights that is controlled by only three wires: ground, 5V, and signaling wire. Array is used in this case to control each individual light on the neopixel ring; for example, the first light would be called [0], the second light would be called [1], etc. The final product would include each infrared temperature sensor corresponding to a bright pixel light. In this context, there will not be a random card pulled, but instead you can control the lights on a neopixel ring separately through typing values onto cards that each control one light.\nSometimes you would need to solder the neopixel ring with wires. Moreover, between the neopixel ring and the signaling wire (on D1), you would need to attach a 5V resistor or the system would overheat. Here are a few tips with the soldering:\n1. Test your soldering's tool's temperature; an ideal condition is when the solder melts in about half a second after contact\n2. \"Drop\" a tiny ball of solder and make it solidify on the neopixel ring and the end of a wire. Then when you pull up the wire towards the ring, you can remelt the balls on both sides and connect the two ends easily.\n3. DO NOT touch your soldering tool when you are not sure about if it is heating up or not! Instead, wipe it on a wet sponge and observe if it makes any sounds (a sound indicates that it is heating up). Tie up your hair and make sure that you have nothing hanging off your body (a necklace, for example). Be aware of the safety hazards :)", "step_imgs": ["https://cdn.instructables.com/FD5/AZCA/JT4TP12H/FD5AZCAJT4TP12H.LARGE.jpg", "https://cdn.instructables.com/F17/709B/JT4TP7MT/F17709BJT4TP7MT.LARGE.jpg"], "step_title": "Step 9: Introduction to the Neopixel Ring"}, {"step": 10, "steps_text": "Now that we know about obtaining temperature, RGB and arrays, we can move on to our final step: connecting the sensors with the neopixel ring. As a start, we will be connecting just 1 light with 1 sensor. The wire connecting GND on the neopixel ring will be plugged into GND on the V2 Base Shield. The 5V wire will be plugged into 5V on the V2 Base Shield. The D1 (or the signal wire) can be plugged into D2 - D13 on the right of the Base Shield depending on your code. In this example we will be plugging it into D7. The wiring for the sensor is the same: pugged into D2.\nLet me explain the code for doing this:\n#include \"MLX90615.h\"\nbyte sda_1 = 3;\nbyte scl_1 = 2;\n#define PIN 7\n#define NUMPIXELS 6\nAdafruit_NeoPixel strip = Adafruit_NeoPixel (7, PIN, NEO_GRB + NEO_KHZ800);\nint sine[] = {\n0,1,2,3,4,5,6\n};\nIn addition to the previous codes, D7 is defined as PIN 7 so that the neopixel ring obtains its signals from D7. Moreover, 7 lights from 0-6 are defined.\nSoftI2cMaster i2c_1(sda_1, scl_1); MLX90615 mlx90615_1(DEVICE_ADDR, &i2c_1);\nvoid setup() {\nSerial.begin(9600);\nSerial.println(\"Setup...\");\nstrip.begin();\nstrip.setBrightness(20);\nstrip.show();\n}\nIn addition to previous codes, the brightness of the neopixel ring is defined. You can alter the brightness by changing the value after strip.setBrightness.\nvoid loop() {\nfloat temperatureObj1 = mlx90615_1.getTemperature(MLX90615_OBJECT_TEMPERATURE);\nSerial.print(\"Temp_1: \");\nSerial.print(temperatureObj1);\nSerial.print(\"`C \");\nSerial.println(\"\\n=======================================\\n\\r\");\ndelay (100);\nCodes for obtaining temperature\nfor(int i=0; i<7; i++) {\nif (temperatureObj1 > 23 && temperatureObj1 < 24) {\nstrip.setPixelColor(sine[0],strip.Color(128, 128, 128));\nstrip.show(); }\nThis means that if temperatureObj1, obatined by sensor 1, falls between 23 and 24, light number 1 (indicated by [0] will show the RGB color (128,128,128). No other lights would be affected. If you want to add sensors/lights, you add numbers to temperatureObj1 (e.g. temperatureObj2) and setPIxelColor(sine[0]) (e.g. setPixelColor(sine[1]).\nSimilar conditions are repeated but the corresponding temperatures and RGB values would vary. You can create your own colors, but the following full code shows a \"rainbow\" from purple to red depending on the temperature.\nif (temperatureObj1 > 24 && temperatureObj1 < 25) {\nstrip.setPixelColor(sine[0],strip.Color(102, 102, 153));\nstrip.show(); }\nif (temperatureObj1 > 25 && temperatureObj1 < 26) {\nstrip.setPixelColor(sine[0],strip.Color(102, 0, 204));\nstrip.show(); }\nif (temperatureObj1 > 26 && temperatureObj1 < 27) {\nstrip.setPixelColor(sine[0],strip.Color(51, 51, 204));\nstrip.show(); }\nif (temperatureObj1 > 27 && temperatureObj1 < 28) {\nstrip.setPixelColor(sine[0],strip.Color(0, 0, 255));\nstrip.show(); }\nif (temperatureObj1 > 28 && temperatureObj1 < 29) {\nstrip.setPixelColor(sine[0],strip.Color(51, 153, 255));\nstrip.show(); }\nif (temperatureObj1 > 29 && temperatureObj1 < 30) {\nstrip.setPixelColor(sine[0],strip.Color(102, 255, 255));\nstrip.show(); }\nif (temperatureObj1 > 30 && temperatureObj1 < 31) {\nstrip.setPixelColor(sine[0],strip.Color(102, 255, 204));\nstrip.show(); }\nif (temperatureObj1 > 31 && temperatureObj1 < 32) {\nstrip.setPixelColor(sine[0],strip.Color(0, 255, 0));\nstrip.show(); }\nif (temperatureObj1 > 32 && temperatureObj1 < 33) {\nstrip.setPixelColor(sine[0],strip.Color(102, 255, 51));\nstrip.show(); }\nif (temperatureObj1 > 33 && temperatureObj1 < 34) {\nstrip.setPixelColor(sine[0],strip.Color(204, 255, 51) );\nstrip.show(); }\nif (temperatureObj1 > 34 && temperatureObj1 < 35) {\nstrip.setPixelColor(sine[0],strip.Color(255, 255, 0));\nstrip.show(); }\nif (temperatureObj1 > 35 && temperatureObj1 < 36) {\nstrip.setPixelColor(sine[0],strip.Color(255, 204, 0));\nstrip.show(); }\nif (temperatureObj1 > 36 && temperatureObj1 < 37) {\nstrip.setPixelColor(sine[0],strip.Color(255, 153, 0));\nstrip.show(); }\nif (temperatureObj1 > 37 && temperatureObj1 < 38) {\nstrip.setPixelColor(sine[0],strip.Color(255, 51, 0));\nstrip.show(); }\nif (temperatureObj1 > 38 && temperatureObj1 < 39) {\nstrip.setPixelColor(sine[0],strip.Color(204, 51, 0));\nstrip.show(); }\nif (temperatureObj1 > 39 && temperatureObj1 < 40) {\nstrip.setPixelColor(sine[0],strip.Color(255,0,0));\nstrip.show(); }}", "step_imgs": ["https://cdn.instructables.com/FMU/CO0R/JT4TP8HP/FMUCO0RJT4TP8HP.LARGE.jpg", "https://cdn.instructables.com/F4G/Q0MK/JT4TP8HQ/F4GQ0MKJT4TP8HQ.LARGE.jpg"], "step_title": "Step 10: 1 Neopixel Light With 1 Sensor"}, {"step": 11, "steps_text": "This code is to extend the previous code to three sensors. In this code below, the sensors are attached to D2, D3 and D4, which have corresponding SDA and SCL numbers. The same code is repeated, except that the numbers are changed to indicate a second/third sensor/neopixel light. Because the coding for this is replicating the previous steps with small alterations and is also extremely long, I will be including the code under a separate document under the title Code: 3 Neopixel Lights With 3 Sensors.", "step_imgs": ["https://cdn.instructables.com/FYP/AHE4/JT4TP9Q8/FYPAHE4JT4TP9Q8.LARGE.jpg", "https://cdn.instructables.com/F85/TWA8/JT4TP9NF/F85TWA8JT4TP9NF.LARGE.jpg"], "step_title": "Step 11: 3 Neopixel Lights With 3 Sensors"}, {"step": 12, "steps_text": "There are a few potential challenges that you would face so far.\nFirst, because array values start at 0, you must make sure that you name your lights 0-6 instead of 1-7.\nSecondly, make sure that your cords correspond to the correct places and are tightly plugged in. Wires of the neopixel ring tend to not fit very well in the Base Shield.\nThirdly, you can change your object temperature to ambient temperature if 1) sensors do not work as sometimes obtaining object temperature is inconsistent 2) you wish to know changes in temperature of the environment instead of the actual sensor, which increases the sensitivity.\nLastly, make sure that you know clearly what each variable (such as temperatureObj1) means in terms of individual sensor because you need to correspond light with the temperature of a direction a sensor points to.", "step_imgs": [], "step_title": "Step 12: Potential Challenges"}, {"step": 13, "steps_text": "Lastly, you can plug all sensors into available ports on the Base Shield. You replicate the previous code for 1 sensor for another 4 times with minor editions, and you would get a neopixel ring that shows the temperature in 7 different directions. You can see how the colors change depending on heat source (hand) on the photos. Moreover, to make the device more sensitive (to changes in temperature potentially caused by a fire, Obj is changed to Amb in the codes, detecting ambient, environment temperature than object, sensor temperature). The extensive code for this will be included in a separate file.", "step_imgs": ["https://cdn.instructables.com/FCO/XKAJ/JT4TOYAO/FCOXKAJJT4TOYAO.LARGE.jpg", "https://cdn.instructables.com/F7V/W6SG/JT4TOYAR/F7VW6SGJT4TOYAR.LARGE.jpg", "https://cdn.instructables.com/FVV/I047/JT4TOYAS/FVVI047JT4TOYAS.LARGE.jpg", "https://cdn.instructables.com/FRK/408N/JT4TOYAT/FRK408NJT4TOYAT.LARGE.jpg", "https://cdn.instructables.com/FQ0/QHAP/JT4TOYAU/FQ0QHAPJT4TOYAU.LARGE.jpg"], "step_title": "Step 13: Integrate 7 Sensors With 7 Lights on Neopixel Ring!"}, {"step": 14, "steps_text": "This project is not only aiming to create a practical device. It incorporates skills that could be used in many other areas: for example, you can obtain the amount of gas if you know how to obtain temperature. Or you can use arrays to program a 64-bit RGB light strip. The skills used to build this project are extremely applicable in other fields, which can be useful in future projects. I believe that my project is overall successful, despite it does not necessarily goes on a straight line before reaching the goal. Taking steps and building mini-devices were needed to thoroughly understand each and every step, which utilizes knowledge from different fields of Arduino programming.\nSurprisingly, the biggest challenges encountered are caused by the smallest errors, such as the incorrect \"&\" or naming the lights 1-7. Moreover, I realized that while object temperature requires less power, ambient temperature makes the device more sensitive, which is better for serving the final purpose. The lesson is that when building codes, every single detail and choice matters.\nEven though I believe that the learning purposes of this project is fully achieved, if I were to do this project differently, I hope to incorporate even more elements, such as a buzzer that makes a sound in face of high degrees of temperature increases, with the purpose of enhancing the device's functional purposes.", "step_imgs": [], "step_title": "Step 14: Reflections"}], "channel": ""}, {"category": "", "description": "I like to play with labyrinth maze. I have always wanted to control one of those labyrinth maze games using gestures or mobile. I got inspired to create this Marble Maze by blic19933's 3D Printed Maze Controlled by Your Android Device\nInstead of using a Bluetooth module for communication I have used WiFi module (ESP8266) for communication. So the advantage of this is I can control the maze eighter using a wearable band or mobile app.\nWhat are the pros of my project?\n1. It is simple and easy to build\n2. It is cheap and needs a few electronic parts.\n3.Detachable magnetic maze.\n4. Easy to customize.\n5. So much fun to build it and play with it.\nThe Maze is controlled via a wearable band as well as a Bluetooth app developed using MIT App Inventor. The gyroscope sensor data from the band is transmitted through the WiFi connection to the Wemos D1 Mini device (esp8266) which controls the servos that tilt the maze. You can also control the maze using an android app. Android app is created with the MIT App Inventor2. This gadget requires less components. It is easy to build.\nYou can download all the stuff required for this project from this GitHub link: https://github.com/siddhesh13/gesture_controlled_maze\nLet's Start building...!!", "title": "Gesture Controlled Maze", "url": "https://www.instructables.com/id/Gesture-Controlled-Maze/", "section": "technology", "steps": [{"step": 1, "steps_text": "Components\n1x Wemos d1 mini\n2x SG90s Servo Motor\n1x ESP01\n1x MPU6050\n1x TP4056 LiPo Charger Module\n1x 3.7v 400mAh LiPo Battery\n1x Mini Slide Switch\n1x Fitbit band or watch strap\n4x 25mm Neodymium magnets\n2x 5mm steel ball\n2x Mounting screws\n10cm X 10cm Wooden Ply\n3D Printed Parts\nThe 3D print STL files are available on Thingiverse -\nbase_plate.stl\nx_axis.stl\ny_axis.stl\nmagnet_holder.stl\nmagnet_holder_cover.stl\nrectagular_maze.stl\ntriangular_maze.stl\nhexagonal_maze.stl\ncircular_maze.stl\nTools\n3D printer --> you can use online service\nSoldering iron and Tin\nScrewdriver and plier\nWire stripper\nGlue gun\nMultimeter", "step_imgs": ["https://cdn.instructables.com/FJA/1KF1/JSL37JRG/FJA1KF1JSL37JRG.LARGE.jpg", "https://cdn.instructables.com/F4T/HMW2/JSL37JRV/F4THMW2JSL37JRV.LARGE.jpg", "https://cdn.instructables.com/FRN/ENLJ/JSL37JRO/FRNENLJJSL37JRO.LARGE.jpg", "https://cdn.instructables.com/FCU/OFBS/JSL37JRK/FCUOFBSJSL37JRK.LARGE.jpg"], "step_title": "Step 1: Parts and Materials"}, {"step": 2, "steps_text": "I used Flashforge creator pro with 0.2mm nozzle and normal settings and with supports. You can also download all the files from Thingiverse. 3d print all the parts and clean the parts by removing support.\nhttps://www.thingiverse.com/thing:3484492", "step_imgs": [], "step_title": "Step 2: 3D Print the Marble Maze Parts"}, {"step": 3, "steps_text": "There are 5 parts to build this structure. Its a Gimbal like structure. Before attaching servo motors to 3d printed parts, first, test the servo motors and then set both the motors at 90-degree angle. Now take 2 1-sided servo horns and fit it into the slot of x_axis_motor.stl and y_axis_motor.stl parts. Now Attach y_axis_motor.stl part to one of the servo motors and attach magnet_holder.stl part to the other servo motor. Fit it into the slot and attach to it using the 2 mounting screws come with the servo motors. Then attach this y_axis_motor and servo motor to the x_axis_motor and magnet_holder.stl and servo motor to the y_axis_motor.stl part. Attach both motors using screw comes with the servo motor. Now solder the servo motor wires to the Wemos board.\nPin connections\nServo Motor X = D3 pin of Wemos\nServo Motor Y = D1 pin of Wemos\nConnect Ground and VCC pins of servo motors to GND and 5V pin of Wemos board respectively.\nNow, place the Wemos board inside the base.stl part. Now cover the base plate by putting the Gimbal structure of servo motors on it and attach both the parts using 1-inch screws. Place the whole structure on a wooden plate and attach to it using screws.\nPut the 25mm magnet in the slot of magnet_holder.stl part. Cover the magnet using the magner_holder_cover.stl part. Use glue to stick it.\nNow maze is ready. Upload the code in the Wemos using Arduino IDE.", "step_imgs": ["https://cdn.instructables.com/FMZ/JDE2/JSPA8F5E/FMZJDE2JSPA8F5E.LARGE.jpg", "https://cdn.instructables.com/FFB/ENY1/JSPA8F5H/FFBENY1JSPA8F5H.LARGE.jpg", "https://cdn.instructables.com/F1J/6JZK/JSPA8F5I/F1J6JZKJSPA8F5I.LARGE.jpg", "https://cdn.instructables.com/F26/KDIT/JSPA8F5M/F26KDITJSPA8F5M.LARGE.jpg", "https://cdn.instructables.com/F7L/1D4N/JSPA8F5O/F7L1D4NJSPA8F5O.LARGE.jpg", "https://cdn.instructables.com/FXM/NQ7C/JSPA8F5S/FXMNQ7CJSPA8F5S.LARGE.jpg", "https://cdn.instructables.com/FNA/UUSC/JSPA8F5X/FNAUUSCJSPA8F5X.LARGE.jpg", "https://cdn.instructables.com/FD7/ZD31/JSPA8F59/FD7ZD31JSPA8F59.LARGE.jpg", "https://cdn.instructables.com/FT4/HRFG/JSPA8MS0/FT4HRFGJSPA8MS0.LARGE.jpg", "https://cdn.instructables.com/FDM/H2LV/JSPA8MS1/FDMH2LVJSPA8MS1.LARGE.jpg"], "step_title": "Step 3: Assemble the Gimbal Structure"}, {"step": 4, "steps_text": "The Wearable band consist of the following components:\nESP01\nMPU6050\nTP4056 LiPo Charger Module\nMini Slide Switch\n3.7V 400mAh LiPo Battery.\nI use Nodemcu board to program ESP01. You can use a different programmer module to program ESP01. To program ESP01, connect ESP01 to Nodemcu board as shown in the picture. Then open Arduino IDE and select board as Nodemcu V1.0 and select the port and upload band.ino code. After uploading the code remove the header pins of the ESP01 using a soldering iron. Also, remove the header pins of the MPU6050 sensor. Now solder all the components as shown in the circuit diagram. Stick electric tape on the back side of all the modules to prevents short circuit. Place the soldered electronics parts in the 3d printed enclosure(wearable_band_case.stl). Attach the enclosure box to the band.", "step_imgs": ["https://cdn.instructables.com/FRE/GUWX/JSPA8M7L/FREGUWXJSPA8M7L.LARGE.jpg", "https://cdn.instructables.com/FV0/KIBU/JSSUGV3J/FV0KIBUJSSUGV3J.LARGE.jpg", "https://cdn.instructables.com/F6L/A7YH/JSSUGVQ1/F6LA7YHJSSUGVQ1.LARGE.jpg", "https://cdn.instructables.com/FT2/JYIW/JSPA8M8F/FT2JYIWJSPA8M8F.LARGE.jpg", "https://cdn.instructables.com/FBU/9N68/JSPA8MC0/FBU9N68JSPA8MC0.LARGE.jpg", "https://cdn.instructables.com/FUP/M8RR/JSPA8MC1/FUPM8RRJSPA8MC1.LARGE.jpg", "https://cdn.instructables.com/FUC/6BLR/JSPA8MC2/FUC6BLRJSPA8MC2.LARGE.jpg", "https://cdn.instructables.com/FIV/GLG1/JSPA8MAX/FIVGLG1JSPA8MAX.LARGE.jpg", "https://cdn.instructables.com/F6Q/OG58/JSPA8MCU/F6QOG58JSPA8MCU.LARGE.jpg", "https://cdn.instructables.com/F14/NRWR/JSPA8MD7/F14NRWRJSPA8MD7.LARGE.jpg", "https://cdn.instructables.com/F75/OZL5/JSPA8M6J/F75OZL5JSPA8M6J.LARGE.jpg"], "step_title": "Step 4: Make the Wearable Band"}, {"step": 5, "steps_text": "Code for the wearable band: https://github.com/siddhesh13/gesture_controlled_m...\ncode for the maze: https://github.com/siddhesh13/gesture_controlled_maze/blob/master/maze/maze.ino\nI have programmed both the maze and the band using Arduino IDE. The band sends the gyroscope values (roll and pitch) to the maze. For data transmission, it uses the UDP protocol. For more information on UDP- ESP8266 visit this webpage https://arduino-esp8266.readthedocs.io/en/latest/esp8266wifi/udp-examples.html\nThe maze is working in Access Point (AP) mode and the band is working in Station Mode.\nThe band first tries to connect to the maze which is working in AP (Access Point) mode. After the successful connection with the maze, ESP01 in the band initiates the communication with mpu6050 using I2C protocol. First, it calibrates the sensor for the current orientation of the sensor. Then it calculates the Roll and Pitch angle from MPU6050. It calculates angle every 4ms, i.e, 250 values per second. Then it transmits these angle values to the maze. To send UDP packet it requires an IP address and port number of a remote device that is the maze. The IP address of the maze is \"192.168.4.1\" and port number is \"4210\". After receiving the angle values from the band, servo motors on the maze rotates.", "step_imgs": [], "step_title": "Step 5: Code Explanation"}, {"step": 6, "steps_text": "MIT App Inventor is the best platform to make a quick android app.\nI have attached the aia and apk files. Download the apk file and install it in your android phone and start playing with the maze. You can also make changes in the app using aia file. Open the aia file MIT app inventor and make changes in the app according to you. I have used UDP extension to send data to the Wemos(esp8266) device.\nDownload the extension from here https://community.thunkable.com/t/free-udp-client-extension/5831\nThis app uses the gyroscope sensor of the smartphone to check the phone orientation and sends the value to the Wemos device using UDP protocol. I am working on an app for the iOS and will upload the files once it is done. Stay tuned!!!", "step_imgs": [], "step_title": "Step 6: Make an Android App Using MIT App Inventor"}, {"step": 7, "steps_text": "I have designed the maze in four different shapes. You can download it and print it using a single color or multicolor in any color of your choice.\nYou can design your own maze using 3D/2D Maze Generator. How to use it is explained on their webpage.\nBut using this script you can only design a maze in a square/rectangle shape.\nI have designed the maze using Inkscape and Fusion360 software.\nFirst, download the image of the maze from the internet. Download black and white image for good results. Then open the image in Inkscape software. Then convert the image from JPG/PNG format to Bitmap format. To convert it to Bitmap, select the image and click on the Path--> Trace Bitmap. A new pop-up window will open, select Brightness cutoff and check the Live Preview check mark to see the results. Increase/decrease the Threshold value for Brightness cutoff to get best results and click OK. You will get a Bitmap image of the maze. Delete the original image of the maze which is in jpg/png format. Now resize the maze image by using Width and Height option from the top menu bar. After this save the maze image in SVG format.\nNow open Fusion360 software, and click on Inset-->Insert SVG. Select the SVG file of the maze, and click OK.\nYou have a 2D sketch of your design ready, check its dimensions like width, length, diameter and the space for the ball inside the maze. If it is not proper then edit it in the Inkscape again and import the updated file again in the Fusion360. If all the dimensions are right then simply add a 26mm circle sketch in the center. This circle is for a magnet. Now extrude the maze. Keep wall height to 5-7mm, base thickness to 3-4mm, and cavity hole for the magnet to 2mm. After extruding save the file as STL and slice it using the slicer software and print it.", "step_imgs": ["https://cdn.instructables.com/F4S/XHVC/JSPA8TAH/F4SXHVCJSPA8TAH.LARGE.jpg", "https://cdn.instructables.com/FND/VI9S/JSPA8TAS/FNDVI9SJSPA8TAS.LARGE.jpg", "https://cdn.instructables.com/FL1/AW25/JSPA8TAU/FL1AW25JSPA8TAU.LARGE.jpg", "https://cdn.instructables.com/FL5/0875/JSPA8TB6/FL50875JSPA8TB6.LARGE.jpg", "https://cdn.instructables.com/FWD/W14Z/JSPA8TBS/FWDW14ZJSPA8TBS.LARGE.jpg", "https://cdn.instructables.com/F9Q/VTUE/JSPA8TD1/F9QVTUEJSPA8TD1.LARGE.jpg", "https://cdn.instructables.com/FP8/T7C1/JSPA8TE8/FP8T7C1JSPA8TE8.LARGE.jpg", "https://cdn.instructables.com/F4B/29E1/JSPA8TGL/F4B29E1JSPA8TGL.LARGE.jpg", "https://cdn.instructables.com/FKZ/HM65/JT2SL84R/FKZHM65JT2SL84R.LARGE.jpg", "https://cdn.instructables.com/FPG/9N3G/JT2SL84S/FPG9N3GJT2SL84S.LARGE.jpg", "https://cdn.instructables.com/FEA/2XY1/JT2SL84T/FEA2XY1JT2SL84T.LARGE.jpg", "https://cdn.instructables.com/FER/PZOT/JT2SL84U/FERPZOTJT2SL84U.LARGE.jpg", "https://cdn.instructables.com/FW7/4OV5/JT2SL84V/FW74OV5JT2SL84V.LARGE.jpg", "https://cdn.instructables.com/F0S/I2UC/JT2SL84J/F0SI2UCJT2SL84J.LARGE.jpg", "https://cdn.instructables.com/FB2/JM3B/JT2SL84K/FB2JM3BJT2SL84K.LARGE.jpg", "https://cdn.instructables.com/FVH/LG2B/JT2SL84L/FVHLG2BJT2SL84L.LARGE.jpg", "https://cdn.instructables.com/FKX/9FWJ/JT2SL84O/FKX9FWJJT2SL84O.LARGE.jpg", "https://cdn.instructables.com/F3F/1CWB/JT2SL84Q/F3F1CWBJT2SL84Q.LARGE.jpg"], "step_title": "Step 7: Design the Maze"}, {"step": 8, "steps_text": "This game is awesome! Put any maze and power it ON using a micro USB cable.\nWear the band and turn it ON, wait for 20 seconds to calibrate the sensor. Now you are ready to play.\nIf you are using the app to control the maze, first connect your mobiles WiFi to the maze. then open the app and you're ready to play.\nIf you design your own maze then don't forget to share your maze designs.\nIf you found it interesting, please vote for me in the Remix Contest. Thanks for reading through to the end!\nKeep enjoying and Keep tinkering.", "step_imgs": ["https://cdn.instructables.com/FMN/FWOQ/JT4TM3YB/FMNFWOQJT4TM3YB.LARGE.jpg"], "step_title": "Step 8: Let's Play"}], "channel": ""}, {"category": "", "description": "In this electronic DIY project you will see how to make a minimal OTG connector at a very low cost. The OTG connector is a very practical tool that makes it easy to connect your Android phone for U disk expansion and mouse connection. You can make a more detailed production by watching the full production video.\nMaterials needed:\nUSB female\nMike plug\nHeat shrinkable tube\nUse tools:\nElectric iron", "title": "How to Make a Minimum OTG Connector", "url": "https://www.instructables.com/id/How-to-Make-a-Minimum-OTG-Connector/", "section": "technology", "steps": [{"step": 1, "steps_text": "One USB holder, you can get it from the old device. Mike plug one", "step_imgs": ["https://cdn.instructables.com/FUY/2Z3E/JT4TP8RX/FUY2Z3EJT4TP8RX.LARGE.jpg", "https://cdn.instructables.com/FAI/LS7U/JT4TP8SA/FAILS7UJT4TP8SA.LARGE.jpg"], "step_title": "Step 1: The First Step Is to Prepare the Required Materials."}, {"step": 2, "steps_text": "The USB socket and the Mike plug are soldered according to the drawing, and they can be fixed to the hole plate for soldering.", "step_imgs": ["https://cdn.instructables.com/FJC/6UAQ/JT4TP8VL/FJC6UAQJT4TP8VL.LARGE.jpg", "https://cdn.instructables.com/F6G/ALUK/JT4TP8VN/F6GALUKJT4TP8VN.LARGE.jpg", "https://cdn.instructables.com/FBA/F887/JT4TP8VO/FBAF887JT4TP8VO.LARGE.jpg"], "step_title": "Step 2: Second Step Component Welding"}, {"step": 3, "steps_text": "Apply the finished product to the hot melt adhesive and heat shrink the sleeve to make the shape.", "step_imgs": ["https://cdn.instructables.com/F8T/MNJT/JT4TP90C/F8TMNJTJT4TP90C.LARGE.jpg"], "step_title": "Step 3: Third Step"}, {"step": 4, "steps_text": "Connect a USB flash drive or mouse for testing", "step_imgs": ["https://cdn.instructables.com/F2Q/MWA1/JT4TP95A/F2QMWA1JT4TP95A.LARGE.jpg", "https://cdn.instructables.com/FS4/YCI0/JT4TP962/FS4YCI0JT4TP962.LARGE.jpg"], "step_title": "Step 4: Last Step"}], "channel": ""}, {"category": "", "description": "3 Ways to Build Your Own Contactless Voltage Detector For Less Than a Dollar\nIntroduction\n------------\nWhen electricity is not properly handled, it results in electrical shocks with a nasty experience; which is why safety must come first when working with electricity or electrical devices. In order to avoid injury, prior to starting work on an electrical box such as an AC mains switch-board or a power supply, you must first verify there is no AC voltage. It is really hard to completely isolate a device from the main supply; so, how can you be sure that there's no voltage remaining?", "title": "Contactless Voltage Detector", "url": "https://www.instructables.com/id/Contactless-Voltage-Detector/", "section": "technology", "steps": [{"step": 1, "steps_text": "There are several options available in the market and they range in price, but if you don't want to spend a lot and if you are a true DIY lover, this Non-Contact AC voltage detector is the right choice for you. After watching this video you should be able to make your own AC tester for less than a Dollar.", "step_imgs": ["https://cdn.instructables.com/FZE/JSYF/JT4TP59B/FZEJSYFJT4TP59B.LARGE.jpg"], "step_title": "Step 1:"}, {"step": 2, "steps_text": "In this video I am going to show you 3 ways of making your own Contact Less AC Voltage Detectors using:\nIC 4017 Decade Counter\n555 Timer IC\n3 x General Purpose NPN Transistors", "step_imgs": ["https://cdn.instructables.com/FL2/8OZU/JT4TP59I/FL28OZUJT4TP59I.LARGE.jpg"], "step_title": "Step 2: Topic Covered"}, {"step": 3, "steps_text": "All these voltage detectors work on a simple principle of electromagnetic induction.\nA magnetic field is produced around a current carrying conductor and if current through the conductor is alternating current (AC), the magnetic field produced varies periodically. When we place an antenna near an AC energized object, a small current gets induced into the antenna due to electromagnetic induction. By amplifying this current we can light up a LED or a buzzer circuit, indicating that AC voltage is present.", "step_imgs": ["https://cdn.instructables.com/FZS/PAO6/JT4TP59K/FZSPAO6JT4TP59K.LARGE.jpg"], "step_title": "Step 3:"}, {"step": 4, "steps_text": "Lets start our discussion by assembling the circuit using IC 4017. IC 4017 is a 16 Pin Decade counter, it is used for low range counting applications. It can count from 0 to 10 (the decade count) sequentially in a pre-defined time and reset the count or hold it when required.\nFor this setup we need:\nIC 4017\n2N2222 General Purpose NPN Transistor\n100 \u03bcF Capacitor\nLED\n220\u03a9 and 1K Resistor\nBuzzer\nand a Homemade Antenna", "step_imgs": ["https://cdn.instructables.com/F5X/2EET/JT4TP59O/F5X2EETJT4TP59O.LARGE.jpg"], "step_title": "Step 4: Setup Using IC 4017"}, {"step": 5, "steps_text": "Connect Pin-1 of the IC to the 1K resistor. The other end of the resistor connects to the base of the transistor.\nNext connect the collector pin to the -ve legs of the LED, Transistor and the buzzer. The +ve legs connects to the +ve rail of the circuit-board. The negative rail connects to the Emitter, Pin-8, Pin-13 and the Pin-15 of the IC. The antenna is connected to the Pin 14 which is the clock input pin. When the antenna receives input clock pulses it advances the counter and the LED flashes. You can connect the cable connected to Pin-1 to any one of the Output pins of the IC. If you want you can also connect 3 or 4 LEDs to the Output Pins to give it a chaser like effect.", "step_imgs": ["https://cdn.instructables.com/F3N/EJWD/JT4TP59T/F3NEJWDJT4TP59T.LARGE.jpg"], "step_title": "Step 5:"}, {"step": 6, "steps_text": "Now lets do a quick test. Moving a live wire close to the coil makes the buzzer and the LED to flash. But as you can see, at some instances the LED and the buzzer wont go off even after I move the wire away. Also, this setup flashes when I put my fingers around the coil. Pretty much every second video on YouTube is made using this hypersensitive IC. But frankly speaking I am not impressed by this setup.", "step_imgs": ["https://cdn.instructables.com/FL8/TEFV/JT4TP5A0/FL8TEFVJT4TP5A0.LARGE.jpg"], "step_title": "Step 6: 4017 Demo"}, {"step": 7, "steps_text": "In the 2nd setup I am using the 555 timer IC.\n555 timer is the most common chip used in DIY electronics projects because it\u2019s small, inexpensive, and very useful. This circuit is very simple. When the voltage on Pin-2 falls below 1\u20443 of VCC the Output on Pin-3 goes HIGH and the LED lights up. As long as this pin continues to be kept at a low voltage, the OUT pin will remain HIGH. So, when the antenna detects an alternating input the output goes HIGH and LOW and the LED flashes accordingly.\nFor this setup we need:\nIC 555\n4.7 \u03bcF Capacitor\nLED\n220\u03a9 and 10K Resistor\nBuzzer\nand a Homemade Antenna", "step_imgs": ["https://cdn.instructables.com/FE6/OAN8/JT4TP5A2/FE6OAN8JT4TP5A2.LARGE.jpg"], "step_title": "Step 7: Setup Using IC 555"}, {"step": 8, "steps_text": "Connect Pin-1 to ground. Pin-2 to the antenna. Pin-3 to the LED and the buzzer. Pin-6 to the +ve leg of the capacitor and Pin-7 to one end of the 10K resistor. Then Pin-6 or the Threshold pin and Pin-7 or the Discharge pin need to be connected to each other. Pin-8 and the other end of the 10K resistor connects to the +ve rail of the circuit board, and finally connect all the -ve legs to the negative rail of the circuit board.", "step_imgs": ["https://cdn.instructables.com/FK7/ZJ13/JT4TP5WR/FK7ZJ13JT4TP5WR.LARGE.jpg"], "step_title": "Step 8:"}, {"step": 9, "steps_text": "Alright, now lets do a quick test.\nAs we bring a live wire close to the antenna the buzzer and the LED starts buzzing and flashing; and, if I put my hand around the antenna it has no effect on the circuit. Which makes this setup more reliable as I am not getting any false reading.", "step_imgs": ["https://cdn.instructables.com/FJV/2MMC/JT4TP5A5/FJV2MMCJT4TP5A5.LARGE.jpg"], "step_title": "Step 9: 555 Demo"}, {"step": 10, "steps_text": "In the final setup I am using 3 2N2222 General Purpose NPN transistor.\nAs we know a transistor has three terminals - emitter, base and collector. Collector to emitter current is controlled by the base current. When there is no base current, no current flows from the collector to the emitter. Thus, a transistor acts like a switch. So, a transistor can either ON, OFF or in-between.\nFor this setup we need:\n3 x 2N2222 General Purpose Transistors\n1M, 100K and a 220\u03a9 Resistor\nLED\nBuzzer\nand a Homemade Antenna", "step_imgs": ["https://cdn.instructables.com/FKK/SDKF/JT4TP5AG/FKKSDKFJT4TP5AG.LARGE.jpg"], "step_title": "Step 10: Setup Using Transistors"}, {"step": 11, "steps_text": "Connect the antenna to the base of the 1st transistor. The emitter connects to the base of the 2nd transistor and same with the next one. Then connect the 1M resistor to the collector of the 1st transistor, 100K to the 2nd and the 220\u03a9 in series with the LED and the buzzer. Then, connect all the resistors to the +ve rail of the circuit board. And finally ground the emitter of the 3rd transistor.", "step_imgs": ["https://cdn.instructables.com/FY2/WK5X/JT4TP5AP/FY2WK5XJT4TP5AP.LARGE.jpg"], "step_title": "Step 11:"}, {"step": 12, "steps_text": "In this setup, the antenna is connected to the base of first transistor. When we move the antenna close to an AC energized object, a small current gets induced into the antenna due to the electromagnetic induction. This current triggers the first transistor and output of the first transistor triggers the second and third. The total gain (or the ratio of collector current to base current) would then be the multiplication of the three. The third transistor then turns ON the LED and buzzer circuit, indicating the presence of AC voltage.\nSo, the brightness of the LED totally depends on the base-current. As the flow increases the LED's brightness goes high giving it a fading effect. You have to be really up close to get this thing to work. May be if I take the antenna's cover off it will perform well, but again this circuit was not able to impress me.", "step_imgs": ["https://cdn.instructables.com/F1P/RW93/JT4TP5AV/F1PRW93JT4TP5AV.LARGE.jpg"], "step_title": "Step 12: Transistor Demo"}, {"step": 13, "steps_text": "I don't know about you but I really like the setup using the 555 timer IC. So, without wasting time lets start soldering all the components to the circuit board.\nI'll start by soldering the base or the socket of the IC. An IC socket is used as a placeholder for ICs. They are used in order to allow safe removal and insertion of ICs because IC chips may get damaged from heat while soldering. Next, I am soldering the 220\u03a9 Resistor, LED and the Buzzer to Pin-3 of the IC. After that, I am soldering the 10K resistor and the Capacitor to the board.\nWhen considering household electric appliances, your safety is the main goal. If you are facing high bills, flickering lights and damaged appliances at your home, go ahead and make one of these to make sure that the home circuit is in proper working condition.\nNext, I am soldering the 9V Battery Snap-on Connector Clip to the plate. Once soldered, I am connecting all the +ve and -ve pins as per the circuit diagram. Once everything is in place its time for me to install the homemade antenna.", "step_imgs": ["https://cdn.instructables.com/FZS/KYDG/JT4TP5AZ/FZSKYDGJT4TP5AZ.LARGE.jpg", "https://cdn.instructables.com/FJE/W799/JT4TP5B0/FJEW799JT4TP5B0.LARGE.jpg", "https://cdn.instructables.com/FNU/9IIG/JT4TP5B1/FNU9IIGJT4TP5B1.LARGE.jpg"], "step_title": "Step 13: Soldering"}, {"step": 14, "steps_text": "OK, now the interesting bit. Lets check out how this assembly works when a live wire is brought near to it. Looks like I have hit the jackpot. So, now you have no reason to blame the nation's power system when you have a poor wiring inside our home. Go ahead and check it NOW....", "step_imgs": ["https://cdn.instructables.com/FNZ/2UFC/JT4TP5B9/FNZ2UFCJT4TP5B9.LARGE.jpg"], "step_title": "Step 14: Testing"}, {"step": 15, "steps_text": "", "step_imgs": [], "step_title": "Step 15: Thanks"}], "channel": ""}, {"category": "", "description": "Technology and Engineering, Grades 3 - 8\nLesson Overview\nIn this activity, students practice the Engineering Design Process on a challenge that is relevant to them, while learning 3D modeling on Tinkercad. The Earbud \u201cBuddy\u201d is a fun creation that helps keep an earbud cord from getting tangled when storing the earbuds. The earbuds could be a simple set provided by the teacher, or the student\u2019s own set.\nStudents will combine art, math, and technical concepts as they create a design that is meaningful to them while dimensioning it to fit the physical objects they have measured. The designs are likely to be quick to print (less than 15 min) allowing for multiple iterations while students improve and refine their designs.\nThis project is structured to follow the Engineering Design Process (EDP), a process that helps designers in any discipline create solutions to problems. While there are many ways that people solve problems, designers often use the EDP because it offers a clear roadmap for them to follow as they work towards a solution.\n\nFirst, designers Define the challenge they are facing, then Learn more about the problem and Explore existing solutions. It\u2019s tempting to skip these first few steps and head straight into brainstorming, but don\u2019t! When designers take the time to understand the problem clearly, they come up with much better solutions. The Design phase is where brainstorming happens. Designers brainstorm multiple possible solutions, then develop a few of them into more detailed plans. Encourage your students to plan at least 3 of their potential ideas before choosing a design direction and starting to Create a product based on their design. If they hit any roadblocks trying to create their first design choice, they\u2019ll be able to revisit their alternate design plans and choose a new direction - without starting from scratch. Designers then take time to Observe their design and see how they can Improve it. We strongly recommend that students have an opportunity for at least 2 Create-Observe-Improve cycles. When students feel they have to \u201cget it right the first time,\u201d they are less willing to take risks and be creative. By repeating the cycle, they have a chance to fix flaws and adopt successful ideas from classmates, and in fact, they\u2019re practicing what professional designers really do. A good design cycle builds in time for the designer to Reflect on their product and the process of making it, looking for learning habits and insights that will help in future challenges. When the work is complete, designers are ready to Share. They bring their work into the real world, by posting, publishing, presenting, or exhibiting - or giving or selling if appropriate! - what they\u2019ve made. For students working through a design process, a real audience helps students connect their learning and work experiences to the world outside the classroom. For Makerspaces and Maker projects, in particular, this is hugely important for building confidence in every student and a sense of community among Makers. To help students work through this process, be sure to build in planned \u201cstops\u201d at each step for students to record their thoughts and progress as they work through product iteration cycles.\nEssential Question(s)\nHow can the Engineering Design Process be used to help students be effective and creative inventors?\nHow are measuring and math skills important in product design?\nSkills Practiced:\nMeasuring with a ruler or caliper\nCalculating Area and Volume\nThe Engineering Design Process\n3D modeling in Tinkercad\nTime Required: 2-3 Hours design time\nMaterials Needed:\nSketch paper and pencils\nTinkercad\nMiscellaneous prototyping materials (paper, cardstock, foam sheets, markers, etc.)\n3D Printer and filament", "title": "Earbud Buddies", "url": "https://www.instructables.com/id/Earbud-Buddies/", "section": "technology", "steps": [{"step": 1, "steps_text": "Context\nIt is likely that students have had contact with audio \u201cearbud\u201d headphones, and experienced the problem of a tangled cord. What if they could solve this problem for their own earbuds, and create a device that is fun and useful? The Engineering Design Process and 3D modeling are both very useful tools for designers and problem-solvers. This activity is simple, fun, and also includes measuring and calculating area and volume.\nThe problem/challenge\nDefinition: students use Tinkercad to design Earbud Buddies with custom features. IN this activity, the designs are expected to be relatively flat, unless otherwise specified by the teacher.\nCriteria:\nStudents choose 3 of the following to include in their Earbud Buddy\nFit a specified set of earbuds and hold the cord for storage\nKeep the cord from unraveling when stored in a backpack/bag\nInclude a motif that is personal to the designer, such as a character, object, or shape\nOptional: be usable for a variety of earbud designs\nConstraints:\nOverall Earbud Buddy size and print time\nOverall area must be no more than 5 square inches\nOverall volume must be no more than 1 cubic inch\nPrint time varies with the level of detail. A large earbud buddy with text and cutouts could take 30 minutes to print. A simple buddy with few cutouts will take less time, about 20 minutes or less.\nIf the students have access to the slicer software, then they can use it to check the print time for their designs, and a print time limit can be set.\nLearning /product Goals\nStudents will make Earbud Buddies for their own use, for a specific need defined in the classroom, or for sharing in the classroom.", "step_imgs": [], "step_title": "Step 1: Define"}, {"step": 2, "steps_text": "1. Research:\nLook at existing earbuds on audio headphones. Look online for examples of \u201cearbud holders\u201d. Look at the packaging that earbuds come in and any storage devices they may come with. Ask other students and adults how they keep their headphone wires neat and prevent tangling. Students can list what they like/find useful and don\u2019t like /don\u2019t find useful about existing products.\n2. Collect:\nHave students create an inspiration page where they sketch and/or document a few of the earbud holders they like, such as a blog*, Google Docs, a notebook, poster, etc.\n* Padlet is also great for this - it's a free digital pin board in which users can share ideas and inspiration (including links and photos) while collaborating.", "step_imgs": [], "step_title": "Step 2: Learn / Explore"}, {"step": 3, "steps_text": "1. Design:\nA good place to start for this activity is a flat design where the earbuds are some significant feature, such the eyes on a character, a pair of flowers, a bird sitting on eggs, ears on an animal, or speakers on a boombox. The major parts that students design are the shape, the features that hold the earbuds, the place to wind the cord, and a way to hold the loose end of the cable. Students brainstorm ideas using the Project Definition and the Criteria and Constraints specified in the \u201cDefine\u201d step. Use the inspiration page created in \u201cLearn / Explore\u201d step as a reference.\nOption A: draw designs on how the Earbud Buddy will look and/or function. Use paper, whiteboard, drawing apps.\nOption B: Build simple models using crafting materials (paper, glue, clay, pipe cleaners, etc.) to show look and/or function.\nOption C: Let the students play around in Tinkercad to get familiar with the program and make practice models.\nIt is important that students create at least three different ideas. Many will want to go with their first idea. Encourage them to make life-size sketches of the Earbud Buddy so they can start thinking about the details, then play around with ideas and see what comes of it. Generating ideas can be hard work, but putting in the time and effort can produce great creative and unexpected results.\nSome examples:\nA. Owl:\nDimensions:\nWidth - 1 \u215d in (45 mm)\nHeight - 2 in (54 mm)\nFeatures:\nWrap around body\nHoles for eyes to hold earbuds\nHole in the nose to hold headphone jack.\nB. Bear:\nDimensions:\nWidth - 1 \u00be in (45 mm)\nHeight - 1 \u215d in (54 mm)\nFeatures:\nWrap around body\nHoles to cradle ears\nC. Fish:\nDimensions:\nWidth - 3 \u215d in ( mm)\nHeight - 2 in ( mm)\nFeatures:\nWrap around body\nHoles for eyes to hold earbuds.\nHole in the tale to hold headphone jack.\nCan be wrapped horizontally or vertically.\n2. Choose a Direction:\nHave the students choose a design that meets the criteria of the project. Sketch these designs and emphasize that this is their design \u201cdirection\u201d and that the design they create may be different as they learn more about the tools available and iterate through the design cycle.", "step_imgs": [], "step_title": "Step 3: Design"}, {"step": 4, "steps_text": "1. Choose a motif.\na. You can create a life-size sketch drawing of the earbud buddy, outline and color it in with a dark color sharpy, and scan in the image. This image can then be converted into an SVG file, and imported into Tinkercad for use.\nb. You may also use Scribble Block to make your own shapes.\n2. Decide whether earbuds will be held in holes or cradled.\n3. Measure:\nCord diameter\nMicrophone length\nThe rubber part of the bud\n4. Set the overall shape hight to \u215b\u201d (.125).\n5. Add holes/cradles for earbuds.\n6. Add notch for the end of the cord.\n7. Make the design yours - add more detail, text, refine shape, etc.\n8. Check size against the constraints and modify as needed.\n9. Use a 3D printer slicer program to check build time and volume, and modify the design as needed.\n10. 3D Print the Earbud buddy by exporting the file as an STL. You can also export as an SVG for laser cutting. (Try exporting small SVG details to create cricket stickers to add to your Earbud Buddies.)\n11. Try it out! Does it hold the earbuds, keep the cord neat, and look good to you?\n12. Iterate through the design cycle going back to Step 7 in this list.", "step_imgs": [], "step_title": "Step 4: Create"}, {"step": 5, "steps_text": "Try out the new Earbud Buddies! See how well they hold the student\u2019s designated Earbuds, and if they work for others as well. Encourage students to share their creations and come up with ideas for new devices.\nIt\u2019s a good idea for students to have an opportunity for at least two design-build-improve cycles. When students feel they have to \u201cget it right the first time\u201d they are less willing to take risks and be creative. On the second time through they can fix flaws and adopt successful ideas from classmates.\nProvide stopping points for the class where students can observe, evaluate, and document their design.\nCreate documentation guidelines for students to record their thoughts and progress as they work through product iteration cycles. This can serve as a formative assessment.\nA description/sketch of the design\nHow well the design met the project definition, criteria, and constraints\nWhat students liked about their design\nWhat students want to improve on the design\nSuggestions for improvement\nCriteria:\nStudents choose 3 of the following to include in their Earbud Buddy\nFit a specified set of earbuds and hold the cord for storage\nKeep the cord from unraveling when stored in a backpack/bag\nInclude a motif that is personal to the designer, such as a character, object, or shape\nOptional: be usable for a variety of earbud designs\nConstraints:\nOverall Earbud Buddy size and print time\nOverall area must be no more than 5 square inches\nOverall volume must be no more than 1 cubic inch\nPrint time varies with the level of detail. A large earbud buddy with text and cutouts could take 30 minutes to print. A simple buddy with few cutouts will take less time, about 20 minutes or less.\nIf the students have access to the slicer software, then they can use it to check the print time for their designs, and a print time limit can be set.\nDownload pdf with possible prompts for Steps 5 and Step 6", "step_imgs": [], "step_title": "Step 5: Observe, Improve, Iterate"}, {"step": 6, "steps_text": "Reflect: After the design and build time is over, have students reflect on the process and product. This reflection is similar to the one in the \u201cObserve, Improve, Iterate\u201d step but now includes reflection on the process as well.\nDownload pdf with possible prompts for Steps 5 and Step 6:", "step_imgs": [], "step_title": "Step 6: Reflect"}, {"step": 7, "steps_text": "Give the students and opportunity to share their Earbud Buddies with the class or some other community. Options for sharing include presentation, demonstration, blog or online post, video clip, physical display, family events, and maker fairs, or in the use for which it was intended.", "step_imgs": [], "step_title": "Step 7: Share"}, {"step": 8, "steps_text": "Examples:\nDesign a simple device that wraps up an extra cord and effectively shortens the cord when using the earbuds. This could be a feature added to the storage device or a standalone item.\nCreate an Earbud Buddy with more 3D features such as\nExplore entrepreneurship concepts - students can create product pitches and filmed commercials for their Earbud Buddies.\nWe hope you had fun designing and sharing your Earbud Buddies. What did you make? What materials did you use? We want to see! If you did this in a K-12 classroom, what subject was it in?\nSend us an email or leave us a comment so we can see what you're making.\nVisit our website k12maker.mit.edu to get resources for K-12 teachers:\nMaker skills workshops for K-12 educators - Spring, Summer, and Fall\nList of Tools and Materials and illustrated charts to print and post\nSupervision and safety guidelines for shop administrators\nTraining guides for common tools (including student checklists and refresher guides)\nOur Maker Methodology for designing Maker Projects for core curriculum, including sample projects", "step_imgs": [], "step_title": "Step 8: Project Extensions"}], "channel": ""}, {"category": "", "description": "When your building and prototyping circuits , one of the most essential tools you'll need is a variable power adapter. And if you're going to make one you may as well use a Super Nintendo Controller to put it into!\nDon't worry, I didn't use a genuine one, it's a cheap knock off that you can buy on eBay for a few bucks. There were a few challengers with ensuring all of the components could fit inside the controller but with a little planning I managed to jam it all inside the controller.\nI used an old 3.7v phone battery to run the power supply. These are usually easy to find (just ask around and you're sure to find someone with a few old phones lying around) and small enough to fit inside the controller. You can also easily charge them with a cheap charging module from eBay.\nSo without further ado - lets get cracking", "title": "Variable Power Supply V2", "url": "https://www.instructables.com/id/Variable-Power-Supply-Nintendo-Style/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts\n1. Super Nintendo Controller - eBay\n2. Voltage display - eBay\n3. Voltage regulator - eBay\n4. 10K pot - eBay\n5. 3.7v phone battery - just grab out out of an old phone or you can buy them from eBay\n6. Banana plugs: Buy more if you need to make different connections to power your projects\na. Sockets - eBay\nb. Inputs - eBay\n7. You can also buy these banana plug connectors which will allow you to attach the power supply different ways\nalligator clips - eBay, hook clip - eBay, probe - eBay\n8. SPDT switch - eBay\n9. Charging module - eBay\n10. Wire\nTools\n1. Soldering Iron\n2. Pliers\n3. Screwdriver\n4. wire cutters\n5. Dremel (not really necessary but it always comes in handy)\n6. Super glue\n7. Drill", "step_imgs": ["https://cdn.instructables.com/FUU/79O4/JT4TM3W1/FUU79O4JT4TM3W1.LARGE.jpg", "https://cdn.instructables.com/FO2/F153/JT4TM2XJ/FO2F153JT4TM2XJ.LARGE.jpg", "https://cdn.instructables.com/F7V/PBZY/JT2SNSBA/F7VPBZYJT2SNSBA.LARGE.jpg", "https://cdn.instructables.com/F0L/ULLB/JT2SNSAU/F0LULLBJT2SNSAU.LARGE.jpg", "https://cdn.instructables.com/FNB/THHV/JT2SNSAB/FNBTHHVJT2SNSAB.LARGE.jpg", "https://cdn.instructables.com/FAK/9X8J/JT2SNS8W/FAK9X8JJT2SNS8W.LARGE.jpg"], "step_title": "Step 1: Parts and Tools"}, {"step": 2, "steps_text": "First step is to open up the case and remove the guts\nSteps:\n1. Un-screw and remove the back of the controller\n2. Remove the circuit board and cord. You don't need this so you can just keep the wire for another project and throw away the circuit board\n3. Remove the D pad and all the other buttons and place somewhere where you won't lose them.\n4. Inside the controller are a lot of small plastic pins, gussets, and other plastic parts that you need to remove. You want to make as much room as possible inside the case so trim these off. Make sure though you don't cut the plastic screw holders though", "step_imgs": ["https://cdn.instructables.com/FE1/594X/JT4TM3W3/FE1594XJT4TM3W3.LARGE.jpg", "https://cdn.instructables.com/FQ6/CLN7/JT2SNS4X/FQ6CLN7JT2SNS4X.LARGE.jpg", "https://cdn.instructables.com/FKW/55X4/JT2SNS51/FKW55X4JT2SNS51.LARGE.jpg", "https://cdn.instructables.com/F6Y/PVSS/JT2SNS6G/F6YPVSSJT2SNS6G.LARGE.jpg", "https://cdn.instructables.com/FEF/42FI/JT2SNS6J/FEF42FIJT2SNS6J.LARGE.jpg"], "step_title": "Step 2: Modding the Case"}, {"step": 3, "steps_text": "Now that you have a empty controller, you now need to work out how your going to stick everything inside. Make sure you also consider all of the wires that will be needed as well, these can take up a surprisingly lot of room.\nSteps:\n1. Place all of the components inside the case\n2. Move them around and try and figure out what is the best place for each of them.\n3. I decided to put the banana plugs, switch and pot into the 4 button holes which worked really well.\n4. Once you have worked out how everything is going to fit, you now need to start to add the components inside the controller", "step_imgs": ["https://cdn.instructables.com/FOG/EW9J/JT2SNSAJ/FOGEW9JJT2SNSAJ.LARGE.jpg"], "step_title": "Step 3: Working Out How to Fit Everything Inside"}, {"step": 4, "steps_text": "The banana plugs allow you to change over connections. For example, you might need power for a bread board so would need jumper leads attached to the male banana plug. Other times you might just want to attach the power supply to the ends of wires soyou'd swap out the banan plugs and use ones with aligator clips attached.\nSteps:\n1. As the banana plugs are too long to fit inside the controller, you'll need to slightly modify them. The first thing to do it to remove one of the small, plastic spaces on the banana plug\n2. Next, add some super glue to the inside of the button hole on the controller and push the banana plug in. It should fit nice and snug.\n3. Add the small washer and solder ring to the small bolt and attach the nut. You'll now notice that the bolt is too long. Use a pair of pliers to trim it flush with the nut\n4. Do the exact same for the other one", "step_imgs": ["https://cdn.instructables.com/FL4/TM4O/JT2SNS6N/FL4TM4OJT2SNS6N.LARGE.jpg", "https://cdn.instructables.com/F9R/B37X/JT2SNS6S/F9RB37XJT2SNS6S.LARGE.jpg", "https://cdn.instructables.com/FX8/U8XZ/JT2SNS6W/FX8U8XZJT2SNS6W.LARGE.jpg", "https://cdn.instructables.com/F40/QSGD/JT2SNS6Z/F40QSGDJT2SNS6Z.LARGE.jpg", "https://cdn.instructables.com/F9J/7FLO/JT2SNS74/F9J7FLOJT2SNS74.LARGE.jpg", "https://cdn.instructables.com/FPT/1G42/JT2SNS7T/FPT1G42JT2SNS7T.LARGE.jpg", "https://cdn.instructables.com/FUG/C3YF/JT2SNS7Y/FUGC3YFJT2SNS7Y.LARGE.jpg", "https://cdn.instructables.com/FTA/MKWZ/JT2SNS80/FTAMKWZJT2SNS80.LARGE.jpg", "https://cdn.instructables.com/F9O/G9BP/JT2SNS83/F9OG9BPJT2SNS83.LARGE.jpg"], "step_title": "Step 4: Adding the Banana Plugs"}, {"step": 5, "steps_text": "The switch is an on/off switch and the pot is how you change the voltage on the power supply.\nSteps:\n1. Place the switch into one of the button holes, add the washer that comes with the switch and fasten with the nut.\n2. For the pot, you will need to slightly mod the back of the button hole. With an exacto knife, remove the small, plastic button support completly\n3. Place the pot into the hole, add the small washer and fasten with the nut provided.", "step_imgs": ["https://cdn.instructables.com/FAK/9X8J/JT2SNS8W/FAK9X8JJT2SNS8W.LARGE.jpg", "https://cdn.instructables.com/FNB/THHV/JT2SNSAB/FNBTHHVJT2SNSAB.LARGE.jpg", "https://cdn.instructables.com/F88/5NW0/JT2SNSA7/F885NW0JT2SNSA7.LARGE.jpg", "https://cdn.instructables.com/FH3/ASYW/JT2SNSAD/FH3ASYWJT2SNSAD.LARGE.jpg", "https://cdn.instructables.com/FEP/F1CR/JT2SNSAH/FEPF1CRJT2SNSAH.LARGE.jpg"], "step_title": "Step 5: Adding the Switch and Pot"}, {"step": 6, "steps_text": "Steps:\n1. First place the module into the contoller and mark where the micro usb will exit the controller\n2. With a small drill bit, drill out the area for the female usb head on the module\n3. File the hole so it's smooth and remove any excess plastic\n4. If the usb fits, add a little superglue to the back of the module and put it into place.\n5. Leave to dry for 10 minutes", "step_imgs": ["https://cdn.instructables.com/FFE/68TO/JT2SNSAL/FFE68TOJT2SNSAL.LARGE.jpg", "https://cdn.instructables.com/FLH/68NB/JT2SNSAP/FLH68NBJT2SNSAP.LARGE.jpg", "https://cdn.instructables.com/FW0/6RQ6/JT2SNSAQ/FW06RQ6JT2SNSAQ.LARGE.jpg"], "step_title": "Step 6: Adding the Power Module"}, {"step": 7, "steps_text": "I found a good source of phone batteries was to raid the recycle box for phones at work. I managed to pick-up 4 batteries last time I checked and they all worked fine.\nSteps\n1. To be able to connect the battery up to the charging module, you\u2019ll need to solder a couple of wires to the battery terminals. First, add a little solder to each of the small terminals on the battery. You should be able to tell positive and negative as they will be indicated on the battery\n2. Next, tin a couple of small wires and solder them to the battery\n3. You will now be able to connect the battery to the charging module in the next step. Might also be a good idea to check the battery if it a 2nd hand one to make sure it works ok as well.", "step_imgs": ["https://cdn.instructables.com/FGZ/FXDM/JT4TUUZZ/FGZFXDMJT4TUUZZ.LARGE.jpg", "https://cdn.instructables.com/FPJ/FLTH/JT4TUV1T/FPJFLTHJT4TUV1T.LARGE.jpg", "https://cdn.instructables.com/F0L/ULLB/JT2SNSAU/F0LULLBJT2SNSAU.LARGE.jpg", "https://cdn.instructables.com/FTG/3IG8/JT2SNSAY/FTG3IG8JT2SNSAY.LARGE.jpg", "https://cdn.instructables.com/FOY/ZME6/JT2SNSDR/FOYZME6JT2SNSDR.LARGE.jpg"], "step_title": "Step 7: Battery"}, {"step": 8, "steps_text": "It took me a little while to work out how I was going to incorporate the voltage display on thecontroller. Initially I thought I would just stick it on top of the controller but decided in the end to cut a hole into the controller and have the meter coming out of it.\nSteps:\n1. With an exacto knife, carefully mark out the area to remove. I just placed the voltage meter onto the top of the controller and went around with the exacto knife and scored the plastic\n2. Next, go over the scoring again a few times to make the cuts deeper. The plastic is thin so you should be able to make the cuts easily.\n3. To finish off the cuts I used a Stanley knife and pushed against each of the cuts. The heavier blade went through the plastic and I was able to remove the piece by just going around with the Stanley knife.\n4. Use the exacto knife to clean-up the edges of the cut and push into place the voltage meter.\n5. Lastly, add a little superglue and glue into place", "step_imgs": ["https://cdn.instructables.com/F7U/M9BV/JT2SNSB6/F7UM9BVJT2SNSB6.LARGE.jpg", "https://cdn.instructables.com/F7V/PBZY/JT2SNSBA/F7VPBZYJT2SNSBA.LARGE.jpg", "https://cdn.instructables.com/FCH/HBHG/JT2SNSBD/FCHHBHGJT2SNSBD.LARGE.jpg", "https://cdn.instructables.com/FGX/ORG8/JT2SNSBF/FGXORG8JT2SNSBF.LARGE.jpg", "https://cdn.instructables.com/FQJ/JXMF/JT2SNSB3/FQJJXMFJT2SNSB3.LARGE.jpg", "https://cdn.instructables.com/F5V/XGJZ/JT2SNSCA/F5VXGJZJT2SNSCA.LARGE.jpg"], "step_title": "Step 8: Voltage Display and Gluing the Buttons Into Place"}, {"step": 9, "steps_text": "Now you have everything in place, it's time do start wiring. I have included a wire diagram as well which should help you understand how the components are connected\nSteps:\n1. Solder 3 wires to the pot and then to the power supply module\n2. On the out put solder points on the power supply board, solder a wire to each and then solder these to the solder points on the banana plugs\n3. Solder a couple of wires to the input solder points on the power supply board and connect these to the battery solder points on the charging module. Make sure the polarities are correct\n4. Solder a couple of wires to the battery and solder one to the switch and one to the charging module, making sure the polarity is correct.\n5. Add another wire to the switch and connect this to the charging module.\n2. Before you totally close the case, test to make sure the power supply works.\n3. Carefully close the controller and add all of the screws back into place.", "step_imgs": ["https://cdn.instructables.com/F72/OR5V/JT4TM1CM/F72OR5VJT4TM1CM.LARGE.jpg", "https://cdn.instructables.com/FD9/MXLG/JT2SNSCC/FD9MXLGJT2SNSCC.LARGE.jpg", "https://cdn.instructables.com/FS6/TZ40/JT2SNSCE/FS6TZ40JT2SNSCE.LARGE.jpg", "https://cdn.instructables.com/FYS/9KUV/JT2SNSCJ/FYS9KUVJT2SNSCJ.LARGE.jpg", "https://cdn.instructables.com/F6K/1W48/JT2SNSDE/F6K1W48JT2SNSDE.LARGE.jpg", "https://cdn.instructables.com/FP6/1G1J/JT2SNSDG/FP61G1JJT2SNSDG.LARGE.jpg", "https://cdn.instructables.com/F29/J5NU/JT2SNSDT/F29J5NUJT2SNSDT.LARGE.jpg", "https://cdn.instructables.com/FXO/DA6D/JT2SNSDV/FXODA6DJT2SNSDV.LARGE.jpg"], "step_title": "Step 9: Wiring"}, {"step": 10, "steps_text": "If you want to connect power to a breadboard, then this is how you make a banana plug connector. You can also buy different types of connectors on eBay and I have added a couple of links to these\nSteps:\n1. First trim and tin the ends of a piece of red wire and a piece of black wire\n2. Place a male banana plug end onto one of the tinned ends and secure into place.\n3. Grab a couple of jumper wires for your breadboard and cut one end off\n4. Tin the ends and add some heat shrink to each\n5. Solder together the jumper wire and the piece of wire and cover the solder point with the heat shrink\nThat\u2019s it! You are now ready to use your power supply to give your projects some POWER!", "step_imgs": ["https://cdn.instructables.com/FO2/F153/JT4TM2XJ/FO2F153JT4TM2XJ.LARGE.jpg", "https://cdn.instructables.com/FCS/JIP6/JT4TM2Z7/FCSJIP6JT4TM2Z7.LARGE.jpg", "https://cdn.instructables.com/F38/OCSE/JT4TM37S/F38OCSEJT4TM37S.LARGE.jpg", "https://cdn.instructables.com/FLD/G9TS/JT4TM34H/FLDG9TSJT4TM34H.LARGE.jpg", "https://cdn.instructables.com/FYX/EPDP/JT4TM37T/FYXEPDPJT4TM37T.LARGE.jpg", "https://cdn.instructables.com/F6X/1M1I/JT4TM3B6/F6X1M1IJT4TM3B6.LARGE.jpg", "https://cdn.instructables.com/FJ9/GSTO/JT4TM3GC/FJ9GSTOJT4TM3GC.LARGE.jpg", "https://cdn.instructables.com/FHV/CSVB/JT4TM3VZ/FHVCSVBJT4TM3VZ.LARGE.jpg"], "step_title": "Step 10: Making a Banana Plug Connector"}], "channel": ""}, {"category": "", "description": "Arduino microcontrollers are a great addition to model railroading, especially when dealing with automation. Here is a simple and easy way to get started with model railroad automation with Arduino.\nSo, without any further ado, let's get started!", "title": "Simple Automated Model Railway Layout | Arduino Controlled", "url": "https://www.instructables.com/id/Simple-Automated-Model-Railway-Layout-Arduino-Cont/", "section": "technology", "steps": [{"step": 1, "steps_text": "", "step_imgs": [], "step_title": "Step 1: Watch the Video"}, {"step": 2, "steps_text": "Here is the list of all the parts and components required for this project:\nAn Arduino microcontroller\nAn L293N motor driver module\nA 'sensored' track\nA 12-volt DC power source with a current capacity of at least 1A(1000mA)\n6 male to female jumper wires (3 to connect the motor driver's signal inputs to the output pins of the Arduino board and the other 3 to connect the 'sensored' track's terminals to the Arduino board.)\n4 male to male jumper wires(2 to connect the motor driver board to power and the other two to connect the motor drive's outputs to track power.)\nA crosshead screwdriver\nA computer(obviously ; )\nA suitable USB cable to connect the Arduino board to the computer", "step_imgs": ["https://cdn.instructables.com/FBP/0OTT/JT4TP6PA/FBP0OTTJT4TP6PA.LARGE.jpg"], "step_title": "Step 2: Get All the Stuff"}, {"step": 3, "steps_text": "Make sure to go through the program carefully to understand how it works, later it will be fun to tweak it and make your own modifications.", "step_imgs": ["https://cdn.instructables.com/FRH/I5CD/JT4TP6OF/FRHI5CDJT4TP6OF.LARGE.jpg"], "step_title": "Step 3: Program the Arduino Microcontroller"}, {"step": 4, "steps_text": "Make an oval loop of track as shown in the picture.", "step_imgs": ["https://cdn.instructables.com/FTJ/O8JE/JT4TP6PB/FTJO8JEJT4TP6PB.LARGE.jpg"], "step_title": "Step 4: Set Up the Layout"}, {"step": 5, "steps_text": "Remove the jumper connector from the pin marked 'ENB'.\nMake the following connections:\nConnect the 'ENB' pin to pin D10 of the Arduino board.\nConnect the 'IN 3' pin to the pin D8 of the Arduino board.\nConnect the 'IN 4' pin to the pin D9 of the Arduino board.", "step_imgs": ["https://cdn.instructables.com/FPZ/52TY/JT4TP6PC/FPZ52TYJT4TP6PC.LARGE.jpg", "https://cdn.instructables.com/FDT/ZOLQ/JT4TP6PH/FDTZOLQJT4TP6PH.LARGE.jpg"], "step_title": "Step 5: Make Wiring Connections to the Motor Driver"}, {"step": 6, "steps_text": "Connect the output terminal's wires to the power feeder connector.", "step_imgs": ["https://cdn.instructables.com/F2I/X5KH/JT4TP6PN/F2IX5KHJT4TP6PN.LARGE.jpg"], "step_title": "Step 6: Connect Track Power Wires to the Motor Driver"}, {"step": 7, "steps_text": "Make the following wiring connections:\nConnect the VCC pin to +5-volt pin of the Arduino board.\nConnect the GND pin to the GND pin of the Arduino board.\nConnect the OUT pin to the A0 pin of the Arduino board.", "step_imgs": ["https://cdn.instructables.com/F73/FKNY/JT4TP6PP/F73FKNYJT4TP6PP.LARGE.jpg"], "step_title": "Step 7: Connect the 'sensored' Track to the Arduino"}, {"step": 8, "steps_text": "Use a re-railer to make sure that the wheels of the train sit perfectly well on the tracks.", "step_imgs": ["https://cdn.instructables.com/F67/ZV41/JT4TP6PT/F67ZV41JT4TP6PT.LARGE.jpg"], "step_title": "Step 8: Place the Train on the Tracks"}, {"step": 9, "steps_text": "Make sure no wiring connections are loose. Connect the Arduino boards power input to the power supply and turn it on.", "step_imgs": ["https://cdn.instructables.com/FHF/EH88/JT4TP6PW/FHFEH88JT4TP6PW.LARGE.jpg"], "step_title": "Step 9: Connect to Power and Turn It On"}, {"step": 10, "steps_text": "", "step_imgs": [], "step_title": "Step 10: Sit Back and Watch Your Train Running"}], "channel": ""}, {"category": "", "description": "After building some of these:\nhttps://www.instructables.com/id/Matrix-LED-Light/\ni've decided to bring the candle onto another level. While the first one looks good, it does look a little bit too much like the original. Nothing against the first design. It looks cool and modern.\nMy new approach is a little bit warmer and uses different materials. Still quite geometrical.\nIt \"feels\" warmer, just by breaking the light at the edges of the concrete, which makes a passive light.\nSo ... this is my entry to the \"REMIX\"-Contest. Would be happy, if you vote for me.", "title": "Ring of Fire [REMIX]", "url": "https://www.instructables.com/id/Ring-of-Fire-REMIX/", "section": "technology", "steps": [{"step": 1, "steps_text": "Wood, concrete, brassrods and some electronic parts. And wood glaze, if you like.\nA router/trimmer and basic woodworking tools\na 160x160mm piece of wood (about 18mm thick)\n3D-Printer\n3M 8402 silicon Tape (or another idea, like grease or silicon-spray)\nquickcrete, (concrete)\narduino pro micro 16Mhz (8Mhz doesn't work)\nTP4506 LiPo-loader\nAdafruit LED-Matrix (yellow) and PWM Driver\n0.8mm Brassrods\ndouble-sided gluetape\nhotglue gun (helps a lot)\nthin wire\nsmall switch\n18650 flat LiPo (40mm wide fits perfect. 2000mha)\nI've bought all electronics at EXP-Tech. The TP4506 and the pro micro where bought at ali-express.\nBrassrods came from conrad-electronic. All other stuff (except the 3M 8402) where bought at a warehouse.", "step_imgs": ["https://cdn.instructables.com/FJR/5O87/JT4TNBNA/FJR5O87JT4TNBNA.LARGE.jpg"], "step_title": "Step 1: Tools and Material"}, {"step": 2, "steps_text": "This took a lot of tries. How to cast a ring with rods inside and with nothing but PLA in my 3D-Printer.\nThe ring is made of one piece of concrete and the rods are in the concrete. Put in place before casting.\nTo get it in one piece, i had to print several parts which can be brake away after casting. And i had to find a \"thing\" which makes it more easy to seperate the 3D-printed parts from the concrete. Did i mention the rods? Well, those where another problem.\nTo start building the casting-form you'll need to print every part. Some parts have numbers, which equal to the number of prints of each part.\nI'm using Material4Print with 30% infill on an anycubic i3 mega.\nEvery part is separated into one file, so you can position it to your possibilities on your printer.", "step_imgs": ["https://cdn.instructables.com/FOP/UYCI/JT4TMN1A/FOPUYCIJT4TMN1A.LARGE.jpg", "https://cdn.instructables.com/FE2/A7NX/JT4TMN18/FE2A7NXJT4TMN18.LARGE.jpg"], "step_title": "Step 2: The Ring (3D Parts)"}, {"step": 3, "steps_text": "The pictures give you an idea of how to build it.\nYou need a solid base. Some flat piece of wood (\"Siebdruckplatte\" in german).\nTo get a smooth finish i've wrapped all parts with 3M 8402 Tape. It's hard to get and quite expensive. But it works perfectly. And i've pre-punched the holes for the brassrods.\n(My first idea was to use seven rods. But in the end it looks better with just four. And it is more interesting to build.)\nEverything wrapped, try to solve the puzzle. The long helper can be used to get a real straight line in the \"open\" parts. Those parts, which have to hold the rods in place.\nSo put everything in place, screw the parts without rods onto your base, prepare your \"rod-parts\", bring them back to your base ... and screw them on. See the pictures for details.\nAnd keep in mind, that you have to cut the tape later at the pre-pressed parts. Those have to be removed after casting or you won't be able to get the PLA from your concrete-ring. Hard to describe, but you'll see the problem, when you have build it.\nIn the last \"after casting\" picture, you see the piece of PLA and the green tape, which have to be removed.\nBring the cleaned rods into position. Be carefull. Those small rods are quite weak. Position 1, 3, 5 and 7.\nIf you like to use all 7, you can do that, too. But i couldn't get all 7 straight. So missing every second part is a good option.\nBend the end a little bit. The end should not touch the casting-form. And after that, you should cover those rods.", "step_imgs": ["https://cdn.instructables.com/F2U/GR8Q/JT4TMNZR/F2UGR8QJT4TMNZR.LARGE.jpg", "https://cdn.instructables.com/F44/BRA2/JT4TMNZS/F44BRA2JT4TMNZS.LARGE.jpg", "https://cdn.instructables.com/FRE/5BKW/JT4TMOLS/FRE5BKWJT4TMOLS.LARGE.jpg", "https://cdn.instructables.com/F8J/0TYY/JT4TMP09/F8J0TYYJT4TMP09.LARGE.jpg", "https://cdn.instructables.com/FKM/OUHD/JT4TMOY6/FKMOUHDJT4TMOY6.LARGE.jpg", "https://cdn.instructables.com/FKJ/PWD7/JT4TMOZI/FKJPWD7JT4TMOZI.LARGE.jpg", "https://cdn.instructables.com/F73/MTTR/JT4TMOYX/F73MTTRJT4TMOYX.LARGE.jpg"], "step_title": "Step 3: Building the Casting Form"}, {"step": 4, "steps_text": "Quickcrete is on of my favourite things in the last two years. Just mix it quite liquid. Just as liquid as something you would still be able to suck through a big straw.\nYou'll need about 500g of concrete. Well, you don't need that much, but it is very much easier if you have too much concrete. Mix it, stir it and get ready to cast.\nCasting needs some preperation. Have everything in place. Some plastic to smooth the final surface. Towels. Water. Just everything you can think of what you \"might\" need.\nQuickcrete dries quick. Obvious.\nToo much isn't a problem, as long as the concrete is liquid enough. Just use a piece of plastik to smooth the surface.\nLet it dry ...", "step_imgs": ["https://cdn.instructables.com/FPR/TEDI/JT4TMORA/FPRTEDIJT4TMORA.LARGE.jpg", "https://cdn.instructables.com/FYX/NE7E/JT4TMOWP/FYXNE7EJT4TMOWP.LARGE.jpg", "https://cdn.instructables.com/F0F/7UO2/JT4TMPOV/F0F7UO2JT4TMPOV.LARGE.jpg", "https://cdn.instructables.com/FVC/AF9N/JT4TMPOW/FVCAF9NJT4TMPOW.LARGE.jpg"], "step_title": "Step 4: Casting"}, {"step": 5, "steps_text": "How long is long enough? Even it is quickcrete, i let it dry abou 48 hours before i try to demold it.\nThat's just my tip.\nStart by getting rid of the screws and try gently to get the base off. Pull the helpers off and find all concrete drops which could lead into problems, when you try to push the PLA-Parts away from the concrete.\nAt first, you should remove the little \"helpers\" inside, which have hold the brass into it's position.\nAND cut or remove the tape at that 3 positions.\nTo remove the shell, start on the outer side removing the first parts.This is the most exiting part of this instructable.\nBe gently, use \"the force\" ... just don't use too much strength.\nSee the pictures to get a better idea. The inner parts have to be pushed downwards.\nSo now let it dry for another 24 hours. After that, you can destroy the surface a little bit with a file. Just as you like.", "step_imgs": ["https://cdn.instructables.com/FKH/RZ0G/JT4TMQ3R/FKHRZ0GJT4TMQ3R.LARGE.jpg", "https://cdn.instructables.com/F1P/6WD9/JT4TMRUO/F1P6WD9JT4TMRUO.LARGE.jpg", "https://cdn.instructables.com/F0B/1YD9/JT4TMQSX/F0B1YD9JT4TMQSX.LARGE.jpg", "https://cdn.instructables.com/FL9/5W03/JT4TMROP/FL95W03JT4TMROP.LARGE.jpg", "https://cdn.instructables.com/F5G/56S2/JT4TMRML/F5G56S2JT4TMRML.LARGE.jpg", "https://cdn.instructables.com/FYB/CBWX/JT4TMRST/FYBCBWXJT4TMRST.LARGE.jpg", "https://cdn.instructables.com/F27/Z43W/JT4TMRQR/F27Z43WJT4TMRQR.LARGE.jpg"], "step_title": "Step 5: Openening the Mold"}, {"step": 6, "steps_text": "The wood-case is made of three parts. Why three and not one?\nWell ... i'm not able to work on thicker pieces of wood. So i made it in three parts.\nWith a CNC you could probably make it in one part. With nothing but a mittersaw, jigsaw and a small router i didn't find an option. And three parted gives it a little bit extra.\nSo you need a piece of wood in (at least) 160x160x18mm and the attached router-guide (3D-print).\nBring the guide into position and draw the line a little bit away from the guide. This will be the line to cut with the jigsaw.\n-------------\nWell, you could directly use the router to cut the circle-part. But if you use the jigsaw first, the router will just have to trim the rest which will result in a better surface. And you have to make three identical parts. So using less force is allways a good idea.\n------------\nAfter using the jigsaw, glue the guide with a thin double-sided tape on to the wood.\nUse your router ro trim the rest of it.\nRemove the guide and cut the piece off. About 40mm. Mark the position on your mittersaw, becaus all parts should be equal.\nRepeat this step three times to get three equal parts. Don't worry, if the heights are a little bit different. You can use your grinding machine or your mitter saw to correct them. The circle part is important.", "step_imgs": ["https://cdn.instructables.com/FSP/JLY9/JT4TMWPO/FSPJLY9JT4TMWPO.LARGE.jpg", "https://cdn.instructables.com/FB4/1S09/JT4TMX5M/FB41S09JT4TMX5M.LARGE.jpg", "https://cdn.instructables.com/F6O/K58P/JT4TMX4L/F6OK58PJT4TMX4L.LARGE.jpg", "https://cdn.instructables.com/FQI/YGA6/JT4TMX5A/FQIYGA6JT4TMX5A.LARGE.jpg", "https://cdn.instructables.com/FMZ/SNDH/JT4TMX55/FMZSNDHJT4TMX55.LARGE.jpg", "https://cdn.instructables.com/FGD/AM2I/JT4TMX5F/FGDAM2IJT4TMX5F.LARGE.jpg", "https://cdn.instructables.com/F94/9X9F/JT4TMXFM/F949X9FJT4TMXFM.LARGE.jpg", "https://cdn.instructables.com/FJE/Y00P/JT4TMYOK/FJEY00PJT4TMYOK.LARGE.jpg"], "step_title": "Step 6: Wood - Part 1"}, {"step": 7, "steps_text": "Now we will use the router to hollow the case. Which isn't a case, yet.\nBring the inner and the outer part in position and draw a rectangle with 28x120mm.\nMill about 11 mm deep. I do this in three steps. And i allways build a guide before i start to mill.\nThis depends on your skills.\nThe inner part can be cut with a jigsaw or whatever you like to use.\nDimensions are: 11x120 mm. This doesn't have to look perfect. But it helps, when it is a little bit deeper than the other parts.\nThis will give you a little bit more space for the wires, which will soldered to the rods.\n-----------------------------\nSo the 28mm on the front and back part are 28/2. 14mm deep. The inner part is 11mm deep. This gives us 3mm space to guide the wires.", "step_imgs": ["https://cdn.instructables.com/F9E/TPWL/JT4TMYM1/F9ETPWLJT4TMYM1.LARGE.jpg", "https://cdn.instructables.com/FMA/6QXJ/JT4TMYM5/FMA6QXJJT4TMYM5.LARGE.jpg", "https://cdn.instructables.com/FH5/446D/JT4TMYYK/FH5446DJT4TMYYK.LARGE.jpg"], "step_title": "Step 7: Wood - Part 2"}, {"step": 8, "steps_text": "Time to bring them together and cut out some parts.\nWoodglue and some time. Just make sure, the circle-parts fit as perfect as possible.\nAfter drying, you can start to cut or grind it to perfect shape. I'm using my mitter saw to cut off the \"not so straight\" parts. You should end up with something like picture 2. ~140mm wide.\nNow it is time to make a hole for the rods. I'm using a drill and a hand-jigsaw.\nAnd the last part is to cut out the USB-Loader and the switch. This depends on your switch.\nEverything cut you can start to paint it, if you want to. I'm using three layers of black woodglaze.\nLetting every layer dry for at least 24hours and sanding every layer. Mayber not necessary. But that is the way i've learned it.", "step_imgs": ["https://cdn.instructables.com/FHM/4LMX/JT4TMZV6/FHM4LMXJT4TMZV6.LARGE.jpg", "https://cdn.instructables.com/F9S/FBLY/JT4TMZVX/F9SFBLYJT4TMZVX.LARGE.jpg", "https://cdn.instructables.com/FT9/LWEX/JT4TMZV4/FT9LWEXJT4TMZV4.LARGE.jpg", "https://cdn.instructables.com/F0V/X38A/JT4TMZX2/F0VX38AJT4TMZX2.LARGE.jpg", "https://cdn.instructables.com/FMK/0ARP/JT4TMZV7/FMK0ARPJT4TMZV7.LARGE.jpg", "https://cdn.instructables.com/FJ6/BCEX/JT4TMZXN/FJ6BCEXJT4TMZXN.LARGE.jpg", "https://cdn.instructables.com/FX6/XUC3/JT4TMZV8/FX6XUC3JT4TMZV8.LARGE.jpg", "https://cdn.instructables.com/FSW/G622/JT4TMZV9/FSWG622JT4TMZV9.LARGE.jpg"], "step_title": "Step 8: Wood - Part Three"}, {"step": 9, "steps_text": "Next step is to solder the matrix to the rods.\nTo be exact, it's soldering and 1mm thick double-sided tape.\nStart with the PWM-Driver and solder the pins. Add some LED-legs (or similar) to VCC, GND, SDA, SCL.\nGlue double-sided tape on it and bring it with a steady hand a keen eye onto the rods.\nBe carefull. It will look strange, if the display gets out of centre.\n(Btw i've painted the rods with silver-paint.)\nWhen in position, you can start soldering the rods to the pins (the LED-legs). It doesn't really matter, which pin goes to which rod. Just don't solder two rods together. I'm using this method:\nVCC: rod 1\nGND: rod 4\nSDA: rod 2\nSCL: rod 3\nYou should measure it before you solder the LED-Matrix to the PWM-Modul.", "step_imgs": ["https://cdn.instructables.com/FMY/NM3K/JT4TN2EQ/FMYNM3KJT4TN2EQ.LARGE.jpg", "https://cdn.instructables.com/FHP/YOR9/JT4TN2EN/FHPYOR9JT4TN2EN.LARGE.jpg", "https://cdn.instructables.com/FJX/CHF3/JT4TN2EM/FJXCHF3JT4TN2EM.LARGE.jpg", "https://cdn.instructables.com/FA4/5NB0/JT4TN2EP/FA45NB0JT4TN2EP.LARGE.jpg", "https://cdn.instructables.com/FLU/2JEO/JT4TN2FF/FLU2JEOJT4TN2FF.LARGE.jpg", "https://cdn.instructables.com/F95/5QX0/JT4TN4EE/F955QX0JT4TN4EE.LARGE.jpg"], "step_title": "Step 9: The Matrix"}, {"step": 10, "steps_text": "To bring the wood-part and the concrete-part together, i'm using glue.\n\"Pattex Kraftkleber\". I think that every strong glue will work. Clean surface and maybe a little bit sanding before attaching the glue.\nAs allways ... let it dry at least twice the time you think you should.", "step_imgs": ["https://cdn.instructables.com/F6N/DNB4/JT4TN5LY/F6NDNB4JT4TN5LY.LARGE.jpg", "https://cdn.instructables.com/FXI/F8ZR/JT4TNATZ/FXIF8ZRJT4TNATZ.LARGE.jpg", "https://cdn.instructables.com/F1C/W7XS/JT4TN5KY/F1CW7XSJT4TN5KY.LARGE.jpg"], "step_title": "Step 10: Two to One"}, {"step": 11, "steps_text": "At first flash the pro micro. Code is attached. And cut the LEDs off. This will increase the battery time.\nSo now on to the rods. Add a wire with different colour to each rod. This will make it a lot easier.\nTest them. All working? Then put hotglue into the hole.\nThe rest of this is quite selfexplaining. Batterie to the TP4506 and the TP4506 to Switch->RAW and GND at the Arduino.\nWires (rods):\nSDA to Pin2\nSCL to pin 3\nVCC to VCC\nGND to GND\nI've used doublesided Tape to glue the TP to the Batterie and used hotglue, wherever it seemed to be necessary.", "step_imgs": ["https://cdn.instructables.com/F73/9IT5/JT4TN6SR/F739IT5JT4TN6SR.LARGE.jpg", "https://cdn.instructables.com/F1Y/K5EH/JT4TN6RL/F1YK5EHJT4TN6RL.LARGE.jpg", "https://cdn.instructables.com/F0A/H937/JT4TN6TT/F0AH937JT4TN6TT.LARGE.jpg", "https://cdn.instructables.com/FMZ/9U8M/JT4TN6UG/FMZ9U8MJT4TN6UG.LARGE.jpg", "https://cdn.instructables.com/FX7/T5N5/JT4TN6T9/FX7T5N5JT4TN6T9.LARGE.jpg", "https://cdn.instructables.com/FID/KV3G/JT4TN6W6/FIDKV3GJT4TN6W6.LARGE.jpg", "https://cdn.instructables.com/FAR/YKQZ/JT4TN6S7/FARYKQZJT4TN6S7.LARGE.jpg", "https://cdn.instructables.com/FKL/TZ24/JT4TN6S8/FKLTZ24JT4TN6S8.LARGE.jpg", "https://cdn.instructables.com/FII/VJBD/JT4TN6WE/FIIVJBDJT4TN6WE.LARGE.jpg", "https://cdn.instructables.com/FD4/3APE/JT4TN6UD/FD43APEJT4TN6UD.LARGE.jpg", "https://cdn.instructables.com/FRP/96MX/JT4TN6UE/FRP96MXJT4TN6UE.LARGE.jpg", "https://cdn.instructables.com/FP9/CTV6/JT4TN6V5/FP9CTV6JT4TN6V5.LARGE.jpg"], "step_title": "Step 11: Electronics"}, {"step": 12, "steps_text": "The only thing missing is a cover. This is up to you. PVC, Metall, Wood ... just don't use PLA. The battery get's warm while loading and a thin layer of PLA could deform.\nSome feets to get a floating look and that's it.\n---------------------\nBy now i've made four of these. And every one went a little better. Just some small changes made it much easier.\nAll changes are in this instructable. It takes about 6 hours +drying time to build one. So this can take a week.\nAll my electronic tests can be found in the previous instructable:\nhttps://www.instructables.com/id/Matrix-LED-Light/\nThank you for reading. Hoping my english is getting better.\nAnd, if you like, please vote for me :)", "step_imgs": ["https://cdn.instructables.com/FL2/ZCM3/JT4TN96A/FL2ZCM3JT4TN96A.LARGE.jpg", "https://cdn.instructables.com/FRX/UP4E/JT4TN959/FRXUP4EJT4TN959.LARGE.jpg", "https://cdn.instructables.com/FWH/QCHX/JT4TN969/FWHQCHXJT4TN969.LARGE.jpg", "https://cdn.instructables.com/FD1/USQD/JT4TN972/FD1USQDJT4TN972.LARGE.jpg", "https://cdn.instructables.com/FLK/G8JM/JT4TN956/FLKG8JMJT4TN956.LARGE.jpg", "https://cdn.instructables.com/FIS/VDW2/JT4TN971/FISVDW2JT4TN971.LARGE.jpg", "https://cdn.instructables.com/FTP/5PJR/JT4TN976/FTP5PJRJT4TN976.LARGE.jpg", "https://cdn.instructables.com/FG4/KRBP/JT4TN975/FG4KRBPJT4TN975.LARGE.jpg"], "step_title": "Step 12: Final Thoughts"}], "channel": ""}, {"category": "", "description": "In my first Instructable Motion Activated Automatic LED Stair Lights with Arduino I mentioned the use of \"Cooperative Multitasking\". So what is it and why is it helpful?\nThis Instructable attempts to answer the \"what is it\" and \"why is it helpful\" question with a simple example that step by step builds up into a more complex example. The end result will hopefully answer an additional question being \"Cool! How can I do it?\".\nAs a bonus we will end up with a project consisting of some randomly blinking LED's that will be almost as mesmerizing as a good old log fire - maybe even more so if you use enough LED's! Even if you are not interested in cooperative multitasking, surely, mesmerizing, randomly blinking LED's would be worth your while reading to the end!\nThis is quite a long instructable, but really it is several projects in one. Each of the projects builds upon the other. Primarily to illustrate how things might start out simple, but can get complicated very easily. Ultimately, a solution is presented that makes life much simpler. If you are time poor, or feel that things are progressing too slowly, you can skip some of the steps as outlined a bit later.\nIf you just want to get to building the Mega-Blink-Light project, simply read \"the bits list\", \"hooking everything up\" and jump straight to the last step.\nIf you complete the steps in between, you will have the basis of a system that can manage multiple concurrent operations in your own projects.", "title": "Cooperative Multitasking on Arduino - With Pretty Blinky Lights!", "url": "https://www.instructables.com/id/Cooperative-Multitasking-on-Arduino-With-Pretty-Bl/", "section": "technology", "steps": [{"step": 1, "steps_text": "Definitions\nLets start with some definitions:\nMultitasking - the ability to perform two or more tasks simultaneously.\nCooperative - working together for a common purpose.\nFinite State Machine - the technique used by the individual cooperatively multitasking tasks. Read more about it on Wikipedia - Finite State Machine.\nHopefully \"cooperative\" is self explanatory, so let's look a bit closer at Multitasking - what exactly does it mean? How can Arduino work on two or more tasks simultaneously? There is only one CPU, so surely it can only do one thing at a time!?!?!?!?\nThe answer is \"time slicing\". That is, dividing up the available time (or CPU cycles) to perform different tasks.\nA real life multitasking example (the Chef)\nI'm not sure the explanation of time slicing clears much up, so lets consider a real world example. Specifically, a chef cooking a meal. Chances are, chef will be doing lots of things at once. For example, chef might be:\nPre-heating the oven,\nBoiling some water,\nChopping some vegetables,\nSeasoning some steak,,\nMixing some ingredients together for a sauce\nand no doubt more.\nI'm not a good cook, so I'm only guessing. My meals typically consist of boiling water for instant coffee, pouring milk over cereal and/or making toast - almost never at the same time!\nCan the chef do all of those things at the same time?\nThe answer, although some may vehemently disagree, is quite clearly (drum roll please): No!\nChef only has one pair of hands. So unless chef is on octopus or chef is chopping vegetables with just one hand (sounds dangerous) and seasoning steak with another, chef is only able to do one thing at a time. And unless chef has a third hand (perhaps spoon in mouth? Eww!!!) chef certainly isn't mixing the sauce ingredients together at the same time as chef is chopping vegetables with one hand and seasoning steak with the other.\nHowever, we would still say that a chef is multi-tasking. So, what are chefs actually doing?\nGood question, I am glad you asked. Chef is (at this point) cooperatively multitasking multiple \"sub-tasks\" that, together, combine to achieve the larger task of cooking a meal. I expect that the chef might operate more like this:\nTurn on the oven. Once turned on, the oven will pre-heat all by itself. The oven doesn't need chef's undivided attention to ensure it is warming up in an approved manner or not warming at all, nor does it require chef to not do anything else. In short, the oven will pre-heat all by itself. Next, chef might...\nFind a pot and pour some water into it.\nCheck that the oven is indeed on and starting to warm.\nPut the pot on a hot plate and turn it on. Again, the water will heat up all by itself.\nPlace all of the sauce ingredients into a bowl. Put it in a mixer and turn it on. The mixer also will mix all by itself.\nSeason the steak.\nPause seasoning the steak.\nStop the mixer check the consistency of the sauce. It needs more mixing, so turn the mixer back on.\nResume seasoning the steak. This task is now complete. Set the steaks aside.\nStart chopping the vegetables.\nPause chopping the vegetables.\nCheck the oven and note that it is now warm enough. Put steaks in oven. At this point, the steaks will cook, you guessed it, all by themselves.\nStop the mixer. Check the consistency of the sauce. It needs more mixing, so turn the mixer back on.\nResume chopping vegetables.\nPause chopping vegetables. Check Steaks - they need longer. Resume chopping vegetables.\nAnd so on...\nNote that the chef isn't personally doing multiple things at the same time. What chef is doing is dividing up the available time, or time slicing, to progress multiple tasks simultaneously.\nThe above is what multi-tasking is. Also, as I mentioned earlier, the chef cooking a meal example described above is \"cooperative multitasking\". That is, chef will perform a task for a period of time, voluntarily stop doing it in an orderly fashion then work on something else. Maybe chef will come back to a previously started task (e.g. resume chopping, resume seasoning, pause mixer to check consistency etc) or move on to something new. It will all depend upon what needs to be done next to progress the overall job of cooking the meal.\nIn each of the sub-tasks listed above, each one will maintain some sort of \"state\" information that describes exactly where it is in the process. For example, the oven will maintain state information along the lines of \"current temperature\", \"target temperature\", \"on or off\". The mixer will maintain state information of the form \"current speed\" (e.g. off, low, medium or high). Even the vegetables and steak maintain state information. For example, a vegetable is \"washed\" or \"not washed\", \"chopped\" or \"not chopped\" etc. Steak has state information in the form of \"doneness\" (e.g. raw, very rare, rare, medium etc), seasoned or not seasoned, and so on.\nI know it might sound a little bit \"out there\" to describe a steak as having states and therefore treating it as a finite state machine, but it is important to recognise the concept that most, if not everything, can be described as having states. The ability to recognise the states and how things transition from one state to another is important to enable cooperative multi-tasking. So, how does a steak move from one state to another? Within the \"doneness\" domain, there is a one way transition from raw to very rare to rare etc via the application of heat and time.\nPreemptive Multitasking\nAnother form of multitasking is \"preemptive multitasking\". An example of preemptive multitasking is as follows:\nChef is chopping vegetables, while chopping ....\nThe smoke alarm sounds (it seems chef forgot the steaks which are now in the \"too well done\" state).\nChef immediately stops chopping - possibly mid-chop!\nTurns off oven\nExtracts steak from oven\nOpens window\nresets smoke alarm\nChef resumes chopping vegetables\nSimultaneously chef tries to think of a way to explain to the family how \"extra dry and crispy steak\" is actually a good thing...\nIn the above example, chef was not intending to stop chopping vegetables, but an external factor unexpectedly came into play that required chef to stop the current task - urgently! In this case the smoke alarm sounded and this \"interrupt\" immediately caused chef to \"context switch\" to dealing with the smoke alarm. Other external factors might be time-slicing. For example, OH&S rules might say that the maximum chopping time is 5 minutes. After 5 minutes, you must do something else - even if you are not finished chopping vegetables. So after 5 minutes, the \"chopping vegetables\" task will be preempted when it has used up its allotted slice of time (5 minutes) and something else will be done. In a preemptive multitasking system, this switching from one task to another is handled automatically by the operating system. Often, if not always, a running task is not even aware that it was preempted (or resumed).\nPreemptive multitasking is much more complicated to implement. Preemptive events occur pretty much at random. As such, there needs to be support for a \"context switch\". In the case of the vegetables, they do not really know that they've been preempted while being chopped due to the smoke alarm. They are just lying there on the cutting board mid-chop. From the vegetables perspective, time has frozen. At some point the chopping will be resumed.\nWhile cooperative multitasking sounds great, it isn't perfect. It requires that the tasks, well, cooperate. Unlike preemptive multitasking systems, cooperative multitasking systems require that the sub-tasks be coded in such a way as to minimise their use of the CPU and to give up control of the CPU as soon as they can.\nThis means not hogging the CPU for endless calculations (and in the case of Arduino, almost never executing the delay function or do nothing while loops in a cooperative multitasking environment). If the smoke alarm scenario was managed using a cooperative multitasking model, then when the alarm was triggered, chef would simply ignore it (maybe chef has noise cancelling head phones on). Chef's task current task was to chop vegetables; not constantly monitor for every conceivable disaster that might occur - chef has to focus on the task at hand. In cooperative multitasking, chef will continue chopping vegetables until they are all done (or the 5 minute OH&S limit is reached). At that point chef will terminate the chopping vegetables task and determine what to do next. At that point chef might say: \"Oh, the smoke alarm is sounding\", or \"Oh, the pot has been boiling over\" and deal with those disasters.\nObviously in the real world chef wouldn't ignore the alarm until the vegetables are chopped (I hope). This is merely to illustrate the difference between preemptive and cooperative multitasking.\nMulti-threading\nThe above example also mentions another type of multi-tasking. Specifically \"Simultaneously, chef tries to think of a way ...\". This is concurrent multitasking (I think I made that phrase up - but it gives you the idea). In this case, chef is using chef's hands and eyes to manage the task of chopping vegetables. However, chef is using another resource, chef's brain, to perform another task - the \"thinking of an excuse task\" - at the same time as the \"chopping vegetables\" task. Chef can do this because the \"brain resource\" isn't fully utilised by the \"chopping vegetables\" task. Hopefully chef is not using all of chef's \"brain resource\" on the \"think of an excuse task\", otherwise chef may experience another high priority external preemption in the form of \"cut fingers\"!\nIn computing, this \"concurrent multitasking\" is more likely to be referred to as \"multi-threading\" or \"concurrent programming\". This requires multiple resources (i.e. multiple CPU's or multiple cores or multiple computers) to support this. One Arduino does not support concurrent multitasking as it is single CPU. Additionally the Arduino CPU's are typically single core (unlike, say, modern Intel CPUs which are multi-core) and some computers which are multi CPU with each CPU having multiple cores.\nI could go on a lot more, but I think that is enough theory. Let's roll our sleeves up, get the breadboard out, hook up some LED's and start blinking!\nLets start\nBut first, here are some links to Wikipedia where you can read even more theory if that is what \"floats your boat\":\nComputer Multitasking\nCoopertative Multitasking - what this Instructable is about.\nPreemptive Multitasking - We could do this on Arduino - perhaps another Instructable?\nConcurrent Computing - You would need two or more Arduino's working together to do this.\nContext Switching\nFinite State Machines - What sub-tasks in a cooperative multitasking environment must be.", "step_imgs": ["https://cdn.instructables.com/FYG/ZTDW/JT2SN7OD/FYGZTDWJT2SN7OD.LARGE.jpg"], "step_title": "Step 1: Cooperative Multitasking on Arduino"}, {"step": 2, "steps_text": "In this project we don't use many different parts. However, we do use a lot of them. You will need:\nAn Arduino.\nAll my examples will initially be built on Leonardo. You can also use a UNO, or pretty much any other Arduino with as many digital pins as you care to try connecting to LED's.\nLED's - 8 will do.\nThe more the better (the code examples only use 8 LED's)\n470 Ohm resistors (yellow, purple/violet, black, black and one other colour - usually gold).\nYou will need 1 for each LED you connect. So, for 8 LED's, you need 8 470 Ohm resistors.\nOne push button switch SPST - momentary closed.\nOne 10K resistor (brown, black, black, red and one other colour - usually gold).\nMedium to large Breadboard.\nHookup wire.\nIf you want to make the final (Mega Blinky LED Extravaganze) project, you will need:\nAn Arduino Mega\n32 LED's (or more if you are game). A mixture of colours is best.\n32 of 470 Ohm resistors per LED (yellow, purple/violet, black, black and one other colour - usually gold).\nNB: If you have more than 32 LED's, you will need extra 470 ohm resistors. Basically, you need one 470 ohm resistor for each and every LED!\nOne push button switch SPST - momentary closed.\nOne 10K resistor (brown, black, black, red and one other colour - usually gold).\nLarge breadboard\nHookup wire.", "step_imgs": ["https://cdn.instructables.com/F33/Q20W/JT2SN7RP/F33Q20WJT2SN7RP.LARGE.jpg"], "step_title": "Step 2: The Bits List - A.k.a. What You Will Need."}, {"step": 3, "steps_text": "Hook up the components as shown in the diagrams. Unfortunately the breadboard view does not show the LED hookup very well, so I've also included the circuit diagram.\nFear not if you can not follow the diagrams, the connections are pretty straight forward:\nPower Connections\nConnect the 5V pin on Arduino to the two red rails on the breadboard (red wires)\nConnect the GND pin on Arduino to the two black (or blue) rails (Black wires).\nLED Connections\nConnect one end of the eight 470 ohm resistors to the 5V rail (no wire - just plug them in directly)\nConnect the other end of the eight 470 ohm resistors to the Anode (long wire) on each of the LED's.\nConnect the other end of the eight LED's to one of the Digital pins numbered 6 though 13 on the Arduino (Yellow wires).\nPush button Switch Connections\nConnect one pin of the switch to 5V (Red wire)\nConnect the diagonally opposite pin on the switch (refer to the breadboard diagram) to Pin 2 on the Arduino (Blue wire)\nConnect the 10K ohm resistor from the same pin to GND (again refer to the breadboard diagram).\nThat's it. When running the programs below, if the LED's do not light up, try checking their orientation:\nThe Cathode (short lead) connects to one of the Arduino's digital pins numbered 6 through 13.\nThe Anode (long lead) connects to the 470 ohm resistor. The other end of the resistor connects to +5V.\nIf that is not the problem, double check all of the other connections.\nNote about the examples\nI've tried to provide plenty of examples to gradually illustrate the concepts.\nI encourage you to try all of the examples, in sequence. However, if you are short of time, than please try at least these:\nCombined Chase and Blink.\nInterleaved LED Blink.\nMultitasking Chase and Blink.\nObject Oriented Chase and Blink.", "step_imgs": ["https://cdn.instructables.com/FJW/7WVJ/JSUP2IOX/FJW7WVJJSUP2IOX.LARGE.jpg", "https://cdn.instructables.com/FA5/WZRE/JSUP2IOY/FA5WZREJSUP2IOY.LARGE.jpg"], "step_title": "Step 3: Hook Everything Up"}, {"step": 4, "steps_text": "In this simplest of examples, we will see how one task hogs the Arduino's attention to the exclusion of everything else. This is non-cooperative behaviour which is also sometimes referred to as Single Threaded.\nTo see this uncooperative behaviour:\nLoad the program below into your Arduino.\nPush the button. What does the LED do? It should eventually freeze in the off state when the button is pushed.\nRelease the button. The LED should continue its rather monotonous blinking.\nPress the button while the LED is lit, then release it before 2 seconds passes (i.e. the delay time when it is turned off). What happens?\nNothing! it just keeps blinking (This will be better illustrated in the next example).\nWhy? Because the Blink task is hogging the CPU for a full 4 seconds. This prevents the Button press task to see that the button was pressed.\nWhat we are seeing here is an example of a task occupying the Arduino's CPU to the exclusivity of doing anything else. Specifically, when you press the button and this fact is eventually detected by the Arduino's program (sketch), all other processing stops until such time as the button is released. This is not cooperative as each of the tasks (Blink and check button press) hog the CPU, without doing anything useful, until they have completed their individual operation.\nSure, we could change the algorithm in the checkButton function so that it does not wait until the button is released. We could replace the delay in the blink function with a loop and continuously poll the button, but that is not the point of this example. We will modify their behaviours, but not their function, when we start multitasking, without the need to add special polling code for looking for other activity throughout the program.\nThis way of programming is akin to the chef not being able to respond to the smoke alarm in the introduction. Programming the Arduino to continuously poll unrelated events is akin to asking the chef to continuously check for all possible disasters while chef is doing every other activity. This could make the programming very complex because if there were N activities and M possible \"interrupts\", then the complexity of the code will be N x M. That is in each of the N activities, you will need to check for all possible M \"interrupts\" that might occur. Indeed, this style of programming is worse than the example we presented above. If we translated this example to the chef, it would be akin to the chef turning on the oven and sitting in front of it doing nothing else but waiting until the oven reached the target temperature. Only at that point in time, does chef start the next task - maybe filling the pot of water and sitting in front of it watching and waiting for it boil.\nAs we progress through the examples, hopefully you will come to realise that things can start to get complicated very quickly if we start changing basic operations and try to intermingle all of the function among each another. The fourth example - \"Interleaved LED Blink\" attempts to explicitly draw this complexity out.\nFollowing is the code for example 1 - blink the LED\n/******************************************************************************\n * Cooperative Multitasking\n *   01 - Blink LED\n * \n * This is the first in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) starts with the most basic non-cooperative multitasking example.\n * There are two subtasks:\n * - A \"blink LED\" task that blinks the LED. It will hold the CPU for the entire duration of a single\n *   LED blink operation.\n * -  A \"check for button press\" task. It will hold the CPU for as long as you hold the button down.\n * \n * When running this program we will note that:\n * a) The messages relating to the LED Blinking will continue to be displayed - even if the button is pressed\n *    until such time as the blink operation completes.\n * b) The messages relating to the LED Blinking and the blinking itself will cease being displayed if the\n *    button is pressed (once the \"check button press\" task gets a hold of the CPU).\n * \n * In short, neither routine is sharing the CPU (blinking stops during button press), even though the\n * \"check button press\" task isn't actually doing anything except waiting for the button to be released.\n * Similarly, the \"Blink LED\" task isn't doing anything useful once it turns the LED off or on. Indeed it\n * justs wastes CPU cycles courtesy of the \"delay\" function calls.\n * \n * In this simplistic example, we could code it differently to avoid much of the \"system hanging\" symptoms,\n * but that is not the purpose this example. The purposes of this example is to show how easily it is to\n * code a routine that is \"blocking\" other tasks from doing their thing.\n * \n * By the time we get to example 5, we will address this. Examples 2 and 3 build upon this example, but\n * still in a non-cooperative multi-tasking way.\n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// define the LED PIN for blinking\n#define LED_PIN       6\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  Serial.println(\"Blinker will be on pin: \");\n  Serial.println(LED_PIN);\n  pinMode(LED_PIN, OUTPUT);\n  digitalWrite(LED_PIN, HIGH);     // Turn the LED off.\n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed).\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n    Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\n/**********************\n * Blink LED\n * \n * Blink the LED a single time.\n * \n */\nvoid blinkLed() {\n  Serial.println(\"LED On\");\n  digitalWrite(LED_PIN, LOW);\n  delay(2000);\n  Serial.println(\"LED Off\");\n  digitalWrite(LED_PIN, HIGH);\n  delay(2000);\n}\n/**********************\n * Loop\n * \n * Continuously call the active routine (chase of blink LED).\n * Upon completion of the active routine, check to see if the button has been pressed.\n * If it has, print a message.\n */\nvoid loop() {\n  // Blink our LED for 2 seconds on, 2 seconds off.\n  blinkLed();\n  if(checkButtonPressed()) {\n    Serial.println(\"Button was pressed (now it is released).\");\n  }\n}", "step_imgs": [], "step_title": "Step 4: Blink an LED"}, {"step": 5, "steps_text": "In this step, we will use a slightly more complicated example. The things to observe are similar as the Blink example, but we shall see more clearly how the pressing of the button is ignored until such time as the sequence completes.\nUpload the program (sketch) below and the LED's should light up one at a time giving a \"chaser\" type of effect.\nObserve the chaser pattern and push the button.\nWhat happens? Nothing - until the sequence reaches the end at which time the chaser is frozen. The chase will remain frozen until such time as you release the button.\nRelease the button.\nWhat happens? The chase resumes.\nPress the button while the chaser is in motion and release it before the chaser completes its cycle.\nWhat happens? Nothing! the chaser continues as though nothing has happened. This is because the \"check button press\" task never sees that the button is pressed.\nRepeat the above, while monitoring the debug messages to get a different view on what is going on. Specifically, look at what happens at the \"Check button press\" message.\nHere is the code for the Chaser:\n/******************************************************************************\n * Cooperative Multitasking\n *   02 - LED Chasser\n * \n * This is the second in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) builds upon the blink programs by combining converting it into a chaser.\n * There are two subtasks:\n * - A \"chase LED\" task that causes each LED to light up one after the other. It will hold the CPU for \n *   the entire duration of a single chase operation. That is, individually light up the led's in one direction\n *   then the other.\n * -  A \"check for button press\" task. It will hold the CPU for as long as you hold the button down.\n * \n * When running this program we will note that:\n * a) The messages relating to the Chase operation will continue to be displayed - even if the button is pressed\n *    until such time as the chase operation completes.\n * b) The messages relating to the LED Chase and the chase itself will cease being displayed if the\n *    button is pressed (once the \"check button press\" task gets a hold of the CPU).\n * \n * In short, neither routine is sharing the CPU (chase stops during button press), even though the\n * \"check button press\" task isn't actually doing anything except waiting for the button to be released.\n * Similarly, the \"Chase LED\" task isn't doing anything useful once it turns the LED off or on. Indeed it\n * justs wastes CPU cycles courtesy of the \"delay\" function calls.\n * \n * In this simplistic example, we could code it differently to avoid much of the \"system hanging\" symptoms,\n * but that is not the purpose this example. The purposes of this example is to show how easily it is to\n * code a routine that is \"blocking\" other tasks from doing their thing.\n * \n * By the time we get to example 5, we will address this. Examples 2 and 3 build upon this example, but\n * still in a non-cooperative multi-tasking way.\n * \n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  // Initialise the LED Pins for output and set them to High (turn the LED's off).\n  Serial.print(\"Initialising tracer pin: \");\n  for (int i = 0; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    pinMode(ledPins[i], OUTPUT);\n    digitalWrite(ledPins[i], HIGH);     // Turn the LED off.\n    if (i > 0) {\n      Serial.print(\", \");\n    }\n      Serial.print(ledPins[i]);\n  }\n  Serial.println();\n  \n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed)\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    \n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n    Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\n/**********************\n * Tracer\n * \n * Cause the LED's to chase one another along the list of pins defined in \"ledPins\".\n * The chase will go from \"left to right\" as defined by the order of the pins in \"ledPins\". Then\n * \"right to left\".\n * \n * The chase will be executed one time.\n */\nvoid tracer() {\n  Serial.println(\"Tracer - up\");\n  for (int i = 1; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    digitalWrite(ledPins[i - 1], HIGH);   // Off\n    digitalWrite(ledPins[i], LOW);        // On\n//    Serial.print(ledPins[i]);\n//    Serial.println(\" On\");\n    delay(250);\n  }\n  \n  Serial.println(\"Tracer - down\");\n  for (int i = sizeof (ledPins) / sizeof(ledPins[0]) - 2; i >= 0; i--) {\n    digitalWrite(ledPins[i + 1], HIGH);   // Off\n    digitalWrite(ledPins[i], LOW);        // On\n//    Serial.print(ledPins[i]);\n//    Serial.println(\" On\");\n    delay(250);\n  }\n}\n/**********************\n * Loop\n * \n * Continuously call the active routine (chase of blink LED).\n * Upon completion of the active routine, check to see if the button has been pressed.\n * If it has, switch modes.\n */\nvoid loop() {\n  tracer();\n  if (checkButtonPressed()) {\n    Serial.println(\"Button was pressed (now it is released).\");\n  }\n}", "step_imgs": [], "step_title": "Step 5: LED Chaser"}, {"step": 6, "steps_text": "In this third example, I've combined the chase and the blink. The enhancement is that the button press will switch modes between chasing and blinking. We should see similar behaviour as before. Specifically:\nPressing the button and releasing it before a cycle completes results in no change in behavior.\nPressing and holding the button until a cycle completes will result in the LED freezing in the final state of its sequence until such time as you release the button.\nWhen you release the button, it will switch to the other mode.\nFollowing is the code for the combined Chase and Blink:\n/******************************************************************************\n * Cooperative Multitasking\n *   03 - Blink and Trace\n * \n * This is the third in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) builds upon the blink and trace programs by combining them into one.\n * Additionally the button's function has been altered to do something useful.\n * The button will cause a switch between the two modes. That is, if the program is blinking an LED,\n * a button press will switch to chase mode.\n * \n * The desired outcome of this program is to verify that the LED's are working and illustrate the\n * effect of the sequential processing when multi-tasking is not enabled.\n * Specifically: \n * - Button presses are only detected when the program polls the button.\n *   Otherwise button presses are simply ignored.\n * - If the button is pressed and detected by the Arduino, all other activity will cease\n *   i.e. the LED's will freeze.\n *   \n * Of interest, but outside the scope of this activity, we could still achieve the desired result\n * of allowing the LED's to continue blinking and detect the button press without two much complicating code.\n * This would require the use of interrupts and toggling the mode of operation in the Interrupt \n * Service Routine. If I get the time do a preemptive multi-tasking instructable, we will cover this\n * capability there.\n * \n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// define the LED PIN for blinking\n#define LED_PIN       ledPins[0]\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\n// Start off in the tracer mode (because it's slightly cooler than just blinking).\nboolean tracerMode = true;\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  // Initialise the LED Pins for output and set them to High (turn the LED's off).\n  Serial.print(\"Initialising tracer pin: \");\n  for (int i = 0; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    pinMode(ledPins[i], OUTPUT);\n    digitalWrite(ledPins[i], HIGH);     // Turn the LED off.\n    if (i > 0) {\n      Serial.print(\", \");\n    }\n      Serial.print(ledPins[i]);\n  }\n  Serial.println();\n  \n  Serial.println(\"Blinker will be on pin: \");\n  Serial.println(LED_PIN);\n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed)\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    \n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n    Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\n/**********************\n * Blink LED\n * \n * Blink the LED a single time.\n * \n */\nvoid blinkLed() {\n  Serial.println(\"LED On\");\n  digitalWrite(LED_PIN, LOW);\n  delay(2000);\n  Serial.println(\"LED Off\");\n  digitalWrite(LED_PIN, HIGH);\n  delay(2000);\n}\n/**********************\n * Tracer\n * \n * Cause the LED's to chase one another along the list of pins defined in \"ledPins\".\n * The chase will go from \"left to right\" as defined by the order of the pins in \"ledPins\". Then\n * \"right to left\".\n * \n * The chase will be executed one time.\n */\nvoid tracer() {\n  Serial.println(\"Tracer - up\");\n  for (int i = 1; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    digitalWrite(ledPins[i - 1], HIGH);   // Off\n    digitalWrite(ledPins[i], LOW);        // On\n//    Serial.print(ledPins[i]);\n//    Serial.println(\" On\");\n    delay(250);\n  }\n  \n  Serial.println(\"Tracer - down\");\n  for (int i = sizeof (ledPins) / sizeof(ledPins[0]) - 2; i >= 0; i--) {\n    digitalWrite(ledPins[i + 1], HIGH);   // Off\n    digitalWrite(ledPins[i], LOW);        // On\n//    Serial.print(ledPins[i]);\n//    Serial.println(\" On\");\n    delay(250);\n  }\n}\n/**********************\n * Loop\n * \n * Continuously call the active routine (chase of blink LED).\n * Upon completion of the active routine, check to see if the button has been pressed.\n * If it has, switch modes.\n */\nvoid loop() {\n  // Blink our LED for 2 seconds on, 2 seconds off.\n  if (tracerMode) {\n    tracer();\n  } else {\n    blinkLed();\n  }\n  if (checkButtonPressed()) {\n    tracerMode = ! tracerMode;\n    Serial.print(\"Switching modes: tracermode = \");\n    Serial.println(tracerMode);\n  }\n}", "step_imgs": [], "step_title": "Step 6: Combined Chase and Blink"}, {"step": 7, "steps_text": "This example switches gears a bit. In this example, we will look at the problem of blinking multiple LED's at different rates.\nAs long as the duty cycles (blink rates) are the same (e.g. 2 seconds on and 2 seconds off) it is relatively easy to blink multiple LED's seemingly concurrently. But only if the only difference is the point in time that they started (the duration of a blink must be the same). For example consider the following sequence (I will give the LED's names - e.g. A, B etc to make it easier to follow):\nwe turn LED A on (we want it to stay on for 2 seconds then turn off for two seconds).\none half of a second later we want LED B to turn on (this will also be on for 2 seconds and off for 2 seconds).\none half of a second later we want LED C to turn on (also 2 seconds on and 2 seconds off).\nSo far 1 second has elapsed, so we wait for 1 second and turn LED A off (it will have been on for two seconds).\nWait for half a second and turn LED B off.\nWait for half a second and turn LED C off.\nFinally wait for 1 second (because the process of turning LED B and C off took 1 second and we must leave LED A for a whole 'nother second).\nrepeat.\nHowever, even with this simple example, if we change the duty cycle (time on -vs- time off) or the delay between \"On\" and \"Off\" events, we need to recalculate and reprogram the entire sequence. Consider changing it so that instead of a half second delay between subsequent LED's turning on or off to 3/4 of a second. The sequence will become:\nturn LED A on.\n750 ms later turn on LED B.\n750 ms later turn on LED C.\nSo far 1.5 seconds has elapsed, so we wait for 0.5 seconds (500ms) to turn LED A off (it will now have been on for two seconds).\n750 ms later turn LED B off.\n750 ms later turn LED C off.\nFinally wait for 0.5 second and repeat.\nIf we change the duty cycle then the calculation becomes slightly more complicated. If we change the length of the cycles so that each LED has a different cycle length (e.g. A has a cycle length of 5 seconds, B has 3 seconds and C has 1.5 seconds), then the order that LED's are turned on and off will change from one sequence to the next. This will make it very complicated to program using a non-multitasking approach. Have a think about what the code for blinking multiple LED's with different blink durations using delays, bearing in mind that the LED's must be turned on and on off in different orders to each other.\nFollowing is the code for blinking LED's with a fixed blink duration (e.g. 2 seconds on and 2 seconds off):\n/******************************************************************************\n * Cooperative Multitasking\n *   04 - Interleaved LED Blinking\n * \n * This is the fourth in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) illustrates the complexity of managing multiple independent\n * tasks (blinking of LED's).\n * \n * When *modifying* this program note that:\n * a) a change to the cycle of one LED, requires recalculating aspects of the neighbouring LED activity.\n * b) if not impossible, it is very difficult to manage the on/off sequence if the LED's blink at different\n *    rates and their cycles differ in duration with this single threaded approach.\n * \n * In example 5, we will enable multitasking to overcome the above problems. Hopefully, you will agree that\n * the solution is relatively simple - you may have even done something along similar lines. In example 5,\n * we will blink the LED's at randomly determined intervals.\n * \n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  // Initialise the LED Pins for output and set them to High (turn the LED's off).\n  Serial.print(\"Initialising tracer pin: \");\n  for (int i = 0; i < sizeof (ledPins) / sizeof(ledPins[0]); i++) {\n    pinMode(ledPins[i], OUTPUT);\n    digitalWrite(ledPins[i], HIGH);     // Turn the LED off.\n    if (i > 0) {\n      Serial.print(\", \");\n    }\n      Serial.print(ledPins[i]);\n  }\n  Serial.println();\n  \n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed)\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    \n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n    Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\n#define LED_A   ledPins[0]\n#define LED_B   ledPins[1]\n#define LED_C   ledPins[2]\n/**********************\n * LED Cycle Z\n * \n * Blink the LED's so that they are on for 2 seconds and off for 2 seconds.\n * LED A (ledPins[0]) comes on first.\n * LED B (ledPins[1]) comes on 500ms after A.\n * LED C (ledPins[2]) comes on 500ms after B.\n * After another 1 second:\n * LED A turns off.\n * 500ms later LED B turns off.\n * 500ms later LED C turns off.\n * After another 1 second, the sequence is complete, so control is returned.\n */\nvoid cycleA() {\n  Serial.println(\"Cycle A\");\n  digitalWrite(LED_A, HIGH);\n  delay (500);\n  digitalWrite(LED_B, HIGH);\n  delay (500);\n  digitalWrite(LED_C, HIGH);\n  delay (1000);\n  \n  digitalWrite(LED_A, LOW);\n  delay (500);\n  digitalWrite(LED_B, LOW);\n  delay (500);\n  digitalWrite(LED_C, LOW);\n  delay (1000);\n}\nvoid cycleB() {\n  Serial.println(\"Cycle B\");\n  digitalWrite(LED_A, HIGH);\n  delay (750);\n  digitalWrite(LED_B, HIGH);\n  delay (750);\n  digitalWrite(LED_C, HIGH);\n  delay (500);\n  \n  digitalWrite(LED_A, LOW);\n  delay (750);\n  digitalWrite(LED_B, LOW);\n  delay (750);\n  digitalWrite(LED_C, LOW);\n  delay (500);\n}\nboolean modeA = true;\n/**********************\n * Loop\n * \n * Continuously call the active routine (chase of blink LED).\n * Upon completion of the active routine, check to see if the button has been pressed.\n * If it has, switch modes.\n */\nvoid loop() {\n  if (modeA) {\n    cycleA();\n  } else {\n    cycleB();\n  }\n  if (checkButtonPressed()) {\n    Serial.println(\"Button was pressed (now it is released).\");\n    modeA = ! modeA;\n  }\n}", "step_imgs": [], "step_title": "Step 7: Interleaved LED Blink"}, {"step": 8, "steps_text": "Finally! Lets look at a multitasking version that starts addressing the problems.\nThis version will combine all three of the themes that were introduced in the previous examples:\nPush button will be actioned when you release the button.\nWhile holding the button down, the other activity won't be affected - no matter how long or when you press it.\nThe Blink LED will be expanded to blink all 8 LED's at randomly generated:\nDuration (somewhere between 0.5 and 2 seconds)\nDuty cycle (somewhere between 80:20 and 20:80)\nIndependently\nThe push button will switch between chasing and blinking.\nWhen switching to blinking the LED blink pattern will be randomly regenerated.\nHere is the code.\n/******************************************************************************\n * Cooperative Multitasking\n *   05 - Multitasking trace and blink\n * \n * This is the fifth in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * \n * This program (sketch) shows how to multitask a few different tasks using \"cooperative\n * multitasking\". The tasks that are being multitasked include:\n * - Monitoring a switch / button press\n * - Executing an LED trace pattern\n * - Randomly blinking multiple LEDs.\n *   The blink task is actually 1 task per LED being blinked. So for 8 LED's, it\n *   is 8 sub tasks.\n * \n * The big differences between the previous non-multitasking examples and this one include:\n * - use of delay () and long running loops (e.g. while (digitalRead(BUTTON_PIN) == HIGH);) are\n *   removed.\n * - The tasks track what they are doing in what is known as it's context and just let the hardware\n *   get on with doing what it does all by itself.\n *   For example, once an LED is turned ON (or OFF), it will remain on (or off) all by itself.\n *   While the LED is remaining on (or off) all by itself, the tasks' code simply returns (exits). \n *   This allows the Arduino's CPU to go on and do something else (e.g. turn a different LED on or off).\n *   The task's context consists of whatever information is needed to track what we have done so far and\n *   work out what to do next.\n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\n#define LED_COUNT     (sizeof (ledPins) / sizeof(ledPins[0]))\n// Context information for sub-tasks\nunsigned long timePrev = 0;\n#define BLINK_MODE      0\n#define CHASER_MODE     1\nboolean mode = BLINK_MODE;    // The current mode of operation. By using an ID to define the\n                              // mode, we can have any number of display modes.\n// Chaser context.\n              // Number of milliseconds between chaser actions.\n#define CHASER_DELAY  200\nunsigned long chaserNextEventTime;\nunsigned long chaserTimerCnt;\nint chaserIndex = 0;\nboolean chaserIndexGoingUp = true;\n// Blink context.\ntypedef struct {\n  unsigned long timerCnt;     // Number of milliseconds that have passed since the last activity.\n  unsigned long nextEventTime;  // Number of millisends that must pass until the next activity.\n  boolean ledOn;              // tracks whether the LED is currently on or not.\n  int ledPin;                 // the Pin to which the LED is connected.\n  unsigned long onTime;       // number of milliseconds that this LED should remain on.\n  unsigned long offTime;      // number of milliseconds that the LED should remain off.\n} BlinkContext;\n// Declare 1 blink context for each LED being controlled.\n// This is used by the blink subtasks to determine what to do next and when.\nBlinkContext blinkCtx[LED_COUNT];\n// Button context.\nboolean isButtonPressed = false;\nint prevButtonState = LOW;\nunsigned long buttonNextEventTime = 10;\nunsigned long buttonTimerCnt = 0;\nunsigned long debounceCnt = 0;\nvoid printBlinkContext(BlinkContext *ctx) {\n  Serial.print(\"Blink Context: Next Evt Time: \");\n  Serial.print(ctx->nextEventTime);\n  Serial.print(\", cur tim: \");\n  Serial.print(ctx->timerCnt);\n  Serial.print(\", led on: \" );\n  Serial.print(ctx->ledOn);\n  Serial.print(\", on time: \");\n  Serial.print(ctx->onTime);\n  Serial.print(\", off time: \");\n  Serial.print(ctx->offTime);\n  Serial.print(\", LED Pin: \" );\n  Serial.println(ctx->ledPin);\n}\nvoid randomiseBlink(BlinkContext *ctx) {\n  ctx->onTime = 500 + random(1500);         // On time is a random number between 500 and 2000 ms.\n  ctx->offTime = 500 + random(1500);        // Off time is a random number between 500 and 2000 ms.\n  ctx->nextEventTime = ctx->offTime;       // Specify the next action time.\n}\nvoid setup() {\n  Serial.begin (9600);\n  while (!Serial)\n  ;\n  // Initialise the LED Pins for output and set them to High (turn the LED's off).\n  Serial.print(\"Initialising LED pin: \");\n  for (int i = 0; i < LED_COUNT; i++) {\n    pinMode(ledPins[i], OUTPUT);\n    digitalWrite(ledPins[i], HIGH);       // Turn the LED off.\n    blinkCtx[i].ledOn = false;            // track that the LED is off.\n    blinkCtx[i].ledPin = ledPins[i];      // track the pin that this task's LED is attached to.\n    blinkCtx[i].timerCnt = 0;             // We are at the beginning of time.\n    if (i > 0) {\n      Serial.print(\", \");\n    }\n      Serial.print(ledPins[i]);\n  }\n  Serial.println();\n  for (int i = 0; i < LED_COUNT; i++) {\n    randomiseBlink(&blinkCtx[i]);\n    printBlinkContext(&blinkCtx[i]);\n  }\n  \n  // Set the push button's pin as an input.\n  Serial.print(\"Setting input for push button on pin: \");\n  Serial.println(BUTTON_PIN);\n  pinMode(BUTTON_PIN, INPUT);\n  \n  Serial.println(\"Ready\");\n  timePrev = millis();              // Initialise the \"previous time\" value to the current time.\n}\nvoid turnAllLed(int state) {\n  for (int i = 0; i < LED_COUNT; i++) {\n    digitalWrite(ledPins[i], HIGH);       // Turn off the LED.\n  }\n}\nunsigned long blinkLEDTask(BlinkContext *ctx) {\n  unsigned long nextEventTime;\n  // Are we in blink mode?\n  if (mode != BLINK_MODE) {\n    // If we are not in the blink mode, then there is nothing to do here.\n    return 10000000;        // return a high value to effectively prevent further calls\n                            // to this task. Note that the randomise routine will reset\n                            // this to a proper value when we switch modes.\n  }\n  // Check our current state.\n  if (ctx->ledOn) {      // Is the LED currently on?\n      Serial.print(\"Turn ON  - \"); printBlinkContext(ctx);\n      digitalWrite(ctx->ledPin, HIGH);   // Yes, so turn it off\n    nextEventTime = ctx->offTime;\n  } else {\n      Serial.print(\"Turn OFF - \"); printBlinkContext(ctx);\n      digitalWrite(ctx->ledPin, LOW);   // Yes, so turn it off\n    nextEventTime = ctx->onTime;\n  }\n  ctx->ledOn = !ctx->ledOn;\n  return nextEventTime;\n}\nunsigned long chaserTask() {\n  if (mode != CHASER_MODE) {\n    return 10000000;      // Return a high value to effectively prevent further calls to\n                          // this task. The mode switch (handleButtonPress) will reset\n                          // the next time value to a sensible value.\n  }\n  if (chaserIndexGoingUp) {\n    digitalWrite(ledPins[chaserIndex], HIGH);   // Turn the previous LED OFF.\n    chaserIndex += 1;                           // Point to the next higher LED.\n    digitalWrite(ledPins[chaserIndex], LOW);    // Turn the LED ON.\n                                                // Go up as long as the index is < the\n                                                // highest index in the ledPins array.\n    chaserIndexGoingUp = (chaserIndex < LED_COUNT - 1);\n  } else {\n    digitalWrite(ledPins[chaserIndex], HIGH);   // Turn the previous LED OFF.\n    chaserIndex -= 1;                           // Point to the next lower LED.\n    digitalWrite(ledPins[chaserIndex], LOW);    // Turn the LED ON.\n    chaserIndexGoingUp = (chaserIndex <= 0);    // When we reach zero, switch to going up. \n  }\n  \n  return CHASER_DELAY;\n}\n/**********************\n * Check Button Pressed.\n * Checks to see if the button is pressed.\n * If it is, return true.\n * \n * The function will first check to see if the button is pressed, then wait for a bit to check\n * if the button is still pressed. If it is, then the button is \"debounced\" and this function\n * returns true (Button pressed).\n * \n * Otherwise this function returns false (Button not pressed)\n * \n * Return: true if button pressed, false otherwise.\n * \n */\nboolean checkButtonPressed() {\n  Serial.println(\"Check button press\");\n        // The complexity of this code is to \"debounce\" the button press.\n        // Has the button been pressed.\n  if (digitalRead(BUTTON_PIN) == HIGH) {\n    // Check for a short period of time, that the button remains pressed.\n    // In this case 50 x 1 ms checks.\n    const int numChecks = 50;\n    int i = 0;\n    while (digitalRead(BUTTON_PIN) == HIGH && i < numChecks) {\n      delay(1);\n      i++;\n    }\n    // Did we exit the loop before the required time (i.e. was the button released / still being debounced)?\n    if (i < numChecks) {\n      return false;       // Return \"Button not pressed\"\n    }\n    \n    // At this point, we confirm that we have a button press.\n    // Wait for the button to be released. During this time, whatever else was happening\n    // on the Arduino (e.g. blinking an LED) will be suspended.\n      Serial.println(\"Button pressed, waiting for release\");\n    while (digitalRead(BUTTON_PIN) == HIGH) {\n      delay(10);\n    }\n    return true;          // Return \"Button pressed\"\n  }\n  return false;           // Return \"Button not pressed\"\n}\nunsigned long checkButtonTask() {\n  boolean currButtonState = digitalRead(BUTTON_PIN);\n  isButtonPressed = false;        // Assume button is not pressed until determined otherwise\n  if (prevButtonState == LOW) {\n    if (currButtonState == HIGH) { // prev = LOW and curr = LOW\n                                  // prev = LOW and curr = HIGH\n                                  // state is changing.\n      debounceCnt = 0;            // debounce the button.\n        Serial.println(\"Button press detected\");\n    }\n  } else {                        // the previous state of the button was HIGH (pressed)\n    if (currButtonState == HIGH) {\n      debounceCnt += 1;           // count a debounce.\n    } else {                      // prev state = HIGH, curr = LOW - button released.\n                                  // if we have passed the debounce threshold, then\n                                  // the is button pressed will be set to true.\n      isButtonPressed = (debounceCnt > 10);\n        Serial.print(\"Button released, debounceCnt: \");\n        Serial.println(debounceCnt);\n      debounceCnt = 0;\n    }\n  }\n        // Check the button more frequently if it is pressed.\n  prevButtonState = currButtonState;\n  return currButtonState == HIGH ? 1 : 10;\n}\nboolean wasButtonPressedAndReset() {\n  boolean result = isButtonPressed;\n  isButtonPressed = false;\n  return result;\n}\nvoid handleButtonPress() {\n  switch (mode) {\n    case BLINK_MODE:\n        Serial.println(\"Switching to chase mode\");\n      turnAllLed(HIGH);\n      mode = CHASER_MODE;\n      chaserIndex = 0;\n      chaserTimerCnt = 0;\n      chaserNextEventTime = CHASER_DELAY;\n      break;\n    case CHASER_MODE:\n        Serial.println(\"Switching to blink mode. Contexts:\");\n      for(int i = 0; i < LED_COUNT; i++) {\n        randomiseBlink(&blinkCtx[i]);\n        printBlinkContext(&blinkCtx[i]);\n        turnAllLed(HIGH);\n      }\n      mode = BLINK_MODE;\n      break;\n    default:\n      mode = BLINK_MODE;\n      break;\n  }\n}\n/**********************\n * Loop\n * \n */\nvoid loop() {\n  unsigned long timeNow = millis();\n  if (timeNow != timePrev) {\n    unsigned long timeDelta = timeNow - timePrev;\n    timePrev = timeNow;\n    // Execute the blink sub tasks.\n    for (int i = 0; i < LED_COUNT; i++) {\n      BlinkContext *ctx = &blinkCtx[i];\n      ctx->timerCnt += timeDelta;\n      \n      if (ctx->timerCnt >= ctx->nextEventTime) {\n        ctx->nextEventTime = blinkLEDTask(ctx);\n        ctx->timerCnt = 0;\n      }\n    }\n    \n    // Execute the chaser sub task.\n    chaserTimerCnt += timeDelta;\n    if (chaserTimerCnt >= chaserNextEventTime) {\n      chaserNextEventTime = chaserTask();\n      chaserTimerCnt = 0;\n    }\n    // Execute the button subtask.\n    buttonTimerCnt += timeDelta;\n    if (buttonTimerCnt >= buttonNextEventTime) {\n      buttonNextEventTime = checkButtonTask();\n      buttonTimerCnt = 0;\n      if (wasButtonPressedAndReset()) {\n        handleButtonPress();\n      }\n    }\n  }\n}", "step_imgs": [], "step_title": "Step 8: Multitasking Chase and Blink"}, {"step": 9, "steps_text": "This version of code is the same as the previous version, except:\nThe sub-tasks (e.g. blink) are coded as objects (classes). This brings all of the bits and pieces (variables tracking state and operations) into a single structure (a class).\nWhen used correctly, you can realise significant benefits in using Object Oriented (OO) techniques.\nNote how the variables (or members) defined in the struct in the previous program have been brought together into the BlinkTask class as private fields. This class encapsulates both the function (turn on or of the LED) and the relevant data into a single block of code.\nWe can also see inheritence and abstraction. Inheritence is seen where a task (e.g. blink an LED) leverages the capabilities of the TimedTask.\nAbstraction is seen in the TimedTask class. The TimedTask class knows that at some point it will need to execute whatever the function might be (e.g. blink an LED, increment the chaser, check the status of a button etc). But it does not know, and very importantly nor does it care, what that function is. So, the TimedTask defines an abstract method (execute). This is what TimedTask will call at the appropriate time. It is the responsibility of someone else (e.g. BlinkTask) to provide the necessary details of what to do (e.g. turn an LED on or off). So when the TimedTask calls the execute method, it will actually invoke the execute method in the class that was actually created (e.g. BlinkTask, or ButtonTask).\nThere is one TimedTask for:\neach LED (i.e. One BlinkTask for each LED = 8 BlinkTasks)\neach push button (i.e. one ButtonTask for the one button we have).\nthe chaser (ChaserTask - we only have one of these as we only want to execute one of these at any one time)\nShould we decide to have two Chaser Tasks (maybe one chasing the first four LED's at one rate and another chasing the second four LED's at a different rate, or maybe one chasing the odd LED's and the other chasing the even LED's again at different rates), then we would need two chaser tasks. We aren't doing that, so we only need on Chaser task. Should anyone try to implement two chasers, I'd be keen to hear about it (and see the video).\nOO pundits will claim that using OO techniques will reduce complexity and volume of code. Many will also claim the program runs more efficiently. I must admit I tend to agree with those assertions. Although I have no data on the last \"more efficiently\" point. In this example, the number of lines of code was reduced slightly (about 10%), but I also added several new functions (refer to the comments in the code for a list) while attaining the reduction in code lines.\nAn example of this can be seen in the loop functions of this and the previous example. Because each of the different subtask types inherit capability from the TimedTask class, I can put all of my subtasks into an array (taskList). This means, that I only need one statement to record elapsed time against each and every different type of task. Compare this to the non Object Oriented version where there are individual if statements for each type of class (i.e. 3 seperate code blocks) to determine if a task is due to be invoked.\nAdditionally, not only are there less code blocks to be created, I can get away without defining multiple variables (or the struct) to track elapsed time. All of this is done within the properties defined in the TimedTask class.\nThere are some additional benefits to using object oriented techniques that are a bit less subtle. For example:\ndebugging task execution related issues - I only need to do it once.\nSub task logic is \"standalone\" - consider the BlinkTask. All it needs to worry about is turning an LED on or off. Something else, i.e. the TimedTask, will invoke it at the right time. There isn't any need to intermingle scheduling related code into the sub task. This makes it easier to see what is going on - and as just mentioned easier to debug when something doesn't work.\nIn short, there are considerable advantages when using OO techniques, even in a simple program like this.\nWarning: this version of the code uses pointers - specifically pointers to instantiated objects (classes) - this translates to pointers to code. This is not a symptom of OO, this is a problem of not being careful enough with pointers. If, like I did, you screw up your pointers, it is easy to execute random code. Executing random code will produce, i guess, random results. Random results, in this case, means anything can happen such as the Arduino will hang, weird characters appear on the Serial monitor and if you are lucky (or unlucky) enough corrupt your Arduino's boot loader. If this last thing happens to you, you can recover it by following the instructions here: Arduino as an ISP you will need another (working) Arduino to recover your toasted Arduino.\nHere is the code (it's pointers have been debugged, so I expect you won't have any problems if you use it as is):\n/******************************************************************************\n * Cooperative Multitasking\n *   06 - Multitasking trace and blink with OO\n * \n * This is the sixth in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * The enhancement on this occassion is to use Object Oriented concepts to make\n * the program simpler.\n * \n * This program (sketch) shows how to multitask a few different tasks using \"cooperative\n * multitasking\". The tasks that are being multitasked include:\n * - Monitoring a switch / button press\n * - Executing an LED trace pattern\n * - Randomly blinking multiple LEDs.\n *   The blink task is actually 1 task per LED being blinked. So for 8 LED's, it\n *   is 8 sub tasks.\n * \n * The big differences between the previous multitasking example and this one include:\n * - less lines of code (about 30 less ~ 9%).\n * - More functionality including:\n *    - named tasks\n *    - disable / enable task support\n *    - bespoke code required to manage timers for the individual types of tasks is\n *      encapsulated into an abstract class extended by the 3 task types.\n * - encapsulation of the context of a task within the specific task's class.\n * - support for a \"do not change\" the interval between subtask executions return value.\n * - ability to easily add more Task types to support additional animations.\n * - (hopefully) easier to debug and follow what is going on.\n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {6, 7, 8, 9, 10, 11, 12, 13};\n#define LED_COUNT     (sizeof (ledPins) / sizeof(ledPins[0]))\n// Context information for sub-tasks\nunsigned long timePrev = 0;\n// Define constants (as opposed to a boolean) to define which mode we are operating in.\n// To add a new MODE, simply extend the list of constants. Make sure that \"MODE_CNT\" is\n// one more than the highest task ID.\n#define BLINK_MODE      0\n#define CHASER_MODE     1\n#define MODE_CNT        2\nboolean mode = BLINK_MODE;\n/************************************************\n * Class TimedTask.\n * \n * An abstract (incomplete) class that manages the scheduling of sub tasks.\n * \n * This class tracks the elapsed amount of time on behalf of it's subclasses.\n * When the alotted time has passed, the \"execute\" method will be invoked to\n * allow the task to do whatever it needs to do.\n * NB: This TimedTask class would ideally be \"factorised\" out into a library.\n *     If we did this, then the entire functionality could be accessed by a single\n *     line of code (as opposed to the 70 odd lines here. The single line of code\n *     would be something like: #include .\n */\nclass TimedTask {\n  public:\n    // Constructor - capture the time that has to pass until the task needs to be invoked.\n    TimedTask(unsigned long nextEventTime) {\n      this->nextEventTime = nextEventTime;\n    }\n    // Set the next event time.\n    void setNextEventTime(unsigned long nextEventTime) {\n      this->nextEventTime = nextEventTime;\n    }\n    // Abstract methods which must be implemented (defined) in a subclass.\n    virtual unsigned long execute();        // Execute the task.\n    virtual String getName();               // Retrieve the name of the task.\n    virtual void disableTask();             // Invoked when this task is being disabled.\n    virtual void enableTask();              // Invoked when this task is being enabled.\n    // Enable this task.\n    void enable() {\n      enabled = true;\n      timeSinceLastEvent = 0;               // Reset the elapsed time counter.\n      enableTask();                         // Notify the subclass that the task has been enabled.\n    }\n    // disable this task.\n    void disable() {\n      enabled = false;\n      disableTask();                        // Notify the subclass that the task has been disabled.\n    }\n    // Return the enabled/disabled state of the task.\n    boolean isEnabled() {\n      return enabled;\n    }\n    // Record the fact that time has passed.\n    void recordTime(unsigned long delta) {\n      timeSinceLastEvent += delta;          // Record the time and check if this task is due to be\n                                            // executed. NB: the task is only executed if it is enabled.\n      if (timeSinceLastEvent >= nextEventTime && enabled) {\n//        Serial.print (\"Executing task: \");\n//        Serial.println(getName());\n        unsigned long nev = execute();      // Notify the subclass to do it's thing.\n        if (nev > 0) {                      // Record the next event time if it is non zero.\n          nextEventTime = nev;\n        }\n        timeSinceLastEvent = 0;             // Reset the time counter.\n      }\n    }\n  private:\n    unsigned long nextEventTime;            // Time that must pass before we invoke the subtask.\n    unsigned long timeSinceLastEvent = 0;   // The time has passed since the last invocation of the subtask.\n    boolean enabled = true;\n};\n/************************************************\n * Class BlinkTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that blinks a single LED.\n * \n * This class toggles the state of the LED when it is invoked.\n */\nclass BlinkTask : public TimedTask {\n  public:\n      // Constructor needs to know which pin the LED is connected to.\n    BlinkTask(int ledPin)\n      : TimedTask(0){\n      pinMode(ledPin, OUTPUT);          // Initialise the PIN as output.\n      digitalWrite(ledPin, HIGH);       // Turn the LED off.\n      this->ledPin = ledPin;            // track the pin.\n      setNextEventTime(offTime);        // set the time to the next invocation.\n      outputDetails();                  // print the details of this BlinkTask.\n      taskName.reserve(15);\n      taskName = \"blink \";\n      taskName += ledPin;\n    }\n    // Execute the Blink Task\n    // This simply toggles the current state of the LED and returns the period\n    // of time that must pass before the next invocation.\n    unsigned long execute () {\n      ledOn = !ledOn;                   // Toggle the LED on/off flag.\n//      Serial.print(\"Turning LED \");\n//      Serial.println(ledOn ? \"on\" : \"off\");\n      digitalWrite(ledPin, ledOn ? LOW : HIGH);   // Set the LED state.\n      return ledOn ? onTime : offTime;  // return the next delay time.\n    }\n    // Retrieve the name of the task as \"Blink \" + the led's Digital Pin number.\n    String getName() {\n      return taskName;\n    }\n    // disable the blink task\n    void disableTask() {\n      digitalWrite(ledPin, HIGH);       // Turn the LED off.\n    }\n    // enable the blink task - nothing to do here.\n    void enableTask() {\n      onTime = randomInterval();      // The time the led will be on (ms)\n      offTime = randomInterval();     // The time the led will be off (ms)\n      setNextEventTime(offTime);\n      digitalWrite(ledPin, HIGH);\n      Serial.print(\"Enabling: \");\n      outputDetails();\n    }\n    // print the details of this blink task.\n    void outputDetails() {\n      Serial.print(\"Blink task pin: \");\n      Serial.print(ledPin);\n      Serial.print(\", onTime: \");\n      Serial.print(onTime);\n      Serial.print(\", offTime: \");\n      Serial.println(offTime);\n    }\n  private:\n    unsigned long randomInterval() {\n      return 500 + random(1500);\n    }\n    unsigned long onTime = randomInterval();      // The time the led will be on (ms)\n    unsigned long offTime = randomInterval();     // The time the led will be off (ms)\n    boolean ledOn = false;                        // Initially the LED will be off.\n    int ledPin;                                   // The digital I/O pin for the LED.\n    String taskName;                              // the name of the task\n};\n/************************************************\n * Class ChaserTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that execute a LED chaser.\n * \n * This causes each LED in a chain to turn on. The task moves the LED up the chain\n * then back down again.\n */\nclass ChaserTask : public TimedTask {\n  public:\n    // constructor requires the delay time between updates to the chaser display.\n    ChaserTask (unsigned long nextEventTime)\n      : TimedTask(nextEventTime) {\n        \n      }\n    // Move the LED up (or down) one step.\n    unsigned long execute() {\n      if (chaseUp) {              // If going up, turn of the current LED.\n        digitalWrite(ledPins[chaserIndex], HIGH);\n        chaserIndex += 1;         // point to the next one up the line and turn it on.\n        digitalWrite(ledPins[chaserIndex], LOW);\n                                  // Go up as long as the index is < the\n                                  // Highest index in the LEDpins array.\n        chaseUp = chaserIndex < LED_COUNT - 1;\n      } else {                    // Going down. turn off the current LED.\n        digitalWrite(ledPins[chaserIndex], HIGH);\n        chaserIndex -= 1;         // point to the next one down the line and turn it on.\n        digitalWrite(ledPins[chaserIndex], LOW);\n                                  // Continue going down until we reach\n                                  // the beginning of the LEDpins array.\n        chaseUp = chaserIndex <= 0;\n      }\n      return 0;                   // do not change the scheduling interval.\n    }\n    // Enable the chaser task.\n    // Reset to the \"beginning\" state.\n    void enableTask() {\n      chaserIndex = 0;            // Resume from the beginning;\n      chaseUp = true;             // Go up.\n    }\n    // disable the chaser task.\n    // Turn off the current LED\n    void disableTask() {\n                                  // Turn the current LED OFF.\n      digitalWrite(ledPins[chaserIndex], HIGH);\n    }\n    // Return the name of the task as \"chaser\".\n    String getName() {\n      return \"Chaser\";\n    }\n  private:\n    boolean chaseUp = true;       // direction of travel\n    int chaserIndex = 0;          // currently illuminated LED.\n};\n/************************************************\n * Class ButtonTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that detects a button press.\n * \n * Ancillary methods may be invoked to ascertain if the button has been pressed or not.\n */\nclass ButtonTask : public TimedTask {\n  public:\n    // Constructor:\n    //   button Pin - the pin the button to be monitored is connected to.\n    //   nextEventTime - the time delay between checks to see if the button has been pressed.\n    ButtonTask(int buttonPin, unsigned long nextEventTime)\n      : TimedTask(nextEventTime) {\n        pinMode(buttonPin, INPUT);\n        this->buttonPin = buttonPin;\n        taskName.reserve(15);\n        taskName = \"****  button \";\n        taskName += buttonPin;\n      }\n    // Checks to see if the button has been pressed.\n    // If it has been pressed, it will debounce the press and\n    // set appropriate indicators recording the press when the button is released.\n    unsigned long execute() {\n                                  // Read the current state of the button.\n      int currButtonState = digitalRead(buttonPin);\n      if (prevButtonState == LOW) {\n        if (currButtonState == HIGH) {    // Button was just pressed.\n          debounceCnt = 0;                // Start the debounce count.\n          Serial.println(\"Button pressed\");\n        }\n      } else {                    // Previously the button has tracked as \"pressed\".\n        if (currButtonState == HIGH) {    // Is it still pressed?\n          debounceCnt += 1;               // Count the number of intervals that it has remained pressed\n        } else {                  // Button has been released.\n          Serial.print (\"Button released. Debounce Cnt: \");\n          Serial.println(debounceCnt);\n                                  // Set the button pressed flag to true, if the button has remained pressed\n                                  // for the required amount of time.\n          buttonPressedInd = (debounceCnt > debounceThreshold);\n          debounceCnt = 0;        // reset the debounce count.\n        }\n      }\n      prevButtonState = currButtonState;    // Remember this button state for next time.\n      return currButtonState == HIGH ? 1 : 10;  // Check every 1 ms while button is pressed,\n                                            // otherwise just check once every 10 ms.\n    }\n    // Retrieve the task name as \"button \" + digital pin I/O number.\n    String getName() {\n      return taskName;\n    }\n    // Enable the task - nothing special to do.\n    void enableTask() {\n    }\n    // disable the task - nothing special to do.\n    void disableTask() {\n    }\n    // Ancilliary method to query the state of the button.\n    boolean isButtonPressed() {\n      return buttonPressedInd;\n    }\n    // Ancilliary method to query the state of the button\n    // and reset it's state to false (not pressed)\n    boolean isButtonPressedAndReset() {\n      boolean result = buttonPressedInd;\n      buttonPressedInd = false;\n      return result;\n    }\n    // The number of times (ms) that the button must remain pressed to\n    // count as an actual press. Any \"presses\" less than this duration\n    // are ignored as noise.\n    const int debounceThreshold = 10;\n    \n  private:\n    int buttonPin;                // The digital I/O pin to which the button is connected.\n    int debounceCnt = 0;          // How many contiguous \"pressed\" readings have we observed?\n    int prevButtonState = LOW;    // State of the button - last time we checked.\n    boolean buttonPressedInd = false;\n    String taskName;              // the name of this task.\n};\n/*****************************************************\n * The task list.\n * \n * Establish an array of tasks. All of the tasks go into this array irrespective of their\n * specific type.\n * We seperately track the button task and chaser task, although not strictly necessary, in\n * individual variables (as well as in the array) so we can more cleanly interact with them.\n * \n * The array is an array of pointers to TimedTasks. This is to allow any class that extends TimedTask\n * to be placed into the array. The draw back is that technically we do not know what the task types are,\n * so we can only directly invoke the methods in TimedTask. Fortunately, through inheritence and abstraction,\n * the TimedTask can invoke the specific methods that are defined as abstract to obtain the specific tasks\n * function (i.e. the TimedTask can activate/call the specific task's individual \"execute\" method to get it to\n * do whatever it does).\n */\n// Define how many tasks there are in total.\n#define TASK_COUNT (sizeof taskList / sizeof taskList[0])\nTimedTask *taskList[LED_COUNT + 2];\nButtonTask *buttonTask;\nChaserTask *chaserTask;\n// Create as many blink tasks as defined in the ledPins array. There will be one\n// Blink Task for each defined pin.\n// This is called from setup and when the button is pressed (activating Blink Mode)\nvoid resetBlinkers(boolean create) {\n  for (int i = 0; i < LED_COUNT; i++) {\n    if (create) {\n      taskList[i] = new BlinkTask(ledPins[i]);\n    } else {\n      taskList[i]->enable();              // Enable the blink task and recalculate its operating parameters.\n    }\n  }\n}\n// disable all of the blinker tasks and prevent them from executing.\n// This is called when the button is pressed (disabling Blink Mode).\nvoid disableBlinkers() {\n  for (int i = 0; i < LED_COUNT; i++) {\n    taskList[i]->disable();\n  }\n}\n/***********************************************\n * Setup.\n * Initialise the serial monitor\n * Create all of the tasks.\n * Capture the starting time.\n */\nvoid setup() {\n  Serial.begin (9600);\n  \n  int cnt = 0;                    // Initialise the Serial port - but don't wait too long.\n  while (!Serial && cnt < 100) {\n    cnt++;\n    delay(1);\n  }\n  Serial.println(\"Initialising\");\n  resetBlinkers(true);               // Create the blink tasks.\n  chaserTask = new ChaserTask(250); // Create the chaser task\n  taskList[LED_COUNT] = chaserTask; // add it to the list of all tasks.\n  chaserTask->disable();            // initially, disable the chaser.\n  \n  buttonTask = new ButtonTask(2, 10);   // Create the button task.\n  taskList[LED_COUNT + 1] = buttonTask; // add it to the list of all tasks.\n  Serial.println(\"Ready\");\n  timePrev = millis();              // Initialise the \"previous time\" value to the current time.\n}\n/**********************\n * Loop\n * \n */\nvoid loop() {\n  unsigned long timeNow = millis();   // Obtain the \"current time\".\n  if (timeNow != timePrev) {          // Has time moved on?\n    unsigned long timeDelta = timeNow - timePrev;\n    timePrev = timeNow;               // Work out how much time has passed and capture \"now\" for next time.\n                                      // For each and every task (8 Blink + 1 chaser + 1 button monitor)\n                                      // record the fact that time has passed.\n                                      // This will invoke the individual tasks' \"execute\" method if it is due\n                                      // to be invoked.\n    for (int i = 0; i < TASK_COUNT; i++) {\n      taskList[i]->recordTime(timeDelta);\n    }\n                                      // Check if the button has been pushed.\n    if (buttonTask->isButtonPressedAndReset()) {\n      mode = (mode + 1) % MODE_CNT;   // Move on to the next mode.\n      switch(mode) {                  // Turn on the new mode (and turn off the previous mode).\n        case BLINK_MODE:\n          Serial.println(\"Switching to Blink Mode\");\n          resetBlinkers(false);         // When moving into BLINK_MODE, generate new blinkers (with new random on/off times)\n          chaserTask->disable();      // disable the chaser.\n          break;\n        case CHASER_MODE:\n          Serial.println(\"Switching to Chaser Mode\");\n          disableBlinkers();          // When moving into CHASER_MODE, disable the blinkers\n          chaserTask->enable();       // enable the chaser.\n          break;\n        default:                      // Unexpected mode??? - should never happen\n          Serial.print(\"Warning: Unexepected mode: \");\n          Serial.print(mode);\n          Serial.println(\" - resetting to blink mode.\");\n          mode = BLINK_MODE;          // If it does, revert to BLINK mode.\n          resetBlinkers(false);\n          chaserTask->disable();\n          break;\n      }\n    }\n  }\n}", "step_imgs": [], "step_title": "Step 9: Object Oriented Chase and Blink"}, {"step": 10, "steps_text": "So, this is the moment you might have been waiting for: The Arduino Mega Blinky LED Extravaganza!\nBelow is the code for the Mega Blinky LED Extravaganza => independently, simultaneously blinking 32 LED's at random rates. Note you will need an Arduino Mega to run this. Why? Because it uses 32 I/O pins.\nThe only differences between this and the previous example are:\nPushing the button just changes the blink rate of the LED's (there is no Chaser mode)\nIt simultaneously blinks 32 LED's at random\nIt looks prettier (especially in the dark)\nThe key takeaway from this example, is how easy it is to add more functionality through cooperative multitasking. Apart from removing the chaser and \"mode switch\" logic attached to the button press, the only substantive modification was to change the ledPins array definition to list 32 pins on the Arduino Mega.\nHooking up the LEDs\nYou can layout the LED's anyway you like. I elected to lay them out in an 8 x 2 rectangle format. The following instructions explain how I did it (it was a little bit tedious - but worth it IMHO).\nBasically the layout is a series of eight blocks of LED's. Each block consists of 4 LED's in a 2 x 2 arrangement. I've outlined each block in the photo. The photo shows 6 complete blocks and two missing blocks.\nEach block of 4 LED's occupies five (5) rails on the breadboard. There is one central rail that brings power (5V) to the 4 LED's in that block. This is shown by the red wires at the center of each block.\nThe other 4 rails in each block are the cathodes of LED's (one per LED) and are used to connect the 470 ohm current limiting resistors. Thus each block (from left to right) consists of 2 x 470 ohm resistors, the power connector (red wire) followed by 2 x 470 ohm resistors. This is repeated four (or more) times along the breadboard. Finally, the 4 blocks on one line of the breadboard is replicated on the other side of the divider.\nTo layout the LED's on the board in a matrix, start by inserting the resistors. As mentioned, there should be 2 resistors followed by the 5V connection followed by 2 more resistors.\nNext, insert the LED's starting with the one closest to the resistor. As shown by the lines in the photo, the Anode of each of the LED's plugs into the 5 Volt rail. The cathode of the first LED connects to the rail closest to the 5 Volt rail this is shown by the blue lines. The second LED is the same, except that it connects to the rail closest to the 5 Volt rail but on the other side. Connect the remaining two LED's but reach each LED over the rail closest to the 5V line to connect to the outer 2 rails in the block.\nI used the above connection arrangement to try to minimise the risk of the LED or resistor legs accidentally touching one another.\nOnce you've inserted all of the resistors followed by the LED's, connect the other end of each resistor to the Arduino Mega using jump wires. I used a sequence of colours to try to ensure that I connected them in order - but it doesn't really matter what order you connect them.\nConnect each of the jump wires to one of the Digital I/O pins numbered 22 through 53 on the Mega.\nThe photos show how the completed LED matrix is wired and how the jumper wires connect to the base of the Arduino Mega.\nHooking up the button\nThe connections to the button are exactly the same as the earlier project. Refer to the appropriate step above for details and diagrams. Basically the connections are:\nConnect one pin of the button to 5V.\nConnect the diagonally opposite pin to a 10K ohm resistor.\nConnect the other end of the 10K ohm resistor to GND.\nConnect the junction of the 10K ohm resistor and the button to pin 2 on the Arduino Mega.\n/******************************************************************************\n * Cooperative Multitasking\n *   07 - Mega Multitasking trace and blink with OO\n * \n * This is the seventh in a series of programs to illustrate the benefits of\n * a simple multitasking mechanism for Arduino.\n * The enhancement is to simultaneously blink 32 LEDs.\n * \n * This version also removes the chaser mode. Pressing the button, resets the\n * LED blink rates.\n * \n * The key takeaway from this project is how easy it is to add as many new\n * tasks as we need. In this case, simply by adding entries to the ledPins\n * array.\n */\n// Define the pin for the input button\n#define BUTTON_PIN 2\n// Define the pins to be used in tracing mode.\nunsigned int ledPins [] = {\n          22, 23, 24, 25, 26, 27, 28, 29,\n          30, 31, 32, 33, 34, 35, 36, 37,\n          38, 39, 40, 41, 42, 43, 44, 45,\n          46, 47, 48, 49, 50, 51, 52, 53};\n#define LED_COUNT     (sizeof (ledPins) / sizeof(ledPins[0]))\n// Context information for sub-tasks\nunsigned long timePrev = 0;\n// Comment or uncomment this next line to disable or enable debugging\n// messages.\n// Note: debug messages can take a long time to output and will\n// interfere with the mulitasking.\n//#define DEBUG\n/************************************************\n * Class TimedTask.\n * \n * An abstract (incomplete) class that manages the scheduling of sub tasks.\n * \n * This class tracks the elapsed amount of time on behalf of it's subclasses.\n * When the alotted time has passed, the \"execute\" method will be invoked to\n * allow the task to do whatever it needs to do.\n * NB: This TimedTask class would ideally be \"factorised\" out into a library.\n *     If we did this, then the entire functionality could be accessed by a single\n *     line of code (as opposed to the 70 odd lines here. The single line of code\n *     would be something like: #include .\n */\nclass TimedTask {\n  public:\n    // Constructor - capture the time that has to pass until the task needs to be invoked.\n    TimedTask(unsigned long nextEventTime) {\n      this->nextEventTime = nextEventTime;\n    }\n    // Set the next event time.\n    void setNextEventTime(unsigned long nextEventTime) {\n      this->nextEventTime = nextEventTime;\n    }\n    // Abstract methods which must be implemented (defined) in a subclass.\n    virtual unsigned long execute();        // Execute the task.\n    virtual String getName();               // Retrieve the name of the task.\n    virtual void disableTask();             // Invoked when this task is being disabled.\n    virtual void enableTask();              // Invoked when this task is being enabled.\n    // Enable this task.\n    void enable() {\n      enabled = true;\n      timeSinceLastEvent = 0;               // Reset the elapsed time counter.\n      enableTask();                         // Notify the subclass that the task has been enabled.\n    }\n    // disable this task.\n    void disable() {\n      enabled = false;\n      disableTask();                        // Notify the subclass that the task has been disabled.\n    }\n    // Return the enabled/disabled state of the task.\n    boolean isEnabled() {\n      return enabled;\n    }\n    // Record the fact that time has passed.\n    void recordTime(unsigned long delta) {\n      timeSinceLastEvent += delta;          // Record the time and check if this task is due to be\n                                            // executed. NB: the task is only executed if it is enabled.\n      if (timeSinceLastEvent >= nextEventTime && enabled) {\n#ifdef DEBUG\n//        Serial.print (\"Executing task: \");\n//        Serial.println(getName());\n#endif\n        unsigned long nev = execute();      // Notify the subclass to do it's thing.\n        if (nev > 0) {                      // Record the next event time if it is non zero.\n          nextEventTime = nev;\n        }\n        timeSinceLastEvent = 0;             // Reset the time counter.\n      }\n    }\n  private:\n    unsigned long nextEventTime;            // Time that must pass before we invoke the subtask.\n    unsigned long timeSinceLastEvent = 0;   // The time has passed since the last invocation of the subtask.\n    boolean enabled = true;\n};\n/************************************************\n * Class BlinkTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that blinks a single LED.\n * \n * This class toggles the state of the LED when it is invoked.\n */\nclass BlinkTask : public TimedTask {\n  public:\n      // Constructor needs to know which pin the LED is connected to.\n    BlinkTask(int ledPin)\n      : TimedTask(0){\n      pinMode(ledPin, OUTPUT);          // Initialise the PIN as output.\n      digitalWrite(ledPin, HIGH);       // Turn the LED off.\n      this->ledPin = ledPin;            // track the pin.\n      setNextEventTime(offTime);        // set the time to the next invocation.\n      taskName.reserve(15);\n      taskName = \"blink \";\n      taskName += ledPin;\n#ifdef DEBUG\n      outputDetails();                  // print the details of this BlinkTask.\n#endif\n    }\n    // Execute the Blink Task\n    // This simply toggles the current state of the LED and returns the period\n    // of time that must pass before the next invocation.\n    unsigned long execute () {\n      ledOn = !ledOn;                   // Toggle the LED on/off flag.\n//      Serial.print(\"Turning LED \");\n//      Serial.println(ledOn ? \"on\" : \"off\");\n      digitalWrite(ledPin, ledOn ? LOW : HIGH);   // Set the LED state.\n      return ledOn ? onTime : offTime;  // return the next delay time.\n    }\n    // Retrieve the name of the task as \"Blink \" + the led's Digital Pin number.\n    String getName() {\n      return taskName;\n    }\n    // disable the blink task\n    void disableTask() {\n      digitalWrite(ledPin, HIGH);       // Turn the LED off.\n    }\n    // enable the blink task - nothing to do here.\n    void enableTask() {\n      onTime = randomInterval();      // The time the led will be on (ms)\n      offTime = randomInterval();     // The time the led will be off (ms)\n      setNextEventTime(offTime);\n      digitalWrite(ledPin, HIGH);\n#ifdef DEBUG\n      Serial.print(\"Enabling: \");\n      outputDetails();\n#endif\n    }\n    // print the details of this blink task.\n    void outputDetails() {\n      Serial.print(\"Blink task pin: \");\n      Serial.print(ledPin);\n      Serial.print(\", onTime: \");\n      Serial.print(onTime);\n      Serial.print(\", offTime: \");\n      Serial.println(offTime);\n    }\n  private:\n    unsigned long randomInterval() {\n      return 500 + random(1500);\n    }\n    unsigned long onTime = randomInterval();      // The time the led will be on (ms)\n    unsigned long offTime = randomInterval();     // The time the led will be off (ms)\n    boolean ledOn = false;                        // Initially the LED will be off.\n    int ledPin;                                   // The digital I/O pin for the LED.\n    String taskName;                              // the name of the task\n};\n/************************************************\n * Class ButtonTask.\n *    Extends TimedTask.\n * \n * An implementation (i.e. complete) of a TimedTask that detects a button press.\n * \n * Ancillary methods may be invoked to ascertain if the button has been pressed or not.\n */\nclass ButtonTask : public TimedTask {\n  public:\n    // Constructor:\n    //   button Pin - the pin the button to be monitored is connected to.\n    //   nextEventTime - the time delay between checks to see if the button has been pressed.\n    ButtonTask(int buttonPin, unsigned long nextEventTime)\n      : TimedTask(nextEventTime) {\n        pinMode(buttonPin, INPUT);\n        this->buttonPin = buttonPin;\n        taskName.reserve(15);\n        taskName = \"****  button \";\n        taskName += buttonPin;\n      }\n    // Checks to see if the button has been pressed.\n    // If it has been pressed, it will debounce the press and\n    // set appropriate indicators recording the press when the button is released.\n    unsigned long execute() {\n                                  // Read the current state of the button.\n      int currButtonState = digitalRead(buttonPin);\n      if (prevButtonState == LOW) {\n        if (currButtonState == HIGH) {    // Button was just pressed.\n          debounceCnt = 0;                // Start the debounce count.\n          Serial.println(\"Button pressed\");\n        }\n      } else {                    // Previously the button has tracked as \"pressed\".\n        if (currButtonState == HIGH) {    // Is it still pressed?\n          debounceCnt += 1;               // Count the number of intervals that it has remained pressed\n        } else {                  // Button has been released.\n          Serial.print (\"Button released. Debounce Cnt: \");\n          Serial.println(debounceCnt);\n                                  // Set the button pressed flag to true, if the button has remained pressed\n                                  // for the required amount of time.\n          buttonPressedInd = (debounceCnt > debounceThreshold);\n          debounceCnt = 0;        // reset the debounce count.\n        }\n      }\n      prevButtonState = currButtonState;    // Remember this button state for next time.\n      return currButtonState == HIGH ? 1 : 10;  // Check every 1 ms while button is pressed,\n                                            // otherwise just check once every 10 ms.\n    }\n    // Retrieve the task name as \"button \" + digital pin I/O number.\n    String getName() {\n      return taskName;\n    }\n    // Enable the task - nothing special to do.\n    void enableTask() {\n    }\n    // disable the task - nothing special to do.\n    void disableTask() {\n    }\n    // Ancilliary method to query the state of the button.\n    boolean isButtonPressed() {\n      return buttonPressedInd;\n    }\n    // Ancilliary method to query the state of the button\n    // and reset it's state to false (not pressed)\n    boolean isButtonPressedAndReset() {\n      boolean result = buttonPressedInd;\n      buttonPressedInd = false;\n      return result;\n    }\n    // The number of times (ms) that the button must remain pressed to\n    // count as an actual press. Any \"presses\" less than this duration\n    // are ignored as noise.\n    const int debounceThreshold = 10;\n    \n  private:\n    int buttonPin;                // The digital I/O pin to which the button is connected.\n    int debounceCnt = 0;          // How many contiguous \"pressed\" readings have we observed?\n    int prevButtonState = LOW;    // State of the button - last time we checked.\n    boolean buttonPressedInd = false;\n    String taskName;              // the name of this task.\n};\n/*****************************************************\n * The task list.\n * \n * Establish an array of tasks. All of the tasks go into this array irrespective of their\n * specific type.\n * We seperately track the button task and chaser task, although not strictly necessary, in\n * individual variables (as well as in the array) so we can more cleanly interact with them.\n * \n * The array is an array of pointers to TimedTasks. This is to allow any class that extends TimedTask\n * to be placed into the array. The draw back is that technically we do not know what the task types are,\n * so we can only directly invoke the methods in TimedTask. Fortunately, through inheritence and abstraction,\n * the TimedTask can invoke the specific methods that are defined as abstract to obtain the specific tasks\n * function (i.e. the TimedTask can activate/call the specific task's individual \"execute\" method to get it to\n * do whatever it does).\n */\n// Define how many tasks there are in total.\n#define TASK_COUNT (sizeof taskList / sizeof taskList[0])\nTimedTask *taskList[LED_COUNT + 1];     // Note that the number of tasks is the number of LED's plus one\n                                        // as we do not need to have space for the (non-existant) chaser task.\nButtonTask *buttonTask;\n// Create as many blink tasks as defined in the ledPins array. There will be one\n// Blink Task for each defined pin.\n// This is called from setup and when the button is pressed (activating Blink Mode)\nvoid resetBlinkers(boolean create) {\n  for (int i = 0; i < LED_COUNT; i++) {\n    if (create) {\n      taskList[i] = new BlinkTask(ledPins[i]);\n    } else {\n      taskList[i]->enable();            // Our enable implementation, resets the operating parameters.\n    }\n  }\n}\n/***********************************************\n * Setup.\n * Initialise the serial monitor\n * Create all of the tasks.\n * Capture the starting time.\n */\nvoid setup() {\n  Serial.begin (9600);\n  \n  int cnt = 0;                    // Initialise the Serial port - but don't wait too long.\n  while (!Serial && cnt < 100) {\n    cnt++;\n    delay(1);\n  }\n  Serial.println(\"Initialising\");\n  resetBlinkers(true);               // Create the blink tasks.\n  \n  buttonTask = new ButtonTask(2, 10);   // Create the button task.\n  taskList[LED_COUNT] = buttonTask; // add it to the list of all tasks.\n  Serial.println(\"Ready\");\n  timePrev = millis();              // Initialise the \"previous time\" value to the current time.\n}\n/**********************\n * Loop\n * \n */\nvoid loop() {\n  unsigned long timeNow = millis();   // Obtain the \"current time\".\n  if (timeNow != timePrev) {          // Has time moved on?\n    unsigned long timeDelta = timeNow - timePrev;\n    timePrev = timeNow;               // Work out how much time has passed and capture \"now\" for next time.\n                                      // For each and every task (8 Blink + 1 chaser + 1 button monitor)\n                                      // record the fact that time has passed.\n                                      // This will invoke the individual tasks' \"execute\" method if it is due\n                                      // to be invoked.\n    for (int i = 0; i < TASK_COUNT; i++) {\n      taskList[i]->recordTime(timeDelta);\n    }\n                                      // Check if the button has been pushed.\n    if (buttonTask->isButtonPressedAndReset()) {\n       resetBlinkers(false);          // When moving into BLINK_MODE, generate new blinkers (with new random on/off times)\n    }\n#ifdef DEBUG\n    timePrev = millis();              // Reset the timer when debugging to allow for the fact\n                                      // that it takes a heck of a long time to output the debug messages.\n                                      // If you press the button when a large proportion of the LED's are lit,\n                                      // you can actually see the slow progress of the program as the LED's are\n                                      // turned off as each one's duty cycle is reset when the DEBUG messages\n                                      // are enabled.\n                                      // Compare this to the \"instaneous\" turning off of the LED's when\n                                      // the button is pressed with DEBUG messages disabled.\n#endif\n  }\n}", "step_imgs": ["https://cdn.instructables.com/FD0/KKYI/JT2SN6UC/FD0KKYIJT2SN6UC.LARGE.jpg", "https://cdn.instructables.com/FUX/DKPR/JT2SN7DY/FUXDKPRJT2SN7DY.LARGE.jpg", "https://cdn.instructables.com/FRN/145T/JT2SN7DZ/FRN145TJT2SN7DZ.LARGE.jpg"], "step_title": "Step 10: Mega Blinky LED Extravaganza"}], "channel": ""}]